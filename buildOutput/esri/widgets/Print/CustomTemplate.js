// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../kernel","../../core/Error","../../core/JSONSupport","../../core/MD5","../../core/promiseUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/enumeration","../../core/accessorSupport/decorators/subclass","../../portal/PortalItem","../../rest/support/fileFormat","../../rest/support/layoutTemplate","./utils"],function(t,o,e,r,a,s,n,p,i,l,u,d,c,y,h,m){"use strict";let f=class extends r.JSONSupport{constructor(t){super(t),this.description=null,this.format=null,this.state="not-loaded",this.label=null,this.layoutInfoTaskUrl=null,this.layout=null,this.layoutItem=null,this.layoutOptions=null,this.layoutTemplateInfo=null,this.type=null}get id(){return this.layoutItem?.id??`${this.layout}-${a.createMD5Hash(JSON.stringify(this.toJSON()))}`}get mapSurroundInfoOptions(){const t=this.layoutTemplateInfo?.layoutOptions?.mapSurroundInfos;if(!t)return null;const o={northArrow:[],scaleBar:[],legend:[]};for(const e of t)switch(e.type){case"CIMMarkerNorthArrow":o.northArrow.push(e);break;case"CIMScaleLine":o.scaleBar.push(e);break;case"CIMGroupElement":e.elements?.some(t=>"CIMScaleLine"===t.type)&&o.scaleBar.push(e);break;case"CIMLegend":o.legend.push(e)}return o}get pageUnits(){return m.valueUnitKebabDict.fromJSON(this.layoutTemplateInfo?.pageUnits?.toLowerCase())}_updateLayoutOptions(t){const o=this.layoutOptions?.legend??t.layoutOptions?.hasLegend,e=this.layoutOptions?.northArrow??(this.mapSurroundInfoOptions?.northArrow.length?this.mapSurroundInfoOptions?.northArrow.some(({visible:t})=>t):void 0),r=this.layoutOptions?.scaleBar??(this.mapSurroundInfoOptions?.scaleBar.length?this.mapSurroundInfoOptions?.scaleBar.some(({visible:t})=>t):void 0);this._set("layoutOptions",{legend:o,northArrow:e,scaleBar:r})}async fetchLayoutItemTemplateInfo(t){const{layoutItem:r}=this;if(r?.id&&!this.layoutTemplateInfo&&"loaded"!==this.state)try{this._set("state","loading");const a=this.layoutInfoTaskUrl;if(!a)throw new e("print:invalid-layout-info-task-url","Can't fetch layout template info",{url:a});"public"!==r.access&&o.id&&await o.id.getCredential(a);const s={Layout_Item_ID:JSON.stringify({id:r.id})},n=(await m.fetchLayoutTemplateInfos(a,s,t))[0];this.setLayoutTemplateInfo(n)}catch(t){this._set("state",s.isAbortError(t)?"not-loaded":"error")}}setLayoutTemplateInfo(t){this._set("layoutTemplateInfo",t),this._updateLayoutOptions(t),this._set("state","loaded")}};return t.__decorate([n.property({json:{write:!0}})],f.prototype,"description",void 0),t.__decorate([u.enumeration(y.formatJsonMap)],f.prototype,"format",void 0),t.__decorate([n.property({readOnly:!0})],f.prototype,"id",null),t.__decorate([n.property({readOnly:!0})],f.prototype,"state",void 0),t.__decorate([n.property({json:{write:!0}})],f.prototype,"label",void 0),t.__decorate([n.property()],f.prototype,"layoutInfoTaskUrl",void 0),t.__decorate([n.property({json:{read:h.fromJSON,write:!0}})],f.prototype,"layout",void 0),t.__decorate([n.property({type:c,json:{write:!0}})],f.prototype,"layoutItem",void 0),t.__decorate([n.property({readOnly:!0,json:{write:!0}})],f.prototype,"layoutOptions",void 0),t.__decorate([n.property({readOnly:!0})],f.prototype,"layoutTemplateInfo",void 0),t.__decorate([n.property({readOnly:!0})],f.prototype,"mapSurroundInfoOptions",null),t.__decorate([n.property({readOnly:!0})],f.prototype,"pageUnits",null),t.__decorate([n.property()],f.prototype,"type",void 0),f=t.__decorate([d.subclass("esri.widgets.Print.CustomTemplate")],f),f});