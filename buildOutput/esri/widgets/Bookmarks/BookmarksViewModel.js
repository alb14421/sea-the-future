// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../Viewpoint","../../core/Collection","../../core/Error","../../core/Evented","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/cast","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../webdoc/support/SlideThumbnail","../../webmap/Bookmark","../support/GoTo"],function(t,e,o,i,a,r,n,s,c,p,l,u,d){"use strict";const k=o.ofType(u),m={width:128,height:128,format:"png"},w={takeScreenshot:!0,captureViewpoint:!0,captureRotation:!0,captureScale:!0,captureTimeExtent:!0},h={time:!0};let v=class extends(d.GoTo(a.EventedAccessor)){constructor(t){super(t),this.capabilities={...h},this.activeBookmark=null,this.view=null}destroy(){this.view=null,this._set("activeBookmark",null)}castCapabilities(t){return{...h,...t}}get bookmarks(){return this.view?.map?.bookmarks??new k}set bookmarks(t){this._overrideIfSome("bookmarks",t)}set defaultCreateOptions(t){this._set("defaultCreateOptions",{...w,...t})}get defaultCreateOptions(){return w}set defaultEditOptions(t){this._set("defaultEditOptions",{...w,...t})}get defaultEditOptions(){return w}get state(){const{view:t}=this;return t&&!t.ready?"loading":"ready"}async createBookmark(t){const{view:e,defaultCreateOptions:o,capabilities:a}=this;if(!e)throw new i("create-bookmark:invalid-view","Cannot create a bookmark without a view.");const{takeScreenshot:r,screenshotSettings:n,captureViewpoint:s,captureRotation:c,captureScale:p,captureTimeExtent:l}={...o,...t},d=r?await this._createThumbnail(n):void 0,k=a.time&&l&&null!=e.timeExtent?e.timeExtent.clone():void 0;return new u({...d&&{thumbnail:d},...l&&{timeExtent:k},...s&&{viewpoint:this._createViewpoint({view:e,captureScale:p,captureRotation:c})}})}async editBookmark(t,e){if(!t)return t;const{view:o,defaultEditOptions:a}=this;if(!o)throw new i("edit-bookmark:invalid-view","Cannot edit a bookmark without a view.");const{takeScreenshot:r,screenshotSettings:n,captureViewpoint:s,captureRotation:c,captureScale:p,captureTimeExtent:l}={...a,...e},u=r?await this._createThumbnail(n):void 0;return u&&(t.thumbnail=u),s&&(t.viewpoint=this._createViewpoint({view:o,captureScale:p,captureRotation:c})),l&&null!=o.timeExtent&&(t.timeExtent=o.timeExtent.clone()),this.emit("bookmark-edit",{bookmark:t}),t}goTo(t){const{capabilities:e,view:o}=this;if(!o)throw new i("go-to:invalid-view","Cannot go to a bookmark without a view");const a=t?.viewpoint;if(!a)throw new i("go-to:invalid-bookmark","Cannot go to a bookmark that does not contain a 'viewpoint'.",{bookmark:t});this._set("activeBookmark",t);const r=this.callGoTo({target:a}),n=t?.timeExtent;return e.time&&n&&(o.timeExtent=n),this.emit("bookmark-select",{bookmark:t}),r.catch(()=>{}).then(()=>this._set("activeBookmark",null)),r}async _createThumbnail(t){const{view:e}=this;if(!e)throw new i("bookmark:invalid-view","Cannot create slide thumbnail without a view");const o=await e.takeScreenshot({...m,...t});return new l.SlideThumbnail({url:o.dataUrl})}_createViewpoint({view:t,captureRotation:o,captureScale:i}){const a=t.viewpoint?.clone();return new e({targetGeometry:t.extent?.clone(),rotation:(o?a?.rotation:null)??0,scale:(i?a?.scale:null)??0})}};return t.__decorate([r.property()],v.prototype,"capabilities",void 0),t.__decorate([n.cast("capabilities")],v.prototype,"castCapabilities",null),t.__decorate([r.property({readOnly:!0})],v.prototype,"activeBookmark",void 0),t.__decorate([r.property({type:k})],v.prototype,"bookmarks",null),t.__decorate([r.property()],v.prototype,"defaultCreateOptions",null),t.__decorate([r.property()],v.prototype,"defaultEditOptions",null),t.__decorate([r.property({readOnly:!0})],v.prototype,"state",null),t.__decorate([r.property()],v.prototype,"view",void 0),v=t.__decorate([p.subclass("esri.widgets.Bookmarks.BookmarksViewModel")],v),v});