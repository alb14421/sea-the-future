// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../core/Accessor","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/cast","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../geometry/projectionUtils","../../geometry/support/spatialReferenceUtils","../../support/basemapEnsureType","../../support/basemapUtils"],function(e,a,t,s,i,r,p,n,o,c,l,d){"use strict";let m=class extends a{constructor(e){super(e),this._basemapCache={},this._loadingProjectionEngine=!1,this.nextBasemap=l.basemapEnsureType("hybrid",this._basemapCache),this.view=null}initialize(){t.watch(()=>this.nextBasemap,e=>{e&&!e.loaded&&e.load().catch(()=>{})},t.initial)}destroy(){this.view=null,l.destroyCache(this._basemapCache),this._basemapCache=null}get _nextBasemapSpatialReferenceTask(){return d.findSpatialReference(this.view,this.nextBasemap)}get _viewSpatialReferenceLocked(){const{view:e}=this;return!e||!("spatialReferenceLocked"in e)||e.spatialReferenceLocked}get activeBasemap(){return l.basemapEnsureType(this.view?.map?.basemap??"topo-vector",this._basemapCache)}castNextBasemap(e){return l.basemapEnsureType(e,this._basemapCache)}get state(){const{view:e}=this;if(!e?.ready)return"disabled";if(this._nextBasemapSpatialReferenceTask.updating)return"disabled";const{spatialReference:a}=this._nextBasemapSpatialReferenceTask;return this._viewSpatialReferenceLocked&&null!=a&&!e.spatialReference.equals(a)?"incompatible-next-basemap":this._loadingProjectionEngine?"loading":"ready"}async toggle(){const{activeBasemap:e,nextBasemap:a,state:s,view:i}=this;if(!i||"disabled"===s||"incompatible-next-basemap"===s)return;const r=this._viewSpatialReferenceLocked;if(!r){if(await t.whenOnce(()=>!this._nextBasemapSpatialReferenceTask.updating),a!==this.nextBasemap||e!==this.activeBasemap)return;const{spatialReference:s}=this._nextBasemapSpatialReferenceTask;if(null==s||c.equals(i.spatialReference,s)||o.isLoaded()||o.canProjectWithoutEngine(i.spatialReference,s)||(this._loadingProjectionEngine=!0,await o.load(),this._loadingProjectionEngine=!1),a!==this.nextBasemap||e!==this.activeBasemap)return}i.map.basemap=a,r||null==this._nextBasemapSpatialReferenceTask.spatialReference||c.equals(i.spatialReference,this._nextBasemapSpatialReferenceTask.spatialReference)||(i.spatialReference=this._nextBasemapSpatialReferenceTask.spatialReference),this.nextBasemap=e}static getThumbnailUrl(e){return d.getBasemapThumbnailUrl(e)}};return e.__decorate([s.property()],m.prototype,"_loadingProjectionEngine",void 0),e.__decorate([s.property({readOnly:!0})],m.prototype,"_nextBasemapSpatialReferenceTask",null),e.__decorate([s.property({readOnly:!0})],m.prototype,"_viewSpatialReferenceLocked",null),e.__decorate([s.property({readOnly:!0})],m.prototype,"activeBasemap",null),e.__decorate([s.property()],m.prototype,"nextBasemap",void 0),e.__decorate([i.cast("nextBasemap")],m.prototype,"castNextBasemap",null),e.__decorate([s.property({readOnly:!0})],m.prototype,"state",null),e.__decorate([s.property()],m.prototype,"view",void 0),e.__decorate([s.property()],m.prototype,"toggle",null),m=e.__decorate([n.subclass("esri.widgets.BasemapToggle.BasemapToggleViewModel")],m),m});