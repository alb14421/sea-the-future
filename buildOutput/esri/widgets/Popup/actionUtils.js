// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/Error","../../core/Logger","../../core/promiseUtils","./actions"],function(e,t,r,o,i){"use strict";const a=()=>r.getLogger("esri.widgets.Popup.PopupViewModel");function n(e){const{selectedFeature:t,location:r,view:o}=e;return o?t??r??null:null}function s(e){return!!e&&e.isAggregate&&"cluster"===e.sourceLayer?.featureReduction?.type}async function u(e,r){const{location:s,selectedFeature:u,view:c,zoomFactor:l}=e;await(r?.viewModel?.updateGeometry());const d=r?.graphic,g=d?.geometry?d:n(e);if(!c||!g){const e=new t("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:g,view:c});throw a().error(e),e}const w=c.scale/l,m=d?.geometry??e.selectedFeature?.geometry??s,f=null!=m&&"point"===m.type&&await async function(e,t){if("3d"!==t?.type||!e||"esri.Graphic"!==e.declaredClass)return!0;const r=t.getViewForGraphic(e);if(r&&"whenGraphicBounds"in r){let t=null;try{t=await r.whenGraphicBounds(e,{useViewElevation:!0})}catch(e){}return!t||!t.boundingBox||t.boundingBox[0]===t.boundingBox[3]&&t.boundingBox[1]===t.boundingBox[4]&&t.boundingBox[2]===t.boundingBox[5]}return!0}(d??u,c);i.zoomToFeature.active=!0,i.zoomToFeature.disabled=!0;try{await e.zoomTo({target:{target:g,scale:f?w:void 0}})}catch(e){if(o.isAbortError(e))return;const r=new t("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:d??u});a().error(r)}finally{i.zoomToFeature.active=!1,i.zoomToFeature.disabled=!1,e.zoomToLocation=null,f&&(e.location=m)}}async function c(e){const{selectedFeature:r,view:o}=e;if("2d"!==o?.type){const e=new t("zoomToCluster:invalid-view","View must be 2d MapView.",{view:o});throw a().error(e),e}if(!r||!s(r)){const e=new t("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:r});throw a().error(e),e}const[n,u]=await l(o,r);i.zoomToClusteredFeatures.active=!0,i.zoomToClusteredFeatures.disabled=!0;const{extent:c}=await n.queryExtent(u);c&&await e.zoomTo({target:c}),i.zoomToClusteredFeatures.active=!1,i.zoomToClusteredFeatures.disabled=!1}async function l(e,t){const r=await e.whenLayerView(t.sourceLayer),o=r.createQuery(),i=t.getObjectId();return o.aggregateIds=null!=i?[i]:[],[r,o]}e.browseAggregateFeatures=async function(e){const{selectedFeature:t,view:r}=e;if(!r||!t)return;const[o,a]=await l(r,t);i.browseClusteredFeatures.active=!0,i.browseClusteredFeatures.disabled=!0;const{features:n}=await o.queryFeatures(a);i.browseClusteredFeatures.active=!1,i.browseClusteredFeatures.disabled=!1,i.browseClusteredFeatures.value=!0;const s={features:[t].concat(n)};"feature"===e?.initialDisplayMode&&(s.featureMenuOpen=!0),e?.open(s)},e.displayClusterExtent=async function(e){const{view:t,selectedFeature:r}=e;if(!t||!r)return;const[o,i]=await l(t,r),{extent:a}=await o.queryExtent(i);e.selectedClusterBoundaryFeature.geometry=a,t.graphics.add(e.selectedClusterBoundaryFeature)},e.getSelectedTarget=n,e.isClusterFeature=s,e.removeClusteredFeaturesForBrowsing=function(e){i.browseClusteredFeatures.value=!1;const t=e.features.filter(e=>s(e));t.length&&(e.features=t)},e.triggerAction=e=>{const{event:r,view:a,viewModel:n}=e,{action:s}=r;if(!s)return Promise.reject(new t("trigger-action:missing-arguments","Event has no action"));const{disabled:l,id:d}=s;if(!d)return Promise.reject(new t("trigger-action:invalid-action","action.id is missing"));if(l)return Promise.reject(new t("trigger-action:invalid-action","Action is disabled"));if(d===i.zoomToFeature.id)return u(n).catch(o.throwIfNotAbortError);if(d===i.zoomToClusteredFeatures.id)return c(n);if(d===i.browseClusteredFeatures.id)return n.browseClusterEnabled=!n.browseClusterEnabled,n.featureMenuOpen=n.browseClusterEnabled,Promise.resolve();if(d===i.removeSelectedFeature.id){n.visible=!1;const{selectedFeature:e}=n;if(!e)return Promise.reject(new t(`trigger-action:${i.removeSelectedFeature.id}`,"selectedFeature is required",{selectedFeature:e}));const{sourceLayer:r}=e;return r?r.remove(e):a?.graphics.remove(e),Promise.resolve()}return Promise.resolve()},e.zoomToClusterExtent=c,e.zoomToLocation=u,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});