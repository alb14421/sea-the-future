// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../core/Accessor","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../layers/video/videoUtils"],function(e,t,r,a,l,i,o,s,y){"use strict";function n(e,t){const r={};for(const a of t){const t=e.get(a);t&&(r[t.name]=t.value)}return r}let d=class extends t{constructor(e){super(e),this.followingMode="follow-both",this.layer=null,this.seekLength=10,this.view=null}initialize(){this.addHandles([r.watch(()=>this.layer,e=>{e&&e.load().then(()=>this._followTelemetry()).catch(()=>{})},r.initial),r.watch(()=>[this.followingMode],()=>this._followTelemetry(),r.initial)])}get buffered(){return this.layer?.buffered||0}get currentTime(){return this.layer?.currentTime||0}get duration(){return this.layer?.duration||0}get ended(){return this.layer?.ended??!0}get metadata(){const e=this.layer?.metadata;return e?{missionInfo:n(e,[y.videoMetadataEntryId.MissionId,y.videoMetadataEntryId.PrecisionTimeStamp]),platformInfo:n(e,[y.videoMetadataEntryId.PlatformTailNumber,y.videoMetadataEntryId.PlatformTrueAirspeed,y.videoMetadataEntryId.PlatformCallSign,y.videoMetadataEntryId.PlatformDesignation,y.videoMetadataEntryId.PlatformGroundRange]),frameInfo:n(e,[y.videoMetadataEntryId.FrameCenterElevation,y.videoMetadataEntryId.FrameCenterLatitude,y.videoMetadataEntryId.FrameCenterLongitude])}:null}get playing(){return this.layer?.playing??!1}get state(){return this.layer?.loadError?"error":this.layer?.state??"not-ready"}play(){this.layer?.play()}pause(){this.layer?.pause()}seekBackward(){if(this.layer){const e=this.layer.currentTime-this.seekLength;e<=0?this.layer.reset():this.layer.setCurrentTime(e)}}seekForward(){if(this.layer){const e=this.layer.currentTime+this.seekLength;e>=this.layer.duration?this.layer.reset():this.layer.setCurrentTime(e)}}seekToBeginning(){this.layer?.setCurrentTime(0)}seekToEnding(){this.layer?.setCurrentTime(this.layer.duration)}seekTo(e){this.layer?.setCurrentTime(e)}toggleSensorDisplay(){this.layer?.telemetryDisplay&&(this.layer.telemetryDisplay.sensorLocation=!this.layer.telemetryDisplay.sensorLocation)}toggleSensorSightLineDisplay(){this.layer?.telemetryDisplay&&(this.layer.telemetryDisplay.lineOfSight=!this.layer.telemetryDisplay.lineOfSight)}toggleFrameDisplay(){this.layer?.telemetryDisplay&&(this.layer.telemetryDisplay.frame=!this.layer.telemetryDisplay.frame)}toggleSensorTrailDisplay(){this.layer?.telemetryDisplay&&(this.layer.telemetryDisplay.sensorTrail=!this.layer.telemetryDisplay.sensorTrail)}toggleFrameCenterDisplay(){this.layer?.telemetryDisplay&&(this.layer.telemetryDisplay.frameCenter=!this.layer.telemetryDisplay.frameCenter)}toggleFrameOutlineDisplay(){this.layer?.telemetryDisplay&&(this.layer.telemetryDisplay.frameOutline=!this.layer.telemetryDisplay.frameOutline)}changePlaybackSpeed(e){this.layer&&(this.layer.playbackRate=e)}changeGraphicsColor(e){e&&this.layer.updateTelemetryColor(e)}_followTelemetry(){this.removeHandles("follow"),this.view&&this.layer&&this.addHandles(r.watch(()=>this.layer?.telemetry,()=>{const e=[],t="follow-sensor"===this.followingMode||"follow-both"===this.followingMode,r="follow-frame"===this.followingMode||"follow-both"===this.followingMode;t&&this.layer?.telemetry.sensorLocation&&e.push(this.layer.telemetry.sensorLocation),r&&this.layer?.telemetry.frameCenter&&e.push(this.layer.telemetry.frameCenter),e.length&&this.view?.goTo(e).catch(()=>{})},r.initial),"follow")}};return e.__decorate([a.property({readOnly:!0})],d.prototype,"buffered",null),e.__decorate([a.property({readOnly:!0})],d.prototype,"currentTime",null),e.__decorate([a.property({readOnly:!0})],d.prototype,"duration",null),e.__decorate([a.property({readOnly:!0})],d.prototype,"ended",null),e.__decorate([a.property()],d.prototype,"followingMode",void 0),e.__decorate([a.property()],d.prototype,"layer",void 0),e.__decorate([a.property({readOnly:!0})],d.prototype,"metadata",null),e.__decorate([a.property({readOnly:!0})],d.prototype,"playing",null),e.__decorate([a.property()],d.prototype,"seekLength",void 0),e.__decorate([a.property({readOnly:!0})],d.prototype,"state",null),e.__decorate([a.property()],d.prototype,"view",void 0),d=e.__decorate([s.subclass("esri.widgets.VideoPlayer.VideoPlayerViewModel")],d),d});