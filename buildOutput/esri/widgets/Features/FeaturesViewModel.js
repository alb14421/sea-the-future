// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../chunks/tslib.es6","../../Graphic","../../core/arrayUtils","../../core/Error","../../core/Logger","../../core/promiseUtils","../../core/ReactiveSet","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/accessorSupport/decorators/subclass","../../geometry/Point","../../geometry/projectionUtils","../../geometry/SpatialReference","../../geometry/support/geometryUtils","../../geometry/support/webMercatorUtils","../../layers/LayerConstants","../../symbols/SimpleFillSymbol","../../symbols/support/symbolUtils","../../time/constants","../../views/support/layerViewUtils","../Feature/FeatureViewModel","../Popup/actions","../Popup/actionUtils","../support/AnchorElementViewModel","../support/GoTo"],function(e,t,r,i,s,o,a,n,l,u,c,h,d,p,g,y,f,_,w,m,F,v,b,C,P,E,M,A){"use strict";const L="location-scale-handle";let V=null;return t.default=class extends(A.GoTo(M)){constructor(t){super(t),this._pendingPromises=new l,this._fetchFeaturesController=null,this._highlightPromises={"highlight-active-feature":null,"highlight-selected-feature":null},this._selectedClusterFeature=null,this.actions=new P.ActionsCollection,this.activeFeature=null,this.autoCloseEnabled=!1,this.browseClusterEnabled=!1,this.content=null,this.defaultPopupTemplateEnabled=!1,this.featurePage=null,this.featuresPerPage=20,this.featureMenuOpen=!1,this.featureMenuTitle=null,this.featureViewModelAbilities=null,this.featureViewModels=[],this.highlightEnabled=!0,this.includeDefaultActions=!0,this.initialDisplayMode="feature",this.selectedClusterBoundaryFeature=new i({symbol:new m({outline:{width:1.5,color:"cyan"},style:"none"})}),this.title=null,this.updateLocationEnabled=!1,this.view=null,this.visible=!1,this.zoomFactor=4,this.zoomToLocation=null,this._debouncedLocationUpdate=n.debounce(async t=>{const{spatialReference:r}=this,i=this.selectedFeature?.geometry?.type,s=this.location??t;if(i&&"mesh"!==i&&r&&s&&this.selectedFeature)if("point"!==i)try{const t=this.selectedFeature;let i=t.geometry;const o=this._getHighlightLayer(t),a=t.getObjectId();if(!o||!this.view)return;if(a){const e=this.view?.allLayerViews.find(e=>e.layer.uid===o.uid);if(!e||!("queryFeatures"in e))return;const t=e.createQuery();t.outSpatialReference=r,t.objectIds=[a],t.returnGeometry=!0;const{features:s}=await e.queryFeatures(t);i=s[0]?.geometry}if(!i||"mesh"===i.type)return;i=g.project(i,r),V||(V=await Promise.all([await new Promise((t,r)=>e(["../../geometry/operators/intersectsOperator"],t,r)),await new Promise((t,r)=>e(["../../geometry/operators/proximityOperator"],t,r))]));const[n,l]=V;if(!n.execute(i,s)){const e=l.getNearestCoordinate(i,s).coordinate??s;this.selectedFeature===t&&(this.location=e)}}catch(e){n.isAbortError(e)||a.getLogger(this).error(e)}else this.location=f.getPointFromGeometry(this.selectedFeature.geometry)??s})}initialize(){this.addHandles([this.on("view-change",()=>this._autoClose()),u.watch(()=>[this.highlightEnabled,this.selectedFeature,this.visible,this.view],()=>this._highlightSelectedFeature()),u.watch(()=>[this.highlightEnabled,this.activeFeature,this.visible,this.view],()=>this._highlightActiveFeature()),u.watch(()=>this.view?.animation?.state,e=>this._animationStateChange(e)),u.watch(()=>this.location,e=>this._locationChange(e)),u.watch(()=>this.selectedFeature,e=>this._selectedFeatureChange(e)),u.watch(()=>[this.selectedFeatureIndex,this.featureCount,this.featuresPerPage],()=>this._selectedFeatureIndexChange()),u.watch(()=>[this.featurePage,this.selectedFeatureIndex,this.featureCount,this.featuresPerPage,this.featureViewModels],()=>this._setGraphicOnFeatureViewModels()),u.watch(()=>this.featureViewModels,()=>this._featureViewModelsChange()),this.on("trigger-action",e=>E.triggerAction({event:e,viewModel:this,view:this.view})),u.when(()=>!this.waitingForResult,()=>this._waitingForResultChange(),u.sync),u.watch(()=>[this.features,this.map,this.spatialReference,this.timeZone],()=>this._updateFeatureVMs()),u.watch(()=>this.view?.scale,()=>this._viewScaleChange()),u.when(()=>!this.visible,()=>this.browseClusterEnabled=!1),u.watch(()=>this.browseClusterEnabled,e=>e?this.enableClusterBrowsing():this.disableClusterBrowsing())])}destroy(){this._cancelFetchingFeatures(),this._pendingPromises.clear(),this.browseClusterEnabled=!1,this.view=null,this.map=null,this.spatialReference=null,this.timeZone=null}get active(){return!(!this.visible||this.waitingForResult)}get allActions(){const e=this._get("allActions")||new P.ActionsCollection;e.removeAll();const{actions:t,defaultActions:r,defaultPopupTemplateEnabled:i,includeDefaultActions:s,selectedFeature:o}=this,a=s?r.concat(t):t,n=o&&("function"==typeof o.getEffectivePopupTemplate&&o.getEffectivePopupTemplate(i)||o.popupTemplate),l=n?.actions,u=n?.overwriteActions?l:l?.concat(a)??a;return u?.filter(Boolean).forEach(t=>e.add(t)),e}get defaultActions(){const e=this._get("defaultActions")||new P.ActionsCollection;return e.removeAll(),e.addMany(E.isClusterFeature(this.selectedFeature)?[P.zoomToClusteredFeatures.clone(),P.browseClusteredFeatures.clone()]:[P.zoomToFeature.clone()]),e}get featureCount(){return this.features.length}set features(e){const t=e||[];this._set("features",t);const{pendingPromisesCount:r,promiseCount:i,selectedFeatureIndex:s}=this,o=i&&t.length;"list"!==this.initialDisplayMode?o&&r&&-1===s?this.selectedFeatureIndex=0:o&&-1!==s||(this.selectedFeatureIndex=t.length?0:-1):(!o||o&&r===i)&&(this.selectedFeatureIndex=-1)}set location(e){let t=e;const r=this.spatialReference?.isWebMercator,i=e?.spatialReference?.isWGS84;i&&r&&(t=_.geographicToWebMercator(e)),this._set("location",t)}get map(){return this.view?.map??null}set map(e){this._override("map",e)}get pendingPromisesCount(){return this._pendingPromises.size}get promiseCount(){return this.promises.length}get promises(){return this._get("promises")||[]}set promises(e){this._pendingPromises.clear(),this.features=[],Array.isArray(e)&&e.length?(this._set("promises",e),(e=e.slice()).forEach(e=>this._pendingPromises.add(e)),e.reduce((e,t)=>e.finally(()=>t.then(e=>{this._pendingPromises.has(t)&&this._updateFeatures(e)}).finally(()=>this._pendingPromises.delete(t)).catch(()=>{})),Promise.resolve())):this._set("promises",[])}get screenLocation(){return super.screenLocation}get selectedFeature(){const{features:e,selectedFeatureIndex:t}=this;return-1===t?null:e[t]||null}get selectedFeatureIndex(){const e=this._get("selectedFeatureIndex");return"number"==typeof e?e:-1}set selectedFeatureIndex(e){const{featureCount:t}=this;(isNaN(e)||e<0||!t)&&(e=-1),this.activeFeature=null,this._set("selectedFeatureIndex",e)}get selectedFeatureViewModel(){return this.featureViewModels[this.selectedFeatureIndex]||null}get spatialReference(){return this.view?.spatialReference??null}set spatialReference(e){this._override("spatialReference",e)}get state(){const{view:e,map:t}=this;return e?e.ready?"ready":"disabled":t?"ready":"disabled"}get timeZone(){return this.view?.timeZone??v.system}set timeZone(e){this._overrideIfSome("timeZone",e)}get waitingForContents(){return this.featureViewModels.some(e=>e.waitingForContent)}get waitingForResult(){return!(!(this._fetchFeaturesController||this.pendingPromisesCount>0)||0!==this.featureCount)}centerAtLocation(){const{view:e}=this,t=E.getSelectedTarget(this);return t&&e?this.callGoTo({target:{target:t,scale:e.scale}}):Promise.reject(new o("center-at-location:invalid-target-or-view","Cannot center at a location without a target and view.",{target:t,view:e}))}zoomTo(e){return this.callGoTo(e)}clear(){this.set({promises:[],features:[],content:null,title:null,location:null,activeFeature:null})}fetchFeatures(e,t){const{view:r}=this;if(!r||!e)throw new o("fetch-features:invalid-screenpoint-or-view","Cannot fetch features without a screenPoint and view.",{screenPoint:e,view:r});return r.fetchPopupFeatures(e,{pointerType:t?.event?.pointerType,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,signal:t?.signal})}open(e){const t={updateLocationEnabled:!1,promises:[],fetchFeatures:!1,...e,visible:!0},{fetchFeatures:r}=t;delete t.fetchFeatures,r&&this._setFetchFeaturesPromises(t.location);const i=["actionsMenuOpen","collapsed"];for(const e of i)delete t[e];this.set(t)}triggerAction(e){const t=this.allActions.at(e);t&&!t.disabled&&this.emit("trigger-action",{action:t})}next(){return this.selectedFeatureIndex=this._getRoundRobinIndex(this.selectedFeatureIndex+1,this.featureCount),this}previous(){return this.selectedFeatureIndex=this._getRoundRobinIndex(this.selectedFeatureIndex-1,this.featureCount),this}disableClusterBrowsing(){E.removeClusteredFeaturesForBrowsing(this),this._clearBrowsedClusterGraphics()}async enableClusterBrowsing(){const{view:e,selectedFeature:t}=this;"2d"===e?.type?E.isClusterFeature(t)?(await E.displayClusterExtent(this),await E.browseAggregateFeatures(this)):a.getLogger(this).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.",t):a.getLogger(this).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.",t)}handleViewClick(e){this._fetchFeaturesAndOpen(e)}_getRoundRobinIndex(e,t){return(e+t)%t}_animationStateChange(e){this.zoomToLocation||(P.zoomToFeature.disabled="waiting-for-target"===e)}_clearBrowsedClusterGraphics(){const e=[this.selectedClusterBoundaryFeature,this._selectedClusterFeature].filter(s.isSome);this.view?.graphics?.removeMany(e),this._selectedClusterFeature=null,this.selectedClusterBoundaryFeature.geometry=null}_viewScaleChange(){if(E.isClusterFeature(this.selectedFeature))return this.browseClusterEnabled=!1,this.visible=!1,void this.clear();this.browseClusterEnabled&&(this.features=this.selectedFeature?[this.selectedFeature]:[])}_locationChange(e){const{selectedFeature:t,updateLocationEnabled:r,view:i}=this;i&&r&&e&&(!t||t.geometry)&&this.centerAtLocation()}_selectedFeatureIndexChange(){this.featurePage=this.featureCount>0?Math.floor(this.selectedFeatureIndex/this.featuresPerPage)+1:null}_featureViewModelsChange(){this.featurePage=this.featureCount>0?1:null}_setGraphicOnFeatureViewModels(){const{features:e,featureCount:t,featurePage:r,featuresPerPage:i,featureViewModels:s}=this;if(null==r)return;const o=((r-1)*i+t)%t,a=o+i;s.slice(o,a).forEach((t,r)=>{t&&(t.graphic??=e[o+r])})}async _selectedFeatureChange(e){const{location:t,updateLocationEnabled:r,view:i}=this;if(!e||!i)return;if(this.browseClusterEnabled){if(this._selectedClusterFeature&&(i.graphics.remove(this._selectedClusterFeature),this._selectedClusterFeature=null),E.isClusterFeature(e))return;return e.symbol=await F.getDisplayedSymbol(e),this._selectedClusterFeature=e,void i.graphics.add(this._selectedClusterFeature)}const s=e.sourceLayer?.type;if("map-image"!==s&&"imagery"!==s&&"imagery-tile"!==s||(e.symbol=await F.getDisplayedSymbol(e)),!r&&t||!e.geometry){if(r&&!e.geometry){await this.centerAtLocation();const e=i.center?.clone();e&&(this.location=e)}}else this.location=f.getPointFromGeometry(e.geometry)}_waitingForResultChange(){!this.featureCount&&this.promises&&(this.visible=!1)}async _setFetchFeaturesPromises(e){const{pendingFeatures:t}=await this._fetchFeaturesWithController({mapPoint:e});this.promises=t}_destroyFeatureVMs(){this.featureViewModels.forEach(e=>e&&!e.destroyed&&e.destroy()),this._set("featureViewModels",[])}_updateFeatureVMs(){const{selectedFeature:e,features:t,featureViewModels:r,view:i,spatialReference:s,map:o,timeZone:a,location:n}=this;if(E.isClusterFeature(t[0])||(this.browseClusterEnabled=!1),this._destroyFeatureVMs(),!t?.length)return;const l=r.slice(),u=[];t.forEach((t,r)=>{if(!t)return;let c=null;if(l.some((e,r)=>(e&&e.graphic===t&&(c=e,l.splice(r,1)),!!c)),c)u[r]=c;else{const l=new C({abilities:this.featureViewModelAbilities,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,spatialReference:s,graphic:t===e?t:null,location:n,map:o,view:i,timeZone:a});u[r]=l}}),l.forEach(e=>e&&!e.destroyed&&e.destroy()),this._set("featureViewModels",u)}async _getScreenPoint(e,t){const{spatialReference:r,view:i}=this;if(!i)return null;await(i?.when());const s=e?.spatialReference;return s&&r?(await g.initializeProjection(s,r,null,t),i.toScreen(e)):null}_cancelFetchingFeatures(){const e=this._fetchFeaturesController;e&&e.abort(),this._fetchFeaturesController=null}async _projectScreenPointAndFetchFeatures({mapPoint:e,screenPoint:t,event:r,signal:i}){return this.fetchFeatures(t??await this._getScreenPoint(e??this.location,{signal:i}),{signal:i,event:r})}_fetchFeaturesWithController({mapPoint:e,screenPoint:t,event:r}){this._cancelFetchingFeatures();const i=new AbortController,{signal:s}=i;this._fetchFeaturesController=i;const o=this._projectScreenPointAndFetchFeatures({mapPoint:e,screenPoint:t,signal:s,event:r});return o.catch(()=>{}).then(()=>{this._fetchFeaturesController=null}),o}async _fetchFeaturesAndOpen(e){const{mapPoint:t,screenPoint:r}=e,{view:i}=this;this.removeHandles(L),this.addHandles([u.watch(()=>this.view?.scale,()=>this._debouncedLocationUpdate(t).catch(e=>{n.isAbortError(e)||a.getLogger(this).error(e)})),u.when(()=>!this.visible,()=>{this.removeHandles(L)},{once:!0})],L);const{pendingFeatures:s}=await this._fetchFeaturesWithController({mapPoint:t,screenPoint:r,event:e});i?.popup&&"open"in i.popup&&i.popup.open({location:t??void 0,promises:s})}_autoClose(){this.autoCloseEnabled&&(this.visible=!1)}async _getLayerView(e,t){return await e.when(),e.whenLayerView(t)}_getHighlightLayer(e){const{layer:t,sourceLayer:r}=e;return r&&"layer"in r&&r.layer?r.layer:"map-notes"===r?.type||"subtype-group"===r?.type?r:t??r}_getHighlightLayerView(e,t){return"subtype-sublayer"===t.type&&t.parent&&this._mapIncludesLayer(t.parent)?this._getLayerView(e,t.parent):t&&this._mapIncludesLayer(t)?this._getLayerView(e,t):null}_getHighlightTarget(e,t,r){if(function(e,t){return"building-scene"===e||"map-image"===e||"tile"===e||"imagery"===e||"2d"===t&&"imagery-tile"===e}(t.type,r))return e;const i=e.getObjectId();if(null!=i)return i;const s="imagery"===t.type?void 0:"objectIdField"in t?t.objectIdField||w.fallbackObjectIDAttribute:null,o=e.attributes;return o&&s&&o[s]||e}_mapIncludesLayer(e){return!!this.map?.allLayers?.includes(e)}async _highlightFeature(e,t){this.removeHandles(e);const r=this[t];if(!r)return;const{highlightEnabled:i,view:s,visible:o}=this;if(!s||!i||!o)return;const a=this._getHighlightLayer(r);if(!a)return;const n=this._getHighlightLayerView(s,a);if(!n)return;this._highlightPromises[e]=n;const l=await n;if(!(l&&b.highlightsSupported(l)&&this._highlightPromises[e]===n&&this[t]&&this.highlightEnabled))return;const u=l.highlight(this._getHighlightTarget(r,a,s.type));this.addHandles(u,e)}async _highlightActiveFeature(){return this._highlightFeature("highlight-active-feature","activeFeature")}async _highlightSelectedFeature(){return this._highlightFeature("highlight-selected-feature","selectedFeature")}_updateFeatures(e){const{features:t}=this,r=e.filter(e=>!t.includes(e));r?.length&&(this.features=t.concat(r))}},r.__decorate([c.property()],t.default.prototype,"_fetchFeaturesController",void 0),r.__decorate([c.property({type:P.ActionsCollection})],t.default.prototype,"actions",void 0),r.__decorate([c.property({readOnly:!0})],t.default.prototype,"active",null),r.__decorate([c.property()],t.default.prototype,"activeFeature",void 0),r.__decorate([c.property({readOnly:!0})],t.default.prototype,"allActions",null),r.__decorate([c.property()],t.default.prototype,"autoCloseEnabled",void 0),r.__decorate([c.property()],t.default.prototype,"browseClusterEnabled",void 0),r.__decorate([c.property()],t.default.prototype,"content",void 0),r.__decorate([c.property({type:P.ActionsCollection,readOnly:!0})],t.default.prototype,"defaultActions",null),r.__decorate([c.property({type:Boolean})],t.default.prototype,"defaultPopupTemplateEnabled",void 0),r.__decorate([c.property({readOnly:!0})],t.default.prototype,"featureCount",null),r.__decorate([c.property()],t.default.prototype,"featurePage",void 0),r.__decorate([c.property({value:[]})],t.default.prototype,"features",null),r.__decorate([c.property()],t.default.prototype,"featuresPerPage",void 0),r.__decorate([c.property()],t.default.prototype,"featureMenuOpen",void 0),r.__decorate([c.property()],t.default.prototype,"featureMenuTitle",void 0),r.__decorate([c.property()],t.default.prototype,"featureViewModelAbilities",void 0),r.__decorate([c.property({readOnly:!0})],t.default.prototype,"featureViewModels",void 0),r.__decorate([c.property()],t.default.prototype,"highlightEnabled",void 0),r.__decorate([c.property()],t.default.prototype,"includeDefaultActions",void 0),r.__decorate([c.property()],t.default.prototype,"initialDisplayMode",void 0),r.__decorate([c.property({type:p})],t.default.prototype,"location",null),r.__decorate([c.property()],t.default.prototype,"map",null),r.__decorate([c.property({readOnly:!0})],t.default.prototype,"pendingPromisesCount",null),r.__decorate([c.property({readOnly:!0})],t.default.prototype,"promiseCount",null),r.__decorate([c.property()],t.default.prototype,"promises",null),r.__decorate([c.property({readOnly:!0})],t.default.prototype,"selectedClusterBoundaryFeature",void 0),r.__decorate([c.property({value:null,readOnly:!0})],t.default.prototype,"selectedFeature",null),r.__decorate([c.property({value:-1})],t.default.prototype,"selectedFeatureIndex",null),r.__decorate([c.property({readOnly:!0})],t.default.prototype,"selectedFeatureViewModel",null),r.__decorate([c.property({type:y})],t.default.prototype,"spatialReference",null),r.__decorate([c.property({readOnly:!0})],t.default.prototype,"state",null),r.__decorate([c.property()],t.default.prototype,"timeZone",null),r.__decorate([c.property()],t.default.prototype,"title",void 0),r.__decorate([c.property()],t.default.prototype,"updateLocationEnabled",void 0),r.__decorate([c.property()],t.default.prototype,"view",void 0),r.__decorate([c.property()],t.default.prototype,"visible",void 0),r.__decorate([c.property({readOnly:!0})],t.default.prototype,"waitingForContents",null),r.__decorate([c.property({readOnly:!0})],t.default.prototype,"waitingForResult",null),r.__decorate([c.property()],t.default.prototype,"zoomFactor",void 0),r.__decorate([c.property()],t.default.prototype,"zoomToLocation",void 0),r.__decorate([c.property()],t.default.prototype,"centerAtLocation",null),t.default=r.__decorate([d.subclass("esri.widgets.Features.FeaturesViewModel")],t.default),t.default});