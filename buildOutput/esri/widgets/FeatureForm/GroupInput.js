// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../core/reactiveUtils","../../core/uid","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","./featureFormUtils","./InputBase"],function(e,t,i,s,r,o,n,p,a,l){"use strict";let u=class extends l{constructor(e){super(e),this._expressionTrackingHandles=new Map,this.id=i.generateUID().toString(),this.type="group"}initialize(){this.addHandles([t.watch(()=>[this.visible,this.inputs],([e])=>{const{inputs:t}=this,i=!!e&&void 0;for(const e of t)a.isFieldInput(e)&&(e.required=i)},{initial:!0,equals:(e,t)=>t[0]===e[0]&&t[1]===e[1]})])}destroy(){for(const e of this._expressionTrackingHandles.values())e.remove()}get initialState(){return this.element.initialState||"expanded"}get inputs(){return this._get("inputs")}set inputs(e){this.removeAllHandles(),e&&this.addHandles(e.map(e=>t.watch(()=>e.visible,()=>this._dirtyEvaluatedVisibilityExpression()))),this._set("inputs",e)}get label(){return super.label}get open(){return"expanded"===this.initialState}set open(e){this._override("open",e)}get visible(){return!1!==this.evaluatedVisibilityExpression&&this.inputs&&this.inputs.some(e=>e.visible)}_dirtyEvaluatedVisibilityExpression(){const{element:e}=this;e.visibilityExpression&&this.notifyChange("evaluatedVisibilityExpression")}};return e.__decorate([s.property()],u.prototype,"id",void 0),e.__decorate([s.property()],u.prototype,"initialState",null),e.__decorate([s.property()],u.prototype,"inputs",null),e.__decorate([s.property()],u.prototype,"open",null),e.__decorate([s.property()],u.prototype,"type",void 0),e.__decorate([s.property()],u.prototype,"visible",null),u=e.__decorate([p.subclass("esri.widgets.FeatureForm.GroupInput")],u),u});