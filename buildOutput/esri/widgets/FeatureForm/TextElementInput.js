// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../core/Collection","../../core/ReactiveMap","../../core/ReactiveSet","../../core/sanitizerUtils","../../core/uid","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/support/UpdatingHandles","../../layers/support/fieldUtils","./featureFormUtils","./InputBase","./support/textElementInputUtils","./support/textManipulationUtils"],function(e,t,s,r,i,o,n,p,a,l,d,c,u,x,_,h,f){"use strict";let m=class extends _{constructor(e){super(e),this.group=null,this.id=`TextElementInput-${o.generateUID()}`,this.type="text",this._expressionReferences=new s,this._expressionsUsed=new r,this._fieldsUsed=new r,this._literalParts=new t,this._templateParts=new t,this._updatingHandles=new c.UpdatingHandles}initialize(){const{rawText:e}=this;e?"markdown"===this.textFormat?this._updatingHandles.addPromise(f.compileTextElementMarkdownToHTML(e).then(e=>this._initializeTextParts(e))):this._initializeTextParts(e):this._literalParts.push("")}get expressionsUsed(){return Array.from(this._expressionsUsed)}get fieldsIndex(){return this.layer.fieldsIndex}set fieldsIndex(e){this._overrideIfSome("fieldsIndex",e)}get fieldsUsed(){return Array.from(this._fieldsUsed)}get rawText(){return this.element.text}get text(){const e=this._templateParts.map(e=>`${this._expressionReferences.get(e)?.lastEvaluatedValue??""}`);return i.renderingSanitizer.sanitize(h.assembleStringFromParts(this._literalParts,e))}get textFormat(){return this.element.textFormat}get updating(){return this._updatingHandles.updating||Array.from(this._expressionReferences.values()).some(e=>e?.updating)}setExpressionExecutor(e,t){this._expressionReferences.set(x.prependExpressionPrefix(e),t)}setFieldExecutor(e,t){this._expressionReferences.set(x.prependFieldPrefix(e),t)}_initializeTextParts(e){const{fieldsIndex:t}=this,{literals:s,templates:r}=h.splitStringIntoParts(e),i=[],o=[];for(let e=0;e<r.length;e++){const n=s[e],p=u.extractSubstitutionTemplatesFromString(r[e])[0];if(x.isExpressionReference(p))this._expressionsUsed.add(x.extractExpressionNameFromString(p)),this._expressionReferences.set(p,null),i.push(n),o.push(p);else if(x.isLegacyFieldMapsExpressionReference(p)){this._expressionsUsed.add(p);const e=x.prependExpressionPrefix(p);this._expressionReferences.set(e,null),i.push(n),o.push(e)}else if(t?.has(p)){const e=t.normalizeFieldName(p);this._fieldsUsed.add(e);const s=x.prependFieldPrefix(e);this._expressionReferences.set(s,null),i.push(n),o.push(s)}else s[e+1]=n.concat(p,s[e+1])}i.push(s.at(-1)),this._literalParts.addMany(i),this._templateParts.addMany(o)}};return e.__decorate([n.property()],m.prototype,"expressionsUsed",null),e.__decorate([n.property()],m.prototype,"fieldsIndex",null),e.__decorate([n.property()],m.prototype,"fieldsUsed",null),e.__decorate([n.property()],m.prototype,"group",void 0),e.__decorate([n.property()],m.prototype,"id",void 0),e.__decorate([n.property()],m.prototype,"rawText",null),e.__decorate([n.property()],m.prototype,"text",null),e.__decorate([n.property()],m.prototype,"textFormat",null),e.__decorate([n.property()],m.prototype,"type",void 0),e.__decorate([n.property()],m.prototype,"updating",null),m=e.__decorate([d.subclass("esri.widgets.FeatureForm.TextElementInput")],m),m});