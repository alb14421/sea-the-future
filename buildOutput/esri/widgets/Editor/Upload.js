// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/Accessor","../../core/asyncUtils","../../core/Error","../../core/events","../../core/has","../../core/promiseUtils","../../core/accessorSupport/decorators/property","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../geometry/Point","../../geometry/projectionUtils","../../geometry/support/spatialReferenceUtils","../../layers/graphics/sources/support/uploadProgressWeights","../../layers/support/infoFor3D","../../support/progressUtils"],function(e,r,t,o,s,a,i,l,n,p,c,d,u,f,h,y,g,_){"use strict";e.Upload=class extends t{constructor(){super({}),this.files=[],this.progress=0,this._uploadTask=null,this._layer=null}destroy(){this.cancel(),this.files=[],this._layer=null,this._uploadTask=null}get state(){const e=this._uploadTask;return e&&0!==this.files.length?e.finished?e.error?"error":"success":"pending":"default"}get result(){return this._uploadTask?.value??null}get error(){return this._uploadTask?.error??null}uploadTo(e){this.cancel(),this.files=[],this._layer=e,this._uploadTask=o.createTask(async r=>{const t=await async function(e){const{resolve:r,promise:t}=l.createResolver(),o=document.createElement("input");o.type="file",o.multiple=!1,o.accept=[...g.getSupportedExtensions(e.infoFor3D),".zip"].join(","),o.style.display="none",document.body.appendChild(o);const s=a.on(o,"change",()=>r(o.files?Array.from(o.files):[]));return m?m(o):o.click(),t.finally(()=>{s.remove(),o.remove()})}(e);l.throwIfAborted(r),this.progress=0,this.files=t;const o=_.makeProgressManager(y.uploadProgressWeights.upload,e=>{this.progress=e},"Upload.uploadTo");if(0===t.length)return null;l.throwIfAborted(r);const n=await e.extractAndFilterFiles(t);l.throwIfAborted(r),n.length>0&&(this.files=n);const p=await e.convertMesh(n,{signal:r,onProgress:o.makeOnProgress("createFromFiles")});if(l.throwIfAborted(r),!p)throw new s("editor:upload","could not upload or convert model");const c=n.reduce((e,r)=>e+r.size,0),d=o.simulate("loadMesh",_.estimatedTransferTime(c));try{await p.load()}finally{d.remove()}if(i("enable-feature:georeferenced-uploads")&&p.metadata.georeferenced){if(await h.equalsWithProjectionEngine(e.spatialReference,p.origin?.spatialReference))return{type:"georeferenced",mesh:p};if((e.spatialReference.isWebMercator||e.spatialReference.isWGS84)&&await async function(e,r){if(await f.initializeProjection(e.spatialReference,r),!e.vertexSpace.origin)return!1;const[t,o,s]=e.vertexSpace.origin,a=new u({x:t,y:o,z:s,spatialReference:e.spatialReference}),i=f.project(a,r);return!!i&&(e.vertexSpace.origin=[i.x,i.y,i.z??0],e.spatialReference=r,!0)}(p,e.spatialReference))return{type:"georeferenced-reprojected",mesh:p}}return p.spatialReference=e.spatialReference,p.vertexSpace.origin=[0,0,0],{type:"non-georeferenced",mesh:p}})}retry(){this._layer&&this.uploadTo(this._layer)}cancel(){this._uploadTask?.abort()}},r.__decorate([n.property()],e.Upload.prototype,"files",void 0),r.__decorate([n.property()],e.Upload.prototype,"progress",void 0),r.__decorate([n.property()],e.Upload.prototype,"state",null),r.__decorate([n.property()],e.Upload.prototype,"result",null),r.__decorate([n.property()],e.Upload.prototype,"error",null),r.__decorate([n.property()],e.Upload.prototype,"_uploadTask",void 0),r.__decorate([n.property()],e.Upload.prototype,"_layer",void 0),e.Upload=r.__decorate([d.subclass("esri.widgets.Editor.Upload")],e.Upload);let m=null;e.clearPromptForFilesStub=function(){m=null},e.stubFilePickerToSelect=function(e,r){m=t=>{r?.(),Promise.resolve().then(()=>e).then(e=>{if(!m)return;const r=new DataTransfer;e.forEach(e=>r.items.add(e)),t.files=r.files,t.dispatchEvent(new Event("change"))})}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});