// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../chunks/tslib.es6","../core/promiseUtils","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/RandomLCG","../core/accessorSupport/decorators/subclass","./Widget","./AreaMeasurement2D/AreaMeasurement2DViewModel","./support/globalCss","./support/MeasurementWidgetContent","./support/widgetUtils","./support/decorators/messageBundle","./support/jsxFactory"],function(e,t,s,r,o,i,n,a,p,l,u,d,c,m){"use strict";const g="esri-area-measurement-2d",v={base:g,newMeasurementButton:`${g}__clear-button`};let y=class extends a{constructor(e,t){super(e,t),this.messages=null,this.messagesUnits=null,this.messagesCommon=null,this.viewModel=new p}get active(){return this.viewModel.active}get icon(){return"measure-area"}set icon(e){this._overrideIfSome("icon",e)}get label(){return this.messages?.widgetLabel??""}set label(e){this._overrideIfSome("label",e)}get snappingOptions(){return this.viewModel.snappingOptions}set snappingOptions(e){this.viewModel.snappingOptions=e}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:s,messagesUnits:r,unit:o,unitOptions:i,viewModel:n,visible:a}=this,{active:p,measurementLabel:d,state:c,supported:g}=n;return m.tsx("div",{"aria-label":e.widgetLabel,class:this.classes(v.base,l.globalCss.widget,l.globalCss.panel),key:this,role:"region"},a?m.tsx(u.MeasurementWidgetContent,{active:p,measurementItems:[{key:"area",title:r?.measures.area,value:d?.area},{key:"perimeter",title:e.perimeter,value:d?.perimeter}],messages:{...e,notApplicable:s.notApplicable},newMeasurementButtonClass:v.newMeasurementButton,state:c,supported:g,unit:o,unitOptions:i,onNewMeasurementClick:()=>{t.ignoreAbortErrors(n.start())},onUnitChange:e=>{this.unit=e}}):null)}};return e.__decorate([s.property({readOnly:!0})],y.prototype,"active",null),e.__decorate([s.property()],y.prototype,"icon",null),e.__decorate([s.property()],y.prototype,"label",null),e.__decorate([s.property(),c.messageBundle("esri/widgets/AreaMeasurement2D/t9n/AreaMeasurement2D")],y.prototype,"messages",void 0),e.__decorate([s.property(),c.messageBundle("esri/core/t9n/Units")],y.prototype,"messagesUnits",void 0),e.__decorate([s.property(),c.messageBundle("esri/t9n/common")],y.prototype,"messagesCommon",void 0),e.__decorate([s.property()],y.prototype,"snappingOptions",null),e.__decorate([s.property()],y.prototype,"uiStrings",void 0),e.__decorate([s.property()],y.prototype,"unit",null),e.__decorate([s.property()],y.prototype,"unitOptions",null),e.__decorate([s.property()],y.prototype,"view",null),e.__decorate([s.property({type:p})],y.prototype,"viewModel",void 0),e.__decorate([s.property({type:Boolean})],y.prototype,"visible",null),y=e.__decorate([n.subclass("esri.widgets.AreaMeasurement2D")],y),y});