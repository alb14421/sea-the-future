// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Accessor","../../../core/Collection","../../../core/Logger","../../../core/maybe","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/support/UpdatingHandles","../../../layers/support/layerUtils","../../../views/support/selectionUtils","../goToUtils","./GroupLayerItem","./LayerItem","./selectionListUtils"],function(e,t,r,o,i,a,s,l,n,c,h,y,p,d,g,u,_,m){"use strict";let f=class extends t{constructor(e){super(e),this._allLayerItems=null,this._groupItemCache=new Map,this._hoverHighlightHandle=null,this._layerEditAbortControllers=new Map,this._layerEditHandles=new r,this._layerItemCache=new Map,this._onChangeAbortController=null,this._updatingHandles=new y.UpdatingHandles,this.filterText=void 0,this.layer=null,this.maxVisibleFeatureCountPerLayer=500,this.selectionManager=null,this._onSelectionChangeController=async()=>{this._cancelOnSelectionChange();const e=new AbortController;this._onChangeAbortController=e,await this._updatingHandles.addPromise(a.ignoreAbortErrors(this._generateListItems(e))),this._onChangeAbortController===e&&(this._onChangeAbortController=null);const t=this.layer&&this.effectiveSelectionManager?.getSelection(this.layer);t?.length||(this.layer=null)},this._cancelOnSelectionChange=()=>this._onChangeAbortController?.abort(),this._onSelectionChangeDebounced=a.debounce(this._onSelectionChangeController,100),this._cancelOnLayerEdit=e=>this._layerEditAbortControllers.get(e)?.abort()}initialize(){this.addHandles([s.watch(()=>[this.view,this.effectiveSelectionManager,...this._sources],()=>{this._onSelectionChange(),this._refreshLayerEditHandles()}),s.on(()=>this.effectiveSelectionManager?.sources,"change",()=>{this._onSelectionChange(),this._refreshLayerEditHandles()}),s.on(()=>this.effectiveSelectionManager,"selection-change",()=>this._onSelectionChange())])}destroy(){this._cancelOnSelectionChange(),this.removeTemporaryHighlight(),this._updatingHandles.destroy(),this._layerEditHandles.drain(i.removeMaybe),this._layerEditAbortControllers.forEach(i.abortMaybe)}get _sources(){return this.effectiveSelectionManager?.sources.toArray()??[]}get activeLayerItem(){const{layer:e}=this;return e&&this.layerItems.find(t=>t.layer===e)}get allLayerItems(){return this._allLayerItems??[]}get effectiveCount(){return m.computeEffectiveCount(this.allLayerItems)}get effectiveSelectionManager(){return this.selectionManager??this.view?.selectionManager}get isUpdating(){return!(!this._onChangeAbortController&&!this._updatingHandles.updating)}get layerItems(){return m.getNestedLayerItems(this.allLayerItems)}get layerViewMap(){const e=new Map,{view:t}=this;if(!t)return e;for(const r of t.allLayerViews)if(e.set(r.layer.id,r),p.isSubtypeGroupLayer(r.layer))for(const t of r.layer.sublayers)e.set(t.id,r);return e}get maxVisibleFeatureCountExceeded(){return this.allLayerItems.some(e=>e.maxVisibleFeatureCountExceeded)}get state(){const{view:e}=this;return e?e.ready?this.effectiveSelectionManager?"ready":"error":"loading":"disabled"}get viewLayersAndTables(){const{view:e}=this;return e?.map?[...e.map.layers.toArray().reverse(),...e.map.tables.toArray().reverse()]:[]}get visibleFeatureCount(){return this.activeLayerItem?.visibleTotal??this.visibleFeatureItems.length}get visibleFeatureItems(){return this.layerItems.flatMap(e=>e.featureItems.filter(e=>e.visible))}get visibleLayerCount(){const{effectiveSelectionManager:e}=this;return e&&0!==e.count?1===e.count||this.activeLayerItem?1:this.layerItems.filter(e=>e.visible).length:0}addTemporaryHighlight({graphic:e,layerView:t}){this.removeTemporaryHighlight(),t&&e&&(this._hoverHighlightHandle=t.highlight(e,{name:"temporary"}))}clear(){this.effectiveSelectionManager?.clear()}deselectFeatureItem(e){const t=e.graphic.getObjectId();null!=t&&this.effectiveSelectionManager?.removeFromSelection(e.layer,[t])}deselectGroupItem(e){e.items.forEach(e=>{m.isLayerItem(e)?this.deselectLayerItem(e):this.deselectGroupItem(e)})}deselectLayerItem(e){this.effectiveSelectionManager?.setSelection(e.layer,[])}deselectItem(e){m.isGroupLayerItem(e)?this.deselectGroupItem(e):m.isLayerItem(e)?this.deselectLayerItem(e):this.deselectFeatureItem(e)}goToItem(e){m.isLayerItem(e)||m.isGroupLayerItem(e)?this._goTo(m.getNestedFeatureItems([e]).map(e=>e.graphic)):this._goTo(e.graphic)}layersToItems(e){const{controller:t,groupLayerItem:r,layers:o,promises:i}=e,{_groupItemCache:a,_layerItemCache:s,effectiveSelectionManager:l,viewLayersAndTables:n}=this,c=o??n;if(!l||0===l.count)return[];const h=[];for(const e of c)switch(e.type){case"subtype-group":case"group":{const r=a.get(e),o=r??new u({layer:e,viewModel:this});r||a.set(e,o),i.push(o.sync({controller:t,promises:i})),h.push(o)}break;default:if(d.isSelectableLayer(e)||p.isSubtypeSublayer(e)){const o=e,a=l.getSelection(o);if(!a?.length)continue;const n=s.get(o),c=n??new _({groupLayerItem:r,layer:o,viewModel:this});n||s.set(o,c),i.push(c.sync({controller:t,promises:i})),h.push(c)}}return h}removeFromSelection(e){this.effectiveSelectionManager?.removeFromSelection(e.layer,e.objectIds)}removeTemporaryHighlight(){this._hoverHighlightHandle=i.removeMaybe(this._hoverHighlightHandle)}selectSingleFeatureItem(e){const t=e.objectId;if(null!=t&&this.effectiveSelectionManager)for(const{layer:r}of this.effectiveSelectionManager.selections)this.setSelection({layer:r,objectIds:r===e.layer?[t]:[]})}selectSingleGroupItem(e){if(this.effectiveSelectionManager)for(const{layer:t,selection:r}of this.effectiveSelectionManager.selections)this.setSelection({layer:t,objectIds:t.parent===e.layer?r:[]})}selectSingleItem(e){m.isGroupLayerItem(e)?this.selectSingleGroupItem(e):m.isLayerItem(e)?this.selectSingleLayerItem(e):this.selectSingleFeatureItem(e)}selectSingleLayerItem(e){if(this.effectiveSelectionManager)for(const{layer:t,selection:r}of this.effectiveSelectionManager.selections)this.setSelection({layer:t,objectIds:t===e.layer?r:[]})}setSelection(e){this.effectiveSelectionManager?.setSelection(e.layer,e.objectIds)}async _goTo(e){const{view:t}=this;if(t)try{await g.goTo(t,e)}catch(e){"AbortError"!==e.name&&o.getLogger(this).warn("Failed to go to feature(s)",e)}}async _generateListItems(e){try{this.removeTemporaryHighlight();const t=[],r=this.layersToItems({controller:e,promises:t});t.length>0&&await Promise.all(t),this._onChangeAbortController===e&&(this._allLayerItems=r)}catch(e){o.getLogger(this).warn("Failed updating selection",e)}}_onSelectionChange(){a.ignoreAbortErrors(this._onSelectionChangeDebounced())}_refreshLayerEditHandles(){const{effectiveSelectionManager:e}=this;if(this._layerEditHandles.drain(i.removeMaybe),!e?.sources.length)return;const t=new Set(e.sources.map(e=>p.isSubtypeSublayer(e)?e.parent:e));for(const e of t)d.isSelectableLayer(e)&&"on"in e&&this._layerEditHandles.push(e.on("edits",t=>{this._onLayerEdit(t,e)}))}async _onLayerEdit(e,t){try{if(this.removeTemporaryHighlight(),this._cancelOnLayerEdit(t),!e.updatedFeatures.some(e=>null!=e.objectId&&!e.error))return;const r=new AbortController;this._layerEditAbortControllers.set(t,r);const o="subtype-group"===t.type?this.allLayerItems.find(e=>e.layer===t):this.layerItems.find(e=>e.layer===t);if(o?.layerView){const e=o.layerView;if(await this._onLayerViewUpdate(e),r.signal.aborted)return;o.reset(),this._onSelectionChange()}this._layerEditAbortControllers.get(t)===r&&this._layerEditAbortControllers.delete(t)}catch(e){o.getLogger(this).warn("Failed updating selected features",e)}}async _onLayerViewUpdate(e){await a.whenOrTimeout(s.whenOnce(()=>e.updating),2e3),await s.whenOnce(()=>!e.updating)}};return e.__decorate([l.property()],f.prototype,"_allLayerItems",void 0),e.__decorate([l.property()],f.prototype,"_groupItemCache",void 0),e.__decorate([l.property()],f.prototype,"_hoverHighlightHandle",void 0),e.__decorate([l.property()],f.prototype,"_layerEditAbortControllers",void 0),e.__decorate([l.property()],f.prototype,"_layerEditHandles",void 0),e.__decorate([l.property()],f.prototype,"_layerItemCache",void 0),e.__decorate([l.property()],f.prototype,"_onChangeAbortController",void 0),e.__decorate([l.property()],f.prototype,"_sources",null),e.__decorate([l.property()],f.prototype,"_updatingHandles",void 0),e.__decorate([l.property()],f.prototype,"activeLayerItem",null),e.__decorate([l.property()],f.prototype,"allLayerItems",null),e.__decorate([l.property()],f.prototype,"effectiveCount",null),e.__decorate([l.property()],f.prototype,"effectiveSelectionManager",null),e.__decorate([l.property()],f.prototype,"filterText",void 0),e.__decorate([l.property()],f.prototype,"isUpdating",null),e.__decorate([l.property()],f.prototype,"layer",void 0),e.__decorate([l.property()],f.prototype,"layerItems",null),e.__decorate([l.property()],f.prototype,"layerViewMap",null),e.__decorate([l.property()],f.prototype,"maxVisibleFeatureCountExceeded",null),e.__decorate([l.property()],f.prototype,"maxVisibleFeatureCountPerLayer",void 0),e.__decorate([l.property()],f.prototype,"selectionManager",void 0),e.__decorate([l.property()],f.prototype,"state",null),e.__decorate([l.property()],f.prototype,"view",void 0),e.__decorate([l.property()],f.prototype,"viewLayersAndTables",null),e.__decorate([l.property()],f.prototype,"visibleFeatureCount",null),e.__decorate([l.property()],f.prototype,"visibleFeatureItems",null),e.__decorate([l.property()],f.prototype,"visibleLayerCount",null),f=e.__decorate([h.subclass("esri.widgets.support.SelectionList.SelectionListViewModel")],f),f});