// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/Accessor","../../core/asyncUtils","../../core/has","../../core/Logger","../../core/maybe","../../core/promiseUtils","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass"],function(e,s,t,i,n,a,r,o,l,c,h,y){"use strict";function w(e){return null!=e&&e.state>=2?(e.abort(),null):e}e.AnalysisViewModel=class extends t{constructor(e={}){super(e),this.view=null,this.analysisView=null,this._reconnectViewTask=null,this._forceInteractiveHandle=null,this._changeFromReconnect=!1,this._startUserOperation=null;const s=e?.analysis;null!=s?this.analysis=s:(this._set("analysis",this.constructAnalysis()),this._set("isAnalysisOwner",!0)),null!=e?.visible&&(this.visible=e.visible)}normalizeCtorArgs(e){const{analysis:s,isDefaultViewModel:t,...i}=e;return i}initialize(){const e=()=>{this._changeFromReconnect||this._viewHasAnalysis||this._set("isAnalysisOwner",!1);const e=!this._changeFromReconnect;this._changeFromReconnect=!1,e&&this._scheduleViewReconnect()};this.addHandles([l.when(()=>null!=this.view&&this.view.ready&&!this.supported,()=>a.getLogger(this).errorOnce(this.unsupportedErrorMessage),l.syncAndInitial),l.watch(()=>[this.analysis,this._viewHasAnalysis],e,l.sync),l.on(()=>this.view,"analysis-view-destroy",s=>{s.analysis===this.analysis&&e()}),l.watch(()=>({view:this.view,ready:null!=this.view&&this.view.ready,supported:this.supported}),({view:e},s)=>{const t=s?.view;e!==t&&(this._startUserOperation=r.abortMaybe(this._startUserOperation),this._disconnectFromView(t)),this._scheduleViewReconnect()},l.syncAndInitial)])}destroy(){this._reconnectViewTask=r.abortMaybe(this._reconnectViewTask),this._startUserOperation=r.abortMaybe(this._startUserOperation),null!=this.analysisView&&(this.analysisView.visible=void 0),this._disconnectFromView(this.view),this._set("view",null),null!=this.analysis&&this.isAnalysisOwner&&(this.analysis.destroy(),this._set("analysis",null))}get supported(){return null==this.view||this.view.type===this.supportedViewType}set visible(e){this._set("visible",e),null!=this.analysisView&&(this.analysisView.visible=e)}get active(){return null!=this.tool&&this.tool.active}get disabled(){return null==this.view||!this.view.ready||!this.supported}set analysis(e){e!==this._get("analysis")&&(this._startUserOperation=r.abortMaybe(this._startUserOperation),this._disconnectFromView(this.view),this._setExternalAnalysis(e),this._scheduleViewReconnect())}get ready(){return null!=this.analysisView&&!this.connectingToView}get connectingToView(){return null!=this._reconnectViewTask}get isAnalysisOwner(){return this._get("isAnalysisOwner")}get _viewHasAnalysis(){const{view:e}=this;return null!=e&&e.analyses.includes(this.analysis)}get tool(){return this.analysisView?.tool}clear(){this._startUserOperation=r.abortMaybe(this._startUserOperation),this._resetInteractiveCreationState(),null!=this.tool&&null!=this.view&&this.view.activeTool===this.tool&&(this.view.activeTool=null)}async start(){if(!this.visible)return void a.getLogger(this).warn("Cannot start analysis when not visible");this.clear();const e={task:null,abort:null,state:0},s=i.createTask(async s=>{if(e.state=1,await l.whenOnce(()=>this.ready,s),e.state=2,null==this.analysisView||null==this.view)return;const t=this.analysisView.tool;null!=t&&(this.view.activeTool=t,l.when(()=>t.created,()=>{t.active&&null!=this.view&&(this.view.activeTool=null)},{initial:!0,once:!0}))});return e.task=s,e.abort=()=>s.abort(),this._startUserOperation=e,s.promise}onConnectToAnalysisView(e){}onDisconnectFromAnalysisView(){}_scheduleViewReconnect(){this._reconnectViewTask=r.abortMaybe(this._reconnectViewTask);const e=i.createTask(async s=>{try{await this._reconnectView(s)}catch(e){if(o.throwIfAborted(s),!o.isAbortError(e))return void a.getLogger(this).warn("Failed to use analysis in view model",e);throw e}finally{e===this._reconnectViewTask&&(this._reconnectViewTask=null)}});this._reconnectViewTask=e}async _reconnectView(e){const{view:s}=this,t=null!=s&&s.ready&&this.supported,i=this.analysis;this._startUserOperation=w(this._startUserOperation),this._disconnectFromView(s),t&&null!=s&&null!=i&&(this.isAnalysisOwner&&(this._changeFromReconnect=!0,s.analyses.add(i)),this.analysisView=await s.whenAnalysisView(i),o.isAborted(e)?this._startUserOperation=w(this._startUserOperation):(this.analysisView.visible=this.visible,this._forceInteractiveHandle=this.analysisView.forceInteractive(),this.addHandles(this._forceInteractiveHandle),this.onConnectToAnalysisView(this.analysisView)))}_disconnectFromView(e){null!=e&&this.isAnalysisOwner&&e.analyses.includes(this.analysis)&&(this._changeFromReconnect=!0,this.analysis.clear(),e.analyses.remove(this.analysis)),this.onDisconnectFromAnalysisView(),this._forceInteractiveHandle=r.removeMaybe(this._forceInteractiveHandle),this.analysisView=null}_setExternalAnalysis(e){null==this.analysisView||this.isAnalysisOwner||(this.analysisView.visible=void 0,this._forceInteractiveHandle=r.removeMaybe(this._forceInteractiveHandle)),this.analysisView=null,this._set("isAnalysisOwner",!1),this._set("analysis",e),this._changeFromReconnect=!1}_resetInteractiveCreationState(){this.analysis.clear(),this.tool?.resetCreated()}get testInfo(){}},s.__decorate([c.property()],e.AnalysisViewModel.prototype,"supported",null),s.__decorate([c.property()],e.AnalysisViewModel.prototype,"view",void 0),s.__decorate([c.property({type:Boolean,value:!0})],e.AnalysisViewModel.prototype,"visible",null),s.__decorate([c.property()],e.AnalysisViewModel.prototype,"active",null),s.__decorate([c.property()],e.AnalysisViewModel.prototype,"disabled",null),s.__decorate([c.property({nonNullable:!0})],e.AnalysisViewModel.prototype,"analysis",null),s.__decorate([c.property()],e.AnalysisViewModel.prototype,"analysisView",void 0),s.__decorate([c.property()],e.AnalysisViewModel.prototype,"ready",null),s.__decorate([c.property()],e.AnalysisViewModel.prototype,"connectingToView",null),s.__decorate([c.property({readOnly:!0})],e.AnalysisViewModel.prototype,"isAnalysisOwner",null),s.__decorate([c.property()],e.AnalysisViewModel.prototype,"_viewHasAnalysis",null),s.__decorate([c.property()],e.AnalysisViewModel.prototype,"_reconnectViewTask",void 0),s.__decorate([c.property()],e.AnalysisViewModel.prototype,"_forceInteractiveHandle",void 0),s.__decorate([c.property()],e.AnalysisViewModel.prototype,"tool",null),e.AnalysisViewModel=s.__decorate([y.subclass("esri.widgets.support.AnalysisViewModel")],e.AnalysisViewModel),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});