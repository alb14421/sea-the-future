// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../Color","../../../core/Evented","../../../core/Logger","../../../core/mathUtils","../../../core/maybe","../../../core/reactiveUtils","../../../core/unitUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../geometry/Point","../../../geometry/projectionUtils","../../../geometry/support/scaleUtils","../../../grids/MeasuredGrid","../../../layers/graphics/dehydratedPoint","../../../properties/defaultUnit","../../../symbols/SimpleLineSymbol","../../../symbols/SimpleMarkerSymbol","../../../views/2d/grid/constants","../../../views/2d/grid/gridUtils","../../../views/2d/interactive/editingTools/draw/DrawGraphicTool2D","../../../views/2d/interactive/editingTools/ControlPointsTransformTool","../../../views/2d/interactive/editingTools/TransformTool","../../../views/2d/interactive/editingTools/MediaTransformToolsWrapper","../../../views/input/InputManager","../../../views/interactive/keybindings","../../../views/interactive/snapping/SnappingOptions","../../../views/interactive/snapping/snappingUtils","../../../views/overlay/CrosshairOverlayItem","../../../views/overlay/TextOverlayItem","../../../views/support/automaticAreaMeasurementUtils","../../../views/support/automaticLengthMeasurementUtils","../../CoordinateConversion/support/formatUtils","./gridUtils"],function(e,t,i,r,a,s,o,n,l,c,d,h,p,u,g,_,y,v,m,w,f,S,b,P,T,C,G,x,M,O,R,L,U,k,I,E,V){"use strict";const A=Symbol("grid-interactivity");e.default=class extends r.EventedAccessor{constructor(e){super(e),this._drawGraphicTool=null,this._keybindings=null,this._crosshairLabel=null,this._crosshairItem=null,this.snappingManager=null,this.snappingOptions=null,this.view=null,this.placementDisabled=!1,this._mostRecentlyShownGrid=null,this._sketchedVertexCount=0}initialize(){this.addHandles([n.when(()=>!this.displayEnabled,()=>{this.interactivePlacementState=null}),n.watch(()=>this.view?.viewpoint,()=>{this._renderOverlays()}),n.watch(()=>this.snappingOptions?.gridEnabled,e=>{null!=e&&this.trySetDisplayEnabled(e)}),n.watch(()=>this.view?.grid,(e,t)=>{this._mostRecentlyShownGrid=!e&&t?t:null})])}destroy(){this._resetGridPlacementState(),this._crosshairItem&&(this.view?.overlay?.removeItem(this._crosshairItem),this._crosshairItem=o.destroyMaybe(this._crosshairItem)),this._crosshairLabel&&(this.view?.overlay?.removeItem(this._crosshairLabel),this._crosshairLabel=o.destroyMaybe(this._crosshairLabel))}get displayEnabled(){return!!this.view?.grid}get dynamicScaling(){return this.grid?.dynamicScaling??!1}set dynamicScaling(e){this.grid&&(this.grid.dynamicScaling=e)}get grid(){return this.view?.grid??this._mostRecentlyShownGrid}set gridColor(e){if(e?.equals(this.grid?.majorLineColor))return;if(!e)return;const[t,i,r,a]=e.toArray();V.applyColorToGrid(this.grid,[t,i,r,a/255])}get gridColor(){return this.grid?.majorLineColor}get gridControlsEnabled(){return this.displayEnabled&&!this.interactivePlacementState}set interactivePlacementState(e){this._set("interactivePlacementState",e),this._resetGridPlacementState(),e&&this._startGridManipulation(e)}get majorLineInterval(){return this.grid?.majorLineInterval??10}set majorLineInterval(e){this.grid&&(this.grid.majorLineInterval=e<1?1:e>15?15:e)}get rotateWithMap(){return this.grid?.rotateWithMap??!1}set rotateWithMap(e){this.grid&&(this.grid.rotateWithMap=e)}get rotation(){return this.grid?.rotation??-180}set rotation(e){this.grid&&(this.grid.rotation=e)}get snappingEnabled(){return(this.grid&&this.snappingOptions?.gridEnabled)??!1}set snappingEnabled(e){const{snappingOptions:t}=this;t&&(t.gridEnabled=e)}get spacing(){return this.grid?.spacing??1}set spacing(e){this.grid&&e>0&&(this.grid.spacing=e)}get unit(){return this.grid?.units}set unit(e){this.grid&&(this.grid.units=e)}get gridOutOfScale(){return!this.dynamicScaling&&null!=this._pixelsPerStride&&this._pixelsPerStride<S.minimumPixelsPerStrideForDisplayWhenScalingOff}get effectiveSpacingAfterDynamicScaling(){return this.majorLineInterval<1||!this.dynamicScaling||!this.view||null==this._pixelsPerStride||!this.grid?.spacing?null:this.grid.spacing*b.getScaleFactor(this.majorLineInterval,this._pixelsPerStride,this.dynamicScaling)}get numericSpacingInputShouldBeVisible(){return!!this.view?.spatialReference&&b.shouldUsePlanar(this.view.spatialReference)}get _metersPerSRUnit(){if(!(this.view&&this.displayEnabled&&this.grid&&g.isLoadedOrLoadFor(this.grid.center.spatialReference,this.view.spatialReference)))return null;const e=g.project(this.grid.center,this.view.spatialReference);return b.measureMetersPerUnitAtReferencePoint(e)}get _pixelsPerStride(){if(!this.view?.scale||!this.displayEnabled||!this.grid||null==this._metersPerSRUnit)return null;const e=this.grid,{scale:t,spatialReference:i}=this.view;return l.convertUnit(e.spacing,e.units,"meters")/(this._metersPerSRUnit*_.getResolutionForScale(t,i))}get _isPlacing(){if(!this._drawGraphicTool)return!1;const e=this.interactivePlacementState;return"place"===e||"interactive"===e&&0===this._sketchedVertexCount}get _isRotating(){if(!this._drawGraphicTool)return!1;const e=this.interactivePlacementState;return"rotate"===e||"interactive"===e&&1===this._sketchedVertexCount}get _isScaling(){return!!this._drawGraphicTool&&"interactive"===this.interactivePlacementState&&1===this._sketchedVertexCount}togglePlacementState(e){this.interactivePlacementState=this.interactivePlacementState===e?null:e}trySetDisplayEnabled(e){const{view:t}=this;if(t?.ready)if(!t.grid&&e)if(this._mostRecentlyShownGrid)t.grid=this._mostRecentlyShownGrid;else{const e="imperial"===this.defaultUnit?"feet":"meters";t.grid=new y.MeasuredGrid({units:e,center:t.center??new u,rotateWithMap:!0}),V.applyColorToGrid(this.grid,[115,115,115])}else e||(t.grid=null);else a.getLogger(this).warn("Attempting to enable grid display while view is not ready")}async startPlacement(e){const{view:t,snappingManager:i}=this;if(!t)return;this._set("interactivePlacementState",e),this._sketchedVertexCount=0;const r=new P.DrawGraphicTool2D({view:t,graphicProperties:{attributes:{[R.gridPlacementGraphicSymbol]:R.gridPlacementGraphicSymbol}},sketchOptions:{tooltips:{enabled:!0,visibleElements:{direction:!1,rotation:!1,totalLength:!1,elevation:!1,distance:!1,area:!1}}},geometryType:"polyline",mode:"click",snapToScene:!1,snappingManager:i,forceUniformSize:!0,centered:!1,cursor:"interactive"===this.interactivePlacementState||"place"===this.interactivePlacementState?"none":null,regularVerticesSymbol:void 0,activeVertexSymbol:j,activeLineSymbol:D,graphicSymbol:D,automaticAreaMeasurementUtils:await k.loadAutomaticAreaMeasurementUtils(),automaticLengthMeasurementUtils:await I.loadAutomaticLengthMeasurementUtils()});if(this._drawGraphicTool=r,t.addAndActivateTool(r),this._renderOverlays(),!this._keybindings){const e=new M.KeyBindings;e.add(M.sketchKeys.complete,()=>this._onDrawComplete()),e.add(M.sketchKeys.vertexAdd,()=>this._drawGraphicTool?.drawOperation.commitStagedVertex()),this._keybindings=e}this.addHandles([r.on("cursor-update",e=>this._onCursorUpdate(e)),r.on("complete",()=>this._onDrawComplete()),r.on("vertex-add",t=>this._onVertexAdd(t,e)),this._keybindings.register(t,x.ViewEventPriorities.WIDGET)],A)}async _startGridManipulation(e){const{view:t}=this;if(!t)return void(this.interactivePlacementState=null);const i=new CustomEvent("before-placement",{cancelable:!0});this.emit("before-placement",i),i.defaultPrevented||await this.startPlacement(e)}_onCursorUpdate(e){try{if(this._isPlacing){const t=e.vertices[0].coordinates;return void this._handlePlace(t)}if(this._drawGraphicTool.cursor=null,this._isRotating&&this._handleRotate(e.vertices[0].coordinates),this._isScaling){const e=this._drawGraphicTool?.drawOperation.cursorVertex;this._handleScale(e)}}finally{this._renderOverlays()}}_onDrawComplete(){this._drawGraphicTool.cursor=null,this.interactivePlacementState=null}_onVertexAdd(e,t){const i=e.vertices[0].coordinates;this._isPlacing&&this._handlePlace(i),this._isRotating&&this._sketchedVertexCount>0&&this._handleRotate(i),this._isScaling&&this._sketchedVertexCount>0&&this._handleScale(v.makeDehydratedPoint(i[0],i[1],void 0,this.view.spatialReference)),this._sketchedVertexCount++,this._drawGraphicTool.cursor=null,2!==this._sketchedVertexCount&&"interactive"===t||(this.interactivePlacementState=null),this._renderOverlays()}_handlePlace(e){const{grid:t,view:i}=this;t&&i&&(t.center=new u({x:e[0],y:e[1],spatialReference:i.spatialReference}))}_handleRotate(e){const{grid:t,view:i}=this;if(!t||!i)return;this._drawGraphicTool?.sketchOptions.tooltips.set("enabled",!1);const{x:r,y:a}=t.center,[o,n]=e,l=i.toScreen(t.center,{pickClosestTarget:!0}),c=l&&i.toMap(l),d=i.toScreen(v.makeDehydratedPoint(o,n,void 0,i.spatialReference),{pickClosestTarget:!0}),h=d&&i.toMap(d),p=c?c.x:r,u=c?c.y:a,g=p-(h?h.x:o),_=u-(h?h.y:n);if(0===g&&0===_)return;const y=Math.atan2(_,g),m=s.rad2deg(y),w=t.rotateWithMap,f=i.viewpoint.rotation??0,S=w?m:m-f;t.rotation=Math.fround(S)%360}_handleScale(e){const{view:t,grid:i,_drawGraphicTool:r,interactivePlacementState:a,_metersPerSRUnit:s}=this;if(!(e&&t&&i&&r&&s))return;r.sketchOptions.tooltips.enabled=!1;const o="interactive"===a?i.center:r.drawOperation.firstVertex;if(!o||!e)return;const n=t?.toScreen(o),c=n&&t.toMap(n),d=t?.toScreen(e),h=c??o,p=(d&&t.toMap(d))??e,u=Math.sqrt((h.x-p.x)**2+(h.y-p.y)**2)*s,g=l.convertUnit(u,"meters",i.units);this.spacing=g}_renderOverlays(){this._renderCrosshairOverlay(),this._renderTextOverlay()}_renderTextOverlay(){const{grid:e,view:t,_drawGraphicTool:i}=this,r=this._getCrosshairLabel();if(!(e&&t?.overlay&&i&&r))return;const a=t.toScreen(e.center,{pickClosestTarget:!0});a&&(r.position=[a.x+12,a.y+12]),this._isRotating?(r.text=`${V.gridRotationToDegrees(e.rotation)}${E.degreeSymbol}`,r.visible=!0):r.visible=!1}_renderCrosshairOverlay(){const{grid:e,view:t,_drawGraphicTool:i}=this;if(!e||!t?.overlay||!i)return;const r=this._getCrosshair();if(!r)return;const a=t.toScreen(e.center);a&&(r.x=a.x,r.y=a.y,r.rotation=e.rotateWithMap?t.viewpoint.rotation-e.rotation:-e.rotation,r.visible=!!i)}_getCrosshairLabel(){if(this._crosshairLabel)return this._crosshairLabel;const{grid:e,view:t,_drawGraphicTool:r}=this;if(!e||!t?.overlay||!r)return null;const a=new U({anchor:"top-left",fontSize:10,textColor:new i([21,21,21]),backgroundColor:new i([248,248,248]),padding:8,borderRadius:20});return t.overlay.addItem(a),this._crosshairLabel=a,a}_getCrosshair(){const{_crosshairItem:e,view:t}=this;return t?.overlay?e&&t.overlay.items.includes(e)?e:(this._crosshairItem=new L({color:t.effectiveTheme.accentColor,thickness:4,length:36,visible:!0}),t.overlay?.addItem(this._crosshairItem),this._crosshairItem):null}_resetGridPlacementState(){this.removeHandles(A),this._crosshairItem&&(this._crosshairItem.visible=!1),this._crosshairLabel&&(this._crosshairLabel.visible=!1),this._drawGraphicTool&&(this.view?.activeTool===this._drawGraphicTool&&(this.view.activeTool=null),this.view?.tools.remove(this._drawGraphicTool)),this._drawGraphicTool=o.destroyMaybe(this._drawGraphicTool)}},t.__decorate([c.property(m.defaultUnitPropertyMetadata)],e.default.prototype,"defaultUnit",void 0),t.__decorate([c.property({readOnly:!0})],e.default.prototype,"displayEnabled",null),t.__decorate([c.property()],e.default.prototype,"dynamicScaling",null),t.__decorate([c.property()],e.default.prototype,"grid",null),t.__decorate([c.property()],e.default.prototype,"gridColor",null),t.__decorate([c.property({readOnly:!0})],e.default.prototype,"gridControlsEnabled",null),t.__decorate([c.property()],e.default.prototype,"interactivePlacementState",null),t.__decorate([c.property()],e.default.prototype,"majorLineInterval",null),t.__decorate([c.property()],e.default.prototype,"rotateWithMap",null),t.__decorate([c.property()],e.default.prototype,"rotation",null),t.__decorate([c.property()],e.default.prototype,"snappingEnabled",null),t.__decorate([c.property()],e.default.prototype,"snappingManager",void 0),t.__decorate([c.property({type:O})],e.default.prototype,"snappingOptions",void 0),t.__decorate([c.property()],e.default.prototype,"spacing",null),t.__decorate([c.property()],e.default.prototype,"unit",null),t.__decorate([c.property()],e.default.prototype,"view",void 0),t.__decorate([c.property({readOnly:!0})],e.default.prototype,"gridOutOfScale",null),t.__decorate([c.property({readOnly:!0})],e.default.prototype,"effectiveSpacingAfterDynamicScaling",null),t.__decorate([c.property({readOnly:!0})],e.default.prototype,"numericSpacingInputShouldBeVisible",null),t.__decorate([c.property()],e.default.prototype,"placementDisabled",void 0),t.__decorate([c.property()],e.default.prototype,"_metersPerSRUnit",null),t.__decorate([c.property()],e.default.prototype,"_pixelsPerStride",null),t.__decorate([c.property()],e.default.prototype,"_isPlacing",null),t.__decorate([c.property()],e.default.prototype,"_isRotating",null),t.__decorate([c.property()],e.default.prototype,"_isScaling",null),t.__decorate([c.property()],e.default.prototype,"_mostRecentlyShownGrid",void 0),t.__decorate([c.property()],e.default.prototype,"_sketchedVertexCount",void 0),e.default=t.__decorate([p.subclass("esri.widgets.support.GridControls.GridControlsViewModel")],e.default);const D=new w({width:0}),j=new f({color:i.fromArray([0,0,0,0]),outline:new w({color:i.fromArray([0,0,0,0])})});return e.default});