// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../chunks/tslib.es6","../core/deprecate","../core/Logger","../core/reactiveUtils","../core/screenUtils","../core/accessorSupport/decorators/property","../core/has","../core/RandomLCG","../core/accessorSupport/decorators/subclass","../intl/number","../properties/defaultUnit","./Widget","./ScaleBar/css","./ScaleBar/ScaleBarViewModel","./support/globalCss","./support/widgetUtils","./support/decorators/messageBundle","./support/jsxFactory"],function(e,t,s,r,i,o,a,l,c,n,d,p,u,h,v,b,y,g){"use strict";function _(e,t){return n.formatNumber(e,{style:"unit",unit:t,unitDisplay:"short"})}let w=class extends p{constructor(e,r){super(e,r),this.messages=null,this.style="line",this.viewModel=new h,t.deprecateWidget(s.getLogger(this),"Scale Bar","arcgis-scale-bar",{version:"4.32"})}initialize(){this.addHandles(r.watch(()=>{const{view:e}=this;return[e?.stationary,e?.center,e?.scale,e?.zoom]},([e])=>{e&&this.scheduleRender()}))}get icon(){return"actual-size"}set icon(e){this._overrideIfSome("icon",e)}get label(){return this.messages?.widgetLabel??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this._defaultUnit}set unit(e){this._overrideIfSome("unit",e)}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}render(){const e="disabled"===this.viewModel.state,t={[v.globalCss.disabled]:e};let s,r;if(!e){const{unit:e,style:t}=this,i="metric"===e||"dual"===e,o=100,a="dual"===e?"line":t;if("imperial"===e||"dual"===e){const e=this.viewModel.getScaleBarProperties(o,"imperial");e&&(r="ruler"===a?this._renderRuler(e):this._renderLine(e,"bottom"))}if(i){const e=this.viewModel.getScaleBarProperties(o,"metric");e&&(s="ruler"===a?this._renderRuler(e):this._renderLine(e,"top"))}}return g.tsx("div",{afterCreate:this._handleRootCreateOrUpdate,afterUpdate:this._handleRootCreateOrUpdate,bind:this,class:this.classes(u.css.base,v.globalCss.widget,t)},s,r)}_renderRuler(e){const{length:t,unit:s,value:r}=e,i=Math.round(t),o=_(r,s);return g.tsx("div",{class:this.classes(u.css.barContainer,u.css.rulerBarContainer),key:u.css.rulerBarContainer},g.tsx("div",{class:u.css.ruler,styles:{width:`${i}px`}},g.tsx("div",{class:u.css.rulerBlock}),g.tsx("div",{class:u.css.rulerBlock}),g.tsx("div",{class:u.css.rulerBlock}),g.tsx("div",{class:u.css.rulerBlock})),g.tsx("div",{class:this.classes(u.css.labelContainer,u.css.rulerLabelContainer)},g.tsx("div",{class:u.css.label},"0"),g.tsx("div",{class:u.css.label},o)))}_renderLine(e,t){const{length:s,unit:r,value:i}=e,o=Math.round(s),a=_(i,r),l={[u.css.topLabelContainer]:"top"===t,[u.css.bottomLabelContainer]:"bottom"===t},c=g.tsx("div",{class:this.classes(u.css.labelContainer,u.css.lineLabelContainer,l),key:u.css.labelContainer},g.tsx("div",{class:u.css.label},a)),n={[u.css.topLine]:"top"===t,[u.css.bottomLine]:"bottom"===t},d=g.tsx("div",{class:this.classes(u.css.line,n),key:u.css.line,styles:{width:`${o}px`}});return g.tsx("div",{class:this.classes(u.css.barContainer,u.css.lineBarContainer),key:u.css.lineBarContainer},[d,c])}_handleRootCreateOrUpdate(e){if(!this.viewModel)return;const{scaleComputedFrom:t}=this.viewModel,s=e.getBoundingClientRect(),r=s.left+window.pageXOffset,o=s.top+window.pageYOffset,a=i.createScreenPoint(r,o);(a.x!==t.x||a.y!==t.y)&&(this.viewModel.scaleComputedFrom=a)}};return e.__decorate([o.property(d.defaultUnitPropertyMetadata)],w.prototype,"_defaultUnit",void 0),e.__decorate([o.property()],w.prototype,"icon",null),e.__decorate([o.property()],w.prototype,"label",null),e.__decorate([o.property(),y.messageBundle("esri/widgets/ScaleBar/t9n/ScaleBar")],w.prototype,"messages",void 0),e.__decorate([o.property({type:["ruler","line"]})],w.prototype,"style",void 0),e.__decorate([o.property({type:["metric","imperial","dual"]})],w.prototype,"unit",null),e.__decorate([o.property()],w.prototype,"view",null),e.__decorate([o.property()],w.prototype,"viewModel",void 0),w=e.__decorate([c.subclass("esri.widgets.ScaleBar")],w),w});