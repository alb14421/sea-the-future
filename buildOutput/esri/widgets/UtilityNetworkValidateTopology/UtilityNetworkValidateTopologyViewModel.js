// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../intl","../../core/Accessor","../../core/Collection","../../core/Error","../../core/Logger","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/support/UpdatingHandles","../../layers/support/layerUtils","../../portal/Portal","../../portal/support/utils","../../intl/locale","../../intl/messages"],function(t,e,i,r,s,o,a,n,l,d,c,h,p,y,u,_,w){"use strict";let g=class extends i{constructor(t){super(t),this._activeOperationDidSucceed=!1,this._initialValidationsFinished=!1,this._dirtyAreasLayer=null,this._serverVersion=null,this._updatingHandles=new h.UpdatingHandles,this._validConstructProperties=!1,this.executionError="",this.extentToValidate="current",this.loadErrors=new r}initialize(){const t=async()=>{this.messages||(this.messages=await w.fetchMessageBundle("esri/widgets/UtilityNetworkValidateTopology/t9n/UtilityNetworkValidateTopology"))};t().then(()=>{this.view||(this.view=null),this.utilityNetwork||(this.utilityNetwork=null),this.addHandles([a.watch(()=>[this.view,this.utilityNetwork],async()=>{const{loadErrors:t,messages:{info:{noUtilityNetwork:e,noView:i}}}=this;this._initialValidationsFinished=!1,t.removeAll(),this._validConstructProperties=!0,this._dirtyAreasLayer=null,this._serverVersion=null,"utility"!==this.utilityNetwork?.type&&(this.loadErrors.push(e),o.getLogger(this).error(new s("utilityNetworkValidateTopology:missing-property",e)),this._validConstructProperties=!1),"2d"!==this.view?.type&&(this.loadErrors.push(i),o.getLogger(this).error(new s("utilityNetworkValidateTopology:missing-property",i)),this._validConstructProperties=!1),this._validConstructProperties&&(this.utilityNetwork.loaded||await this.utilityNetwork.load().catch(t=>{o.getLogger(this).error(t),this._validConstructProperties=!1}),await this._setDirtyAreasLayer()),this._validConstructProperties&&await this._validateNetworkExtension()},a.initial),a.on(()=>this.view?.map?.layers,"change",async()=>{const{loadErrors:t,messages:{info:{noUtilityNetwork:e}}}=this,i=t.find(t=>t===e);this._initialValidationsFinished=!1,i||(t.removeAll(),await this._validateNetworkExtension(),await this._setDirtyAreasLayer()),this._initialValidationsFinished=!0}),_.onLocaleChange(t)])})}destroy(){this._updatingHandles.destroy()}get state(){return this.loadErrors.length||!this._validConstructProperties?"disabled":this.executionError?"failed":this._updatingHandles.updating?"executing":this._activeOperationDidSucceed?"success":this._initialValidationsFinished?"ready":"loading"}set utilityNetwork(t){this._get("utilityNetwork")!==t&&this._set("utilityNetwork",t)}set view(t){this._get("view")!==t&&this._set("view",t)}async validateTopology(){const{messages:{info:{cannotAcquireVersionLock:t,noDirtyAreasInExtent:e}},utilityNetwork:i,view:r}=this;if(!this.loadErrors.length){this._activeOperationDidSucceed=!1,this._set("executionError","");const o={gdbVersion:i?.gdbVersion,outSpatialReference:r.spatialReference?.clone()||null,validateArea:"current"===this.extentToValidate?r.extent.clone():i.fullExtent.clone()};this._updatingHandles.addPromise(i?.validateTopology(o).then(()=>{this._activeOperationDidSucceed=!0},i=>{let r="Error: "+i;if(i instanceof s&&i.details?.raw)switch(i.details.raw.extendedCode){case-2147208940:r=e;break;case-2147217146:case-2147220947:r=t;break;default:r=i.details.message}this._set("executionError",r)}))}}async _setDirtyAreasLayer(){const{messages:{info:{noDirtyAreasLayer:t}}}=this,e=this.view?.map.allLayers.items.filter(t=>p.isFeatureLayer(t)).find(t=>t.parsedUrl?.path===this.utilityNetwork?.networkSystemLayers.dirtyAreasLayerUrl);e?(this._dirtyAreasLayer=e,await this._dirtyAreasLayer.load(),this._serverVersion=this._dirtyAreasLayer.version??0,this._validConstructProperties=!0):(this.loadErrors.includes(t)||(this.loadErrors.push(t),o.getLogger(this).error(new s("utilityNetworkValidateTopology:missing-layer",t))),this._validConstructProperties=!1)}async _validateNetworkExtension(){const{messages:{info:{noAdvancedEditingUserTypeExtension:t,noUtilityNetworkServiceUserTypeExtension:e}}}=this,i=await p.getOwningPortalUrl(this.utilityNetwork.layerUrl),r=new y({url:i});await r.load();const a=r.user?.username??"",n=Number(this._serverVersion)<=11.1?"utilityNetwork":"advediting";if(!await u.hasUserTypeExtension(r,a,n)){const i=Number(this._serverVersion)<=11.1?e:t;this.loadErrors.push(i),o.getLogger(this).error(new s("utilityNetworkValidateTopology:no-user-type-extension",i)),this._validConstructProperties=!1}this._initialValidationsFinished=!0}};return t.__decorate([n.property()],g.prototype,"_initialValidationsFinished",void 0),t.__decorate([n.property()],g.prototype,"_dirtyAreasLayer",void 0),t.__decorate([n.property()],g.prototype,"_validConstructProperties",void 0),t.__decorate([n.property({readOnly:!0})],g.prototype,"executionError",void 0),t.__decorate([n.property()],g.prototype,"extentToValidate",void 0),t.__decorate([n.property()],g.prototype,"loadErrors",void 0),t.__decorate([n.property()],g.prototype,"messages",void 0),t.__decorate([n.property({readOnly:!0})],g.prototype,"state",null),t.__decorate([n.property()],g.prototype,"utilityNetwork",null),t.__decorate([n.property()],g.prototype,"view",null),g=t.__decorate([c.subclass("esri.widgets.UtilityNetworkValidateTopology.UtilityNetworkValidateTopologyViewModel")],g),g});