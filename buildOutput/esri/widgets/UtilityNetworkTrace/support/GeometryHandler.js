// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../geometry/geometryEngine","../../../geometry/Polyline","../../../geometry/projectionUtils","../../../geometry/SpatialReference"],function(e,t,r,n,o){"use strict";function a(e){return"polygon"===e.type||"polyline"===e.type}e.GeometryHandler=class{createBuffer(e,r,n,a){if(Array.isArray(e)){if(e.length>0){const i=o.fromJSON(e[0].spatialReference);return i.isWGS84||i.isWebMercator?t.geodesicBuffer(e,r,n,a):t.buffer(e,r,n,a)}return}const i=o.fromJSON(e.spatialReference);return i.isWGS84||i.isWebMercator?t.geodesicBuffer(e,r[0],n):t.buffer(e,r[0],n)}createConvexHull(e){if(Array.isArray(e)){if(1===e.length&&function(e){return function(e){return e.hasOwnProperty("points")}(e)&&2===e.points.length}(e[0])){const r=t.convexHull(e[0]);if(a(r))return r}return t.convexHull(e,!0).filter(a)}const r=t.convexHull(e);if(a(r))return r}calculateArea(e,r){const n=new o({wkid:e.spatialReference.wkid});return n.isWGS84||n.isWebMercator?parseFloat(t.geodesicArea(e,r).toFixed(2)):parseFloat(t.planarArea(e,r).toFixed(2))}mergeAggregatedToGeometries(e){const t=[],{line:r,multipoint:n,polygon:o}=e;return r&&t.push(r),n&&t.push(n),o&&t.push(o),t}getPercentageAlong(e,r,o){let a=e;const i=this._createPolyline(e.paths,o.wkid);if("point"===r.type){const e=r.x-.5,l=r.x+.5,s=[[[e,r.y-.5],[l,r.y+.5]]];a=this._createPolyline(s,r.spatialReference.wkid),a=n.project(a,o);const c=t.cut(i,a);if(c.length>0){const e=t.planarLength(i,"feet");let r;return r=c[0].paths[0][0][0]===i.paths[0][0][0]?t.planarLength(c[0],"feet"):t.planarLength(c[1],"feet"),[r/e]}return[.5]}a=n.project(r,o);const l=t.cut(i,a);if(l.length>0){const e=t.planarLength(i,"feet");return[t.planarLength(l[0],"feet")/e]}return[.5]}async projectGeometry(e,t){return await n.load(),n.project(e,t)}_createPolyline(e,t){return new r({hasZ:!1,hasM:!0,paths:e,spatialReference:new o({wkid:t})})}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});