// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../core/Accessor","../../core/Collection","../../core/Error","../../core/Logger","../../core/reactiveUtils","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/support/UpdatingHandles","../../layers/support/layerUtils","../../portal/Portal","../../portal/support/utils","../../rest/featureService/FeatureService","../../rest/featureService/utils","../../versionManagement/utils","../../versionManagement/VersioningState","../../versionManagement/VersionManagementService","../../versionManagement/versionAdapters/utils"],function(e,r,t,o,i,s,n,a,d,u,l,p,h,v,c,g,m,w,_,f,L){"use strict";let S=class extends r{constructor(e){super(e),this._portalLookup=new Map,this._updatingHandlesLoad=new p.UpdatingHandles,this._updatingHandlesExecute=new p.UpdatingHandles,this.executionError=void 0,this.featureServiceLookup=new Map,this.loadError=void 0,this.serverVersionLookup=new Map,this.serviceNameLookup=new Map,this.userLookup=new Map,this.versionIdentifierLookup=new Map,this.versionInfoLookup=new Map,this.versionAdministratorLookup=new Map,this.versionManagementServiceLookup=new Map,this.versioningStateLookup=new Map,this.view=null,this.versioningStates=null}initialize(){this._viewChangeHandle(),this.addHandles([s.watch(()=>this.view,()=>{this._resetAllLookupProperties(),this._viewChangeHandle()}),s.watch(()=>this.versioningStates,()=>{this._resetVersioningLookupProperties(),this._setVersioningStatesLookups()})])}destroy(){this._updatingHandlesLoad.destroy(),this._updatingHandlesExecute.destroy()}get state(){return this._updatingHandlesLoad.updating?"loading":this.loadError?"disabled":this._updatingHandlesExecute.updating?"executing":this.executionError?"failed":"ready"}async alterVersion(e){return this._updatingHandlesExecute.addPromise(this._alterVersionInternal(e))}async changeVersion(e,r,t){return this._updatingHandlesExecute.addPromise(this._changeVersionInternal(e,r,t))}async createVersion(e){return this._updatingHandlesExecute.addPromise(this._createVersionInternal(e))}async deleteVersion(e,r,t){return this._updatingHandlesExecute.addPromise(this._deleteVersionInternal(e,r,t))}async getVersionInfos(e){return this._updatingHandlesExecute.addPromise(this._getVersionInfosInternal(e))}async _alterVersionInternal(e){if("disabled"===this.state)throw this._logError("version-management-view-model:load-error",this.loadError),new o("version-management-view-model:load-error",this.loadError??"");this._setExecutionError();const r=this.versioningStateLookup.get(e.featureServerUrl);if(!r)throw this._logError("version-management-view-model:execution-error","no-versioning-state-found"),new o("version-management-view-model:execution-error",this.executionError??"");if(!this.serverVersionLookup.has(e.featureServerUrl)||this.serverVersionLookup.get(e.featureServerUrl)<=11.1)throw this._logError("version-management-view-model:execution-error","no-valid-enterprise-version"),new o("version-management-view-model:execution-error",this.executionError??"");const{featureServerUrl:t,versionIdentifier:i,...s}=e,n=await r.alterVersion(i,s).catch(e=>{throw this._logExecutionError(e),e});return await this.getVersionInfos(t),n}async _changeVersionInternal(e,r,t){if("disabled"===this.state)throw this._logError("version-management-view-model:load-error",this.loadError),new o("version-management-view-model:load-error",this.loadError??"");this._setExecutionError();const i=this.versioningStateLookup.get(e);if(!i)throw this._logError("version-management-view-model:execution-error","no-versioning-state-found"),new o("version-management-view-model:execution-error",this.executionError??"");const s={name:r,guid:t};return await i.changeVersion(s).catch(e=>{throw this._logExecutionError(e),e})}_updateVersionableItems(e){this._updatingHandlesLoad.addPromise((async()=>{L.createVersionAdapters(e.added).forEach(e=>{const r=e.featureServiceUrl,t=this.versioningStateLookup.get(r);t&&(t.versionableItems.find(r=>r.versionableItem===e.versionableItem)||t.versionableItems.add(e))}),L.createVersionAdapters(e.removed).forEach(e=>{const{allLayers:r,allTables:t}=this.view.map,o=e.featureServiceUrl,i=this.versioningStateLookup.get(o);if(!i)return void this._logError("version-management-view-model:execution-error","no-version-management-service-found");const s=e=>("feature"===e.type||"subtype-group"===e.type)&&(e.url?.includes(o)??!1);[...r.filter(s),...t.filter(s)].length||(this.featureServiceLookup.delete(o),this.serviceNameLookup.delete(o),this.versioningStateLookup.delete(o),this.versioningStates.remove(i));const n=i.versionableItems.find(r=>r.versionableItem===e.versionableItem);n&&i.versionableItems.remove(n)})})())}async _createVersionInternal(e){if("disabled"===this.state)throw this._logError("version-management-view-model:load-error",this.loadError),new o("version-management-view-model:load-error",this.loadError??"");this._setExecutionError();const r=e.featureServerUrl,t=this.versioningStateLookup.get(r);if(!t)throw this._logError("version-management-view-model:execution-error","no-versioning-state-found"),new o("version-management-view-model:execution-error",this.executionError??"");const i=this.userLookup.get(r).toUpperCase(),s=this._isEmptyString(e.ownerName)?i:e.ownerName?.trim().toUpperCase();if(s!==i&&this.serverVersionLookup.get(r)<=11.1)throw this._logError("version-management-view-model:execution-error","versioning-api-error"),new o("version-management-view-model:execution-error",this.executionError??"");let n=await(this.versioningStateLookup.get(r)?.getVersionInfos());if("SDE"===s?.toUpperCase()&&"DEFAULT"===e.versionName.toUpperCase()||n?.find(r=>r.versionIdentifier.name.toUpperCase()===(s+"."+e.versionName).toUpperCase()||r.versionIdentifier.name.toUpperCase()===(i+"."+e.versionName).toUpperCase()))throw this._logError("version-management-view-model:execution-error","no-valid-version-name"),new o("version-management-view-model:execution-error",this.executionError??"");const a=await t.versionManagementService.createVersion({versionName:e.versionName,access:s!==i?"public":e.access,description:e.description}).catch(e=>{throw this._logExecutionError(e),e});if(s!==i){const{guid:t,name:o}=a.versionIdentifier,n={featureServerUrl:r,versionIdentifier:{guid:t,name:o},access:e.access,ownerName:s};await this.alterVersion(n)||this.deleteVersion(r,i+"."+e.versionName,a.versionIdentifier.guid)}return await this.getVersionInfos(r),n=await(this.versioningStateLookup.get(r)?.getVersionInfos()),n?.find(e=>e.versionIdentifier.guid===a.versionIdentifier.guid)}async _deleteVersionInternal(e,r,t){if("disabled"===this.state)throw this._logError("version-management-view-model:load-error",this.loadError),new o("version-management-view-model:load-error",this.loadError??"");this._setExecutionError();const i=this.versioningStateLookup.get(e);if(!i)throw this._logError("version-management-view-model:execution-error","no-versioning-state-found"),new o("version-management-view-model:execution-error",this.executionError??"");if(this.serverVersionLookup.get(e)<=11.1)throw this._logError("version-management-view-model:execution-error","versioning-api-error"),new o("version-management-view-model:execution-error",this.executionError??"");const s={name:r,guid:t};return await i.deleteVersion(s).catch(e=>{throw this._logExecutionError(e),new o("version-management-view-model:execution-error",this.executionError??"")})}async _getVersionInfosInternal(e){if("disabled"===this.state)throw this._logError("version-management-view-model:load-error",this.loadError),new o("version-management-view-model:load-error",this.loadError??"");this._setExecutionError();const r=this.featureServiceLookup.get(e)?.featureService;if(!r)throw this._logError("version-management-view-model:execution-error","no-feature-service-found"),new o("version-management-view-model:execution-error",this.executionError??"");r.loaded||await r.load().catch(e=>{throw this._logExecutionError(e),e});const t=r.url;this.serverVersionLookup.set(t,r.sourceJSON?.currentVersion??0);const i=this.userLookup.get(e);this._portalLookup.get(e)&&i?this.versionAdministratorLookup.set(t,await c.hasPrivilege(this._portalLookup.get(e),i,"features:user:manageVersions")):this.versionAdministratorLookup.set(t,!1);const s=this.versioningStateLookup.get(e);if(!s)throw this._logError("version-management-view-model:execution-error","no-versioning-state-found"),new o("version-management-view-model:execution-error",this.executionError??"");return s.loaded||await s.load().catch(e=>{throw this._logExecutionError(e),e}),await s.getVersionInfos(!0).catch(e=>{throw this._logExecutionError(e),e})}_isEmptyString(e){return!e||0===e.trim().length}_logError(e,r){switch(i.getLogger(this).error(new o(e,r??"")),e){case"version-management-view-model:load-error":this._setLoadError(r);break;case"version-management-view-model:execution-error":this._setExecutionError(r)}}_logExecutionError(e){this._logError("version-management-view-model:execution-error",e.message)}async _viewChangeHandle(){this._updatingHandlesLoad.addPromise((async()=>{if(this._setLoadError(),!this.view)return void this._setLoadError("no-view-property");if(this.view&&"2d"!==this.view.type)return void this._logError("version-management-view-model:load-error","sceneView-not-supported");this.removeHandles("map-change-handle"),this.addHandles([s.watch(()=>this.view?.map,()=>{this._resetAllLookupProperties(),this._mapChangeHandle(this.versioningStates)})],"map-change-handle");const e=await this._getVersioningStates();await this._mapChangeHandle(e)})())}async _mapChangeHandle(e){this._updatingHandlesLoad.addPromise((async()=>{this._setLoadError(),this.removeHandles("map-layers-tables-change-handle"),this.addHandles([s.on(()=>this.view?.map.allLayers,"change",e=>{(e.added.some(({type:e})=>"feature"===e)||e.removed.some(({type:e})=>"feature"===e)||e.added.some(({type:e})=>"subtype-group"===e)||e.removed.some(({type:e})=>"subtype-group"===e))&&(this._resetServiceRelatedLookupProperties(),this._propertiesChangeInternal(this.versioningStates),this._updateVersionableItems(e))}),s.on(()=>this.view?.map.allTables,"change",e=>{(e.added.some(({type:e})=>"feature"===e)||e.removed.some(({type:e})=>"feature"===e)||e.added.some(({type:e})=>"subtype-group"===e)||e.removed.some(({type:e})=>"subtype-group"===e))&&(this._resetServiceRelatedLookupProperties(),this._propertiesChangeInternal(this.versioningStates),this._updateVersionableItems(e))})],"map-layers-tables-change-handle"),await this._propertiesChangeInternal(e)})())}async _propertiesChangeInternal(e){this._updatingHandlesLoad.addPromise((async()=>{const r=e=>"feature"===e.type||"subtype-group"===e.type,{allLayers:t,allTables:o}=this.view.map;if(this._setLoadError(),this.featureServiceLookup=m.createFeatureServices([...t.filter(r),...o.filter(r)]),this.featureServiceLookup.size){this._updateFeatureServiceLookup(e),this.serviceNameLookup=new Map;for(const e of this.featureServiceLookup.values()){const{featureService:r,featureService:{url:t}}=e;if(!this.serviceNameLookup.has(t)){if(r.loaded||await r.load().catch(e=>{i.getLogger(this).error(e)}),!r.versionManagementServiceUrl){this.featureServiceLookup.delete(t);continue}const e=await h.getOwningPortalUrl(t),o=new v({authMode:"immediate",url:e});await o.load().catch(e=>{i.getLogger(this).error(e)});const s=o.user?.username;if(!r.loaded||!o.loaded||!s)continue;this.serviceNameLookup.set(n.removeTrailingSlash(t),t.split("/").at(-2)),this.userLookup.set(t,s),this._portalLookup.set(t,o)}}this.removeHandles("versioning-states-change-handle"),e.forEach(e=>this._handleVersioningStateLookupUpdate(e)),await this._updateVersioningStates(e),this.versioningStates=e}else this._logError("version-management-view-model:load-error","no-feature-services")})())}_updateFeatureServiceLookup(e){for(const r of e){const e=r.featureServiceUrl;if(!this.featureServiceLookup.has(e)){const t=new g({url:e}),o=r.versionableItems.toArray().flatMap(e=>"network"===e.type?null:e.versionableItem).filter(e=>!!e);this.featureServiceLookup.set(e,{featureService:t,layers:o})}}}async _updateVersioningStates(e){for(const r of this.featureServiceLookup.values()){const o=r.featureService;if(o.versionManagementServiceUrl){if(!e.find(e=>e.featureServiceUrl===o.url)&&o.versionManagementServiceUrl){const i=new t(L.createVersionAdapters(r.layers)),s=new _({versionManagementService:new f({url:o.versionManagementServiceUrl}),versionableItems:i});e.add(s),this._handleVersioningStateLookupUpdate(s)}await this.getVersionInfos(o.url)}}}async _getVersioningStates(){return this.versioningStates&&this.versioningStates.length?this.versioningStates:this.view?await w.getVersioningStates(this.view,!1):(this._logError("version-management-view-model:load-error","no-view-property"),new t)}_handleVersioningStateLookupUpdate(e){this.versioningStateLookup.set(e.featureServiceUrl,e),this._addHandlesToVersioningState(e),this.versionIdentifierLookup.set(e.featureServiceUrl,e.currentVersionInfo?.versionIdentifier),this.versionManagementServiceLookup.set(e.featureServiceUrl,e.versionManagementService)}async _setVersioningStatesLookups(){this._updatingHandlesLoad.addPromise((async()=>{this.versioningStates&&(this.removeHandles("versioning-states-change-handle"),this._updateFeatureServiceLookup(this.versioningStates),this.versioningStates.forEach(e=>this._handleVersioningStateLookupUpdate(e)),await this._updateVersioningStates(this.versioningStates))})())}_addHandlesToVersioningState(e){this.addHandles([s.watch(()=>e.versionInfos,()=>{this.versionInfoLookup.set(e.featureServiceUrl,e.versionInfos)}),s.watch(()=>e.currentVersionInfo?.versionIdentifier,()=>{this.versionIdentifierLookup.set(e.featureServiceUrl,e.currentVersionInfo?.versionIdentifier)})],"versioning-states-change-handle")}_resetVersioningLookupProperties(){this.versionIdentifierLookup=new Map,this.versionInfoLookup=new Map,this.versionManagementServiceLookup=new Map,this.versioningStateLookup=new Map}_resetAllLookupProperties(){this._portalLookup=new Map,this.serverVersionLookup=new Map,this.userLookup=new Map,this.versioningStates=new t,this._resetVersioningLookupProperties(),this._resetServiceRelatedLookupProperties()}_resetServiceRelatedLookupProperties(){this.featureServiceLookup=new Map,this.serviceNameLookup=new Map}_setExecutionError(e){this._set("executionError",e)}_setLoadError(e){this._set("loadError",e)}};return e.__decorate([a.property()],S.prototype,"_portalLookup",void 0),e.__decorate([a.property({readOnly:!0})],S.prototype,"executionError",void 0),e.__decorate([a.property()],S.prototype,"featureServiceLookup",void 0),e.__decorate([a.property({readOnly:!0})],S.prototype,"loadError",void 0),e.__decorate([a.property()],S.prototype,"serverVersionLookup",void 0),e.__decorate([a.property()],S.prototype,"serviceNameLookup",void 0),e.__decorate([a.property({readOnly:!0})],S.prototype,"state",null),e.__decorate([a.property()],S.prototype,"userLookup",void 0),e.__decorate([a.property()],S.prototype,"versionIdentifierLookup",void 0),e.__decorate([a.property()],S.prototype,"versionInfoLookup",void 0),e.__decorate([a.property()],S.prototype,"versionAdministratorLookup",void 0),e.__decorate([a.property()],S.prototype,"versionManagementServiceLookup",void 0),e.__decorate([a.property()],S.prototype,"versioningStateLookup",void 0),e.__decorate([a.property()],S.prototype,"view",void 0),e.__decorate([a.property()],S.prototype,"versioningStates",void 0),S=e.__decorate([l.subclass("esri.widgets.VersionManagement.VersionManagementViewModel")],S),S});