// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../Widget","./BuildingDisciplinesNode","../../../chunks/componentsUtils","../../support/widgetUtils","../../support/jsxFactory"],function(e,i,s,t,r,o,l,n,c,d,p,a){"use strict";const u={expand:"expand",collapse:"collapse",hideSublayer:"hideSublayer",showSublayer:"showSublayer"};let g=class extends n{constructor(e){super(e),this.toggleSiblingsVisibility=!1}loadDependencies(){return Promise.allSettled([d.loadCalciteComponents({tree:()=>new Promise((i,s)=>e(["../../../chunks/index43"],i,s))}),c.loadDependencies()])}static{this.vnodeSelector="calcite-tree"}render(){const{vm:e}=this,i=this.toggleSiblingsVisibility,s=this.messages??u;return a.tsx("calcite-tree",{class:"esri-building-disciplines-tree",lines:!0,selectionMode:"none"},e.root.children.toArray().filter(e=>!e.isDiscipline||e.hasChildren).reverse().map(e=>a.tsx(c,{messages:s,node:e,toggleSiblingsVisibility:i})))}};return i.__decorate([s.property()],g.prototype,"vm",void 0),i.__decorate([s.property()],g.prototype,"messages",void 0),i.__decorate([s.property()],g.prototype,"toggleSiblingsVisibility",void 0),g=i.__decorate([l.subclass("esri.widgets.BuildingExplorer.BuildingDisciplinesTree.BuildingDisciplinesTree")],g),g});