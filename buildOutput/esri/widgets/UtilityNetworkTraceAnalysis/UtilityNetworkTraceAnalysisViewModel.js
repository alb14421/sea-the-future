// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../core/Accessor","../../core/Error","../../core/Logger","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/support/UpdatingHandles","../../layers/FeatureLayer","../../layers/support/layerUtils","../../portal/Portal","../../portal/support/utils"],function(r,t,e,o,i,s,a,n,l,d,c,u,h,p){"use strict";let y=class extends t{constructor(r){super(r),this._updatingHandlesLoad=new d.UpdatingHandles,this._updatingHandlesExecute=new d.UpdatingHandles}initialize(){this.addHandles([i.watch(()=>[this.utilityNetwork,this.view],()=>{this._setUp()},{initial:!0})])}destroy(){this._updatingHandlesLoad.destroy(),this._updatingHandlesExecute.destroy()}get executionError(){return this._executionError}get loadError(){return this._loadError}get state(){return this._updatingHandlesLoad.updating?"loading":this.loadError?"disabled":this._updatingHandlesExecute.updating?"executing":"ready"}get utilityNetwork(){return this.utilityNetwork}set utilityNetwork(r){this._get("utilityNetwork")!==r&&this._set("utilityNetwork",r)}get view(){return this.view}set view(r){this._get("view")!==r&&this._set("view",r)}async executeNamedTraceConfiguration(r){return this._updatingHandlesExecute.addPromise(this._executeNamedTraceConfiguration(r))}async executeTraceConfiguration(r){return this._updatingHandlesExecute.addPromise(this._executeTraceConfiguration(r))}async _executeNamedTraceConfiguration(r){if("disabled"===this.state){const r="trace-analysis-view-model:load-error";throw this._logError(r,this.loadError),new e(r,this.loadError??"")}return this._executionError=null,await this.utilityNetwork.trace(r).catch(r=>{throw this._executionError="trace-error",this._logError("trace-analysis-view-model:execution-error",this.executionError),r})}async _executeTraceConfiguration(r){if("disabled"===this.state){const r="trace-analysis-view-model:load-error";throw this._logError(r,this.loadError),new e(r,this.loadError??"")}return this._executionError=null,await this.utilityNetwork.trace(r).catch(r=>{throw this._executionError="trace-error",this._logError("trace-analysis-view-model:execution-error",this.executionError),r})}_logError(r,t){o.getLogger(this).error(new e(r,t??""))}async _setUp(){const{utilityNetwork:r,view:t}=this;this._updatingHandlesLoad.addPromise((async()=>{this._loadError=null;const o="trace-analysis-view-model:load-error";if(!t)throw this._loadError="no-view",this._logError(o,this.loadError),new e(o,this.loadError??"");if("2d"!==t.type)throw this._loadError="sceneView-not-supported",this._logError(o,this._loadError),new e(o,this.loadError??"");if("utility"!==r?.type)throw this._loadError="no-utility-network",this._logError(o,this.loadError),new e(o,this.loadError??"");r.loaded||await r.load().catch(r=>{throw this._loadError="no-utility-network",this._logError(o,this.loadError),r}),await this._checkUserTypeExtension(r)})())}async _checkUserTypeExtension(r){const t=new c({url:r.networkSystemLayers.dirtyAreasLayerUrl});await t.load();const o=t.version;if(Number(o)<=11.1){const t=await u.getOwningPortalUrl(r.layerUrl),o=new h({url:t});await o.load();const i=o.user?.username??"";if(!await p.hasUserTypeExtension(o,i,"utilityNetwork")){const r="trace-analysis-view-model:load-error";throw this._loadError="no-user-type-extension",this._logError(r,this.loadError),new e(r,this.loadError??"")}}}};return r.__decorate([s.property()],y.prototype,"_executionError",void 0),r.__decorate([s.property()],y.prototype,"_loadError",void 0),r.__decorate([s.property()],y.prototype,"executionError",null),r.__decorate([s.property()],y.prototype,"loadError",null),r.__decorate([s.property({readOnly:!0})],y.prototype,"state",null),r.__decorate([s.property()],y.prototype,"utilityNetwork",null),r.__decorate([s.property()],y.prototype,"view",null),y=r.__decorate([l.subclass("esri.widgets.UtilityNetworkTraceAnalysis.UtilityNetworkTraceAnalysisViewModel")],y),y});