// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Accessor","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","./support/inputUtils"],function(t,e,r,p,i,o,s,l){"use strict";let n=class extends e{constructor(t){super(t),this.inputs=[],this.template=null}get allFieldInputs(){const t=[];for(const e of this.inputs)l.isFieldInput(e)?t.push(e):l.isGroupInput(e)&&t.push(...e.inputs.filter(l.isFieldInput));return t}get description(){return this.template?.description??null}get hasInvalidHiddenInputs(){return this.invalidHiddenInputs.length>0}get invalidFeatures(){return Array.from(new Set(this.allFieldInputs.flatMap(t=>t.invalidFeatures)))}get invalidHiddenInputs(){return this.allFieldInputs.filter(t=>!t.valid&&!t.effectiveVisible)}get title(){return this.template?.title??null}get valid(){return this.allFieldInputs.every(t=>t.valid)}};return t.__decorate([r.property()],n.prototype,"allFieldInputs",null),t.__decorate([r.property()],n.prototype,"description",null),t.__decorate([r.property()],n.prototype,"inputs",void 0),t.__decorate([r.property()],n.prototype,"hasInvalidHiddenInputs",null),t.__decorate([r.property()],n.prototype,"invalidFeatures",null),t.__decorate([r.property()],n.prototype,"invalidHiddenInputs",null),t.__decorate([r.property()],n.prototype,"template",void 0),t.__decorate([r.property()],n.prototype,"title",null),t.__decorate([r.property()],n.prototype,"valid",null),n=t.__decorate([s.subclass("esri.widgets.BatchAttributeForm.inputs.BatchFormInputs")],n),n});