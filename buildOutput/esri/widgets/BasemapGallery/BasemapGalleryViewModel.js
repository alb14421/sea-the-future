// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../Basemap","../../core/Collection","../../core/Loadable","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/cast","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../geometry/projectionUtils","../../geometry/support/spatialReferenceUtils","../../linkChart/utils","../../support/basemapEnsureType","../../support/basemapUtils","./support/basemapCompatibilityUtils","./support/BasemapGalleryItem","./support/LocalBasemapsSource","./support/PortalBasemapsSource"],function(e,t,a,s,i,r,o,n,p,c,l,u,d,m,h,y,v,b,_){"use strict";const f=a.ofType(v);let w=class extends s.Loadable{constructor(e){super(e),this._loadingProjectionEngine=!1,this.items=new f,this.source=new _,this.view=null}initialize(){const e=()=>this._recreateItems();this.addHandles([i.watch(()=>"ready"===this.state?this.compatibilityFunction:null,()=>this._updateItems()),i.on(()=>this.source?.basemaps,"change",e,{onListenerAdd:e}),i.when(()=>this.view,()=>{this.source instanceof _&&(this.source.viewType=this.view?.type)},{once:!0})])}destroy(){const e=this.source.basemaps.find(e=>e===this.activeBasemap);e&&this.source.basemaps.remove(e),this.source?.destroy()}get activeBasemap(){return this.view?.map?.basemap??null}set activeBasemap(e){const t=this.view;if(!t?.map)return;if(!e||!t.ready)return t.map.basemap=e,void this._clearOverride("activeBasemap");const a=e.spatialReference||this.items?.find(t=>this.basemapEquals(e,t.basemap))?.spatialReference;if(a&&"spatialReferenceLocked"in t&&!t.spatialReferenceLocked){const s=t.spatialReference;if(null!=a&&!u.equals(s,a)&&!l.canProjectWithoutEngine(t.spatialReference,a)&&!l.isLoaded())return this._override("activeBasemap",e),this._loadingProjectionEngine=!0,void l.load().then(()=>{this._get("activeBasemap")===e&&(t.map.basemap=e,t.spatialReference=a,this._clearOverride("activeBasemap"))},()=>{}).then(()=>{this._loadingProjectionEngine=!1});t.map.basemap=e,this._clearOverride("activeBasemap"),null==a||u.equals(t.spatialReference,a)||(t.spatialReference=a)}else t.map.basemap=e,this._clearOverride("activeBasemap")}castActiveBasemap(e){return m.basemapEnsureType(e)}get activeBasemapIndex(){const{state:e,activeBasemap:t}=this;return"ready"!==e?-1:this._findBasemapIndex(t)}get compatibilityFunction(){return"3d"===this.view?.type?y.default3DCompatibility:y.default2DCompatibility}set compatibilityFunction(e){this._overrideIfSome("compatibilityFunction",e)}castSource(e){return Array.isArray(e)||a.isCollection(e)?new b({basemaps:Array.isArray(e)?new a(e):e}):function(e){return e&&"esri.portal.Portal"===e.declaredClass}(e)?new _({portal:e}):function(e){return e&&!(e instanceof _)&&(!!e.portal||!!e.query)}(e)?new _(e):function(e){return e&&"basemaps"in e&&"state"in e&&"refresh"in e}(e)?e:null}get state(){return this.view?.ready&&this.source?d.isLinkChartView(this.view)&&!this.view.inGeographicLayout?"unsupported":this._loadingProjectionEngine?"loading":"ready":"disabled"}basemapEquals(e,t){return h.contentEquals(e,t)}refresh(){this._recreateItems()}load(){return this.loadSource()}loadSource(e){return this.addResolvingPromise(s.isLoadable(this.source)?this.source.load(e):null),Promise.resolve(this)}_findBasemapIndex(e){const{items:t}=this,a=t.findIndex(t=>t.basemap===e);return-1===a?t.findIndex(t=>this.basemapEquals(t.basemap,e)):a}_recreateItems(){const e=this.source?.basemaps??[],{view:t,compatibilityFunction:a}=this,s=new Map(this.items.map(e=>[e.basemap,e])),i=e.map(e=>{const i=s.get(e);return i?(s.delete(e),i):new v({basemap:e,compatibilityFunction:a,view:t})});this.items.removeAll(),this.items.addMany(i),s.forEach(e=>e.destroy())}_updateItems(){for(const e of this.items)e.compatibilityFunction=this.compatibilityFunction,e.view=this.view}};return e.__decorate([r.property()],w.prototype,"_loadingProjectionEngine",void 0),e.__decorate([r.property({type:t})],w.prototype,"activeBasemap",null),e.__decorate([o.cast("activeBasemap")],w.prototype,"castActiveBasemap",null),e.__decorate([r.property({readOnly:!0})],w.prototype,"activeBasemapIndex",null),e.__decorate([r.property()],w.prototype,"compatibilityFunction",null),e.__decorate([r.property({readOnly:!0,type:f})],w.prototype,"items",void 0),e.__decorate([r.property()],w.prototype,"source",void 0),e.__decorate([o.cast("source")],w.prototype,"castSource",null),e.__decorate([r.property({readOnly:!0})],w.prototype,"state",null),e.__decorate([r.property()],w.prototype,"view",void 0),w=e.__decorate([c.subclass("esri.widgets.BasemapGallery.BasemapGalleryViewModel")],w),w});