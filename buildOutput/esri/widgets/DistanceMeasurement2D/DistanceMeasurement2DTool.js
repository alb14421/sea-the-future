// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../Graphic","../../intl","../../core/colorUtils","../../core/handleUtils","../../core/maybe","../../core/reactiveUtils","../../core/unitFormatUtils","../../core/unitUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/support/UpdatingHandles","../../geometry/Point","../../geometry/Polyline","../../chunks/geodeticDensifyOperator","../../chunks/geodeticLengthOperator","../../chunks/lengthOperator","../../geometry/support/geodesicUtils","../../layers/GraphicsLayer","../../symbols/CIMSymbol","../../symbols/Font","../../symbols/SimpleMarkerSymbol","../../symbols/TextSymbol","../../views/2d/interactive/SnappingVisualizer2D","../../views/draw/Draw","../../views/interactive/coordinateHelper","../../views/interactive/dragEventPipeline","../../views/interactive/GraphicManipulator","../../views/interactive/InteractiveToolBase","../../views/interactive/editGeometry/EditGeometry","../../views/interactive/editGeometry/EditGeometryOperations","../../views/interactive/snapping/SnappingContext","../../views/interactive/snapping/SnappingDragPipelineStep","../../views/interactive/snapping/snappingUtils","../../intl/messages","../../intl/locale"],function(e,t,i,r,s,a,n,o,l,c,p,h,m,u,d,y,g,v,_,w,f,M,D,b,L,S,x,T,C,G,A,O,k,E,H,P,U,I,R,z){"use strict";const B=1e5;function j(e,t,r){const a=s.multiplyOpacity(t.effectiveTheme.accentColor,.5),n={type:"simple-line",width:0},o=new S({style:"circle",color:a,size:8,outline:n}),l=new S({style:"circle",color:a,size:12,outline:n}),c=new i({geometry:e,symbol:o});return new O.GraphicManipulator({view:t,layer:r,graphic:c,focusedSymbol:l})}function V(e,t){const i=new v({paths:[e],spatialReference:t});let r,s;return t.isGeographic?M.isSupported(t)?(r=M.geodesicLengths([i],"meters")[0],s=M.geodesicDensify(i,B)):(r=w.execute(i,{unit:"meters"}),s=_.execute(i,B,{unit:"meters"})):t.isWebMercator?(r=w.execute(i,{unit:"meters"}),s=_.execute(i,B,{unit:"meters"})):(r=f.execute(i,{unit:"meters"}),s=i),{measurement:{geometry:s,length:r},original:i,drawing:s}}function F(e,t,i){if(!t||!e)return"";switch(i){case"metric":return l.formatMetricLength(e,t.length,"meters");case"imperial":return l.formatImperialLength(e,t.length,"meters");default:return l.formatDecimal(e,c.convertUnit(t.length,"meters",i),i)}}e.DistanceMeasurement2DTool=class extends k.InteractiveToolBase{constructor(e){super(e),this._measurementLayer=new D({internal:!0,listMode:"hide",visible:!1,title:"DistanceMeasurement2DTool measurement layer"}),this._manipulatorLayer=new D({internal:!0,listMode:"hide",visible:!1,title:"DistanceMeasurement2DTool manipulator layer"}),this._snappingLayer=new D({internal:!0,listMode:"hide",visible:!1,title:"DistanceMeasurement2DTool snapping layer"}),this._updatingHandles=new y.UpdatingHandles,this._vertices=[],this._drawActive=!1,this.measurement=null,this.measurementLabel=null}initialize(){R.fetchMessageBundle("esri/core/t9n/Units").then(e=>{this.messages=e});const e=this.view;this._draw=new C({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this.addHandles([z.onLocaleChange(async()=>{this.messages=await R.fetchMessageBundle("esri/core/t9n/Units")}),o.watch(()=>[this.unit,this.messages],()=>{this._updatePolylines()},o.initial),o.watch(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const e=this._vertices.map(({coord:e})=>e);for(const{handle:e}of this._vertices)e.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(e)})]),I.setupSnappingToggleHandles(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=n.destroyMaybe(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=n.destroyMaybe(this._measurementLayer),this._manipulatorLayer=n.destroyMaybe(this._manipulatorLayer),this._snappingLayer=n.destroyMaybe(this._snappingLayer),this._updatingHandles=n.destroyMaybe(this._updatingHandles),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this.snappingManager.options}get updating(){return this._updatingHandles.updating||this.snappingManager.updating}onActivate(){this._drawActive||0!==this._vertices.length||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}_getSnappingContext(e){return new P.SnappingContext({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new H.EditGeometryOperations(new E.EditGeometry("point",G.createCoordinateHelper(!1,!1,this.view.spatialReference)),2),visualizer:new T.SnappingVisualizer2D(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const{snappingManager:e}=this;this._draw.create("polyline",{mode:"click",snappingManager:e}).on(["draw-complete","vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],e=>{this._updateSketch(e.vertices),"draw-complete"===e.type&&this._stopSketch()})}_stopSketch(){this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){const{handle:e,manipulator:t}=this._vertices.pop();e.remove(),this.manipulators.remove(t)}for(let i=this._vertices.length;i<e.length;i++){const[r,s]=e[i],n=new g({x:r,y:s,spatialReference:t}),o=j(n,this.view,this._manipulatorLayer);this.manipulators.add(o);const l=H.EditGeometryOperations.fromGeometry(n,2),c=[l.on("vertex-update",e=>{const t=e.vertices.at(0);t&&(this._vertices[i].coord=[t.pos[0],t.pos[1]],this._updatePolylines())}),A.createManipulatorDragEventPipeline(o,(e,t,i,r)=>{const s=this._getSnappingContext(r),{snappingManager:a}=this,n=this._updatingHandles,{snappingStep:o}=U.createSnapDragEventPipelineStep({snappingContext:s,snappingManager:a,updatingHandles:n});t.next(A.screenToMap(this.view)).next(t=>{if("start"===t.action){const i=new g(t.mapStart);e.graphic.geometry=i,l.trySetGeometry(i)}return t}).next(...o).next(A.dragManipulatedObject({operations:l})).next(()=>{e.graphic.geometry=l.data.geometry})})];this._vertices.push({manipulator:o,coord:[r,s],handle:a.handlesGroup(c)})}const i=this._vertices.length-1,r=this._vertices[i],[s,n]=e[i];r.coord[0]===s&&r.coord[1]===n||(r.coord=[s,n],r.manipulator.graphic.geometry=new g({x:s,y:n,spatialReference:t}));const o=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach(({manipulator:e})=>{e.interactive=null==o||e!==o}),this._updatePolylines()}_updatePolylines(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=V(this._vertices.map(({coord:e})=>e),this.view.spatialReference);if(!e)return;const{measurement:t,drawing:r,original:a}=e;this._set("measurement",t);const n=F(this.messages,t,this.unit);let o,l;this._set("measurementLabel",n);const{graphics:c}=this._measurementLayer,p=2===c.length,{effectiveTheme:h}=this.view;p?(o=c.at(0),l=c.at(1)):(o=new i({symbol:new b({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:3.5,color:s.getContrast(h.accentColor).toArray()},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:5,color:h.accentColor.toArray()}]}}})}),l=new i({symbol:new x({color:h.textColor,haloColor:s.multiplyOpacity(s.getContrast(h.textColor,160),.5),haloSize:2,font:new L({size:14,family:"sans-serif"})})}),c.removeAll(),c.addMany([o,l])),o.geometry=r,l.geometry=a.extent?.center,l.symbol.text=n}},t.__decorate([p.property()],e.DistanceMeasurement2DTool.prototype,"_drawActive",void 0),t.__decorate([p.property({readOnly:!0})],e.DistanceMeasurement2DTool.prototype,"cursor",null),t.__decorate([p.property({value:!0})],e.DistanceMeasurement2DTool.prototype,"editable",null),t.__decorate([p.property({readOnly:!0})],e.DistanceMeasurement2DTool.prototype,"measurement",void 0),t.__decorate([p.property({readOnly:!0})],e.DistanceMeasurement2DTool.prototype,"measurementLabel",void 0),t.__decorate([p.property()],e.DistanceMeasurement2DTool.prototype,"messages",void 0),t.__decorate([p.property({constructOnly:!0})],e.DistanceMeasurement2DTool.prototype,"snappingManager",void 0),t.__decorate([p.property()],e.DistanceMeasurement2DTool.prototype,"unit",void 0),t.__decorate([p.property()],e.DistanceMeasurement2DTool.prototype,"updating",null),t.__decorate([p.property({constructOnly:!0})],e.DistanceMeasurement2DTool.prototype,"view",void 0),e.DistanceMeasurement2DTool=t.__decorate([d.subclass("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],e.DistanceMeasurement2DTool),e.createDistanceMeasurementInfo2D=V,e.createDistanceMeasurementLabel=F,e.isSupported=function(e){return null!=e},e.loadGeometryOperators=async function(e){(e?.isGeographic&&!M.isSupported(e)||e?.isWebMercator)&&await Promise.all([_.load(),w.load()])},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});