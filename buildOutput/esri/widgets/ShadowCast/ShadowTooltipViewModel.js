// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/Accessor","../../core/asyncUtils","../../core/handleUtils","../../core/has","../../core/maybe","../../core/promiseUtils","../../core/reactiveUtils","../../core/screenUtils","../../core/throttle","../../core/accessorSupport/decorators/property","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass"],function(e,t,o,i,a,r,s,d,n,l,c,h,p,u,w){"use strict";e.ShadowTooltipViewModel=class extends o{constructor(e){super(e),this._screenPoint=null,this._accumulatedShadowTime=null,this._shadowTimeTask=null,this._updateAccumulatedShadowTime=(e,t)=>{this._shadowTimeTask=s.abortMaybe(this._shadowTimeTask),this._shadowTimeTask=i.createTask(async o=>{const{results:i,ground:a}=await e.hitTest(t);if(d.throwIfAborted(o),0===i.length&&!a.mapPoint)return void(this._accumulatedShadowTime=null);const r=await this.getDuration(t,o);this._accumulatedShadowTime=r})},this._throttledUpdateAccumulatedShadowTime=c.throttle(this._updateAccumulatedShadowTime,300)}initialize(){this.addHandles(n.watch(()=>({enabled:this.enabled,view:this.view}),({enabled:e,view:t})=>{e&&null!=t?this._startTracking(t):this._stopTracking()},n.syncAndInitial))}get screenPoint(){return this.enabled?this._screenPoint:null}get accumulatedShadowTime(){return this.enabled?this._accumulatedShadowTime:null}get testData(){}_startTracking(e){if(this.hasHandles("main"))return;const t=()=>{this.hasHandles("pointer-move")||this.addHandles(e.on("pointer-move",t=>{const o=l.createScreenPoint(t.x,t.y);this._screenPoint=o,this._throttledUpdateAccumulatedShadowTime(e,o)}),"pointer-move")},o=()=>{this.removeHandles("pointer-move"),this._screenPoint=null,this._accumulatedShadowTime=null};this.addHandles([this._throttledUpdateAccumulatedShadowTime,e.on("pointer-enter",t),e.on("pointer-leave",o),e.on("pointer-down",o),e.on("pointer-drag",o),e.on("pointer-up",t),e.on("click",t=>{const o=l.createScreenPoint(t.x,t.y);this._screenPoint=o,this._updateAccumulatedShadowTime(e,o)}),a.makeHandle(()=>{this._shadowTimeTask=s.abortMaybe(this._shadowTimeTask)})],"main"),t()}_stopTracking(){this.removeHandles("main")}},t.__decorate([h.property()],e.ShadowTooltipViewModel.prototype,"getDuration",void 0),t.__decorate([h.property()],e.ShadowTooltipViewModel.prototype,"view",void 0),t.__decorate([h.property()],e.ShadowTooltipViewModel.prototype,"enabled",void 0),t.__decorate([h.property()],e.ShadowTooltipViewModel.prototype,"screenPoint",null),t.__decorate([h.property()],e.ShadowTooltipViewModel.prototype,"accumulatedShadowTime",null),t.__decorate([h.property()],e.ShadowTooltipViewModel.prototype,"_screenPoint",void 0),t.__decorate([h.property()],e.ShadowTooltipViewModel.prototype,"_accumulatedShadowTime",void 0),t.__decorate([h.property()],e.ShadowTooltipViewModel.prototype,"_shadowTimeTask",void 0),e.ShadowTooltipViewModel=t.__decorate([w.subclass("esri.widgets.ShadowCast.ShadowTooltipViewModel")],e.ShadowTooltipViewModel),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});