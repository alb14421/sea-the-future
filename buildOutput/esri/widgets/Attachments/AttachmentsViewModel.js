// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../Graphic","../../core/Accessor","../../core/Collection","../../core/Error","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/cast","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../popup/support/AttachmentsOrderByInfo","../../rest/query/support/AttachmentInfo","../../rest/support/AttachmentQuery","../Feature/support/featureUtils"],function(t,e,a,i,r,n,s,c,o,d,h,l,p,u,m,f){"use strict";const y={editing:!1,operations:{add:!0,update:!0,delete:!0}},A=r.ofType(u);return t.default=class extends i{constructor(t){super(t),this._getAttachmentsPromise=null,this._attachmentLayer=null,this.capabilities={...y},this.activeAttachmentInfo=null,this.activeFileInfo=null,this.attachmentInfos=new A,this.fileInfos=new r,this.graphic=null,this.mode="view",this.orderByFields=null,this.filesEnabled=!1,this.addHandles(s.watch(()=>this.graphic,()=>this._graphicChanged(),s.initial))}destroy(){this._attachmentLayer=null,this.graphic=null}castCapabilities(t){return{...y,...t}}get state(){return this._getAttachmentsPromise?"loading":this.graphic?"ready":"disabled"}get supportsResizeAttachments(){const{graphic:t}=this;if(!t)return!1;const e=t.layer||t.sourceLayer;return e?.loaded&&"capabilities"in e&&e.capabilities&&"attachment"in e.capabilities&&e.capabilities.attachment&&"supportsResize"in e.capabilities.attachment&&e.capabilities.attachment.supportsResize||!1}async getAttachments(){const{_attachmentLayer:t,attachmentInfos:e,orderByFields:a}=this;if(!t||"function"!=typeof t.queryAttachments)throw new n("invalid-layer","getAttachments(): A valid layer is required.");const i=this._getObjectId();if("number"!=typeof i)throw new n("invalid-object-id","getAttachments(): Numeric object id is required");const r=a?.map(t=>`${t.field} ${"descending"===t.order?"DESC":"ASC"}`),s=new m({objectIds:[i],returnMetadata:!0,orderByFields:r}),c=[],o=t.queryAttachments(s).then(t=>t[i]||c).catch(()=>c);this._getAttachmentsPromise=o,this.notifyChange("state");const d=await o;return e.destroyAll(),d.length&&e.addMany(d),this._getAttachmentsPromise=null,this.notifyChange("state"),d}async addAttachment(t,e=this.graphic){const{_attachmentLayer:a,attachmentInfos:i,capabilities:r}=this;if(!e)throw new n("invalid-graphic","addAttachment(): A valid graphic is required.",{graphic:e});if(!t)throw new n("invalid-attachment","addAttachment(): An attachment is required.",{attachment:t});if(!r.operations?.add)throw new n("invalid-capabilities","addAttachment(): add capabilities are required.");if(!a||"function"!=typeof a.addAttachment)throw new n("invalid-layer","addAttachment(): A valid layer is required.");const s=a.addAttachment(e,t).then(t=>this._queryAttachment(t.objectId,e)),c=await s;return i.add(c),c}async deleteAttachment(t){const{_attachmentLayer:e,attachmentInfos:a,graphic:i,capabilities:r}=this;if(!t)throw new n("invalid-attachment-info","deleteAttachment(): An attachmentInfo is required.",{attachmentInfo:t});if(!r.operations?.delete)throw new n("invalid-capabilities","deleteAttachment(): delete capabilities are required.");if(!e||"function"!=typeof e.deleteAttachments)throw new n("invalid-layer","deleteAttachment(): A valid layer is required.");if(!i)throw new n("invalid-graphic","deleteAttachment(): A graphic is required.");const s=e.deleteAttachments(i,[t.id]).then(()=>t),c=await s;return a.remove(c),c.destroy(),c}async updateAttachment(t,e=this.activeAttachmentInfo){const{_attachmentLayer:a,attachmentInfos:i,graphic:r,capabilities:s}=this;if(!t)throw new n("invalid-attachment","updateAttachment(): An attachment is required.",{attachment:t});if(!e)throw new n("invalid-attachment-info","updateAttachment(): An attachmentInfo is required.",{attachmentInfo:e});if(!s.operations?.update)throw new n("invalid-capabilities","updateAttachment(): Update capabilities are required.");const c=i.indexOf(e);if(!a||"function"!=typeof a.updateAttachment)throw new n("invalid-layer","updateAttachment(): A valid layer is required.");if(!r)throw new n("invalid-graphic","updateAttachment(): A graphic is required.");const o=a.updateAttachment(r,e.id,t).then(t=>this._queryAttachment(t.objectId)),d=await o;return i.splice(c,1,d),d}async commitFiles(){return await Promise.all(this.fileInfos.items.map(t=>this.addAttachment(t.form))),this.fileInfos.removeAll(),this.getAttachments()}addFile(t,e){if(!t||!e)return null;const a={file:t,form:e};return this.fileInfos.add(a),a}updateFile(t,e,a=this.activeFileInfo){if(!t||!e||!a)return null;const i=this.fileInfos.indexOf(a);return i>-1&&this.fileInfos.splice(i,1,{file:t,form:e}),this.fileInfos.items[i]}deleteFile(t){const e=this.fileInfos.find(e=>e.file===t);return e?(this.fileInfos.remove(e),e):null}async _queryAttachment(t,e){const{_attachmentLayer:a}=this;if(!t||!a?.queryAttachments)throw new n("invalid-attachment-id","Could not query attachment.");const i=this._getObjectId(e);if("number"!=typeof i)throw new n("invalid-object-id","getAttachments(): Numeric object id is required");const r=new m({objectIds:[i],attachmentsWhere:`AttachmentId=${t}`,returnMetadata:!0});return a.queryAttachments(r).then(t=>t[i][0])}_getObjectId(t=this.graphic){return t?.getObjectId()??null}_graphicChanged(){this.graphic&&(this._setAttachmentLayer(),this.getAttachments().catch(()=>this.attachmentInfos.destroyAll()))}_setAttachmentLayer(){const{graphic:t}=this,e=f.getSourceLayer(t);this._attachmentLayer=e?"scene"===e.type&&null!=e.associatedLayer?e.associatedLayer:e:null}},e.__decorate([c.property()],t.default.prototype,"capabilities",void 0),e.__decorate([o.cast("capabilities")],t.default.prototype,"castCapabilities",null),e.__decorate([c.property()],t.default.prototype,"activeAttachmentInfo",void 0),e.__decorate([c.property()],t.default.prototype,"activeFileInfo",void 0),e.__decorate([c.property({readOnly:!0,type:A})],t.default.prototype,"attachmentInfos",void 0),e.__decorate([c.property()],t.default.prototype,"fileInfos",void 0),e.__decorate([c.property({type:a})],t.default.prototype,"graphic",void 0),e.__decorate([c.property()],t.default.prototype,"mode",void 0),e.__decorate([c.property({type:[p]})],t.default.prototype,"orderByFields",void 0),e.__decorate([c.property({readOnly:!0})],t.default.prototype,"state",null),e.__decorate([c.property()],t.default.prototype,"filesEnabled",void 0),e.__decorate([c.property({readOnly:!0})],t.default.prototype,"supportsResizeAttachments",null),t.default=e.__decorate([l.subclass("esri.widgets.Attachments.AttachmentsViewModel")],t.default),t.default});