// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../views/MapView","../../Widget","./ImageViewerViewModel","./NavigationUI","./SequentialNavigationUI","../../../chunks/componentsUtils","../../support/globalCss","../../support/widgetUtils","../../support/decorators/vmEvent","../../support/jsxFactory"],function(e,t,i,o,r,a,n,s,l,d,p,c,g,h,u,v,y){"use strict";let w=class extends l{constructor(){super(...arguments),this.navigationEnabled=!1,this.uiStrings=null,this.viewModel=new d,this._afterContainerCreate=e=>{this.imageRenderer.container=e},this.addGraphic=(e,t)=>{this.viewModel.addGraphic(e,t)},this.addManyGraphics=e=>{this.viewModel.addManyGraphics(e)},this.clearGraphics=()=>{this.viewModel.clearGraphics()},this.clearImage=()=>{this.viewModel.clearImage()},this.loadImage=async e=>this.viewModel.loadImage(e),this.navigate=async(e,t)=>await this.viewModel.navigate(e,t),this.removeGraphic=e=>{this.viewModel.removeGraphic(e)},this.removeManyGraphics=e=>{this.viewModel.removeManyGraphics(e)}}loadDependencies(){return Promise.all([g.loadCalciteComponents({panel:()=>new Promise((t,i)=>e(["../../../chunks/index51"],t,i)).then(e=>e.index)}),c.loadSequentialNavigationUIComponents()])}get autoLoad(){return this.viewModel.autoLoad}set autoLoad(e){this.viewModel.autoLoad=e}get brightness(){return this.viewModel.brightness}set brightness(e){this.viewModel.brightness=e}get clickAction(){return this.viewModel.clickAction}set clickAction(e){this.viewModel.clickAction=e}get contrast(){return this.viewModel.contrast}set contrast(e){this.viewModel.contrast=e}get currentNode(){return this.navigationViewModel?.currentNode}get customParameters(){return this.viewModel.customParameters}set customParameters(e){this.viewModel.customParameters=e}get error(){return this.viewModel.error}get imageSize(){const e=this.viewModel.image?.serviceRasterInfo;return e?[e.width,e.height]:[0,0]}get imagePointsInView(){return this.viewModel.imagePointsInView}get imageRenderer(){return this.viewModel.imageRenderer}get imageRotation(){return this.viewModel.imageRotation}set imageRotation(e){this.viewModel.imageRotation=e}get imageSource(){return this.viewModel.imageSource}set imageSource(e){this.viewModel.imageSource=e}get navigationNodes(){return this.navigationViewModel?.navigationNodes}get navigationMode(){return this.navigationViewModel?.navigationMode}get navigationViewModel(){return this.viewModel.navigationViewModel}set navigationViewModel(e){this.viewModel.navigationViewModel=e}get sharpness(){return this.viewModel.sharpness}set sharpness(e){this.viewModel.sharpness=e}get state(){return this.viewModel.state}get ui(){return this.imageRenderer.ui}get _navigationUI(){return y.tsx(p,{cameraHeadingThreshold:this.navigationViewModel?.cameraHeadingThreshold,cameraPitchThreshold:this.navigationViewModel?.cameraPitchThreshold,currentNode:this.currentNode,navigate:this.navigate,nodes:this.navigationNodes,preserveAngle:this.navigationViewModel?.preserveAngle??"none"})}get _sequentialNavigationUI(){return y.tsx(c.SequentialNavigationUI,{layout:"horizontal",uiStrings:this.uiStrings,onAction:e=>{this.navigate(this.currentNode,e)}})}_renderNavigationUI(){switch(this.navigationMode){case"directional":return this._navigationUI;case"sequential":return this._sequentialNavigationUI;default:return null}}render(){return y.tsx("calcite-panel",{afterCreate:this._afterContainerCreate,bind:this,class:this.classes(h.globalCss.widget,"esri-image-viewer"),loading:this.viewModel.updating},this.navigationEnabled?this._renderNavigationUI():null)}static{this.vnodeSelector="calcite-panel"}};return t.__decorate([i.property({type:Boolean})],w.prototype,"autoLoad",null),t.__decorate([i.property({type:Number}),i.property()],w.prototype,"brightness",null),t.__decorate([i.property()],w.prototype,"clickAction",null),t.__decorate([i.property({type:Number})],w.prototype,"contrast",null),t.__decorate([i.property()],w.prototype,"currentNode",null),t.__decorate([i.property({type:Object})],w.prototype,"customParameters",null),t.__decorate([i.property({readOnly:!0})],w.prototype,"error",null),t.__decorate([i.property()],w.prototype,"imageSize",null),t.__decorate([i.property({readOnly:!0})],w.prototype,"imagePointsInView",null),t.__decorate([i.property({readOnly:!0,type:s})],w.prototype,"imageRenderer",null),t.__decorate([i.property()],w.prototype,"imageRotation",null),t.__decorate([i.property()],w.prototype,"imageSource",null),t.__decorate([i.property({type:Boolean})],w.prototype,"navigationEnabled",void 0),t.__decorate([i.property()],w.prototype,"navigationNodes",null),t.__decorate([i.property()],w.prototype,"navigationMode",null),t.__decorate([i.property()],w.prototype,"navigationViewModel",null),t.__decorate([i.property({type:Number})],w.prototype,"sharpness",null),t.__decorate([i.property({readOnly:!0})],w.prototype,"state",null),t.__decorate([i.property()],w.prototype,"ui",null),t.__decorate([i.property()],w.prototype,"uiStrings",void 0),t.__decorate([v.vmEvent(["click","hittest-response","pixel-location"]),i.property({type:d})],w.prototype,"viewModel",void 0),t.__decorate([i.property()],w.prototype,"_navigationUI",null),t.__decorate([i.property()],w.prototype,"_sequentialNavigationUI",null),w=t.__decorate([n.subclass("esri.widgets.OrientedImageryViewer.components.ImageViewer")],w),w});