// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../Graphic","../../../core/Accessor","../../../core/arrayUtils","../../../core/Logger","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../geometry/Polygon","../constants","../symbols"],function(e,t,o,i,r,s,d,n,a,c,l,h,p){"use strict";let u=class extends o{constructor(e){super(e),this.closestFeature=null,this.currentTime=0,this.videoBrightness=1,this.videoContrast=1,this.videoDuration=void 0,this.videoPaused=null,this.videoMuted=null,this.enableAudio=()=>{const{videoElement:e}=this.oiViewModel;e?.content&&(e.content.muted=!1,this.videoMuted=!1)},this.playVideoHandler=()=>{const e=this.oiViewModel.videoElement?.content;e&&(e.paused?e.play().catch(e=>{r.getLogger(this).error("error playing video",e)}):e.pause())},this.rewindVideoHandler=()=>{const e=this.oiViewModel.videoElement?.content;e&&(e.currentTime=0,e.play().catch(e=>{r.getLogger(this).error("error playing video",e)}))},this.resetVideoHandler=()=>{const{videoElement:e,videoMapView:t,videoLayer:o}=this.oiViewModel;e?.content&&o&&t&&(e.content.pause(),t.map.layers.remove(o),o.destroy(),this.oiViewModel.videoElement=null)},this.resetVideoEnhancementTools=()=>{this.oiViewModel?.videoLayer&&(this.videoBrightness=1,this.videoContrast=1,this.oiViewModel.videoLayer.effect=`brightness(${this.videoBrightness}) contrast(${this.videoContrast})`)},this.toggleAudio=()=>{const{videoElement:e}=this.oiViewModel;if(e?.content){const t=e.content.muted;e.content.muted=!t,this.videoMuted=!t}}}initialize(){this.addHandles([d.watch(()=>this.oiViewModel.videoElement?.content,e=>{if(e instanceof HTMLVideoElement){this._startVideo();const t=async()=>{this.currentTime=Number(e.currentTime.toFixed(2)),e.currentTime&&await this._updateVidFootprint(e.currentTime)};e.addEventListener("timeupdate",t),e.addEventListener("play",()=>this._updateVideoIcon(e.paused)),e.addEventListener("pause",()=>this._pauseVideoHandler(e))}},d.syncAndInitial),d.watch(()=>this.oiViewModel.layer,(e,t)=>{t&&e&&e.uid!==t.uid&&this.oiViewModel.resetVideo()},d.syncAndInitial)])}destroy(){this.resetVideoHandler()}_pauseVideoHandler(e){this._updateVideoIcon(e.paused)}_setVideoDuration(){const{videoElement:e}=this.oiViewModel;e?.content&&(this.videoDuration=e.content.duration)}_startVideo(){try{this.enableAudio(),this._setVideoDuration();const e=this.oiViewModel.currentBestFeature;e&&this.playVideoFromSelectedLocation(e)}catch(e){r.getLogger(this).error("oriented-imagery-viewer:video-load",e)}}async _updateVideoFootprintWithGivenFeature(e,o,d){const{activeViewer:n,mode:a,currentCoverageVisible:c,footprintExtent:u}=this.oiViewModel,v="video"===a?h.fixedImageSize:n?.imageSize;if(o&&v&&u)try{const r=await this.oiViewModel.getMapPoint(e,{feature:o,mode:"default",imageSize:v});s.throwIfAborted(d);const n=r.filter(i.isSome);if(!n.length)return;const a=[n.map(({x:e,y:t})=>[e,t,1])];a[0].push(a[0][0]);const h=new l({rings:a,spatialReference:n[0].spatialReference});this.oiViewModel.updateCurrentCoveragePolygon(new t({geometry:h,attributes:{imageID:o.attributes.objectId},symbol:p.activePolygonSymbol,visible:c}))}catch(e){s.isAbortError(e)||r.getLogger(this).error("update-footprint",e)}else this.oiViewModel.updateCurrentCoveragePolygon(null)}async _updateVidFootprint(e){const t=this.oiViewModel.featureCache.find(t=>t.attributes.offsetFromStart===Math.floor(e));t?.attributes.offsetFromStart&&(this.closestFeature=t,await this._updateVideoFootprintWithGivenFeature(h.videoExtent,t))}_updateVideoIcon(e){this.videoPaused=!!e}handleVideoBrightnessChange(e){this.oiViewModel?.videoLayer&&(this.videoBrightness=e??0,this.oiViewModel.videoLayer.effect=`brightness(${this.videoBrightness}) contrast(${this.videoContrast})`)}handleVideoContrastChange(e){this.oiViewModel?.videoLayer&&(this.videoContrast=e??0,this.oiViewModel.videoLayer.effect=`brightness(${this.videoBrightness}) contrast(${this.videoContrast})`)}playVideoFromSelectedLocation(e){const t=e.attributes.offsetFromStart;if(t){const e=this.oiViewModel.videoElement?.content;e&&(e.currentTime=t,e.play().catch(e=>{r.getLogger(this).error("error playing video",e)}))}}};return e.__decorate([n.property()],u.prototype,"closestFeature",void 0),e.__decorate([n.property()],u.prototype,"currentTime",void 0),e.__decorate([n.property()],u.prototype,"oiViewModel",void 0),e.__decorate([n.property({type:Number})],u.prototype,"videoBrightness",void 0),e.__decorate([n.property({type:Number})],u.prototype,"videoContrast",void 0),e.__decorate([n.property()],u.prototype,"videoDuration",void 0),e.__decorate([n.property()],u.prototype,"videoPaused",void 0),e.__decorate([n.property()],u.prototype,"videoMuted",void 0),u=e.__decorate([c.subclass("esri.widgets.OrientedImageryViewer.components.OrientedImageryVideoViewModel")],u),u});