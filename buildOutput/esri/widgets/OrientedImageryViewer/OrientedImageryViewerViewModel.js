// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","../../chunks/tslib.es6","../../Graphic","../../core/arrayUtils","../../core/asyncUtils","../../core/Collection","../../core/deprecate","../../core/Error","../../core/Evented","../../core/handleUtils","../../core/lang","../../core/Logger","../../core/mathUtils","../../core/maybe","../../core/Promise","../../core/promiseUtils","../../core/ReactiveMap","../../core/reactiveUtils","../../core/sql","../../core/unitUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/accessorSupport/decorators/subclass","../../core/libs/gl-matrix-2/math/vec2","../../core/support/jsonUtils","../../core/support/UpdatingHandles","../../geometry/Extent","../../geometry/geometryEngineAsync","../../geometry/Multipoint","../../geometry/Point","../../geometry/Polygon","../../geometry/Polyline","../../geometry/projectionUtils","../../geometry/SpatialReference","../../geometry/support/coordsUtils","../../geometry/support/normalizeUtils","../../geometry/support/webMercatorUtils","../../layers/GraphicsLayer","../../layers/MediaLayer","../../layers/orientedImagery/queries","../../layers/orientedImagery/core/bestImageUtils","../../layers/orientedImagery/core/coverageUtils","../../layers/orientedImagery/core/ElevationSourceDefinitions","../../layers/orientedImagery/core/utils","../../layers/orientedImagery/transformations/imageToWorld","../../layers/orientedImagery/transformations/updateElevation","../../layers/orientedImagery/transformations/updateElevationUtils","../../layers/orientedImagery/transformations/utils","../../layers/orientedImagery/transformations/worldToImage","../../layers/support/ExtentAndRotationGeoreference","../../layers/support/floorFilterUtils","../../layers/support/VideoElement","../../views/MapView","../../views/draw/Draw","../../views/draw/support/drawUtils","../../views/input/InputManager","../PanoramicViewer","./constants","./dataCaptureUtils","./galleryUtils","./imageMeasurementUtils","./symbols","./utils","./videoViewerUtils","./components/ImageViewer","./components/NavigationNode","./components/OrientedImageryVideoViewModel","./navigation/errors","./navigation/queries","../Sketch/SketchViewModel"],function(e,t,r,a,i,o,s,n,c,l,h,u,d,p,m,g,y,v,w,f,_,b,M,P,F,I,A,S,V,k,C,T,G,L,R,O,x,E,B,H,D,z,j,W,U,q,N,$,Z,J,K,X,Q,Y,ee,te,re,ae,ie,oe,se,ne,ce,le,he,ue,de,pe,me,ge){"use strict";const ye=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),ve="view-click",we="image-click",fe="triangular-click",_e="interaction-handles",be="hittest-handles",Me="video-handles",Pe="active-viewer-cursor-handles",Fe=new Set(["JPG","JPEG"]),Ie=/\.(\w+)$/,Ae=()=>new n("orientedimageryviewer:sketch-not-initialized","Sketch property is not initialized, call loadSketch first");let Se=class extends(c.EventedMixin(m.EsriPromise)){constructor(t){super(t),this.additionalFeatures=new o,this.additionalCameraLocations=new o,this.additionalFootprints=new o,this.areaMeasurementResult=0,this.areaMeasurementAccuracy=0,this.bestFeatureAngle=0,this.bestFeatureCurrentFootprint=null,this.bestFeatureFootprint=null,this.cameraHeadingThreshold=ae.defaultAngleThresholdInDegrees,this.cameraPitchThreshold=ae.defaultAngleThresholdInDegrees,this.clickAction="hittest",this.videoViewModel=null,this.collectionId=null,this.conversionProps=null,this.coverageFrustums=new o,this.coveragePolygons=new o,this.currentBestFeature=null,this.currentBestFeatureMeasurementImage=null,this.currentBestFeatureLocation=null,this.currentCoverageVisible=!0,this.featureCache=[],this.navigationNodes=new o,this.determineWorkflowForFeature=async(e,t,r)=>{const{currentBestFeature:a,selectedPoint:i,view:o}=this;if(o?.closePopup(),a&&i){this._initialCurrentCoverageUpdate=!0,this._updateGroundElevation=!0;try{await this._updatePointsAndPolygons(r),await this._loadImage(r)}catch(e){g.isAbortError(e)||(this.loadImageError(e),u.getLogger(this).error("#loadIImage()","error occured while loading image",e))}}},this.determineWorkflowForTriangularMeasurement=async(e,t,r)=>{if(this.view?.closePopup(),this.currentBestFeatureMeasurementImage&&this.selectedPoint)try{await this._loadMeasurementViewerImage(r)}catch(e){g.isAbortError(e)||(this.loadImageError(e),u.getLogger(this).error("#loadIImage()","error occured while loading image",e))}},this.disabled=!1,this.displayMessage={key:"onLoadMessage",type:"info"},this.displayNewMeasurementButton=!0,this.distanceMeasurementResult=0,this.distanceAccuracyArray=[],this.dataCaptureLayer=null,this.features=new o,this.groundCoordinates=null,this.groundCoordinatesAccuracy=null,this.heightMeasurementPixels=[],this.heightGraphic=null,this.heightMeasurementResult=0,this.heightMeasurementAccuracy=0,this.measurementAngle=null,this.tempDistance=null,this.imageGeometryField=null,this.imageLocationToolState=!1,this.imageMeasurementViewer=new he,this.isAdditionalCoverageVisible=!1,this.isAdditionalPointSourcesVisible=!1,this.measurementVectors=[],this.layer=null,this.localPort=null,this.mapImageConversionToolState=!1,this.measureType=null,this.measurementGraphic=null,this.navigatorCurrentBestFeature=null,this.oiObjectIdField=null,this.overlayedCameraLocations=new o,this.overlayedMapFeatures=new y,this.pixelCoordinates=null,this.preserveAngle="none",this.pointSources=new o,this.previousFeatureAngle=0,this.selectedPoint=null,this.shouldShowSelectedImage=!1,this.sketch=null,this.sketchTriangular=null,this.sketchTriangularGraphicsLayer=null,this.draw=null,this.sketchAdapter=null,this.triangularMeasurementActive=!1,this.triangulatedDistanceMeasurement=null,this.triangulatedDistanceAccuracy=null,this.triangulatedAreaMeasurement=null,this.triangulatedAreaAccuracy=0,this.triangulatedMeasurementGraphic=null,this.triangulatedPoint=null,this.triangulatedMeasurementAdapter=null,this.updateFootprint=async(e,t)=>{"default"===this.mode&&"image-loaded"!==this.state||"video"===this.mode&&!this.videoElement?.content||await(this._adapter?.updateFootprint(e,t))},this.updateFootprintPanorama=async(e,t)=>{await(this._adapter?.updateFootprintPanorama(e,t))},this.updatingTriangularMeasurementState=!1,this.videoElement=null,this.videoLayer=null,this.videoMapView=new Q({map:new Map}),this._adapter=null,this._highlightedFeatureHandle=null,this._imageViewer=new he,this._initialCurrentCoverageUpdate=!0,this._locationPointOnImage=null,this._correctedLocationPointOnImage=null,this._overlays=new E({listMode:"hide",internal:!0,elevationInfo:{mode:"absolute-height"},title:"OrentedImageryViewerViewModel overlays layer"}),this._panoramicViewer=new re,this._referencePointOnGround=null,this._referencePointOnImage=null,this._sectorData=null,this._featureToSector=null,this._updatingHandles=new I.UpdatingHandles,this._clickTask=null,this._crossSymbol=null,this.footprintExtent=null,this._featureChangedTask=null,this._openPopupTask=null,this._suitabilities=null,this._transformController=new AbortController,this._updateFootprintTask=null,this._updateGroundElevation=!1,this.addUpdatingPromise=e=>this._updatingHandles.addPromise(e),this.hideImageGeometry=e=>{},this.highlight=e=>{if(!this._overlaysView)return;this.removeHighlight();const t=this.additionalFootprints.find(({attributes:{imageID:t}})=>t===Number(e));this._highlightedFeatureHandle=t?this._overlaysView?.highlight(t):null},this.loadDataCaptureAdapter=async t=>{await this.loadSketch(t);const r=new Promise((t,r)=>e(["./adapters/sketch/DataCaptureAdapter"],e=>t(ye(e)),r)),{default:a}=await r;return g.throwIfAborted(t),this.sketchAdapter=new a({viewModel:this}),this.sketchAdapter},this.loadImageFromSource=async(e,t)=>this._updatingHandles.addPromise(this._loadImageFromSourceInternal(e,t)),this.storeImageMeasurementViewer=e=>{this.imageMeasurementViewer=e},this.loadImageViewer=e=>{this._imageViewer?.destroy(),this._imageViewer=e},this.loadPanoramicViewer=e=>{this._panoramicViewer?.destroy(),this._panoramicViewer=e},this.loadVideoViewer=e=>{this.videoMapView.container=e},this.showImageByObjectId=async(e,t)=>{const r=this.additionalFeatures.find(({attributes:t})=>t.objectId===e);if(r)this.currentBestFeature=r;else{const{layer:r,layerFloorFilterClause:a}=this;if(!r)return void this.setMessage("noLayerSelected","info");this.beforeLoad();const i=this._updatingHandles.addPromise(this._queryAndLoadByObjectId(r,e,a,t));try{await i,await this.selectBestFeature(e,t)}catch(t){g.isAbortError(t)||(u.getLogger(this).error("oriented-imagery-viewer:show-image",t),"NoFeatureFoundWithObjectIdError"===t.name?this.setMessage("noFeatureFoundWithObjectId","error","",{objectId:e}):this.setMessage("imageLoadError","error",t.message))}}},this.imageToImageTransform=async(e,t,r)=>{const{updateElevationProps:a,...i}=t,{updateElevationProps:o,...s}=r,n=await U.imageToWorld(e,i,a);return Z.worldToImage(n,s)},this.getSectorFeatureById=e=>this._suitabilities?.find(({feature:{attributes:{objectId:t}}})=>t===e),this.getFeatureSectorById=e=>this._featureToSector?.[`${e}`],this.navigate=async(e,t)=>{const{activeViewer:r}=this;if(!r)throw new pe.NoActiveViewerError;return await r.navigate(e,t)},this.removeHighlight=()=>this._highlightedFeatureHandle?.remove(),this.revealImageGeometry=e=>{},this.selectBestFeature=async(e,t)=>(g.throwIfAborted(t),this.currentBestFeature=this.features?.find(({attributes:t})=>`${t.objectId}`==`${e}`),v.whenOnce(()=>"image-loaded"===this.state,t)),this.toggleImageAttributes=()=>{p.abortMaybe(this._openPopupTask),this._openPopupTask=i.createTask(async e=>{const{currentBestFeature:t,popupEnabled:a,layer:i,view:o}=this;if(o?.closePopup(),!(o&&t&&a&&i))return;const{attributes:s,geometry:n}=t,c=new r({geometry:n,attributes:s.toJSON(),layer:i,sourceLayer:i});g.throwIfAborted(e),await o.openPopup({features:[c],location:s.location.clone()})})},this.updateSuitabilities=(e,t=!0)=>{e.sort((e,t)=>e.suitability-t.suitability),this._suitabilities=e;const r=this._suitabilities.map(({feature:e})=>e);this._initialCurrentCoverageUpdate=!0,this._updateFeatures(r,t),this._groupFeaturesBySectors()},this._createViewClickHandle=()=>{if(this.removeHandles(ve),"disabled"===this.state||null==this.view)return;const e=this.mapImageConversionToolState&&"image-loaded"===this.state?this._mapImageConversionToolViewClickHandler:this._viewClickHandler;this.addHandles(this.view.on("click",e,te.ViewEventPriorities.WIDGET),ve)},this._createImageClickHandle=()=>{this.removeHandles(we);const{mapImageConversionToolState:e,mode:t,activeViewer:r,currentBestFeature:a,footprintExtent:o}=this,s=r?.imageSize;if(!(e&&"none"!==t&&s&&o&&a))return;const n=r.clickAction;this.clickAction="pixel-location";const c=l.makeHandle(()=>{this.clickAction=n});let h=null;const u=v.on(()=>r,"pixel-location",e=>{this.plotReferencePointOnImage(e),h?.abort(),h=i.createTask(async r=>{if(!e)return;const i=await this.getMapPoint(e,{feature:a,imageSize:s,mode:t}).then(e=>{const t=this.view?.spatialReference;return $.or(!t,e.spatialReference.equals(t))?e:G.projectWithZConversion(e,t)});g.throwIfAborted(r),this.plotReferencePointOnGround(i)})});this.addHandles([u,c],we)},this._createTriangularImageClickHandle=()=>{this.removeHandles(fe);const e=this.imageMeasurementViewer?.imageSize;this.triangularMeasurementActive&&"none"!==this.mode&&e&&this.currentBestFeature&&this.addHandles(this.imageMeasurementViewer.imageRenderer.on("double-click",this._measurementImageClickHandler),fe)},this._createTriangularImageLocationHandle=()=>{this.removeHandles(fe);const{imageLocationToolState:e,mode:t,imageMeasurementViewer:r}=this,a=r?.imageSize;if(!e||"none"===t||!a)return;this.clickAction="pixel-location";let o=null;const s=v.on(()=>r,"pixel-location",e=>{1===this.measurementVectors.length&&(this.plotLocationPointOnImage(e,!0),o?.abort(),o=i.createTask(async r=>{if(!e||this.triangulatedPoint||2===this.measurementVectors?.length||!this.currentBestFeatureMeasurementImage)return;let i=await this.getMapPoint(e,{feature:this.currentBestFeatureMeasurementImage,imageSize:a,mode:t});g.throwIfAborted(r);const o=this.currentBestFeatureMeasurementImage.geometry.spatialReference;o&&!i.spatialReference.equals(o)&&(i=await G.projectWithZConversion(i,o),g.throwIfAborted(r)),await this._calculateTriangulatedPointFromGroundPoint(i,{signal:r}),g.throwIfAborted(r)}))});this.addHandles(s,fe)},this._createImageLocationHandle=()=>{this.removeHandles(we);const{imageLocationToolState:e,mode:t,activeViewer:r,currentBestFeature:a,footprintExtent:o}=this,s=r?.imageSize;if(!(e&&"none"!==t&&s&&o&&a))return;this.clickAction="pixel-location";let n=null;const c=v.on(()=>r,"pixel-location",e=>{const{currentBestFeatureMeasurementImage:r,triangularMeasurementActive:o,imageMeasurementViewer:c}=this;this.pixelCoordinates=e;const l=null!=r&&!c.state.includes("loading");$.or(!o,l)&&this.plotLocationPointOnImage(e),n?.abort(),n=i.createTask(async r=>{if(!e)return;let i=await this.getMapPoint(e,{feature:a,imageSize:s,mode:t});g.throwIfAborted(r);const n=this.view?.spatialReference;n&&!i.spatialReference.equals(n)&&(i=await G.projectWithZConversion(i,n),g.throwIfAborted(r)),this.groundCoordinates=i,o&&i&&l&&await this.triangulatedLocationWorkflow(i,r);const c=await this.calculateLocationAccuracy(e,i,t,r);g.throwIfAborted(r),c&&(this.groundCoordinatesAccuracy=c)})});this.addHandles(c,we)},this._handleImageHitTestResponse=async e=>{const{layer:t,overlayedCameraLocations:r}=this;if(!t)return;const a=e.results.find(({graphic:e,graphic:{attributes:a}})=>r.includes(e)&&a&&!a[t.imageReferenceField]&&!a[t.imageGeometryField]);if(!a)return;const i=a.graphic.attributes[t.objectIdField];await this.showImageByObjectId(i)},this._loadImage=async e=>{const{currentBestFeature:t,layer:r,mode:a}=this;if(this.clearGraphics(),!r||!t||"none"===a||"video"===a)return;const{attributes:i}=t,{imagePath:o,imageRotation:s,cameraHeading:n,cameraRoll:c,cameraPitch:l,objectId:h,cameraOrientation:d,location:p}=i,m=(c??0)+(s??0),y=p.spatialReference.isWGS84&&4!==d?.type?x.geographicToWebMercator(p):new k(p);let v=o;if(oe.isFeatureAttachment(o))try{v=await oe.getImageSourceFromAttachment(r,h,e)}catch(e){if(g.isAbortError(e))return;return ce.isNoAttachmentError(e)?(u.getLogger(this).error(e),void this.setMessage("noAttachment","error",`${r.objectIdField}: ${h}`)):(u.getLogger(this).error(e,{[r.objectIdField]:h,layer:r}),void this.setMessage("imageLoadError","error",`query-attachments-failed:${r.objectIdField} ${h}`))}try{await this.loadImageFromSource(v,{imageRotation:m,options:e,pitch:l,yaw:n,mode:a,cameraLocation:y}),g.throwIfAborted(e),await this.transformAndPlotSelectedLocation(e)}catch(e){g.isAbortError(e)||this.loadImageError(e)}},this._loadImageFromSourceInternal=async(e,t)=>{const{mode:r,imageRotation:a,options:i}=t,o="string"==typeof e,s=o?e:e.url,{pathname:n,searchParams:c}=new URL(s);let l=o?n.match(Ie)?.[1]:e.datasetFormat;if(!l)try{l=await ce.getContentType(s,{...t.options})}catch(e){g.isAbortError(e)||u.getLogger(this).error("#getContentType()",e)}switch(l??="UNKNOWN FORMAT",r){case"default":this.triangularMeasurementActive?await this._setImageSource(this.imageMeasurementViewer,l,s,c,a,i):await this._setImageSource(this._imageViewer,l,s,c,a,i);break;case"panoramic":if(Fe.has(l.toUpperCase())){const{selectedPoint:e}=this,{pitch:r,yaw:a,cameraLocation:o,viewAngle:n}=t;this._panoramicViewer.imageSource=s;let c=a??0;"number"==typeof n?c=n-c:o&&e&&(c=await $.getInitialAngle(o,e)-c),this._panoramicViewer.pitch=r??0,this._panoramicViewer.yaw=c,await this._panoramicViewer.loadImage(i)}else this.setMessage("unsupportedPanoramicImageryError","error",void 0,{datasetFormat:l})}},this._loadMeasurementViewerImage=async e=>{const{currentBestFeatureMeasurementImage:t,layer:r,mode:a}=this;if(this.imageMeasurementViewer.clearGraphics(),!r||!t||"none"===a||"video"===a)return;const{attributes:i}=t,{imagePath:o,imageRotation:s,cameraHeading:n,cameraRoll:c,cameraPitch:l,objectId:h,cameraOrientation:d,location:p}=i,m=(c??0)+(s??0),y=p.spatialReference.isWGS84&&4!==d?.type?x.geographicToWebMercator(p):new k(p);let v=o;if(oe.isFeatureAttachment(o))try{v=await oe.getImageSourceFromAttachment(r,h,e)}catch(e){if(g.isAbortError(e))return;return ce.isNoAttachmentError(e)?(u.getLogger(this).error(e),void this.setMessage("noAttachment","error",`${r.objectIdField}: ${h}`)):(u.getLogger(this).error(e,{[r.objectIdField]:h,layer:r}),void this.setMessage("imageLoadError","error",`query-attachments-failed:${r.objectIdField} ${h}`))}try{await this.loadImageFromSource(v,{imageRotation:m,options:e,pitch:l,yaw:n,mode:a,cameraLocation:y}),g.throwIfAborted(e)}catch(e){g.isAbortError(e)||this.loadImageError(e)}},this._loadViewAdapter=async t=>{const{view:r}=this;if(r)switch(r.type){case"2d":{const{default:r}=await new Promise((t,r)=>e(["./adapters/view/MapViewAdapter"],e=>t(ye(e)),r));g.throwIfAborted(t),this._adapter=new r(this);break}case"3d":{const{default:r}=await new Promise((t,r)=>e(["./adapters/view/SceneViewAdapter"],e=>t(ye(e)),r));g.throwIfAborted(t),this._adapter=new r(this);break}}else this._adapter=null},this._mapImageConversionToolViewClickHandler=e=>{e.stopPropagation(),e.preventDefault(),e.mapPoint&&this.plotMapPoint(e.mapPoint)},this._measurementImageClickHandler=e=>{e.stopPropagation(),e.preventDefault();const{sketchTriangular:t,triangularMeasurementActive:r,currentBestFeatureMeasurementImage:a,triangulatedMeasurementGraphic:i}=this;t&&r&&a&&i&&"active"!==t.state&&(t.update([i],{tool:"reshape"}),this.updatingTriangularMeasurementState=!0)},this._viewClickHandler=e=>{this._clickTask?.abort(),this._clickTask=i.createTask(async t=>{const{pointerType:r,button:a,mapPoint:i}=e;if(("mouse"!==r||0===a)&&i)return e.stopPropagation(),e.preventDefault(),this._updatingHandles.addPromise(this.loadBestImage(i,{signal:t}))})},this.plotSelectedPointOnImage=async(e,t)=>{if(await g.waitTick(t),!e)return;const a=new k({...F.isSerializable(e)?e.toJSON():e});if("default"===this.mode)a.x-=.5,a.y=.5-a.y,a.spatialReference=this._imageViewer.imageRenderer.spatialReference.clone(),this._crossSymbol=new r({geometry:a,symbol:ne.crossSymbol}),this._imageViewer.addGraphic(this._crossSymbol,0);else if("panoramic"===this.mode){const{imageSize:t}=this._panoramicViewer;if(!t)return;const[a,i]=t,{heading:o,pitch:s}=$.convertPixelToHeadingPitch(e,a,i),n=$.convertHeadingPitchToSphereVertex(o,s);this._crossSymbol=new r({geometry:new k(n,L.WebMercator),symbol:ne.crossSymbol3D}),this._panoramicViewer.addGraphic(this._crossSymbol,0)}},this.handleSectorClick=this.handleSectorClick.bind(this),this.searchBestImage=this.searchBestImage.bind(this),this.transformAndPlotReferencePointOnImage=this.transformAndPlotReferencePointOnImage.bind(this)}initialize(){this.addHandles([v.watch(()=>this.view,()=>this.load(),v.syncAndInitial),v.watch(()=>this.view?.map,(e,t)=>{t?.layers.remove(this._overlays),e?.layers.add(this._overlays)},v.initial),v.watch(()=>this.view?.map?.allLayers?.length,e=>{e&&this.view?.map?.layers.reorder(this._overlays,e-1)},v.initial),v.watch(()=>[this.state,this.mapImageConversionToolState,this.view],()=>{this._createViewClickHandle(),this._createImageClickHandle()},v.syncAndInitial),v.watch(()=>[this.triangularMeasurementActive,this.currentBestFeatureMeasurementImage],()=>{this._createTriangularImageClickHandle()},v.syncAndInitial),v.watch(()=>[this.state,this.imageLocationToolState,this.view],(e,t)=>{if(this._createImageLocationHandle(),!this.imageLocationToolState)return this.clearPreviousGroundLocation(),void this._resetCursor();e[1]!==t?.[1]&&this._setMeasurementCursor()},v.syncAndInitial),v.watch(()=>this.measureType,()=>{this.clearPreviousMeasurements()},v.syncAndInitial),v.watch(()=>this.bestFeatureAngle,(e,t)=>{this.previousFeatureAngle=t??0},v.syncAndInitial),v.watch(()=>this.currentBestFeature,async(e,t)=>{p.abortMaybe(this._featureChangedTask),this._featureChangedTask=i.createTask(async r=>this.determineWorkflowForFeature.apply(this,[e,t,{signal:r}])),await this._featureChangedTask.promise},{sync:!0}),v.watch(()=>this.currentBestFeatureMeasurementImage,(e,t)=>{p.abortMaybe(this._featureChangedTask),t&&e!==t&&(this.measurementVectors=[],this.triangulatedPoint=null,this.sketchTriangularGraphicsLayer?.graphics.destroyAll()),this._featureChangedTask=i.createTask(async r=>{await this.determineWorkflowForTriangularMeasurement(e,t,{signal:r}),g.throwIfAborted(r),this._reorderTriangularSketchLayer()})},v.syncAndInitial),v.watch(()=>this.triangularMeasurementActive,(e,t)=>{t&&!e&&(this.measurementVectors=[],this.currentBestFeatureMeasurementImage=null,this.triangulatedDistanceMeasurement=null,this.triangulatedMeasurementGraphic=null,this.triangulatedPoint=null,this.updatingTriangularMeasurementState=!1,this.triangulatedAreaMeasurement=null,this.triangulatedDistanceAccuracy=null,this.triangulatedAreaAccuracy=0,this.sketchTriangularGraphicsLayer?.graphics.destroyAll(),this.clearReferencePointOnImage(),this.imageMeasurementViewer.clearImage(),this.imageMeasurementViewer.clearGraphics())}),v.watch(()=>this.mode,e=>{switch(this.removeHandles(_e),e){case"default":this.addHandles(v.watch(()=>{const{state:e}=this;return"image-loaded"===e?this._imageViewer.imagePointsInView:null},e=>{e&&(p.abortMaybe(this._updateFootprintTask),this._updateFootprintTask=i.createTask(async t=>{await this.updateFootprint(e,{signal:t})}))},{...v.syncAndInitial,equals:(e,t)=>a.equals(e,t,h.equalsShallow)}),_e);break;case"video":this.addHandles(v.watch(()=>{const{footprintExtent:e}=this;if(e)return ae.videoExtent},e=>{e&&(p.abortMaybe(this._updateFootprintTask),this._updateFootprintTask=i.createTask(async t=>{await this.updateFootprint(e,{signal:t})}))},{...v.syncAndInitial,equals:(e,t)=>a.equals(e,t,h.equalsShallow)}),_e);break;case"panoramic":this.addHandles(v.watch(()=>{const{currentBestFeature:e,state:t,_panoramicViewer:r}=this,{imageSize:a,vfov:i,hfov:o,pitch:s,yaw:n}=r;return e&&a&&!t.includes("loading")&&null!=i&&null!=o&&null!=s&&null!=n?[i,o,n,s]:null},e=>{if(!e||this.state.includes("loading"))return;const[t,r,a,o]=e;this.currentNode&&(this.currentNode.currentHeading=a+(this.currentNode.heading??0),this.currentNode.currentPitch=o+(this.currentNode.pitch??0)),p.abortMaybe(this._updateFootprintTask),this._updateFootprintTask=i.createTask(async e=>{await this.updateFootprintPanorama({verticalFieldOfView:t,horizontalFieldOfView:r,yaw:a,pitch:o},{signal:e}),this._updateFootprintTask=null})},{equals:(e,t)=>a.equals(e,t,h.equalsShallow)}),_e)}},v.syncAndInitial),v.watch(()=>[this.brightness,this.contrast,this.sharpness],()=>{const{_imageViewer:e,brightness:t,contrast:r,mode:a,sharpness:i}=this;"default"===a&&(e.brightness=t,e.contrast=r,e.sharpness=i)},v.syncAndInitial),v.watch(()=>this.activeViewer?.imageRenderer,()=>{this.sketch&&(this.sketch.view=this.activeViewer?.imageRenderer)}),v.watch(()=>this.activeViewer,e=>{this.removeHandles(be),e&&this.addHandles(v.on(()=>e,"hittest-response",this._handleImageHitTestResponse),be)})]),this.when().finally(()=>{this.notifyChange("state")})}destroy(){this.currentBestFeature=null,this._updateFootprintTask=p.abortMaybe(this._updateFootprintTask),this._clickTask=p.abortMaybe(this._clickTask),this.coverageFrustums.destroy(),this.coveragePolygons.destroy(),this.pointSources.destroy(),this.additionalFootprints.destroy(),this.additionalCameraLocations.destroy(),this.bestFeatureFootprint=p.destroyMaybe(this.bestFeatureFootprint),this.bestFeatureCurrentFootprint=p.destroyMaybe(this.bestFeatureCurrentFootprint),this.videoViewModel=p.destroyMaybe(this.videoViewModel),this._crossSymbol=p.destroyMaybe(this._crossSymbol),this._referencePointOnGround=p.destroyMaybe(this._referencePointOnGround),this._referencePointOnImage=p.destroyMaybe(this._referencePointOnImage),this._locationPointOnImage=p.destroyMaybe(this._locationPointOnImage),this._overlays&&this.view?.map?.remove(this._overlays),this._overlays.destroy(),this._imageViewer.destroy(),this.imageMeasurementViewer.destroy(),this._panoramicViewer.destroy()}get activeLayer(){return s.deprecatedProperty(u.getLogger(this),"activeLayer",{replacement:"layer"}),this.layer}set activeLayer(e){s.deprecatedProperty(u.getLogger(this),"activeLayer",{replacement:"layer"}),this.layer=e}get activeViewer(){const{_imageViewer:e,_panoramicViewer:t,mode:r}=this;switch(r){case"default":return e;case"panoramic":return t;default:return null}}get accuracyParametersMissing(){return this.layer?.orientationAccuracy?.every(e=>0===e)??!0}get brightness(){return this._get("brightness")??0}set brightness(e){this._set("brightness",d.clamp(e,-10,10))}get contrast(){return this._get("contrast")??0}set contrast(e){this._set("contrast",d.clamp(e,-10,10))}get currentNode(){const{currentBestFeature:e,navigationNodes:t}=this;return t.find(t=>t.id===e?.attributes.objectId)}get featureCount(){return this.features?.length??0}get imageGalleryEnabled(){const{currentBestFeature:e}=this;if(!e)return!1;const t=e.attributes.imagePath?.trim();return ce.isTifOrMrf(t)||oe.isFeatureAttachment(t)}get imageLoaded(){return s.deprecatedProperty(u.getLogger(this),"imageLoaded",{replacement:'Use OrientedImageryViewer.state === "image-loaded"',version:"4.29",warnOnce:!0}),"image-loaded"===this.state}get invalidCameraHeading(){return this.currentBestFeature?.attributes?.cameraHeading===ae.invalidCameraHeading}get imagePointsInView(){const{mode:e,_imageViewer:t}=this;return"default"===e?t.imagePointsInView:null}get layerView(){const{layer:e,view:t}=this;if(e&&t)return t.allLayerViews.find(ce.filterOILLayerView(e))}get layerFloorFilterClause(){const{layerView:e}=this;return e?K.getFloorFilterClause(e):null}get mode(){const e=this.currentBestFeature?.attributes;if(!e)return"none";if(e.orientedImageryType?.includes("video"))return"video";const{horizontalFieldOfView:t,isSpherical:r}=e;return 360===t||r?"panoramic":"default"}get popupEnabled(){return!0===this.layer?.popupEnabled}get referencePoint(){return this._referencePointOnGround?.geometry}get sectorData(){const{_sectorData:e}=this;return e?ae.sectorsInOrder.map(t=>e[t]):null}get sharpness(){return this._get("sharpness")??0}set sharpness(e){this._set("sharpness",d.clamp(e,0,1))}get sketchGraphicsLayer(){return this.sketch?.layer}get state(){const{mode:e,disabled:t,_updatingHandles:{updating:r},_featureChangedTask:a}=this;if(t)return"disabled";if(!this.isFulfilled()||r||!1===a?.finished)return"loading";if(this.isRejected())return"error";if("error"===this.displayMessage?.type)return"image-load-error";switch(e){case"default":return this._imageViewer.state;case"panoramic":return this._panoramicViewer.state;case"video":return this.videoElement?.loaded?"video-loaded":"video-not-loaded"}return"ready"}get thumbnails(){const{features:e}=this;return e?new o(e.map(({attributes:{imagePath:e,objectId:t,cameraRoll:r,imageRotation:a}})=>{const i=e?.trim();return ce.isTifOrMrf(i)||oe.isFeatureAttachment(i)?{url:i,objectId:t,rotation:(r??0)+(a??0)}:null}).filter(a.isSome)):null}set view(e){this._set("view",e)}get _sketchGraphicsLayer(){const{mode:e}=this;switch(e){case"panoramic":return new E({elevationInfo:{mode:"absolute-height"}});case"default":return new E;default:return}}get _overlaysView(){return this.view?.layerViews.find(({layer:e})=>e===this._overlays)}beforeLoad(){this.view?.closePopup(),this.displayMessage=null,this.clearPreviousGroundLocation(),this.triangularMeasurementActive=!1,this.currentBestFeatureMeasurementImage=null,this.measureType=null,this.imageLocationToolState=!1,this.features.removeAll(),this.currentBestFeature=null,this.additionalFeatures.removeAll(),this.additionalFootprints.removeAll(),this.additionalCameraLocations.removeAll(),this.bestFeatureCurrentFootprint=p.destroyMaybe(this.bestFeatureCurrentFootprint),this._overlays?.removeAll()}async computeHeight(e,t,r=!0){const{currentBestFeature:a,activeViewer:i,layer:o,footprintExtent:s}=this,n=i?.imageSize,c=a?.attributes,l=o?.orientationAccuracy;if(!c||!n||!e||e.length<2||!l)return;const h="panoramic"===t?await this.getMeasurementPropertiesPanoramic():$.getImageToWorldProperties(c,n[0],n[1]),u=e.at(0),d=e.at(-1);if(!(h&&u&&d&&l&&s))return;const p=[d,u],m=se.formatPixels(p,!1),g="panoramic"===t?await se.heightMeasurementPanoramic(p,h,l,a,!0,!1):await se.heightMeasurement2D(p,h,l,!0,r);if(!g)return;const y="panoramic"===t?await se.calculateHeightAccuracyPanoramic(l,m,h,g,a,!0):await se.calculateHeightAccuracy(l,m,h,g,!0);return y?{value:g,accuracy:y}:{value:g}}async calculateAreaMeasurement(e,t,r){if(e.length<3||!this.currentBestFeature||!this.activeViewer?.imageSize||"none"===t)return null;const a="default"===t?await this.getMeasurementProperties():await this.getMeasurementPropertiesPanoramic();return g.throwIfAborted(r),a?"default"===t?await se.pixelAreaMeasurement2D(e,a,!0):await se.pixelAreaMeasurementPanoramic(e,a,!0,r):null}async calculateDistanceMeasurement(e,t,r){const{currentBestFeature:a,activeViewer:i}=this;if(e.length<2||!a||!i?.imageSize||"none"===t)return null;const o="default"===t?await this.getMeasurementProperties():await this.getMeasurementPropertiesPanoramic();return g.throwIfAborted(r),o?"default"===t?await se.pixelDistanceMeasurement2D([e.at(0),e.at(-1)],o,!0):await se.pixelDistanceMeasurementPanoramic([e.at(0),e.at(-1)],o,!0):null}async calculateAccuracy(e,t,r){const{layer:a,currentBestFeature:i,activeViewer:o}=this,s=a?.orientationAccuracy,n=s?.every(e=>0===e)||!s?.length;if("area"===t&&e.length<3||"distance"===t&&e.length<2||!i||!o?.imageSize||n)return null;let c=null;if(this.triangularMeasurementActive&&this.currentBestFeatureMeasurementImage&&this.imageMeasurementViewer?c=await this.getMeasurementProperties(this.currentBestFeatureMeasurementImage,this.imageMeasurementViewer):(c=await this.getMeasurementProperties(),g.throwIfAborted(r)),!c)return null;const l="area"===t?await se.pixelAreaMeasurement2D(e,c,!0):await se.pixelDistanceMeasurement2D([e.at(0),e.at(-1)],c,!0);g.throwIfAborted(r);const{updateElevationProps:h,...u}=c,d=se.generateCombinations(u,s);if(!d?.length)return null;const p=d.map(e=>({...e,updateElevationProps:h})).map(async a=>{const i="area"===t?await se.pixelAreaMeasurement2D(e,a,!0):await se.pixelDistanceMeasurement2D([e.at(0),e.at(-1)],a,!0);if(g.throwIfAborted(r),i&&l){if("area"===t){const e="number"!=typeof i?i.area:null;return e?Math.abs(e-l.area):null}return Math.abs(i-l)}return null}),m=await Promise.all(p);g.throwIfAborted(r);const y=m.filter(e=>null!==e);return 0===y.length?null:se.getRootOfSumOfSquaredErrors(y)}async calculateLocationAccuracy(e,t,r="default",a){const{layer:i,currentBestFeature:o}=this,s=i?.orientationAccuracy,n=this.view?.spatialReference,c=s?.every(e=>0===e)||!s?.length;if(!o||c)return null;const l="default"===r?await this.getMeasurementProperties():await this.getMeasurementPropertiesPanoramic();if(g.throwIfAborted(a),!l)return null;const{updateElevationProps:h,...u}=l,d="default"===r?se.generateCombinations(u,s):se.generateCombinationsPanoramic(u,s);if(!d?.length)return null;const p=d.map(e=>({...e,updateElevationProps:h})).map(async i=>{const{updateElevationProps:o,...s}=i;let c="default"===r?await U.imageToWorld(e,s,o):await U.imageToWorldPanoramic(e,s,o);return g.throwIfAborted(a),n&&!c.spatialReference.equals(n)&&(c=await G.projectWithZConversion(c,n),g.throwIfAborted(a)),c&&t?[Math.abs(c.x-t.x),Math.abs(c.y-t.y),c.z&&t.z?Math.abs(c.z-t.z):0]:null}),m=await Promise.all(p);if(g.throwIfAborted(a),!m?.length)return null;const y=m.map(e=>[e?.[0]??0,e?.[1]??0,e?.[2]??0]),[v,w,f]=se.calculateLocationAccuracyFromDeviations(y);return{x:v,y:w,z:f}}async calculateAccuracyPanoramic(e,t,r){const{layer:a,currentBestFeature:i,activeViewer:o,mode:s}=this,n=a?.orientationAccuracy,c=n?.every(e=>0===e)||!n?.length;if("area"===t&&e.length<3||"distance"===t&&e.length<2||!i||!o?.imageSize||c||"panoramic"!==s)return null;const l=await this.getMeasurementPropertiesPanoramic();if(g.throwIfAborted(r),!l)return null;const h="area"===t?await se.pixelAreaMeasurementPanoramic(e,l,!0):await se.pixelDistanceMeasurementPanoramic([e.at(0),e.at(-1)],l,!0);g.throwIfAborted(r);const{updateElevationProps:u,...d}=l,p=se.generateCombinationsPanoramic(d,n);if(!p?.length)return null;const m=p.map(e=>({...e,updateElevationProps:u})).map(async a=>{const i="area"===t?await se.pixelAreaMeasurementPanoramic(e,a,!0):await se.pixelDistanceMeasurementPanoramic([e.at(0),e.at(-1)],a,!0);if(g.throwIfAborted(r),i&&h){if("area"===t){const e="number"!=typeof i?i.area:null;return e?Math.abs(e-h.area):null}return Math.abs(i-h)}return null}),y=await Promise.all(m);g.throwIfAborted(r);const v=y.filter(e=>null!==e);return 0===v.length?null:se.getRootOfSumOfSquaredErrors(v)}async calculateHeightMeasurementInfo(e,t,r){const{currentBestFeature:a,activeViewer:i}=this,o=i?.imageSize;if(!a||!i||!o?.length||"none"===t)return;const{attributes:s}=a,[n]=se.formatPixels([e],"panoramic"!==t),c="panoramic"===t?await this.getMeasurementPropertiesPanoramic():$.getImageToWorldProperties(s,o[0],o[1]);if("panoramic"===t){if(!c)return;const e=await se.calculateReferenceImagePointPanoramic(n,c,a,r);if(!e)return;e?.heading>180&&(e.heading-=360);const t=se.calculateAnglePano(n,e),i=P.distance([n.x,n.y],[e.x,e.y]);if(!t||!i)return;return{measurementAngle:t,tempDistance:i}}const l=await se.calculateTempImagePoint(n,c,r);if(!l)return;const h=se.calculateAngle(n,l),u=P.distance([n.x,n.y],[l.x,l.y]);return h&&u?{measurementAngle:h,tempDistance:u}:void 0}async calculateTriangulatedMeasurements(e){switch(this.measureType){case"distance":{this.triangulatedDistanceMeasurement=await se.computeTriangulatedDistanceMeasurement(this.measurementVectors);const t=await this.calculateAccuracy(e,"distance");if(t&&this.triangulatedDistanceMeasurement?.distance){const e=Math.atan(t/this.triangulatedDistanceMeasurement.distance);this.triangulatedDistanceAccuracy={distanceAccuracy:t,angleAccuracy:e}}break}case"area":if(this.currentBestFeatureMeasurementImage?.geometry.spatialReference){const t=await se.computeTriangulatedAreaMeasurement(this.measurementVectors,this.currentBestFeatureMeasurementImage.geometry.spatialReference);this.triangulatedAreaMeasurement=t,this.triangulatedAreaAccuracy=await this.calculateAccuracy(e,"area")??this.triangulatedAreaAccuracy}}}clearPreviousMeasurements(){this.clearMeasurementGraphics(),this.resetMeasurementData(),this.stopMeasurement()}clearPreviousGroundLocation(){this.groundCoordinates=null,this.groundCoordinatesAccuracy=null,this.pixelCoordinates=null,this.clearLocationPointOnImage()}clearMeasurementGraphics(){this.measurementGraphic&&(this.activeViewer?.removeGraphic(this.measurementGraphic),this.measurementGraphic=null),this.heightGraphic&&(this.activeViewer?.removeGraphic(this.heightGraphic),this.heightGraphic=null),this.triangularMeasurementActive&&this.sketchTriangularGraphicsLayer?.graphics.destroyAll()}digitizeCancel(){return this.sketch?.cancel()}digitizeCanRedo(){return this.sketch?.canRedo()??!1}digitizeCanUndo(){return this.sketch?.canUndo()??!1}digitizeComplete(){return this.sketch?.complete()}async digitizeCreate(e,t){const{sketch:r,dataCaptureLayer:a}=this;if(!r)throw Ae();ie.configureSketchTool(a,e,r),await r.create(e,{...t,defaultZ:0})}digitizeDelete(){if(!this.sketch)throw Ae();return this.sketch.delete()}digitizeDuplicate(){if(!this.sketch)throw Ae();return this.sketch.duplicate()}digitizePlace(e,t){if(!this.sketch)throw Ae();return this.sketch.place(e,t)}digitizeRedo(){if(!this.sketch)throw Ae();return this.sketch.redo()}digitizeUndo(){if(!this.sketch)throw Ae();return this.sketch.undo()}digitizeUpdate(e,t){if(!this.sketch)throw Ae();return this.sketch.update(e,t)}async displayHeightResults(){const{currentBestFeature:e,activeViewer:t,heightMeasurementPixels:r,mode:a}=this,i=t?.imageSize,o=e?.attributes;if(!o||!i)return;const s=await this.computeHeight(r,a);s?.value&&s?.accuracy&&(this.heightMeasurementResult=s.value,this.heightMeasurementAccuracy=s.accuracy)}filterByFootprints(e,t,r=!1){const a=[],i=[],o=[];return e.forEach(e=>{const{layer:{coveragePercent:s},attributes:n}=e;let c;const{polygon:l,frustum:h}=z.createCoveragePolygon(n);if(c=l.clone(),n.isInspection&&(c=z.computePolygonForInspection(n)),s&&(c=z.resizePolygon(c,s)),r||!t||z.checkIfPolygonContainsSelectedPoint(c,t)){o.push(e);const{geometry:t,objectId:r,cameraHeight:s,cameraHeading:c}=n,u=t.clone();u.z=s,u.imageID=r,this.pointSources.push(u),c!==ae.invalidCameraHeading&&(a.push(l),h&&i.push(h))}}),{features:o,polygons:a,frustums:i}}getMeasurementProperties(e=this.currentBestFeature,t=this.activeViewer){if(!e||!t?.imageSize)return;const{elevationSample:r,attributes:a}=e,{elevationSource:i,cameraHeight:o}=a,s=$.getImageToWorldProperties(a,t.imageSize[0],t.imageSize[1]);let n=s.cameraLocation;return(n.spatialReference.isGeographic?G.projectWithZConversion(n,L.WebMercator):Promise.resolve(n)).then(e=>(n=e,$.getUpdateElevationProps(n.spatialReference,n.z??0,o,{elevationSample:r,elevationSource:i,extent:this.footprintExtent}))).then(t=>("elevationSample"in t&&$.isElevationSampler(t.elevationSample)&&(e.elevationSample=t.elevationSample),{...s,cameraLocation:n,updateElevationProps:t}))}getMeasurementPropertiesPanoramic(){const{currentBestFeature:e,activeViewer:t}=this;if(!e||!t?.imageSize)return;const{elevationSample:r,attributes:a}=e,{elevationSource:i,cameraHeight:o}=a,s=$.getImageToWorldPanoramicProperties(a,t.imageSize[0],t.imageSize[1]);let n=s.cameraLocation;return(n.spatialReference.isGeographic?G.projectWithZConversion(n,L.WebMercator):Promise.resolve(n)).then(e=>(n=e,$.getUpdateElevationProps(n.spatialReference,n.z??0,o,{elevationSample:r,elevationSource:i,extent:this.footprintExtent}))).then(t=>("elevationSample"in t&&$.isElevationSampler(t.elevationSample)&&(e.elevationSample=t.elevationSample),{...s,cameraLocation:n,updateElevationProps:t}))}async deleteDataCaptureFeatures(e){const{dataCaptureLayer:t}=this;if(!t)throw new n("orientedimagery","Data capture layer is not available");return t.queryFeatures({objectIds:e}).then(({features:e})=>t.applyEdits({deleteFeatures:e}))}handleSectorClick(e){if(isNaN(e))return;const t=this._sectorData?.[ae.sectorsInOrder[e]],r=t?.at(0);r&&(this.triangularMeasurementActive&&this.currentBestFeature?this._updateImageMeasurementBestFeature(r):this._updateCurrentBestFeature(r))}handleFeatureClick(e){const{sector:t,featureIndexInSector:r}=e;if(isNaN(r))return;const a=this._sectorData?.[t],i=a?.at(r);i&&(this.triangularMeasurementActive&&this.currentBestFeature?this._updateImageMeasurementBestFeature(i):this._updateCurrentBestFeature(i))}handleDrawCursorUpdateEvents(e){const{measurementAngle:t,tempDistance:r,heightMeasurementPixels:a,mode:i,activeViewer:o,currentBestFeature:s}=this,n=o?.imageSize;if(!e.vertices||!n||!s)return;const c=se.getModeCorrectedPoint(e.vertices.at(-1),i,n);if(a.length<1||!c||!r||!t||"none"===i)return;const l=se.calculateCorrectedPixel(a[0],c,t);if(!l?.length)return;this.heightMeasurementPixels.push(l),"panoramic"===i?this.createPolylineGraphicPano():this.createPolylineGraphic();const h=se.getUnitRateFromSpatialReference(s.attributes.location.spatialReference),u=se.calculateHeightFromTemporaryDistance(this.heightMeasurementPixels,r,h);u&&(this.heightMeasurementResult=u)}async handleDrawVertexAddEvents(e,t){const{currentBestFeature:r,activeViewer:a,heightMeasurementPixels:i,mode:o}=this;if(!r||!a||!e.vertices?.length||"none"===o)return;const s=a?.imageSize;if(!i.length&&s){const r=se.getModeCorrectedPoint(e.vertices.at(-1),o,s);this.heightMeasurementPixels.push(r);const a=await this.calculateHeightMeasurementInfo(r,o,t);if(!a?.measurementAngle||!a?.tempDistance)return;this.measurementAngle=a.measurementAngle,this.tempDistance=a.tempDistance}}load(e){return this.addResolvingPromise(this._loadViewAdapter(e).catch(e=>{if(!g.isAbortError(e))throw e})),this}async loadBestImage(e,t){return this.selectedPoint=W.convertGeographicToWebMercator(e),this.beforeLoad(),this._fetchFeaturesWithController(e,t)}loadImageError(e){u.getLogger(this).error("oriented-imagery-viewer:load-image",e),this.setMessage("imageLoadError","error",e.message)}async loadSketch(t){if(!this.sketch){const r=new Promise((t,r)=>e(["../Sketch/SketchViewModel"],e=>t(ye(e)),r)),{default:a}=await r;g.throwIfAborted(t),this.sketch=new a({layer:this._sketchGraphicsLayer,view:this.activeViewer?.imageRenderer,updateOnGraphicClick:!1,defaultUpdateOptions:{reshapeOptions:{edgeOperation:"none",shapeOperation:"none",vertexOperation:void 0},enableMoveAllGraphics:!1,enableRotation:!1,enableScaling:!1,multipleSelectionEnabled:!1,toggleToolOnClick:!1,tool:"transform"}})}return this.sketch}async loadMeasurementAdapter(t){if(!this.sketchAdapter){const r=new Promise((t,r)=>e(["./adapters/sketch/MeasurementAdapter"],e=>t(ye(e)),r)),{default:a}=await r;if(g.throwIfAborted(t),this.sketchAdapter=new a({viewModel:this}),!this.sketchAdapter.viewModel.isResolved())return}return this.sketchAdapter}async loadTriangulatedMeasurementAdapter(t){if(!this.triangulatedMeasurementAdapter){const r=new Promise((t,r)=>e(["./adapters/sketch/TriangulatedMeasurementAdapter"],e=>t(ye(e)),r)),{default:a}=await r;if(g.throwIfAborted(t),this.triangulatedMeasurementAdapter=new a({viewModel:this}),!this.triangulatedMeasurementAdapter.viewModel.isResolved())return}return this.triangulatedMeasurementAdapter}async processFeatureResponse(e,t,r){const{features:a}=e;if(this._clearFeatureGeometries(),!this._checkFeatures(a))return;const{features:i,polygons:o,frustums:s}=this.filterByFootprints(a,t,r?.skipFilter);if(!this._checkFeatures(i))return;this.coveragePolygons.addMany(o),this.coverageFrustums.addMany(s);const n=await this.processElevationSample(o,i,r);g.throwIfAborted(r),await this._updateElevationOfSelectedPointAndLocations(i,t,n),g.throwIfAborted(r),ce.assignElevationSampleToFeatures(i,n);const c=this._processSuitableFeatures(i,t);this.updateSuitabilities(c,r?.loadBestImage)}async startMeasurement(e,t){this.sketch||await this.loadSketch(t),await this.loadMeasurementAdapter(t);const{sketch:r,sketchAdapter:a,activeViewer:i,mode:o}=this;if(!r||!a||!i||"none"===o)return;if(this.displayNewMeasurementButton=!1,"panoramic"===o&&(r.defaultCreateOptions.defaultZ=0),await r.create(e),"panoramic"===o){const{drawOperation:e}=r.view.activeTool;e.constraintsEnabled=!1,e._set("elevationDrawSurface",null)}const s=this.activeViewer?.imageRenderer.effectiveTheme.accentColor;s&&this.sketch&&(this.sketch.polygonSymbol=ne.measurementPolygonSymbol(s),this.sketch.polylineSymbol="panoramic"===o?ne.polylineSymbolPanoramic:ne.measurementPolylineSymbol(s,2.5))}startHeightMeasurement(){this.heightMeasurementPixels=[],this.displayNewMeasurementButton=!1,this.draw??=new Y({view:this.activeViewer?.imageRenderer}),this.draw.create("polyline").on(["cursor-update","vertex-add","draw-complete"],e=>this.handleDrawEvents(e))}createPolylineGraphic(){const e=[this.heightMeasurementPixels[0],this.heightMeasurementPixels.at(-1)],t=this.activeViewer?.imageRenderer.spatialReference;if(this.heightGraphic)this.heightGraphic.geometry=new T({paths:[e],spatialReference:t});else{const a=new T({paths:[e],spatialReference:t}),i=this.activeViewer?.imageRenderer.effectiveTheme.accentColor;this.heightGraphic=new r({geometry:a,symbol:ne.measurementPolylineSymbol(i,2.5)}),this.activeViewer?.addGraphic(this.heightGraphic)}}createPolylineGraphicPano(){const e=this.activeViewer?.imageRenderer.spatialReference,t=this.activeViewer?.imageSize;if(!t)return;const a={x:this.heightMeasurementPixels[0][0],y:this.heightMeasurementPixels[0][1]},i={x:this.heightMeasurementPixels.at(-1)[0],y:this.heightMeasurementPixels.at(-1)[1]},{heading:o,pitch:s}=$.convertPixelToHeadingPitch(a,t[0],t[1]),{heading:n,pitch:c}=$.convertPixelToHeadingPitch(i,t[0],t[1]),l=[[...$.convertHeadingPitchToSphereVertex(o,s)],[...$.convertHeadingPitchToSphereVertex(n,c)]];if(this.heightGraphic)this.heightGraphic.geometry=new T({paths:[l],spatialReference:e});else{const t=new T({paths:[l],spatialReference:e});this.heightGraphic=new r({geometry:t,symbol:ne.polylineSymbolPanoramic}),this._panoramicViewer.addGraphic(this.heightGraphic,0)}}async editOverlayedGraphics(e){this.sketchTriangularGraphicsLayer||this._initializeSketchTriangularGraphicsLayer(),this.sketchTriangularGraphicsLayer?.destroyed&&this._handleDestroyedTriangularSketchLayer(),this.sketchTriangularGraphicsLayer.add(e),this.sketchTriangular||(this._initializeSketchTriangular(),await this.loadTriangulatedMeasurementAdapter()),this.updateOverlayedGeometry(e)}updateOverlayedGeometry(e){this.sketchTriangular?.update([e],{tool:"reshape"})}async processMeasurementVectors(e){this.triangularMeasurementActive&&this.currentBestFeature&&(this.measurementVectors?.length<2&&await this.updateMeasurementVectorsArray(e),2===this.measurementVectors.length&&await this.calculateTriangulatedMeasurements(e))}async updateMeasurementVectorsArray(e){const t=this.measurementVectors.length?this.currentBestFeatureMeasurementImage:this.currentBestFeature;if(t){const r=await this.computeMeasurementVector(e,t);r&&this.measurementVectors.push(r)}}async computeMeasurementVector(e,t){const{activeViewer:r,mode:a}=this,i=r?.imageSize;if(!e||!t||!i)return;const o=e.map(e=>[e[0]-.5,-.5-e[1]]),s=this.view?.spatialReference,n=[];for(let e=0;e<o.length;e++){const r={x:o[e][0],y:o[e][1]};let c=await this.getMapPoint(r,{feature:t,imageSize:i,mode:a});s&&!c.spatialReference.equals(s)&&(c=await G.projectWithZConversion(c,s)),n.push(c)}return se.computeTriangulatedVector(n,t)}async handleDrawEvents(e,t){if(this.draw)switch(e.type){case"cursor-update":this.handleDrawCursorUpdateEvents(e);break;case"vertex-add":await this.handleDrawVertexAddEvents(e,t);break;case"draw-complete":await this.displayHeightResults()}}initializeMeasurement(e){switch(this.clearMeasurementGraphics(),this.resetMeasurementData(),e){case"distance":this.startMeasurement("polyline");break;case"area":this.startMeasurement("polygon");break;case"height":this.startHeightMeasurement()}}async overlayCameraLocations(e){const{activeViewer:t,currentBestFeature:a,overlayedCameraLocations:i,layer:o,mode:s,state:n,layerFloorFilterClause:c}=this,l=t?.imageSize;if(!l||!a||!o||"none"===s||n.includes("loading"))return;const{polygon:h}=z.createCoveragePolygon(a.attributes);if(t.removeManyGraphics(i.toArray()),i.removeAll(),e){const{features:e}=await o.queryFeatures({where:w.sqlAnd(`${o.objectIdField} <> ${a.attributes.objectId}`,w.sqlAnd(o.definitionExpression,c)),geometry:h,returnGeometry:!0,outFields:[o.objectIdField]}),n=await Promise.all(e.map(async e=>{const{attributes:t,geometry:i}=e,o=await this.getPixels(i,{feature:a,imageSize:l,mode:s}),n="panoramic"===s?ne.cameraOverlaySymbol3D():ne.cameraOverlaySymbol();return new r({attributes:t,symbol:n,geometry:o})}));i.addMany(n),t.addManyGraphics(i.toArray())}}overlayGraphicsOnImage(e,t){this.removeOverlayedGraphicsOnImage(e),this.overlayedMapFeatures.set(e,t),this.activeViewer?.addManyGraphics(t.toArray())}async overlayMapFeatures(e,t=!1){const{activeViewer:i,currentBestFeature:s,mode:n,state:c,layer:l}=this,h=i?.imageSize;if(!h||!s||"none"===n||"video"===n||c.includes("loading")||!l)return;const{polygon:d}=z.createCoveragePolygon(s.attributes);try{const{imageGeometryField:t,oiObjectIdField:r}=ie.extractFieldsFromDataCaptureLayer(e,l.imageGeometryField,l.imageReferenceField);this.imageGeometryField=t.name,this.oiObjectIdField=r.name}catch(e){u.getLogger(this).warn("oriented-imagery-viewer:overlay-map-features",e)}const{features:p}=await e.queryFeatures({geometry:d,returnGeometry:!0,outFields:["*"]}),m=new o((await Promise.all(p.map(async a=>{const i=a.symbol?.clone()??e.renderer?.getSymbol(a)?.clone(),{attributes:o,geometry:c}=a,l=c,{imageGeometryField:d,oiObjectIdField:p}=this;if(d&&p&&ie.isValidDataCaptureLayer(e,d,p)&&`${o[p]}`==`${s.attributes.objectId}`)try{return ie.constructGraphicFromImageGeometry(o,d,e,t,h,n,i)}catch(t){u.getLogger(this).warn("oriented-imagery-viewer:overlay-map-features","couldn't create graphic from attributes, geometry will be used",{error:t,feature:a,layer:e,imageGeometryField:this.imageGeometryField,imageReferenceField:this.oiObjectIdField})}switch(l?.type){case"point":{const a=await this.getPixels(l,{feature:s,imageSize:h,mode:n});return new r({attributes:o,layer:e,symbol:i,geometry:a,visible:e.visible&&t})}case"polygon":{const{rings:a,spatialReference:c}=l,u=a.map(e=>e.map(([e,t,r])=>new k({x:e,y:t,z:r,spatialReference:c}))),d=await Promise.all(u.map(async e=>this.getPixels(e,{feature:s,imageSize:h,mode:n}).then(e=>e.map($.pointToArray))));return new r({attributes:o,layer:e,symbol:i,geometry:new C({rings:d,spatialReference:L.WebMercator}),visible:e.visible&&t})}case"polyline":{const{paths:a,spatialReference:c}=l,u=a.map(e=>e.map(([e,t,r])=>new k({x:e,y:t,z:r,spatialReference:c}))),d=await Promise.all(u.map(async e=>this.getPixels(e,{feature:s,imageSize:h,mode:n}).then(e=>e.map($.pointToArray))));return new r({attributes:o,layer:e,symbol:i,geometry:new T({paths:d,spatialReference:L.WebMercator}),visible:e.visible&&t})}case"multipoint":{const{points:a,spatialReference:c}=l,u=a.map(([e,t,r])=>new k({x:e,y:t,z:r,spatialReference:c})),d=await this.getPixels(u,{feature:s,imageSize:h,mode:n}).then(e=>e.map($.pointToArray));return new r({attributes:o,layer:e,symbol:i,geometry:new V({points:d,spatialReference:L.WebMercator}),visible:e.visible&&t})}}return null}))).filter(a.isSome));this.overlayGraphicsOnImage(`${e.id}`,m)}async getPixels(e,t){const{imageSize:r,mode:a,feature:i}=t,o=(await this.worldToImage(Array.isArray(e)?e:[e],i)).map(e=>{if("default"===a)return new k({x:e.x-.5,y:.5-e.y,spatialReference:L.WebMercator});const[t,i]=r,{heading:o,pitch:s}=$.convertPixelToHeadingPitch(e,t,i),n=$.convertHeadingPitchToSphereVertex(o,s);return new k(n,L.WebMercator)});return Array.isArray(e)?o:o[0]}async getMapPoint(e,t){const{feature:r,mode:a,imageSize:i}=t,{elevationSample:o,attributes:s}=r,{elevationSource:n,location:c,cameraHeight:l}=s;let h=c.clone();h.spatialReference.isGeographic&&(h=await G.projectWithZConversion(h,L.WebMercator));const u=await $.getUpdateElevationProps(c.spatialReference,c.z??0,l,{elevationSample:o,elevationSource:n,extent:this.footprintExtent});let d;if("elevationSample"in u&&$.isElevationSampler(u.elevationSample)&&(r.elevationSample=u.elevationSample),"default"===a){const t=$.getImageToWorldProperties(s,i[0],i[1]);d=await U.imageToWorld(Array.isArray(e)?e:[e],{...t,cameraLocation:h},u)}else{const t=$.getImageToWorldPanoramicProperties(s,i[0],i[1]);d=await U.imageToWorldPanoramic(Array.isArray(e)?e:[e],{...t,cameraLocation:h},u)}return Array.isArray(e)?d:d[0]}getActiveSectors(){return ae.sectorsInOrder.filter(e=>this._sectorData?.[e]?.length)}async plotMapPoint(e){return this.plotReferencePoint(e),this.transformAndPlotReferencePointOnImage({feature:this.currentBestFeature,selectedLocation:e,options:{signal:this._transformController?.signal}})}plotReferencePointOnGround(e){this._referencePointOnGround&&(this._overlays?.remove(this._referencePointOnGround),this._referencePointOnGround.destroy()),null!=e&&(this._referencePointOnGround=new r({geometry:new k({...e.toJSON()}),symbol:ne.diamondSymbol}),this.view?this._overlays?.add(this._referencePointOnGround):this.emit("plot-ground-point",{data:{point:this._referencePointOnGround?.geometry}}))}plotReferencePointOnImage(e){if("image-loaded"===this.state)switch(this.clearReferencePointOnImage(),this.mode){case"default":{const t=F.isSerializable(e)?e.toJSON():e;t.x-=.5,t.y=.5-t.y,this._referencePointOnImage=new r({geometry:new k({spatialReference:this._imageViewer.imageRenderer.spatialReference,...t}),symbol:ne.diamondSymbol}),this._imageViewer.addGraphic(this._referencePointOnImage,0);break}case"panoramic":{const{imageSize:t}=this._panoramicViewer;if(!t)return;const[a,i]=t,{heading:o,pitch:s}=$.convertPixelToHeadingPitch(e,a,i),n=$.convertHeadingPitchToSphereVertex(o,s);this._referencePointOnImage=new r({geometry:new k(n,L.WebMercator),symbol:ne.diamondSymbol3D}),this._panoramicViewer.addGraphic(this._referencePointOnImage,0);break}}}plotLocationPointOnImage(e,t=!1){if("image-loaded"===this.state)switch(this.clearLocationPointOnImage(t),this.mode){case"default":this._plotLocationPointOnDefaultImage(e,t);break;case"panoramic":this._plotLocationPointOnPanoramicImage(e)}}removeAllOverlayMapFeatures(){this.overlayedMapFeatures.forEach(e=>{this._imageViewer.removeManyGraphics(e.toArray())}),this.overlayedMapFeatures.clear()}removeOverlayedGraphicsOnImage(e){const t=this.overlayedMapFeatures.get(e);t?.length&&(this.activeViewer?.removeManyGraphics(t.toArray()),this.overlayedMapFeatures.delete(e))}resetImage(){switch(this.setMessage("onLoadMessage","info"),this.mode){case"default":this._imageViewer.clearImage(),this._imageViewer.clearGraphics();break;case"panoramic":this._panoramicViewer.clearGraphics()}this._clickTask=p.abortMaybe(this._clickTask)}resetVideo(){this.setMessage("onLoadMessage","info"),this.videoViewModel?.resetVideoHandler(),this._overlays?.removeAll(),this.videoViewModel=null,this.featureCache=[],this.currentBestFeature=null}resetMeasurementData(){this.areaMeasurementResult=0,this.areaMeasurementAccuracy=0,this.distanceMeasurementResult=0,this.distanceAccuracyArray=[],this.heightMeasurementPixels=[],this.measurementVectors=[],this.heightMeasurementResult=0,this.tempDistance=null,this.measurementAngle=null,this.heightMeasurementAccuracy=0,this.heightGraphic=null,this.triangulatedDistanceMeasurement=null,this.triangulatedDistanceAccuracy=null,this.triangulatedAreaMeasurement=null,this.triangulatedMeasurementGraphic=null,this.updatingTriangularMeasurementState=!1,this.triangulatedAreaAccuracy=0}async saveDrawing(){const{dataCaptureLayer:e,sketchAdapter:t}=this;if(!e||"data-capture"!==t?.type)return;const{pendingGraphics:r,savedGraphics:a}=t,i=r.get(e.id),o=i?.toArray();if(!i||!o?.length)return;const{addFeatureResults:s}=await this.saveDataCaptureFeatures(o),n=s.reduce((t,{objectId:r,globalId:a,error:i},s)=>{const n=o[s],{attributes:c}=n;return i?t.error.push(n):(r&&(c[e.objectIdField]=r),a&&e.globalIdField&&(c[e.globalIdField]=a),t.success.push(n)),t},{success:[],error:[]});a.addMany(n.success),i.removeAll(),i.addMany(n.error)}async saveDataCaptureFeatures(t){const{activeViewer:r,currentBestFeature:i,dataCaptureLayer:o,mode:s}=this,c=r?.imageSize;if(!c||!i||"none"===s||"video"===s)throw new n("orientedimagery","Image size, current best feature and mode are required to save data capture features");if(!o)throw new n("orientedimagery","Data capture layer is not available");const l=await Promise.all(t.map(async t=>{const r=t.clone(),{geometry:a}=r;if(!a)return;const n=a.type,l=o.hasZ,h=o.geometryType,u=n!==h,d=u?await new Promise((t,r)=>e(["./transformers"],e=>t(ye(e)),r)):null,p=d?.default[h],m=u?p?.(a):a;if(m)switch(m.type){case"point":return r.geometry=await this.getMapPoint($.transformGraphicCoordinatesToPixel(s,m,c),{feature:i,imageSize:c,mode:s}),l||(delete r.geometry.z,r.geometry.hasZ=!1),r.geometry.hasM=!1,r;case"polygon":{const e=await Promise.all(m.rings.map(async e=>this.getMapPoint(e.map(([e,t,r])=>$.transformGraphicCoordinatesToPixel(s,{x:e,y:t,z:r},c)),{feature:i,imageSize:c,mode:s})));return r.geometry=new C({spatialReference:e[0][0].spatialReference,hasZ:l,hasM:!1,rings:e.map(e=>e.map($.pointToArray))}),r}case"polyline":{const e=await Promise.all(m.paths.map(async e=>this.getMapPoint(e.map(([e,t,r])=>$.transformGraphicCoordinatesToPixel(s,{x:e,y:t,z:r},c)),{feature:i,imageSize:c,mode:s})));return r.geometry=new T({spatialReference:e[0][0].spatialReference,hasZ:l,hasM:!1,paths:e.map(e=>e.map($.pointToArray))}),r}}})),h=l.filter(a.isSome);return o.applyEdits({addFeatures:h}).then(e=>{const{addFeatureResults:t}=e;let r=0;const a=l.map(e=>{const a=t[r++];return e?a:{error:new n("orientedimagery","Error in saving data capture features"),objectId:null,globalId:null}});return{...e,addFeatureResults:a}})}async searchBestImage(e,t){try{const r=await H.searchImages(e,t);r&&await this.processFeatureResponse(r,e.point,t)}catch(e){g.isAbortError(e)||(this.setMessage("imageLoadError","error",e.message),u.getLogger(this).error("error occurred while finding best image",e))}}selectTriangularMeasurementFeature(e){this.currentBestFeatureMeasurementImage=this.features?.find(({attributes:t})=>t.objectId===Number(e))}setAdditionalCameraLocationsVisibility(e){this.additionalCameraLocations.forEach(t=>{t.visible=e})}setAdditionalCoverageVisibility(e){this.additionalFootprints.forEach(t=>{t.visible=e})}setCurrentCoverageVisibility(e){this.bestFeatureCurrentFootprint&&(this.bestFeatureCurrentFootprint.visible=e),this.currentBestFeatureLocation&&(this.currentBestFeatureLocation.visible=e)}setMapImageConversionToolState(e){this.mapImageConversionToolState=e}setCurrentPanoramaView(e,t){this._panoramicViewer?.set({yaw:e,pitch:t})}async startDataCapture(e,t){const r=this.activeViewer?.imageRenderer,{oiObjectIdField:a,currentBestFeature:i}=this;if(!r||!i||!a)return;const{attributes:{objectId:s}}=i,n=this.overlayedMapFeatures.get(e.id)?.toArray()??[],c=[],l=[];for(const e of n)`${e.getAttribute(a)}`==`${s}`?c.push(e):l.push(e);this.overlayGraphicsOnImage(e.id,new o(l)),this.collectionId=e.id;const h=await this.loadSketch(t),u=await this.loadDataCaptureAdapter(t);g.throwIfAborted(t),h.layer.addMany(c),h.layer.blendMode="source-atop",u.savedGraphics.addMany(c),r.ui.find("zoom").visible=!1,r.map.layers.add(this.sketchGraphicsLayer)}async stopDataCapture(e=!1){this.sketch?.cancel(),this.sketchGraphicsLayer?.removeAll(),this.sketchAdapter=p.destroyMaybe(this.sketchAdapter),this.sketch=p.destroyMaybe(this.sketch),this.collectionId=null;const{dataCaptureLayer:t}=this,r=this.activeViewer?.imageRenderer;if(!r||r.destroyed)return;r.map.layers.remove(this.sketchGraphicsLayer),e&&t&&await this.overlayMapFeatures(t,!0);const a=r.ui.find("zoom");a&&(a.visible=!0)}stopMeasurement(){this.heightMeasurementPixels=[],this.draw?.reset(),this.sketch?.cancel()}toggleAllOverlayMapFeatures(e){this.overlayedMapFeatures.forEach(t=>{this._toggleVisiblity(t,e)})}toggleOverlayMapFeatures(e,t,r){const a=this.overlayedMapFeatures.get(e);a&&r&&this._toggleVisiblity(a,t)}toggleSelection(e){const{sketch:t}=this;t&&(t.updateOnGraphicClick=e,t.cancel())}async transformAndPlotReferencePointOnImage(e){const{feature:t,selectedLocation:r,options:a}=e;let i=!1,o=!1;const s=this.bestFeatureFootprint?.geometry;switch(s?.type){case"polygon":{const e=r.spatialReference.equals(s.spatialReference)?r:await G.projectWithZConversion(r,s.spatialReference);i=s.contains(e);break}case"mesh":{const e=r.spatialReference.equals(s.spatialReference)?r:await G.projectWithZConversion(r,s.spatialReference);o=s.extent.contains(e);break}}if(!i&&!o)return void this.clearReferencePointOnImage();const n=await this.worldToImage(r,t,a);if(n)return g.throwIfAborted(a),this.plotReferencePointOnImage(n),{x:n.x,y:n.y};this.clearReferencePointOnImage()}async triangulatedLocationWorkflow(e,t){if(this.currentBestFeature&&e){const{currentBestFeature:r}=this;this.triangulatedPoint&&(this.measurementVectors=[],this.triangulatedPoint=null,this.clearLocationPointOnImage(!0));const a=se.computeTriangulatedVector(e,r);if(!a)return;this.measurementVectors.push(a),await this.plotReferenceLocationPoint(e,t),g.throwIfAborted(t),this._createTriangularImageLocationHandle()}}async _calculateTriangulatedPointFromGroundPoint(e,t){if(this.currentBestFeatureMeasurementImage&&e){const{currentBestFeatureMeasurementImage:r}=this,a=se.computeTriangulatedVector(e,r);a&&this.measurementVectors.push(a);const i=await se.computeTriangulatedPoint(this.measurementVectors);g.throwIfAborted(t),this.triangulatedPoint=i??this.triangulatedPoint}}async _fetchFeatures(e,t){if(!this.view)return;const r=this.layer;if(r){const a={include:r},i=this.view.toScreen(e);if(!i)return;const o=await this.view.hitTest(i,a);return this._processHitTestResults(r,o,t)}}async _fetchFeaturesWithController(e,t){try{await this._fetchFeatures(e,t)}catch(e){if(g.isAbortError(e))return;this.setMessage("imageLoadError","error"),u.getLogger(this).error("error occurred while fetching features",e)}}_groupFeaturesBySectors(){const{_suitabilities:e,additionalFeatures:t,features:r,invalidCameraHeading:a}=this,i=r.at(0);if(!e||!t||!i||!r||a)return void(this._sectorData=null);this._sectorData={};const s={};this._featureToSector=s;for(const e of ae.sectorsInOrder)this._sectorData[e]=new o;const n=e.map((e,t)=>({...e,featureIndex:t}));n.sort((e,t)=>e.trueSuitability-t.trueSuitability);const c=n.map(({distance:e})=>e),l=Math.max(...c);n.forEach(e=>{const{distance:t,angle:a,featureIndex:o}=e,n=t/l*ae.sectorsRadii[2],c=ce.calculateSegment(t,l),h=ce.calculateDirection(a);if(!this._sectorData)return;const u=ae.sectorsRadii[3]+n*Math.sin(a*Math.PI/180),d=ae.sectorsRadii[3]+n*Math.cos(a*Math.PI/180);let p;const m=r.at(o),g=m===i,{cameraPitch:y}=m.attributes,v=y<5;if(g&&v)p=-90;else{const e=u-ae.sectorsRadii[3],t=d-ae.sectorsRadii[3],r=t/Math.sqrt(e**2+t**2);let a=180*Math.acos(r)/Math.PI;(e<0&&t<0||e<0&&t>0)&&(a*=-1),p=a}const w=""===c?h:`${c}_${h}`;g&&(p===this.bestFeatureAngle?this.previousFeatureAngle=p:this.bestFeatureAngle=p,this.navigatorCurrentBestFeature=v?null:{x:u,y:d,direction:h}),s[`${m.attributes.objectId}`]=w;const f=this._sectorData[w];f.add({angle:a,featureIndex:o,x:u,y:d,objectID:m.attributes.objectId,sector:w,featureIndexInSector:f.length})})}_handleDestroyedTriangularSketchLayer(){this.sketchTriangularGraphicsLayer&&(this.imageMeasurementViewer.imageRenderer.map.layers.remove(this.sketchTriangularGraphicsLayer),this.sketchTriangularGraphicsLayer=new E,this.imageMeasurementViewer.imageRenderer.map.layers.add(this.sketchTriangularGraphicsLayer),this.sketchTriangular&&(this.sketchTriangular.layer=this.sketchTriangularGraphicsLayer,this.sketchTriangular.view=this.imageMeasurementViewer.imageRenderer))}_initializeSketchTriangular(){this.sketchTriangular=new ge({view:this.imageMeasurementViewer.imageRenderer,layer:this.sketchTriangularGraphicsLayer,updateOnGraphicClick:!1,defaultUpdateOptions:{toggleToolOnClick:!1}})}_initializeSketchTriangularGraphicsLayer(){this.sketchTriangularGraphicsLayer=new E,this.imageMeasurementViewer.imageRenderer.map.layers.add(this.sketchTriangularGraphicsLayer)}_initializeVideo(){if(this.videoElement||!this.currentBestFeature)return;this.removeHandles(Me),this.videoElement=new X({video:this.currentBestFeature.attributes.imagePath,georeference:new J({extent:new A(ae.sampleExtent)}),autoplay:!1}),this.videoElement.content?.loop&&(this.videoElement.content.loop=!1);const e=new B({source:this.videoElement,title:this.layer?.title,copyright:this.layer?.copyright});this.videoLayer=e,e&&this.videoMapView.map.layers.add(e),this.addHandles(le.disableVideoZoomAndPan(this.videoMapView),Me),this.videoViewModel=new de({oiViewModel:this})}_plotLocationPointOnDefaultImage(e,t=!1){const a=F.isSerializable(e)?e.toJSON():e;a.x-=.5,a.y=.5-a.y,t?(this._correctedLocationPointOnImage=new r({geometry:new k({spatialReference:L.WebMercator,...a}),symbol:ne.locationSymbol}),this.imageMeasurementViewer.addGraphic(this._correctedLocationPointOnImage,0)):(this._locationPointOnImage=new r({geometry:new k({spatialReference:L.WebMercator,...a}),symbol:ne.locationSymbol}),this._imageViewer.addGraphic(this._locationPointOnImage,0))}_plotLocationPointOnPanoramicImage(e){const{imageSize:t}=this._panoramicViewer;if(!t)return;const[a,i]=t,{heading:o,pitch:s}=$.convertPixelToHeadingPitch(e,a,i),n=$.convertHeadingPitchToSphereVertex(o,s);this._locationPointOnImage=new r({geometry:new k(n,L.WebMercator),symbol:ne.locationSymbol3D}),this._panoramicViewer.addGraphic(this._locationPointOnImage,0)}_clearFeatureGeometries(){this.coveragePolygons.removeAll(),this.coverageFrustums.removeAll(),this.pointSources.removeAll()}_checkFeatures(e){return!!e?.length||(this.setMessage("noImageError","error"),this.currentBestFeature=null,!1)}async _getElevationSampleFromGround(e,t,r){if(!e[0])return;const a=await S.union(e);if(this._updateFootprintWithFeatures(t,a),this.view?.supportsGround)try{return await this.view.map.ground.createElevationSampler(this.footprintExtent,r)}catch(e){g.isAbortError(e)||u.getLogger(this).error(e)}}async processElevationSample(e,t,r){const{elevationSource:a}=t[0].attributes;return await this._getElevationSampleFromGround(e,t,r)||(a&&this.footprintExtent&&j.isElevationSource(a)?await N.getElevationSampler({extent:this.footprintExtent,lod:a.lod,url:a.url,rasterFunction:a.rasterFunction}):void 0)}_processSuitableFeatures(e,t){return D.calculateSuitabilities({features:e,selectedPoint:t,camera:ce.isSceneView(this.view)?this.view.camera:null,currentImage:this.currentBestFeature})}async _processHitTestResults(e,t,r){const{screenPoint:a,results:[i]}=t,o="graphic"===i?.type&&this.shouldShowSelectedImage,s=i?.mapPoint??this.view?.toMap(a);if(!s)return;s.x=O.normalizeMapX(s.x,s.spatialReference);const{layerFloorFilterClause:n}=this,c=e.spatialReference.equals(s.spatialReference)?s:await G.projectWithZConversion(s,e.spatialReference),l=c.spatialReference.isGeographic?x.geographicToWebMercator(c):c,h=w.sqlAnd("1=1",w.sqlAnd(e.definitionExpression,n)),u=l.spatialReference.isGeographic?1:f.getMetersPerUnitForSR(l.spatialReference),d={layerInstanceOrURL:e,point:l,queryParams:{where:h,maximumDistance:e.maximumDistance?e.maximumDistance/u:void 0,objectIds:o?[i.graphic.getAttribute(e.objectIdField)]:void 0}};await this.searchBestImage(d,r)}async _queryAndLoadByObjectId(e,t,r,a){this.displayMessage=null;const{response:i}=await me.queryFeatureByObjectIds(e,t,r,a);if(g.throwIfAborted(a),!i?.features?.length)throw new pe.NoFeatureFoundWithObjectIdError(t);const o=W.convertGeographicToWebMercator(z.createCoveragePolygon(i.features[0].attributes).polygon.centroid),s=f.getMetersPerUnitForSR(o.spatialReference);this.selectedPoint=o;const n={layerInstanceOrURL:e,point:o,queryParams:{where:w.sqlAnd(w.sqlAnd("1=1",w.sqlAnd(e.definitionExpression,r)),`${e.objectIdField} <> ${t}`),maximumDistance:e.maximumDistance?e.maximumDistance/s:void 0}},c=await H.searchImages(n,a);g.throwIfAborted(a);const{features:l}=c;return l.push(i.features[0]),await this.processFeatureResponse(c,o,{...a,loadBestImage:!1})}_reorderTriangularSketchLayer(){const e=this.imageMeasurementViewer.imageRenderer.map.layers?.length;this.sketchTriangularGraphicsLayer&&e&&this.imageMeasurementViewer.imageRenderer.map.layers.reorder(this.sketchTriangularGraphicsLayer,e-1)}_resetCursor(){const{activeViewer:e,imageMeasurementViewer:t}=this;e&&this.removeHandles(Pe),t&&this.removeHandles("image-viewer-cursor-handles")}async _setImageSource(e,t,r,a,i,o){e.imageSource={datasetFormat:t.toUpperCase(),url:r.split("?")[0]},e.customParameters=Object.fromEntries(a),e.imageRotation=i??0,await e.loadImage(o)}_setMeasurementCursor(){const{activeViewer:e,imageMeasurementViewer:t,triangularMeasurementActive:r}=this;e&&this.addHandles(e.imageRenderer.acquireCursor("crosshair","high"),Pe),t&&r&&this.addHandles(t.imageRenderer.acquireCursor("crosshair","high"),Pe)}_toggleVisiblity(e,t){e.forEach(e=>{e.visible=t})}async _updateElevationOfSelectedPointAndLocations(e,t,r,a){const i=$.isElevationSampler(r),{location:o,cameraHeight:s}=e[0].attributes,n=await $.getUpdateElevationProps(o.spatialReference,o.z,s,{elevationSample:i?r:void 0,elevationSource:i?void 0:e[0].attributes.elevationSource,extent:this.footprintExtent},a);g.throwIfAborted(a);const[c,...l]=await q([t,...e.map(e=>e.attributes.geometry.clone())],n);g.throwIfAborted(a),t.elevation=c.z,e.forEach((e,t)=>{e.attributes.elevation=l[t].z})}_updateFeatures(e,t=!0){if(!e.length)return this.currentBestFeature=null,void this.additionalFeatures.removeAll();this.features.removeAll(),this.features.addMany(e),this.navigationNodes.removeAll(),this.navigationNodes.addMany(e.map(e=>{const{geometry:t,attributes:r}=e,{isSpherical:a,cameraHeading:i,cameraPitch:o}=r;return new ue({geometry:t,attributes:r,currentHeading:a?0:i,currentPitch:a?0:o})})),e.length>1?this.additionalFeatures.addMany(e.slice(1)):this.additionalFeatures.removeAll(),this._updateGroundElevation=!0,t&&(this.currentBestFeature=e[0]),"video"===this.mode&&(this._initializeVideo(),this.videoElement?.loaded&&this.videoViewModel?.playVideoFromSelectedLocation(e[0]))}_updateFootprintWithFeatures(e,t){const r=[];for(const{attributes:{geometry:a}}of e)t.contains(a)||r.push([a.x,a.y]);r.sort((e,t)=>+R.isClockwise([e,t])),t.addRing(r),this.footprintExtent=ee.scale(t.extent,2,2)}async _updatePointsAndPolygons(e){const{pointSources:t,currentBestFeature:a,currentCoverageVisible:i,isAdditionalPointSourcesVisible:o,mode:s,layer:n}=this;if(a&&(this.additionalFootprints.removeAll(),this.additionalCameraLocations.removeAll(),this.bestFeatureCurrentFootprint&&(this.bestFeatureCurrentFootprint.destroy(),this.bestFeatureCurrentFootprint=null,this.bestFeatureFootprint=null),!this.invalidCameraHeading)){await(this._adapter?.createFootprints(e)),g.throwIfAborted(e);for(const e of t)e.imageID===a.attributes.objectId?this.currentBestFeatureLocation=new r({attributes:{imageID:e.imageID},geometry:e.clone(),symbol:ne.activeSourcePointSymbol,visible:i}):this.additionalCameraLocations.push(new r({attributes:{imageID:e.imageID},geometry:e.clone(),symbol:ne.sourcePointSymbol,visible:o}));if("video"===s&&n&&!this.featureCache.length){const e=await H.getSortedLayerFeatures(n,a.geometry.spatialReference);e.features?.length&&(this.featureCache=e.features)}}}_updateCurrentBestFeature(e){if(!e)return;if(this.currentBestFeature=this.features?.at(e.featureIndex),"video"===this.mode)return void(this.currentBestFeature&&this.videoViewModel?.playVideoFromSelectedLocation(this.currentBestFeature));const t=this.currentBestFeature?.attributes.cameraPitch&&this.currentBestFeature?.attributes.cameraPitch<5;let r;if(t)r=-90;else{const t=e.x-ae.sectorsRadii[3],a=e.y-ae.sectorsRadii[3],i=a/Math.sqrt(t**2+a**2);let o=180*Math.acos(i)/Math.PI;(t<0&&a<0||t<0&&a>0)&&(o*=-1),r=o}r===this.bestFeatureAngle?this.previousFeatureAngle=r:this.bestFeatureAngle=r,this.navigatorCurrentBestFeature=t?null:{x:e.x,y:e.y,direction:e.sector.includes("_")?e.sector.split("_")[1]:e.sector}}_updateImageMeasurementBestFeature(e){e&&(this.currentBestFeatureMeasurementImage=this.features?.at(e.featureIndex))}clearGraphics(){this._imageViewer.clearGraphics(),this._panoramicViewer.clearGraphics(),this.imageMeasurementViewer.clearGraphics()}clearReferencePointOnImage(){this._referencePointOnImage&&(this._imageViewer.removeGraphic(this._referencePointOnImage),this._panoramicViewer.removeGraphic(this._referencePointOnImage),this._referencePointOnImage=p.destroyMaybe(this._referencePointOnImage))}clearLocationPointOnImage(e=!1){this._locationPointOnImage&&!e&&(this._imageViewer.removeGraphic(this._locationPointOnImage),this._panoramicViewer.removeGraphic(this._locationPointOnImage),this._locationPointOnImage=p.destroyMaybe(this._locationPointOnImage)),this._correctedLocationPointOnImage&&(this.imageMeasurementViewer.removeGraphic(this._correctedLocationPointOnImage),this._correctedLocationPointOnImage=p.destroyMaybe(this._correctedLocationPointOnImage))}plotReferencePoint(e){"mapPoint"in e?this.plotReferencePointOnGround(e.mapPoint):this.plotReferencePointOnGround(e)}async plotReferenceLocationPoint(e,t){if(this.currentBestFeatureMeasurementImage){const r=await this.worldToImage(e,this.currentBestFeatureMeasurementImage,{signal:t});g.throwIfAborted(t),r&&this.plotLocationPointOnImage(r,!0)}}setMessage(e,t,r,a){this.displayMessage={key:e,type:t,data:r,map:a}}async transformAndPlotSelectedLocation(e){const{currentBestFeature:t,invalidCameraHeading:r,selectedPoint:a,activeViewer:i}=this;if(this._crossSymbol&&(this._panoramicViewer.removeGraphic(this._crossSymbol),this._imageViewer.removeGraphic(this._crossSymbol),this._crossSymbol=p.destroyMaybe(this._crossSymbol)),!a||!t||"image-loaded"!==i?.state||r)return;let o;try{o=await this.worldToImage(a,t,e),g.throwIfAborted(e),await this.plotSelectedPointOnImage(o,e)}catch(e){g.isAbortError(e)||u.getLogger(this).error("failed to transform map point to pixel, cross symbol will not be plotted on image",{error:e,selectedPoint:a,feature:t})}}async worldToImage(e,t,r){const{footprintExtent:a}=this,{imageSize:i}=this.activeViewer;if("none"===this.mode||!t||!i||!a)return;const{attributes:{location:o,elevationSource:s,cameraHeading:n,cameraHeight:c},elevationSample:l}=t;let h=o.clone();const u=await $.getUpdateElevationProps(o.spatialReference,o.z??0,c,{elevationSample:l,elevationSource:s});t.elevationSample=u.elevationSample;const d=Array.isArray(e)?e:[e];let p,m=await Promise.all(d.map(e=>new Promise(t=>{if(!e.hasZ)return t(q(e,u));t(e)})));if(o.spatialReference.isGeographic&&(h=await G.projectWithZConversion(h,L.WebMercator,r)),m=await Promise.all(m.map(async e=>h.spatialReference.equals(e.spatialReference)?e:await G.projectWithZConversion(e,h.spatialReference,r))),g.throwIfAborted(r),"panoramic"===this.mode)p=Z.worldToImagePanoramic(m,{imageHeight:i[1],imageWidth:i[0],cameraHeading:n,cameraLocation:h});else{const e=$.getWorldToImageProperties(t.attributes,i[0],i[1]);p=Z.worldToImage(m,{...e,cameraLocation:h})}return Array.isArray(e)?p:p[0]}updateCurrentCoveragePolygon(e){const{additionalFootprints:t,additionalCameraLocations:a,currentBestFeature:i,currentBestFeatureLocation:o,currentCoverageVisible:s,selectedPoint:n,view:c,_adapter:l,mode:h}=this,{attributes:{objectId:u},elevationSample:d}=i;if(this._initialCurrentCoverageUpdate){if(this._overlays?.removeAll(),this._initialCurrentCoverageUpdate=!1,this.bestFeatureCurrentFootprint=p.destroyMaybe(this.bestFeatureCurrentFootprint),e&&!this.invalidCameraHeading&&(e.visible=s,this.bestFeatureCurrentFootprint=e),c){const e=[...t,...a,o].filter(ce.isGraphic);c.supportsGround&&d&&l?.updateGroundElevation&&(this._updateGroundElevation&&l.updateGroundElevation(e,d),"panoramic"===h&&l.updateGroundElevation([this.bestFeatureCurrentFootprint],d)),this._updateGroundElevation=!1,n&&(e.splice(-2,0,this.bestFeatureCurrentFootprint),e.push(new r({geometry:n.clone(),symbol:ne.crossSymbol.clone(),attributes:{imageID:u}}))),this._overlays.graphics.addMany(e)}}else if(c){if(this.invalidCameraHeading)return;this.bestFeatureCurrentFootprint&&(this._overlays?.remove(this.bestFeatureCurrentFootprint),this.bestFeatureCurrentFootprint=p.destroyMaybe(this.bestFeatureCurrentFootprint));const t=this.bestFeatureCurrentFootprint&&this._overlays?this._overlays.graphics.indexOf(this.bestFeatureCurrentFootprint):-1;e&&(this.bestFeatureCurrentFootprint=e,c?.supportsGround&&d&&l?.updateGroundElevation&&"panoramic"===h&&l.updateGroundElevation([e],d),e.visible=this.currentCoverageVisible,this._overlays?.graphics.add(this.bestFeatureCurrentFootprint,t>=0?t:this._overlays.graphics.length-1))}}};return t.__decorate([_.property()],Se.prototype,"activeLayer",null),t.__decorate([_.property({readOnly:!0})],Se.prototype,"activeViewer",null),t.__decorate([_.property()],Se.prototype,"accuracyParametersMissing",null),t.__decorate([_.property()],Se.prototype,"additionalFeatures",void 0),t.__decorate([_.property({type:o.ofType(r)})],Se.prototype,"additionalCameraLocations",void 0),t.__decorate([_.property({type:o.ofType(r)})],Se.prototype,"additionalFootprints",void 0),t.__decorate([_.property()],Se.prototype,"areaMeasurementResult",void 0),t.__decorate([_.property()],Se.prototype,"areaMeasurementAccuracy",void 0),t.__decorate([_.property()],Se.prototype,"bestFeatureAngle",void 0),t.__decorate([_.property()],Se.prototype,"bestFeatureCurrentFootprint",void 0),t.__decorate([_.property({type:r})],Se.prototype,"bestFeatureFootprint",void 0),t.__decorate([_.property({type:Number})],Se.prototype,"brightness",null),t.__decorate([_.property()],Se.prototype,"cameraHeadingThreshold",void 0),t.__decorate([_.property()],Se.prototype,"cameraPitchThreshold",void 0),t.__decorate([_.property()],Se.prototype,"clickAction",void 0),t.__decorate([_.property()],Se.prototype,"videoViewModel",void 0),t.__decorate([_.property()],Se.prototype,"collectionId",void 0),t.__decorate([_.property({type:Number})],Se.prototype,"contrast",null),t.__decorate([_.property()],Se.prototype,"conversionProps",void 0),t.__decorate([_.property()],Se.prototype,"coverageFrustums",void 0),t.__decorate([_.property()],Se.prototype,"coveragePolygons",void 0),t.__decorate([_.property()],Se.prototype,"currentBestFeature",void 0),t.__decorate([_.property()],Se.prototype,"currentBestFeatureMeasurementImage",void 0),t.__decorate([_.property()],Se.prototype,"currentBestFeatureLocation",void 0),t.__decorate([_.property()],Se.prototype,"currentCoverageVisible",void 0),t.__decorate([_.property()],Se.prototype,"currentNode",null),t.__decorate([_.property()],Se.prototype,"featureCache",void 0),t.__decorate([_.property()],Se.prototype,"navigationNodes",void 0),t.__decorate([_.property({json:{write:!1}})],Se.prototype,"determineWorkflowForFeature",void 0),t.__decorate([_.property({json:{write:!1}})],Se.prototype,"determineWorkflowForTriangularMeasurement",void 0),t.__decorate([_.property()],Se.prototype,"disabled",void 0),t.__decorate([_.property()],Se.prototype,"displayMessage",void 0),t.__decorate([_.property()],Se.prototype,"displayNewMeasurementButton",void 0),t.__decorate([_.property()],Se.prototype,"distanceMeasurementResult",void 0),t.__decorate([_.property()],Se.prototype,"distanceAccuracyArray",void 0),t.__decorate([_.property()],Se.prototype,"dataCaptureLayer",void 0),t.__decorate([_.property({readOnly:!0})],Se.prototype,"featureCount",null),t.__decorate([_.property()],Se.prototype,"features",void 0),t.__decorate([_.property()],Se.prototype,"groundCoordinates",void 0),t.__decorate([_.property()],Se.prototype,"groundCoordinatesAccuracy",void 0),t.__decorate([_.property()],Se.prototype,"heightMeasurementPixels",void 0),t.__decorate([_.property()],Se.prototype,"heightGraphic",void 0),t.__decorate([_.property()],Se.prototype,"heightMeasurementResult",void 0),t.__decorate([_.property()],Se.prototype,"heightMeasurementAccuracy",void 0),t.__decorate([_.property()],Se.prototype,"measurementAngle",void 0),t.__decorate([_.property()],Se.prototype,"tempDistance",void 0),t.__decorate([_.property({readOnly:!0})],Se.prototype,"imageGalleryEnabled",null),t.__decorate([_.property()],Se.prototype,"imageGeometryField",void 0),t.__decorate([_.property({readOnly:!0})],Se.prototype,"imageLoaded",null),t.__decorate([_.property()],Se.prototype,"imageLocationToolState",void 0),t.__decorate([_.property({readOnly:!0})],Se.prototype,"invalidCameraHeading",null),t.__decorate([_.property()],Se.prototype,"imagePointsInView",null),t.__decorate([_.property()],Se.prototype,"imageMeasurementViewer",void 0),t.__decorate([_.property()],Se.prototype,"isAdditionalCoverageVisible",void 0),t.__decorate([_.property()],Se.prototype,"isAdditionalPointSourcesVisible",void 0),t.__decorate([_.property()],Se.prototype,"measurementVectors",void 0),t.__decorate([_.property()],Se.prototype,"layer",void 0),t.__decorate([_.property()],Se.prototype,"layerView",null),t.__decorate([_.property({readOnly:!0})],Se.prototype,"layerFloorFilterClause",null),t.__decorate([_.property({type:Number})],Se.prototype,"localPort",void 0),t.__decorate([_.property()],Se.prototype,"mapImageConversionToolState",void 0),t.__decorate([_.property()],Se.prototype,"measureType",void 0),t.__decorate([_.property()],Se.prototype,"measurementGraphic",void 0),t.__decorate([_.property({readOnly:!0,value:"none"})],Se.prototype,"mode",null),t.__decorate([_.property()],Se.prototype,"navigationMode",void 0),t.__decorate([_.property()],Se.prototype,"navigatorCurrentBestFeature",void 0),t.__decorate([_.property()],Se.prototype,"oiObjectIdField",void 0),t.__decorate([_.property({type:o.ofType(r)})],Se.prototype,"overlayedCameraLocations",void 0),t.__decorate([_.property()],Se.prototype,"overlayedMapFeatures",void 0),t.__decorate([_.property()],Se.prototype,"pixelCoordinates",void 0),t.__decorate([_.property()],Se.prototype,"preserveAngle",void 0),t.__decorate([_.property()],Se.prototype,"pointSources",void 0),t.__decorate([_.property({readOnly:!0})],Se.prototype,"popupEnabled",null),t.__decorate([_.property()],Se.prototype,"previousFeatureAngle",void 0),t.__decorate([_.property()],Se.prototype,"referencePoint",null),t.__decorate([_.property({readOnly:!0})],Se.prototype,"sectorData",null),t.__decorate([_.property()],Se.prototype,"selectedPoint",void 0),t.__decorate([_.property({type:Number})],Se.prototype,"sharpness",null),t.__decorate([_.property()],Se.prototype,"shouldShowSelectedImage",void 0),t.__decorate([_.property()],Se.prototype,"sketch",void 0),t.__decorate([_.property()],Se.prototype,"sketchTriangular",void 0),t.__decorate([_.property()],Se.prototype,"sketchTriangularGraphicsLayer",void 0),t.__decorate([_.property()],Se.prototype,"draw",void 0),t.__decorate([_.property()],Se.prototype,"sketchAdapter",void 0),t.__decorate([_.property({readOnly:!0})],Se.prototype,"sketchGraphicsLayer",null),t.__decorate([_.property({readOnly:!0})],Se.prototype,"state",null),t.__decorate([_.property({readOnly:!0})],Se.prototype,"thumbnails",null),t.__decorate([_.property()],Se.prototype,"triangularMeasurementActive",void 0),t.__decorate([_.property()],Se.prototype,"triangulatedDistanceMeasurement",void 0),t.__decorate([_.property()],Se.prototype,"triangulatedDistanceAccuracy",void 0),t.__decorate([_.property()],Se.prototype,"triangulatedAreaMeasurement",void 0),t.__decorate([_.property()],Se.prototype,"triangulatedAreaAccuracy",void 0),t.__decorate([_.property()],Se.prototype,"triangulatedMeasurementGraphic",void 0),t.__decorate([_.property()],Se.prototype,"triangulatedPoint",void 0),t.__decorate([_.property()],Se.prototype,"triangulatedMeasurementAdapter",void 0),t.__decorate([_.property()],Se.prototype,"updateFootprint",void 0),t.__decorate([_.property()],Se.prototype,"updateFootprintPanorama",void 0),t.__decorate([_.property()],Se.prototype,"updatingTriangularMeasurementState",void 0),t.__decorate([_.property({value:null})],Se.prototype,"view",null),t.__decorate([_.property()],Se.prototype,"videoElement",void 0),t.__decorate([_.property()],Se.prototype,"videoLayer",void 0),t.__decorate([_.property()],Se.prototype,"videoMapView",void 0),t.__decorate([_.property()],Se.prototype,"_adapter",void 0),t.__decorate([_.property()],Se.prototype,"_sketchGraphicsLayer",null),t.__decorate([_.property()],Se.prototype,"_highlightedFeatureHandle",void 0),t.__decorate([_.property()],Se.prototype,"_imageViewer",void 0),t.__decorate([_.property()],Se.prototype,"_initialCurrentCoverageUpdate",void 0),t.__decorate([_.property()],Se.prototype,"_locationPointOnImage",void 0),t.__decorate([_.property()],Se.prototype,"_correctedLocationPointOnImage",void 0),t.__decorate([_.property()],Se.prototype,"_overlays",void 0),t.__decorate([_.property({readOnly:!0})],Se.prototype,"_overlaysView",null),t.__decorate([_.property()],Se.prototype,"_panoramicViewer",void 0),t.__decorate([_.property()],Se.prototype,"_referencePointOnGround",void 0),t.__decorate([_.property()],Se.prototype,"_referencePointOnImage",void 0),t.__decorate([_.property()],Se.prototype,"_sectorData",void 0),t.__decorate([_.property()],Se.prototype,"_featureToSector",void 0),t.__decorate([_.property({readOnly:!0})],Se.prototype,"_updatingHandles",void 0),t.__decorate([_.property()],Se.prototype,"footprintExtent",void 0),t.__decorate([_.property()],Se.prototype,"_featureChangedTask",void 0),Se=t.__decorate([M.subclass("esri.widgets.OrientedImageryViewer.OrientedImageryViewerViewModel")],Se),Se});