// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../intl","../../../core/quantityFormatUtils","../../../core/quantityUtils","../../../core/Logger","../../../core/has","../../../core/RandomLCG","../../../core/Error","../../../core/accessorSupport/decorators/subclass","../imageMeasurementUtils","./ImageMeasurementMixin","../../../intl/substitute"],function(e,t,a,r,n,s,i,c,u,g,o,l,m){"use strict";e.TriangulatedImageMeasurementMixin=e=>{const a=l.ImageMeasurementMixin(e);let s=class extends a{copyActiveMeasurementResults(e,t){t?this.copyTriangularMeasurementResult(e):this.copyGroundMeasurementResult(e)}copyGroundMeasurementResult(e){let t,a;switch(e){case"area":t={measurement:this.getConvertedAreaString("measurement"),accuracy:this.getConvertedAreaString("accuracy")},a="{measurement} ± {accuracy}";break;case"distance":t={measurement:this.getConvertedDistanceString("measurement"),accuracy:this.getConvertedDistanceString("accuracy")},a="{measurement} ± {accuracy}";break;case"height":t={measurement:this.getConvertedHeightString("measurement"),accuracy:this.getConvertedHeightString("accuracy")},a="{measurement} ± {accuracy}"}const r=m.substitute(a,t);o.copyToClipboard(r)}copyTriangularMeasurementResult(e){let t=null;switch(e){case"area":t=this.copyTriangularAreaMeasurements();break;case"distance":t=this.copyTriangularDistanceMeasurements()}t&&o.copyToClipboard(t)}copyTriangularAreaMeasurements(){const e={measurement:this.getConvertedTriangularAreaString("measurement"),accuracy:this.getConvertedTriangularAreaString("accuracy")};return m.substitute("{measurement} ± {accuracy}",e)}copyTriangularDistanceMeasurements(){const{oiViewModel:e}=this,{triangulatedDistanceMeasurement:t,triangulatedDistanceAccuracy:a}=e;if(!t)return;const{distance:r,horizontalDistance:n,verticalDistance:s,slope:i,aspect:c}=t,{distanceAccuracy:u=0,angleAccuracy:g=0}=a??{},o={distance:this.getConvertedTriangularDistanceMeasurementString(r),distanceAccuracy:this.getConvertedTriangularDistanceMeasurementString(u),horizontal:this.getConvertedTriangularDistanceMeasurementString(n),vertical:this.getConvertedTriangularDistanceMeasurementString(s),slope:this.getConvertedTriangularDistanceAngularResultsString(i),angleAccuracy:this.getConvertedTriangularDistanceAngularResultsString(g),aspect:this.getConvertedTriangularDistanceAngularResultsString(c)};return m.substitute(" Distance : {distance} ± {distanceAccuracy} , Horizontal : {horizontal} ± {distanceAccuracy}, Vertical : {vertical} ± {distanceAccuracy}, Slope : {slope} ± {angleAccuracy}, Aspect : {aspect} ± {angleAccuracy}",o)}getConvertedTriangularDistanceMeasurementString(e){const{measurementUnitMessages:t,pixelMeasurementUnit:a}=this;return r.formatLength(t,n.createLength(e,"meters"),a,3)||null}getConvertedTriangularDistanceAngularResultsString(e){return r.formatAngle(n.createAngle(e,"degrees"),"arithmetic",3)||null}getConvertedTriangularAreaString(e){const{oiViewModel:t,measurementUnitMessages:a,pixelAreaMeasurementUnit:r,messages:n}=this,{triangulatedAreaAccuracy:s,triangulatedAreaMeasurement:i}=t;return o.getConvertedArea(e,i,s,a,r)??n.startMeasurement}};return s=t.__decorate([g.subclass("esri.widgets.OrientedImageryViewer.mixins.TriangulatedImageMeasurementMixin")],s),s},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});