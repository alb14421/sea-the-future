// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/promiseUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../layers/orientedImagery/core/coverageUtils","../../../layers/orientedImagery/core/ExposurePoint","./errors","./queries"],function(e,t,r,o,n,i,s,a,u,c,l,d,g){"use strict";return e.default=class extends r{constructor(e){super(e),this.viewModel=null}get currentNode(){return this.viewModel.currentNode}get layer(){return this.viewModel.layer}get navigationNodes(){return this.viewModel.navigationNodes}async _queryAndHandleFeatureResponse(e,t,r,n){const{error:i,nextLocation:s,response:a}=await g.queryNextLocationFeatures(e,t,r,n);if(o.throwIfAborted(n),i)throw i;this.viewModel.selectedPoint=s,await this.viewModel.processFeatureResponse(a,s,{signal:n?.signal,loadBestImage:!1})}async afterNavigate(e,t,r){return await this.viewModel.selectBestFeature(t.id,r),t}async navigate(e,t){let r;if("direction"in t?r=await this.navigateInDirection(e,t):("step"in t||"goTo"in t)&&(r=await this.navigateInSequence(e,t)),!r)throw new Error("No next node found");return await this.afterNavigate(e,r,t)}async navigateBySkippingSteps(e,t){const{step:r}=t,{layer:o}=this,{floorFilterClause:n}=this.viewModel;if(!o)throw new Error("Layer is not defined");const i=e.attributes.sequenceOrder;if(0===await g.querySequenceCount(o,n,{signal:t.signal})||!i)throw new Error("No sequence found");const{response:s,error:a}=await g.queryAfterSequenceField(o,i,r,1,n,{signal:t.signal});if(a)throw new Error("Error querying sequence features");const u=s?.features[0];if(!u)throw new Error("No next node found");const d=l.fromJSON({...u.toJSON(),layer:o}),{response:w,error:f,nextLocation:p}=await g.querySequenceFeaturesAroundPoint(o,c.createCoveragePolygon(d).polygon.centroid,n,{signal:t.signal});if(f)throw new Error("Error querying sequence features");const y=[...w.features];y.push(u),w.features=y,this.viewModel.selectedPoint=p;const h=u.attributes.objectId;return await this.viewModel.processFeatureResponse(w,p,{signal:t.signal,loadBestImage:!1}),this.viewModel.selectedPoint=p,this.viewModel.navigationNodes.find(e=>e.id===h)}async navigateInDirection(e,t){const{viewModel:r}=this,{layer:o,floorFilterClause:n}=r,{direction:i,signal:s}=t,a=e?.[i];if(!a)throw new d.InvalidDirectionError(i);const u=r.getFeatureSectorById(a.id);if(!u)throw new d.FeatureSectorNotFoundError(a);const[c,l]=u.split("_"),g=l??c,w=`NEAR_${g}`,f=`FAR_${g}`,p=r.getActiveSectors(),y=function(e,t,r,o,n,i){return e===i||e===n&&!r||e===o&&!t&&!r}(u,p.includes(w),p.includes(f),g,w,f);return y&&await this._queryAndHandleFeatureResponse(o,a,n,{signal:s}),a}async navigateInSequence(e,t){return"step"in t?this.navigateBySkippingSteps(e,t):this.navigateTo(t)}async navigateTo(e){const{goTo:t}=e,{layer:r}=this,{floorFilterClause:o}=this.viewModel;if(!r)throw new Error("Layer is not defined");const n="number"==typeof t?t:1,i=this.viewModel.navigationNodes.find(e=>e.id===n);if(i)return i;const{response:s,error:a}=await g.queryOffsetSequenceFeatures(r,n,1,"end"===t?"DESC":"ASC",o,{signal:e.signal});if(a)throw new Error("Error querying sequence features");const u=s?.features[0];if(!u)throw new Error("No next node found");const d=l.fromJSON({...u.toJSON(),layer:r}),{polygon:w}=c.createCoveragePolygon(d),{response:f,error:p,nextLocation:y}=await g.querySequenceFeaturesAroundPoint(r,w.centroid,o,{signal:e.signal});if(p)throw new Error("Error querying sequence features");const h=[...f.features];h.push(u),f.features=h,this.viewModel.selectedPoint=y;const v=u.attributes.objectId;return await this.viewModel.processFeatureResponse(f,y,{signal:e.signal,loadBestImage:!1}),this.viewModel.selectedPoint=y,this.viewModel.navigationNodes.find(e=>e.id===v)}},t.__decorate([n.property()],e.default.prototype,"currentNode",null),t.__decorate([n.property()],e.default.prototype,"layer",null),t.__decorate([n.property()],e.default.prototype,"navigationNodes",null),t.__decorate([n.property({constructOnly:!0})],e.default.prototype,"viewModel",void 0),e.default=t.__decorate([u.subclass("esri.widgets.OrientedImageryViewer.navigation.NavigationManager")],e.default),e.default});