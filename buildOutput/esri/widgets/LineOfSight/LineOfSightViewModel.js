// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../analysis/LineOfSightAnalysis","../../analysis/LineOfSightAnalysisObserver","../../analysis/LineOfSightAnalysisTarget","../../core/Collection","../../core/collectionUtils","../../core/deprecate","../../core/handleUtils","../../core/has","../../core/Logger","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../geometry/Point","../../support/elevationInfoUtils","./LineOfSightTarget","../support/AnalysisViewModel"],function(e,t,s,o,i,n,a,r,l,c,d,h,g,y,v,p,u,T){"use strict";const _=i.ofType(u);let w=class extends T.AnalysisViewModel{constructor(e){super(e),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="LineOfSightViewModel is only supported in 3D views.",this._vmTargetsToConnection=new Map,this._analysisTargetsToConnection=new Map,e?.isDefaultViewModel||a.deprecateUnnecessaryViewModel(c.getLogger(this),"Line Of Sight","arcgis-line-of-sight",{version:"4.33"})}initialize(){this.addHandles([this.targets.on("after-add",e=>this._onViewModelTargetAdded(e.item)),this.targets.on("after-remove",e=>this._onViewModelTargetRemoved(e.item)),d.watch(()=>this.analysis,e=>this._onAnalysisChange(e),d.syncAndInitial)])}destroy(){this._analysisTargetsToConnection.forEach(e=>e.remove())}get state(){return this.disabled||!this.ready?"disabled":null==this.tool?"ready":this.tool.state}get observer(){const{observer:e}=this.analysis;return null==e?.position?null:this._convertAnalysisPointToAbsoluteHeight(e.position,e.elevationInfo)}set observer(e){let t=null;e&&(t=e.clone(),t.hasZ||(t.z=0)),this.analysis.observer=new s({position:t})}get targets(){return this._get("targets")||new _}set targets(e){this._set("targets",n.referenceSetter(e,this.targets,_))}continue(){null!=this.tool&&this.tool.continue()}stop(){null!=this.tool&&this.tool.stop()}get testInfo(){}constructAnalysis(){return new t}async onConnectToAnalysisView(e){this.addHandles([e.on("result-changed",e=>{const t=this._analysisTargetsToConnection.get(e.target);t&&(null!=e.result?(t.viewModelTarget.intersectedGraphic=e.result.intersectedGraphic,t.viewModelTarget.intersectedLocation=e.result.intersectedLocation,t.viewModelTarget.visible=e.result.visible):(t.viewModelTarget.intersectedGraphic=null,t.viewModelTarget.intersectedLocation=null,t.viewModelTarget.visible=void 0))})],"view")}onDisconnectFromAnalysisView(){this.removeHandles("view")}_onViewModelTargetAdded(e){if(this._vmTargetsToConnection.get(e))return;const t=new o({position:e.location});this._connectViewModelWithAnalysisTarget(e,t),this.analysis.targets.add(t)}_onViewModelTargetRemoved(e){const t=this._vmTargetsToConnection.get(e);t&&(t.remove(),this.analysis.targets.remove(t.analysisTarget))}_onAnalysisTargetAdded(e){if(this._analysisTargetsToConnection.get(e))return;const{position:t}=e,s=new u({location:t?this._convertAnalysisPointToAbsoluteHeight(t,e.elevationInfo):null});this._connectViewModelWithAnalysisTarget(s,e),this.targets.add(s)}_onAnalysisTargetRemoved(e){const t=this._analysisTargetsToConnection.get(e);t&&(t.remove(),this.targets.remove(t.viewModelTarget))}_connectViewModelWithAnalysisTarget(e,t){let s=!1;const o=r.handlesGroup([d.watch(()=>({position:t.position,elevationInfo:t.elevationInfo}),({position:t,elevationInfo:o})=>{s||(s=!0,e.location=t?this._convertAnalysisPointToAbsoluteHeight(t,o):null,s=!1)},d.sync),d.watch(()=>e.location,e=>{if(!s){s=!0;let o=null;e&&(o=e.clone(),o.hasZ||(o.z=0)),t.position=o,t.elevationInfo=null,s=!1}},d.sync)]),i={analysisTarget:t,viewModelTarget:e,remove:()=>{o.remove(),this._vmTargetsToConnection.delete(e),this._analysisTargetsToConnection.delete(t)}};this._vmTargetsToConnection.set(e,i),this._analysisTargetsToConnection.set(t,i)}_onAnalysisChange(e){const t="analysis";this.removeHandles(t),this.addHandles([this.analysis.targets.on("after-add",e=>this._onAnalysisTargetAdded(e.item)),this.analysis.targets.on("after-remove",e=>this._onAnalysisTargetRemoved(e.item))],t),this.targets.removeAll(),e.targets.forEach(e=>{this._onAnalysisTargetAdded(e)})}_convertAnalysisPointToAbsoluteHeight(e,t){const s=e.clone();if(null!=this.view){const o=p.getEffectiveElevationInfo(e.hasZ,t);s.z=p.getConvertedElevation(this.view,e,o,p.absoluteHeightElevationInfo)}return s}};return e.__decorate([h.property({type:t})],w.prototype,"analysis",void 0),e.__decorate([h.property({readOnly:!0})],w.prototype,"state",null),e.__decorate([h.property({type:v})],w.prototype,"observer",null),e.__decorate([h.property({type:_,cast:n.castForReferenceSetter,nonNullable:!0})],w.prototype,"targets",null),w=e.__decorate([y.subclass("esri.widgets.LineOfSight.LineOfSightViewModel")],w),w});