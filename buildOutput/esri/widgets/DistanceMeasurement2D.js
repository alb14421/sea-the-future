// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../chunks/tslib.es6","../core/promiseUtils","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/RandomLCG","../core/accessorSupport/decorators/subclass","./Widget","./DistanceMeasurement2D/DistanceMeasurement2DViewModel","./support/globalCss","./support/MeasurementWidgetContent","./support/widgetUtils","./support/decorators/messageBundle","./support/jsxFactory"],function(e,t,s,o,i,r,n,p,a,l,u,d,c,m){"use strict";const g="esri-distance-measurement-2d",v={base:g,newMeasurementButton:`${g}__clear-button`};let w=class extends p{constructor(e,t){super(e,t),this.messages=null,this.messagesCommon=null,this.viewModel=new a}get active(){return this.viewModel.active}get icon(){return"measure-line"}set icon(e){this._overrideIfSome("icon",e)}get label(){return this.messages?.widgetLabel??""}set label(e){this._overrideIfSome("label",e)}get snappingOptions(){return this.viewModel.snappingOptions}set snappingOptions(e){this.viewModel.snappingOptions=e}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:s,unit:o,unitOptions:i,viewModel:r}=this,{active:n,measurementLabel:p,state:a,supported:d}=r;return m.tsx("div",{"aria-label":this.messages.widgetLabel,class:this.classes(v.base,l.globalCss.widget,l.globalCss.panel),key:this,role:"presentation"},this.visible?m.tsx(u.MeasurementWidgetContent,{active:n,measurementItems:[{key:"distance",title:e.distance,value:p}],messages:{...e,notApplicable:s.notApplicable},newMeasurementButtonClass:v.newMeasurementButton,state:a,supported:d,unit:o,unitOptions:i,onNewMeasurementClick:()=>{t.ignoreAbortErrors(this.viewModel.start())},onUnitChange:e=>{this.unit=e}}):null)}};return e.__decorate([s.property({readOnly:!0})],w.prototype,"active",null),e.__decorate([s.property()],w.prototype,"icon",null),e.__decorate([s.property()],w.prototype,"label",null),e.__decorate([s.property(),c.messageBundle("esri/widgets/DistanceMeasurement2D/t9n/DistanceMeasurement2D")],w.prototype,"messages",void 0),e.__decorate([s.property(),c.messageBundle("esri/t9n/common")],w.prototype,"messagesCommon",void 0),e.__decorate([s.property()],w.prototype,"snappingOptions",null),e.__decorate([s.property()],w.prototype,"uiStrings",void 0),e.__decorate([s.property()],w.prototype,"unit",null),e.__decorate([s.property()],w.prototype,"unitOptions",null),e.__decorate([s.property()],w.prototype,"view",null),e.__decorate([s.property({type:a})],w.prototype,"viewModel",void 0),e.__decorate([s.property({type:Boolean})],w.prototype,"visible",null),w=e.__decorate([n.subclass("esri.widgets.DistanceMeasurement2D")],w),w});