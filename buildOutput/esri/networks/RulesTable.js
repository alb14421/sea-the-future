// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../chunks/tslib.es6","../request","../core/JSONSupport","../core/Loadable","../core/sql","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/RandomLCG","../core/accessorSupport/decorators/subclass","./support/utils","../support/guards"],function(e,t,s,r,o,n,a,i,u,c,l,d,p){"use strict";return e.default=class extends(r.JSONSupportMixin(o.Loadable)){constructor(e){super(e),this.rulesCategorized={attachment:[],containment:[],connectivity:[]},this.request=s}initialize(){}async load(e){const t=this.rulesLayer.load(e).then(()=>this._initializeRulesTable());return this.addResolvingPromise(t),this}getFeaturesCanAssociateWithClause(e,t,s){const r=new Map,[o,a]=d.getAssetFieldNames(e.sourceLayer);if(!o||!a)return"";const i=d.getRuleValues(e),u=d.getRuleValues(t);s.forEach(e=>{const{type:t,direction:s}=e;this._getRulesForAssociationType(t).forEach(e=>{d.getCompatibleRuleElements(e,i,s).filter(e=>e.networkSource?.layerId===u.layerId).forEach(e=>{const t=e.assetGroup?.assetGroupCode,s=e.assetType?.assetTypeCode;if(null!=t&&null!=s){const e=r.get(t)??new Set;e.add(s),r.set(t,e)}})})});let c=[];return this._mergeAssetCodes(r).forEach((e,t)=>{const s=`${o} IN (${t})`,r=n.sqlIn(a,[...e]);s&&r&&c.push(n.sqlAnd(s,r))}),c.length>1&&(c=c.map(e=>`(${e})`)),c.join(" OR ")}getFeaturesCanAssociateWith(e,t,s){return null==d.getFeatureSourceLayerId(e)?[]:t.filter(t=>this.canAssociateFeatures(e,t,s))}canAssociateFeatures(e,t,s){if(!this._canSupportAssociations([e,t]))return!1;const r=d.getRuleValues(e),o=d.getRuleValues(t);return s.some(e=>{const{type:t,direction:s}=e;return this._getRulesForAssociationType(t).some(e=>"to"===s?d.doesRuleAllowAssociation(e,o,r):d.doesRuleAllowAssociation(e,r,o))})}getLayersCanAssociateWith(e,t,s){return null==d.getFeatureSourceLayerId(e)?[]:t.filter(t=>this.canAssociateFeatureToLayer(e,t,s))}canAssociateFeatureToLayer(e,t,s){if(!this._canSupportAssociations([e,t]))return!1;const r=d.getRuleValues(e),o=d.getRuleValues(t);return s.some(e=>{const{type:t,direction:s}=e;return this._getRulesForAssociationType(t).some(e=>"to"===s?d.doesRuleAllowAssociation(e,o,r):d.doesRuleAllowAssociation(e,r,o))})}getFeatureSQL(e,t){const s=e.layerId.toString(),r=e.fieldsIndex?.normalizeFieldName("assetGroup"),o=e.fieldsIndex?.normalizeFieldName("assetType"),n=r?t.attributes[r]:null,a=o?t.attributes[o]:null,i=this.rulesHash[s];if(i){const e=i.assetGroupHash[n];if(e)return e.assetTypeHash[a]||null}return null}_initializeRulesTable(){const e={},t=[{networkSourceId:"fromNetworkSource",assetGroupId:"fromAssetGroup",assetTypeId:"fromAssetType"},{networkSourceId:"toNetworkSource",assetGroupId:"toAssetGroup",assetTypeId:"toAssetType"},{networkSourceId:"viaNetworkSource",assetGroupId:"viaAssetGroup",assetTypeId:"viaAssetType"}];this.rulesCategorized={attachment:[],containment:[],connectivity:[]};for(const s of this.rules){if(3===s.ruleType){this.rulesCategorized.attachment.push(s);continue}if(2===s.ruleType){this.rulesCategorized.containment.push(s);continue}if(1===s.ruleType){this.rulesCategorized.connectivity.push(s);continue}this.rulesCategorized.connectivity.push(s);let r=[[0,1],[1,0]];5===s.ruleType&&(r=[[0,2],[2,0],[1,2],[2,1]]);for(const o of r){const r=o.shift(),a=o.shift();let i=!1;switch(s.ruleType){case 5:i=0===r||1===r;break;case 4:i=1===r}const u=t[r],c=s[u.networkSourceId]?.layerId.toString()??"",l=s[u.assetGroupId]?.assetGroupCode?.toString(),d=s[u.assetTypeId],p=d?.assetTypeCode?.toString(),y=t[a],h=s[y.networkSourceId]?.layerId.toString()??"",f=s[y.assetGroupId]?.assetGroupCode?.toString(),g=s[y.assetTypeId],A=g?.assetTypeCode?.toString(),T=e[c]??{assetGroupHash:{}};if(!(l&&p&&f&&A))continue;const m=T.assetGroupHash[l]??{assetTypeHash:{}},S=m.assetTypeHash[p]??{};if(S[h]=S[h]??{},i){S[c]=S[c]??{};const e=n.sqlAnd(`assetgroup = ${l}`,`assettype = ${p}`);"esriNECPEndVertex"===g?.connectivityPolicy?S[c].endVertex=S[c]?.endVertex?`${S[c].endVertex}`:`(${e})`:S[c].anyVertex=S[c].anyVertex?`${S[c].anyVertex}`:`(${e})`}const I=n.sqlAnd(`assetgroup = ${f}`,`assettype = ${A}`);"esriNECPEndVertex"===g?.connectivityPolicy?S[h].endVertex=S[h]?.endVertex?n.sqlOr(S[h].endVertex,I):`(${I})`:S[h].anyVertex=S[h]?.anyVertex?n.sqlOr(S[h].anyVertex,I):`(${I})`,m.assetTypeHash[p]=S,T.assetGroupHash[l]=m,e[c]=T}}this._set("rulesHash",e)}_getRulesForAssociationType(e){const{rulesCategorized:t}=this;switch(e){case"attachment":return t.attachment;case"containment":return t.containment;case"connectivity":case"junction-junction-connectivity":return t.connectivity.filter(e=>1===e.ruleType);case"junction-edge-from-connectivity":case"junction-edge-midspan-connectivity":case"junction-edge-to-connectivity":return t.connectivity.filter(e=>4===e.ruleType||5===e.ruleType);default:return[]}}_areSetsEqual(e,t){if(e.size!==t.size)return!1;for(const s of e)if(!t.has(s))return!1;return!0}_mergeAssetCodes(e){const t=new Map,s=new Set;for(const[r,o]of e){const n=new Set([r]);for(const[t,a]of e)r!==t&&!s.has(t)&&this._areSetsEqual(o,a)&&(n.add(t),s.add(t));const a=Array.from(n).sort().join(",");t.set(a,o)}return t}_canSupportAssociations(e){return e.every(e=>{const t=p.isGraphic(e)?e.sourceLayer:e,[s,r]=d.getAssetFieldNames(t);return null!=s&&null!=r})}},t.__decorate([a.property({constructOnly:!0})],e.default.prototype,"rulesLayer",void 0),t.__decorate([a.property({constructOnly:!0})],e.default.prototype,"rules",void 0),t.__decorate([a.property({readOnly:!0})],e.default.prototype,"rulesHash",void 0),t.__decorate([a.property()],e.default.prototype,"rulesCategorized",void 0),t.__decorate([a.property({constructOnly:!0})],e.default.prototype,"request",void 0),e.default=t.__decorate([l.subclass("esri.networks.RulesTable")],e.default),e.default});