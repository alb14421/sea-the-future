// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/Error","../../core/Loadable","../../core/MapUtils","../../core/Promise","../../core/promiseUtils","../../core/ReactiveMap","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../layers/support/layerUtils"],function(e,o,t,s,r,u,a,n,i,p,l,c,d,y){"use strict";e.UtilityNetworkLookupHelper=class extends(s.LoadableMixin(u.EsriPromise)){constructor(e){super(e),this.layerIdToSourceIdLookup=new n,this.sourceIdToLayerIdLookup=new n,this.sourceIdToNetworkInfo=new n,this._rulesBySourceId=new Map,this._terminalConfigurationsBySourceId=new Map}async load(e){return this.addResolvingPromise(this._load(e)),this}agatFromRule(e,o){let t;switch(o){case"to":t={networkSource:e.toNetworkSource??null,assetGroup:e.toAssetGroup??null,assetType:e.toAssetType??null};break;case"from":t={networkSource:e.fromNetworkSource??null,assetGroup:e.fromAssetGroup??null,assetType:e.fromAssetType??null};break;case"via":t={networkSource:e.viaNetworkSource??null,assetGroup:e.viaAssetGroup??null,assetType:e.viaAssetType??null}}return null===t.networkSource?null:t}agatToFullDefinition({assetGroup:e,assetType:o,networkSourceId:t}){if(null===t||null===e||null===o)return null;const s={networkSource:null,assetGroup:null,assetType:null},r=this.sourceIdToNetworkInfo.get(t);if(!r)return null;s.networkSource=r;const u=r.assetGroupLookup.get(e);return u?(s.assetGroup=u,s.assetType=u.assetTypeLookup.get(o)??null,null===s.assetType?null:s):null}findAgat(e,o){const s=y.isSubtypeSublayer(o)?o.parent:o;if(!s)throw new t("utility-network:missing-layer","Unable to find asset group/asset type for layer. The given layer is a `SubtypeSublayer` with no parent.");if(this.utilityNetwork.featureServiceUrl!==s.url)return null;const r=this.getNetworkSourceIdForLayer(s);if(null===r)return null;const u=s.fieldsIndex.get("assettype")?.name??"";if(""===u)return null;const a=s.fieldsIndex.get("assetgroup")?.name??"";if(""===a)return null;const n=e.attributes[u],i=e.attributes[a];return null==n||null==i?null:{assetGroup:i,assetType:n,networkSourceId:r}}findAgatFullDefinition(e,o){const t=this.findAgat(e,o);return t?this.agatToFullDefinition(t):null}findRules({networkSourceId:e,assetGroup:o,assetType:t}){const s=[];if(null===e||null===o)return s;const r=this._rulesBySourceId.get(e)?.get(o);if(!r)return s;for(const e of r.generalRules)s.push(e);if(null!=t){const e=r.typeSpecificRules.get(t);if(e)for(const o of e)s.push(o)}return s}getNetworkSourceIdForLayer(e){const o=y.isSubtypeSublayer(e)?e.parent:e;return o&&this.utilityNetwork.featureServiceUrl===o.url?this.layerIdToSourceIdLookup.get(o.layerId)??null:null}ruleMatchesAgat(e,o,t){switch(t){case"to":return!(e.toNetworkSource?.sourceId!==o.networkSourceId||e.toAssetGroup&&e.toAssetGroup.assetGroupCode!==o.assetGroup||e.toAssetType&&e.toAssetType.assetTypeCode!==o.assetType);case"from":return!(e.fromNetworkSource?.sourceId!==o.networkSourceId||e.fromAssetGroup&&e.fromAssetGroup.assetGroupCode!==o.assetGroup||e.fromAssetType&&e.fromAssetType.assetTypeCode!==o.assetType);case"via":return!(e.viaNetworkSource?.sourceId!==o.networkSourceId||e.viaAssetGroup&&e.viaAssetGroup.assetGroupCode!==o.assetGroup||e.viaAssetType&&e.viaAssetType.assetTypeCode!==o.assetType)}}ruleMatchesFullDefinitionAgat(e,o,t){switch(t){case"to":return!(e.toNetworkSource?.sourceId!==o.networkSource?.sourceId||e.toAssetGroup&&e.toAssetGroup.assetGroupCode!==o.assetGroup?.assetGroupCode||e.toAssetType&&e.toAssetType.assetTypeCode!==o.assetType?.assetTypeCode);case"from":return!(e.fromNetworkSource?.sourceId!==o.networkSource?.sourceId||e.fromAssetGroup&&e.fromAssetGroup.assetGroupCode!==o.assetGroup?.assetGroupCode||e.fromAssetType&&e.fromAssetType.assetTypeCode!==o.assetType?.assetTypeCode);case"via":return!(e.viaNetworkSource?.sourceId!==o.networkSource?.sourceId||e.viaAssetGroup&&e.viaAssetGroup.assetGroupCode!==o.assetGroup?.assetGroupCode||e.viaAssetType&&e.viaAssetType.assetTypeCode!==o.assetType?.assetTypeCode)}}terminalConfiguration(e,o,t){const s=this._terminalConfigurationsBySourceId.get(e);if(!s)return null;const r=s.get(o);return r&&r.get(t)||null}async _load(e){await this.utilityNetwork.load(),a.throwIfAborted(e);const{dataElement:o}=this.utilityNetwork;if(!o)throw new t("utility-network:no-data-element","No data element found on utility network");for(const e of o.domainNetworks)for(const o of[...e.edgeSources??[],...e.junctionSources??[]]){this.layerIdToSourceIdLookup.set(o.layerId,o.sourceId),this.sourceIdToLayerIdLookup.set(o.sourceId,o.layerId);const e=(o.assetGroups??[]).map(e=>{const o=new n;for(const t of e.assetTypes??[])o.set(t.assetTypeCode,t);return{...e,assetTypeLookup:o}}),t=new n;for(const o of e)t.set(o.assetGroupCode,o);const s={...o,assetGroupLookup:t,assetGroups:e};this.sourceIdToNetworkInfo.set(s.sourceId,s)}const s=await this.utilityNetwork.getRulesTable();a.throwIfAborted(e);for(const e of s?.rules??[])switch(e.ruleType){case 3:case 2:case 4:case 1:this._registerRule(e.fromNetworkSource.sourceId,e.fromAssetGroup.assetGroupCode,e.fromAssetType.assetTypeCode,e),this._registerRule(e.toNetworkSource.sourceId,e.toAssetGroup.assetGroupCode,e.toAssetType.assetTypeCode,e);break;case 5:this._registerRule(e.fromNetworkSource.sourceId,e.fromAssetGroup.assetGroupCode,e.fromAssetType.assetTypeCode,e),this._registerRule(e.toNetworkSource.sourceId,e.toAssetGroup.assetGroupCode,e.toAssetType.assetTypeCode,e),this._registerRule(e.viaNetworkSource.sourceId,e.viaAssetGroup.assetGroupCode,e.viaAssetType.assetTypeCode,e)}this._makeTerminalConfigurationLookups(o)}_makeTerminalConfigurationLookups(e){const o={};for(const t of e.terminalConfigurations??[])o[t.terminalConfigurationId]=t;for(const t of e.domainNetworks??[])for(const e of t.junctionSources)if("esriUNFCUTJunctionObject"===e.utilityNetworkFeatureClassUsageType||"esriUNFCUTDevice"===e.utilityNetworkFeatureClassUsageType)for(const t of e.assetGroups??[])for(const s of t.assetTypes??[])if(null!=s.terminalConfigurationId&&s.terminalConfigurationId>=0){const u=o[s.terminalConfigurationId];if(u){const o=r.getOrCreateMapValue(this._terminalConfigurationsBySourceId,e.sourceId,()=>new Map);r.getOrCreateMapValue(o,t.assetGroupCode,()=>new Map).set(s.assetTypeCode,u)}}}_registerRule(e,o,t,s){const u=r.getOrCreateMapValue(this._rulesBySourceId,e,()=>new Map),a=r.getOrCreateMapValue(u,o,()=>({generalRules:[],typeSpecificRules:new Map}));-1===t?a.generalRules.push(s):r.getOrCreateMapValue(a.typeSpecificRules,t,()=>[]).push(s)}},o.__decorate([i.property()],e.UtilityNetworkLookupHelper.prototype,"layerIdToSourceIdLookup",void 0),o.__decorate([i.property()],e.UtilityNetworkLookupHelper.prototype,"sourceIdToLayerIdLookup",void 0),o.__decorate([i.property()],e.UtilityNetworkLookupHelper.prototype,"sourceIdToNetworkInfo",void 0),o.__decorate([i.property()],e.UtilityNetworkLookupHelper.prototype,"utilityNetwork",void 0),e.UtilityNetworkLookupHelper=o.__decorate([d.subclass("esri.networks.support.UtilityNetworkLookupHelper")],e.UtilityNetworkLookupHelper),e.hashAgat=function(e){return`${e.networkSource?.sourceId??""}-${e.assetGroup?.assetGroupCode??""}-${e.assetType?.assetTypeCode??""}`},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});