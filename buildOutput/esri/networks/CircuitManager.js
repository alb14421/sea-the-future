// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","../chunks/tslib.es6","../core/JSONSupport","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/RandomLCG","../core/accessorSupport/decorators/subclass","../layers/mixins/EditBusLayer","./UtilityNetwork","../versionManagement/support/versionManagementUtils"],function(e,t,r,i,s,o,n,a,d,c,u){"use strict";const l=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));let m=class extends r.JSONSupport{constructor(e){super(e),this.telecomDomainNetwork=null,this.utilityNetwork=null}get networkServiceUrl(){return this.utilityNetwork?.networkServiceUrl??null}get featureServiceUrl(){return this.utilityNetwork?.featureServiceUrl??null}get gdbVersion(){return this.utilityNetwork?.gdbVersion??null}get historicMoment(){return this.utilityNetwork?.historicMoment??null}get telecomDomainNetworkName(){return this.telecomDomainNetwork?.domainNetworkName??null}async create(t){const[{createCircuit:r},{default:i}]=await Promise.all([new Promise((t,r)=>e(["../rest/networks/circuits/createCircuit"],t,r)),new Promise((t,r)=>e(["../rest/networks/circuits/support/CreateAlterCircuitParameters"],e=>t(l(e)),r))]),s=i.from({circuit:t,domainNetworkName:this.telecomDomainNetworkName});u.isVersionInEditSession(this.featureServiceUrl,this.gdbVersion||null)?(s.sessionId=u.currentSessionId,await u.isSafeToEditVersion(this.featureServiceUrl,this.gdbVersion,!0)):s.sessionId=null,s.gdbVersion=this.gdbVersion;const o=d.emitApplyEditsEvent(this.featureServiceUrl,null,this.gdbVersion,!1),n=await r(this.networkServiceUrl,s);o.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:n.exceededTransferLimit,historicMoment:n.moment,editedFeatures:n.serviceEdits||void 0})}async alter(t){const[{alterCircuit:r},{default:i}]=await Promise.all([new Promise((t,r)=>e(["../rest/networks/circuits/alterCircuit"],t,r)),new Promise((t,r)=>e(["../rest/networks/circuits/support/CreateAlterCircuitParameters"],e=>t(l(e)),r))]),s=i.from({circuit:t,domainNetworkName:this.telecomDomainNetworkName});u.isVersionInEditSession(this.featureServiceUrl,this.gdbVersion||null)?(s.sessionId=u.currentSessionId,await u.isSafeToEditVersion(this.featureServiceUrl,this.gdbVersion,!0)):s.sessionId=null,s.gdbVersion=this.gdbVersion;const o=d.emitApplyEditsEvent(this.featureServiceUrl,null,this.gdbVersion,!1),n=await r(this.networkServiceUrl,s);o.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:n.exceededTransferLimit,historicMoment:n.moment,editedFeatures:n.serviceEdits||void 0})}async delete(t){const[{deleteCircuits:r},{default:i}]=await Promise.all([new Promise((t,r)=>e(["../rest/networks/circuits/deleteCircuits"],t,r)),new Promise((t,r)=>e(["../rest/networks/circuits/support/DeleteCircuitsParameters"],e=>t(l(e)),r))]),s=i.from({circuits:t,domainNetworkName:this.telecomDomainNetworkName});u.isVersionInEditSession(this.featureServiceUrl,this.gdbVersion||null)?(s.sessionId=u.currentSessionId,await u.isSafeToEditVersion(this.featureServiceUrl,this.gdbVersion,!0)):s.sessionId=null,s.gdbVersion=this.gdbVersion;const o=d.emitApplyEditsEvent(this.featureServiceUrl,null,this.gdbVersion,!1),n=await r(this.networkServiceUrl,s);o.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:n.exceededTransferLimit,historicMoment:n.moment,editedFeatures:n.serviceEdits||void 0})}async export(t){const[{exportCircuits:r},{default:i}]=await Promise.all([new Promise((t,r)=>e(["../rest/networks/circuits/exportCircuits"],t,r)),new Promise((t,r)=>e(["../rest/networks/circuits/support/ExportCircuitsParameters"],e=>t(l(e)),r))]),s=i.from(t);u.isVersionInEditSession(this.featureServiceUrl,this.gdbVersion||null)?(s.sessionId=u.currentSessionId,await u.isSafeToEditVersion(this.featureServiceUrl,this.gdbVersion,!0)):s.sessionId=null,s.domainNetworkName=this.telecomDomainNetworkName,s.gdbVersion=this.gdbVersion,s.moment=this.historicMoment;const o=d.emitApplyEditsEvent(this.featureServiceUrl,null,this.gdbVersion,!1),n=await r(this.networkServiceUrl,s);return o.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:n.exceededTransferLimit,historicMoment:n.moment,editedFeatures:n.serviceEdits||void 0}),n.circuits}async verify(t,r=!1){const[{verifyCircuits:i},{default:s}]=await Promise.all([new Promise((t,r)=>e(["../rest/networks/circuits/verifyCircuits"],t,r)),new Promise((t,r)=>e(["../rest/networks/circuits/support/VerifyCircuitsParameters"],e=>t(l(e)),r))]),o=s.from({circuits:t,synthesizeGeometries:r,domainNetworkName:this.telecomDomainNetworkName});u.isVersionInEditSession(this.featureServiceUrl,this.gdbVersion||null)?(o.sessionId=u.currentSessionId,await u.isSafeToEditVersion(this.featureServiceUrl,this.gdbVersion,!0)):o.sessionId=null,o.gdbVersion=this.gdbVersion;const n=d.emitApplyEditsEvent(this.featureServiceUrl,null,this.gdbVersion,!1),a=await i(this.networkServiceUrl,o);return n.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:a.exceededTransferLimit,historicMoment:a.moment,editedFeatures:a.serviceEdits||void 0}),a.circuits}async queryCircuits(t){const[{queryCircuits:r},{default:i}]=await Promise.all([new Promise((t,r)=>e(["../rest/networks/circuits/queryCircuits"],t,r)),new Promise((t,r)=>e(["../rest/networks/circuits/support/QueryCircuitsParameters"],e=>t(l(e)),r))]),s=Array.isArray(t)?{circuits:t}:t,o=i.from(s);return u.isVersionInEditSession(this.featureServiceUrl,this.gdbVersion||null)?o.sessionId=u.currentSessionId:o.sessionId=null,o.domainNetworkName=this.telecomDomainNetworkName,o.resultTypes=["circuit"],o.gdbVersion=this.gdbVersion,o.moment=this.historicMoment,(await r(this.networkServiceUrl,o)).circuits||[]}async queryCircuitNames(t){const[{queryCircuits:r},{default:i}]=await Promise.all([new Promise((t,r)=>e(["../rest/networks/circuits/queryCircuits"],t,r)),new Promise((t,r)=>e(["../rest/networks/circuits/support/QueryCircuitsParameters"],e=>t(l(e)),r))]),s=i.from(t);return u.isVersionInEditSession(this.featureServiceUrl,this.gdbVersion||null)?s.sessionId=u.currentSessionId:s.sessionId=null,s.domainNetworkName=this.telecomDomainNetworkName,s.resultTypes=["name"],s.gdbVersion=this.gdbVersion,s.moment=this.historicMoment,(await r(this.networkServiceUrl,s)).circuitNames||[]}};return t.__decorate([i.property({constructOnly:!0})],m.prototype,"telecomDomainNetwork",void 0),t.__decorate([i.property({type:c,constructOnly:!0})],m.prototype,"utilityNetwork",void 0),t.__decorate([i.property()],m.prototype,"networkServiceUrl",null),t.__decorate([i.property()],m.prototype,"featureServiceUrl",null),t.__decorate([i.property()],m.prototype,"gdbVersion",null),t.__decorate([i.property()],m.prototype,"historicMoment",null),t.__decorate([i.property()],m.prototype,"telecomDomainNetworkName",null),m=t.__decorate([a.subclass("esri.networks.CircuitManager")],m),m});