// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./support/builderUtils","./support/offsetUtils","./support/shapeUtils","../support/executorUtils","../../../../geometry/Multipoint","../../../../chunks/intersectsOperator","../../../../geometry/operators/support/apiConverter"],function(e,t,n,r,s,o,i,a){"use strict";function p(e){const t=[];for(const n of e.paths)for(const e of n)t.push([...e]);return new o({spatialReference:e.spatialReference,points:t})}e.execute=function(e){if(function(e){return null!=e.parentTemplate&&s.isPolyline(e.shape)}(e)&&"digitizing"!==e.mode)return async function({templatePart:e,parentTemplate:o,shape:f,edits:l,relationships:c,mode:h}){const{builderConfig:u}=e,g=t.readOffsetDistance(u),m=t.readIsProportional(u),d=t.readVertexBeforeOffset(u),y=t.readDistance(u,m),S=d||0===g?f:n.offset(f,g);if(null===S)return;const P=o.layer.createQuery();P.geometry=S,P.spatialRelationship="intersects",P.returnM=!0,P.returnZ=!0,P.outSpatialReference=S.spatialReference,P.cacheHint=!1,P.returnGeometry=!0,P.historicMoment=o.layer.historicMoment,P.gdbVersion=o.layer.gdbVersion;const b=2*(a.fromSpatialReference(S.spatialReference)?.getTolerance()??.001);P.distance=b;const{features:R}=await o.layer.queryFeatures(P);if(0===R.length)return;const x=[];for(const e of R)x.push(p(e.geometry));const F=t.getHeightUnitCorrectionFactor(S);let L=0,O=0;for(let n=0;n<S.paths.length&&!(l.length>s.maxDigitizingDisplayEdits);n++){const s=S.paths[n].length;for(let o=0;o<s;o++){let a=S.getPoint(n,o);if(null!=a){for(const p of x)if(i.execute(a,p)){if(o>0&&0!==y&&(L+=S.hasZ?r.getSegmentLength3d(S.paths[n][o-1],S.paths[n][o],F):r.getSegmentLength(S.paths[n][o-1],S.paths[n][o])),0!==y){let e=1;if(m){const t=y<0?o-1:o+1;if(t>=s||t<0)return;e=S.hasZ?r.getSegmentLength3d(S.paths[n][o],S.paths[n][t],F):r.getSegmentLength(S.paths[n][o],S.paths[n][t])}const t=L+e*y;a=S.hasZ?r.pointAlongLineWithZAndOffset(S,t,g,F):r.pointAlongLineAndOffset(S,t,g)}else 0!==g&&(a=o===s-1?r.offsetPointFromSegment(a,[S.paths[n][o-1],S.paths[n][o]],g):r.offsetPointFromSegment(a,[S.paths[n][o],S.paths[n][o+1]],g));a&&t.makeFeatureFromGroupPart({templatePart:e,shape:a,edits:l,relationships:c,mode:h},`V${O.toString()}`);break}O++}}}}(e)},e.isAsync=!0,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});