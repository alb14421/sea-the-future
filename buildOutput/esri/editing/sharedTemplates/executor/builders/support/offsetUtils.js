// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./builderUtils","./shapeUtils","../../support/executorUtils","../../../../../chunks/offsetOperator","../../../../../geometry/support/jsonUtils"],function(t,e,n,s,i,o){"use strict";function r(t,e){return i.execute(t,e,{unit:"meters",joins:"miter",miterLimit:2})}function a(t){let e=0;for(const n of t.paths)e+=n.length;return e}t.lineVerticesOffset=function({templatePart:t,edits:i,relationships:a,shape:h,distance:l,isProportional:p,offsetDistance:g,vertexBeforeOffset:f,vertexPlacement:m,mode:c}){const u=f||0===g?h:r(h,g);if(null===u||!o.isPolyline(u))return;const d=e.getHeightUnitCorrectionFactor(u);g=f?g:0;let P=0,S=null,F=0;for(let o=0;o<u.paths.length;o++){if(i.length>s.maxDigitizingDisplayEdits&&"digitizing"===c)return;const r=u.paths[o].length,h=o===u.paths.length-1;for(let f=0;f<r;f++){if(i.length>s.maxDigitizingDisplayEdits&&"digitizing"===c)return;if(f>0&&0!==l&&(P+=u.hasZ?n.getSegmentLength3d(u.paths[o][f-1],u.paths[o][f],d):n.getSegmentLength(u.paths[o][f-1],u.paths[o][f])),(0!==f||1!==m)&&!(f===r-1&&2===m&&h||(0===f||f===r-1&&h)&&3===m||0===f&&l<0&&p||f===r-1&&l>0&&p)){if(0!==l){let t=1;if(p){const e=l<0?f-1:f+1;if(e>=r||e<0)continue;t=u.hasZ?n.getSegmentLength3d(u.paths[o][f],u.paths[o][e],d):n.getSegmentLength(u.paths[o][f],u.paths[o][e])}const e=P+t*l;S=u.hasZ?n.pointAlongLineWithZAndOffset(u,e,g,d):n.pointAlongLineAndOffset(u,e,0)}else S=n.pointFromPolylineVertex(u,o,f),0!==g&&(S=f===r-1?n.offsetPointFromSegment(S,[u.paths[o][f-1],u.paths[o][f]],g):n.offsetPointFromSegment(S,[u.paths[o][f],u.paths[o][f+1]],g));S&&e.makeFeatureFromGroupPart({templatePart:t,shape:S,edits:i,relationships:a,mode:c},`V${(F+f).toString()}`)}}F+=r}},t.offset=r,t.vertexOffsetFromStartOrEndOfLine=function({templatePart:t,edits:s,relationships:i,shape:h,distance:l,isProportional:p,offsetDistance:g,vertexBeforeOffset:f,vertexPlacement:m,mode:c}){const u=f||0===g?h:r(h,g);if(null===u||!o.isPolyline(u))return;const d=e.getHeightUnitCorrectionFactor(u);g=f?g:0;let P=null,S="";if(0!==l){const t=4===m?0:u.paths.length-1,e=4===m?0:u.paths[u.paths.length-1].length-1,s=4===m?0:n.computedTotalLength(u),i=4===m?u.paths[0].length:u.paths[u.paths.length-1].length;let o=1;if(p){const s=l<0?e-1:e+1;if(s>=i||s<0)return;o=u.hasZ?n.getSegmentLength3d(u.paths[t][e],u.paths[t][s],d):n.getSegmentLength(u.paths[t][e],u.paths[t][s])}const r=s+o*l;P=u.hasZ?n.pointAlongLineWithZAndOffset(u,r,g,d):n.pointAlongLineAndOffset(u,r,g),S=4===m?"V0":`V${(a(u)-1).toString()}`}else{if(P=4===m?n.pointFromPolylineVertex(u,0,0):n.pointFromPolylineVertex(u,u.paths.length-1,u.paths[u.paths.length-1].length-1),0!==g)if(4===m)P=n.offsetPointFromSegment(P,[u.paths[0][0],u.paths[0][1]],g);else{const t=u.paths[u.paths.length-1];P=n.offsetPointFromSegment(P,[t[t.length-2],t[t.length-1]],g)}S=4===m?"V0":`V${(a(u)-1).toString()}`}P&&e.makeFeatureFromGroupPart({templatePart:t,shape:P,edits:s,relationships:i,mode:c},S)},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});