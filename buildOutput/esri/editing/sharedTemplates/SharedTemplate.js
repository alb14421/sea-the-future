// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../core/compilerUtils","../../core/Error","../../core/Loadable","../../core/Promise","../../core/accessorSupport/decorators/property","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","./SharedTemplateMetadata","./support/sharedTemplateErrors","./templateDefinitions/FeatureTemplateDefinition","./templateDefinitions/GroupTemplateDefinition","./templateDefinitions/PresetTemplateDefinition","./templateDefinitions/templateDefinitionUtils"],function(e,t,r,o,i,a,s,n,p,d,l,c,u,f,m,h){"use strict";const y=e=>S.fromJSON(e);let S=class extends(o.LoadableMixin(i.EsriPromiseMixin(l))){constructor(e){super(e),this.definition=null,this.layer=null,this.type="feature",this.view=null}readDefinition(e,o){switch(o.type){case"feature":return u.fromJSON(e);case"group":return f.fromJSON(e);case"preset":return m.fromJSON(e);default:throw t.neverReached(o.type),new r("shared-template:no-definition","No value for 'definition' provided to 'SharedTemplate' constructor")}}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const{definition:t,featureService:r,layer:o,view:i}=this;if(!(t&&r&&o&&i))throw new c.SharedTemplateRequiredPropsNotSetError;t.featureService=r,t.makeSharedTemplateFromJSON=y,t.view=i,await(this.definition?.load(e)),h.isFeatureTemplateDefinition(t)&&t.initializeRelationshipMetadata(o)}};return e.__decorate([a.property()],S.prototype,"definition",void 0),e.__decorate([p.reader("definition")],S.prototype,"readDefinition",null),e.__decorate([a.property()],S.prototype,"layer",void 0),e.__decorate([a.property()],S.prototype,"type",void 0),e.__decorate([a.property()],S.prototype,"view",void 0),S=e.__decorate([d.subclass("esri.editing.sharedTemplates.SharedTemplate")],S),S});