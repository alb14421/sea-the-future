// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../layers/support/fieldUtils","../visualVariables/ColorVariable","../visualVariables/OpacityVariable","../visualVariables/RotationVariable","../visualVariables/SizeVariable","../visualVariables/VisualVariable","../visualVariables/VisualVariableFactory","../../support/arcadeExpressionUtils"],function(a,e,r,s,i,l,t,o,u,c,V,n,p,b,d,v,y){"use strict";const h={base:d,key:"type",typeMap:{opacity:n,color:V,rotation:p,size:b}};function F(a,e,r){const s=y.matchRandomRotationExpression(a);return null!=s&&(c.collectField(e,r,s),!0)}a.VisualVariablesMixin=a=>{const s=a;let i=class extends s{constructor(){super(...arguments),this._vvFactory=new v}set visualVariables(a){this._vvFactory.visualVariables=a,this._set("visualVariables",this._vvFactory.visualVariables)}readVisualVariables(a,e,r){return this._vvFactory.readVariables(a,e,r)}writeVisualVariables(a,e,r,s){e[r]=this._vvFactory.writeVariables(a,s)}get arcadeRequiredForVisualVariables(){return this.visualVariables?.some(({arcadeRequired:a})=>a)??!1}hasVisualVariables(a,e){return a?this.getVisualVariablesForType(a,e).length>0:this.getVisualVariablesForType("size",e).length>0||this.getVisualVariablesForType("color",e).length>0||this.getVisualVariablesForType("opacity",e).length>0||this.getVisualVariablesForType("rotation",e).length>0}getVisualVariablesForType(a,e){return this.visualVariables?.filter(r=>r.type===a&&("string"==typeof e?r.target===e:!1!==e||!r.target))??[]}async collectVVRequiredFields(a,e){let r=[];this.visualVariables&&(r=r.concat(this.visualVariables));for(const s of r)s&&(s.field&&c.collectField(a,e,s.field),s.normalizationField&&c.collectField(a,e,s.normalizationField),s.valueExpression&&(F(s.valueExpression,a,e)||await c.collectArcadeFieldNames(a,e,s.valueExpression)))}};return e.__decorate([r.property({types:[h],value:null,json:{write:!0}})],i.prototype,"visualVariables",null),e.__decorate([t.reader("visualVariables",["visualVariables","rotationType","rotationExpression"])],i.prototype,"readVisualVariables",null),e.__decorate([u.writer("visualVariables")],i.prototype,"writeVisualVariables",null),i=e.__decorate([o.subclass("esri.renderers.mixins.VisualVariablesMixin")],i),i},Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});