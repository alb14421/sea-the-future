// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../chunks/tslib.es6","../core/jsonMap","../core/JSONSupport","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/RandomLCG","../core/accessorSupport/decorators/subclass","./support/AuthoringInfo"],function(e,r,t,s,o,i,a,n,u,c){"use strict";const p=new t.JSONMap({simple:"simple",uniqueValue:"unique-value",classBreaks:"class-breaks",heatmap:"heatmap",dotDensity:"dot-density",dictionary:"dictionary",pieChart:"pie-chart"},{ignoreUnknown:!0});return e.default=class extends s.JSONSupport{constructor(e){super(e),this.authoringInfo=null,this.type=null}async getRequiredFields(e){if(!this.collectRequiredFields)return[];const r=new Set;return await this.collectRequiredFields(r,e),Array.from(r).sort()}getSymbol(e,r){}async getSymbolAsync(e,r){}get symbols(){return[]}get arcadeRequired(){return!1}getAttributeHash(){return JSON.stringify(this)}getMeshHash(){return JSON.stringify(this)}},r.__decorate([o.property({type:c,json:{write:!0}})],e.default.prototype,"authoringInfo",void 0),r.__decorate([o.property({type:p.apiValues,readOnly:!0,json:{type:p.jsonValues,read:!1,write:{writer:p.write,ignoreOrigin:!0,isRequired:!0}}})],e.default.prototype,"type",void 0),e.default=r.__decorate([u.subclass("esri.renderers.Renderer")],e.default),e.default});