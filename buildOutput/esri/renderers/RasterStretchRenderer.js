// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../chunks/tslib.es6","../core/JSONSupport","../core/lang","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/accessorSupport/decorators/enumeration","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","./support/stretchRendererUtils","../rest/support/colorRamps"],function(t,e,r,o,a,s,p,i,c,u,n,d,m){"use strict";var l;return t.default=l=class extends r.JSONSupport{constructor(t){super(t),this.colorRamp=null,this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.maxPercent=null,this.minPercent=null,this.numberOfStandardDeviations=null,this.outputMax=null,this.outputMin=null,this.sigmoidStrengthLevel=null,this.histograms=null,this.customStatistics=null,this.useGamma=!1,this.stretchType="none",this.type="raster-stretch"}readColorRamp(t){if(t)return m.fromJSON(t)}readCustomStatistics(t){return t?.map(t=>({min:t[0],max:t[1],avg:t[2],stddev:t[3]}))}writeCustomStatistics(t,e,r){t?.length&&(e[r]=t.map(t=>[t.min,t.max,t.avg??0,t.stddev??1]))}readStretchType(t,e){let r=e.stretchType;return"number"==typeof r&&(r=d.stretchTypeFunctionEnum[r]),d.stretchTypeJSONDict.read(r)}clone(){return new l({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,customStatistics:o.clone(this.customStatistics),gamma:o.clone(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,colorRamp:o.clone(this.colorRamp),histograms:o.clone(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment})}},e.__decorate([a.property({types:m.types,json:{write:!0}})],t.default.prototype,"colorRamp",void 0),e.__decorate([c.reader("colorRamp")],t.default.prototype,"readColorRamp",null),e.__decorate([a.property({type:Boolean,json:{write:!0}})],t.default.prototype,"computeGamma",void 0),e.__decorate([a.property({type:Boolean,json:{write:{target:"dra"},read:{source:"dra"}}})],t.default.prototype,"dynamicRangeAdjustment",void 0),e.__decorate([a.property({type:[Number],json:{write:!0}})],t.default.prototype,"gamma",void 0),e.__decorate([a.property({type:Number,json:{write:!0}})],t.default.prototype,"maxPercent",void 0),e.__decorate([a.property({type:Number,json:{write:!0}})],t.default.prototype,"minPercent",void 0),e.__decorate([a.property({type:Number,json:{write:!0}})],t.default.prototype,"numberOfStandardDeviations",void 0),e.__decorate([a.property({type:Number,json:{read:{source:"max"},write:{target:"max"}}})],t.default.prototype,"outputMax",void 0),e.__decorate([a.property({type:Number,json:{read:{source:"min"},write:{target:"min"}}})],t.default.prototype,"outputMin",void 0),e.__decorate([a.property({type:Number,json:{write:!0}})],t.default.prototype,"sigmoidStrengthLevel",void 0),e.__decorate([a.property()],t.default.prototype,"histograms",void 0),e.__decorate([a.property({json:{type:[[Number]],name:"statistics",write:!0}})],t.default.prototype,"customStatistics",void 0),e.__decorate([c.reader("customStatistics")],t.default.prototype,"readCustomStatistics",null),e.__decorate([n.writer("customStatistics")],t.default.prototype,"writeCustomStatistics",null),e.__decorate([a.property({type:Boolean,json:{write:!0}})],t.default.prototype,"useGamma",void 0),e.__decorate([a.property({type:d.stretchTypeJSONDict.apiValues,json:{type:d.stretchTypeJSONDict.jsonValues,write:d.stretchTypeJSONDict.write}})],t.default.prototype,"stretchType",void 0),e.__decorate([c.reader("stretchType",["stretchType"])],t.default.prototype,"readStretchType",null),e.__decorate([i.enumeration({rasterStretch:"raster-stretch"})],t.default.prototype,"type",void 0),t.default=l=e.__decorate([u.subclass("esri.renderers.RasterStretchRenderer")],t.default),t.default});