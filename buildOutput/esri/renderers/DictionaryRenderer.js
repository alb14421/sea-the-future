// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../chunks/tslib.es6","../request","../core/lang","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../layers/support/fieldUtils","./Renderer","./mixins/VisualVariablesMixin","./support/DictionaryLoader"],function(e,r,t,i,s,o,a,n,l,c,p,u,d){"use strict";var y;return e.default=y=class extends(u.VisualVariablesMixin(p)){constructor(e){super(e),this.config=null,this.fieldMap=null,this.scaleExpression=null,this.scaleExpressionTitle=null,this.url=null,this.type="dictionary"}get _loader(){const e=this.getDictionaryInfo();return new d.DictionaryLoader(this.url,this.config,this.fieldMap??{},e)}writeData(e,r){e&&(r.scalingExpressionInfo={expression:e,returnType:"number"})}writeVisualVariables(e,r,t,i){i?.origin||super.writeVisualVariables(e,r,t,i)}clone(){return new y({config:i.clone(this.config),scaleExpression:this.scaleExpression,scaleExpressionTitle:this.scaleExpressionTitle,fieldMap:i.clone(this.fieldMap),url:i.clone(this.url),visualVariables:i.clone(this.visualVariables)})}async getSymbolAsync(e,r,t=!0){return this._loader.getSymbolAsync(e,r,t)}async getSymbolForControlString(e,r,t){return this._loader.getSymbolForControlString(e,r,t)}getDictionaryInfo(){return this._dictionaryInfoPromise||(this._dictionaryInfoPromise=this._fetchDictionaryInfo()),this._dictionaryInfoPromise}async collectRequiredFields(e,r){await this.collectVVRequiredFields(e,r),this.scaleExpression&&await c.collectArcadeFieldNames(e,r,this.scaleExpression);for(const t in this.fieldMap){const i=this.fieldMap[t];r.has(i)&&e.add(i)}}get arcadeRequired(){return!0}getSymbol(){return null}get symbols(){return[]}getAttributeHash(){return this.visualVariables?.reduce((e,r)=>e+r.getAttributeHash(),"")??""}getMeshHash(){return`${this.url}-${JSON.stringify(this.fieldMap)}`}async _fetchDictionaryInfo(){const{data:e}=await t(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"}});return e}},r.__decorate([s.property({type:d.DictionaryLoader})],e.default.prototype,"_loader",null),r.__decorate([s.property({type:Object,json:{read:{source:"configuration"},write:{target:"configuration"}}})],e.default.prototype,"config",void 0),r.__decorate([s.property({type:Object,json:{write:!0}})],e.default.prototype,"fieldMap",void 0),r.__decorate([s.property({type:String,json:{read:{source:"scalingExpressionInfo.expression"},write:!0}})],e.default.prototype,"scaleExpression",void 0),r.__decorate([l.writer("scaleExpression")],e.default.prototype,"writeData",null),r.__decorate([s.property({type:String,json:{read:{source:"scalingExpressionInfo.title"},write:{target:"scalingExpressionInfo.title",overridePolicy(e){return{enabled:!!e&&!!this.scaleExpression}}}}})],e.default.prototype,"scaleExpressionTitle",void 0),r.__decorate([s.property({type:String,json:{write:!0}})],e.default.prototype,"url",void 0),r.__decorate([l.writer("visualVariables")],e.default.prototype,"writeVisualVariables",null),e.default=y=r.__decorate([n.subclass("esri.renderers.DictionaryRenderer")],e.default),e.default});