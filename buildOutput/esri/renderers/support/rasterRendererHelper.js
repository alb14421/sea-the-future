// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../Color","../../core/unitUtils","../../layers/support/Field","../../layers/support/rasterDatasets/datasetUtils","../ClassBreaksRenderer","../FlowRenderer","../RasterColormapRenderer","../RasterShadedReliefRenderer","../RasterStretchRenderer","../UniqueValueRenderer","../VectorFieldRenderer","./AuthoringInfo","./ClassBreakInfo","./colorRampUtils","./rasterRendererChecks","./UniqueValueInfo","../visualVariables/ColorVariable","../visualVariables/SizeVariable","../visualVariables/support/ColorStop","../../rest/support/ClassBreaksDefinition","../../rest/support/generateRendererUtils","../../rest/support/MultipartColorRamp","../../symbols/SimpleFillSymbol"],function(e,t,n,a,r,l,s,o,i,u,c,m,d,f,p,b,h,g,v,y,R,C,w,S){"use strict";const x=w.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),M=w.fromJSON(p.predefinedJsonColorRamps[0]),V=new Set(["scientific","standard-time","vector-uv","vector-magdir","vector-u","vector-v","vector-magnitude","vector-direction"]);function T(e,t){e=I(e,t?.variableName);const{bandCount:n}=e;let{bandIds:a,stretchType:r}=t||{};a?.some(e=>e>=n)&&(a=null);let l=e.statistics,s=e.histograms;n>1?(a=a?.length?a:F(e),l=null==l?null:a?.map(e=>l[e]),s=null==s?null:a?.map(e=>s[e])):a=[0],null==r&&(r=function(e){let t="percent-clip";const{pixelType:n,dataType:a,histograms:r,statistics:l,multidimensionalInfo:s}=e,o=V.has(a)||"generic"===a&&null!=s;return"u8"!==n||"processed"!==a&&null!=r&&null!=l?"u8"===n||"elevation"===a||o?t="min-max":null!=r?t="percent-clip":null!=l&&(t="min-max"):t="none",t}(e)),t?.includeStatisticsInStretch&&("percent-clip"===r||"histogram-equalization"===r)&&e.statistics?.length&&(r="min-max");let o=!1;switch(r){case"none":o=!1;break;case"percent-clip":o=!s?.length;break;default:o=!l?.length}const{dataType:i}=e,c=1===a?.length&&V.has(i)?x:null,m=new u({stretchType:r,dynamicRangeAdjustment:o,colorRamp:c,outputMin:0,outputMax:255,gamma:1===a?.length?[1]:[1,1,1],useGamma:!1});return"percent-clip"===r?m.maxPercent=m.minPercent=.25:"standard-deviation"===r&&(m.numberOfStandardDeviations=2),o||null==e.multidimensionalInfo&&!t?.includeStatisticsInStretch||("percent-clip"===r?m.histograms=s:"min-max"!==r&&"standard-deviation"!==r||(m.customStatistics=l?.map(e=>({...e})))),m}function I(e,t){const{multidimensionalInfo:n}=e;if(!t||!n)return e;const a=n.variables.find(e=>e.name===t);if(!a)return e;if(e=e.clone(),a){const{statistics:t,histograms:n}=a;t?.length&&(e.statistics=t.map(e=>({min:e.min,max:e.max,avg:e.avg,stddev:e.stddev}))),n?.length&&(e.histograms=n)}return e}function F(e){const t=e.bandCount;if(1===t)return null;if(2===t)return[0];const{bandInfos:n}=e;let a;if(n.length===t){const{red:e,green:t,blue:r,nir:l}=k(n);null!=e&&null!=t&&null!=r?a=[e,t,r]:null!=l&&null!=e&&null!=t&&(a=[l,e,t])}return!a&&t>=3&&(a=[0,1,2]),a}function k(e){const t={};for(let n=0;n<e.length;n++){const a=e[n],r=a.name.toLowerCase();if("red"===r)t.red=n;else if("green"===r)t.green=n;else if("blue"===r)t.blue=n;else if("nearinfrared"===r||"nearinfrared_1"===r||"nir"===r)t.nir=n;else if(a.maxWavelength&&a.minWavelength){const e=a.minWavelength,r=a.maxWavelength;null==t.blue&&e>=410&&e<=480&&r>=480&&r<=540?t.blue=n:null==t.green&&e>=490&&e<=560&&r>=560&&r<=610?t.green=n:null==t.red&&e>=595&&e<=670&&r>=660&&r<=730?t.red=n:null==t.nir&&e>=700&&e<=860&&r>=800&&r<=950&&(t.nir=n)}}return t}function B(e,n,a,r){if(!b.isUVRendererSupported(e,n))return null;const{attributeTable:l,statistics:s}=e,o=L(l,n),i=U(l,"red"),u=U(l,"green"),m=U(l,"blue"),f=new d,g=[],v=new Set,y=!!(i&&u&&m);if(null!=l)l.features.forEach(e=>{const n=e.attributes[o.name];if(!v.has(e.attributes[o.name])&&null!=n){v.add(n);const a=y&&("single"===i.type||"double"===i.type)&&("single"===u.type||"double"===u.type)&&("single"===m.type||"double"===m.type)&&!l.features.some(e=>e.attributes[i.name]>1||e.attributes[u.name]>1||e.attributes[m.name]>1),r=a?255:1;g.push(new h({value:e.attributes[o.name],label:e.attributes[o.name]+"",symbol:new S({style:"solid",outline:null,color:new t(y?[e.attributes[i.name]*r,e.attributes[u.name]*r,e.attributes[m.name]*r,1]:[0,0,0,0])})}))}});else if(s?.[0])for(let e=s[0].min;e<=s[0].max;e++)g.push(new h({value:e,label:e.toString(),symbol:new S({style:"solid",outline:null,color:new t([0,0,0,0])})}));if(g.sort((e,t)=>e.value&&"string"==typeof e.value.valueOf()?0:e.value>t.value?1:-1),!y){const e=p.convertColorRampToColormap(M,{numColors:g.length});g.forEach((n,a)=>n.symbol.color=new t(e[a].slice(1,4))),f.colorRamp=M}if(a||r){const e=a||p.convertColorRampToColormap(r,{numColors:g.length}).map(e=>e.slice(1));g.forEach((n,a)=>n.symbol.color=new t(e[a])),f.colorRamp=r}return new c({field:o.name,uniqueValueInfos:g,authoringInfo:f})}function L(e,t,n){let r;return null!=e?(r=t?e.fields.find(e=>t.toLowerCase()===e.name.toLowerCase()):function(e){let t;for(let n=0;n<e.length;n++){const a=e[n].name.toLowerCase();if("string"===e[n].type){if(a.startsWith("class")){t=e[n];break}null==t&&(a.endsWith("name")||a.endsWith("type"))&&(t=e[n])}}return t}(e.fields),r||(n||(r=e.fields.find(e=>"string"===e.type)),r||(r=U(e,"value")))):r=new a({name:"value"}),r}function U(e,t){return null==e?null:e.fields.find(e=>e.name.toLowerCase()===t)}function q(e){if(!b.isColormapRendererSupported(e))return null;let t;const{attributeTable:n,colormap:a}=e;if(null!=n){const e=U(n,"value"),a=L(n,null,!0);"string"===a.type&&(t={},n.features.forEach(n=>{const r=n.attributes;t[r[e.name]]=a?r[a.name]:r[e.name]}))}return o.createFromColormap(a,t)}function z(e,t,n){let a=0,r=0;if(null!=e.attributeTable){const n=e.attributeTable;a=r=n.features[0].attributes[t.name],n.features.forEach(e=>{const n=e.attributes[t.name];n<a&&(a=n),n>r&&(r=n)})}else if(null!=e.histograms){const t=e.histograms;a=t[0].min,r=t[0].max}return(r-a)/n}const D=new Map([["m/s","meter-per-second"],["km/h","kilometer-per-hour"],["knots","knots"],["ft/s","feet-per-second"],["mph","mile-per-hour"]]);function E(e){if(!b.isVectorFieldRendererSupported(e))return null;let t;if(null!=e.statistics&&e.statistics.length&&("vector-magdir"===e.dataType||"vector-uv"===e.dataType)){const{minMagnitude:n,maxMagnitude:a}=W(e.dataType,e.statistics);t=[new v({field:"Magnitude",minSize:10,maxSize:40,minDataValue:n,maxDataValue:a})]}const n=null!=e.multidimensionalInfo?D.get(e.multidimensionalInfo.variables[0].unit):void 0,a=new m({visualVariables:t,inputUnit:n,rotationType:"geographic"});return a.visualVariables=[...a.sizeVariables,...a.rotationVariables],a}function N(e){return{color:e.symbolLayers[0].material?.color,type:"esriSFS",style:"esriSFSSolid"}}function W(e,t){let n,a;if("vector-magdir"===e)n=t[0].min,a=t[0].max;else{const e=t[0].min,r=t[0].max,l=t[1].min,s=t[1].max;n=0,a=Math.max(Math.abs(e),Math.abs(l),Math.abs(r),Math.abs(s))}return{minMagnitude:n,maxMagnitude:a}}e.createClassBreaksRenderer=function(e,t){e=I(e,t?.variableName);const{attributeTable:n}=e;if(!b.isClassBreaksSupported(e))return null;const a=null!=e.histograms?e.histograms[0]:null,r=null!=t?.numClasses&&isFinite(t?.numClasses)?t.numClasses:5,s=new d({classificationMethod:t?.classificationMethod,colorRamp:t?.colorRamp});let o=t?.field||"value";const i=[],u=[],c=null!=n,m=c&&n.fields.find(e=>"count"===e.name.toLowerCase()),h=c?n.fields.find(e=>e.name.toLowerCase()===o.toLowerCase()):void 0;if(h&&c){o=h.name;const e=n.features.length;let t=0;n.features.forEach(n=>t+=(m?n.attributes[m.name]:50)/e),n.features.forEach(n=>{const a=n.attributes[h.name],r=m?n.attributes[m.name]:50;if(r>0){u.push(r);const n=Math.max(1,Math.round(r/e/t*1e3));for(let e=0;e<n;e++)i.push(a)}})}else{const{pixelType:t}=e,r=(a.max-a.min)/a.size,l=t.includes("s")||t.includes("u"),s=l&&1===r?Math.floor(a.min+.5):a.min,o=l&&1===r?Math.floor(a.max-.5):a.max,m=a.size;let d,f=0;a.counts.forEach(e=>f+=e/m),a.counts.forEach((e,t)=>{if(e>0){u.push(e);const l=Math.max(1,Math.round(e/m/f*1e3));d=c?n.features[t].attributes[h.name]:0===t?s:t===m-1?o:a.min+r*(t+.5);for(let e=0;e<l;e++)i.push(d)}})}const g=t?.classificationMethod||"natural-breaks";let v=t?.definedInterval;"defined-interval"!==g||v||(v=z(e,h,r));const y=C.createGenerateRendererClassBreaks({values:i,valueFrequency:u,normalizationTotal:null,definition:new R({classificationMethod:g,breakCount:r,definedInterval:v})});let w=t?.colors;if(!w){const e=t?.colorRamp||x;s.colorRamp=e;const n=p.convertColorRampToColormap(e,{numColors:y.classBreaks.length,interpolateAlpha:!0});w=n.map(e=>e.slice(1))}const M=y.classBreaks.map((e,t)=>new f({minValue:e.minValue,maxValue:e.maxValue,label:e.label,symbol:new S({color:w[t]})}));return new l({field:o,classBreakInfos:M,authoringInfo:s})},e.createColormapRenderer=q,e.createDefaultRenderer=function(e,t){const{attributeTable:n,colormap:a}=e;if(b.isVectorFieldRendererSupported(e)){const t=E(e);if(null!=t)return t}if(t?.rasterFunctionColorRamp){const n=T(e,t);return n.colorRamp=t.rasterFunctionColorRamp,n}if(null!=a){const t=q(e);if(null!=t)return t}if(null!=n){const t=B(e);if(null!=t)return t}return T(e,t)},e.createFlowRenderer=function(e){if(!b.isFlowRendererSupported(e))return null;let n;if(null!=e.statistics&&e.statistics.length>0&&("vector-magdir"===e.dataType||"vector-uv"===e.dataType)){const{minMagnitude:a,maxMagnitude:r}=W(e.dataType,e.statistics);n=[new g({field:"Magnitude",stops:[new y({value:a,color:new t("#1020c0")}),new y({value:r,color:new t("#c02010")})]})]}return new s({visualVariables:n})},e.createShadedReliefRenderer=function(e,t="traditional"){if(!b.isShadedReliefRendererSupported(e))return null;const{extent:a}=e,r=a.width*n.getMetersPerUnitForSR(a.spatialReference);return new i({hillshadeType:t,scalingType:r>5e6?"adjusted":"none"})},e.createStretchRenderer=T,e.createUVRenderer=B,e.createVectorFieldRenderer=E,e.estimateMagnitudeRange=W,e.getBandNames=function(e,t){const n=e.bandInfos.map(({name:e})=>e);return t?.length?t.map(e=>n[e]):n},e.getClassField=L,e.getDefaultBandCombination=F,e.getDefaultInterpolation=function(e,t,n){const a=n?.toLowerCase().replace("bicubic","cubic"),r=["nearest","bilinear","cubic","majority"].find(e=>e===a);return"Map"===t?r??"bilinear":"standard-time"===e.dataType?r??"nearest":"thematic"===e.dataType||e.attributeTable||e.colormap?"nearest"===r||"majority"===r?r:"nearest":r??"bilinear"},e.getDefinedInterval=z,e.getField=U,e.getFunctionColorRamp=function(e){return r.isFunctionRaster(e)&&"Colormap"===e.rasterFunction.functionName?e.rasterFunction.colorRamp:void 0},e.getSupportedRendererTypes=function(e,t=!1){const n=["raster-stretch"];return b.isColormapRendererSupported(e,t)&&n.push("raster-colormap"),b.isUVRendererSupported(e)&&n.push("unique-value"),b.isClassBreaksSupported(e,t)&&n.push("class-breaks"),b.isShadedReliefRendererSupported(e)&&n.push("raster-shaded-relief"),b.isVectorFieldRendererSupported(e)&&n.push("vector-field"),b.isFlowRendererSupported(e)&&n.push("flow"),n},e.getVariableRasterInfo=I,e.getWellKnownBandIndexes=k,e.matchPresetRenderer=function(e){return e.presetRenderers?.find(({method:t,value:n})=>"raster-function-template"===t?n===e.rasterFunctionName:"variable"===t&&n===e.variableName)},e.normalizeRendererJSON=function(e){if("uniqueValue"===e.type){const t=e.uniqueValueInfos,n=t?.[0].symbol;return n?.symbolLayers?.length&&(e.uniqueValueInfos=t?.map(e=>({value:e.value,label:e.label,symbol:e.symbol?N(e.symbol):null}))),e}if("classBreaks"===e.type){const t=e.classBreakInfos,n=t[0].symbol;return n?.symbolLayers?.length&&(e.classBreakInfos=t.map(e=>({classMinValue:e.classMinValue,classMaxValue:e.classMaxValue,label:e.label,symbol:e.symbol?N(e.symbol):null}))),e}return e},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});