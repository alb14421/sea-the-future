// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/JSONSupport","../../core/lang","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../geometry/Point","../../geometry/support/jsonUtils","../../geometry/support/typeUtils","../../layers/support/MosaicRule","../../layers/support/RasterFunction","../../chunks/TimeExtent"],function(e,t,r,o,i,s,n,a,u,l,p,c,d,y,m){"use strict";var _;return e.default=_=class extends r.JSONSupport{constructor(e){super(e),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=p.getJsonType(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=d.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=y.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[r]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const o=null!=e.start?e.start.getTime():null,i=null!=e.end?e.end.getTime():null;t[r]=null!=o?null!=i?`${o},${i}`:`${o}`:null}}clone(){return new _(o.clone({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}},t.__decorate([i.property({types:c.geometryTypes,json:{write:!0}})],e.default.prototype,"geometry",void 0),t.__decorate([u.writer("geometry")],e.default.prototype,"writeGeometry",null),t.__decorate([i.property({type:d,json:{write:!0}})],e.default.prototype,"mosaicRule",null),t.__decorate([u.writer("mosaicRule")],e.default.prototype,"writeMosaicRule",null),t.__decorate([i.property({type:y,json:{write:!0,name:"renderingRule"}})],e.default.prototype,"rasterFunction",null),t.__decorate([u.writer("rasterFunction")],e.default.prototype,"writeRasterFunction",null),t.__decorate([i.property({type:[y],json:{write:!0,name:"renderingRules"}})],e.default.prototype,"rasterFunctions",void 0),t.__decorate([u.writer("rasterFunctions")],e.default.prototype,"writeRasterFunctions",null),t.__decorate([i.property({type:l,json:{write:!0}})],e.default.prototype,"pixelSize",void 0),t.__decorate([u.writer("pixelSize")],e.default.prototype,"writePixelSize",null),t.__decorate([i.property({type:Boolean,json:{write:!0}})],e.default.prototype,"returnGeometry",void 0),t.__decorate([i.property({type:Boolean,json:{write:!0}})],e.default.prototype,"returnCatalogItems",void 0),t.__decorate([i.property({type:Boolean,json:{write:!0}})],e.default.prototype,"returnPixelValues",void 0),t.__decorate([i.property({type:Number,json:{write:!0}})],e.default.prototype,"maxItemCount",void 0),t.__decorate([i.property({type:m.TimeExtent,json:{write:{target:"time"}}})],e.default.prototype,"timeExtent",void 0),t.__decorate([u.writer("timeExtent")],e.default.prototype,"writeTimeExtent",null),t.__decorate([i.property({json:{write:!0}})],e.default.prototype,"raster",void 0),t.__decorate([i.property({json:{write:!0}})],e.default.prototype,"viewId",void 0),t.__decorate([i.property({type:Boolean,json:{write:!0}})],e.default.prototype,"processAsMultidimensional",void 0),e.default=_=t.__decorate([a.subclass("esri.rest.support.ImageIdentifyParameters")],e.default),e.default});