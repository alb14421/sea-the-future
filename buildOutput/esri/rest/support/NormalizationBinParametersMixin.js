// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/jsonMap","../../core/Logger","../../core/accessorSupport/decorators/property","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/enumeration","../../core/accessorSupport/decorators/subclass"],function(o,e,t,a,r,n,i,l,s){"use strict";const p=t.strict()({naturalLog:"natural-log",squareRoot:"square-root",percentOfTotal:"percent-of-total",log:"log",field:"field"}),m="percent-of-total",c="field";o.NormalizationBinParametersMixin=o=>{const t=o;let n=class extends t{constructor(){super(...arguments),this.normalizationField=null,this.normalizationMaxValue=null,this.normalizationMinValue=null,this.normalizationTotal=null}get normalizationType(){let o=this._get("normalizationType");const e=!!this.normalizationField,t=null!=this.normalizationTotal;return e||t?(o=e&&c||t&&m||null,e&&t&&a.getLogger(this).warn("warning: both normalizationField and normalizationTotal are set!")):o!==c&&o!==m||(o=null),o}set normalizationType(o){this._set("normalizationType",o)}};return e.__decorate([r.property({type:String,json:{name:"parameters.normalizationField",write:!0}})],n.prototype,"normalizationField",void 0),e.__decorate([r.property({type:Number,json:{name:"parameters.normalizationMaxValue",write:!0}})],n.prototype,"normalizationMaxValue",void 0),e.__decorate([r.property({type:Number,json:{name:"parameters.normalizationMinValue",write:!0}})],n.prototype,"normalizationMinValue",void 0),e.__decorate([r.property({type:Number,json:{name:"parameters.normalizationTotal",write:!0}})],n.prototype,"normalizationTotal",void 0),e.__decorate([l.enumeration(p,{name:"parameters.normalizationType"})],n.prototype,"normalizationType",null),n=e.__decorate([s.subclass("esri.rest.support.NormalizationBinParametersMixin")],n),n},o.normalizationTypeJsonMap=p,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});