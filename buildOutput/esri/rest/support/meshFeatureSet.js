// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../Graphic","../../core/Logger","../../core/MapUtils","../../geometry/Extent","../../geometry/Mesh","../../geometry/SpatialReference","../../geometry/support/meshUtils/External","../../layers/support/infoFor3D","./FeatureSet","./meshFeatureAttributes"],function(e,t,r,s,n,a,o,u,i,c,l){"use strict";const f=()=>r.getLogger("esri.rest.support.meshFeatureSet");function p(e,t,r,s,o){const i=e.attributes[t],c=o.get(i);if(null==c||!e.geometry)return null;const f=l.extractMeshFeatureOrigin(e.attributes,r,s.transformFieldRoles),p=n.fromJSON(e.geometry);p.spatialReference=r;const m=l.extractMeshFeatureTransform(e.attributes,s.transformFieldRoles),g=r.isGeographic?"local":"georeferenced",y=function(e){const t=Array.from(e.files.values()),r=new Array;for(const e of t){if(2!==e.status)return null;const t=new Array;for(const r of e.parts){if(!r)return null;t.push(new u.ServiceAssetPart(r.url,r.hash))}r.push(new u.ServiceAsset(e.name,e.mimeType,t))}return{type:"service",assets:r}}(c);return y?a.createWithExternalSource(f,y,{extent:p,transform:m,vertexSpace:g,unitConversionDisabled:!0}):a.createIncomplete(f,{extent:p,transform:m,vertexSpace:g})}function m(e,t){const r=new Map;for(const n of t){const t=n.parentGlobalId;if(null==t)continue;const a=n.assetName,o=n.assetType,u=n.assetHash,c=n.assetURL,l=n.conversionStatus,p=n.seqNo,m=i.getFormatIdMimeType(o,e.supportedFormats);if(!m){f().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${o}, but it does not list it as a supported type`);continue}const y=s.getOrCreateMapValue(r,t,()=>({files:new Map}));s.getOrCreateMapValue(y.files,a,()=>({name:a,type:o,mimeType:m,status:g(l),parts:[]})).parts[p]={hash:u,url:c}}return r}function g(e){switch(e){case"COMPLETED":case"SUBMITTED":return 2;case"INPROGRESS":return 1;default:return 0}}e.assetMapFromAssetMapsJSON=m,e.extractMesh=p,e.meshFeatureSetFromJSON=function(e,r,s){const n=s.features;s.features=[],delete s.geometryType;const a=c.fromJSON(s);if(a.geometryType="mesh",!s.assetMaps)return a;const u=m(r,s.assetMaps),i=e.sourceSpatialReference??o.WGS84,l=s.globalIdFieldName,{outFields:f}=e,g=null!=f&&f.length>0?(y=f.includes("*")?null:new Set(f),({attributes:e})=>{if(!e)return{};if(!y)return e;for(const t in e)y.has(t)||delete e[t];return e}):()=>({});var y;for(const e of n){const s=p(e,l,i,r,u);a.features.push(new t({geometry:s,attributes:g(e)}))}return a},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});