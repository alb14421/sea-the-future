// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../Graphic","../../PopupTemplate","../../core/Clonable","../../core/JSONSupport","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../geometry/Point","../route/utils","./networkEnums","../../symbols/support/typeUtils"],function(e,t,r,o,s,a,p,u,i,l,d,n,c,y,b,h,m){"use strict";var f;return e.default=class extends(s.ClonableMixin(a.JSONSupport)){static{f=this}constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(e,t){return b.getPrefixedProperties(t.attributes,"Attr_")}writeCosts(e,t){b.setPrefixedProperties(e,t,"Attr_")}static{this.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"}]}static fromGraphic(e){return new f({addedCost:e.attributes.AddedCost??null,barrierType:null!=e.attributes.BarrierType?h.barrierTypeJsonMap.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?b.toKebabImpedanceAttributes(JSON.parse(e.attributes.Costs)):null,curbApproach:null!=e.attributes.CurbApproach?h.curbApproachJsonMap.fromJSON(e.attributes.CurbApproach):null,fullEdge:null!=e.attributes.FullEdge?h.fullEdgeJsonMap.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:null!=e.attributes.Status?h.statusJsonMap.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:this.barrierType?h.barrierTypeJsonMap.toJSON(this.barrierType):null,Costs:this.costs?JSON.stringify(b.fromKebabImpedanceAttributes(this.costs)):null,CurbApproach:this.curbApproach?h.curbApproachJsonMap.toJSON(this.curbApproach):null,FullEdge:this.fullEdge?h.fullEdgeJsonMap.toJSON(this.fullEdge):null,Name:this.name,Status:this.status?h.statusJsonMap.toJSON(this.status):null};return new r({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}},t.__decorate([p.property()],e.default.prototype,"addedCost",void 0),t.__decorate([p.property({type:h.barrierTypeJsonMap.apiValues,json:{name:"attributes.BarrierType",read:{reader:h.barrierTypeJsonMap.read},write:{writer:h.barrierTypeJsonMap.write}}})],e.default.prototype,"barrierType",void 0),t.__decorate([p.property()],e.default.prototype,"costs",void 0),t.__decorate([d.reader("costs",["attributes"])],e.default.prototype,"readCosts",null),t.__decorate([c.writer("costs")],e.default.prototype,"writeCosts",null),t.__decorate([p.property({type:h.curbApproachJsonMap.apiValues,json:{read:{source:"attributes.CurbApproach",reader:h.curbApproachJsonMap.read}}})],e.default.prototype,"curbApproach",void 0),t.__decorate([p.property({type:h.fullEdgeJsonMap.apiValues,json:{name:"attributes.FullEdge",read:{reader:h.fullEdgeJsonMap.read},write:{writer:h.fullEdgeJsonMap.write}}})],e.default.prototype,"fullEdge",void 0),t.__decorate([p.property({type:y,json:{write:!0}})],e.default.prototype,"geometry",void 0),t.__decorate([p.property({json:{name:"attributes.Name"}})],e.default.prototype,"name",void 0),t.__decorate([p.property({json:{name:"attributes.ObjectID"}})],e.default.prototype,"objectId",void 0),t.__decorate([p.property({type:o})],e.default.prototype,"popupTemplate",void 0),t.__decorate([p.property({type:h.sideOfEdgeJsonMap.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:h.sideOfEdgeJsonMap.read}}})],e.default.prototype,"sideOfEdge",void 0),t.__decorate([p.property({json:{read:{source:"attributes.SourceID"}}})],e.default.prototype,"sourceId",void 0),t.__decorate([p.property({json:{read:{source:"attributes.SourceOID"}}})],e.default.prototype,"sourceOid",void 0),t.__decorate([p.property({type:h.statusJsonMap.apiValues,json:{read:{source:"attributes.Status",reader:h.statusJsonMap.read}}})],e.default.prototype,"status",void 0),t.__decorate([p.property({types:m.symbolTypes})],e.default.prototype,"symbol",void 0),t.__decorate([p.property({readOnly:!0,json:{read:!1}})],e.default.prototype,"type",void 0),e.default=f=t.__decorate([n.subclass("esri.rest.support.PointBarrier")],e.default),e.default});