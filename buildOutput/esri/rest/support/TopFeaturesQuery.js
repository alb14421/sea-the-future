// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/jsonMap","../../core/JSONSupport","../../core/lang","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../geometry/SpatialReference","../../geometry/support/jsonUtils","../../geometry/support/typeUtils","./TopFilter","../../chunks/TimeExtent"],function(e,t,r,o,i,s,a,p,l,n,d,u,c,y){"use strict";var h;const _=new r.JSONMap({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),f=new r.JSONMap({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"});return e.default=class extends o.JSONSupport{static{h=this}constructor(e){super(e),this.cacheHint=void 0,this.distance=void 0,this.geometry=null,this.geometryPrecision=void 0,this.maxAllowableOffset=void 0,this.num=void 0,this.objectIds=null,this.orderByFields=null,this.outFields=null,this.outSpatialReference=null,this.resultType=null,this.returnGeometry=!1,this.returnM=void 0,this.returnZ=void 0,this.start=void 0,this.spatialRelationship="intersects",this.timeExtent=null,this.topFilter=void 0,this.units=null,this.where="1=1"}writeStart(e,t){t.resultOffset=this.start,t.resultRecordCount=this.num||10}clone(){return new h(i.clone({cacheHint:this.cacheHint,distance:this.distance,geometry:this.geometry,geometryPrecision:this.geometryPrecision,maxAllowableOffset:this.maxAllowableOffset,num:this.num,objectIds:this.objectIds,orderByFields:this.orderByFields,outFields:this.outFields,outSpatialReference:this.outSpatialReference,resultType:this.resultType,returnGeometry:this.returnGeometry,returnZ:this.returnZ,returnM:this.returnM,start:this.start,spatialRelationship:this.spatialRelationship,timeExtent:this.timeExtent,topFilter:this.topFilter,units:this.units,where:this.where}))}},t.__decorate([s.property({type:Boolean,json:{write:!0}})],e.default.prototype,"cacheHint",void 0),t.__decorate([s.property({type:Number,json:{write:{overridePolicy:e=>({enabled:e>0})}}})],e.default.prototype,"distance",void 0),t.__decorate([s.property({types:u.geometryTypes,json:{read:d.fromJSON,write:!0}})],e.default.prototype,"geometry",void 0),t.__decorate([s.property({type:Number,json:{write:!0}})],e.default.prototype,"geometryPrecision",void 0),t.__decorate([s.property({type:Number,json:{write:!0}})],e.default.prototype,"maxAllowableOffset",void 0),t.__decorate([s.property({type:Number,json:{read:{source:"resultRecordCount"}}})],e.default.prototype,"num",void 0),t.__decorate([s.property({json:{write:!0}})],e.default.prototype,"objectIds",void 0),t.__decorate([s.property({type:[String],json:{write:!0}})],e.default.prototype,"orderByFields",void 0),t.__decorate([s.property({type:[String],json:{write:!0}})],e.default.prototype,"outFields",void 0),t.__decorate([s.property({type:n,json:{read:{source:"outSR"},write:{target:"outSR"}}})],e.default.prototype,"outSpatialReference",void 0),t.__decorate([s.property({type:String,json:{write:!0}})],e.default.prototype,"resultType",void 0),t.__decorate([s.property({json:{write:!0}})],e.default.prototype,"returnGeometry",void 0),t.__decorate([s.property({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],e.default.prototype,"returnM",void 0),t.__decorate([s.property({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],e.default.prototype,"returnZ",void 0),t.__decorate([s.property({type:Number,json:{read:{source:"resultOffset"}}})],e.default.prototype,"start",void 0),t.__decorate([l.writer("start"),l.writer("num")],e.default.prototype,"writeStart",null),t.__decorate([s.property({type:String,json:{read:{source:"spatialRel",reader:_.read},write:{target:"spatialRel",writer:_.write}}})],e.default.prototype,"spatialRelationship",void 0),t.__decorate([s.property({type:y.TimeExtent,json:{write:!0}})],e.default.prototype,"timeExtent",void 0),t.__decorate([s.property({type:c,json:{write:!0}})],e.default.prototype,"topFilter",void 0),t.__decorate([s.property({type:String,json:{read:f.read,write:{writer:f.write,overridePolicy(e){return{enabled:null!=e&&null!=this.distance}}}}})],e.default.prototype,"units",void 0),t.__decorate([s.property({type:String,json:{write:!0}})],e.default.prototype,"where",void 0),e.default=h=t.__decorate([p.subclass("esri.rest.support.TopFeaturesQuery")],e.default),e.default.from=a.ensureType(e.default),e.default});