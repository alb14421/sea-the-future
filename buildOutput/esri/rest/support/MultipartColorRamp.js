// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/lang","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","./AlgorithmicColorRamp","./ColorRamp"],function(e,r,t,o,s,p,a,c,l,i,u){"use strict";var d;return e.default=d=class extends u{constructor(e){super(e),this.colorRamps=null,this.type="multipart",this.weights=void 0}writeColorRamps(e,r,t,o){const s=e?.map(e=>e.toJSON(o)),{weights:p}=this;if(s&&p?.length&&s.length===p?.length){const e=100/p.reduce((e,r)=>e+r);let r=0;s.forEach((t,o)=>{t.start=r,r+=p[o]*e,t.stop=r})}r.colorRamps=s}readWeights(e,r){const t=r.colorRamps?.map(({start:e,stop:r})=>null==e||null==r?-1:r-e);if(!t?.some(e=>e<0))return t}clone(){return new d({colorRamps:t.clone(this.colorRamps)})}},r.__decorate([o.property({type:[i],json:{write:{isRequired:!0}}})],e.default.prototype,"colorRamps",void 0),r.__decorate([l.writer("colorRamps")],e.default.prototype,"writeColorRamps",null),r.__decorate([o.property({type:["multipart"],json:{write:{isRequired:!0}}})],e.default.prototype,"type",void 0),r.__decorate([o.property({type:[Number]})],e.default.prototype,"weights",void 0),r.__decorate([a.reader("weights",["colorRamps"])],e.default.prototype,"readWeights",null),e.default=d=r.__decorate([c.subclass("esri.rest.support.MultipartColorRamp")],e.default),e.default});