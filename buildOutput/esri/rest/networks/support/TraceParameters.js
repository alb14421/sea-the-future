// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/JSONSupport","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/has","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/accessorSupport/decorators/writer","../../../geometry/SpatialReference","../../../networks/support/typeUtils","../../../networks/support/UNTraceConfiguration","./TraceLocation"],function(e,t,r,o,a,p,i,s,c,n,u,l){"use strict";var d;let y=d=class extends t.JSONSupport{static from(e){return o.ensureClass(d,e)}constructor(e){super(e),this.namedTraceConfigurationGlobalId=null,this.gdbVersion=null,this.traceLocations=[],this.moment=null,this.outSpatialReference=null,this.traceConfiguration=null,this.resultTypes=null,this.traceType=null}writeOutSR(e,t,r){if(null!=e){const{wkid:o,latestWkid:a,wkt:p,wkt2:i}=e;t[r]=JSON.stringify({wkid:o??void 0,latestWkid:a??void 0,wkt:p??void 0,wkt2:i??void 0})}}};return e.__decorate([r.property({type:String,json:{read:{source:"traceConfigurationGlobalId"},write:{target:"traceConfigurationGlobalId"}}})],y.prototype,"namedTraceConfigurationGlobalId",void 0),e.__decorate([r.property({type:String,json:{write:!0}})],y.prototype,"gdbVersion",void 0),e.__decorate([r.property({type:[l],json:{write:!0}})],y.prototype,"traceLocations",void 0),e.__decorate([r.property({type:Date,json:{type:Number,write:{writer:(e,t)=>{t.moment=e?e.getTime():null}}}})],y.prototype,"moment",void 0),e.__decorate([r.property({type:c,json:{write:{allowNull:!0,target:"outSR"}}})],y.prototype,"outSpatialReference",void 0),e.__decorate([s.writer("outSpatialReference")],y.prototype,"writeOutSR",null),e.__decorate([r.property({type:u,json:{write:!0}})],y.prototype,"traceConfiguration",void 0),e.__decorate([r.property({type:[Object],json:{write:!0}})],y.prototype,"resultTypes",void 0),e.__decorate([r.property({type:n.traceTypeKebabDict.apiValues,json:{type:n.traceTypeKebabDict.jsonValues,read:n.traceTypeKebabDict.read,write:n.traceTypeKebabDict.write}})],y.prototype,"traceType",void 0),y=d=e.__decorate([i.subclass("esri.rest.networks.support.TraceParameters")],y),y});