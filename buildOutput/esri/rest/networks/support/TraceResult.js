// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/JSONSupport","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/reader","../../../core/accessorSupport/decorators/subclass","../../../core/accessorSupport/decorators/writer","./AggregatedGeometry","./CircuitPath","./CircuitTraceResult","./FunctionResult","./NetworkElement","./TelecomNetworkElement"],function(e,t,r,o,s,n,a,l,p,d,i,u,c,y,w,m){"use strict";return e.default=class extends r.JSONSupport{constructor(e){super(e),this.aggregatedGeometry=null,this.circuits=null,this.elements=null,this.globalFunctionResults=null,this.kFeaturesForKNNFound=!1,this.paths=null,this.startingPointsIgnored=!1,this.warnings=null}readNetworkElements(e,t){return null!=t.elements&&Array.isArray(t.elements)?t.elements.map(e=>"firstUnit"in e&&"numUnits"in e?new m({...e}):new w({...e})):[]}writeNetworkElements(e,t){t.elements=e.map(e=>e.toJSON())}},t.__decorate([o.property({type:i,json:{write:!0},readOnly:!0})],e.default.prototype,"aggregatedGeometry",void 0),t.__decorate([o.property({type:[c],json:{write:!0},readOnly:!0})],e.default.prototype,"circuits",void 0),t.__decorate([o.property({type:[w],json:{write:!0},readOnly:!0})],e.default.prototype,"elements",void 0),t.__decorate([l.reader("elements")],e.default.prototype,"readNetworkElements",null),t.__decorate([d.writer("elements")],e.default.prototype,"writeNetworkElements",null),t.__decorate([o.property({type:[y],json:{write:!0},readOnly:!0})],e.default.prototype,"globalFunctionResults",void 0),t.__decorate([o.property({type:Boolean,json:{write:!0},readOnly:!0})],e.default.prototype,"kFeaturesForKNNFound",void 0),t.__decorate([o.property({type:[u],json:{write:!0},readOnly:!0})],e.default.prototype,"paths",void 0),t.__decorate([o.property({type:Boolean,json:{write:!0},readOnly:!0})],e.default.prototype,"startingPointsIgnored",void 0),t.__decorate([o.property({type:[String],json:{write:!0},readOnly:!0})],e.default.prototype,"warnings",void 0),e.default=t.__decorate([p.subclass("esri.rest.networks.support.TraceResult")],e.default),e.default});