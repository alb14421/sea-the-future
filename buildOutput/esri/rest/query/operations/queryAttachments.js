// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../kernel","../../../request","../../../core/urlUtils","../../operations/urlUtils","../support/AttachmentInfo"],function(t,e,n,o,r,a){"use strict";function s(t){const e=t.toJSON();return e.attachmentTypes&&(e.attachmentTypes=e.attachmentTypes.join(",")),e.keywords&&(e.keywords=e.keywords.join(",")),e.globalIds&&(e.globalIds=e.globalIds.join(",")),e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.size&&(e.size=e.size.join(",")),e.orderByFields&&(e.orderByFields=e.orderByFields.join(",")),e}t.executeAttachmentQuery=function(t,e,o){let a={query:r.mapParameters({...t.query,f:"json",...s(e)})};return o&&(a={...o,...a,query:{...o.query,...a.query}}),n(t.path+"/queryAttachments",a).then(t=>t.data.attachmentGroups)},t.fetchAttachments=async function(t,e,o){const{objectIds:r}=e,a=[];for(const e of r)a.push(n(t.path+"/"+e+"/attachments",o));return Promise.all(a).then(t=>r.map((e,n)=>({parentObjectId:e,attachmentInfos:t[n].data.attachmentInfos})))},t.processAttachmentQueryResult=function(t,n){const r={};for(const s of n){const{parentObjectId:n,parentGlobalId:c,attachmentInfos:d}=s;for(const s of d){const{id:d}=s,u=o.addProxy(e.addTokenParameter(`${t.path}/${n}/attachments/${d}`)),i=a.fromJSON(s);i.set({url:u,parentObjectId:n,parentGlobalId:c}),r[n]?r[n].push(i):r[n]=[i]}}return r},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});