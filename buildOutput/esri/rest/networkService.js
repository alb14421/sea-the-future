// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../request","../core/Error","../core/Logger","../core/object","../core/urlUtils","./utils","./support/NetworkServiceDescription"],function(e,t,r,o,s,a,n,i){"use strict";e.collectGeometries=function(e,t,r,o){o[r]=[t.length,t.length+e.length],e.forEach(e=>{t.push(e.geometry)})},e.dropZValuesOffInputGeometry=function(e,t){for(let r=0;r<t.length;r++){const o=e[t[r]];if(o&&o.length)for(const e of o)e.z=void 0}o.getLogger("esri.rest.networkService").warnOnce("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")},e.fetchServiceDescription=async function(e,o,l){if(!e)throw new r("network-service:missing-url","Url to Network service is missing");const u={f:"json",token:o},c=n.asValidOptions(u,l),{data:d}=await t(e,c),f=d.currentVersion>=10.4?async function(e,o,s){try{const r={f:"json",token:o},i=n.asValidOptions(r,s),l=a.removeTrailingSlash(e)+"/retrieveTravelModes",{data:{supportedTravelModes:u,defaultTravelMode:c}}=await t(l,i);return{supportedTravelModes:u,defaultTravelMode:c}}catch(e){throw new r("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(e,o,l):async function(e,r){const o=n.asValidOptions({f:"json"},r),{data:i}=await t(e.replace(/\/rest\/.*$/i,"/info"),o);if(!i?.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:l}=i,u=a.removeTrailingSlash(l)+"/sharing/rest/portals/self",{data:c}=await t(u,o),d=s.getDeepValue("helperServices.routingUtilities.url",c);if(!d)return{supportedTravelModes:[],defaultTravelMode:null};const f=n.parseUrl(l),v={f:"json",serviceName:/\/solve$/i.test(f.path)?"Route":/\/solveclosestfacility$/i.test(f.path)?"ClosestFacility":"ServiceAreas"},p=n.asValidOptions(v,r),g=a.removeTrailingSlash(d)+"/GetTravelModes/execute",h=await t(g,p),T=[];let w=null;if(h?.data?.results?.length){const e=h.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){if(t.value?.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);T.push(t)}}else"defaultTravelMode"===t.paramName&&(w=t.value)}return{supportedTravelModes:T,defaultTravelMode:w}}(e,l),{defaultTravelMode:v,supportedTravelModes:p}=await f;return d.defaultTravelMode=v,d.supportedTravelModes=p,i.fromJSON(d)},e.isInputGeometryZAware=function(e,t){for(let r=0;r<t.length;r++){const o=e[t[r]];if(o&&o.length)for(const e of o)if(null!=e&&e.hasZ)return!0}return!1},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});