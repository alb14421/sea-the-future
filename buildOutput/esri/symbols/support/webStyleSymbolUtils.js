// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/devEnvironmentUtils","../../core/Error","../../core/urlUtils","../../portal/Portal","../../chunks/persistableUrlUtils","./jsonUtils","./StyleOrigin","./styleUtils","./Thumbnail","./typeUtils","./webStyleAcceptedFormats"],function(e,t,l,o,r,n,a,s,m,i,u,y){"use strict";function c(e,t){return t.items.find(t=>t.name===e)}async function b(e,b,f,S,p){const d=null!=f?.portal?f.portal:r.getDefault(),h={portal:d,url:o.urlToObject(e.baseUrl)},g=c(b,e.data);if(!g)throw new l("symbolstyleutils:symbol-name-not-found",`The symbol name '${b}' could not be found`,{symbolName:b});const O=p?.acceptedFormats??y.defaultAcceptedFormats,U=S(g,O);if(!U)throw new l("symbolstyleutils:symbol-reference-no-accepted-format",`The symbol name '${b}' does not have an accepted format (one of ${O})`,{symbolName:b});const{url:N,format:w}=U;let T=n.fromJSON(N,h),v=g.thumbnail?.href??null;const j=g.thumbnail?.imageData;t.isDevEnvironment()&&(T=t.adjustStaticAGOUrl(T)??"",v=t.adjustStaticAGOUrl(v));const F={portal:d,url:o.urlToObject(o.removeFile(T)),origin:"portal-item"};return m.requestJSON(T,p).then(t=>{const l="cim"===w?m.makeCIMSymbolRef(t.data):t.data,o=a.fromJSON(l,F);if(o&&u.isSymbol3D(o)){if(v){const e=n.fromJSON(v,h);o.thumbnail=new i.Thumbnail({url:e})}else j&&(o.thumbnail=new i.Thumbnail({url:`data:image/png;base64,${j}`}));e.styleUrl?o.styleOrigin=new s({portal:f.portal,styleUrl:e.styleUrl,name:b}):e.styleName&&(o.styleOrigin=new s({portal:f.portal,styleName:e.styleName,name:b}))}return o})}e.fetchSymbolFromStyle=b,e.getStyleItemFromStyle=c,e.resolveWebStyleSymbol=function(e,t,n){const s=e.name;return null==s?Promise.reject(new l("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference")):"Esri2DPointSymbolsStyle"===e.styleName?function(e,t,l){const n=m.Style2DUrlTemplate.replaceAll(/\{SymbolName\}/gi,e),s=null!=t.portal?t.portal:r.getDefault();return m.requestJSON(n,l).then(e=>{const t=m.makeCIMSymbolRef(e.data);return a.fromJSON(t,{portal:s,url:o.urlToObject(o.removeFile(n)),origin:"portal-item"})})}(s,t,n):m.fetchStyle(e,t,n).then(e=>b(e,s,t,m.symbolUrlFromStyleItem,n))},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});