// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/Error","../LabelSymbol3D","../LineSymbol3D","../MeshSymbol3D","../PictureMarkerSymbol","../PointSymbol3D","../PolygonSymbol3D","../SimpleFillSymbol","../SimpleLineSymbol","../SimpleMarkerSymbol","../TextSymbol","../WebStyleSymbol","./defaults3D","./typeUtils"],function(e,o,l,n,r,i,t,y,m,s,b,a,c,f,S){"use strict";const p="#useCIMFallbackSymbology()",u={retainId:!1,ignoreDrivers:!1,hasLabelingContext:!0};e.defaultTo3DOptions=u,e.to3D=function(e,d=u){if(!e)return{symbol:null};const{retainId:g=u.retainId,ignoreDrivers:D=u.ignoreDrivers,hasLabelingContext:M=u.hasLabelingContext,retainCIM:C=u.retainCIM,cimFallbackEnabled:I=u.cimFallbackEnabled}=d;let k=null;if(S.isSymbol3D(e))k=e.clone();else if("web-style"===e.type)k=e.clone();else if("cim"===e.type){const l=e.data?.symbol?.type;switch(l){case"CIMPointSymbol":k=C?e.clone():t.fromCIMSymbol(e);break;case"CIMLineSymbol":I&&(k=f.defaultRendererPolylineSymbol3D.clone(),d?.logWarning?.(p,"Unsupported CIM line symbology converted to fallback 3D line symbology"));break;case"CIMPolygonSymbol":I&&(k=f.defaultRendererPolygonSymbol3D.clone(),d?.logWarning?.(p,"Unsupported CIM polygon symbology converted to fallback 3D polygon symbology"))}if(!k)return{error:new o("symbol-conversion:unsupported-cim-symbol",`CIM symbol of type '${l||"unknown"}' is unsupported in 3D`,{symbol:e})}}else if(e instanceof s)k=n.fromSimpleLineSymbol(e);else if(e instanceof b)k=t.fromSimpleMarkerSymbol(e);else if(e instanceof i)k=t.fromPictureMarkerSymbol(e);else if(e instanceof m)k=d.geometryType&&"mesh"===d.geometryType?r.fromSimpleFillSymbol(e):y.fromSimpleFillSymbol(e);else{if(!(e instanceof a))return{error:new o("symbol-conversion:unsupported-2d-symbol",`2D symbol of type '${e.type||e.declaredClass}' is unsupported in 3D`,{symbol:e})};k=M?l.fromTextSymbol(e):t.fromTextSymbol(e)}return g&&k&&"cim"!==k.type&&(k.id=e.id),!D||"cim"===k.type||k instanceof c||k.symbolLayers.forEach(e=>e.ignoreDrivers=!0),{symbol:k}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});