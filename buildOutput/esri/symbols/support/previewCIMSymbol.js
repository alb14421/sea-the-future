// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/screenUtils","../cim/CIMSymbolHelper","../cim/CIMSymbolRasterizer","../cim/OverrideHelper","../cim/utils","./renderUtils"],function(e,t,i,l,o,n,r){"use strict";const a=new l.CIMSymbolRasterizer(null),s=t.px2pt(22),m=t.px2pt(120),y=t.px2pt(50);async function p(e,t={},l){const r=t.cimOptions||t;l??=r.geometryType||n.mapCIMSymbolToGeometryType(e?.data?.symbol);const{feature:s,fieldMap:m,viewParams:y}=r,p=await o.OverrideHelper.resolveSymbolOverrides(e.data,s,null,m,l,null,y);if(!p)return null;(e=e.clone()).data={type:"CIMSymbolReference",symbol:p},e.data.primitiveOverrides=void 0;const c=[];return i.CIMSymbolHelper.fetchResources(p,a.resourceManager,c),i.CIMSymbolHelper.fetchFonts(p,a.resourceManager,c),c.length>0&&await Promise.all(c),i.CIMSymbolHelper.getEnvelope(p,null,a.resourceManager)}e.getCIMSymbolPreviewSize=p,e.previewCIMSymbol=async function(e,i={}){const{node:l,opacity:o,symbolConfig:c}=i,h=null!=c&&"object"==typeof c&&"isSquareFill"in c&&c.isSquareFill,u=i.cimOptions||i,d=u.geometryType||n.mapCIMSymbolToGeometryType(e?.data?.symbol),g=await async function(e,t,i){const l=t?.size;let o=null!=l&&"object"==typeof l&&"width"in l?l.width:l,n=null!=l&&"object"==typeof l&&"height"in l?l.height:l;if(!o||!n)if("esriGeometryPolygon"===i)o=n=t.maxSize?Math.min(t.maxSize,s):s;else{const l=await p(e,t,i);l&&(o=l.width,n=l.height),"esriGeometryPolyline"===i&&(o=t.maxSize?Math.min(t.maxSize,y):y),o=null!=o&&isFinite(o)?Math.min(o,m):s,n=null!=n&&isFinite(n)?Math.max(Math.min(n,m),1):s}return"legend"===t.style&&"esriGeometryPolyline"===i&&(o=y),{width:o,height:n}}(e,i,d),{feature:f,fieldMap:w}=u,b=i?.geometry||h||"esriGeometryPolygon"!==d?"preview":"legend";let S=g;const M=g;if(i?.geometry&&("esriGeometryPolygon"===d||"esriGeometryPolyline"===d)){const e=200;if(t.pt2px(g.width)<e||t.pt2px(g.height)<e){const i=g.width>g.height?t.px2pt(e)*g.height/g.width:t.px2pt(e);S={width:g.width>g.height?t.px2pt(e):t.px2pt(e)*g.width/g.height,height:i}}}const x=await a.rasterizeCIMSymbolAsync(e,f,S,b,w,d,null,u.viewParams,u.allowScalingUp,i?.geometry?.toJSON());if(!x)return null;const{width:v,height:C}=x,I=document.createElement("canvas");I.width=v,I.height=C,I.getContext("2d").putImageData(x,0,0);const P=t.pt2px(M.width),z=t.pt2px(M.height),G=new Image(P,z);G.src=I.toDataURL(),G.ariaLabel=i.ariaLabel??null,G.alt=i.ariaLabel??"",null!=o&&(G.style.opacity=`${o}`);let O=G;if(null!=i.effectView){const e={shape:{type:"image",x:0,y:0,width:P,height:z,src:G.src},fill:null,stroke:null,offset:[0,0]};O=r.renderSymbol([[e]],[P,z],i)}return l&&O&&l.appendChild(O),O},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});