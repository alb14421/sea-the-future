// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../chunks/tslib.es6","../Color","../core/jsonMap","../core/lang","../core/screenUtils","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/accessorSupport/decorators/enumeration","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","./MarkerSymbol","./SimpleLineSymbol"],function(e,t,r,o,s,l,i,a,p,c,n,u,h,y){"use strict";var d;const S=new o.JSONMap({esriSMSCircle:"circle",esriSMSSquare:"square",esriSMSCross:"cross",esriSMSX:"x",esriSMSDiamond:"diamond",esriSMSTriangle:"triangle",esriSMSPath:"path"});return e.default=d=class extends h{constructor(...e){super(...e),this.color=new r([255,255,255,.25]),this.type="simple-marker",this.size=12,this.style="circle",this.outline=new y}normalizeCtorArgs(e,t,r,o){if(e&&"string"!=typeof e)return e;const s={};return e&&(s.style=e),null!=t&&(s.size=l.toPt(t)),r&&(s.outline=r),o&&(s.color=o),s}writeColor(e,t){e&&"x"!==this.style&&"cross"!==this.style&&(t.color=e.toJSON()),null===e&&(t.color=null)}set path(e){this.style="path",this._set("path",e)}clone(){return new d({angle:this.angle,color:s.clone(this.color),outline:this.outline&&this.outline.clone(),path:this.path,size:this.size,style:this.style,xoffset:this.xoffset,yoffset:this.yoffset})}hash(){return`${super.hash()}.${this.color&&this.color.hash()}.${this.path}.${this.style}.${this.outline?.hash()}`}},t.__decorate([i.property()],e.default.prototype,"color",void 0),t.__decorate([u.writer("color")],e.default.prototype,"writeColor",null),t.__decorate([c.enumeration({esriSMS:"simple-marker"},{readOnly:!0})],e.default.prototype,"type",void 0),t.__decorate([i.property()],e.default.prototype,"size",void 0),t.__decorate([i.property({type:S.apiValues,json:{read:S.read,write:S.write}})],e.default.prototype,"style",void 0),t.__decorate([i.property({type:String,json:{write:!0}})],e.default.prototype,"path",null),t.__decorate([i.property({types:{key:"type",base:null,defaultKeyValue:"simple-line",typeMap:{"simple-line":y}},json:{default:null,write:!0}})],e.default.prototype,"outline",void 0),e.default=d=t.__decorate([n.subclass("esri.symbols.SimpleMarkerSymbol")],e.default),e.default});