// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientLighting.glsl","../views/3d/webgl-engine/core/shaderLibrary/shading/Gamma.glsl","../views/3d/webgl-engine/core/shaderLibrary/shading/PiUtils.glsl","../views/3d/webgl-engine/core/shaderLibrary/util/CloudsParallaxShading.glsl","../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl","../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl","../views/3d/webgl-engine/core/shaderModules/Float3BindUniform","../views/3d/webgl-engine/core/shaderModules/FloatBindUniform","../views/3d/webgl-engine/core/shaderModules/glsl","../views/3d/webgl-engine/shaders/ScreenSpacePassAtmosphere.glsl","../views/webgl/ShaderBuilder"],function(e,i,l,n,r,o,a,d,s,g,c,t){"use strict";function u(){const e=new t.ShaderBuilder,{fragment:u}=e;return e.include(c.ScreenSpacePassAtmosphere,{needUVs:!1,needEyeDirection:!1}),u.include(o.ColorConversion),u.include(a.RgbaFloatEncoding),e.include(i.EvaluateAmbientLighting,{pbrMode:0,lightingSphericalHarmonicsOrder:2}),u.include(n.PiUtils),u.include(l.Gamma),e.include(r.CloudsParallaxShading),u.uniforms.add(new d.Float3BindUniform("cameraPosition",e=>e.camera.eye),new s.FloatBindUniform("cloudsOpacity",e=>e.clouds.opacity)).main.add(g.glsl`vec4 cloudsColor = renderClouds(normalize(worldRay), cameraPosition);
fragColor = vec4(cloudsOpacity * cloudsColor.rgb, cloudsColor.a);`),e}const b=Object.freeze(Object.defineProperty({__proto__:null,build:u},Symbol.toStringTag,{value:"Module"}));e.CloudsComposition=b,e.build=u});