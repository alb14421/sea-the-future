// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./Geometry","./Envelope2D","./SideCalculator2D-BNwb5gvz","./Envelope","./Point2D","./ProjectionTransformation"],function(e,t,r,o,n,i,s){"use strict";e.OperatorProximity2D=class{getOperatorType(){return 10500}accelerateGeometry(e,t,r){return!1}canAccelerateGeometry(e){return!1}supportsCurves(){return!0}getNearestCoordinate(e,r,n,i){if(r.isNAN()&&t.throwInvalidArgumentException("NAN xy coordinates are not allowed"),e.isEmpty())return o.makeEmptyProximity2DResult();switch(e.getGeometryType()){case t.GeometryType.enumPoint:return this.pointGetNearestVertex(e,r);case t.GeometryType.enumMultiPoint:return this.multiVertexGetNearestVertex(e,r);case t.GeometryType.enumPolyline:case t.GeometryType.enumPolygon:return this.multiPathGetNearestCoordinate(e,r,n,i);default:t.throwNotImplementedException("")}}getNearestVertex(e,r){if(r.isNAN()&&t.throwInvalidArgumentException("NAN xy coordinates are not allowed"),e.isEmpty())return o.makeEmptyProximity2DResult();switch(e.getGeometryType()){case t.GeometryType.enumPoint:return this.pointGetNearestVertex(e,r);case t.GeometryType.enumMultiPoint:case t.GeometryType.enumPolyline:case t.GeometryType.enumPolygon:return this.multiVertexGetNearestVertex(e,r);default:t.throwNotImplementedException("")}}getNearestVertices(e,r,o,n){if(0===n&&t.throwInvalidArgumentException(""),r.isNAN()&&t.throwInvalidArgumentException("NAN xy coordinates are not allowed"),e.isEmpty())return[];switch(e.getGeometryType()){case t.GeometryType.enumPoint:return this.pointGetNearestVertices(e,r,o,n);case t.GeometryType.enumMultiPoint:case t.GeometryType.enumPolyline:case t.GeometryType.enumPolygon:return this.multiVertexGetNearestVertices(e,r,o,n);default:t.throwNotImplementedException("")}}multiPathGetNearestCoordinate(e,a,m,u){if(e.getGeometryType()===t.GeometryType.enumPolygon&&m){const t=new r.Envelope2D;e.queryEnvelope(t);const i=n.calculateToleranceFromGeometryForRel(null,t,!1);let m;if(m=u?s.isPoint2DInPolygon2D(e,a,0):s.isPoint2DInPolygon2D(e,a,i),0!==m){const e=o.makeProximity2DResult(a,-1,0);return u&&(e.m_bRightSide=!0),e}}const l=e.querySegmentIterator(),c=new i.Point2D;let y=-1,p=-1,P=Number.MAX_VALUE,g=0;for(;l.nextPath();)for(;l.hasNextSegment();){const e=l.nextSegment(),t=e.getClosestCoordinate(a,!1),r=e.getCoord2D(t),o=i.Point2D.sqrDistance(r,a);o<P?(g=1,c.assign(r),y=l.getStartPointIndex(),p=l.getPathIndex(),P=o):o===P&&g++}-1===y&&t.throwInvalidArgumentException("");const x=o.makeProximity2DResult(c,y,Math.sqrt(P));if(u)if(e.getGeometryType()!==t.GeometryType.enumPolygon){let t=!1;if(g>1){const r=o.calculateSide(e,a,y,p);t=0!==r&&3!==r}else{l.resetToVertex(y,p);const e=l.nextSegment();t=0!==o.calculateSide(e,a)}x.m_bRightSide=t}else m||0!==s.isPoint2DInPolygon2D(e,a,0)&&(x.m_bRightSide=!0);return x}pointGetNearestVertex(e,t){const r=e.getXY(),n=i.Point2D.distance(r,t);return o.makeProximity2DResult(r,0,n)}multiVertexGetNearestVertex(e,t){const r=e.getAttributeStreamRef(0),n=e.getPointCount();let s=-1;const a=new i.Point2D;let m=Number.MAX_VALUE;const u=new i.Point2D;for(let e=0;e<n;e++){r.queryPoint2D(2*e,u);const o=i.Point2D.sqrDistance(u,t);o<m&&(a.assign(u),s=e,m=o)}return o.makeProximity2DResult(a,s,Math.sqrt(m))}pointGetNearestVertices(e,t,r,n){const s=[];if(0!==n){const n=r*r,a=e.getXY(),m=i.Point2D.sqrDistance(a,t);m<=n&&s.push(o.makeProximity2DResult(a,0,Math.sqrt(m)))}return s}multiVertexGetNearestVertices(e,t,r,n){const s=[];if(0!==n){const a=e.getAttributeStreamRef(0),m=e.getPointCount();s.length=n+1;const u=r*r;for(let e=0;e<m;e++){const r=a.read(2*e),n=a.read(2*e+1),m=t.x-r,l=t.y-n,c=m*m+l*l;c<=u&&s.push(o.makeProximity2DResult(i.Point2D.construct(r,n),e,Math.sqrt(c)))}s.sort((e,t)=>e.m_distance-t.m_distance)}return s.slice(0,n)}}});