// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./Geometry","./Point2D"],function(t,e,n){"use strict";function r(t,e=-1){const r=new n.KahanSummator(0),c=new n.KahanSummator(0),s=t.getImpl();let i;const l=s.hasNonLinearSegments();let m;const d=s.getXY(0);if(-1===e){if(m=s.calculateArea2D(),0===m)return u(t);l&&(i=s.querySegmentIterator());for(let t=0,e=s.getPathCount();t<e;t++)a(d,s,t,r,c),l&&o(d,i,r,c)}else{if(m=s.calculateRingArea2D(e),0===m)return u(t,e);l&&(i=s.querySegmentIterator(),i.resetToPath(e)),a(d,s,e,r,c),l&&o(d,i,r,c)}const g=new n.Point2D,h=new n.Point2D;return g.setCoords(r.getResult(),c.getResult()),h.assign(g.mul(1/m).add(d)),h}function a(t,e,r,a,o){const u=e.getPathStart(r),c=e.getPathEnd(r);if(c-u<3)return;const s=e.getAttributeStreamRef(0),i=s.readPoint2D(2*u),l=s.readPoint2D(2*(u+1));l.subThis(i);const m=new n.KahanSummator(0),d=e.hasNonLinearSegments(),g=1/3,h=new n.Point2D;for(let t=u+2;t<c;t++){s.queryPoint2D(2*t,h),h.subThis(i);const e=.5*h.crossProduct(l);d&&m.add(e);const n=g*e;a.add((l.x+h.x)*n),o.add((l.y+h.y)*n),l.setCoordsPoint2D(h)}const P=d?m.getResult():e.calculateRingArea2D(r),y=i.sub(t).mul(P);a.add(y.x),o.add(y.y)}function o(t,n,r,a){let o;for(n.nextPath()||e.throwInternalErrorException("centroid");null!==(o=n.nextCurve());){const e=o.calculateWeightedAreaCentroid2D(t);r.add(e.x),a.add(e.y)}}function u(t,e=-1){return c(t.getImpl(),e)}function c(t,e=-1){const r=-1===e?t.calculateLength2D():t.calculatePathLength2D(e);if(0===r)return function(t,e=-1){if(-1!==e)return t.getXY(t.getPathStart(e));const r=new n.KahanSummator(0),a=new n.KahanSummator(0);for(let e=0;e<t.getPathCount();++e){const n=t.getXY(t.getPathStart(e));r.add(n.x),a.add(n.y)}return n.Point2D.construct(r.getResult(),a.getResult()).mul(1/t.getPathCount())}(t,e);const a=new n.KahanSummator(0),o=new n.KahanSummator(0),u=t.querySegmentIterator();for(-1!==e&&u.resetToPath(e);u.nextPath();){const n=u.getPathIndex(),r=t.getXY(t.getPathStart(n));for(;u.hasNextSegment();){const t=u.nextSegment(),e=t.calculateLength2D();if(0===e)continue;const n=t.calculateWeightedCentroid2D().sub(r.mul(e));a.add(n.x),o.add(n.y)}const c=r.mul(t.calculatePathLength2D(n));if(a.add(c.x),o.add(c.y),-1!==e)break}const c=new n.Point2D;return c.setCoords(a.getResult(),o.getResult()),c.mul(1/r)}t.calculateCentroid2D=function(t,a){if(!t.isEmpty())switch(t.getGeometryType()){case e.GeometryType.enumPolygon:return r(t);case e.GeometryType.enumPolyline:return c(t.getImpl());case e.GeometryType.enumLine:case e.GeometryType.enumBezier:case e.GeometryType.enumEllipticArc:return function(t){const e=t.calculateLength2D();return 0===e?t.getStartXY():t.calculateWeightedCentroid2D().mul(1/e)}(t);case e.GeometryType.enumMultiPoint:return function(t){const e=new n.KahanSummator(0),r=new n.KahanSummator(0),a=t.getImpl(),o=a.getAttributeStreamRef(0),u=a.getPointCount(),c=new n.Point2D;for(let t=0;t<u;t++)o.queryPoint2D(2*t,c),e.add(c.x),r.add(c.y);const s=new n.Point2D;return s.setCoords(e.getResult(),r.getResult()),s.divThis(u)}(t);case e.GeometryType.enumEnvelope:return t.getCenterXY();case e.GeometryType.enumPoint:return t.getXY();default:return n.Point2D.construct(Number.NaN,Number.NaN)}return n.Point2D.construct(Number.NaN,Number.NaN)},t.calculatePolygonCentroid2D=function(t,e){return r(t,e)}});