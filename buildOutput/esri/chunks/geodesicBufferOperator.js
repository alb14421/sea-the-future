// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../core/arrayUtils","../core/unitUtils","../geometry/operators/gx/operatorGeodesicBuffer","../geometry/operators/support/geodeticCurveType"],function(e,t,r,o,n,i){"use strict";let s,u,a,c;function p(){return!!s&&n.isLoaded()}async function d(){if(!p()){const[r]=await Promise.all([new Promise((t,r)=>e(["../geometry/operators/support/apiConverter"],t,r)),n.load()]);s=r.fromGeometry,u=r.fromSpatialReference,a=r.getSpatialReference,c=r.toPolygon,t.supportsCurves=n.supportsCurves()}}function l(e,t,r={}){let{curveType:p="geodesic",maxDeviation:d=NaN,unit:l}=r;l&&(t=o.convertUnit(t,l,"meters"),d&&(d=o.convertUnit(d,l,"meters")));const m=a(e);return c(n.execute(s(e),u(m),i.geodeticCurveType[p],t,d),m)}function m(e,t,p={}){let{curveType:d="geodesic",maxDeviation:l=NaN,union:m=!1,unit:v}=p;v&&(t=t.map(e=>o.convertUnit(e,v,"meters")),l&&(l=o.convertUnit(l,v,"meters")));const f=e.map(s),y=a(e);return n.executeMany(f,u(y),i.geodeticCurveType[d],t,l,m).map(e=>c(e,y)).filter(r.isSome)}t.supportsCurves=void 0;const v=Object.freeze(Object.defineProperty({__proto__:null,execute:l,executeMany:m,isLoaded:p,load:d,get supportsCurves(){return t.supportsCurves}},Symbol.toStringTag,{value:"Module"}));t.execute=l,t.executeMany=m,t.geodesicBufferOperator=v,t.isLoaded=p,t.load=d});