// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./tslib.es6","./Geometry","./SideCalculator2D-BNwb5gvz","./MultiPathImpl","./Point2D","./Envelope","./SimpleGeometryCursor","./ProjectionTransformation","./OperatorShapePreservingDensify"],function(e,t,o,r,n,i,s,a,c,m){"use strict";function l(e,n,a){const m={stack:[],error:void 0,hasError:!1};try{if(0===a.getCoordinateSystemType()&&o.throwInvalidArgumentException("Cannot use local SR"),1!==a.getCoordinateSystemType()){const t=new Array(2);t[0]=e.getXY(),t[1]=n.clone();const m=i.makeObjectArray(i.Point2D,2);2!==c.projectPointsToGCS(a,t,2,m)&&o.throwInvalidArgumentException("Point cannot be projected to GCS");const u=a.getGCS(),y=l(new s.Point(m[0]),m[1],u);return r.makeProximity2DResult(y.m_coordinate,0,y.m_distance)}const u=a.getUnit().getUnitToBaseFactor(),y=e.getXY();y.scale(u);const g=n.clone();g.scale(u);const p=c.makeSpheroidData();a.querySpheroidData(p);const d=t.__addDisposableResource(m,new c.PeDoubleClass,!1);c.peLineType.geodeticDistance(p.majorSemiAxis,p.e2,y.x,y.y,g.x,g.y,d,null,null,c.peDefs.PE_LINETYPE_GEODESIC);const f=e.getXY();return r.makeProximity2DResult(f,0,d.val)}catch(e){m.error=e,m.hasError=!0}finally{t.__disposeResources(m)}}function u(e,a,m,l=0){0===m.getCoordinateSystemType()&&o.throwInvalidArgumentException("Cannot use local SR");let u=e.getAttributeStreamRef(0),y=e.getPointCount();const g=m.getGCS(),p=a.clone();if(1!==m.getCoordinateSystemType()){const t=m.getSRToGCSTransform();if(c.transformInPlace(t,[a],1,[p],null),p.isNAN())return r.makeProximity2DResult(i.Point2D.getNAN(),-1,Number.NaN);const o=(new c.OperatorProject).execute(e,t,null);u=o.getAttributeStreamRef(0),y=o.getPointCount()}const d=g.getUnit().getUnitToBaseFactor(),f=i.makePrimitiveArray(y,0);for(let e=0;e<y;++e)f[e]=e;n.shuffle(y,f);const P=c.makeSpheroidData();g.querySpheroidData(P);const x=p.clone();x.scale(d);const S=c.curvToCart(P.majorSemiAxis,P.e2,x);let h=-1,D=Number.MAX_VALUE;const A=c.calculateLargeRadius(P.majorSemiAxis,P.e2);let N=y;const C=new i.Point2D,T=new i.Point2D;for(let e=0;e<N;){if(u.queryPoint2D(2*f[e],C),C.isNAN())continue;T.assign(C),T.scale(d);const t=c.curvToCart(P.majorSemiAxis,P.e2,T);if(s.Point3D.distance(t,S)>D){f[N-1]=i.swap(f[e],f[e]=f[N-1]),N--;continue}const o=c.sphericalDistance(A,t,S);o<D&&(h=f[e],D=o),e++}if(0!==P.e2){const e={stack:[],error:void 0,hasError:!1};try{const o=t.__addDisposableResource(e,new c.PeDoubleClass,!1);for(let e=0;e<N;e++){if(u.queryPoint2D(2*f[e],C),C.isNAN())continue;T.assign(C),T.scale(d);const t=c.curvToCart(P.majorSemiAxis,P.e2,T);s.Point3D.distance(t,S)>D||(c.peLineType.geodeticDistance(P.majorSemiAxis,P.e2,x.x,x.y,T.x,T.y,o,null,null,l),o.val<D&&(h=f[e],D=o.val))}}catch(t){e.error=t,e.hasError=!0}finally{t.__disposeResources(e)}}const E=new i.Point2D;return-1!==h&&E.assign(e.getXY(h)),r.makeProximity2DResult(E,h,D)}function y(e,a,m,l,u=0){0===l.getCoordinateSystemType()&&o.throwInvalidArgumentException("Cannot use local SR");const g=l.getGCS(),p=m.clone();if(1!==l.getCoordinateSystemType()){const t=l.getSRToGCSTransform();if(c.transformInPlace(t,[m],1,[p],null),p.isNAN())return r.makeEmptyProximity2DResult();const o=i.makeObjectArray(i.Point2D,a);c.transformInPlace(t,e,a,o,null);const n=y(o,a,m,g,u);return n.isEmpty()?n:r.makeProximity2DResult(e[n.m_vertexIndex],n.m_vertexIndex,n.m_distance)}const d=g.getUnit().getUnitToBaseFactor(),f=i.makePrimitiveArray(a,0);for(let e=0;e<a;++e)f[e]=e;n.shuffle(a,f);const P=c.makeSpheroidData();g.querySpheroidData(P);const x=p.clone();x.scale(d);const S=c.curvToCart(P.majorSemiAxis,P.e2,x);let h=-1,D=Number.MAX_VALUE;const A=c.calculateLargeRadius(P.majorSemiAxis,P.e2);let N=a;for(let t=0;t<N;){const o=e[f[t]];if(o.isNAN())continue;const r=o.clone();r.scale(d);const n=c.curvToCart(P.majorSemiAxis,P.e2,r);if(s.Point3D.distance(n,S)>D){f[N-1]=i.swap(f[t],f[t]=f[N-1]),N--;continue}const a=c.sphericalDistance(A,n,S);a<D&&(h=f[t],D=a),t++}if(0!==P.e2){const o={stack:[],error:void 0,hasError:!1};try{const r=t.__addDisposableResource(o,new c.PeDoubleClass,!1);for(let t=0;t<N;t++){const o=e[f[t]];if(o.isNAN())continue;const n=o.clone();n.scale(d);const i=c.curvToCart(P.majorSemiAxis,P.e2,n);s.Point3D.distance(i,S)>D||(c.peLineType.geodeticDistance(P.majorSemiAxis,P.e2,x.x,x.y,n.x,n.y,r,null,null,u),r.val<D&&(h=f[t],D=r.val))}}catch(e){o.error=e,o.hasError=!0}finally{t.__disposeResources(o)}}const C=new i.Point2D;return-1!==h&&C.assign(e[h]),r.makeProximity2DResult(C,h,D)}class g extends a.GeometryCursor{constructor(e){super(),this.m_first=!0,this.m_segIter=e,this.m_segIter.stripAttributes()}tock(){return!0}getRank(){return 1}next(){if(this.m_first){if(!this.m_segIter.nextPath())return null;this.m_first=!1}for(;;){if(this.m_segIter.hasNextSegment())return this.m_segIter.nextSegment().clone();if(!this.m_segIter.nextPath())break}return null}getGeometryID(){return this.m_segIter.getStartPointIndex()}}e.OperatorProximityGeodesic=class{getOperatorType(){return 10501}supportsCurves(){return!0}accelerateGeometry(e,t,o){return!1}canAccelerateGeometry(e){return!1}getNearestCoordinate(e,t,a,l,p,d){if(t.isNAN()&&o.throwInvalidArgumentException("NAN xy coordinates are not allowed"),e.isEmpty())return r.makeEmptyProximity2DResult();if(Number.isNaN(l)&&(l=0),l>=0||o.throwInvalidArgumentException("maxDeviationMeters"),0===e.getDimension())return this.getNearestVertex(e,t,a);const f=e.getGeometryType();if(f===o.GeometryType.enumGeometryCollection){const o=e;let n=r.makeEmptyProximity2DResult();for(let e=0,r=o.getGeometryCount();e<r;++e){const r=o.getGeometry(e),i=this.getNearestCoordinate(r,t,a,l,p,d);if(!i.isEmpty()){if(0===i.m_distance)return i;i.m_distance>=n.m_distance||(n=i,n.m_geometryIndex=e)}}return n}if(f===o.GeometryType.enumEnvelope){const o=new n.Polygon;return o.addEnvelope(e,!1),this.getNearestCoordinate(o,t,a,l,p,d)}o.isMultiPath(f)||o.throwNotImplementedException("Operation is not implemented for this geometry type");const P=e;if((p||d)&&f===o.GeometryType.enumPolygon){const o=()=>{const e=r.makeProximity2DResult(t,-1,0);return e.m_bRightSide=!0,e};if(a.isPannable()){const n=(new c.OperatorProject).foldInto360Range(new s.Point(t),a);if(n.isEmpty())return r.makeEmptyProximity2DResult();const i=(new c.OperatorProject).foldInto360Range(e,a);if(i.isEmpty())return r.makeEmptyProximity2DResult();if((new c.OperatorContains).execute(i,n,a,null)&&p)return o()}else{const e=(new c.OperatorProject).clipToSpatialReference(new s.Point(t),a,null,1);if(e.isEmpty())return r.makeEmptyProximity2DResult();const n=c.processWithPCSHorizon(P,a,0,null);if(n.isEmpty())return r.makeEmptyProximity2DResult();if((new c.OperatorContains).execute(n,e,a,null)&&p)return o()}}const x=a!==a.getGCS()?a.getSRToGCSTransform():null,S=new i.Point2D;if(x?(new c.OperatorProject).transform(x,[t],1,[S],!1):S.assign(t),S.isNAN())return r.makeEmptyProximity2DResult();const h=u(P,t,a,1);let D=h.m_distance;if(0===D)return h;Number.isNaN(D)?D=Number.POSITIVE_INFINITY:D*=1+1e-7;const A=a.getGCS(),N=A.getUnit().getUnitToBaseFactor(),C=S.clone();C.scale(N);const T=c.makeSpheroidData();a.querySpheroidData(T);const E=c.curvToCart(T.majorSemiAxis,T.e2,C),w=c.calculateSmallRadius(T.majorSemiAxis,T.e2),_=new g(P.querySegmentIterator());0===l&&(l=.01);const R=T.majorSemiAxis*n.convertToRadians(45),v=(new m.OperatorShapePreservingDensify).executeMany(_,a,R,l,0,null),I=[];let G=-1;const j=new s.Point3D,k=new n.SegmentBuffer;for(let t=v.next();null!==t;t=v.next()){if(t.isEmpty())continue;const o=v.getGeometryID(),r=e.getPathIndexFromPointIndex(o);e.isClosedPath(r)&&P.getPathEnd(r);const n=t;for(let e=0,t=n.getPathCount();e<t;++e){I.length=0;for(let t=n.getPathStart(e),o=n.getPathEnd(e);t<o;++t)I.push(n.getXY(t));if(x&&(new c.OperatorProject).transform(x,I,I.length,I,!1),I.length>3){const e=y(I,I.length,S,A,1);if(e.m_distance<D){D=e.m_distance,j.assign(c.curvToCart(T.majorSemiAxis,T.e2,e.m_coordinate.mul(N))),G=o;let t=e.m_vertexIndex;t+1===I.length&&(t-=1),n.getSegmentBuffer(t,k,!0)}}I.forEach(e=>e.mulThis(N));const t=c.curvToCart(T.majorSemiAxis,T.e2,I[0]),r=new s.Point3D;for(let e=1,i=I.length;e<i;++e){const i=c.curvToCart(T.majorSemiAxis,T.e2,I[e]);if(c.sphericalDistancePointToSegment(w,E,t,i,r)<D){const{second:r}=c.closestCoordinate(T.majorSemiAxis,T.e2,E,t,i,2,null);if(r<=D){const r=new s.Point3D,{second:a}=c.closestCoordinate(T.majorSemiAxis,T.e2,E,t,i,0,r);a<D&&(D=a,j.assign(r),G=o,n.getSegmentBuffer(e-1,k,!0))}}t.assign(i)}}}if(!Number.isFinite(D))return r.makeEmptyProximity2DResult();-1===G&&o.throwInvalidArgumentException("");const b=c.cartToCurv(T.majorSemiAxis,T.e2,j);b.divThis(N);const O=b.clone(),U=a!==a.getGCS()?a.getGCSToSRTransform():null;U&&(new c.OperatorProject).transform(U,[b],1,[O],!1),O.isNAN()&&o.throwInternalErrorException("closestPoint2DSr.isNAN()"),o.geometryReleaseAssert(!k.empty());const q=k.get().getClosestCoordinate(O,!1);O.assign(k.get().getCoord2D(q)),x?(new c.OperatorProject).transform(x,[O],1,[b],!1):b.assign(O),o.geometryReleaseAssert(!b.isNAN());const L=this.getNearestVertex(new s.Point(b),S,a.getGCS()),B=r.makeProximity2DResult(O,G,L.m_distance);if(d&&e.getDimension()>0){const o=r.calculateSide(e,t,-1,-1),n=0!==o&&3!==o;B.m_bRightSide=n}return B}getNearestVertex(e,t,n){if(t.isNAN()&&o.throwInvalidArgumentException("NAN xy coordinates are not allowed"),e.isEmpty())return r.makeEmptyProximity2DResult();switch(e.getGeometryType()){case o.GeometryType.enumPoint:return l(e,t,n);case o.GeometryType.enumMultiPoint:case o.GeometryType.enumPolyline:case o.GeometryType.enumPolygon:return u(e,t,n);default:o.throwNotImplementedException("")}}getNearestVertexPoint2D(e,t,o,r){return y(e,t,o,r)}getNearestVertices(e,a,m,u,y){if(a.isNAN()&&o.throwInvalidArgumentException("NAN xy coordinates are not allowed"),e.isEmpty())return[];switch(e.getGeometryType()){case o.GeometryType.enumPoint:{const t=l(e,a,m);if(!t.isEmpty()&&t.m_distance<u&&y>=1){const e=[];return e.push(t),e}return[]}case o.GeometryType.enumMultiPoint:case o.GeometryType.enumPolyline:case o.GeometryType.enumPolygon:return function(e,a,m,l,u){const y={stack:[],error:void 0,hasError:!1};try{0===m.getCoordinateSystemType()&&o.throwInvalidArgumentException("Cannot use local SR");let g=e.getAttributeStreamRef(0),p=e.getPointCount();const d=m.getGCS(),f=a.clone();if(1!==m.getCoordinateSystemType()){const t=m.getSRToGCSTransform();if(c.transformInPlace(t,[a],1,[f],null),f.isNAN())return[];const o=(new c.OperatorProject).execute(e,t,null);g=o.getAttributeStreamRef(0),p=o.getPointCount()}const P=d.getUnit().getUnitToBaseFactor(),x=i.makePrimitiveArray(p,0);for(let e=0;e<p;++e)x[e]=e;n.shuffle(p,x);const S=c.makeSpheroidData();d.querySpheroidData(S);const h=f.clone();h.scale(P);const D=c.curvToCart(S.majorSemiAxis,S.e2,h),A=[];let N=p;const C=new i.Point2D,T=new i.Point2D;for(let e=0;e<N;){if(g.queryPoint2D(2*x[e],C),C.isNAN())continue;T.assign(C),T.scale(P);const t=c.curvToCart(S.majorSemiAxis,S.e2,T);s.Point3D.distance(t,D)>l?(x[N-1]=i.swap(x[e],x[e]=x[N-1]),N--):e++}const E=(e,t)=>e.m_distance-t.m_distance,w=t.__addDisposableResource(y,new c.PeDoubleClass,!1);for(let e=0;e<N;e++)g.queryPoint2D(2*x[e],C),C.isNAN()||(c.peLineType.geodeticDistance(S.majorSemiAxis,S.e2,h.x,h.y,C.x*P,C.y*P,w,null,null,c.peDefs.PE_LINETYPE_GEODESIC),w.val<l&&A.push(r.makeProximity2DResult(C,x[e],w.val)));return A.sort(E),A.slice(0,u)}catch(e){y.error=e,y.hasError=!0}finally{t.__disposeResources(y)}}(e,a,m,u,y);default:o.throwNotImplementedException("")}}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});