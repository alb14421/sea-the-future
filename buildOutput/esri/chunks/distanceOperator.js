// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./Geometry","./Distance2DCalculator-CXhBP-8I","../core/unitUtils","../geometry/operators/support/apiConverter"],function(e,t,r,u,o){"use strict";const n=new class{getOperatorType(){return 10100}supportsCurves(){return!0}accelerateGeometry(e,t,r){return!1}canAccelerateGeometry(e){return!1}execute(e,t,r){return this.executeEx(e,t,r,null,null,Number.NaN)}executeEx(e,u,o,n,s,c){if(e.isEmpty()||u.isEmpty())return Number.NaN;t.throwIfMesh(e),t.throwIfMesh(u);const a=e,i=u;Number.isNaN(c)&&(c=Number.POSITIVE_INFINITY);const l=new r.DistanceCalculator(c,o).calculate(a,i,n,s);return Number.isFinite(l)?l:Number.NaN}};function s(e,t,r={}){const{unit:s}=r;let c=n.execute(o.fromGeometry(e),o.fromGeometry(t),null);if(c&&s){const t=o.getSpatialReference(e);c=u.convertFromSpatialReferenceUnit(c,t,s)}return c}const c=n.supportsCurves(),a=Object.freeze(Object.defineProperty({__proto__:null,execute:s,supportsCurves:c},Symbol.toStringTag,{value:"Module"}));e.distanceOperator=a,e.execute=s,e.supportsCurves=c});