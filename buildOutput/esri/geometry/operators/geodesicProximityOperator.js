// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../core/unitUtils","./gx/operatorProximityGeodesic"],function(e,t,r,n){"use strict";let i,o,s,a,c;function u(){return!!i&&n.isLoaded()}t.supportsCurves=void 0,t.getNearestCoordinate=function(e,t,u={}){let{calculateLeftRightSide:m=!1,maxDeviation:d=NaN,testPolygonInterior:p=!0,unit:l}=u;l&&d&&(d=r.convertUnit(d,l,"meters"));const f=a(e),g=n.getNearestCoordinate(i(e),o(t).getXY(),s(f),d,p,m);return l&&g.m_distance&&(g.m_distance=r.convertUnit(g.m_distance,"meters",l)),c(g,e,m)},t.getNearestVertex=function(e,t,u={}){const{unit:m}=u,d=a(e),p=n.getNearestVertex(i(e),o(t).getXY(),s(d));return m&&p.m_distance&&(p.m_distance=r.convertUnit(p.m_distance,"meters",m)),c(p,e)},t.getNearestVertices=function(e,t,u,m,d={}){const{unit:p}=d;p&&u&&(u=r.convertUnit(u,p,"meters"));const l=a(e);return n.getNearestVertices(i(e),o(t).getXY(),s(l),u,m).map(t=>(p&&t.m_distance&&(t.m_distance=r.convertUnit(t.m_distance,"meters",p)),c(t,e)))},t.isLoaded=u,t.load=async function(){if(!u()){const[r,u]=await Promise.all([new Promise((t,r)=>e(["./support/apiConverter"],t,r)),new Promise((t,r)=>e(["./support/proximityResult"],t,r)),n.load()]);i=r.fromGeometry,o=r.fromPoint,s=r.fromSpatialReference,a=r.getSpatialReference,c=u.toProximityResult,t.supportsCurves=n.supportsCurves()}},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});