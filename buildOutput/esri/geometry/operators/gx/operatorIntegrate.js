// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/SimpleGeometryCursor","../../../chunks/Geometry","../../../chunks/MultiPathImpl","../../../chunks/Envelope2D","../../../chunks/Envelope","../../../chunks/ProjectionTransformation"],function(e,t,s,r,i,o,n){"use strict";class m extends t.GeometryCursor{constructor(e,t,i,o){super(),this.m_shape=new r.EditShape,this.m_currentGeom=r.nullHandle,this.m_progressCounter=0,this.m_geomIndex=-1,this.m_geomTypeIndex=-1,this.m_index=-1,this.m_bBuilt=!1,this.m_bOutputOnlyModified=!1,this.m_bSimplifyPolygons=!1,this.m_bSnapToSr=!1,this.m_progressTracker=i,this.m_inputGeometries=e,this.m_sr=t,this.m_options=o,1===o||2===o?(this.m_bOutputOnlyModified=!0,this.m_options=0,this.m_bSimplifyPolygons=!0,this.m_bSnapToSr=null!=t&&2===o,this.m_bSnapToSr&&!n.hasPe()&&s.throwProjectionEngineNotLoadedException("PE is required for snapping to spatial reference operation")):0===o&&(this.m_bSimplifyPolygons=!0)}progress_(e=!1){}tock(){return!0}getRank(){return 1}moveToNextGeom(){for(;;){if(this.m_bBuilt?this.m_currentGeom=this.m_shape.getNextGeometry(this.m_currentGeom):(this.m_currentGeom=this.m_shape.getFirstGeometry(),this.m_bBuilt=!0),this.m_currentGeom!==r.nullHandle){let e=!1;if(this.m_bSimplifyPolygons&&this.m_shape.getGeometryType(this.m_currentGeom)===s.GeometryType.enumPolygon&&(e=n.execute$1(this.m_shape,this.m_currentGeom,-1,!1,r.nullHandle,this.m_progressTracker)),this.m_bOutputOnlyModified&&!e&&!this.m_shape.getGeometryModified(this.m_currentGeom))continue}break}}next(){if(this.m_bBuilt)this.moveToNextGeom();else{this.m_geomIndex=this.m_shape.createGeometryUserIndex();const e=new i.Envelope2D;for(let t=this.m_inputGeometries.next();null!=t;t=this.m_inputGeometries.next()){this.progress_(),s.throwIfMesh(t);let r=!1;this.m_bSnapToSr&&(t=t.clone(),r=n.snapGeometry(this.m_sr,t));const o=this.m_shape.addGeometry(t);this.m_shape.setGeometryUserIndex(o,this.m_geomIndex,this.m_inputGeometries.getGeometryID());const m=t.getGeometryType();m===s.GeometryType.enumPoint&&(-1===this.m_geomTypeIndex&&(this.m_geomTypeIndex=this.m_shape.createGeometryUserIndex()),this.m_shape.setGeometryUserIndex(o,this.m_geomTypeIndex,m));const h=new i.Envelope2D;t.queryLooseEnvelope(h),e.mergeEnvelope2D(h),r&&this.m_shape.setGeometryModified(o,!0)}const t=o.calculateToleranceFromGeometryForOp(this.m_sr,e,!0),m=o.calculateToleranceFromGeometryForOp(this.m_sr,e,!1);e.inflate(10*t.total()),this.m_shape.forceSetEnvelope2D(e);let h=null,l=0,p=0;if(this.m_shape.hasCurves()){h=new n.CurveStitcher;const s=n.densificationDeviationFromTolerance(t.total(),e);l=n.stitchingDensificationDeviationFromTolerance(t.total()),p=n.extraToleranceForCrackingAndClustering(s,l),n.buildSegmentParentage(this.m_shape,s,t.total(),12e3,h,null,this.m_progressTracker)}if(n.needsCrackingAndClustering(this.m_shape,m,this.m_progressTracker)){if(n.execute(this.m_shape,t.add(p),this.m_progressTracker,0===this.m_options,this.m_bOutputOnlyModified),null!==h){if(this.m_bSimplifyPolygons){for(let e=this.m_shape.getFirstGeometry();e!==r.nullHandle;e=this.m_shape.getNextGeometry(e))this.m_shape.getGeometryType(e)===s.GeometryType.enumPolygon&&n.execute$1(this.m_shape,e,-1,!1,r.nullHandle,this.m_progressTracker)&&this.m_shape.setGeometryModified(e,!0);this.m_bSimplifyPolygons=!1}h.stitchCurves(this.m_shape,r.nullHandle,l,!0),h.clearStitcher(this.m_shape)}}else this.m_bSimplifyPolygons=!1,null!==h&&(h.stitchCurves(this.m_shape,r.nullHandle,l,!0),h.clearStitcher(this.m_shape));this.moveToNextGeom()}if(this.m_currentGeom!==r.nullHandle){if(this.m_index=this.m_shape.getGeometryUserIndex(this.m_currentGeom,this.m_geomIndex),-1!==this.m_geomTypeIndex&&this.m_shape.getGeometryUserIndex(this.m_currentGeom,this.m_geomTypeIndex)===s.GeometryType.enumPoint){const e=new o.Point({vd:this.m_shape.getVertexDescription()});return this.m_shape.queryPointGeometryOnly(this.m_currentGeom,e),this.m_bSnapToSr&&n.snapGeometry(this.m_sr,e),e}{const e=this.m_shape.getGeometry(this.m_currentGeom);return this.m_bSnapToSr&&n.snapGeometry(this.m_sr,e),e}}return null}getGeometryID(){return this.m_index}}const h=new class{getOperatorType(){return 10009}supportsCurves(){return!0}accelerateGeometry(e,t,s){return!1}canAccelerateGeometry(e){return!1}executeMany(e,t,s,r=0){return new m(e,t,s,r)}};e.executeMany=function(e,s,r){const i=h.executeMany(new t.SimpleGeometryCursor(e),s,null,r);return Array.from(i)},e.supportsCurves=function(){return h.supportsCurves()},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});