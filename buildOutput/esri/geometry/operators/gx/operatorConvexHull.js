// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/SimpleGeometryCursor","../../../chunks/Geometry","../../../chunks/Envelope","../../../chunks/MultiPathImpl","../../../chunks/Envelope2D"],function(e,t,n,r,o,i){"use strict";class u extends t.GeometryCursor{constructor(e,t,r){super(),t||n.throwInvalidArgumentException(""),this.m_progressTracker=r,this.m_index=-1,this.m_bMerge=e,this.m_bDone=!1,this.m_inputGeometryCursor=t}getGeometryID(){return this.m_index}tock(){return!0}getRank(){return 1}next(){if(this.m_bMerge){if(!this.m_bDone){const e=s(this.m_inputGeometryCursor);return this.m_bDone=!0,e}return null}if(!this.m_bDone){const e=this.m_inputGeometryCursor.next();if(null!==e)return n.throwIfCurves(e),n.throwIfMesh(e),this.m_index=this.m_inputGeometryCursor.getGeometryID(),m(e);this.m_bDone=!0}return null}}function s(e,t){const r=new o.ConvexHull;let i;for(;i=e.next();)n.throwIfCurves(i),n.throwIfMesh(i),r.addGeometry(i);return r.getBoundingGeometry()}function m(e,t){if(n.throwIfMesh(e),e.isEmpty())return e.createInstance();const u=e.getGeometryType();if(n.isSegment(u)){const t=e;if(t.isDegenerate(0)){const e=new r.Point;return t.queryStart(e),e}if(t.getGeometryType()===n.GeometryType.enumLine){const n=new r.Point,i=new o.Polyline({vd:e.getDescription()});return t.queryStart(n),i.startPathPoint(n),t.queryEnd(n),i.lineToPoint(n),i}{const n=new o.Polyline({vd:e.getDescription()});return n.addSegment(t,!0),m(n)}}if(u===n.GeometryType.enumEnvelope){const t=e,n=new i.Envelope2D;if(t.queryEnvelope(n),n.xmin===n.xmax&&n.ymin===n.ymax){const e=new r.Point;return t.queryCornerByVal(0,e),e}if(n.xmin===n.xmax||n.ymin===n.ymax){const n=new r.Point,i=new o.Polyline({vd:e.getDescription()});return t.queryCornerByVal(0,n),i.startPathPoint(n),t.queryCornerByVal(1,n),i.lineToPoint(n),i}{const n=new o.Polygon({vd:e.getDescription()});return n.addEnvelope(t,!1),n}}if(u===n.GeometryType.enumGeometryCollection)return s(o.generateGeometryCursor(e,-1));if(y(e)){if(u===n.GeometryType.enumMultiPoint){const t=e,n=new r.Point;return t.getPointByVal(0,n),n}return e}return n.geometryReleaseAssert(n.isMultiVertex(u)),o.construct(e)}function y(e,t){if(n.throwIfMesh(e),e.isEmpty())return!0;const r=e.getGeometryType();if(r===n.GeometryType.enumPoint)return!0;if(r===n.GeometryType.enumEnvelope){const t=e;return t.getXMin()!==t.getXMax()&&t.getYMin()!==t.getYMax()}if(n.isSegment(r)){const t=e;if(t.isDegenerate(0))return!1;if(r===n.GeometryType.enumLine)return!0;const i=new o.Polyline;return i.addSegment(t,!0),y(i)}if(r===n.GeometryType.enumMultiPoint)return 1===e.getPointCount();if(r===n.GeometryType.enumPolyline){const t=e;return!t.hasNonLinearSegments()&&1===t.getPathCount()&&2===t.getPointCount()&&!t.getXY(0).equals(t.getXY(1))}if(r===n.GeometryType.enumGeometryCollection){const t=e;return 1===t.getGeometryCount()&&y(t.getGeometry(0))}const i=e;return!(1!==i.getPathCount()||i.getPointCount()<3)&&o.isPathConvex(i,0)}const c=new class{getOperatorType(){return 10102}supportsCurves(){return!0}accelerateGeometry(e,t,n){return!1}canAccelerateGeometry(e){return!1}executeMany(e,t,n){return new u(t,e,n)}execute(e,t){return m(e)}isConvex(e,t){if(n.throwIfMesh(e),e.isEmpty())return!0;const r=e.getGeometryType();if(r===n.GeometryType.enumPoint)return!0;if(r===n.GeometryType.enumEnvelope){const t=e;return t.getXMin()!==t.getXMax()&&t.getYMin()!==t.getYMax()}if(n.isSegment(r)){const t=e;return!t.getStartXY().equals(t.getEndXY())}if(r===n.GeometryType.enumMultiPoint)return 1===e.getPointCount();if(r===n.GeometryType.enumPolyline){const t=e;return 1===t.getPathCount()&&2===t.getPointCount()&&!t.getXY(0).equals(t.getXY(1))}if(r===n.GeometryType.enumGeometryCollection){const n=e;return 1===n.getGeometryCount()&&this.isConvex(n.getGeometry(0),t)}const i=e;return!(1!==i.getPathCount()||i.getPointCount()<3)&&o.isPathConvex(i,0)}constructOrientedMinimumBoundingBox(e,t,n,r,i){o.constructOrientedMinimumBoundingBox(e,t,n,r,i)}};e.constructOrientedMinimumBoundingBox=function(e,t,n,r,o){return c.constructOrientedMinimumBoundingBox(e,t,n,r,o)},e.execute=function(e){return c.execute(e,null)},e.executeMany=function(e,n){const r=c.executeMany(new t.SimpleGeometryCursor(e),n,null);return Array.from(r)},e.isConvex=function(e){return c.isConvex(e,null)},e.supportsCurves=function(){return c.supportsCurves()},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});