// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/SimpleGeometryCursor","../../../chunks/Geometry","../../../chunks/MultiPathImpl","../../../chunks/ProjectionTransformation","../../../chunks/Envelope","../../../chunks/Point2D"],function(e,t,n,r,s,o,i){"use strict";function u(e,t){if(n.isMultiVertex(e.getGeometryType())){const n=t;return e.getImpl().setIsSimple(n.flags,n.tolerance),!0}return!1}class l extends t.GeometryCursor{constructor(e,t,n){super(),this.m_results=[],this.m_index=0,this.m_progressTracker=t,this.m_inputGeoms=e,this.m_descr=n}tock(){return!0}getRank(){return 1}next(){if(this.m_inputGeoms&&(this.combineGeometries(this.m_descr),this.m_descr=null,this.m_inputGeoms=null),this.m_index<this.m_results.length){const e=this.m_results[this.m_index];return this.m_index++,e}return null}getGeometryID(){return this.m_index-1}combineGeometries(e){let t=n.GeometryType.enumUnknown,s=null,o=null,i=null;for(let e=this.m_inputGeoms.next();null!==e;e=this.m_inputGeoms.next()){if(t=e.getGeometryType(),t===n.GeometryType.enumPolygon||t===n.GeometryType.enumEnvelope){if(i||(i=new r.Polygon({vd:e.getDescription()})),t===n.GeometryType.enumPolygon){i.add(e,!1);continue}if(t===n.GeometryType.enumEnvelope){i.addEnvelope(e,!1);continue}}else if(n.isSegment(t)||t===n.GeometryType.enumPolyline){if(o||(o=new r.Polyline({vd:e.getDescription()})),t===n.GeometryType.enumPolyline){o.add(e,!1);continue}if(n.isSegment(t)){o.addSegment(e,!0);continue}}else if(n.isPoint(t)){if(s||(s=new r.MultiPoint({vd:e.getDescription()})),t===n.GeometryType.enumPoint){s.add(e);continue}if(t===n.GeometryType.enumMultiPoint){s.addPoints(e,0,-1);continue}}n.throwInternalErrorException("unsupported type")}null!==e&&(null!==s&&u(s,e),null!==o&&u(o,e),null!==i&&u(i,e)),s&&this.m_results.push(s),o&&this.m_results.push(o),i&&this.m_results.push(i)}}const m=new class{getOperatorType(){return 10701}accelerateGeometry(e,t,n){return!1}canAccelerateGeometry(e){return!1}supportsCurves(){return!0}executeMany(e,t,n){return new l(e,t,n)}};e.executeMany=function(e){const n=m.executeMany(new t.SimpleGeometryCursor(e),null,null);return Array.from(n)},e.supportsCurves=function(){return m.supportsCurves()},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});