// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../chunks/SimpleGeometryCursor","../../../chunks/pe"],function(e,n,r,t){"use strict";let o;function u(){return!!o&&t.isLoaded()}n.clipToSpatialReference=function(e,n,r){return o.clipToSpatialReference(e,n,null,r)},n.execute=function(e,n){return o.execute(e,n,null)},n.executeMany=function(e,n){const t=o.executeMany(new r.SimpleGeometryCursor(e),n,null);return Array.from(t)},n.foldInto360Range=function(e,n){return o.foldInto360Range(e,n)},n.foldInto360RangeGeodetic=function(e,n,r){return o.foldInto360RangeGeodetic(e,n,r)},n.isLoaded=u,n.load=async function(){if(!u()){const[n,r]=await Promise.all([new Promise((n,r)=>e(["../../../chunks/ProjectionTransformation"],n,r)).then(e=>e.OperatorProject$1),new Promise((n,r)=>e(["../../../chunks/ProjectionTransformation"],n,r)).then(e=>e.SpatialReference).then(({injectPe:e})=>e),t.load()]);o=new n.OperatorProject,r(t.pe)}},n.normalizeGeometry=function(e,n,r){return o.normalizeGeometry(e,n,r)},n.supportsCurves=function(){return o.supportsCurves()},n.transform=function(e,n,r,t,u){return o.transform(e,n,r,t,u)},Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});