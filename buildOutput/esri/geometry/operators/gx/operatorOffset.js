// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/SimpleGeometryCursor","../../../chunks/Envelope","../../../chunks/Geometry","../../../chunks/MultiPathImpl","../../../chunks/Point2D"],function(t,s,e,i,n,o){"use strict";const h=1.4142135623730951,r=.017453292519943295,m=256,a=1024;class f{static construct(t,s,e){const i=new f;return i.x=t.x,i.y=t.y,i.m_next=-1,i.m_prev=-1,i.z=s,i.m=e,i.type=0,i}clone(){const t=new f;return t.x=this.x,t.y=this.y,t.m_next=this.m_next,t.m_prev=this.m_prev,t.z=this.z,t.m=this.m,t.type=this.type,t}asPoint2D(){return new o.Point2D(this.x,this.y)}}class c{constructor(t){this.m_distance=-1,this.m_tolerance=-1,this.m_miterLimit=10,this.m_joins=0,this.m_progressCounter=0,this.m_bUseZ=!1,this.m_bUseM=!1,this.m_srcPts=[],this.m_srcPtCount=0,this.m_offsetPts=[],this.m_offsetPtCount=0,this.m_a1=0,this.m_a2=0,this.m_progressTracker=t}constructOffset(){const t=this.m_inputGeometry.getGeometryType();if(t===i.GeometryType.enumLine)return this.offsetLine();if(t===i.GeometryType.enumEnvelope)return this.offsetEnvelope();if(i.isSegment(t)){const t=new n.Polyline;return t.addSegment(this.m_inputGeometry,!0),this.m_inputGeometry=t,this.constructOffset()}if(t===i.GeometryType.enumPolyline){const t=new n.Polyline;return this.offsetMultiPath(t),t}if(t===i.GeometryType.enumPolygon){const t=new n.Polygon;return this.offsetMultiPath(t),t}i.throwNotImplementedException("")}offsetLine(){const t=this.m_inputGeometry,s=t.getStartXY(),e=t.getEndXY(),i=new o.Point2D;i.setSub(e,s),i.normalize(),i.leftPerpendicularThis(),i.scale(this.m_distance),s.addThis(i),e.addThis(i);const n=t.clone();return n.setStartXY(s),n.setEndXY(e),n}offsetEnvelope(){const t=this.m_inputGeometry;if(this.m_distance>0&&2!==this.m_joins){const s=new n.Polygon;return s.addEnvelope(t,!1),this.m_inputGeometry=s,this.constructOffset()}const s=t.clone();return s.inflateCoords(this.m_distance,this.m_distance),s}progress(){}static buildPoint(t,s,e,i){i.x=t.x+s*Math.cos(e),i.y=t.y+s*Math.sin(e),i.type=t.type,i.z=t.z,i.m=t.m,i.m_next=-1,i.m_prev=-1}addPoint(t){this.m_offsetPts.push(t.clone()),this.m_offsetPtCount++}addPointEx(t,s){if(0===this.m_offsetPtCount)return void this.addPoint(t);const e=this.m_srcPtCount,i=this.m_srcPts[0===s?e-1:s-1],n=this.m_srcPts[s],h=c.dotSign(i,n,this.m_offsetPts[this.m_offsetPtCount-1],t);if(h>0)this.addPoint(t);else if(h<0)if(c.dotSign(i,n,n,this.m_offsetPts[this.m_offsetPtCount-1])>0){const n=new f;let h;h=0===s?e-2:1===s?e-1:s-2;const r=this.m_srcPts[h],a=Math.atan2(i.y-r.y,i.x-r.x);if(c.buildPoint(i,this.m_distance,a-o.geometryHalfPi,n),this.m_offsetPts[this.m_offsetPtCount-1]=n,1===this.m_joins||2===this.m_joins){n.x=.5*(n.x+i.x),n.y=.5*(n.y+i.y),this.addPoint(n),c.buildPoint(i,this.m_distance,this.m_a1+o.geometryHalfPi,n);const t=n.clone();t.x=.5*(t.x+i.x),t.y=.5*(t.y+i.y),t.type|=m,this.addPoint(t),this.addPoint(n)}else c.buildPoint(i,this.m_distance,this.m_a1+o.geometryHalfPi,n),n.type|=m,this.addPoint(n);this.addPointEx(t,s)}else{const t=new f;if(c.buildPoint(n,this.m_distance,this.m_a1+o.geometryHalfPi,t),this.addPoint(t),1===this.m_joins||2===this.m_joins){t.x=.5*(t.x+n.x),t.y=.5*(t.y+n.y),this.addPoint(t),c.buildPoint(n,this.m_distance,this.m_a2-o.geometryHalfPi,t);const s=t.clone();s.x=.5*(s.x+n.x),s.y=.5*(s.y+n.y),s.type|=m,this.addPoint(s),this.addPoint(t)}else c.buildPoint(n,this.m_distance,this.m_a2-o.geometryHalfPi,t),t.type|=m,this.addPoint(t)}}buildOffset(){const t=new f,s=this.m_srcPtCount;this.m_offsetPtCount=0;const e=.5*this.m_tolerance;let i=0,n=0;for(let f=0;f<s;f++){const _=this.m_srcPts[f],P=0===f?this.m_srcPts[s-1]:this.m_srcPts[f-1],l=f===s-1?this.m_srcPts[0]:this.m_srcPts[f+1];let u,d,y=0;{const t=P.x-_.x,s=P.y-_.y,e=l.x-_.x,h=l.y-_.y;u=Math.atan2(s,t),d=Math.atan2(h,e),this.m_a1=u,this.m_a2=d,0===f&&(i=u,n=d),y=o.Point2D.orientationRobust(_.asPoint2D(),P.asPoint2D(),l.asPoint2D())}const x=d;if(d<u&&(d+=o.geometry2Pi),y*this.m_distance>0)if(1===this.m_joins||2===this.m_joins){c.buildPoint(_,this.m_distance,u+o.geometryHalfPi,t),this.addPoint(t);const s=.001;t.x=_.x+(t.x-_.x)*s,t.y=_.y+(t.y-_.y)*s,this.addPoint(t),c.buildPoint(_,this.m_distance,d-o.geometryHalfPi,t);const e=t.clone();e.x=_.x+(e.x-_.x)*s,e.y=_.y+(e.y-_.y)*s,e.type|=m,this.addPoint(e),this.addPoint(t)}else{const s=.5*(d-u),e=0===s?this.m_distance:this.m_distance/Math.abs(Math.sin(s));c.buildPoint(_,e,.5*(u+d),t),this.addPointEx(t,f)}else{if(512&_.type){const s=1-e/Math.abs(this.m_distance);let i=1,n=this.m_distance<0?-Math.PI:Math.PI;if(s>-1&&s<1){let t=2*Math.acos(s);t<r&&(t=r),i=Math.trunc(Math.PI/t+1.5),i>1&&(n/=i)}i<=1&&(i=2,n/=2);let h=u+o.geometryHalfPi;c.buildPoint(_,this.m_distance,h,t),0===f&&(t.type|=a),this.addPointEx(t,f);const m=this.m_distance/Math.cos(n/2);for(h+=n/2,c.buildPoint(_,m,h,t),t.type|=a,this.addPoint(t);--i>0;)h+=n,c.buildPoint(_,m,h,t),t.type|=a,this.addPoint(t);c.buildPoint(_,this.m_distance,d-o.geometryHalfPi,t),t.type|=a,this.addPoint(t);continue}if(1!==this.m_joins){if(0===this.m_joins){const s=1-e/Math.abs(this.m_distance);let i=1,n=d-o.geometryHalfPi-(u+o.geometryHalfPi);if(s>-1&&s<1){let t=2*Math.acos(s);t<r&&(t=r),i=Math.trunc(Math.abs(n)/t+1.5),i>1&&(n/=i)}const h=this.m_distance/Math.cos(.5*n);let m=u+o.geometryHalfPi+.5*n;for(c.buildPoint(_,h,m,t),this.addPointEx(t,f);--i>0;)m+=n,c.buildPoint(_,h,m,t),this.addPoint(t);continue}if(2===this.m_joins){const s=P.x-_.x,e=P.y-_.y,i=l.x-_.x,n=l.y-_.y,r=(s*i+e*n)/Math.sqrt(s*s+e*e)/Math.sqrt(i*i+n*n);if(r>1-1e-8){c.buildPoint(_,h*this.m_distance,d-.25*Math.PI,t),this.addPointEx(t,f),c.buildPoint(_,h*this.m_distance,d+.25*Math.PI,t),this.addPoint(t);continue}const m=Math.abs(this.m_distance/Math.sin(.5*Math.acos(r))),a=Math.abs(this.m_miterLimit*this.m_distance);if(m>a){const s=.5*(d-u),e=this.m_distance/Math.abs(Math.sin(s));c.buildPoint(_,e,.5*(u+d),t);const i=o.Point2D.construct(t.x,t.y),n=o.Point2D.construct(_.x,_.y),h=new o.Point2D;h.setSub(i,n);const r=new o.Point2D;r.setScaleAdd(a/h.length(),h,n);const P=Math.sqrt(m*m-this.m_distance*this.m_distance),l=(m-a)*Math.abs(this.m_distance)/P;this.m_distance>0?h.leftPerpendicularThis():h.rightPerpendicularThis(),h.scale(l/h.length());const y=new o.Point2D;y.setAdd(r,h);const x=new o.Point2D;x.setSub(r,h),t.x=y.x,t.y=y.y,this.addPointEx(t,f),t.x=x.x,t.y=x.y,this.addPoint(t);continue}const y=.5*(d-u),x=this.m_distance/Math.abs(Math.sin(y));c.buildPoint(_,x,.5*(u+d),t),this.addPointEx(t,f);continue}{let s;if(d=x,this.m_distance>0?(d>u&&(d-=o.geometry2Pi),s=u-d<o.geometryHalfPi):(d<u&&(d+=o.geometry2Pi),s=d-u<o.geometryHalfPi),s){const s=this.m_distance*h;let e;e=s<0?u+.25*Math.PI:u+3*Math.PI*.25,c.buildPoint(_,s,e,t),this.addPointEx(t,f),e=s<0?d-.25*Math.PI:d-3*Math.PI*.25,c.buildPoint(_,s,e,t),this.addPoint(t)}else{const s=.5*(d-u),e=this.m_distance/Math.abs(Math.sin(s));d<u&&(d+=o.geometry2Pi),c.buildPoint(_,e,(u+d)/2,t),this.addPointEx(t,f)}}}else c.buildPoint(_,this.m_distance,u+o.geometryHalfPi,t),this.addPointEx(t,f),c.buildPoint(_,this.m_distance,d-o.geometryHalfPi,t),this.addPoint(t)}}return this.m_a1=i,this.m_a2=n,this.addPointEx(this.m_offsetPts[0],0),this.m_offsetPts[0]=this.m_offsetPts[this.m_offsetPtCount-1].clone(),this.removeBadSegsFast()}removeBadSegsFast(){let t=!1;for(let t=0;t<this.m_offsetPtCount;t++){const s=this.m_offsetPts[t];s.m_next=t+1,s.m_prev=t-1}this.m_offsetPts[0].m_prev=this.m_offsetPtCount-2,this.m_offsetPts[this.m_offsetPtCount-2].m_next=0;let s=0;for(let e=0;e<this.m_offsetPtCount;e++)if(this.m_offsetPts[s].type&m){const e=this.deleteClosedSeg(s);if(-1===e){t=!0;break}s=e}else s=this.m_offsetPts[s].m_next;return!t&&(this.compressOffsetArray(s),!0)}deleteClosedSeg(t){const s=this.m_offsetPtCount-1;let e,i,n=t;for(let o=1;o<=s-2;o++){n=this.m_offsetPts[n].m_next,e=n,i=t;for(let t=1;t<=o;t++){if(i=this.m_offsetPts[i].m_prev,0===(this.m_offsetPts[i].type&m)&&0===(this.m_offsetPts[e].type&m)){const t=this.handleClosedIntersection(i,e);if(-1!==t)return t}e=this.m_offsetPts[e].m_prev}}return-1}handleClosedIntersection(t,s){const e=this.m_offsetPts[this.m_offsetPts[t].m_prev],i=this.m_offsetPts[t],n=this.m_offsetPts[this.m_offsetPts[s].m_prev],o=this.m_offsetPts[s];if(!this.sectGraphicRect(e,i,n,o))return-1;const h={pt:new f,bAtExistingPt:!1};if(((i.x-e.x)*(o.y-n.y)-(i.y-e.y)*(o.x-n.x))*this.m_distance<0&&this.findIntersection(e,i,n,o,h)&&!h.bAtExistingPt){const r=1e-8,m=Math.sqrt((i.x-e.x)*(i.x-e.x)+(i.y-e.y)*(i.y-e.y)),a=(i.x-e.x)/m,f=(i.y-e.y)/m,c=Math.sqrt((o.x-n.x)*(o.x-n.x)+(o.y-n.y)*(o.y-n.y)),_=(o.x-n.x)/c,P=(o.y-n.y)/c;let l=!1;const u=h.pt.clone();u.x+=(a+_)*r,u.y+=(f+P)*r;let d=n,y=h.pt,x=this.m_offsetPts[t].m_prev;for(;y.y>u.y!=d.y>u.y&&u.x<(d.x-y.x)*(u.y-y.y)/(d.y-y.y)+y.x&&(l=!l),d=y,x=this.m_offsetPts[x].m_next,x!==s;)y=this.m_offsetPts[x];if(l)return-1;const p=this.m_offsetPts[t].m_prev;return h.pt.type=i.type,h.pt.m_next=s,h.pt.m_prev=p,this.m_offsetPts[t]=h.pt,this.m_offsetPts[s].m_prev=t,s}return-1}sectGraphicRect(t,s,e,i){return Math.max(t.x,s.x)>=Math.min(e.x,i.x)&&Math.max(e.x,i.x)>=Math.min(t.x,s.x)&&Math.max(t.y,s.y)>=Math.min(e.y,i.y)&&Math.max(e.y,i.y)>=Math.min(t.y,s.y)}findIntersection(t,s,e,i,n){let o,h,r,m;return n.bAtExistingPt=!1,o=(s.y-t.y)*(i.x-e.x)-(s.x-t.x)*(i.y-e.y),h=(e.y-t.y)*(s.x-t.x)-(e.x-t.x)*(s.y-t.y),r=0===o?2:h/o,r>=0&&r<=1&&(m=r,o=(i.y-e.y)*(s.x-t.x)-(i.x-e.x)*(s.y-t.y),h=(t.y-e.y)*(i.x-e.x)-(t.x-e.x)*(i.y-e.y),r=0===o?2:h/o,r>=0&&r<=1)&&(n.pt.x=t.x+r*(s.x-t.x),n.pt.y=t.y+r*(s.y-t.y),this.m_bUseZ&&(n.pt.z=e.z+m*(i.z-e.z)),this.m_bUseM&&(n.pt.m=e.m+m*(i.m-e.m)),0!==m&&1!==m||0!==r&&1!==r||(n.bAtExistingPt=!0),!((0===m||1===m)&&r>0&&r<1||(0===r||1===r)&&m>0&&m<1))}compressOffsetArray(t){for(;this.m_offsetPts[t].m_prev<t;)t=this.m_offsetPts[t].m_prev;let s=0,e=t;do{const t=this.m_offsetPts[e].clone();this.m_offsetPts[s]=t,e=t.m_next,s++}while(e!==t);this.m_offsetPts[s]=this.m_offsetPts[0].clone(),this.m_offsetPtCount=s+1}addPart(t,s){if(!(s<2))for(let e=0;e<s;e++){const s=this.m_offsetPts[t+e];if(e?this.m_bUseZ?this.m_resultPath.lineTo3DCoords(s.x,s.y,s.z):this.m_resultPath.lineToCoords(s.x,s.y):this.m_bUseZ?this.m_resultPath.startPath3DCoords(s.x,s.y,s.z):this.m_resultPath.startPathCoords(s.x,s.y),this.m_bUseM){const t=this.m_resultPath.getPointCount()-1;this.m_resultPath.setAttribute(2,t,0,s.m)}}}offsetMultiPath(t){const s=n.densify(this.m_inputGeometry,0,this.m_tolerance,0,this.m_progressTracker,12e3),e=s.querySegmentIterator();e.resetToFirstPath();let i=-1;for(;e.nextPath();)i++,this.offsetPath(s,i,t)}offsetPath(t,s,e){let i=t.getPathStart(s),n=t.getPathEnd(s);if(this.m_resultPath=e,t.isClosedPath(s)){const s=t.getXY(i);for(;n>i&&t.getXY(n-1).equals(s);)n--;if(n-i>=2){this.m_srcPtCount=n-i,this.m_srcPts.length=this.m_srcPtCount;for(let s=i;s<n;s++)this.progress(),this.m_srcPts[s-i]=f.construct(t.getXY(s),this.m_bUseZ?t.getAttributeAsDbl(1,s,0):0,this.m_bUseM?t.getAttributeAsDbl(2,s,0):0);this.buildOffset()&&this.addPart(0,this.m_offsetPtCount-1)}}else{const s=t.getXY(i);for(;i<n-1&&t.getXY(i+1).equals(s);)i++;const e=t.getXY(n-1);for(;i<n-1&&t.getXY(n-2).equals(e);)n--;if(n-i>=2){this.m_srcPtCount=2*(n-i)-2,this.m_srcPts.length=this.m_srcPtCount;let e=f.construct(s,this.m_bUseZ?t.getAttributeAsDbl(1,i,0):0,this.m_bUseM?t.getAttributeAsDbl(2,i,0):0);e.type|=1536,this.m_srcPts[0]=e;let o=1,h=this.m_srcPtCount-1;for(let s=i+1;s<n-1;s++,o++,h--)this.progress(),e=f.construct(t.getXY(s),this.m_bUseZ?t.getAttributeAsDbl(1,s,0):0,this.m_bUseM?t.getAttributeAsDbl(2,s,0):0),this.m_srcPts[o]=e.clone(),e.type|=a,this.m_srcPts[h]=e.clone();if(e=f.construct(t.getXY(n-1),this.m_bUseZ?t.getAttributeAsDbl(1,n-1,0):0,this.m_bUseM?t.getAttributeAsDbl(2,n-1,0):0),e.type|=512,this.m_srcPts[o]=e.clone(),this.buildOffset())if(this.m_offsetPts.length>=2){let t=-1,s=-1,e=0!==(this.m_offsetPts[this.m_offsetPtCount-1].type&a);e||(t=0);for(let i=1;i<this.m_offsetPtCount;i++){this.progress();const n=0!==(this.m_offsetPts[i].type&a);n?e||(s=i-1,s-t+1>1&&this.addPart(t,s-t+1)):e&&(t=i-1),e=n}e||(s=this.m_offsetPtCount-1,s-t+1>1&&this.addPart(t,s-t+1))}else{const t=0,s=this.m_offsetPtCount-1;s-t>=1&&this.addPart(t,s-t+1)}}}this.m_srcPts.length=0,this.m_srcPtCount=0,this.m_offsetPts.length=0,this.m_offsetPtCount=0}static dotSign(t,s,e,i){const n=s.x-t.x,h=s.y-t.y,r=i.x-e.x,m=i.y-e.y,a=o.compensatedDot(n,h,r,m);return o.sign(a)}}class _ extends s.GeometryCursor{constructor(t,s,e,i,n,o,h){super(),this.m_progressTracker=h,this.m_index=-1,this.m_inputGeoms=t,this.m_spatialReference=s,this.m_distance=e,this.m_joins=i,this.m_miterLimit=n,this.m_flattenError=o}tock(){return!0}getRank(){return 1}next(){if(!this.m_inputGeoms)return null;let t;for(;t=this.m_inputGeoms.next();)return this.m_index=this.m_inputGeoms.getGeometryID(),this.offset(t);return null}getGeometryID(){return this.m_index}offset(t){let s;return i.throwIfMesh(t),s=this.m_flattenError<=0?e.calculateToleranceFromGeometryForOpFromGeom(this.m_spatialReference,t,!0).total():this.m_flattenError,function(t,s,e,n,o,h){if(null===t&&i.throwInvalidArgumentException(""),t.getDimension()<1&&i.throwInvalidArgumentException(""),o>0||i.throwInvalidArgumentException(""),i.throwIfMesh(t),0===s||t.isEmpty())return t;const r=new c(h);return r.m_bUseZ=t.hasAttribute(1),r.m_bUseM=t.hasAttribute(2),r.m_inputGeometry=t,r.m_distance=s,r.m_tolerance=o,r.m_joins=e,r.m_miterLimit=n>1?n:1,r.m_progressCounter=0,r.constructOffset()}(t,this.m_distance,this.m_joins,this.m_miterLimit,s,this.m_progressTracker)}}const P=new class{getOperatorType(){return 10108}accelerateGeometry(t,s,e){return!1}canAccelerateGeometry(t){return!1}supportsCurves(){return!0}executeMany(t,s,e,i,n,o,h){return new _(t,s,e,i,n,o,h)}execute(t,s,e,i,n,o,h){return new _(null,s,e,i,n,o,h).offset(t)}};t.execute=function(t,s,e,i,n,o){return P.execute(t,s,e,i,n,o,null)},t.executeMany=function(t,e,i,n,o,h){const r=P.executeMany(new s.SimpleGeometryCursor(t),e,i,n,o,h,null);return Array.from(r)},t.supportsCurves=function(){return P.supportsCurves()},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});