// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/SimpleGeometryCursor","../../../chunks/Geometry","../../../chunks/Point2D","../../../chunks/MultiPathImpl","../../../chunks/Envelope2D","../../../chunks/Envelope","../../../chunks/ProjectionTransformation"],function(e,t,n,r,o,s,i,u){"use strict";function m(e,t,n,o){const u=e.getImpl().getAttributeStreamRef(0),m=e.getPointCount(),c=t.getXY(),l=e.createInstance(),p=i.adjustToleranceForTEClustering(n),a=new s.Envelope2D;if(e.queryEnvelope(a),a.inflateCoords(p,p),a.contains(c)){const n=p*p;let o=!1;const s=r.makePrimitiveArray(m,!1);for(let e=0;e<m;e++){const t=u.read(2*e),r=u.read(2*e+1),i=t-c.x,m=r-c.y;i*i+m*m<=n&&(o=!0,s[e]=!0)}if(o)for(let t=0;t<m;t++)s[t]||l.addPoints(e,t,t+1);else l.addPoints(e,0,m),l.add(t)}else l.addPoints(e,0,m),l.add(t);return l}class c extends t.GeometryCursor{constructor(e,t,r,o){super(),this.m_progressTracker=o,this.m_index=-1,this.m_inputGeoms=e,this.m_spatialReference=r,this.m_rightGeom=t.next(),this.m_bEmpty=!this.m_rightGeom,n.throwIfMesh(this.m_rightGeom)}tock(){return!0}getRank(){return 1}next(){if(this.m_bEmpty)return null;const e=this.m_inputGeoms.next();return e?(n.throwIfMesh(e),this.m_index=this.m_inputGeoms.getGeometryID(),function(e,t,c,l){const p=e.getDimension(),a=t.getDimension();if(p!==a)return p>a?e:t;if(e.isEmpty())return t;if(t.isEmpty())return e;const y=new s.Envelope2D,h=new s.Envelope2D,d=new s.Envelope2D;e.queryEnvelope(y),t.queryEnvelope(h),d.setCoords({env2D:y}),d.mergeEnvelope2D(h);const f=i.calculateToleranceFromGeometryForOp(c,d,!0),G=e.getGeometryType(),g=t.getGeometryType();return G===n.GeometryType.enumPoint&&g===n.GeometryType.enumPoint?function(e,t,n){const s=i.adjustToleranceForTEClustering(n),u=s*s,m=e.getXY(),c=t.getXY(),l=new o.MultiPoint({vd:e.getDescription()});return r.Point2D.sqrDistance(m,c)>u&&(l.add(e),l.add(t)),l}(e,t,f):G===n.GeometryType.enumPoint&&g===n.GeometryType.enumMultiPoint?m(t,e,f):G===n.GeometryType.enumMultiPoint&&g===n.GeometryType.enumPoint?m(e,t,f):u.symmetricDifference(e,t,c,l)}(e,this.m_rightGeom,this.m_spatialReference,this.m_progressTracker)):null}getGeometryID(){return this.m_index}}const l=new class{getOperatorType(){return 10003}supportsCurves(){return!0}accelerateGeometry(e,t,n){return!1}canAccelerateGeometry(e){return!1}executeMany(e,t,n,r){return new c(e,t,n,r)}execute(e,r,o,s){const i=new t.SimpleGeometryCursor([e]),u=new t.SimpleGeometryCursor([r]),m=this.executeMany(i,u,o,s).next();return m||n.throwInternalErrorException("null output"),m}};e.execute=function(e,t,n){return l.execute(e,t,n,null)},e.executeMany=function(e,n,r){const o=l.executeMany(new t.SimpleGeometryCursor(e),new t.SimpleGeometryCursor([n]),r,null);return Array.from(o)},e.supportsCurves=function(){return l.supportsCurves()},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});