// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../chunks/pe","./GeographicTransformation","./GeographicTransformationStep"],function(e,n,t,o,r){"use strict";let i,s,a,c;function u(){return!!i&&t.isLoaded()}function f(e){const n=new o;for(let t=0;t<e.count();t++){const o=e.getStep(t);n.steps.push(new r({wkid:o.getID(),isInverse:o.isInverted()}))}return n}n.getTransformation=function(e,n,t=null){const o=t?s(t).asEnvelope2D():c,r=i(0,a(e),a(n),o,1,!0);return r.length>0?f(r[0]):null},n.getTransformations=function(e,n,t=null){const o=t?s(t).asEnvelope2D():c;return i(0,a(e),a(n),o,0,!0).map(e=>f(e))},n.isLoaded=u,n.load=async function(){if(!u()){const[n,o,r,u]=await Promise.all([new Promise((n,t)=>e(["../../../chunks/Envelope2D"],n,t)),new Promise((n,t)=>e(["../../../chunks/ProjectionTransformation"],n,t)).then(e=>e.ProjectionTransformation).then(({queryTransformationList:e})=>e),new Promise((n,t)=>e(["../../../chunks/ProjectionTransformation"],n,t)).then(e=>e.SpatialReference).then(({injectPe:e})=>e),new Promise((n,t)=>e(["./apiConverter"],n,t)),t.load()]);c=n.Envelope2D.constructEmpty(),i=o,r(t.pe),s=u.fromExtent,a=u.fromSpatialReference}},Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});