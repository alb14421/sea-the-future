// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../core/arrayUtils","../../../core/unitUtils","../gx/operatorGeodesicBuffer","../support/geodeticCurveType"],function(e,t,o,r,n,i){"use strict";let c,u,a;function s(){return!!c&&n.isLoaded()}t.execute=function(e,t,o={}){let{curveType:c="geodesic",maxDeviation:s=NaN,unit:m}=o;m&&(t=r.convertUnit(t,m,"meters"),s&&(s=r.convertUnit(s,m,"meters")));const d=u(e),p=d.getSpatialReference();return a(n.execute(d.getGeometry(),p,i.geodeticCurveType[c],t,s),p)},t.executeMany=function(e,t,u={}){let{curveType:s="geodesic",maxDeviation:m=NaN,union:d=!1,unit:p}=u;p&&(t=t.map(e=>r.convertUnit(e,p,"meters")),m&&(m=r.convertUnit(m,p,"meters")));const[f,l]=c(e);return n.executeMany(f,l,i.geodeticCurveType[s],t,m,d).map(e=>a(e,l)).filter(o.isSome)},t.isLoaded=s,t.load=async function(){if(!s()){const[t]=await Promise.all([new Promise((t,o)=>e(["../support/jsonConverter"],t,o)),n.load()]);c=t.fromGeometries,u=t.fromGeometry,a=t.toGeometry}},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});