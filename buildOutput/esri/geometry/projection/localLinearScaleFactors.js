// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/vec32","./projectors","../support/Ellipsoid","../support/spatialReferenceUtils"],function(e,r,t,a,n){"use strict";e.localLinearScaleFactors=function(e,i,s,c){const l=t.getProjectorClassification(i,c);if(null==l)return!1;const o=l.source.spatialReferenceId,u=l.dest.spatialReferenceId;if(o===u&&0!==o||n.equals(i,c))return s[0]=1,s[1]=1,s[2]=1,!0;if(1===o){const n=r.length(e),i=n/Math.sqrt(e[0]*e[0]+e[1]*e[1]),c=n/a.earth.radius;if(3===u)return s[0]=i*c,s[1]=i*c,s[2]=1,!0;if(2===u||5===u){const e=t.invPlateCarreeScale;return s[0]=e*i*c,s[1]=e*c,s[2]=1,!0}}else if(11===o){if(2===u||5===u)return s[0]=t.invPlateCarreeScale,s[1]=t.invPlateCarreeScale,s[2]=1,!0;if(3===u){const r=e[1]/a.earth.radius;return s[0]=1,s[1]=1/Math.cos(r),s[2]=1,!0}}return!1},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});