// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../chunks/tslib.es6","../core/arrayUtils","../core/jsonMap","../core/JSONSupport","../core/unitUtils","../core/Warning","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer"],function(e,t,r,i,o,s,a,n,d,l,c,h,u){"use strict";var p;const g=i.strict()({orthometric:"gravity-related-height",gravity_related_height:"gravity-related-height",ellipsoidal:"ellipsoidal"}),y=g.jsonValues.slice();r.removeUnordered(y,"orthometric");const f=i.strict()({meter:"meters",foot:"feet","us-foot":"us-feet","clarke-foot":"clarke-feet","clarke-yard":"clarke-yards","clarke-link":"clarke-links","sears-yard":"sears-yards","sears-foot":"sears-feet","sears-chain":"sears-chains","benoit-1895-b-chain":"benoit-1895-b-chains","indian-yard":"indian-yards","indian-1937-yard":"indian-1937-yards","gold-coast-foot":"gold-coast-feet","sears-1922-truncated-chain":"sears-1922-truncated-chains","50-kilometers":"50-kilometers","150-kilometers":"150-kilometers"});function S(e,t){return new a("height-unit:unsupported",`Height unit of value '${e}' is not supported`,t)}return e.default=p=class extends o.JSONSupport{constructor(e){super(e),this.heightModel="gravity-related-height",this.heightUnit="meters",this.vertCRS=null}writeHeightModel(e,t,r){return g.write(e,t,r)}readHeightModel(e,t,r){return g.read(e)||(r?.messages&&r.messages.push(function(e,t){return new a("height-model:unsupported",`Height model of value '${e}' is not supported`,t)}(e,{context:r})),null)}readHeightUnit(e,t,r){return f.read(e)||(r?.messages&&r.messages.push(S(e,{context:r})),null)}readHeightUnitService(e,t,r){return s.unitFromRESTJSON(e)||f.read(e)||(r?.messages&&r.messages.push(S(e,{context:r})),null)}readVertCRS(e,t){return t.vertCRS||t.ellipsoid||t.geoid}clone(){return new p({heightModel:this.heightModel,heightUnit:this.heightUnit,vertCRS:this.vertCRS})}equals(e){return!!e&&(this===e||this.heightModel===e.heightModel&&this.heightUnit===e.heightUnit&&this.vertCRS===e.vertCRS)}static deriveUnitFromSR(e,t){const r=s.getVerticalUnitStringForSR(t);return new p({heightModel:e.heightModel,heightUnit:r??void 0,vertCRS:e.vertCRS})}write(e,t){return t={origin:"web-scene",...t},super.write(e,t)}static fromJSON(e){if(!e)return null;const t=new p;return t.read(e,{origin:"web-scene"}),t}},t.__decorate([n.property({type:g.apiValues,constructOnly:!0,json:{origins:{"web-scene":{type:y,default:"ellipsoidal",write:{isRequired:!0}}}}})],e.default.prototype,"heightModel",void 0),t.__decorate([u.writer("web-scene","heightModel")],e.default.prototype,"writeHeightModel",null),t.__decorate([c.reader(["web-scene","service"],"heightModel")],e.default.prototype,"readHeightModel",null),t.__decorate([n.property({type:f.apiValues,constructOnly:!0,json:{origins:{"web-scene":{type:f.jsonValues,write:{writer:f.write,isRequired:!0}}}}})],e.default.prototype,"heightUnit",void 0),t.__decorate([c.reader("web-scene","heightUnit")],e.default.prototype,"readHeightUnit",null),t.__decorate([c.reader("service","heightUnit")],e.default.prototype,"readHeightUnitService",null),t.__decorate([n.property({type:String,constructOnly:!0,json:{origins:{"web-scene":{write:!0}}}})],e.default.prototype,"vertCRS",void 0),t.__decorate([c.reader("service","vertCRS",["vertCRS","ellipsoid","geoid"])],e.default.prototype,"readVertCRS",null),e.default=p=t.__decorate([h.subclass("esri.geometry.HeightModelInfo")],e.default),e.default});