// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/earcut","./coordsUtils","./DoubleArray","./Indices","./polygonUtils","./meshUtils/deduplicate"],function(e,n,t,o,i,s,r){"use strict";function l(e,n,t,i){const s=e.length,r=new Array(s),l=new Array(s),u=new Array(s);let h=0;for(let n=0;n<s;++n)h+=e[n].length;let g=0,f=0,d=0;const p=o.newDoubleArray(3*h);let y=0;for(let o=s-1;o>=0;o--){const h=e[o],w=1===t&&a(h,n,i);if(w&&1!==s)r[g++]=h;else{let e=h.length;for(let n=0;n<g;++n)e+=r[n].length;const t={index:y,pathLengths:new Array(g+1),count:e,holeIndices:new Array(g)};t.pathLengths[0]=h.length,h.length>0&&(u[d++]={index:y,count:h.length}),y=w?c(h,h.length-1,-1,p,y,h.length,n):c(h,0,1,p,y,h.length,n);for(let e=0;e<g;++e){const o=r[e];t.holeIndices[e]=y,t.pathLengths[e+1]=o.length,o.length>0&&(u[d++]={index:y,count:o.length}),y=c(o,0,1,p,y,o.length,n)}g=0,t.count>0&&(l[f++]=t)}}for(let e=0;e<g;++e){const t=r[e];t.length>0&&(u[d++]={index:y,count:t.length}),y=c(t,0,1,p,y,t.length,n)}return l.length=f,u.length=d,{position:p,polygons:l,outlines:u}}function c(e,n,t,o,i,s,r){i*=3;for(let l=0;l<s;++l){const s=e[n];o[i++]=s[0],o[i++]=s[1],o[i++]=r&&s[2]?s[2]:0,n+=t}return i/3}function a(e,n,o){if(!n)return!t.isClockwise(e);const i=e.length-1;switch(s.leastSignificantAxis(e,i,o)){case 0:return!t.isClockwise(e,1,2);case 1:return!t.isClockwise(e,0,2);case 2:return!t.isClockwise(e,0,1)}}e.isCounterClockwise=a,e.ringsToTriangulationInfo=l,e.triangulate=function(e){const t=l(e.rings,e.hasZ,1,e.spatialReference),s=new Array;let c=0,a=0;for(const e of t.polygons){const r=e.count,l=e.index,u=o.doubleSubArray(t.position,3*l,3*r),h=e.holeIndices.map(e=>e-l),g=i.compactMeshIndices(n.earcut(u,h,3));s.push({position:u,faces:g}),c+=u.length,a+=g.length}const u=function(e,n,t){if(1===e.length)return e[0];const s=o.newDoubleArray(n),r=new Array(t);let l=0,c=0,a=0;for(const n of e){for(let e=0;e<n.position.length;e++)s[l++]=n.position[e];for(const e of n.faces)r[c++]=e+a;a=l/3}return{position:s,faces:i.compactMeshIndices(r)}}(s,c,a),h=Array.isArray(u.position)?r.deduplicate(u.position,3,{originalIndices:u.faces}):r.deduplicate(u.position.buffer,6,{originalIndices:u.faces});return u.position=o.doubleArrayFrom(new Float64Array(h.buffer)),u.faces=h.indices,u},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});