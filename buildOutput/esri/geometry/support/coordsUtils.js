// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/arrayUtils","./spatialReferenceUtils"],function(n,t,e){"use strict";function r(n,t){const e=t[0]-n[0],r=t[1]-n[1];if(n.length>2&&t.length>2){const i=n[2]-t[2];return Math.sqrt(e*e+r*r+i*i)}return Math.sqrt(e*e+r*r)}function i(n,t,e){const r=n[0]+e*(t[0]-n[0]),i=n[1]+e*(t[1]-n[1]);return n.length>2&&t.length>2?[r,i,n[2]+e*(t[2]-n[2])]:[r,i]}function o(n,t,e,r){const[i,o]=t,[s,l]=e,[u,c]=r,f=u-s,a=c-l,g=f*f+a*a,h=(i-s)*f+(o-l)*a,p=Math.min(1,Math.max(0,h/g));return n[0]=s+f*p,n[1]=l+a*p,n}function s(n,t,e,r,i,o){let s=e,l=r,u=i-s,c=o-l;if(0!==u||0!==c){const e=((n-s)*u+(t-l)*c)/(u*u+c*c);e>1?(s=i,l=o):e>0&&(s+=u*e,l+=c*e)}return u=n-s,c=t-l,u*u+c*c}function l(n,t=0,e=1){let r=0;const i=n.length;let o=n[0];for(let s=1;s<i;s++){const i=n[s];r+=(i[t]-o[t])*(i[e]+o[e]),o=i}if(u(n)){const i=n[0];r+=(i[t]-o[t])*(i[e]+o[e])}return r>=0}function u(n){const e=n.length;return e>0&&!t.equals(n[0],n[e-1])}function c(n){if("rings"in n)for(const t of n.rings)u(t)&&t.push(t[0].slice())}function f(n,t){const r=e.getInfo(t);if(!r)return;const i=r.valid[0],o=r.valid[1],s=o-i;for(const t of n){let n=1/0,e=-1/0;for(const r of t){const t=a(r[0],i,o);n=Math.min(n,t),e=Math.max(e,t),r[0]=t}const r=e-n;s-r<r&&t.forEach(n=>{n[0]<0&&(n[0]+=s)})}}function a(n,t,e){const r=e-t;return n<t?e-(t-n)%r:n>e?t+(n-t)%r:n}n.closeRings=c,n.closeRingsAndFixWinding=function(n){"rings"in n&&(c(n),function(n){if(!("rings"in n))return!1;if(0===n.rings.length||l(n.rings[0]))return!1;for(const t of n.rings)t.reverse()}(n))},n.distanceFromPointToPolygon=function(n,t,e){let r,i,o,l,u=!1,c=1/0;for(e.reset();e.nextPath();)if(e.nextPoint())for(r=e.x,i=e.y;e.nextPoint();)o=e.x,l=e.y,i>t!=l>t&&n<(o-r)*(t-i)/(l-i)+r&&(u=!u),c=Math.min(c,s(n,t,r,i,o,l)),r=o,i=l;return 0===c?0:(u?1:-1)*Math.sqrt(c)},n.distanceToSegmentSquared=s,n.geometryToCoordinates=function(n){if(!n)return null;if(Array.isArray(n))return n;const t=n.hasZ,e=n.hasM;if("point"===n.type)return e&&t?[n.x,n.y,n.z,n.m]:t?[n.x,n.y,n.z]:e?[n.x,n.y,n.m]:[n.x,n.y];if("polygon"===n.type)return n.rings.slice();if("polyline"===n.type)return n.paths.slice();if("multipoint"===n.type)return n.points.slice();if("extent"===n.type){const t=n.clone().normalize();if(!t)return null;let e=!1,r=!1;return t.forEach(n=>{n.hasZ&&(e=!0),n.hasM&&(r=!0)}),t.map(n=>{const t=[[n.xmin,n.ymin],[n.xmin,n.ymax],[n.xmax,n.ymax],[n.xmax,n.ymin],[n.xmin,n.ymin]];if(e&&n.hasZ){const e=.5*(n.zmax-n.zmin);for(let n=0;n<t.length;n++)t[n].push(e)}if(r&&n.hasM){const e=.5*(n.mmax-n.mmin);for(let n=0;n<t.length;n++)t[n].push(e)}return t})}return null},n.getLength=r,n.getMidpoint=function(n,t){return i(n,t,.5)},n.getPathLength=function(n){const t=n.length;let e=0;for(let i=0;i<t-1;++i)e+=r(n[i],n[i+1]);return e},n.getPointOnPath=function(n,t){if(t<=0)return n[0];const e=n.length;let o=0;for(let s=0;s<e-1;++s){const e=r(n[s],n[s+1]);if(t-o<e){const r=(t-o)/e;return i(n[s],n[s+1],r)}o+=e}return n[e-1]},n.hasCompatibleTopology=function(n,t){if(n===t)return!0;if(n.type!==t.type)return!1;if("point"===n.type||"mesh"===n.type||"extent"===n.type)return!0;if("multipoint"===n.type)return n.points.length===t.points.length;const[e,r]="polyline"===n.type?[n.paths,t.paths]:[n.rings,t.rings];return e.length===r.length&&e.every((n,t)=>n.length===r[t].length)},n.isClockwise=l,n.projectPointOnLine=function(n,t,e,r){return o(n,t,e[r],e[r+1])},n.projectPointOnLineSeg=o,n.unnormalizeGeometryOnDatelineCrossing=function(n){return"polygon"!==n.type&&"polyline"!==n.type||f("polygon"===n.type?n.rings:n.paths,n.spatialReference),n},n.unnormalizeVerticesOnDatelineCrossing=f,n.unnormalizedCoordinate=a,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});