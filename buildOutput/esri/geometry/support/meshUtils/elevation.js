// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Logger","../../../core/unitUtils","../../Mesh","../../Point","../../projectionUtils","../MeshComponent","../MeshVertexAttributes","../../../support/groundInstanceUtils"],function(e,t,n,o,i,r,a,s,l){"use strict";function c(e,t,i){const l=n.getMetersPerUnitForSR(t.spatialReference),c=(i?.demResolution??e.demResolution.min)/l,u=Math.round(t.width/c),p=Math.round(t.height/c),d=u+1,f=p+1,h=new Float64Array(d*f*3),y=new Float32Array(d*f*2);let R=0,w=0;const g=new Uint32Array(u*p*2*3);let v=0,b=0;const A=!e.spatialReference.equals(t.spatialReference);m.spatialReference=t.spatialReference;const{xmin:M,ymin:x,height:U,width:S}=t;for(let t=0;t<f;t++){const n=x+U*(t/p);for(let o=0;o<d;o++){const i=M+S*(o/u);if(h[R++]=i,h[R++]=n,A){m.x=i,m.y=n;const t=r.project(m,e.spatialReference);h[R++]=e.elevationAt(t.x,t.y)??0}else h[R++]=e.elevationAt(i,n)??0;const a=o/u,s=t/p;y[w++]=a,y[w++]=s,t!==p&&o!==u&&(g[b++]=v+1,g[b++]=v+d+1,g[b++]=v+d,g[b++]=v,g[b++]=v+1,g[b++]=v+d),v++}}return new o({vertexAttributes:new s.MeshVertexAttributes({position:h,uv:y}),components:[new a({faces:g,shading:"smooth",material:i?.material??null})],spatialReference:t.spatialReference})}function u(e){return"type"in e&&("elevation"===e.type||"base-elevation"===e.type)}const m=new i;e.create=async function(e,n,i){let r;if(u(e)||l.isGround(e)){const t=await async function(e){return u(e)?e.load():(await e.load(),await Promise.allSettled(e.layers.items.map(e=>e.load())),e)}(e);return r=await t.createElevationSampler(n,{demResolution:i?.demResolution??"finest-contiguous"}),c(r,n,{material:i?.material})}return"string"==typeof i?.demResolution?(t.getLogger("esri.geometry.support.meshUtils.elevation").error("create()","demResolution must be a number when used directly with a sampler"),new o):c(e,n,{material:i?.material,demResolution:i?.demResolution})},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});