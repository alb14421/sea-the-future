// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Logger","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../MeshComponent","../MeshVertexAttributes","./meshCloneUtils","./vertexSpaceConversion"],function(e,t,n,r,o,l,s,i){"use strict";const a=()=>t.getLogger("esri.geometry.support.triangleMeshMerge");function c(e,t,n){(function(e,t){return t.normal>0&&!e.vertexAttributes.normal})(e,t)&&"source"===n.shading&&(n.shading="flat")}function u(e,t,n,r){if(e.components)for(const o of e.components){const l=o.clone(n),s=t.position/3;if(l.faces)for(let e=0;e<l.faces.length;e++)l.faces[e]+=s;else{l.faces=new Uint32Array(e.vertexAttributes.position.length/3);for(let e=0;e<l.faces.length;e++)l.faces[e]=e+s}c(e,t,l),r.push(l)}else if(e.vertexAttributes&&e.vertexAttributes.position){const n=e.vertexAttributes.position.length/3,l=new Uint32Array(n),s=t.position/3;for(let e=0;e<n;e++)l[e]=e+s;const i=new o({faces:l});c(e,t,i),r.push(i)}}function f(e,t,n,r,o){if(!t)return;const l=t.position;if(!l)return;const s=t[e],i=n[e];if(null==s){let t=r[e];const n=p[e];if(null!=i){for(let e=0;e<l.length;e+=3)for(let e=0;e<n;e++)i[t++]=o;r[e]=t}}else null!=i&&null!=s&&(function(e,t,n,r,o){for(let l=0;l<o;l++)n[r++]=e[t++]}(s,0,i,r[e],s.length),r[e]+=s.length)}const p={position:3,normal:3,tangent:4,uv:2,color:4};e.merge=function(e,t){if(0===e.length)return a().error("merge()","Must specify one more geometries to merge"),null;const o=e[0].spatialReference;for(const t of e){if(!t.spatialReference.equals(o))return a().error("merge()","Geometries must all be in the same spatial reference"),null;if(!t.loaded)return a().error("merge()","Geometries must all be loaded before merging"),null}const c=function(e){let t=null,o=null,l=!0,s=!0,i=null;const c=r.create();let u=0;for(const r of e){const{vertexSpace:e,transform:f}=r;if(null==o){o=e;const t=o.origin;t&&(i=t)}if(o.type!==e.type)return a().error("merge()",`Inconsistent mesh vertex space for provided geometries. One was ${o.type} while another is ${e.type}. Unable to merge geometries.`),null;null==t||null!=f&&f.equals(t)||(l=!1),null!=f&&null==t&&(t=f);const p=e.origin;p&&(i&&!n.equals(p,i)&&(s=!1),u++,n.add(c,c,p))}if(null==o)throw new Error;const f=o.clone();if(null==f.origin)return{rebake:!1,vertexSpace:f};if(s&&l)return{rebake:!1,vertexSpace:f,transform:t?.clone()};const p=n.scale(c,c,1/u);return f.origin=p,{rebake:!0,vertexSpace:f}}(e);if(null==c)return null;const g=function(e){let t=0,n=0,r=0,o=0,s=0;const i=function(e){let t=!1,n=!1,r=!1,o=!1;for(const l of e){const e=l.vertexAttributes;if(e?.position&&(e.uv&&(t=!0),e.normal&&(n=!0),e.tangent&&(o=!0),e.color&&(r=!0),n&&t&&r&&o))break}return{normal:n,uv:t,color:r,tangent:o}}(e);for(const l of e){const e=l.vertexAttributes;e?.position&&(t+=e.position.length,i.uv&&(n+=e.position.length/p.position*p.uv),i.normal&&(r+=e.position.length/p.position*p.normal),i.color&&(o+=e.position.length/p.position*p.color),i.tangent&&(s+=e.position.length/p.position*p.tangent))}return new l.MeshVertexAttributes({position:new Float64Array(t),uv:n?new Float32Array(n):null,normal:r?new Float32Array(r):null,tangent:s?new Float32Array(s):null,color:o?new Uint8Array(o):null})}(e),m=[],v={position:0,uv:0,normal:0,tangent:0,color:0},h=s.addMeshMaterialCloneContext(s.addMeshTextureCloneContext()),x=s.getMeshMaterialCloneContext(h);for(const n of e){const e=c.rebake?i.convertVertexSpace(n,c.vertexSpace,{allowBufferReuse:!0}):n.vertexAttributes;if(!e)return a().error("merge()","Failed to convert vertex space due to projection errors"),null;if(t&&t.reuseMaterials&&n.components)for(const e of n.components)e.material&&x?.materialMap?.set(e.material,e.material);u(n,v,h,m),f("position",e,g,v,0),f("normal",e,g,v,0),f("tangent",e,g,v,0),f("uv",n.vertexAttributes,g,v,0),f("color",n.vertexAttributes,g,v,255)}return{vertexAttributes:g,components:m,vertexSpace:c.vertexSpace,transform:c.rebake?null:c.transform,spatialReference:o}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});