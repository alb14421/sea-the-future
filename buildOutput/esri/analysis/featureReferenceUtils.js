// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../chunks/vec32","../core/libs/gl-matrix-2/factories/vec3f64","../geometry/support/ray","../views/3d/webgl-engine/lib/intersectorUtilsConversions"],function(e,t,r,n,l){"use strict";function u(e){if(null==e)return null;const t=null!=e.layer?e.layer.id:"";let r=null;return r=null!=e.objectId?e.objectId:null!=e.layer&&"objectIdField"in e.layer&&null!=e.layer.objectIdField&&null!=e.attributes?e.attributes[e.layer.objectIdField]:e.uid,null==r?null:`o-${t}-${r}`}const o={json:{write:{writer:function(e,t){null!=e?.layer?.objectIdField&&null!=e.attributes&&(t.feature={layerId:e.layer.id,objectId:e.attributes[e.layer.objectIdField]})},target:{"feature.layerId":{type:[Number,String],isRequired:!0},"feature.objectId":{type:[Number,String],isRequired:!0}}},origins:{"web-scene":{read:function(e){if(null!=e.layerId&&null!=e.objectId)return{uid:null,layer:{id:e.layerId,objectIdField:"ObjectId"},attributes:{ObjectId:e.objectId}}}}}},clonable:"reference"};function a(e,t,r){if(l.hasLod(e)){const n=l.getIntersectedFeatureBSRadius(e,t);if(null!=n)return Math.min(n*c,r)}return 1e-5*r}const c=.05,i=n.create(),s=r.create();e.featureReferenceEquals=function(e,t){return u(e)===u(t)},e.featureReferenceProperty=o,e.getFeatureId=u,e.updatePointsFromFeatureReference=function(e,o,c,d){const{sceneIntersectionHelper:f}=e,{observer:b,observerFeatureId:I,targetFeatureId:g,target:y}=c;if(null==I&&null==g)return;d||(d=e=>e),t.sub(s,b,y);const j=t.length(s);t.scaleAndAdd(s,b,s,1/j);const m=n.fromPoints(s,y,i);o.options.store=2,f.intersectToolIntersectorRay(m,o);let p=null,S=null,F=null,R=null;for(const t of o.results.all){const r=l.toGraphic(t,e);if(null==r||null==t.distanceInRenderSpace)continue;const n=u(r);null!=n&&(null!=I&&n===I&&(p??=d(a(t,e,j)),t.distanceInRenderSpace-1<p&&(F=t)),null!=g&&n===g&&(S??=d(a(t,e,j)),null==R&&t.distanceInRenderSpace-1<j&&j-t.distanceInRenderSpace+1<S&&(R=t)))}const{observerAdjusted:v,targetAdjusted:N}=c;F?.getIntersectionPoint(v)?c.observerSurfaceNormal=F.getTransformedNormal(r.create()):c.observerSurfaceNormal=null,R?.getIntersectionPoint(N)?c.targetSurfaceNormal=R.getTransformedNormal(r.create()):c.targetSurfaceNormal=null},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});