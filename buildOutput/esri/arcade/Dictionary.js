// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["./ArcadeDate","./deepClone","./executionError","../chunks/languageUtils","../geometry/Geometry","../support/guards"],function(t,e,s,r,n,i){"use strict";function o(t,e,s=!1,n=!1){if(null==t)return null;if(i.isNumber(t)||i.isBoolean(t)||i.isString(t)||r.isDate(t)||r.isDateOnly(t)||r.isTime(t))return t;if(i.isArray(t)){const r=[];for(const i of t)r.push(o(i,e,s,n));return r}if(n&&r.isGeometry(t))return t;const u=new a;u.immutable=!1;for(const[r,i]of Object.entries(t))void 0!==i&&u.setField(r,o(i,e,s,n));return u.immutable=s,u}class a{constructor(t){this.declaredClass="esri.arcade.Dictionary",this.plain=!1,this.immutable=!0,t instanceof a?this.attributes=t.attributes:null==t?this.attributes=Object.create(null):null!=Object.getPrototypeOf(t)?this.attributes={__proto__:null,...t}:this.attributes=t}static containerEntry(t,e){return new a({__proto__:null,key:t,value:e})}static textFormatting(){const t=new a({__proto__:null,newline:"\n",tab:"\t",singlequote:"'",doublequote:'"',forwardslash:"/",backwardslash:"\\"});return t.immutable=!1,t}field(t){const e=t.toLowerCase(),r=this.attributes[t];if(void 0!==r)return r;for(const t in this.attributes)if(t.toLowerCase()===e)return this.attributes[t];throw new s.ArcadeExecutionError(null,"FieldNotFound",null,{key:t})}setField(e,n){if(this.immutable)throw new s.ArcadeExecutionError(null,"Immutable",null);if(r.isFunctionParameter(n))throw new s.ArcadeExecutionError(null,"NoFunctionInDictionary",null);const i=e.toLowerCase();if(n instanceof Date&&(n=t.ArcadeDate.dateJSToArcadeDate(n)),void 0===this.attributes[e]){for(const t in this.attributes)if(t.toLowerCase()===i)return void(this.attributes[t]=n);this.attributes[e]=n}else this.attributes[e]=n}hasField(t){const e=t.toLowerCase();if(void 0!==this.attributes[t])return!0;for(const t in this.attributes)if(t.toLowerCase()===e)return!0;return!1}keys(){let t=[];for(const e in this.attributes)t.push(e);return t=t.sort(),t}castToText(t=!1){return r.castRecordToText(this.attributes,{useNumbersForDates:t})}static convertObjectToArcadeDictionary(t,e,s=!0,r=!1){const n=new a;n.immutable=!1;for(const i in t){const a=t[i];void 0!==a&&n.setField(i.toString(),o(a,e,s,r))}return n.immutable=s,n}static convertJsonToArcade(t,e,s=!1,r=!1){return o(t,e,s,r)}castAsJson(t=null){const e=Object.create(null);for(let s in this.attributes){const n=this.attributes[s];void 0!==n&&(t?.keyTranslate&&(s=t.keyTranslate(s)),e[s]=r.castAsJson(n,t))}return e}async castDictionaryValueAsJsonAsync(t,e,s,n=null,i){const o=await r.castAsJsonAsync(s,n,i);return t[e]=o,o}async castAsJsonAsync(e=null,s=null){const i=Object.create(null),o=[];for(let a in this.attributes){const u=this.attributes[a];s?.keyTranslate&&(a=s.keyTranslate(a)),void 0!==u&&(r.isSimpleType(u)||u instanceof n||u instanceof t.ArcadeDate?i[a]=r.castAsJson(u,s):o.push(this.castDictionaryValueAsJsonAsync(i,a,u,e,s)))}return o.length>0&&await Promise.all(o),i}deepClone(){const t=new a;t.immutable=!1;for(const s of this.keys())t.setField(s,e.deepClone(this.field(s)));return t}}return a});