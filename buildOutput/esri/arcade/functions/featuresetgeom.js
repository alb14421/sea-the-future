// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../executionError","../kernel","../../chunks/languageUtils","../featureset/actions/SpatialFilter","../featureset/sources/Empty","../geometry/operatorsWorkerConnection"],function(e,t,r,n,i,o,s){"use strict";function a(e){return async(a,u,c)=>{if(n.pcCheck(c,2,2,a,u),null===(c=n.autoCastFeatureToGeometry(c))[0]&&null===c[1])return!1;if(n.isFeatureSet(c[0])){if(n.isGeometry(c[1]))return new i({parentfeatureset:c[0],relation:e,relationGeom:c[1]});if(null===c[1])return new o({parentfeatureset:c[0]});throw new t.ArcadeExecutionError(a,"InvalidParameter",u)}if(n.isGeometry(c[0])){if(n.isGeometry(c[1])){switch(e){case"esriSpatialRelEnvelopeIntersects":{const e=r.shapeExtent(c[0]),t=r.shapeExtent(c[1]);return null!=e&&null!=t&&s.invokeRemoteGeometryOp("intersects",[e.toJSON(),t.toJSON()])}case"esriSpatialRelIntersects":return s.invokeRemoteGeometryOp("intersects",[c[0].toJSON(),c[1].toJSON()]);case"esriSpatialRelContains":return s.invokeRemoteGeometryOp("contains",[c[0].toJSON(),c[1].toJSON()]);case"esriSpatialRelOverlaps":return s.invokeRemoteGeometryOp("overlaps",[c[0].toJSON(),c[1].toJSON()]);case"esriSpatialRelWithin":return s.invokeRemoteGeometryOp("within",[c[0].toJSON(),c[1].toJSON()]);case"esriSpatialRelTouches":return s.invokeRemoteGeometryOp("touches",[c[0].toJSON(),c[1].toJSON()]);case"esriSpatialRelCrosses":return s.invokeRemoteGeometryOp("crosses",[c[0].toJSON(),c[1].toJSON()])}throw new t.ArcadeExecutionError(a,"InvalidParameter",u)}if(n.isFeatureSet(c[1]))return new i({parentfeatureset:c[1],relation:e,relationGeom:c[0]});if(null===c[1])return!1;throw new t.ArcadeExecutionError(a,"InvalidParameter",u)}if(null===c[0]){if(n.isFeatureSet(c[1]))return new o({parentfeatureset:c[1]});if(n.isGeometry(c[1])||null===c[1])return!1}throw new t.ArcadeExecutionError(a,"InvalidParameter",u)}}e.registerFunctions=function(e){"async"===e.mode&&(e.functions.intersects=function(t,r){return e.standardFunctionAsync(t,r,a("esriSpatialRelIntersects"))},e.functions.envelopeintersects=function(t,r){return e.standardFunctionAsync(t,r,a("esriSpatialRelEnvelopeIntersects"))},e.signatures.push({name:"envelopeintersects",min:2,max:2}),e.functions.contains=function(t,r){return e.standardFunctionAsync(t,r,a("esriSpatialRelContains"))},e.functions.overlaps=function(t,r){return e.standardFunctionAsync(t,r,a("esriSpatialRelOverlaps"))},e.functions.within=function(t,r){return e.standardFunctionAsync(t,r,a("esriSpatialRelWithin"))},e.functions.touches=function(t,r){return e.standardFunctionAsync(t,r,a("esriSpatialRelTouches"))},e.functions.crosses=function(t,r){return e.standardFunctionAsync(t,r,a("esriSpatialRelCrosses"))},e.functions.relate=function(r,i){return e.standardFunctionAsync(r,i,async(e,a,u)=>{if(u=n.autoCastFeatureToGeometry(u),n.pcCheck(u,3,3,r,i),n.isGeometry(u[0])&&n.isGeometry(u[1]))return s.invokeRemoteGeometryOp("relate",[u[0].toJSON(),u[1].toJSON(),n.toString(u[2])]);if(n.isGeometry(u[0])&&null===u[1])return!1;if(n.isGeometry(u[1])&&null===u[0])return!1;if(n.isFeatureSet(u[0])&&null===u[1])return new o({parentfeatureset:u[0]});if(n.isFeatureSet(u[1])&&null===u[0])return new o({parentfeatureset:u[1]});if(n.isFeatureSet(u[0])&&n.isGeometry(u[1]))return u[0].relate(u[1],n.toString(u[2]));if(n.isFeatureSet(u[1])&&n.isGeometry(u[0]))return u[1].relate(u[0],n.toString(u[2]));if(null===u[0]&&null===u[1])return!1;throw new t.ArcadeExecutionError(r,"InvalidParameter",i)})})},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});