// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["./ArcadeDate","./deepClone","./Dictionary","./executionError","../chunks/languageUtils","./geometry/constructors","../core/sql/DateOnly","../core/sql/TimeOnly","../geometry/Geometry","../geometry/support/jsonUtils","../layers/graphics/featureConversionUtils","../layers/support/FieldsIndex","../support/guards"],function(e,t,i,s,r,a,n,o,l,u,d,c,y){"use strict";class f{constructor(){this.arcadeDeclaredClass="esri.arcade.Feature",this._optimizedGeomDefinition=null,this._geometry=null,this.attributes=null,this._layer=null,this._fieldTypesFixed=!0,this.fieldsIndex=null,this.contextTimeZone=null,this.immutable=!0,this._fieldsToFixDataTypes=null,this.immutable=!0}static createFromGraphic(e,t){const i=new f;return i.contextTimeZone=t??null,i._geometry=null!=e.geometry?e.geometry:null,void 0===e.attributes||null===e.attributes?i.attributes={}:i.attributes=e.attributes,e._sourceLayer?(i._layer=e._sourceLayer,i._fieldTypesFixed=!1):e._layer?(i._layer=e._layer,i._fieldTypesFixed=!1):e.layer&&"fields"in e.layer?(i._layer=e.layer,i._fieldTypesFixed=!1):e.sourceLayer&&"fields"in e.sourceLayer&&(i._layer=e.sourceLayer,i._fieldTypesFixed=!1),i._layer&&!i._fieldTypesFixed&&(i.fieldsIndex=this.hydrateFieldsIndex(i._layer)),i}static createFromArcadeFeature(e){if(e instanceof f){const t=new f;return t._fieldTypesFixed=e._fieldTypesFixed,t.attributes=e.attributes,t._geometry=e._geometry,t._optimizedGeomDefinition=e._optimizedGeomDefinition,e._layer&&(t._layer=e._layer),t.fieldsIndex=e.fieldsIndex,t.contextTimeZone=e.contextTimeZone,t}const t={};for(const i of e.keys())t[i]=e.field(i);return f.createFromGraphicLikeObject(e.geometry(),t,e.fullSchema(),e.contextTimeZone)}static createFromOptimisedFeature(e,t,i){const s=new f;return s._geometry=e.geometry?{geometry:e.geometry}:null,s._optimizedGeomDefinition=i,s.attributes=e.attributes||{},s._layer=t,s._fieldTypesFixed=!1,s}static createFromArcadeDictionary(e,t){const s=new f;return s.attributes=e.field("attributes"),null!==s.attributes&&s.attributes instanceof i?(s.attributes=s.attributes.attributes,null===s.attributes&&(s.attributes={})):s.attributes={},s._geometry=e.field("geometry"),null!==s._geometry&&(s._geometry instanceof i?s._geometry=a.constructGeometryFromDictionary(s._geometry,t):s._geometry instanceof l||(s._geometry=null)),s}static createFromGraphicLikeObject(e,t,i=null,s){const r=new f;return r.contextTimeZone=s??null,null===t&&(t={}),r.attributes=t,r._geometry=null!=e?e:null,r._layer=i,r._layer&&(r._fieldTypesFixed=!1,r.fieldsIndex=this.hydrateFieldsIndex(r._layer)),r}static hydrateFieldsIndex(e){return null===e?null:r.isFeatureSet(e)?e.getFieldsIndex():e.fieldsIndex?e.fieldsIndex:c.fromLayerJSON({datesInUnknownTimezone:e.datesInUnknownTimezone,fields:e.fields,timeInfo:e.timeInfo,editFieldsInfo:e.editFieldsInfo,dateFieldsTimeReference:e.dateFieldsTimeReference??{timeZone:"UTC",respectsDaylightSaving:!1}})}repurposeFromGraphicLikeObject(e,t,i=null){null===t&&(t={}),this.attributes=t,this._geometry=e??null,this._layer=i,this._layer?this._fieldTypesFixed=!1:this._fieldTypesFixed=!0}castToText(e=!1){!1===this._fieldTypesFixed&&this._fixFieldTypes();const t=r.castRecordToText(this.attributes,{useNumbersForDates:e});return'{"geometry":'+(null===this.geometry()?"null":r.toStringExplicit(this.geometry()))+',"attributes":'+t+"}"}_fixFieldTypes(){if(this._fieldsToFixDataTypes&&this._fieldsToFixDataTypes?.length>0)return this._fixAllFields(this._fieldsToFixDataTypes),void(this._fieldTypesFixed=!0);const e=[],t=this._layer.fields;for(let i=0;i<t.length;i++){const s=t[i],{name:r,type:a}=s;switch(a){case"date":case"esriFieldTypeDate":e.push({field:r,dataType:"date"});break;case"date-only":case"esriFieldTypeDateOnly":e.push({field:r,dataType:"date-only"});break;case"time-only":case"esriFieldTypeTimeOnly":e.push({field:r,dataType:"time-only"});break;case"timestamp-offset":case"esriFieldTypeTimestampOffset":e.push({field:r,dataType:"timestamp-offset"});break;case"geometry":case"esriFieldTypeGeometry":e.push({field:r,dataType:"geometry"})}}this._fieldsToFixDataTypes=e,e.length>0&&this._fixAllFields(e),this._fieldTypesFixed=!0}isUnknownDateTimeField(e){return"unknown"===this.fieldsIndex?.getTimeZone(e)}_fixAllFields(t){this.attributes={...this.attributes};const i=this.contextTimeZone??"system";for(let s=0;s<t.length;s++){const a=t[s].field,l=t[s].dataType;let u=this.attributes[a];if(void 0===u){for(const t in this.attributes)if(t.toLowerCase()===a.toLowerCase()){if(u=this.attributes[t],null!==u){if("time-only"===l){r.isTime(u)||(this.attributes[t]=o.TimeOnly.fromReader(u.toString()));break}if("date-only"===l){r.isDateOnly(u)||(this.attributes[t]=n.DateOnly.fromReader(u.toString()));break}if("timestamp-offset"===l){r.isDate(u)||(this.attributes[t]=e.ArcadeDate.fromReaderAsTimeStampOffset(u.toString()));break}if("date"===l){const s=this.isUnknownDateTimeField(t);u instanceof Date?this.attributes[t]=s?e.ArcadeDate.unknownDateJSToArcadeDate(u):e.ArcadeDate.dateJSAndZoneToArcadeDate(u,i):r.isDate(u)||(this.attributes[t]=s?e.ArcadeDate.unknownEpochToArcadeDate(u):e.ArcadeDate.epochToArcadeDate(u,i))}"geometry"===l&&(this.attributes[t]=null)}break}}else if(null!==u){if("time-only"===l){r.isTime(u)?this.attributes[a]=u:this.attributes[a]=o.TimeOnly.fromReader(u.toString());continue}if("date-only"===l){r.isDateOnly(u)?this.attributes[a]=u:this.attributes[a]=n.DateOnly.fromReader(u.toString());continue}if("timestamp-offset"===l){r.isDate(u)?this.attributes[a]=u:this.attributes[a]=e.ArcadeDate.fromReaderAsTimeStampOffset(u.toString());continue}if("date"===l){const t=this.isUnknownDateTimeField(a);r.isDate(u)?this.attributes[a]=u:u instanceof Date?this.attributes[a]=t?e.ArcadeDate.unknownDateJSToArcadeDate(u):e.ArcadeDate.dateJSAndZoneToArcadeDate(u,i):this.attributes[a]=t?e.ArcadeDate.unknownEpochToArcadeDate(u):e.ArcadeDate.epochToArcadeDate(u,i);continue}if("geometry"===l){this.attributes[a]=null;continue}}}}geometry(){return null===this._geometry||this._geometry instanceof l||(this._optimizedGeomDefinition?(this._geometry=u.fromJSON(d.convertToGeometry(this._geometry,this._optimizedGeomDefinition.geometryType,this._optimizedGeomDefinition.hasZ,this._optimizedGeomDefinition.hasM)),this._geometry.spatialReference=this._optimizedGeomDefinition.spatialReference):this._geometry=u.fromJSON(this._geometry)),this._geometry}field(e){this._fieldTypesFixed||this._fixFieldTypes();const t=this.attributes[e];if(void 0!==t)return t;const i=e.toLowerCase();for(const e in this.attributes)if(e.toLowerCase()===i)return this.attributes[e];if(this._hasFieldDefinition(i))return null;throw new s.ArcadeExecutionError(null,"FieldNotFound",null,{key:e})}_hasFieldDefinition(e){if(null===this._layer)return!1;for(let t=0;t<this._layer.fields.length;t++)if(this._layer.fields[t].name.toLowerCase()===e)return!0;return!1}setField(t,i){if(this.immutable)throw new s.ArcadeExecutionError(null,"Immutable",null);if(i instanceof Date&&(i=this.isUnknownDateTimeField(t)?e.ArcadeDate.unknownDateJSToArcadeDate(i):e.ArcadeDate.dateJSToArcadeDate(i)),!1===r.isSimpleType(i))throw new s.ArcadeExecutionError(null,"TypeNotAllowedInFeature",null);const a=t.toLowerCase();if(void 0===this.attributes[t]){for(const e in this.attributes)if(e.toLowerCase()===a)return void(this.attributes[e]=i);this.attributes[t]=i}else this.attributes[t]=i}hasField(e){const t=e.toLowerCase();if(void 0!==this.attributes[e])return!0;for(const e in this.attributes)if(e.toLowerCase()===t)return!0;return!!this._hasFieldDefinition(t)}keys(){let e=[];const t={};for(const i in this.attributes)e.push(i),t[i.toLowerCase()]=1;if(null!==this._layer)for(let i=0;i<this._layer.fields.length;i++){const s=this._layer.fields[i];1!==t[s.name.toLowerCase()]&&e.push(s.name)}return e=e.sort(),e}static parseAttributesFromDictionary(e){const t={};for(const i in e.attributes){const a=e.attributes[i];if(!r.isSimpleType(a))throw new s.ArcadeExecutionError(null,"InvalidParameter",null);t[i]=a}return t}static fromJson(e,t){let i=null;null!==e.geometry&&void 0!==e.geometry&&(i=u.fromJSON(e.geometry));const a={};if(null!==e.attributes&&void 0!==e.attributes)for(const t in e.attributes){const i=e.attributes[t];if(null===i)a[t]=i;else{if(!(y.isString(i)||y.isNumber(i)||y.isBoolean(i)||r.isDate(i)||r.isTime(i)||r.isDateOnly(i)))throw new s.ArcadeExecutionError(null,"InvalidParameter",null);a[t]=i}}return f.createFromGraphicLikeObject(i,a,null,t??null)}fullSchema(){return this._layer}gdbVersion(){if(null===this._layer)return"";const e=this._layer.gdbVersion;return void 0===e?"":""===e&&this._layer.capabilities?.isVersioned?"SDE.DEFAULT":e}castAsJson(e){const t={attributes:{},geometry:!0===e?.keepGeometryType?this.geometry():this.geometry()?.toJSON()??null};for(const i in this.attributes){const s=this.attributes[i];void 0!==s&&(t.attributes[i]=r.castAsJson(s,e))}return t}async castAsJsonAsync(e=null,t){return this.castAsJson(t)}}return t.configureDeepClone(f),f});