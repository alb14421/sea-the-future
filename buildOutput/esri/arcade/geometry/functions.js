// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../Dictionary","../enum","../executionError","../../chunks/languageUtils","../functions/centroid","../functions/measures","../../core/unitUtils","../../geometry/Geometry","../../geometry/Point","../../geometry/Polyline","../../support/guards"],function(e,n,t,r,o,i,a,l,u,c,s,f){"use strict";const d=new t.StringEnum(["geodesic","great-elliptic","loxodrome","normal-section","shape-preserving"]),m=new t.StringEnum(["geometric","labelPoint"]),g=new t.StringEnum(["round","bevel","miter","square"]);e.commonRelationsCheck=function(e,n,t){if(o.pcCheck(e,2,2,n,t),e[0]instanceof u&&e[1]instanceof u);else if(e[0]instanceof u&&null===e[1]);else if(e[1]instanceof u&&null===e[0]);else if(null!==e[0]||null!==e[1])throw new r.ArcadeExecutionError(n,"InvalidParameter",t)},e.distanceToCoordinateFunc=(e,t,i)=>{if(i=o.autoCastFeatureToGeometry(i),o.pcCheck(i,2,2,e,t),null===i[0])return null;let l=i[0];if((f.isArray(i[0])||o.isImmutableArray(i[0]))&&(l=o.autoCastArrayOfPointsToPolyline(i[0],e.spatialReference)),null===l)return null;if(!(l instanceof u))throw new r.ArcadeExecutionError(e,"InvalidParameter",t);if(!(l instanceof s))throw new r.ArcadeExecutionError(e,"InvalidParameter",t);if(!f.isNumber(i[1]))throw new r.ArcadeExecutionError(e,"InvalidParameter",t);const c=a.distanceToCoordinate(l,i[1]);return c?n.convertObjectToArcadeDictionary(c,o.defaultTimeZone(e),!1,!0):null},e.measureToCoordinateFunc=(e,t,i)=>{if(i=o.autoCastFeatureToGeometry(i),o.pcCheck(i,2,2,e,t),null===i[0])return null;let l=i[0];if((f.isArray(i[0])||o.isImmutableArray(i[0]))&&(l=o.autoCastArrayOfPointsToPolyline(i[0],e.spatialReference)),null===l)return null;if(!(l instanceof u))throw new r.ArcadeExecutionError(e,"InvalidParameter",t);if(!(l instanceof s))throw new r.ArcadeExecutionError(e,"InvalidParameter",t);if(!f.isNumber(i[1]))throw new r.ArcadeExecutionError(e,"InvalidParameter",t);const c=a.measureToCoordinate(l,i[1]);return c?n.convertObjectToArcadeDictionary(c,o.defaultTimeZone(e),!1,!0):null},e.planarLength3D=function(e){if("polygon"!==e.type&&"polyline"!==e.type&&"extent"!==e.type)return 0;let n=1;(e.spatialReference.vcsWkid||e.spatialReference.latestVcsWkid)&&(n=i.getMetersPerVerticalUnitForSR(e.spatialReference)/l.getMetersPerUnitForSR(e.spatialReference));let t=0;if("polyline"===e.type)for(const r of e.paths)for(let e=1;e<r.length;e++)t+=i.segmentLength3d(r[e],r[e-1],n);else if("polygon"===e.type)for(const r of e.rings){for(let e=1;e<r.length;e++)t+=i.segmentLength3d(r[e],r[e-1],n);(r[0][0]!==r[r.length-1][0]||r[0][1]!==r[r.length-1][1]||void 0!==r[0][2]&&r[0][2]!==r[r.length-1][2])&&(t+=i.segmentLength3d(r[0],r[r.length-1],n))}else"extent"===e.type&&(t+=2*i.segmentLength3d([e.xmin,e.ymin,0],[e.xmax,e.ymin,0],n),t+=2*i.segmentLength3d([e.xmin,e.ymin,0],[e.xmin,e.ymax,0],n),t*=2,t+=4*Math.abs(o.defaultUndefined(e.zmax,0)*n-o.defaultUndefined(e.zmin,0)*n));return t},e.pointToCoordinateFunc=(e,t,i)=>{if(i=o.autoCastFeatureToGeometry(i),o.pcCheck(i,2,2,e,t),null===i[0])return null;let l=i[0];if((f.isArray(i[0])||o.isImmutableArray(i[0]))&&(l=o.autoCastArrayOfPointsToPolyline(i[0],e.spatialReference)),null===l)return null;if(!(l instanceof u))throw new r.ArcadeExecutionError(e,"InvalidParameter",t);if(!(l instanceof s))throw new r.ArcadeExecutionError(e,"InvalidParameter",t);const d=i[1];if(null===d)return null;if(!(d instanceof c))throw new r.ArcadeExecutionError(e,"InvalidParameter",t);const m=a.pointToCoordinate(l,d);return m?n.convertObjectToArcadeDictionary(m,o.defaultTimeZone(e),!1,!0):null},e.toCentroidAlgorithm=function(e){return null==e?"geometric":m.get(o.toString(e))},e.toCurveType=function(e){return null==e?"geodesic":d.get(o.toString(e))},e.toOffsetJoinType=function(e){return null==e?"round":g.lookup(o.toString(e))??"round"},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});