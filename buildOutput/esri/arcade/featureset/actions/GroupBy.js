// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../Graphic","../../enum","../../../chunks/languageUtils","./Adapted","./AttributeFilter","./OrderBy","../support/errorsupport","../support/FeatureSet","../support/IdSet","../support/OrderbyClause","../support/shared","../support/sqlUtils","../support/StatsField","../../../core/MD5","../../../core/sql/AggregateFunctions","../../../core/sql/DateOnly","../../../core/sql/SqlTimestampOffset","../../../core/sql/TimeOnly","../../../core/sql/WhereClause","../../../geometry/SpatialReference","../../../layers/support/Field","../../../layers/support/FieldsIndex"],function(e,t,i,s,n,a,r,l,o,d,u,f,h,c,p,g,_,y,m,F,b,w){"use strict";const I=new t.StringEnum(["MIN","MAX","VAR","STDDEV","COUNT","SUM","AVG"],[["VARIANCE","VAR"],["AVERAGE","AVG"],["MEAN","AVG"],["STDEV","STDDEV"]]);class S extends l{constructor(e){super(e),this._decodedStatsfield=[],this._decodedGroupbyfield=[],this._candosimplegroupby=!0,this.phsyicalgroupbyfields=[],this.objectIdField="ROW__ID",this._internalObjectIdField="ROW__ID",this._adaptedFields=[],this.declaredClass="esri.arcade.featureset.actions.Aggregate",this._uniqueIds=1,this._maxQuery=10,this._maxProcessing=10,this._parent=e.parentfeatureset,this._config=e}isTable(){return!0}async _getSet(e){if(null===this._wset){const t=await this._getFilteredSet("",null,null,null,e);return this._wset=t,this._wset}return this._wset}_isInFeatureSet(){return 0}_nextUniqueName(e){for(;1===e["T"+this._uniqueIds.toString()];)this._uniqueIds++;const t="T"+this._uniqueIds.toString();return e[t]=1,t}_convertToEsriFieldType(e){return e}_initialiseFeatureSet(){const e={};let t=!1,i=1;const n=this._parent?this._parent.getFieldsIndex():new w([]);for(this.objectIdField="ROW__ID",this.globalIdField="";!1===t;){let e=!1;for(let t=0;t<this._config.groupbyfields.length;t++)if(this._config.groupbyfields[t].name.toLowerCase()===this.objectIdField.toLowerCase()){e=!0;break}if(!1===e)for(let t=0;t<this._config.statsfields.length;t++)if(this._config.statsfields[t].name.toLowerCase()===this.objectIdField.toLowerCase()){e=!0;break}!1===e?t=!0:(this.objectIdField="ROW__ID"+i.toString(),i++)}for(const e of this._config.statsfields){const t=new h;t.field=e.name,t.tofieldname=e.name,t.workingexpr=e.expression instanceof m?e.expression:m.create(e.expression,{fieldsIndex:n,timeZone:this.dateFieldsTimeZoneDefaultUTC}),t.typeofstat=I.lookup(e.statistic)??"COUNT",this._decodedStatsfield.push(t)}this._decodedGroupbyfield=[];for(const e of this._config.groupbyfields){const t={name:e.name,singlefield:null,tofieldname:e.name,expression:e.expression instanceof m?e.expression:m.create(e.expression,{fieldsIndex:n,timeZone:this.dateFieldsTimeZoneDefaultUTC}),sqlType:null};this._decodedGroupbyfield.push(t)}if(null!==this._parent){this.geometryType=this._parent.geometryType,this.spatialReference=this._parent.spatialReference,this.hasM=this._parent.hasM,this.hasZ=this._parent.hasZ,this.typeIdField="";for(const t of this._parent.fields)e[t.name.toUpperCase()]=1;this.types=null,this.subtypes=null,this.subtypeField=""}else this.geometryType=u.layerGeometryEsriConstants.point,this.typeIdField="",this.types=null,this.subtypes=null,this.subtypeField="",this.spatialReference=new F({wkid:4326});this.fields=[];const a=new h;a.field=this._nextUniqueName(e),a.tofieldname=this.objectIdField,a.workingexpr=m.create(this._parent.objectIdField,{fieldsIndex:this._parent.getFieldsIndex(),timeZone:this.dateFieldsTimeZoneDefaultUTC}),a.typeofstat="MIN",this._decodedStatsfield.push(a);for(const t of this._decodedGroupbyfield){const i=new b;if(t.name=this._nextUniqueName(e),i.name=t.tofieldname,i.alias=i.name,f.isSingleField(t.expression)){const e=this._parent.getField(f.toWhereClause(t.expression,0));if(!e)throw new r.FeatureSetError("AggregationFieldNotFound");t.name=e.name,t.singlefield=e.name,this.phsyicalgroupbyfields.push(e.name),i.type=e.type,t.sqlType=e.type}else{i.type=this._convertToEsriFieldType(f.predictType(t.expression,this._parent.fields));const e=new b;e.name=t.name,e.alias=e.name,this.phsyicalgroupbyfields.push(t.name),this._adaptedFields.push(new s.SqlExpressionAdapted(e,t.expression)),this._candosimplegroupby=!1,t.sqlType=i.type}this.fields.push(i)}if(this._adaptedFields.length>0)for(const e of this._parent.fields)this._adaptedFields.push(new s.OriginalField(e));for(let t=0;t<this._decodedStatsfield.length;t++){const i=new b;let s=null;const n=this._decodedStatsfield[t];n.field=this._nextUniqueName(e),n.tofieldname===this.objectIdField&&(this._internalObjectIdField=n.field),i.name=n.tofieldname,i.alias=i.name;const a=null!==n.workingexpr&&f.isSingleField(n.workingexpr)?f.toWhereClause(n.workingexpr,0):"";switch(this._decodedStatsfield[t].typeofstat){case"SUM":if(""!==a){if(s=this._parent.getField(a),!s)throw new r.FeatureSetError("AggregationFieldNotFound");i.type=s.type}else i.type="double";break;case"MIN":case"MAX":if(""!==a){if(s=this._parent.getField(a),!s)throw new r.FeatureSetError("AggregationFieldNotFound");i.type=s.type}else i.type="double";break;case"COUNT":i.type="integer";break;case"STDDEV":case"VAR":case"AVG":if(""!==a&&(s=this._parent.getField(a),!s))throw new r.FeatureSetError("AggregationFieldNotFound");i.type="double"}this.fields.push(i)}}async _canDoAggregates(){return!1}async _getFeatures(e,t,i,s){-1!==t&&this._featureCache[t];const n=this._maxQuery;return!0===this._checkIfNeedToExpandKnownPage(e,n)?(await this._expandPagedSet(e,n,0,0,s),this._getFeatures(e,t,i,s)):"success"}async _getFilteredSet(e,t,i,r,l){if(""!==e)return new o([],[],!0,null);let u=null;const h={ordered:!1,nowhereclause:!1};if(await this._ensureLoaded(),null!==i)for(let e=0;e<this._decodedStatsfield.length;e++)if(!0===f.scanForField(i,this._decodedStatsfield[e].tofieldname)){h.nowhereclause=!0,i=null;break}if(null!==r){h.ordered=!0;for(let e=0;e<this._decodedStatsfield.length;e++)if(!0===r.scanForField(this._decodedStatsfield[e].tofieldname)){r=null,h.ordered=!1;break}if(null!==r)for(const e of this._decodedGroupbyfield)if(null===e.singlefield&&!0===r.scanForField(e.tofieldname)){r=null,h.ordered=!1;break}}if(!1!==this._candosimplegroupby&&await this._parent._canDoAggregates(this.phsyicalgroupbyfields,this._decodedStatsfield,"",null,null)){let e=null;i&&(e=this._reformulateWhereClauseWithoutGroupByFields(i));let t=null;r&&(t=this._reformulateOrderClauseWithoutGroupByFields(r));const s=await this._parent._getAggregatePagesDataSourceDefinition(this.phsyicalgroupbyfields,this._decodedStatsfield,"",null,e,t,this._internalObjectIdField);return this._checkCancelled(l),u=!0===h.nowhereclause?new o(s._candidates.slice().concat(s._known.slice()),[],!0===h.ordered&&s._ordered,this._clonePageDefinition(s.pagesDefinition)):new o(s._candidates.slice(),s._known.slice(),!0===h.ordered&&s._ordered,this._clonePageDefinition(s.pagesDefinition)),u}let c=this._parent;if(this._adaptedFields.length>0&&(c=new s.AdaptedFeatureSet({parentfeatureset:this._parent,adaptedFields:this._adaptedFields,extraFilter:null})),!0===h.nowhereclause)u=new o(["GETPAGES"],[],!1,{aggregatefeaturesetpagedefinition:!0,resultOffset:0,resultRecordCount:this._maxQuery,internal:{fullyResolved:!1,workingItem:null,type:"manual",iterator:null,set:[],subfeatureset:new a({parentfeatureset:c,orderbyclause:new d(this.phsyicalgroupbyfields.join(",")+","+this._parent.objectIdField+" ASC")})}});else{let e=c;if(null!==i){let t=null;i&&(t=this._reformulateWhereClauseWithoutGroupByFields(i)),e=new n({parentfeatureset:e,whereclause:t})}u=new o(["GETPAGES"],[],!1,{aggregatefeaturesetpagedefinition:!0,resultOffset:0,resultRecordCount:this._maxQuery,internal:{fullyResolved:!1,workingItem:null,type:"manual",iterator:null,set:[],subfeatureset:new a({parentfeatureset:e,orderbyclause:new d(this.phsyicalgroupbyfields.join(",")+","+this._parent.objectIdField+" ASC")})}})}return u}_reformulateWhereClauseWithoutStatsFields(e){for(const t of this._decodedStatsfield)e=f.reformulateWithoutField(e,t.tofieldname,f.toWhereClause(t.workingexpr,0),this._parent.getFieldsIndex());return e}_reformulateWhereClauseWithoutGroupByFields(e){for(const t of this._decodedGroupbyfield)t.tofieldname!==t.name&&(e=f.reformulateWithoutField(e,t.tofieldname,f.toWhereClause(t.expression,0),this._parent.getFieldsIndex()));return e}_reformulateOrderClauseWithoutGroupByFields(e){const t=[];for(const e of this._decodedGroupbyfield)e.tofieldname!==e.name&&t.push({field:e.tofieldname,newfield:e.name});return t.length>0?e.replaceFields(t):e}_clonePageDefinition(e){return null===e?null:!0===e.aggregatefeaturesetpagedefinition?{aggregatefeaturesetpagedefinition:!0,resultRecordCount:e.resultRecordCount,resultOffset:e.resultOffset,internal:e.internal}:this._parent._clonePageDefinition(e)}async _refineSetBlock(e,t,i){return!0===this._checkIfNeedToExpandCandidatePage(e,this._maxQuery)?(await this._expandPagedSet(e,this._maxQuery,0,0,i),this._refineSetBlock(e,t,i)):(this._checkCancelled(i),e._candidates.length,this._refineKnowns(e,t),e._candidates.length,e._candidates.length,e)}_expandPagedSet(e,t,i,s,n){return this._expandPagedSetFeatureSet(e,t,i,s,n)}async _getPhysicalPage(t,i,s){if(!0===t.pagesDefinition.aggregatefeaturesetpagedefinition)return this._sequentialGetPhysicalItem(t,t.pagesDefinition.resultRecordCount,s,[]);const n=await this._getAgregagtePhysicalPage(t,i,s);for(const t of n){const i={geometry:t.geometry,attributes:{}},s={};for(const e in t.attributes)s[e.toLowerCase()]=t.attributes[e];for(const e of this._decodedGroupbyfield)i.attributes[e.tofieldname]=s[e.name.toLowerCase()];for(const e of this._decodedStatsfield)i.attributes[e.tofieldname]=s[e.field.toLowerCase()];this._featureCache[i.attributes[this.objectIdField]]=new e(i)}return n.length}_sequentialGetPhysicalItem(e,t,i,s){return new Promise((n,a)=>{null===e.pagesDefinition.internal.iterator&&(e.pagesDefinition.internal.iterator=e.pagesDefinition.internal.subfeatureset.iterator(i)),!0===e.pagesDefinition.internal.fullyResolved||0===t?n(s.length):this._nextAggregateItem(e,t,i,s,a=>{null===a?n(s.length):(t-=1,n(this._sequentialGetPhysicalItem(e,t,i,s)))},a)})}_nextAggregateItem(e,t,s,n,a,r){try{i.tick(e.pagesDefinition.internal.iterator.next()).then(i=>{if(null===i)if(null!==e.pagesDefinition.internal.workingItem){const t=this._calculateAndAppendAggregateItem(e.pagesDefinition.internal.workingItem);n.push(t),e.pagesDefinition.internal.workingItem=null,e.pagesDefinition.internal.set.push(t.attributes[this.objectIdField]),e.pagesDefinition.internal.fullyResolved=!0,a(null)}else e.pagesDefinition.internal.fullyResolved=!0,a(null);else{const l=this._generateAggregateHash(i);if(null===e.pagesDefinition.internal.workingItem)e.pagesDefinition.internal.workingItem={features:[i],id:l};else{if(l!==e.pagesDefinition.internal.workingItem.id){const s=this._calculateAndAppendAggregateItem(e.pagesDefinition.internal.workingItem);return n.push(s),e.pagesDefinition.internal.workingItem=null,e.pagesDefinition.internal.set.push(s.attributes[this.objectIdField]),t-=1,e.pagesDefinition.internal.workingItem={features:[i],id:l},void a(s)}e.pagesDefinition.internal.workingItem.features.push(i)}this._nextAggregateItem(e,t,s,n,a,r)}},r)}catch(e){r(e)}}_calculateFieldStat(e,t,i){const s=[];for(const i of e.features)if(null!==t.workingexpr){const e=t.workingexpr.calculateValue(i);null!==e&&(e instanceof g.DateOnly||e instanceof y.TimeOnly?s.push(e.toNumber()):e instanceof _.SqlTimeStampOffset?s.push(e.toMilliseconds()):s.push(e))}else s.push(null);i.attributes[t.tofieldname]=p.aggregateFunction(t.typeofstat,[s])}_calculateAndAppendAggregateItem(t){const i={attributes:{},geometry:null};for(const e of this._decodedGroupbyfield){const s=e.singlefield?t.features[0].attributes[e.singlefield]:m.convertValueToStorageFormat(e.expression.calculateValue(t.features[0]),e.sqlType);i.attributes[e.tofieldname]=s}for(const e of this._decodedStatsfield)this._calculateFieldStat(t,e,i);const s=[];for(let e=0;e<this._decodedStatsfield.length;e++)s.push(this._calculateFieldStat(t,this._decodedStatsfield[e],i));return this._featureCache[i.attributes[this.objectIdField]]=new e({attributes:i.attributes,geometry:i.geometry}),i}_generateAggregateHash(e){let t="";for(const i of this._decodedGroupbyfield){const s=i.singlefield?e.attributes[i.singlefield]:i.expression.calculateValue(e);t+=null==s?":":":"+s.toString()}return c.createMD5Hash(t,c.outputTypes.String)}async _stat(){return{calculated:!1}}async getFeatureByObjectId(){return null}static registerAction(){l._featuresetFunctions.groupby=function(e,t){return new S({parentfeatureset:this,groupbyfields:e,statsfields:t})}}}return S});