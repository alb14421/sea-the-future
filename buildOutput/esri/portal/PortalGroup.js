// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../chunks/tslib.es6","../core/Error","../core/JSONSupport","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/has","../core/RandomLCG","../core/accessorSupport/decorators/subclass","./PortalQueryParams"],function(t,e,r,o,a,s,l,u,p,n){"use strict";var i;return t.default=i=class extends o.JSONSupport{constructor(t){super(t),this.access=null,this.created=null,this.description=null,this.id=null,this.isInvitationOnly=!1,this.modified=null,this.owner=null,this.portal=null,this.snippet=null,this.sortField=null,this.sortOrder=null,this.sourceJSON=null,this.tags=null,this.title=null}get thumbnailUrl(){const t=this.url,e=this.thumbnail;return t&&e&&this.portal?this.portal?.normalizeUrl(`${t}/info/${e}?f=json`):null}get url(){const t=this.portal?.restUrl;return t?t+"/community/groups/"+this.id:null}fetchCategorySchema(t){return this.portal.request(this.url+"/categorySchema",t).then(e=>{const r=e.categorySchema||[];return r.some(t=>"contentCategorySetsGroupQuery.LivingAtlas"===t.source)?this._fetchCategorySchemaSet("LivingAtlas",t):r})}fetchMembers(t){return this.portal.request(this.url+"/users",t)}getThumbnailUrl(t){let e=this.thumbnailUrl;return e&&t&&(e+=`&w=${t}`),e}toJSON(){throw new r("internal:not-yet-implemented","PortalGroup.toJSON is not yet implemented")}static fromJSON(t){if(!t)return null;if(t.declaredClass)throw new Error("JSON object is already hydrated");const e=new i({sourceJSON:t});return e.read(t),e}queryItems(t,e){let r=s.ensureType(n,t);const o=this.portal;return parseFloat(o.currentVersion)>5?(r=r||new n,o.queryPortal(`/content/groups/${this.id}/search`,r,"PortalItem",e)):(r=r?r.clone():new n,r.query="group:"+this.id+(r.query?" "+r.query:""),o.queryItems(r,e))}_fetchCategorySchemaSet(t,e){const o=this.portal;return o.fetchSelf(o.authMode,!0,e).then(t=>{const a=t.contentCategorySetsGroupQuery;if(a){const t=new n({disableExtraQuery:!0,num:1,query:a});return o.queryGroups(t,e)}throw new r("portal-group:fetchCategorySchema","contentCategorySetsGroupQuery value not found")}).then(o=>{if(o.total){const r=o.results[0],a=new n({num:1,query:`typekeywords:"${t}"`});return r.queryItems(a,e)}throw new r("portal-group:fetchCategorySchema","contentCategorySetsGroupQuery group not found")}).then(t=>t.total?t.results[0].fetchData("json",e).then(t=>{const e=t?.categorySchema;return e?.length?e:[]}):[])}},e.__decorate([a.property()],t.default.prototype,"access",void 0),e.__decorate([a.property({type:Date})],t.default.prototype,"created",void 0),e.__decorate([a.property()],t.default.prototype,"description",void 0),e.__decorate([a.property()],t.default.prototype,"id",void 0),e.__decorate([a.property()],t.default.prototype,"isInvitationOnly",void 0),e.__decorate([a.property({type:Date})],t.default.prototype,"modified",void 0),e.__decorate([a.property()],t.default.prototype,"owner",void 0),e.__decorate([a.property()],t.default.prototype,"portal",void 0),e.__decorate([a.property()],t.default.prototype,"snippet",void 0),e.__decorate([a.property()],t.default.prototype,"sortField",void 0),e.__decorate([a.property()],t.default.prototype,"sortOrder",void 0),e.__decorate([a.property()],t.default.prototype,"sourceJSON",void 0),e.__decorate([a.property()],t.default.prototype,"tags",void 0),e.__decorate([a.property()],t.default.prototype,"thumbnail",void 0),e.__decorate([a.property({readOnly:!0})],t.default.prototype,"thumbnailUrl",null),e.__decorate([a.property()],t.default.prototype,"title",void 0),e.__decorate([a.property({readOnly:!0})],t.default.prototype,"url",null),t.default=i=e.__decorate([p.subclass("esri.portal.PortalGroup")],t.default),t.default});