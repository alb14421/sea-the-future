// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/Error","../../layers/support/arcgisLayerUrl","../../layers/support/fetchService","../../layers/support/LayerLoadContext","../../layers/support/layerUtils","../Portal","./jsonContext","./loadUtils","./portalItemUtils","../../renderers/support/styleUtils","../../support/requestPresets"],function(e,t,r,a,o,n,s,l,i,u,c,p){"use strict";async function y(e,t,r,a,o,n){let s=a.layers||[];const l=a.tables||[];if("Feature Collection"===e.portalItem?.type?(s.forEach((e,t)=>{e.id=t,"Table"===e?.layerDefinition?.type&&l.push(e)}),s=s.filter(e=>"Table"!==e?.layerDefinition?.type)):(s.reverse(),l.reverse()),s.forEach(r=>{const o=n?.(r);if(o||!n){const n=d(e,t(r),a,r,o);e.add(n)}}),l.length){const t=r?null:await o.FeatureLayer();l.forEach(o=>{const s=n?.(o);if(s||!n){const n=d(e,r?r(o):t,a,o,s);e.tables.add(n)}})}}function d(e,t,r,a,o){const n=e.portalItem,l={portalItem:n.clone(),layerId:a.id};null!=a.url&&(l.url=a.url);const i=new t(l);if("sourceJSON"in i&&(i.sourceJSON=o),"subtype-group"!==i.type&&"catalog"!==i.type&&(i.sublayerTitleMode="service-name"),"Feature Collection"===n.type){const e={origin:"portal-item",portal:n.portal||s.getDefault()};i.read(a,e);const t=r.showLegend;null!=t&&i.read({showLegend:t},e)}return i}async function f(e,t,a){if(!1===e.supportsData)return{data:void 0};const o=e.instance,s=o.portalItem;if(!s)return{data:void 0};let l=null;try{l=await s.fetchData("json",a)}catch(e){}if(function(e){return"stream"!==e.type&&"layerId"in e}(o)){let e=null;const{count:a,preferredHost:u}=await async function(e,t,a){if(t?.layers&&t?.tables)return{count:i.getNumLayersAndTables(t)};const o=r.parse(e.url);if(!o)return{count:1};const s=o.url.path,l=await a.fetchServiceMetadata(s,{customParameters:i.getFirstLayerOrTable(t)?.customParameters}).catch(()=>null);return{count:(t?.layers?.length??l?.layers?.length??0)+(t?.tables?.length??l?.tables?.length??0),preferredHost:n.isPreferredUrlApplicable(e)?n.getPreferredHost():null}}(s,l,t);if(n.applyPreferredHostToPortalItem(s,u),(l?.layers||l?.tables)&&a>0){if(null==o.layerId){const e=i.instanceTypeToLayerTypes(o.type),t=e?.length?i.getSublayersByLayerType(l,e)[0]:i.getFirstLayerOrTable(l);t&&(o.layerId=t.id)}e=function(e,t){const{layerId:r}=t,a=e.layers?.find(e=>e.id===r)||e.tables?.find(e=>e.id===r);return a&&function(e,t){const r="layerType"in e&&e.layerType,{type:a}=t;return!("feature"===a&&r&&"ArcGISFeatureLayer"!==e.layerType||"catalog"===a&&!r||"oriented-imagery"===a&&!r||"subtype-group"===a&&!r)}(a,t)?a:null}(l,o),"OrientedImageryLayer"===e?.layerType&&"oriented-imagery"===o.type&&o.supportedSourceTypes.add("Feature Layer"),e&&null!=l.showLegend&&(e.showLegend=l.showLegend)}return a>1&&"sublayerTitleMode"in o&&"service-name"!==o.sublayerTitleMode&&(o.sublayerTitleMode="item-title-and-service-name"),{data:e,preferredHost:u}}return{data:l}}e.load=async function(e,r){const s=e.instance.portalItem;if(s?.id)return await s.load(r),function(e){const r=e.instance.portalItem;if(!r?.type||!e.supportedTypes.includes(r.type))throw new t("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:r?.type,expectedType:e.supportedTypes.join(", ")})}(e),e.validateItem&&e.validateItem(s),async function(e,r){const s=e.instance,d=s.portalItem;if(!d)return;let{url:m}=d;const{title:w}=d,h=l.createForItemRead(d,"portal-item");if("group"===s.type)return async function(e,r,s){const c=e.portalItem;if(!e.sourceIsPortalItem)return;const{title:d,type:m}=c;if("Group Layer"===m){if(!u.hasTypeKeyword(c,"Map"))throw new t("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return async function(e,r){const a=e.portalItem,o=await a.fetchData("json");if(!o)return;if(!r.populateGroupLayer)throw new t("portal:missing-populate-group-layer","Missing populate group layer");const n=l.createForItemRead(a,"web-map");e.read(o,n),await r.populateGroupLayer(e,o,{context:n}),e.resourceReferences={portalItem:a,paths:n.readResourcePaths??[]}}(e,s)}return e.read({title:d},r),async function(e,r){let s;const{portalItem:l}=e;if(!l)return;const u=l.type,c=r.layerModuleTypeMap;if(!c)throw new t("portal:missing-layer-module-type-map","Layer module type map is required to construct sub layers");switch(u){case"Feature Service":case"Feature Collection":s=c.FeatureLayer;break;case"Stream Service":s=c.StreamLayer;break;case"Scene Service":s=c.SceneLayer;break;case"Video Service":s=c.VideoLayer;break;default:throw new t("portal:unsupported-item-type-as-group",`The item type '${u}' is not supported as a 'GroupLayer'`)}const d="Video Service"===u,m=new o.LayerLoadContext;let[w,{data:h}]=await Promise.all([s(),d?{data:null}:f(r,m)]),g=()=>w;if(d)return async function(e,t,r){const{portalItem:a}=e;if(!a?.url)return;const o=await p.fetchArcGISServiceJSON(a.url);o&&y(e,t,null,{layers:o.layers?.map(({id:e,name:t})=>({id:e,name:t}))},r)}(e,g,c);if("Feature Service"===u){const t=i.getFirstLayerOrTable(h)?.customParameters;h=l.url?(await i.preprocessFSItemData(h,l.url,m)).data:{},g=await async function(e,t){const{layers:r,tables:a}=e,o=[...r??[],...a??[]];if(!o.length)return;const n=new Set,s=[];for(const{layerType:e}of o){const r=e??"ArcGISFeatureLayer";if(n.has(r))continue;n.add(r);const a=t[i.layerTypeToLayerModuleType(r)];s.push(a())}const l=await Promise.all(s),u=new Map;return Array.from(n).forEach((e,t)=>{u.set(e,l[t])}),({layerType:e})=>{const t=e??"ArcGISFeatureLayer";return u.get(t)}}(h,c)||g;const{provider:r,preferredHost:o}=await async function(e,t){const{layersJSON:r,preferredHost:o}=await a.fetchFeatureService(e,t);if(!r)return{provider:null,preferredHost:o};const n=[...r.layers,...r.tables];return{provider:e=>n.find(t=>t.id===e.id),preferredHost:o}}(l.url,{customParameters:t,loadContext:m});return n.applyPreferredHostToPortalItem(l,o),await y(e,g,g,h,c,r)}return"Scene Service"===u&&l.url&&(h=await i.populateSceneServiceItemData(l,h,m)),i.getNumLayersAndTables(h)>0?await y(e,g,null,h,c):await async function(e,t,r){const{portalItem:a}=e;if(!a?.url)return;const o=await p.fetchArcGISServiceJSON(a.url);o&&y(e,t,null,{layers:o.layers?.map(i.createSublayerData),tables:o.tables?.map(i.createSublayerData)},r)}(e,g,c)}(e,s)}(s,h,e);m&&"media"!==s.type&&s.read({url:m},h);const g=new o.LayerLoadContext,{data:I,preferredHost:S}=await f(e,g,r);return m=d.url,"isUrlHostModified"in s&&(S?s.applyPreferredHost({preferredHost:S}):s.applyHostFromPortalItem()),I&&s.read(I,h),s.resourceReferences={portalItem:d,paths:h.readResourcePaths??[]},"subtype-group"!==s.type&&s.read({title:w},h),c.loadStyleRenderer(s,h)}(e,r)},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});