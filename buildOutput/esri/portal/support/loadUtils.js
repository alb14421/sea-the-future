// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../layers/support/associatedFeatureServiceUtils","../../layers/support/fetchService","../../layers/support/layerUtils"],function(e,r,a,t){"use strict";function l(e){const r={id:e.id,name:e.name},t=a.getLayerModuleType(e.type);return"FeatureLayer"!==t&&(r.layerType=t),r}function s(e){if(!e)return null;const{layers:r,tables:a}=e;return r?.length?r[0]:a?.length?a[0]:null}e.createSublayerData=l,e.getFirstLayerOrTable=s,e.getLayerOrTable=function(e,r){return null==r?null:[...e.layers||[],...e.tables||[]].find(e=>e.id===r)},e.getNumLayersAndTables=function(e){return(e?.layers?.length??0)+(e?.tables?.length??0)},e.getSublayersByLayerType=function(e,r){return[...e.layers||[],...e.tables||[]].filter(({layerType:e})=>e?r.includes(e):r.includes("ArcGISFeatureLayer"))},e.instanceTypeToLayerTypes=function(e){switch(e){case"catalog":return["CatalogLayer"];case"feature":return["ArcGISFeatureLayer"];case"oriented-imagery":return["OrientedImageryLayer"];case"subtype-group":return["SubtypeGroupLayer","SubtypeGroupTable"]}return null},e.layerTypeToLayerModuleType=function(e){switch(e){case"CatalogLayer":return"CatalogLayer";case"OrientedImageryLayer":return"OrientedImageryLayer";case"SubtypeGroupLayer":case"SubtypeGroupTable":return"SubtypeGroupLayer"}return"FeatureLayer"},e.populateSceneServiceItemData=async function(e,a,t){if(!e?.url)return a??{};if(a??={},!a.layers){const r=await t.fetchServiceMetadata(e.url);a.layers=r.layers?.map(l)}const{serverUrl:u,portalItem:n}=await r.findAssociatedFeatureService(e.url,{sceneLayerItem:e,customParameters:s(a)?.customParameters}).catch(()=>({serverUrl:null,portalItem:null}));if(null==u)return a.tables=[],a;if(!a.tables&&n){const e=await n.fetchData().catch(()=>null);if(e?.tables)a.tables=e.tables.map(l);else{const r=await t.fetchServiceMetadata(u,{customParameters:s(e)?.customParameters}).catch(()=>null);a.tables=r?.tables?.map(l)}}if(a.tables)for(const e of a.tables)e.url=`${u}/${e.id}`;return a},e.preprocessFSItemData=async function(e,r,a){let u;if(null==e?.layers||null==e?.tables){const n=await a.fetchServiceMetadata(r,{customParameters:s(e)?.customParameters});u=t.getPreferredHost(),(e=e||{}).layers=e.layers||n?.layers?.map(l),e.tables=e.tables||n?.tables?.map(l)}return{data:e,preferredHost:u}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});