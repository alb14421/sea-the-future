// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../request","../../core/Error","../../core/MapUtils","../../layers/graphics/featureConversionUtils","../../layers/graphics/OptimizedGeometry","../../rest/knowledgeGraph/ProtoFeatureCollection","../../rest/knowledgeGraph/wasmInterface/knowledgeWasmAccess","../../rest/knowledgeGraph/wasmInterface/WasmDataModelWrapperInterfaces","../../rest/knowledgeGraph/wasmInterface/WasmSerializedLayerData","../../rest/knowledgeGraph/wasmInterface/wasmToFeatureFactories"],function(e,t,r,i,n,o,a,s,l,d,c){"use strict";async function u(e){const t=[],r={generateAllSublayers:!1,namedTypeDefinitions:new Map};return e.entitiesUrl&&t.push(y(e.entitiesUrl).then(e=>{g(e,r)})),e.relationshipsUrl&&t.push(y(e.relationshipsUrl).then(e=>{g(e,r)})),await Promise.all(t),r}function f(e,t,r,i,o,s){e.version="";const c=new t.QueryResult,u=new t.FeatureResult,f="entities"===i?a.ProtoOutboundEntityFeatureCollectionAttributionIndexes:a.ProtoOutboundRelationshipFeatureCollectionAttributionIndexes;u.unique_id_field={name:f[f.ELEMENTUID],isSystemMaintained:!1},u.globalid_field_name=f[f.ELEMENTUID],u.geohash_field_name="",u.geometry_properties={shapeAreaFieldName:"",shapeLengthFieldName:"",units:""},u.spatial_reference={wkid:4326,latestWkid:4326,vcsWkid:0,latestVcsWkid:0,wkt:""},u.exceeded_transfer_limit=!1,u.has_z=!1,u.has_m=!1,u.transform={quantizeOriginPosition:{value:d.WasmQuantizeOriginPositionTypeCode.upperLeft},scale:{xScale:1e-9,yScale:1e-9,mScale:1e-4,zScale:1e-4},translate:{xTranslate:-400,yTranslate:-400,mTranslate:-1e5,zTranslate:-1e5}};for(const e of Object.keys(f).filter(e=>isNaN(Number(e)))){const r=new t.Field;if(r.name=e,r.alias=e,r.sql_type={value:d.SqlTypeCode.sqlTypeBigInt},"entities"===i)switch(e){case f[f.ELEMENTUID]:case f[f.TYPENAME]:r.field_type={value:l.EsriFieldTypes.esriFieldTypeString}}else switch(e){case f[f.ELEMENTUID]:case f[f.TYPENAME]:case a.ProtoOutboundRelationshipFeatureCollectionAttributionIndexes[a.ProtoOutboundRelationshipFeatureCollectionAttributionIndexes.FROMUID]:case a.ProtoOutboundRelationshipFeatureCollectionAttributionIndexes[a.ProtoOutboundRelationshipFeatureCollectionAttributionIndexes.TOUID]:r.field_type={value:l.EsriFieldTypes.esriFieldTypeString}}r.domain="",u.add_field(r),r.delete()}const y=new Map;for(const e of o.dataModel.entityTypes)y.set(e.name,"entities");for(const e of o.dataModel.relationshipTypes)y.set(e.name,"relationships");for(const[e,o]of r.namedTypeDefinitions)if(i===y.get(e))for(const r of o.members.values()){const o=new t.Feature;for(const n of Object.keys(f).filter(e=>isNaN(Number(e))))if("entities"===i)switch(n){case f[f.ELEMENTUID]:o.add_attribute(r.id,t.esriFieldType.esriFieldTypeString);break;case f[f.TYPENAME]:o.add_attribute(e,t.esriFieldType.esriFieldTypeString)}else switch(n){case f[f.ELEMENTUID]:o.add_attribute(r.id,t.esriFieldType.esriFieldTypeString);break;case a.ProtoOutboundRelationshipFeatureCollectionAttributionIndexes[a.ProtoOutboundRelationshipFeatureCollectionAttributionIndexes.FROMUID]:o.add_attribute(s.has(r.id)?s.get(r.id)[0]:"",t.esriFieldType.esriFieldTypeString);break;case a.ProtoOutboundRelationshipFeatureCollectionAttributionIndexes[a.ProtoOutboundRelationshipFeatureCollectionAttributionIndexes.TOUID]:o.add_attribute(s.has(r.id)?s.get(r.id)[1]:"",t.esriFieldType.esriFieldTypeString);break;case f[f.TYPENAME]:o.add_attribute(e,t.esriFieldType.esriFieldTypeString)}let l;if(r.linkChartLocation&&"x"in r.linkChartLocation?l=n.convertFromGeometry(r.linkChartLocation):r.linkChartLocation&&(l=r.linkChartLocation),r.linkChartLocation&&l){const e=new t.FeatureCollectionGeometry;let r=!1;switch(i){case"entities":e.geometry_type=t.esriGeometryType.esriGeometryPoint,r=!0;break;case"relationships":e.geometry_type=t.esriGeometryType.esriGeometryPolyline}e.coords=new Float64Array(l.coords),e.lengths=new Uint32Array(r?[1]:l.lengths),o.set_compressed_geometry(e),e.delete()}u.add_feature(o),o.delete()}switch(i){case"entities":u.geometry_type=t.esriGeometryType.esriGeometryPoint;break;case"relationships":u.geometry_type=t.esriGeometryType.esriGeometryPolyline}return c.set_feature_result(u),e.set_query_result(c),u.delete(),c.delete(),e}async function y(e){const r=await t(e,{responseType:"array-buffer"});return p(await r.data)}async function p(e){const t=new((await s.getWasmInterface()).FeatureCollectionDecoder),i=t.decode(new Uint8Array(e));if(0!==i.error_code)throw new r("knowledge-graph:layer-support-utils",i.error_message);const n=t.get_feature_collection(),o=c.wasmToProtoFeatureCollection(n);return t.delete(),o}async function _(e){const r=await t(e,{responseType:"array-buffer"}),i=await r.data;return m(new Uint8Array(i))}async function m(e){const t=new((await s.getWasmInterface()).MapOfObjectIdentifierSetsDecoder),i=t.decode(new Uint8Array(e)),n=new Map;if(0!==i.error_code)throw new r("knowledge-graph:layer-support-utils",i.error_message);const o=t.get_map_of_identifier_sets(),a=o.keys,l=a.size();for(let e=0;e<l;e++){const t=a.get(e),i=o.query_identifier_set(t),s=[];if(1===i.id_array_type.value){const e=i.get_globalid_array(),t=e.count();for(let r=0;r<t;r++)s.push(e.get_globalid_at(r))}else if(3===i.id_array_type.value){const e=i.get_identifier_array(),t=e.count();for(let r=0;r<t;r++)s.push(e.get_identifier_at(r).toString())}else if(2===i.id_array_type.value){const e=i.get_string_array(),t=e.count();for(let r=0;r<t;r++)s.push(e.get_string_at(r))}else{if(0!==i.id_array_type.value)throw new r("knowledge-graph:layer-support-utils","Tried to encode an unexpected ID Array type.");{const e=i.get_oid_array(),t=e.count();for(let r=0;r<t;r++)s.push(e.get_objectid_at(r).toString())}}n.set(t,s)}return t.delete(),n}function g(e,t){if(!e?.queryResult?.featureResult)return t;const r=e.queryResult.featureResult.fieldNameToAttributeIndexMap;for(const n of e.queryResult.featureResult.features){const e=n.attributes[r.TYPENAME],a=i.getOrCreateMapValue(t.namedTypeDefinitions,e,()=>({useAllData:!1,members:new Map})),s=n.attributes[r.ELEMENTUID];if(n.compressedGeometry?.coords?.length>0){let e=n.compressedGeometry.lengths;"esriGeometryPoint"===n.compressedGeometry.geometryType&&(e=[]),a.members.set(s,{id:s,linkChartLocation:new o(e,n.compressedGeometry.coords)})}else a.members.set(s,{id:s})}return t}function w(e,t){for(const[r,n]of e){const e=i.getOrCreateMapValue(t.namedTypeDefinitions,r,()=>({useAllData:!1,members:new Map}));for(const t of n)e.members.has(t)||e.members.set(t,{id:t})}return t}const h=(e,t)=>{t.set_feature_collection(e),t.encode();const i=t.get_encoding_result();if(0!==i.error.error_code)throw new r("knowledge-graph:layer-support-utils",i.error.error_message);return i.get_byte_buffer()},b={fetchAndConvertSerializedLinkChart:e=>u(e)};e.addFeatureCollectionToInclusionDefinition=g,e.addIdMapToInclusionDefinition=w,e.deserializeFeatureCollection=p,e.deserializeIdCollectionMap=m,e.fetchAndConvertSerializedKnowledgeIdMap=async function(e,t){t??=!1;const r={generateAllSublayers:t,namedTypeDefinitions:new Map};return await _(e).then(e=>{w(e,r)}),r},e.fetchAndConvertSerializedLinkChart=u,e.fetchAndDeserializeFeatureCollection=y,e.fetchAndDeserializeIdCollectionMap=_,e.serializationUtilsModuleWrapper=b,e.serializeInclusionDefinitionToAllPbf=async function(e,t,r){const i=await s.getWasmInterface(),n=new i.FeatureCollection,o=new i.FeatureCollection;try{f(n,i,e,"entities",t,r),f(o,i,e,"relationships",t,r);const a=new i.FeatureCollectionEncoder,s=new i.FeatureCollectionEncoder,l=h(n,a),d=structuredClone(l),c=h(o,s),u={entitiesFC:d,relationshipsFC:structuredClone(c)};return a.delete(),s.delete(),u}finally{n.delete(),o.delete()}},e.serializeInclusionDefinitionToEntitiesPbf=async function(e,t,r){const i=await s.getWasmInterface(),n=new i.FeatureCollection;try{f(n,i,e,"entities",t,r);const o=new i.FeatureCollectionEncoder,a=h(n,o),s=structuredClone(a);return o.delete(),s}finally{n.delete()}},e.serializeInclusionDefinitionToIdCollectionsMapPbf=async function(e){const t=await s.getWasmInterface(),i=new t.MapOfObjectIdentifierSets;!function(e,t,r){for(const[i,n]of r.namedTypeDefinitions){if(!n.members||n.useAllData)continue;const r=n.members.keys();let o=!1,a=!0;const s=new t.ObjectIdArray,l=new t.StringArray,d=new t.GlobalIdArray,c=new t.IdentifierArray,u=new t.ObjectIdentifierSet;for(const e of r)a&&(o=!isNaN(Number(e)),a=!1),o?s.add_objectid(Number(e)):(l.add_string(e),d.add_globalid(e)),c.add_identifier(e);u.set_oid_array(s),u.set_string_array(l),u.set_globalid_array(d),u.set_identifier_array(c),s.delete(),l.delete(),d.delete(),c.delete(),e.put_identifier_set(i,u),u.delete()}}(i,t,e);const n=new t.MapOfObjectIdentifierSetsEncoder;try{n.set_map_of_identifier_sets(i),n.encode();const e=n.get_encoding_result();if(0!==e.error.error_code)throw new r("knowledge-graph:layer-support-utils",e.error.error_message);const t=structuredClone(e.get_byte_buffer());return n.delete(),t}finally{i.delete()}},e.serializeInclusionDefinitionToRelationshipsPbf=async function(e,t,r){const i=await s.getWasmInterface(),n=new i.FeatureCollection;try{f(n,i,e,"relationships",t,r);const o=new i.FeatureCollectionEncoder,a=h(n,o),s=structuredClone(a);return o.delete(),s}finally{n.delete()}},e.setFeatureCollectionProperties=f,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});