// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","../chunks/tslib.es6","../request","../core/Error","../core/JSONSupport","../core/Loadable","../core/urlUtils","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/RandomLCG","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../layers/mixins/EditBusLayer","../rest/utils","./support/EditMomentStack","./support/versionManagementUtils","./versionAdapters/utils"],function(e,t,r,s,n,i,o,a,l,u,c,d,m,g,h,f,p,v,V){"use strict";const w=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));let y=class extends(n.JSONSupportMixin(i.Loadable)){constructor(e){super(e),this.url=null,this.sourceJSON=null,this.name=null,this.defaultVersionIdentifier=null,this.capabilities=null,this._isDefault=e=>!e||e===this.defaultVersionIdentifier.name,this._dateEquals=(e,t)=>!e&&!t||!(!e||!t)&&e.toISOString()===t.toISOString(),this._applyEditsHandler=e=>{const{serviceUrl:t,gdbVersion:r,result:s}=e;t===this._featureServiceUrl&&s.then(e=>{const t=e.historicMoment;t&&this._addMomentToVersionItem(r,t)})}}initialize(){this.url=o.removeTrailingSlash(this.url),this._featureServiceUrl=this.url.replace(/\/VersionManagementServer/i,"/FeatureServer"),v.versionCollection.has(this.url)||v.versionCollection.set(this.url,new Map);const e=(v.versionCollectionCount.get(this.url)??0)+1;v.versionCollectionCount.set(this.url,e),this.when().then(()=>this.addHandles(h.onApplyEditsEvent(this._applyEditsHandler)),()=>{})}destroy(){const e=(v.versionCollectionCount.get(this.url)??1)-1;v.versionCollectionCount.set(this.url,e),0===e&&v.versionCollection.delete(this.url),v.defaultVersionNameLookup.delete(this._featureServiceUrl)}read(e,t){this.sourceJSON=e,super.read(e,t)}readDefaultVersionIdentifier(e,t){return{name:t.defaultVersionName,guid:t.defaultVersionGuid}}writeDefaultVersionIdentifier(e,t){t.defaultVersionName=e.name,t.defaultVersionGuid=e.guid}get loaded(){return super.loaded}load(e){return this.addResolvingPromise(this._fetchService(this.url,e)),Promise.resolve(this)}async createVersion(t){const[{createVersion:r},{default:s}]=await Promise.all([new Promise((t,r)=>e(["../rest/versionManagement/createVersion"],t,r)),new Promise((t,r)=>e(["../rest/versionManagement/support/CreateVersionParameters"],e=>t(w(e)),r))]),n=s.from(t);return r(this.url,n)}async deleteVersion(t){const[{deleteVersion:r},{default:s}]=await Promise.all([new Promise((t,r)=>e(["../rest/versionManagement/deleteVersion"],t,r)),new Promise((t,r)=>e(["../rest/versionManagement/support/DeleteVersionParameters"],e=>t(w(e)),r))]);let n;t.guid&&v.versionCollection.get(this.url)?.has(t.guid)&&(n=v.currentSessionId??void 0);const i=new s({versionName:t.name,sessionId:n});return r(this.url,i)}async getVersionInfoExtended(t){const{getVersion:r}=await new Promise((t,r)=>e(["../rest/versionManagement/getVersion"],t,r));return r(this.url,t.guid)}async getVersionInfos(t={}){const[{getVersionInfos:r},{default:s}]=await Promise.all([new Promise((t,r)=>e(["../rest/versionManagement/getVersionInfos"],t,r)),new Promise((t,r)=>e(["../rest/versionManagement/support/GetVersionInfosParameters"],e=>t(w(e)),r))]),n=s.from(t);return r(this.url,n)}async reconcile(t,r={}){const[{reconcile:s},{default:n}]=await Promise.all([new Promise((t,r)=>e(["../rest/versionManagement/gdbVersion/reconcile"],t,r)),new Promise((t,r)=>e(["../rest/versionManagement/gdbVersion/support/ReconcileParameters"],e=>t(w(e)),r))]),i=n.from(r);return i.sessionId=v.currentSessionId,s(this.url,t.guid,i)}async post(t){const[{post:r},{default:s}]=await Promise.all([new Promise((t,r)=>e(["../rest/versionManagement/gdbVersion/post"],t,r)),new Promise((t,r)=>e(["../rest/versionManagement/gdbVersion/support/PostParameters"],e=>t(w(e)),r))]),n=s.from({sessionId:v.currentSessionId});return r(this.url,t.guid,n)}async alterVersion(t,r){const[{alterVersion:s},{default:n}]=await Promise.all([new Promise((t,r)=>e(["../rest/versionManagement/gdbVersion/alterVersion"],t,r)),new Promise((t,r)=>e(["../rest/versionManagement/gdbVersion/support/AlterVersionParameters"],e=>t(w(e)),r))]),i=n.from(r);return s(this.url,t.guid,i)}async startReading(e){return(await this.startReadingWithResult(e)).success}async startReadingWithResult(t){const{startReading:r}=await new Promise((t,r)=>e(["../rest/versionManagement/gdbVersion/startReading"],t,r)),s=await r(this.url,t.guid,v.currentSessionId);if(s.success){const e=await this.getVersionInfoExtended(t),r=new Date(e.modifiedDate),s={name:e.versionIdentifier.name,moment:r,lockType:"read"};this._addOrUpdateItem(t.guid,s),h.emitUpdateMomentEvent(this._featureServiceUrl,null,t.name,r)}return s}async stopReading(e){return(await this.stopReadingWithResult(e)).success}async stopReadingWithResult(t){const{stopReading:r}=await new Promise((t,r)=>e(["../rest/versionManagement/gdbVersion/stopReading"],t,r)),s=await r(this.url,t.guid,v.currentSessionId);return s.success&&(v.versionCollection.get(this.url)?.delete(t.guid),h.emitUpdateMomentEvent(this._featureServiceUrl,null,t.name,null)),s}async startEditing(e){return(await this.startEditingWithResult(e)).success}async startEditingWithResult(t){const{startEditing:r}=await new Promise((t,r)=>e(["../rest/versionManagement/gdbVersion/startEditing"],t,r)),s=await r(this.url,t.guid,v.currentSessionId);if(s.success){const e=await this.getVersionInfoExtended(t),r=new Date(e.modifiedDate),s=new p(r),n={name:t.name,moment:r,lockType:"edit",stack:s};this._addOrUpdateItem(t.guid,n),h.emitUpdateMomentEvent(this._featureServiceUrl,null,t.name,r)}return s}async stopEditing(e,t){return(await this.stopEditingWithResult(e,t)).success}async stopEditingWithResult(t,r){if(r){const r=v.versionCollection.get(this.url)?.get(t.guid);if(r?.stack?.canRedo()){const[{deleteForwardEdits:s},{default:n}]=await Promise.all([new Promise((t,r)=>e(["../rest/versionManagement/gdbVersion/deleteForwardEdits"],t,r)),new Promise((t,r)=>e(["../rest/versionManagement/gdbVersion/support/DeleteForwardEditsParameters"],e=>t(w(e)),r))]),i=await s(this.url,t.guid,new n({sessionId:v.currentSessionId,moment:r.moment}));if(!i.success)return i}}const{stopEditing:s}=await new Promise((t,r)=>e(["../rest/versionManagement/gdbVersion/stopEditing"],t,r)),n=await s(this.url,t.guid,v.currentSessionId,r);if(n.success){const e=await this.getVersionInfoExtended(t),r=new Date(e.modifiedDate);this._addOrUpdateItem(t.guid,{name:t.name,moment:r,lockType:"read",editMomentStack:void 0}),h.emitUpdateMomentEvent(this._featureServiceUrl,null,t.name,r)}return n}getLockType(e){const t=v.versionCollection.get(this.url)?.get(e.guid)?.lockType;return t??"none"}async changeVersion(e,t,r){if(r&&"name"in r&&!await this.getVersionInfoExtended(r))throw new s("version-management-service:invalid-version","version does not exist");if("networkServiceUrl"in e){if(this._featureServiceUrl.toLowerCase()===e.featureServiceUrl.toLowerCase())return this._changeVersionInternal(e,t,r)}else{let s;"layers"in e?(s=e.allTables.concat(e.allLayers),e.utilityNetworks&&e.utilityNetworks.forEach(e=>{this._featureServiceUrl.toLowerCase()===e.featureServiceUrl.toLowerCase()&&this._changeVersionInternal(e,t,r)})):s=e;for(const e of s)if("feature"===e.type||"subtype-group"===e.type){const s=/^(.*\/FeatureServer)\/\d+$/,n=e.url.replace(s,"$1");if(this._featureServiceUrl.toLowerCase()===n.toLowerCase()&&!this._changeVersionInternal(e,t,r))return!1}else if("group"===e.type){const s=e.allTables.concat(e.allLayers);for(const e of s)if("feature"===e.type||"subtype-group"===e.type){const s=/^(.*\/FeatureServer)\/\d+$/,n=e.url.replace(s,"$1");if(this._featureServiceUrl.toLowerCase()===n.toLowerCase()&&!this._changeVersionInternal(e,t,r))return!1}}}return!0}async changeVersionWithResult(e,t,r){let s;if("layers"in e){const t=V.createVersionAdapters(e.allTables.concat(e.allLayers).filter(e=>"group"!==e.type).toArray());e.utilityNetworks&&e.utilityNetworks.forEach(e=>{const r=V.createVersionAdapters([e]);t.push(...r)}),s=t}else s=e;if(r&&"name"in r&&!await this.getVersionInfoExtended(r)){const e=new Map;for(const t of s)e.set(t,{success:!1});return e}if(t&&"name"in t&&"none"!==this.getLockType(t)){const e=new Map;for(const t of s)e.set(t,{success:!1});return e}const n=new Map;for(const e of s)if(e)if(e.featureServiceUrl.toLowerCase()===this._featureServiceUrl.toLowerCase()){const s=this._changeVersionInternalWithResult(e,t,r);n.set(e,s)}else n.set(e,{success:!1});return n}async getVersionIdentifierFromName(e){try{const t=await this.getVersionInfos({includeHidden:!0});return t.find(t=>t.versionIdentifier.name.toUpperCase()===e.toUpperCase())?.versionIdentifier||null}catch{return null}}async getVersionIdentifierFromGuid(t){const{getVersion:r}=await new Promise((t,r)=>e(["../rest/versionManagement/getVersion"],t,r));try{return(await r(this.url,t)).versionIdentifier}catch{return null}}canUndo(e){const t=v.versionCollection.get(this.url)?.get(e.guid);return!!t?.stack?.canUndo()}canRedo(e){const t=v.versionCollection.get(this.url)?.get(e.guid);return!!t?.stack?.canRedo()}undo(e){const t=v.versionCollection.get(this.url)?.get(e.guid),r=t?.stack?.undo()||void 0;if(t&&r){const r=t.stack.peek();h.emitUpdateMomentEvent(this._featureServiceUrl,null,e.name,r),v.versionCollection.get(this.url)?.set(e.guid,{...t,moment:r})}}redo(e){const t=v.versionCollection.get(this.url)?.get(e.guid),r=t?.stack?.redo()||void 0;t&&r&&(h.emitUpdateMomentEvent(this._featureServiceUrl,null,e.name,r),v.versionCollection.get(this.url)?.set(e.guid,{...t,moment:r}))}_setUpData(e,t){let r=null,n=null,i=null,o=null;const a=e=>{const t=v.versionCollection?.get(this.url)?.get(e.guid);i=e.name,o=t?.moment??null};if(e&&"name"in e){if("none"!==this.getLockType(e))throw new s("version-management-service:version-locked","version is locked");r=e.name,n=null,t&&"name"in t?a(t):(i=this.defaultVersionIdentifier.name,o=t)}else r=this.defaultVersionIdentifier.name,n=e,t&&"name"in t?a(t):(i=this.defaultVersionIdentifier.name,o=t);return{fromVersionName:r,fromMoment:n,toVersionName:i,toMoment:o}}_changeVersionInternal(e,t,r){try{const{fromVersionName:s,fromMoment:n,toVersionName:i,toMoment:o}=this._setUpData(t,r);(this._isDefault(s)&&this._isDefault(e.gdbVersion)&&this._dateEquals(e.historicMoment,n)||s===e.gdbVersion&&this._dateEquals(e.historicMoment,n))&&(e.gdbVersion=i,e.historicMoment=o)}catch(e){return!1}return!0}_changeVersionInternalWithResult(e,t,r){try{const{fromVersionName:s,fromMoment:n,toVersionName:i,toMoment:o}=this._setUpData(t,r);return this._isDefault(s)&&this._isDefault(e.gdbVersion)&&this._dateEquals(e.historicMoment,n)||s===e.gdbVersion&&this._dateEquals(e.historicMoment,n)?(e.gdbVersion=i,e.historicMoment=o,{success:!0}):{success:!1}}catch(e){return{success:!1}}}_addMomentToVersionItem(e,t){const r=v.versionCollection.get(this.url);if(r)for(const[s,n]of r)n.name===e&&this._addToStack(s,t)}_addToStack(e,t){const r=v.versionCollection.get(this.url),s=r?.get(e);return!!s?.stack&&(function(e,t){return!e||e.getTime()<t.getTime()}(s.stack.peek(),t)&&s.stack.push(t),r.set(e,{...s,moment:t}),!0)}_addOrUpdateItem(e,t){const r=v.versionCollection.get(this.url),s=r?.get(e);return s?(r.set(e,{...s,...t}),!0):!(!t.name||!t.lockType||(r?.set(e,{...t,lockType:t.lockType}),0))}async _fetchService(e,t){if(this.sourceJSON){this.read(this.sourceJSON,{origin:"service",url:f.parseUrl(e)});const t=new o.Url(this.url).host;return void v.defaultVersionNameLookup.set(t,this.defaultVersionIdentifier.name)}const s=await r(e,{responseType:"json",query:{f:"json"},...t});this.read(s.data)}};return t.__decorate([a.property()],y.prototype,"url",void 0),t.__decorate([a.property()],y.prototype,"sourceJSON",void 0),t.__decorate([a.property({type:String,json:{write:!0}})],y.prototype,"name",void 0),t.__decorate([a.property({json:{write:{target:{defaultVersionName:{type:String},defaultVersionGuid:{type:String}}},read:{source:["defaultVersionName","defaultVersionGuid"]}}})],y.prototype,"defaultVersionIdentifier",void 0),t.__decorate([d.reader("defaultVersionIdentifier",["defaultVersionName","defaultVersionGuid"])],y.prototype,"readDefaultVersionIdentifier",null),t.__decorate([g.writer("defaultVersionIdentifier",{defaultVersionName:{type:String},defaultVersionGuid:{type:String}})],y.prototype,"writeDefaultVersionIdentifier",null),t.__decorate([a.property({json:{write:!0}})],y.prototype,"capabilities",void 0),y=t.__decorate([m.subclass("esri.versionManagement.VersionManagementService")],y),y});