// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./Field"],function(e,i){"use strict";const t="Raster.",a="Raster.Dim.",n=".Max",r={servicePixelValue:"Raster.ServicePixelValue",rawServicePixelValue:"Raster.ServicePixelValue.Raw",itemPixelValue:"Raster.ItemPixelValue",magnitude:"Raster.Magnitude",direction:"Raster.Direction",variable:"Raster.Variable"},l=new Map([["quarters","Quarter"],["months","Month"],["weeks","Week of the year"],["days","Day of the year"]]);function s(e,t){return new i({name:e,alias:t,domain:null,editable:!1,length:50,type:"string"})}function u(e,t){return new i({name:e,alias:t,domain:null,editable:!1,type:"double"})}function o(e){const i=e.endsWith(n),t=i?e.slice(0,-4):e,a="StdTime"===t?"Standard Time":"StdZ"===t?"Standard Z":t;return i?`${a} Max`:a}function c(e,i){return i?new Date(e):e}e.addMultidimensionalFieldValues=function(e,i,t){t?.length&&(i[r.variable]=t[0].variableName,t.forEach(({dimensionName:t,values:r})=>{if(t&&r?.length){const l=`${a}${t}`,s=e.find(({name:e})=>e===l);if(!s)return;const u="date"===s.type,o=r[0];if(Array.isArray(o)){if(i[`${a}${t}`]=c(o[0],u),null!=o[1]){const r=`${a}${t}${n}`;if(e.some(({name:e})=>e===r)){const e=c(o[1],u);i[r]=e}}}else i[`${a}${t}`]=c(o,u)}}))},e.commonRasterFieldNames=r,e.getDirectionField=function(){return u(`${r.direction}`,"Direction (Â°)")},e.getItemPixelValueField=function(){return s(r.itemPixelValue,"Item Pixel Value")},e.getMagnitudeField=function(e){return u(`${r.magnitude}`,"Magnitude"+(e?` (${e})`:""))},e.getMultidimensionalFields=function(e){const t=new Set,c=new Set,d=new Map;return e.variables.forEach(({dimensions:e})=>{e.forEach(e=>{if(e.recurring)d.set(e.name,e.unit);else{const i="ISO8601"===e.unit?.trim()?t:c;i.add(e.name),e.hasRanges&&i.add(`${e.name}${n}`)}})}),[s(r.variable,"Variable"),...[...t].map(e=>function(e,t){return new i({name:e,alias:t,domain:null,editable:!1,type:"date"})}(`${a}${e}`,o(e))),...[...c].map(e=>u(`${a}${e}`,o(e))),...[...d].map(([e,i])=>u(`${a}${e}`,function(e,i){return i=i?.toLowerCase(),i&&l.has(i)?l.get(i):o(e)}(e,i)))]},e.getProcessedServicePixelValueField=function(e){return s(`${r.servicePixelValue}.${e}`,e)},e.getRasterAttributeTableFields=function(e){return e.fields.filter(e=>"oid"!==e.type&&"value"!==e.name.toLowerCase()).map(e=>{const i=e.clone();return i.name=`${t}${e.name}`,i})},e.getRawServicePixelValueField=function(e){return s(r.rawServicePixelValue,e??"Raw Service Pixel Value")},e.getServicePixelValueField=function(e){return s(r.servicePixelValue,e??"Service Pixel Value")},e.rasterDimensionFieldPrefix=a,e.rasterFieldPrefix=t,e.setDefaultRasterFieldFormats=function(e,i){if(i.pixelType.startsWith("f")&&e.forEach(({format:e,fieldName:i})=>{e&&i&&/^raster\.(item|service)pixelvalue/i.test(i)&&(e.places=2)}),i.multidimensionalInfo){const t=i.multidimensionalInfo.variables.flatMap(({dimensions:e})=>e);e.forEach(({format:e,fieldName:i})=>{if(e&&i?.startsWith(a)){const a=i.slice(11),r=`${a}${n}`,l=t.find(({name:e})=>e===a||e===r);l?.values?.every(e=>Number.isInteger(e))&&(e.places=0)}})}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});