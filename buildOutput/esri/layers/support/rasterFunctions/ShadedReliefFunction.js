// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../rasterFormats/pixelRangeUtils","./BaseRasterFunction","./pixelUtils","./ShadedReliefFunctionArguments","./surfaceUtils","../../../renderers/support/colorRampUtils","../../../renderers/support/rasterRendererChecks"],function(e,t,s,r,o,i,n,a,p,c,u,l,d){"use strict";let h=class extends a{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const e=this.sourceRasterInfos[0];if(e.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:t,colormap:s}=this.functionArguments;if(!t&&!s?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const r=e.clone();this._removeStatsHistColormapVAT(r),r.pixelType=this.outputPixelType,r.bandCount=3,r.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=r,this.isGCS=r.spatialReference?.isGeographic??!1,s?.length||(s=l.convertColorRampToColormap(t,{interpolateAlpha:!0}));const{indexedColormap:o,offset:i}=p.createColormapLUT({colormap:s});if(!o?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const n=l.createHsvMap(o);return this.lookup={indexedColormap:o,offset:i,hsvMap:n},{success:!0,supportsGPU:d.isColormapSupportedByWebGL(o)}}_processPixels(e){const t=e.pixelBlocks?.[0];if(!t||!this.lookup)return null;let s=e.primaryPixelSizes?.[0];if(null==s){const{extent:r}=e;s=r?{x:r.width/t.width,y:r.height/t.height}:{x:1,y:1}}const r=u.getHillshadeOptions(this.functionArguments,s,this.isGCS),o=u.hillshade(t,r),i=this.sourceRasterInfos[0].statistics?.[0]??{min:0,max:8e3};return u.tintHillshade(o,t,this.lookup.hsvMap,i),o.pixelType=this.outputPixelType,o}_getWebGLParameters(){const e=u.getHillshadeOptions(this.functionArguments,{x:1,y:1},this.isGCS),t=u.calculateHillshadeParams(e),{slopeType:s,zFactor:r,pixelSizeFactor:o,pixelSizePower:i}=this.functionArguments,a="scaled"===s,{indexedColormap:p,offset:c}=this.lookup,l=this.sourceRasterInfos[0].statistics?.[0],d=n.isIntegerPixelType(this.outputPixelType);return{...t,indexedColormap:p,offset:c,zFactor:r,gcsFactor:this.isGCS?u.gcsFactor:1,pixelSizeFactor:a?o:0,pixelSizePower:a?i:0,minValue:l?.min??0,maxValue:l?.max??8e3,isOutputRounded:d}}};return e.__decorate([t.property({json:{write:!0,name:"rasterFunction"}})],h.prototype,"functionName",void 0),e.__decorate([t.property({type:c,json:{write:!0,name:"rasterFunctionArguments"}})],h.prototype,"functionArguments",void 0),e.__decorate([t.property()],h.prototype,"rasterArgumentNames",void 0),e.__decorate([t.property({json:{write:!0}})],h.prototype,"isGCS",void 0),e.__decorate([t.property({json:{write:!0}})],h.prototype,"lookup",void 0),h=e.__decorate([i.subclass("esri.layers.support.rasterFunctions.ShadedReliefFunction")],h),h});