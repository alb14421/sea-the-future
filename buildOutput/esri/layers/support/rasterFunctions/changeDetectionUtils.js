// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/has","../../../core/jsonMap","../PixelBlock","../rasterFormats/pixelRangeUtils"],function(e,t,a,n,s){"use strict";const i=new a.JSONMap({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),l=new a.JSONMap({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});e.changeMethodMap=i,e.computeChange=function(e,t,a,i){const[l,o]=e,c=s.isIntegerPixelType(a)&&!s.isIntegerPixelType(l.pixelType)&&!s.isIntegerPixelType(o.pixelType),d=[l.mask,o.mask].filter(e=>e),r=n.combineBandMasks(d),h=e.map(e=>e.pixels[0]),{width:f,height:p}=l,u=n.createEmptyBand(a,f*p);switch(t){case"difference":case"relative-difference":!function(e){const{bands:[t,a],mask:n,isRelative:s,isRoundingNeeded:i,outBand:l}=e,o=t.length;for(let e=0;e<o;e++)if(!n||n[e]){let n=t[e]-a[e];if(s){const s=Math.max(Math.abs(t[e])-Math.abs(a[e]));n=s>0?n/s:0}l[e]=i?Math.round(n):n}}({bands:h,mask:r,outBand:u,isRoundingNeeded:c,isRelative:"relative-difference"===t});break;case"categorical":!function(e){const{bands:[t,a],categoryIndexLookups:[n,s],classNames:[i,l],mask:o,keepMethod:c,outBand:d}=e,r=t.length,h=i.length,f=l.length,p=h*f,u=p+1,g=p+2;for(let e=0;e<r;e++)if(!o||o[e]){const o=t[e],r=a[e],h=n[o],m=s[r],k=i[h],x=l[m];d[e]=null==h||null==m?p:"changed"===c&&k===x?u:"unchanged"===c&&k!==x?g:h*f+m}}({bands:h,mask:r,outBand:u,...i});break;case"euclidean-distance":!function(e){const{pixels:[t,a],mask:n,outBand:s}=e,i=t[0].length,l=t.length;for(let e=0;e<i;e++)if(!n||n[e]){let n=0;for(let s=0;s<l;s++){const i=t[s][e]-a[s][e];n+=i*i}s[e]=Math.sqrt(n)}}({pixels:e.map(e=>e.pixels),mask:r,outBand:u});break;case"angle-difference":!function(e){const{pixels:[t,a],mask:n,outBand:s}=e,i=t[0].length,l=t.length;for(let e=0;e<i;e++)if(!n||n[e]){let n=0,i=0,o=0;for(let s=0;s<l;s++){const l=t[s][e],c=a[s][e];n+=l*c,i+=l*l,o+=c*c}const c=Math.sqrt(i*o);s[e]=c?Math.acos(n/c):1.5707963267948966}}({pixels:e.map(e=>e.pixels),mask:r,outBand:u});break;case"band-with-most-change":!function(e){const{pixels:[t,a],mask:n,outBand:s}=e,i=t[0].length,l=t.length;for(let e=0;e<i;e++)if(!n||n[e]){let n=0,i=0;for(let s=0;s<l;s++){const l=Math.abs(t[s][e]-a[s][e]);l>n&&(n=l,i=s)}s[e]=i}}({pixels:e.map(e=>e.pixels),mask:r,outBand:u})}const g=new n({width:f,height:p,pixels:[u],pixelType:a,mask:r});return g.updateStatistics(),g},e.keepMethodMap=l,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});