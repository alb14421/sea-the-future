// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../rasterFunctionConstants","../rasterFormats/pixelRangeUtils","./BaseRasterFunction","./ConvolutionFunctionArguments","./convolutionUtils"],function(e,t,o,n,r,s,u,i,l,c,p){"use strict";let a=class extends l{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:e,convolutionType:t}=this.functionArguments,o=e.reduce((e,t)=>e+t);return-1===t||0===o||1===o?e:e.map(e=>e/o)}_bindSourceRasters(){const{convolutionType:e,rows:t,cols:o,kernel:n}=this.functionArguments;if(!Object.values(u.convolutionKernel).includes(e))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${e}`};if(e!==u.convolutionKernel.none&&t*o!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const s=r.clone();s.pixelType=this.outputPixelType;const i=[u.convolutionKernel.none,u.convolutionKernel.sharpen,u.convolutionKernel.sharpen2,u.convolutionKernel.sharpening3x3,u.convolutionKernel.sharpening5x5];return(-1===e||"u8"!==this.outputPixelType&&!i.includes(e))&&(s.statistics=null,s.histograms=null),s.colormap=null,s.attributeTable=null,this.rasterInfo=s,{success:!0,supportsGPU:n.length<=25}}_processPixels(e){const t=e.pixelBlocks?.[0];if(null==t||this.functionArguments.convolutionType===u.convolutionKernel.none)return t;const{rows:o,cols:n}=this.functionArguments,{_normalizedKernel:r}=this;return p.convolute(t,{kernel:r,rows:o,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const e=new Float32Array(25),{rows:t,cols:o}=this.functionArguments,{_normalizedKernel:n}=this;for(let r=0;r<t;r++)for(let t=0;t<o;t++)e[5*r+t]=n[r*o+t];return{kernelRows:t,kernelCols:o,kernel:e,clampRange:i.getPixelValueRange(this.outputPixelType)}}};return e.__decorate([t.property({json:{write:!0,name:"rasterFunction"}})],a.prototype,"functionName",void 0),e.__decorate([t.property({type:c,json:{write:!0,name:"rasterFunctionArguments"}})],a.prototype,"functionArguments",void 0),e.__decorate([t.property()],a.prototype,"rasterArgumentNames",void 0),e.__decorate([t.property()],a.prototype,"_normalizedKernel",null),a=e.__decorate([s.subclass("esri.layers.support.rasterFunctions.ConvolutionFunction")],a),a});