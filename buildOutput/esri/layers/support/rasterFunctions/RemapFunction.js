// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/mathUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../rasterFormats/pixelRangeUtils","./BaseRasterFunction","./pixelUtils","./RemapFunctionArguments"],function(t,e,s,n,a,u,o,i,l,r,p){"use strict";let c=class extends l{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;t.bandCount=1;const{statistics:s}=t;this._removeStatsHistColormapVAT(t);const{allowUnmatched:n,replacementValue:a,outputValues:u,inputRanges:o,noDataRanges:l,isLastInputRangeInclusive:p}=this.functionArguments,c="unknown"===this.outputPixelType||null==this.outputPixelType;if(this.outputPixelType=this._getOutputPixelType(e),u?.length){const o=s?.[0];if(n&&null==a){let e=o?.min??u[0],s=o?.max??u[0];e=Math.min.apply(null,[...u,e]),s=Math.max.apply(null,[...u,s]),t.statistics=[{min:e,max:s,avg:o?.avg??0,stddev:o?.stddev??-1}]}else{let e=u[0],s=e;for(let t=0;t<u.length;t++)e=e>u[t]?u[t]:e,s=s>u[t]?s:u[t];n&&null!=a&&(e=Math.min(e,a),s=Math.max(s,a)),t.statistics=[{min:e,max:s,avg:o?.avg??0,stddev:o?.stddev??-1}]}if(c){const{min:s,max:o}=t.statistics[0],l=["u8","s8","u16","s16","u32","s32","f32"],r=l.find(t=>{const[e,n]=i.getPixelValueRange(t);return s>=e&&o<=n})??"f64";u.some(t=>Math.floor(t)!==t)?this.outputPixelType="f64"===r?"f64":"f32":this.outputPixelType=n&&null==a&&l.indexOf(e)>l.indexOf(r)?e:r}}return t.pixelType=this.outputPixelType,this.rasterInfo=t,this.lookup=n?null:r.createRemapLUT({srcPixelType:e,inputRanges:o,outputValues:u,noDataRanges:l,allowUnmatched:n,isLastInputRangeInclusive:p,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!u||u.length<=r.maxMapSizeGpu)&&(!l||l.length<=r.maxMapSizeGpu)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:s,outputPixelType:n}=this;if(s){const t=r.lookupPixels(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return null!=t&&s.mask&&(t.mask=r.lookupBandValues(e.pixels[0],e.mask,s.mask,s.offset,"u8")),t}const{inputRanges:a,outputValues:u,noDataRanges:o,allowUnmatched:i,isLastInputRangeInclusive:l,replacementValue:p}=this.functionArguments;return r.remap(e,{inputRanges:a,outputValues:u,noDataRanges:o,outputPixelType:n,allowUnmatched:i,isLastInputRangeInclusive:l,replacementValue:p})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:s,isLastInputRangeInclusive:n}=this.functionArguments,a=this.functionArguments.inputRanges??[],u=this.functionArguments.outputValues??[],o=r.createRangeMaps(a,u,n),l=new Float32Array(2*r.maxMapSizeGpu);return l.fill(e.numberMaxFloat32),s?.length&&l.set(s),{allowUnmatched:t,rangeMaps:o,noDataRanges:l,clampRange:i.getPixelValueRange(this.outputPixelType),replacementValue:this.functionArguments.replacementValue}}};return t.__decorate([s.property({json:{write:!0,name:"rasterFunction"}})],c.prototype,"functionName",void 0),t.__decorate([s.property({type:p,json:{write:!0,name:"rasterFunctionArguments"}})],c.prototype,"functionArguments",void 0),t.__decorate([s.property()],c.prototype,"rasterArgumentNames",void 0),t.__decorate([s.property({json:{write:!0}})],c.prototype,"lookup",void 0),c=t.__decorate([o.subclass("esri.layers.support.rasterFunctions.RemapFunction")],c),c});