// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/reader","../../../core/accessorSupport/decorators/subclass","./HillshadeFunctionArguments","../../../renderers/support/colorRampUtils"],function(e,r,o,t,s,a,c,p,i){"use strict";var l;let n=l=class extends p{readColorRamp(e){if("string"==typeof e){const r=i.colorRampDict.jsonValues.find(r=>r.toLowerCase()===e.toLowerCase());return r?i.getColorRampJSON(i.colorRampDict.fromJSON(r)):null}return"toJSON"in e?e.toJSON():e}clone(){return new l({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};return e.__decorate([r.property({json:{write:!0}})],n.prototype,"colorRamp",void 0),e.__decorate([a.reader("colorRamp")],n.prototype,"readColorRamp",null),e.__decorate([r.property({type:[[Number]],json:{write:!0}})],n.prototype,"colormap",void 0),n=l=e.__decorate([c.subclass("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],n),n});