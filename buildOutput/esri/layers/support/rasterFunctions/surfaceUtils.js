// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../PixelBlock","../SimpleBandStatistics","./pixelUtils"],function(t,e,i,s){"use strict";const l=1/111e3;function a(t){let{altitude:e,azimuth:i}=t;const{hillshadeType:s,pixelSizePower:a=1,pixelSizeFactor:n=1,scalingType:o,isGCS:r,resolution:c}=t,h="multi-directional"===s?2*t.zFactor:t.zFactor,{x:u,y:d}=c;let f=h/(8*u),p=h/(8*d);if(r&&h>.001&&(f/=l,p/=l),"adjusted"===o)if(r){const t=u*l,e=d*l;f=(h+t**a*n)/(8*t),p=(h+e**a*n)/(8*e)}else f=(h+u**a*n)/(8*u),p=(h+d**a*n)/(8*d);let x=(90-e)*Math.PI/180,y=Math.cos(x),w=(360-i+90)*Math.PI/180,M=Math.sin(x)*Math.cos(w),g=Math.sin(x)*Math.sin(w);const m=[315,270,225,360,180,0],z=[60,60,60,60,60,90],P=new Float32Array([3,5,3,2,1,4]),k=P.reduce((t,e)=>t+e),A=P.map(t=>t/k),S="multi-directional"===s?m.length:1,F=new Float32Array(6),T=new Float32Array(6),C=new Float32Array(6);if("multi-directional"===s)for(let t=0;t<S;t++)e=z[t],i=m[t],x=(90-e)*Math.PI/180,y=Math.cos(x),w=(360-i+90)*Math.PI/180,M=Math.sin(x)*Math.cos(w),g=Math.sin(x)*Math.sin(w),F[t]=y,T[t]=M,C[t]=g;else F.fill(y),T.fill(M),C.fill(g);return{resolution:c,factor:[f,p],sinZcosA:M,sinZsinA:g,cosZ:y,sinZcosAs:[...T],sinZsinAs:[...C],cosZs:[...F],weights:[...A],hillshadeType:["traditional","multi-directional"].indexOf(s)}}function n(t,e){const{width:i,height:s}=t,l=i*s,a=new Uint8Array(l),n=null!=t.mask;let o;if(n){o=new Uint8Array(t.mask);for(let t=0;t<o.length;t++)o[t]&&(a[t]=1,o[t]=1)}const r=t.pixels[0],c=new Float32Array(l),h=new Float32Array(l);let u,d=0;if(e){const{resolution:t}=e,i=t?(t.x+t.y)/2:1;d=200*e.zFactor/(i*i),u=new Float32Array(l)}const f=e?.curvatureType;let p,x,y,w,M,g,m,z;for(let t=1;t<s-1;t++){const e=t*i;for(let t=1;t<i-1;t++){const s=e+t;if(!o||0!==o[s]){if(o){if(o[s-i-1]+o[s-i]+o[s-i+1]+o[s-1]+o[s+1]+o[s+i-1]+o[s+i]+o[s+i+1]<7){a[s]=0;continue}p=o[s-i-1]?r[s-i-1]:r[s],x=o[s-i]?r[s-i]:r[s],y=o[s-i+1]?r[s-i+1]:r[s],w=o[s-1]?r[s-1]:r[s],M=o[s+1]?r[s+1]:r[s],g=o[s+i-1]?r[s+i-1]:r[s],m=o[s+i]?r[s+i]:r[s],z=o[s+i+1]?r[s+i+1]:r[s]}else p=r[s-i-1],x=r[s-i],y=r[s-i+1],w=r[s-1],M=r[s+1],g=r[s+i-1],m=r[s+i],z=r[s+i+1];if(c[s]=y+M+M+z-(p+w+w+g),h[s]=g+m+m+z-(p+x+x+y),null!=u){const t=r[s],e=.5*(w+M)-t,i=.5*(x+m)-t;if("standard"===f)u[s]=-d*(e+i);else{const t=(-p+y+g-z)/4,l=(-w+M)/2,a=(x-m)/2,n=l*l,o=a*a,r=n+o;r&&(u[s]="profile"===f?d*(e*n+i*o+t*l*a)/r:-d*(e*o+i*n-t*l*a)/r)}}}}}return{outMask:n?a:null,dzxs:c,dzys:h,curvatures:u}}function o(t,e,i){for(let s=0;s<i;s++)t[s*e]=t[s*e+1],t[(s+1)*e-1]=t[(s+1)*e-2];for(let s=1;s<e-1;s++)t[s]=t[s+e],t[s+(i-1)*e]=t[s+(i-2)*e]}t.aspect=function(t,l={}){if(!s.isValidPixelBlock(t))return t;const{resolution:a}=l,r=a?1/a.x:1,c=a?1/a.y:1,{dzxs:h,dzys:u,outMask:d}=n(t),{width:f,height:p}=t,x=new Float32Array(f*p);for(let t=1;t<p-1;t++){const e=t*f;for(let t=1;t<f-1;t++){const i=e+t;if(!d||d[i]){const s=h[i]*r,l=u[i]*c;let a=-1;0===s&&0===l||(a=90-57.29578*Math.atan2(l,-s),a<0&&(a+=360),360===a?a=0:a>360&&(a%=360)),x[e+t]=a}}}return o(x,f,p),new e({width:f,height:p,pixels:[x],mask:d,pixelType:"f32",validPixelCount:t.validPixelCount,statistics:[new i.SimpleBandStatistics(-1,360)]})},t.calculateHillshadeParams=a,t.curvature=function(t,i){if(!s.isValidPixelBlock(t))return t;const{curvatures:l,outMask:a}=n(t,i),{width:r,height:c}=t;o(l,r,c);const h=new e({width:r,height:c,pixels:[l],mask:a,pixelType:"f32",validPixelCount:t.validPixelCount});return h.updateStatistics(),h},t.gcsFactor=l,t.getHillshadeOptions=function(t,e,i){const{hillshadeType:s,altitude:l,azimuth:a,zFactor:n,pixelSizeFactor:o,pixelSizePower:r,slopeType:c}=t;return{hillshadeType:s,altitude:l,azimuth:a,zFactor:n,pixelSizePower:r,pixelSizeFactor:o,scalingType:"scaled"===c?"adjusted":"none",resolution:e,isGCS:i}},t.hillshade=function(t,l){if(!s.isValidPixelBlock(t))return t;const{factor:r,sinZcosA:c,sinZsinA:h,cosZ:u,sinZcosAs:d,sinZsinAs:f,cosZs:p,weights:x}=a(l),[y,w]=r,M="traditional"===l.hillshadeType,{width:g,height:m}=t,z=new Uint8Array(g*m),{dzxs:P,dzys:k,outMask:A}=n(t);for(let t=1;t<m-1;t++){const e=t*g;for(let t=1;t<g-1;t++){const i=e+t;if(!A||A[i]){const t=P[i]*y,e=k[i]*w,s=Math.sqrt(1+t*t+e*e);let l=0;if(M){let i=255*(u+h*e-c*t)/s;i<0&&(i=0),l=i}else{const i=f.length;for(let a=0;a<i;a++){let i=255*(p[a]+f[a]*e-d[a]*t)/s;i<0&&(i=0),l+=i*x[a]}}z[i]=255&l}}}return o(z,g,m),new e({width:g,height:m,pixels:[z],mask:A,pixelType:"u8",validPixelCount:t.validPixelCount,statistics:[new i.SimpleBandStatistics(0,255)]})},t.slope=function(t,i){if(!s.isValidPixelBlock(t))return t;const a=i.zFactor,r=i.pixelSizePower??1,c=i.pixelSizeFactor??1,h=i.slopeType,u=i.isGCS,{x:d,y:f}=i.resolution;let p=a/(8*d),x=a/(8*f);u&&Math.abs(a-1)<1e-4&&(p/=l,x/=l),"adjusted"===h&&(p=(a+d**r*c)/(8*d),x=(a+f**r*c)/(8*f));const{dzxs:y,dzys:w,outMask:M}=n(t),{width:g,height:m}=t,z=new Float32Array(g*m);for(let t=1;t<m-1;t++){const e=t*g;for(let t=1;t<g-1;t++){const i=e+t;if(!M||M[i]){const s=y[i]*p,l=w[i]*x,a=Math.sqrt(s*s+l*l);z[e+t]="percent-rise"===h?100*a:57.2957795*Math.atan(a)}}}o(z,g,m);const P=new e({width:g,height:m,pixels:[z],mask:M,pixelType:"f32",validPixelCount:t.validPixelCount});return P.updateStatistics(),P},t.tintHillshade=function(t,e,i,l){if(!s.isValidPixelBlock(t)||!s.isValidPixelBlock(e))return;const{min:a,max:n}=l,o=t.pixels[0],{pixels:r,mask:c}=e,h=r[0],u=255.00001/(n-a),d=new Uint8ClampedArray(h.length),f=new Uint8ClampedArray(h.length),p=new Uint8ClampedArray(h.length),x=i.length-1;for(let t=0;t<h.length;t++){if(c&&0===c[t])continue;const e=Math.floor((h[t]-a)*u),[s,l]=i[e<0?0:e>x?x:e],n=o[t],r=n*l,y=r*(1-Math.abs(s%2-1)),w=n-r;switch(Math.floor(s)){case 0:d[t]=r+w,f[t]=y+w,p[t]=w;break;case 1:d[t]=y+w,f[t]=r+w,p[t]=w;break;case 2:d[t]=w,f[t]=r+w,p[t]=y+w;break;case 3:d[t]=w,f[t]=y+w,p[t]=r+w;break;case 4:d[t]=y+w,f[t]=w,p[t]=r+w;break;case 5:case 6:d[t]=r+w,f[t]=w,p[t]=y+w}}t.pixels=[d,f,p],t.updateStatistics()},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});