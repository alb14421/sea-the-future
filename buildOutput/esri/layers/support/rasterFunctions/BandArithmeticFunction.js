// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../rasterFormats/pixelRangeUtils","./BandArithmeticFunctionArguments","./bandIndexUtils","./BaseRasterFunction"],function(e,t,s,n,a,r,i,o,c,u){"use strict";const d=new Set(["vari","mtvi2","rtvi-core","evi"]);let p=class extends u{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const e=this.sourceRasterInfos[0];if(e.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const t=e.clone();return t.pixelType=this.outputPixelType,t.bandCount="sultan"===this.functionArguments.method?3:1,this._removeStatsHistColormapVAT(t),t.keyProperties={...t.keyProperties,BandProperties:void 0},this.rasterInfo=t,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(e){const t=e.pixelBlocks?.[0];if(null==t)return t;const{method:s,bandIndexes:n}=this.functionArguments,a=n.split(" ").map(e=>parseFloat(e));return c.calculateBandIndex(t,{method:s,bandIndexes:a,equation:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const e=this.functionArguments.bandIndexes.split(" ").map(e=>parseFloat(e)-1);2===e.length&&e.push(0);const t=this.isInputBandIdsSwizzled?[0,1,2]:e;let s,n;const a=new Float32Array(3),{method:r}=this.functionArguments;switch(r){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=c.getBandMatrix3([t[0],t[1],0]),n="ndxi";break;case"ndwi":s=c.getBandMatrix3([t[1],t[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=c.getBandMatrix3([t[0],t[1],0]),n="sr";break;case"ci-g":case"ci-re":s=c.getBandMatrix3([t[0],t[1],0]),n="ci";break;case"savi":s=c.getBandMatrix3([t[0],t[1],0]),n="savi",a[0]=e[2]+1;break;case"tsavi":s=c.getBandMatrix3([t[0],t[1],0]),n="tsavi",a[0]=e[2]+1,a[1]=e[3]+1,a[2]=e[4]+1;break;case"msavi":s=c.getBandMatrix3([t[0],t[1],0]),n="msavi";break;case"gemi":s=c.getBandMatrix3([t[0],t[1],0]),n="gemi";break;case"pvi":s=c.getBandMatrix3([t[0],t[1],0]),n="tsavi",a[0]=e[2]+1,a[1]=e[3]+1;break;case"vari":s=c.getBandMatrix3([t[0],t[1],t[2]]),n="vari";break;case"mtvi2":s=c.getBandMatrix3([t[0],t[1],t[2]]),n="mtvi";break;case"rtvi-core":s=c.getBandMatrix3([t[0],t[1],t[2]]),n="rtvicore";break;case"evi":s=c.getBandMatrix3([t[0],t[1],t[2]]),n="evi";break;case"wndwi":s=c.getBandMatrix3([t[0],t[1],0]),n="wndwi",a[0]=e[3]?e[3]+1:.5;break;case"bai":s=c.getBandMatrix3([t[1],t[0],0]),n="bai";break;default:s=c.getBandMatrix3([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:a,isOutputRounded:i.isIntegerPixelType(this.outputPixelType)}}_getInputBandIds(e){if("custom"===this.functionArguments.method)return e;const t=this.functionArguments.bandIndexes.split(" ").map(e=>parseFloat(e)-1),s=e.length,n=t.map(e=>e>=s?s-1:e),a=d.has(this.functionArguments.method)?3:2,r=n.slice(0,a).map(t=>e[t]);return 2===r.length&&r.push(0),r}_swizzleBandIds(e){const t=this.functionArguments.bandIndexes.split(" ").map(e=>parseFloat(e)-1);2===t.length&&t.push(0);const{method:s}=this.functionArguments,n=(["vari","mtvi2","rtvi-core","evi"].includes(s)?t.slice(0,3):"bai"===s||"ndwi"===s?[t[1],t[0]]:t.slice(0,2)).map(t=>e.indexOf(t));return n[2]??=n[1],this.isInputBandIdsSwizzled=!0,this.swizzledBandSelection=n,!1}};return e.__decorate([t.property({json:{write:!0,name:"rasterFunction"}})],p.prototype,"functionName",void 0),e.__decorate([t.property({type:o,json:{write:!0,name:"rasterFunctionArguments"}})],p.prototype,"functionArguments",void 0),e.__decorate([t.property()],p.prototype,"rasterArgumentNames",void 0),p=e.__decorate([r.subclass("esri.layers.support.rasterFunctions.BandArithmeticFunction")],p),p});