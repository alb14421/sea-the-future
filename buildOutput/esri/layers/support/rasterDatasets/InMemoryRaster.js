// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Error","../../../core/promiseUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../geometry/Extent","../../../geometry/SpatialReference","../DimensionalDefinition","../RasterInfo","./BaseRaster","./multidimensionalUtils","../rasterFunctions/pixelUtils","../rasterFunctions/stretchUtils"],function(e,t,s,i,a,r,o,l,n,c,m,u,p,h,d,f){"use strict";let g=class extends p{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(e,t,s,i={}){if(!this._pixelBlockTiles){const{rasterInfo:a}=this,[r,o]=a.storageInfo.tileInfo.size,{sliceId:l}=i,{pixelBlocks:n}=this.source,c={pixelBlock:null==l?n[0]:n[l],useBilinear:"thematic"!==a.dataType,tileSize:{width:r,height:o},level:e,row:t,col:s},m=this.rasterJobHandler?this.rasterJobHandler.clipTile(c,i):d.clipTile(c);return Promise.resolve(m)}const a=this._pixelBlockTiles.get(`${e}/${t}/${s}`);return Promise.resolve(a)}async _open(e){const t=this.source,{pixelBlocks:s,attributeTable:i,statistics:a,histograms:r,name:o,nativeExtent:l,transform:m}=t,p=s[0],{width:h,height:d,pixelType:f}=p,g=t.extent??new n({xmin:-.5,ymin:.5,xmax:h-.5,ymax:d-.5,spatialReference:new c({wkid:3857})}),y=t.isPseudoSpatialReference??!t.extent,x={x:g.width/h,y:g.height/d},b={...t.keyProperties};i&&(b.DataType="Thematic");const v=new u({width:h,height:d,pixelType:f,extent:g,nativeExtent:l,attributeTable:i,transform:m,pixelSize:x,spatialReference:g.spatialReference,bandCount:p.pixels.length,keyProperties:b,multidimensionalInfo:t.multidimensionalInfo,statistics:a,isPseudoSpatialReference:y,histograms:r});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(v),this.createRemoteDatasetStorageInfo(v,512,512),this._set("rasterInfo",v),this.updateTileInfo(),v.multidimensionalInfo?await this._buildMDimStats(t.pixelBlocks,v.multidimensionalInfo):await this._buildInMemoryRaster(p,{width:512,height:512},e),v.multidimensionalInfo||(this.source=null),this.datasetName=o}async _buildInMemoryRaster(e,i,a){const{rasterInfo:r}=this,o=r.storageInfo.maximumPyramidLevel??0,l="thematic"!==r.dataType,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:i,maximumPyramidLevel:o,useBilinear:l},a):Promise.resolve(d.split(e,i,o,l)),c=null!=r.statistics,m=null!=r.histograms,u=this.ioConfig.skipStatistics||c?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},a):Promise.resolve(f.estimateStatisticsHistograms(e)),p=await s.eachAlways([n,u]);if(!p[0].value&&p[1].value)throw new t("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=p[0].value,c||(r.statistics=p[1].value?.statistics),m||(r.histograms=p[1].value?.histograms)}async _buildMDimStats(e,t,s){for(let i=0;i<t.variables.length;i++){const a=t.variables[i];if(a.statistics)continue;const r=a.dimensions.map(e=>new m({variableName:a.name,dimensionName:e.name,values:[e.values?.[0]??e.extent?.[0]],isSlice:!0})),o=h.getSliceIndex(r,t),l=null==o?null:e[o];if(null==l)continue;const n=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:l},s):f.computeStatisticsHistograms(l);a.statistics=n.statistics,a.histograms||(a.histograms=n.histograms)}}};return e.__decorate([i.property({type:String,json:{write:!0}})],g.prototype,"datasetFormat",void 0),e.__decorate([i.property()],g.prototype,"source",void 0),e.__decorate([i.property()],g.prototype,"url",null),g=e.__decorate([l.subclass("esri.layers.support.rasterDatasets.InMemoryRaster")],g),g});