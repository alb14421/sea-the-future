// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../request","../../core/Error","../../core/lang","../../core/memoryEstimations","../../geometry/support/UintArray"],function(t,i,e,a,o,l){"use strict";class n{constructor(t){!function(t){if(!t?.location)throw new e("tilemap:missing-location","Location missing from tilemap response");if(!1===t.valid)throw new e("tilemap:invalid","Tilemap response was marked as invalid");if(!t.data)throw new e("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(t.data))throw new e("tilemap:data-mismatch","Data must be an array of numbers");if(t.data.length!==t.location.width*t.location.height)throw new e("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}(t);const{location:i,data:n}=t;this.location=Object.freeze(a.clone(i));const r=this.location.width,s=this.location.height;let h=!0,c=!0;const m=Math.ceil(r*s/32),f=l.newUintArray(m);let d=0;for(let t=0;t<n.length;t++){const i=t%32;n[t]?(c=!1,f[d]|=1<<i):h=!1,31===i&&++d}c?(this._availability="unavailable",this.byteSize=40):h?(this._availability="available",this.byteSize=40):(this._availability=f,this.byteSize=40+o.estimateNumberArrayMemory(f))}getAvailability(t,i){if("unavailable"===this._availability||"available"===this._availability)return this._availability;const e=(t-this.location.top)*this.location.width+(i-this.location.left),a=e%32,o=e>>5,l=this._availability;return o<0||o>l.length?"unknown":l[o]&1<<a?"available":"unavailable"}static fromDefinition(t,a){const o=t.service.request||i,{row:l,col:r,width:s,height:h}=t,c={query:{f:"json"}};return a=a?{...c,...a}:c,o(function(t){let i;if(t.service.tileServers?.length){const e=t.service.tileServers;i=`${e&&e.length?e[t.row%e.length]:t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`}else i=`${t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`;const e=t.service.query;return e&&(i=`${i}?${e}`),i}(t),a).then(t=>t.data).catch(t=>{if(422===t?.details?.httpStatus)return{location:{top:l,left:r,width:s,height:h},valid:!0,data:new Array(s*h).fill(0)};throw t}).then(t=>{if(t.location&&(t.location.top!==l||t.location.left!==r||t.location.width!==s||t.location.height!==h))throw new e("tilemap:location-mismatch","Tilemap response for different location than requested",{response:t,definition:{top:l,left:r,width:s,height:h}});return n.fromJSON(t)})}static fromJSON(t){return Object.freeze(new n(t))}}t.Tilemap=n,t.tilemapDefinitionId=function(t){return`${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});