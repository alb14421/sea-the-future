// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/Clonable","../../core/Collection","../../core/JSONSupport","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../geometry/support/scaleUtils","./DisplayFilter","./displayFilterUtils"],function(e,r,t,o,l,s,a,i,c,p,n,u,d,y){"use strict";return e.default=class extends(t.ClonableMixin(l.JSONSupport)){constructor(e){super(e),this.activeFilterId=null,this.filters=new(o.ofType(d)),this.mode="manual"}writeFilters(e,r,t,o){const l=e.toArray();"scale"===this.mode&&l.sort((e,r)=>{const t=u.compareMinScale(r.minScale,e.minScale),o=e.maxScale-r.maxScale;return 0===t?o:t}),r[t]=l.map(e=>e.toJSON(o))}write(e,r){return super.write(e,y.createDisplayFilterJSONContext(this,r))}},r.__decorate([s.property({type:String,json:{write:{overridePolicy:(e,r,t)=>({enabled:"manual"===t.filterMode,isRequired:!0})}}})],e.default.prototype,"activeFilterId",void 0),r.__decorate([s.property({type:o.ofType(d),nonNullable:!0,json:{write:!0}})],e.default.prototype,"filters",void 0),r.__decorate([n.writer("filters")],e.default.prototype,"writeFilters",null),r.__decorate([s.property({type:["manual","scale"],nonNullable:!0,json:{name:"filterMode",write:!0}})],e.default.prototype,"mode",void 0),e.default=r.__decorate([p.subclass("esri.layers.support.DisplayFilterInfo")],e.default),e.default});