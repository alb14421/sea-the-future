// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../core/Error","../../core/urlUtils","./arcgisLayerUrl","./associatedFeatureServiceUtils","./fetchService","./layerUtils","./lazyLayerLoader","../../support/requestPresets"],function(e,r,a,t,s,l,n,o,c,i){"use strict";const u=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),y={FeatureLayer:!0,SceneLayer:!0,VideoLayer:!0};function f(e,r){return e?e.find(({id:e})=>e===r):null}function S(e,r,a,t,s){const l={...s,layerId:r};return null!=e&&(l.url=e),null!=a&&(l.sourceJSON=a),"sublayerTitleMode"in t.prototype&&(l.sublayerTitleMode="service-name"),new t(l)}function p(e){return null!=e&&e.hasOwnProperty("store")&&e.hasOwnProperty("id")&&"number"==typeof e.id}async function d(e){return(0,c.layerLookupMap[e])()}r.fromUrl=async function(r){const{properties:c,url:v}=r,m={...c,url:v},w=await async function(e,r){let c=s.parse(e);if(null==c&&(c=await async function(e,r){const a=await i.fetchArcGISServiceJSON(e,{customParameters:r});let l=null,n=null;const o=a.type;if("Feature Layer"===o||"Table"===o?(l="FeatureServer",n=a.id??null):"indexedVector"===o?l="VectorTileServer":a.hasOwnProperty("mapName")?l="MapServer":a.hasOwnProperty("bandCount")&&a.hasOwnProperty("pixelSizeX")?l="ImageServer":a.hasOwnProperty("maxRecordCount")&&a.hasOwnProperty("allowGeometryUpdates")?l="FeatureServer":a.hasOwnProperty("streamUrls")?l="StreamServer":p(a)?(l="SceneServer",n=a.id):a.hasOwnProperty("layers")&&p(a.layers?.[0])&&(l="SceneServer"),!l)return null;const c=null!=n?s.parseNonStandardSublayerUrl(e):null;return{title:null!=c&&a.name||t.getFilename(e),serverType:l,sublayer:n,url:{path:null!=c?c.serviceUrl:t.urlToObject(e).path}}}(e,r)),null==c)throw new a("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:e});const{serverType:u,sublayer:f}=c;let S;const v={FeatureServer:"FeatureLayer",KnowledgeGraphServer:"KnowledgeGraphLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer",VideoServer:"VideoLayer"},m="FeatureServer"===u,w="SceneServer"===u,h={parsedUrl:c,Constructor:null,layerId:m||w?f??void 0:void 0,layers:[],tables:[]};switch(u){case"MapServer":if(null!=f){const{type:t}=await i.fetchArcGISServiceJSON(e,{customParameters:r});switch(S="FeatureLayer",t){case"Catalog Layer":S="CatalogLayer";break;case"Catalog Dynamic Group Layer":throw new a("arcgis-layers:unsupported",`fromUrl() not supported for "${t}" layers`)}}else{const a=await async function(e,r){return(await i.fetchArcGISServiceJSON(e,{customParameters:r})).tileInfo}(e,r);S=a?"TileLayer":"MapImageLayer"}break;case"ImageServer":{const a=await i.fetchArcGISServiceJSON(e,{customParameters:r}),{tileInfo:t,cacheType:s}=a;S=t?"LERC"!==t?.format?.toUpperCase()||s&&"elevation"!==s.toLowerCase()?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const e=await i.fetchArcGISServiceJSON(c.url.path,{customParameters:r});if(S="SceneLayer",e){const r=e?.layers;if("Voxel"===e?.layerType)S="VoxelLayer";else if(r?.length){const e=r[0]?.layerType;null!=e&&null!=o.sceneServiceLayerTypeToClassName[e]&&(S=o.sceneServiceLayerTypeToClassName[e])}}break}case"3DTilesServer":throw new a("arcgis-layers:unsupported","fromUrl() not supported for 3DTiles layers");case"FeatureServer":if(S="FeatureLayer",null!=f){const a=await i.fetchArcGISServiceJSON(e,{customParameters:r});h.sourceJSON=a,h.preferredUrl=o.getPreferredUrl(),S=n.getLayerModuleType(a.type)}break;default:S=v[u]}if(y[S]&&null==f){const a=await async function(e,r,a){let t,s,c,u=!1;switch(r){case"FeatureServer":{const r=await n.fetchFeatureService(e,{customParameters:a});c=o.getPreferredUrl(e,{preferredHost:r.preferredHost}),u=!!r.layersJSON,t=r.layersJSON||r.serviceJSON;break}case"SceneServer":{const r=await async function(e,r){const a=await i.fetchArcGISServiceJSON(e,{customParameters:r}),t=a.layers?.[0];if(!t)return{serviceInfo:a};try{const{serverUrl:t}=await l.findAssociatedFeatureService(e),s=await i.fetchArcGISServiceJSON(t,{customParameters:r}).catch(()=>null);return s&&(a.tables=s.tables),{serviceInfo:a,tableServerUrl:t}}catch{return{serviceInfo:a}}}(e,a);t=r.serviceInfo,s=r.tableServerUrl;break}default:t=await i.fetchArcGISServiceJSON(e,{customParameters:a})}const y=t?.layers,f=t?.tables;return{preferredUrl:c,layers:y?.map(e=>({id:e.id})).reverse()||[],tables:f?.map(e=>({serverUrl:s,id:e.id})).reverse()||[],layerInfos:u?y:[],tableInfos:u?f:[]}}(e,u,r);if(m&&(h.preferredUrl=a.preferredUrl,h.sublayerInfos=a.layerInfos,h.tableInfos=a.tableInfos),1!==a.layers.length+a.tables.length)h.layers=a.layers,h.tables=a.tables,m&&a.layerInfos?.length&&(h.sublayerConstructorProvider=await async function(e){if(!e.length)return;const r=new Set,a=[];for(const{type:t}of e)r.has(t)||(r.add(t),a.push(d(n.getLayerModuleType(t))));const t=await Promise.all(a),s=new Map;return Array.from(r).forEach((e,r)=>{s.set(e,t[r])}),e=>s.get(e.type)}(a.layerInfos));else if(m||w){const e=a.layerInfos?.[0]??a.tableInfos?.[0];if(h.layerId=a.layers[0]?.id??a.tables[0]?.id,h.sourceJSON=e,m){const r=e?.type;S=n.getLayerModuleType(r)}}}return h.Constructor=await d(S),h}(v,c?.customParameters),{Constructor:h,layerId:b,sourceJSON:I,parsedUrl:g,layers:L,tables:O}=w;if(L.length+O.length===0)return null!=b&&(m.layerId=b),null!=I&&(m.sourceJSON=I),new h(m);const P=new(0,(await new Promise((r,a)=>e(["../GroupLayer"],e=>r(u(e)),a))).default)({title:g.title});return await async function(e,r,a){const t=r.sublayerConstructorProvider;for(const{id:s,serverUrl:l}of r.layers){const n=f(r.sublayerInfos,s),o=S(l,s,n,(n&&t?.(n))??r.Constructor,a);e.add(o)}if(r.tables.length){const t=await d("FeatureLayer");r.tables.forEach(({id:s,serverUrl:l})=>{const n=S(l,s,f(r.tableInfos,s),t,a);e.tables.add(n)})}}(P,w,m),P},Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});