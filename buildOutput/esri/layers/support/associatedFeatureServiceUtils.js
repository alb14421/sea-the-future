// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../kernel","../../request","../../core/Error","../../core/promiseUtils","./arcgisLayerUrl","../../portal/Portal","../../portal/PortalItem"],function(e,r,t,n,a,o,i,l){"use strict";async function s(e){if(e.rootDocument)return e.rootDocument;const r={query:{f:"json",...e.customParameters,token:e.apiKey},responseType:"json",signal:e.signal};try{const n=await t(e.sceneServerUrl,r);e.rootDocument=n.data}catch{e.rootDocument={}}return e.rootDocument}async function c(e,r){const a=o.parse(e);if(!a)throw new n("invalid-feature-service-url","Invalid feature service url");const i=a.url.path,l=r.layerId;if(null==l)return{serverUrl:i};const c=s(r),u=r.featureServiceItem?await r.featureServiceItem.fetchData("json"):null,f=(u?.layers?.[0]||u?.tables?.[0])?.customParameters,y=e=>{const n={query:{f:"json",...f},responseType:"json",authMode:e,signal:r.signal};return t(i,n)},d=y("anonymous").catch(()=>y("no-prompt")),[p,v]=await Promise.all([d,c]),w=v?.layers,m=p.data&&p.data.layers;if(!Array.isArray(m))throw new Error("expected layers array");if(Array.isArray(w)){for(let e=0;e<Math.min(w.length,m.length);e++)if(w[e].id===l)return{serverUrl:i,layerId:m[e].id}}else if(null!=l&&l<m.length)return{serverUrl:i,layerId:m[l].id};throw new Error("could not find matching associated sublayer")}e.findAssociatedFeatureService=async function(e,u){const f=o.parse(e);if(!f)throw new n("invalid-url","Invalid scene service url");const y={...u,sceneServerUrl:f.url.path,layerId:f.sublayer??void 0};if(y.sceneLayerItem??=await async function(e){const n=(await s(e)).serviceItemId;if(!n)return null;const o=new l({id:n,apiKey:e.apiKey}),c=await async function(e){const n=r.id?.findServerInfo(e.sceneServerUrl);if(n?.owningSystemUrl)return n.owningSystemUrl;const o=e.sceneServerUrl.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const r=(await t(o,{query:{f:"json"},responseType:"json",signal:e.signal})).data.owningSystemUrl;if(r)return r}catch(e){a.throwIfAbortError(e)}return null}(e);null!=c&&(o.portal=new i({url:c}));try{return await o.load({signal:e.signal})}catch(e){return a.throwIfAbortError(e),null}}(y),null==y.sceneLayerItem)return c(y.sceneServerUrl.replace("/SceneServer","/FeatureServer"),y);const d=await async function({sceneLayerItem:e,signal:r}){if(!e)return null;try{const t=(await e.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:r})).find(e=>"Feature Service"===e.type)||null;if(!t)return null;const n=new l({portal:t.portal,id:t.id});return await n.load(),n}catch(e){return a.throwIfAbortError(e),null}}(y);if(!d?.url)throw new n("related-service-not-found","Could not find feature service through portal item relationship");y.featureServiceItem=d;const p=await c(d.url,y);return p.portalItem=d,p},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});