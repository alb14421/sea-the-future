// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/accessorSupport/PropertyOrigin","./layerUtils"],function(e,r,t){"use strict";const i=e=>"feature"===e.type&&!e.isTable,o={feature:{predicate:t.isFeatureServiceLayer,propertyGroups:[{id:"attribute-table-template",properties:["attributeTableTemplate"]},{id:"blend-mode",properties:["blendMode"],predicate:i},{id:"charts",properties:["charts"]},{id:"custom-parameters",properties:["customParameters"]},{id:"definition-expression",properties:["definitionExpression"]},{id:"display-filter",properties:["displayFilterInfo","displayFilterEnabled"],predicate:i},{id:"effect",properties:["effect","featureEffect"],predicate:i},{id:"feature-reduction",properties:["featureReduction"],predicate:i},{id:"floor-info",properties:["floorInfo"],predicate:i},{id:"form-template",properties:["formTemplate"]},{id:"labels",properties:["labelingInfo","labelsVisible"],predicate:i},{id:"legend-enabled",properties:["legendEnabled"],predicate:i},{id:"opacity",properties:["opacity"],predicate:i},{id:"order-by",properties:["orderBy"],predicate:i},{id:"popup",properties:["popupTemplate","popupEnabled"]},{id:"refresh-interval",properties:["refreshInterval"]},{id:"renderer",properties:["renderer"],predicate:i},{id:"scale-range",properties:["minScale","maxScale"],predicate:i},{id:"use-view-time",properties:["useViewTime"]}]}};function p(e){const r=o[e.type];return r?.propertyGroups.filter(r=>!r.predicate||r.predicate(e))??[]}function n(e){const r=p(e),t=[];for(const e of r)t.push(...e.properties);return t}function a(e,t,i){const o=r.writableNameToId(i);e.revert(t,r.idToReadableName(o-1))}function d(e,t,i){const o=r.writableNameToId(i),p=e,n=p.originIdOf(t);n<o&&1!==n&&p.updateOrigin(t,r.idToWritableName(o))}function s(e){const r=o[e.type];return!(!r||r.predicate&&!r.predicate(e))}e.clearOverrides=function(e,r){if(!s(e))return;const t=n(e);for(const i of t)a(e,i,r)},e.disconnectFromSource=function(e,r){if(!s(e))return;const t=n(e);for(const i of t)d(e,i,r)},e.getLayerOriginInfo=function(e,t){if(!s(e))return;const i=p(e).map(i=>function(e,t,i){const o=r.writableNameToId(i),{id:p,properties:n}=t,a=n.map(r=>function(e,r,t){return e.originIdOf(r)<t?"source":"overridden"}(e,r,o)).reduce((e,r)=>e===r?e:"overridden");return{id:p,properties:[...n],status:a}}(e,i,t));return{propertyGroupOriginInfos:i,status:i.map(e=>e.status).reduce((e,r)=>e===r?e:"mixed")}},e.isSupportedLayer=s,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});