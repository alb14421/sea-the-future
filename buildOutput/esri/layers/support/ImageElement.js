// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../request","../../core/Error","../../core/imageUtils","../../core/urlUtils","../../core/uuid","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","./MediaElementBase","./mediaUtils","../../portal/support/resourceExtension","../../support/mediaLayerUtils","../../chunks/persistableUrlUtils"],function(e,t,o,r,n,i,a,s,l,c,u,d,p,m,h,g,f,y,v){"use strict";var I;return e.default=class extends h{static{I=y.ImageElementSymbol}constructor(e){super(e),this.animationOptions=null,this.content=null,this.image=null,this.type="image",this[I]=!0,this.image=null}load(){const e=this.image;if("string"==typeof e){const t=n.getImageData(e).then(e=>{this._set("content",e)});this.addResolvingPromise(t)}else if(e instanceof HTMLImageElement){const t=e.decode().then(()=>{this._set("content",e)});this.addResolvingPromise(t)}else e?this._set("content",e):this.addResolvingPromise(Promise.reject(new r("image-element:invalid-image-type","Invalid image type",{image:e})));return Promise.resolve(this)}get contentWidth(){return null==this.content?0:this.content instanceof HTMLImageElement?this.content.naturalWidth:this.content.width}get contentHeight(){return null==this.content?0:this.content instanceof HTMLImageElement?this.content.naturalHeight:this.content.height}readImage(e,t,o){return v.fromJSON(t.url,o)}writeImage(e,t,r,n){if(null==e)return;const s=n?.portalItem,l=n?.resources;if(!s||!l)return void("string"==typeof e&&(t[r]=v.toJSON(e,n)));const c=function(e){return"string"==typeof e&&!i.isDataProtocol(e)&&!i.isBlobProtocol(e)}(e)?e:null;if(c){if(null==v.itemIdFromResourceUrl(c))return void(t[r]=c);const e=v.toJSON(c,{...n,verifyItemRelativeUrls:n?.verifyItemRelativeUrls?{writtenUrls:n.verifyItemRelativeUrls.writtenUrls,rootPath:void 0}:void 0},1);if(s&&e&&!i.isAbsolute(e))return l.toKeep.push({resource:s.resourceFromPath(e),compress:!1}),void(t[r]=e)}t[r]="<pending>",l.pendingOperations.push(async function(e){return"string"==typeof e?i.isDataProtocol(e)?i.dataToBlob(e):(await o(e,{responseType:"blob"})).data:new Promise(t=>function(e){if(e instanceof HTMLCanvasElement)return e;const t=e instanceof HTMLImageElement?e.naturalWidth:e.width,o=e instanceof HTMLImageElement?e.naturalHeight:e.height,r=document.createElement("canvas"),n=r.getContext("2d");return r.width=t,r.height=o,e instanceof HTMLImageElement?n.drawImage(e,0,0,e.width,e.height):e instanceof ImageData&&n.putImageData(e,0,0),r}(e).toBlob(t))}(e).then(e=>{const o=function(e,t){const o=a.generateUUID(),r=`${i.join("media",o)}.${f.getResourceContentExtension({type:"blob",blob:e})}`;return t.resourceFromPath(r)}(e,s);t[r]=o.itemRelativeUrl,l.toAdd.push({resource:o,content:{type:"blob",blob:e},compress:!1,finish:e=>{this.image=e.url}})}))}},t.__decorate([s.property()],e.default.prototype,"animationOptions",void 0),t.__decorate([s.property({readOnly:!0})],e.default.prototype,"content",void 0),t.__decorate([s.property({readOnly:!0})],e.default.prototype,"contentWidth",null),t.__decorate([s.property({readOnly:!0})],e.default.prototype,"contentHeight",null),t.__decorate([s.property(g.mediaElementUrlProperty)],e.default.prototype,"image",void 0),t.__decorate([d.reader("image",["url"])],e.default.prototype,"readImage",null),t.__decorate([m.writer("image")],e.default.prototype,"writeImage",null),t.__decorate([s.property(g.mediaTypeProperty)],e.default.prototype,"type",void 0),e.default=t.__decorate([p.subclass("esri.layers.support.ImageElement")],e.default),e.default});