// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/compilerUtils","../../core/Logger","../../core/promiseUtils","../../core/signal","../../views/support/Yield"],function(e,t,s,r,o,a){"use strict";function n(e){r.isPromiseLike(e)?e.then(i):i(e)}function i(e){e.done||s.getLogger("esri.layers.support.PromiseQueue").warn("Generator iterator was aborted, but it is not done.")}class c{constructor(e,t,s=void 0,r=void 0){this.resolve=e,this.reject=t,this.signal=s,this.abortCallback=r}}class u extends c{constructor(e,t,s,r,o){super(e,t,r,o),this.callback=s,this.type=0}}class l extends c{constructor(e,t,s,r,o,a){super(e,t,r,o),this.generatorFunction=s,this.scheduleFunction=a,this.type=1}}class h extends c{constructor(e,t,s,r,o,a){super(e,t,r,o),this.iterator=s,this.scheduleFunction=a,this.type=2}}e.PromiseQueue=class{constructor(){this._tasks=new Array,this._numPendingTasks=o.signal(0),this._readyToRun=o.signal(!1)}get length(){return this._tasks.length}get updating(){return this._numPendingTasks.value>0}get readyToRun(){return this._readyToRun.value}_updateReadyToRun(){this._readyToRun.value=this._tasks.length>0}destroy(){this.cancelAll()}runTask(e){if(0===this.length)return a.Yield;for(;!e.done&&this._process(e);)e.madeProgress()}push(e,t,s){return this._addTask((r,o)=>new u(r,o,e,t,s),Array.prototype.push)}unshift(e,t,s){return this._addTask((r,o)=>new u(r,o,e,t,s),Array.prototype.unshift)}pushGenerator(e,t,s){const r=Array.prototype.push;return this._addTask((o,a)=>new l(o,a,e,t,s,r),r)}unshiftGenerator(e,t,s){const r=Array.prototype.unshift;return this._addTask((o,a)=>new l(o,a,e,t,s,r),r)}_process(e){if(0===this._tasks.length)return!1;const s=this._tasks.shift();this._updateReadyToRun();try{if(r.isAborted(s.signal))this._cancelTask(s,r.createAbortError());else switch(s.type){case 0:this._processSimple(s,e);break;case 1:this._processGenerator(s,e);break;case 2:this._processIterator(s,e);break;default:t.neverReached(s)}}catch(e){s.reject(e)}return!0}cancelAll(){const e=r.createAbortError();for(const t of this._tasks)this._cancelTask(t,e);this._tasks.length=0,this._updateReadyToRun()}_cancelTask(e,t){if(e.abortCallback){const s=e.abortCallback(t);2===e.type&&e.iterator.return&&n(e.iterator.return()),r.isPromiseLike(s)?s.then(e.resolve,e.reject):e.resolve(s)}else 2===e.type&&e.iterator.throw&&n(e.iterator.throw(t)),e.reject(t)}_onIteratorResult(e,t){t.done?e.resolve(t.value):(e.scheduleFunction.call(this._tasks,e),this._updateReadyToRun())}_processSimple(e,t){const s=e.callback(t);r.isPromiseLike(s)?s.then(e.resolve,e.reject):e.resolve(s)}_processGenerator(e,t){const s=e.generatorFunction(t),r=new h(e.resolve,e.reject,s,e.signal,e.abortCallback,e.scheduleFunction);this._processIterator(r,t)}_processIterator(e,t){const s=e.iterator.next(t);r.isPromiseLike(s)?s.then(t=>this._onIteratorResult(e,t),e.reject):this._onIteratorResult(e,s)}_addTask(e,t){return new Promise((s,r)=>{const o=e(s,r);t.call(this._tasks,o),++this._numPendingTasks.value,this._updateReadyToRun()}).finally(()=>--this._numPendingTasks.value)}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});