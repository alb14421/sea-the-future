// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/Error","../../core/Logger","../../core/sql","../../intl/date","../../intl/number","./domainUtils","./fieldUtils","./labelUtils","../../support/ArcadeExpression","../../support/arcadeExpressionUtils"],function(e,r,t,n,a,i,l,o,s,u,c){"use strict";const d=()=>t.getLogger("esri.layers.support.labelFormatUtils"),p={type:"simple",evaluate:()=>null},f={getAttribute:(e,r)=>e.field(r)};function m(e,r){if(null==e)return"";const t=r.domain;if(t)if("codedValue"===t.type||"coded-value"===t.type){const r=e;for(const e of t.codedValues)if(e.code===r)return e.name}else if("range"===t.type){const{max:n,min:a}=l.getDomainRange(r),i=+e;if(null!=a&&null!=n&&a<=i&&i<=n)return t.name}let n=e;return o.isDateField(r)?n=a.formatDate(n,a.convertDateFormatToIntlOptions("short-date")):o.isNumericField(r)&&(n=i.formatNumber(+n)),n||""}e.createLabelFunction=async function(e,t,a){if(!e||!e.symbol||!t)return p;const i=e.where,l=s.getLabelExpression(e);let g;if("arcade"===l.type){const e=c.getFieldNameFromSimpleExpression(l.expression),n=t.get(e);if(n&&(o.isIntegerField(n)||o.isNumericField(n)||o.isStringField(n)))g={type:"simple",evaluate(e){const r="attributes"in e?e.attributes?.[n.name]:e.field(n.name);return null==r?"":r.toString()}};else{const e=await u.createLabelExpression(l.expression,a);if(null==e)return p;g={type:"arcade",evaluate(n,a){try{const r="attributes"in n?e.repurposeFeature(n,t):n;r.contextTimeZone=a??null;const i=e.evaluate(r,{$view:{timeZone:a}});if(null!=i)return i.toString()}catch(e){d().error(new r("arcade-expression-error","Encountered an error when evaluating label expression for feature",{error:e,feature:n,expression:l}))}return null},needsHydrationToEvaluate:()=>null==s.getSingleFieldArcadeExpression(l.expression)}}}else g={type:"simple",evaluate:e=>l.expression.replaceAll(/{[^}]*}/g,r=>{const n=r.slice(1,-1),a=t.get(n);if(!a)return r;let i=null;return i="attributes"in e?e?.attributes?.[a.name]:e.field(a.name),null==i?"":m(i,a)})};if(i){let e;try{e=await n.parseWhereClause(i,t)}catch(e){return d().error(new r("bad-where-clause","Encountered an error when evaluating where clause, ignoring",{where:i,error:e})),p}const a=g.evaluate;g.evaluate=(t,n)=>{const l="attributes"in t?void 0:f;try{if(e.testFeature(t,l))return a(t,n)}catch(e){d().error(new r("bad-where-clause","Encountered an error when evaluating where clause for feature",{where:i,feature:t,error:e}))}return null}}return g},e.formatField=m,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});