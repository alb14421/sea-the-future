// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../chunks/tslib.es6","../../PopupTemplate","../../request","../../core/Collection","../../core/Error","../../core/has","../../core/Identifiable","../../core/lang","../../core/Loadable","../../core/Logger","../../core/MultiOriginJSONSupport","../../core/sql","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/cast","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/accessorSupport/ensureType","../../core/accessorSupport/PropertyOrigin","../../core/accessorSupport/utils","../../geometry/Extent","../../geometry/SpatialReference","../../geometry/support/typeUtils","../../graphic/MapImageGraphicOrigin","../../graphic/TileGraphicOrigin","../graphics/sources/support/QueryTask","../mixins/OrderedLayer","./featureLayerUtils","./FeatureType","./Field","./FieldsIndex","./fieldUtils","./LabelClass","./labelingInfo","./LayerFloorInfo","./OrderByInfo","./Relationship","./serviceCapabilitiesUtils","./source/DataLayerSource","./source/MapLayerSource","../../renderers/support/typeUtils","../../rest/utils","../../rest/support/AttachmentQuery","../../rest/support/Query","../../support/popupUtils","../../symbols/support/typeUtils","../../tables/AttributeTableTemplate"],function(e,r,t,i,a,o,s,l,n,p,u,d,y,c,f,h,b,g,m,_,w,I,S,v,O,L,F,x,P,D,T,q,j,M,E,A,N,k,R,B,C,Q,V,U,J,$,G,K,z,H){"use strict";const W=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));var X;function Y(e){return"esriSMS"===e?.type}function Z(e,r,t){const i=t.minimumWritableOrigin||t.origin;return!!i&&e.originIdOf(r)>=I.nameToId(i)}function ee(e,r,t){const i=Z(this,r,t);return{ignoreOrigin:!0,allowNull:i,enabled:!!t&&"map-image"===t.layer?.type&&(t.writeSublayerStructure||i)}}function re(e,r,t){return{enabled:!!t&&"tile"===t.layer?.type&&(Z(this,r,t)||this._isOverridden(r))}}function te(e,r,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function ie(e,r,t){return{ignoreOrigin:!0,enabled:!!t?.writeSublayerStructure&&this.originIdOf(r)>2}}function ae(e,r,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||Z(this,r,t))}}let oe=0;const se=new Set(["layer","parent","loaded","loadStatus","loadError","loadWarnings"]);return r.default=class extends(y.MultiOriginJSONMixin(n.IdentifiableMixin(u.Loadable))){static{X=this}constructor(e){super(e),this.attributeTableTemplate=null,this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.isTable=!1,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.spatialReference=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:r,url:t}=this;if(!r&&!t)throw new s("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=r?await r.fetchSublayerInfo(this,e):(await a(t,{responseType:"json",query:{f:"json"},...e})).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service",layer:r,url:J.parseUrl(t)}))})()),this}readCapabilities(e,r){r=r.layerDefinition||r;const{attachment:t,operations:{supportsQuery:i,supportsQueryAttachments:a},query:{supportsFormatPBF:o,supportsOrderBy:s,supportsPagination:l},data:{supportsAttachment:n},queryRelated:p}=C.getFeatureLayerCapabilities(r,this.url);return{attachment:{supportsOrderByFields:t?.supportsOrderByFields??!1,supportsResize:t?.supportsResize??!1},exportMap:{supportsModification:!!r.canModifyLayer},operations:{supportsQuery:i,supportsQueryAttachments:a},data:{supportsAttachment:n},query:{supportsFormatPBF:o,supportsOrderBy:s,supportsPagination:l},queryRelated:p}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){const{minScale:e,maxScale:r}=this;return{minScale:e,maxScale:r}}readMaxScaleRange(e,r){return{minScale:(r=r.layerDefinition||r).minScale??0,maxScale:r.maxScale??0}}get fieldsIndex(){return new M(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,r){if((r=r.layerDefinition||r).globalIdField)return r.globalIdField;if(r.fields)for(const e of r.fields)if("esriFieldTypeGlobalID"===e.type)return e.name}get graphicOrigin(){if(!this.layer)return null;switch(this.layer.type){case"tile":return new x(this.layer,this);case"map-image":return new F(this.layer,this)}}get id(){return this._get("id")??oe++}set id(e){this._get("id")!==e&&(!1!==this.layer?.capabilities?.exportMap?.supportsDynamicLayers?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}readIsTable(e,r){return"Table"===r.type}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,r,t,i){e&&e.length&&(r.layerDefinition={drawingInfo:{labelingInfo:e.map(e=>e.write({},i))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers?.forEach(r=>r.layer=e)}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,r){return r.minScale||r.layerDefinition?.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,r){return r.maxScale||r.layerDefinition?.maxScale||0}readObjectIdFieldFromService(e,r){if((r=r.layerDefinition||r).objectIdField)return r.objectIdField;const t=r.fields?.find(e=>"esriFieldTypeOID"===e.type);return t?.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,r){const{layerDefinition:t}=r;return 1-.01*(t?.transparency??t?.drawingInfo?.transparency??0)}writeOpacity(e,r,t,i){r.layerDefinition={drawingInfo:{transparency:100-100*e}}}set orderBy(e){this._setAndNotifyLayer("orderBy",e)}writeParent(e,r){this.parent&&this.parent!==this.layer?r.parentLayerId=w.ensureInteger(this.parent.id):r.parentLayerId=-1}get queryTask(){if(!this.layer)return null;const{capabilities:e,fieldsIndex:r,layer:t,url:i}=this,{spatialReference:a}=t,o="gdbVersion"in t?t.gdbVersion:void 0,s=l("featurelayer-pbf")&&e?.query.supportsFormatPBF;return new P({fieldsIndex:r,gdbVersion:o,pbfSupported:s,queryAttachmentsSupported:e?.operations?.supportsQueryAttachments??!1,sourceSpatialReference:a,url:i})}set renderer(e){if(E.fixRendererFields(e,this.fieldsIndex),e)for(const r of e.symbols)if(z.isSymbol3D(r)){d.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new V.MapLayerSource({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return w.ensureType(o.ofType(X),e)}writeSublayers(e,r,t){this.sublayers?.length&&(r[t]=this.sublayers.map(e=>e.id).toArray().reverse())}readTitle(e,r){return r.layerDefinition?.name??r.name}readTypeIdField(e,r){let t=(r=r.layerDefinition||r).typeIdField;if(t&&r.fields){t=t.toLowerCase();const e=r.fields.find(e=>e.name.toLowerCase()===t);e&&(t=e.name)}return t}get url(){const e=this.layer?.parsedUrl??this._lastParsedUrl,r=this.source;if(!e)return null;if(this._lastParsedUrl=e,"map-layer"===r?.type)return`${e.path}/${r.mapLayerId}`;const t={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${f.objectToQuery(t)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,r,t,i){r[t]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=S.getProperties(this),r=new X;return S.getProperties(r).store=e.clone(se),this.commitProperty("url"),r._lastParsedUrl=this._lastParsedUrl,r}createPopupTemplate(e){return K.createPopupTemplate(this,e)}createQuery(){return new G({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;const r=(await new Promise((r,t)=>e(["../FeatureLayer"],e=>r(W(e)),t))).default,{layer:t,url:i}=this;let a;if(i&&this.originIdOf("url")>2)a=new r({url:i});else{if(!t?.parsedUrl)throw new s("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const e=t.parsedUrl;a=new r({url:e.path}),e&&this.source&&("map-layer"===this.source.type?a.layerId=this.source.mapLayerId:a.dynamicDataSource=this.source)}}return null!=t?.refreshInterval&&(a.refreshInterval=t.refreshInterval),this.definitionExpression&&(a.definitionExpression=this.definitionExpression),this.floorInfo&&(a.floorInfo=p.clone(this.floorInfo)),this.originIdOf("labelingInfo")>2&&(a.labelingInfo=p.clone(this.labelingInfo)),this.originIdOf("labelsVisible")>0&&(a.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>0&&(a.legendEnabled=this.legendEnabled),this.originIdOf("visible")>0&&(a.visible=this.visible),this.originIdOf("minScale")>0&&(a.minScale=this.minScale),this.originIdOf("maxScale")>0&&(a.maxScale=this.maxScale),this.originIdOf("opacity")>0&&(a.opacity=this.opacity),this.originIdOf("popupTemplate")>0&&(a.popupTemplate=p.clone(this.popupTemplate)),this.originIdOf("renderer")>2&&(a.renderer=p.clone(this.renderer)),"data-layer"===this.source?.type&&(a.dynamicDataSource=this.source.clone()),this.originIdOf("title")>0&&(a.title=this.title),"map-image"===t?.type&&t.originIdOf("customParameters")>0&&(a.customParameters=t.customParameters),"tile"===t?.type&&t.originIdOf("customParameters")>0&&(a.customParameters=t.customParameters),a}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){return T.getFeatureType(this.types,this.typeIdField,e)}getFieldDomain(e,r){const t=r?.feature,i=this.getFeatureType(t);if(i){const r=i.domains&&i.domains[e];if(r&&"inherited"!==r.type)return r}return this._getLayerDomain(e)}async queryAttachments(e,r){await this.load(),e=$.from(e);const t=this.capabilities;if(!t?.data?.supportsAttachment)throw new s("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:a,globalIds:o,num:l,size:n,start:p,where:u}=e;if(!t?.operations?.supportsQueryAttachments&&(i?.length>0||o?.length>0||n?.length>0||l||p||u))throw new s("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(a?.length||o?.length||u))throw new s("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return!t?.attachment?.supportsOrderByFields&&e.orderByFields?.length&&((e=e.clone()).orderByFields=null),this.queryTask.executeAttachmentQuery(e,r)}async queryFeatureCount(e=this.createQuery(),r){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryFeatureCount:not-supported","this layer doesn't support queries.");if(!this.url)throw new s("queryFeatureCount:not-supported","this layer has no url.");const t=this.layer?.apiKey;return await this.queryTask.executeForCount(e,{...r,query:{...this.layer?.customParameters,token:t}})}async queryFeatures(e=this.createQuery(),r){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new s("queryFeatures:not-supported","this layer has no url.");const t=await this.queryTask.execute(e,{...r,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(t?.features)for(const e of t.features)e.sourceLayer=this,e.origin=this.graphicOrigin;return t}async queryObjectIds(e=this.createQuery(),r){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryObjectIds:not-supported","this layer doesn't support queries.");if(!this.url)throw new s("queryObjectIds:not-supported","this layer has no url.");const t=this.layer?.apiKey;return await this.queryTask.executeForIds(e,{...r,query:{...this.layer?.customParameters,token:t}})}async queryRelatedFeatures(e,r){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryRelatedFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new s("queryRelatedFeatures:not-supported","this layer has no url.");const t=this.layer?.apiKey;return await this.queryTask.executeRelationshipQuery(e,{...r,query:{...this.layer?.customParameters,token:t}})}async queryRelatedFeaturesCount(e,r){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryRelatedFeaturesCount:not-supported","this layer doesn't support queries.");if(!this.capabilities.queryRelated.supportsCount)throw new s("queryRelatedFeaturesCount:not-supported","this layer doesn't support query related counts.");if(!this.url)throw new s("queryRelatedFeaturesCount:not-supported","this layer has no url.");const t=this.layer?.apiKey;return await this.queryTask.executeRelationshipQueryForCount(e,{...r,query:{...this.layer?.customParameters,token:t}})}toExportImageJSON(e){const r={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},t=c.sqlAnd(e,this.definitionExpression);null!=t&&(r.definitionExpression=t);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((e,r)=>(e[r]=this.originIdOf(r),e),{});if(Object.keys(i).some(e=>i[e]>2)){const e=r.drawingInfo={};if(i.renderer>2&&(e.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>2&&(e.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>2)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some(e=>!e.labelPlacement)&&d.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let r=this.labelingInfo;null!=this.geometryType&&(r=N.validateLabelingInfo(this.labelingInfo,L.featureGeometryTypeKebabDictionary.toJSON(this.geometryType))),e.showLabels=!0,e.labelingInfo=r.filter(e=>e.labelPlacement).map(e=>e.toJSON({origin:"service",layer:this.layer}))}else e.showLabels=!1;i.opacity>2&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return(this.layer?.capabilities?.exportMap?.supportsSublayerOrderBy??!1)&&this.originIdOf("orderBy")>2&&(r.orderBy=this.orderBy?.map(e=>e.toJSON())??null),r}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,e=>{e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||(e.outline?.color?e.color=e.outline.color:e.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(e,r){if(e){const t=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const e of t)Y(e.symbol)&&r(e.symbol);"symbol"in e&&Y(e.symbol)&&r(e.symbol),"defaultSymbol"in e&&Y(e.defaultSymbol)&&r(e.defaultSymbol)}}_setAndNotifyLayer(e,r){const t=this.layer,i=this._get(e);let a,o;switch(e){case"definitionExpression":case"floorInfo":a="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":a="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":a="supportsDynamicLayers",o="supportsModification";break;case"orderBy":a="supportsSublayerOrderBy",o="supportsModification"}const s=S.getProperties(this).getDefaultOrigin();if("service"!==s){if(a&&!1===this.layer?.capabilities?.exportMap?.[a])return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${a}'`);if(o&&!1===this.capabilities?.exportMap[o])return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${o}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,r),"service"!==s&&i!==r&&t?.emit&&t.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,r){r&&(r.forEach(e=>{e.parent=null,e.layer=null}),this.removeAllHandles()),e&&(e.forEach(e=>{e.parent=this,e.layer=this.layer}),this.addHandles([e.on("after-add",({item:e})=>{e.parent=this,e.layer=this.layer}),e.on("after-remove",({item:e})=>{e.parent=null,e.layer=null}),e.on("before-changes",e=>{(this.layer?.capabilities?.exportMap?.supportsSublayersChanges??1)||(d.getLogger(this).error(new s("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())})]))}_logLockedError(e,r){const{layer:t,declaredClass:i}=this;d.getLogger(i).error(new s("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${t?.id}'`,{reason:r,sublayer:this,layer:t}))}_getLayerDomain(e){return this.fieldsIndex.get(e)?.domain??null}static{this.test={isMapImageLayerOverridePolicy:e=>e===ie||e===te||e===ee,isTileImageLayerOverridePolicy:e=>e===re}}},t.__decorate([h.property({type:H,json:{name:"attributeTableInfo",write:{overridePolicy:ee},origins:{"web-scene":{write:!1}}}})],r.default.prototype,"attributeTableTemplate",void 0),t.__decorate([h.property({readOnly:!0})],r.default.prototype,"capabilities",void 0),t.__decorate([g.reader("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],r.default.prototype,"readCapabilities",null),t.__decorate([h.property()],r.default.prototype,"defaultPopupTemplate",null),t.__decorate([h.property({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:ee}}})],r.default.prototype,"definitionExpression",null),t.__decorate([h.property({readOnly:!0})],r.default.prototype,"effectiveScaleRange",null),t.__decorate([g.reader("service","maxScaleRange",["minScale","maxScale"])],r.default.prototype,"readMaxScaleRange",null),t.__decorate([h.property({type:[j],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],r.default.prototype,"fields",void 0),t.__decorate([h.property({readOnly:!0})],r.default.prototype,"fieldsIndex",null),t.__decorate([h.property({type:k,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:ee},origins:{"web-scene":{read:!1,write:!1}}}})],r.default.prototype,"floorInfo",null),t.__decorate([h.property({type:v,json:{read:{source:"layerDefinition.extent"}}})],r.default.prototype,"fullExtent",void 0),t.__decorate([h.property({type:L.featureGeometryTypeKebabDictionary.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:L.featureGeometryTypeKebabDictionary.read}}}}})],r.default.prototype,"geometryType",void 0),t.__decorate([h.property({type:String})],r.default.prototype,"globalIdField",void 0),t.__decorate([g.reader("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],r.default.prototype,"readGlobalIdFieldFromService",null),t.__decorate([h.property({readOnly:!0})],r.default.prototype,"graphicOrigin",null),t.__decorate([h.property({type:w.Integer,json:{write:{ignoreOrigin:!0}}})],r.default.prototype,"id",null),t.__decorate([h.property({readOnly:!0})],r.default.prototype,"isTable",void 0),t.__decorate([g.reader("service","isTable",["type"])],r.default.prototype,"readIsTable",null),t.__decorate([h.property({value:null,type:[A],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:ie}}})],r.default.prototype,"labelingInfo",null),t.__decorate([_.writer("labelingInfo")],r.default.prototype,"writeLabelingInfo",null),t.__decorate([h.property({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:te}}})],r.default.prototype,"labelsVisible",null),t.__decorate([h.property({value:null})],r.default.prototype,"layer",null),t.__decorate([h.property({type:String,json:{write:{overridePolicy:re}}})],r.default.prototype,"layerItemId",void 0),t.__decorate([h.property({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:ae}}})],r.default.prototype,"legendEnabled",void 0),t.__decorate([h.property({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],r.default.prototype,"listMode",null),t.__decorate([h.property({type:Number,value:0,json:{write:{overridePolicy:te}}})],r.default.prototype,"minScale",null),t.__decorate([g.reader("minScale",["minScale","layerDefinition.minScale"])],r.default.prototype,"readMinScale",null),t.__decorate([h.property({type:Number,value:0,json:{write:{overridePolicy:te}}})],r.default.prototype,"maxScale",null),t.__decorate([g.reader("maxScale",["maxScale","layerDefinition.maxScale"])],r.default.prototype,"readMaxScale",null),t.__decorate([h.property()],r.default.prototype,"objectIdField",void 0),t.__decorate([g.reader("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],r.default.prototype,"readObjectIdFieldFromService",null),t.__decorate([h.property({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:te}}})],r.default.prototype,"opacity",null),t.__decorate([g.reader("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],r.default.prototype,"readOpacity",null),t.__decorate([_.writer("opacity")],r.default.prototype,"writeOpacity",null),t.__decorate([h.property({value:null,type:[R],json:{name:"layerDefinition.orderBy",read:{reader:D.readOrderByInfos},write:{overridePolicy:ee},origins:{"web-scene":{read:!1,write:!1}}}})],r.default.prototype,"orderBy",null),t.__decorate([h.property({json:{type:w.Integer,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:te}}})],r.default.prototype,"parent",void 0),t.__decorate([_.writer("parent")],r.default.prototype,"writeParent",null),t.__decorate([h.property({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:ae,writer(e,r,t){r[t]=!e}}}})],r.default.prototype,"popupEnabled",void 0),t.__decorate([h.property({type:i,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:ae}}})],r.default.prototype,"popupTemplate",void 0),t.__decorate([h.property({readOnly:!0})],r.default.prototype,"queryTask",null),t.__decorate([h.property({type:[B],readOnly:!0,json:{origins:{service:{read:{source:"layerDefinition.relationships"}}}}})],r.default.prototype,"relationships",void 0),t.__decorate([h.property({types:U.rendererTypes,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:ie},origins:{"web-scene":{types:U.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:ie}}}}})],r.default.prototype,"renderer",null),t.__decorate([h.property({types:{key:"type",base:null,typeMap:{"data-layer":Q.DataLayerSource,"map-layer":V.MapLayerSource}},cast(e){if(e){if("mapLayerId"in e)return w.ensureClass(V.MapLayerSource,e);if("dataSource"in e)return w.ensureClass(Q.DataLayerSource,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:te}}})],r.default.prototype,"source",null),t.__decorate([h.property()],r.default.prototype,"sourceJSON",void 0),t.__decorate([h.property({type:O,json:{origins:{service:{read:{source:"layerDefinition.extent.spatialReference"}}}}})],r.default.prototype,"spatialReference",void 0),t.__decorate([h.property({value:null,json:{type:[w.Integer],write:{target:"subLayerIds",allowNull:!0,overridePolicy:te}}})],r.default.prototype,"sublayers",null),t.__decorate([b.cast("sublayers")],r.default.prototype,"castSublayers",null),t.__decorate([_.writer("sublayers")],r.default.prototype,"writeSublayers",null),t.__decorate([h.property({type:String,json:{name:"name",write:{overridePolicy:ae}}})],r.default.prototype,"title",void 0),t.__decorate([g.reader("service","title",["name","layerDefinition.name"])],r.default.prototype,"readTitle",null),t.__decorate([h.property({type:String})],r.default.prototype,"typeIdField",void 0),t.__decorate([h.property({json:{read:!1},readOnly:!0,value:"sublayer"})],r.default.prototype,"type",void 0),t.__decorate([g.reader("typeIdField",["layerDefinition.typeIdField"])],r.default.prototype,"readTypeIdField",null),t.__decorate([h.property({type:[q],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],r.default.prototype,"types",void 0),t.__decorate([h.property({type:String,json:{name:"layerUrl",write:{overridePolicy:re}}})],r.default.prototype,"url",null),t.__decorate([h.property({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:te}}})],r.default.prototype,"visible",null),t.__decorate([_.writer("visible")],r.default.prototype,"writeVisible",null),r.default=X=t.__decorate([m.subclass("esri.layers.support.Sublayer")],r.default),r.default});