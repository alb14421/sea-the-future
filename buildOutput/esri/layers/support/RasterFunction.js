// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/JSONSupport","../../core/lang","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/accessorSupport/decorators/enumeration","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","./RasterFunctionTemplate"],function(e,t,n,r,o,i,a,s,u,c,p,l){"use strict";var f;const d=new Set(["raster","raster2","dem","fillraster"]),m=new Set(["rasters"]),y=t=>t?.rasterFunction?e.default.fromJSON(t):t,F=t=>t&&t instanceof e.default?t.toJSON():t,h=e=>e?.functionName&&!e.declaredClass,g=t=>h(t)?new e.default(t):t,N=e=>e?l.fromJSON({type:"RasterFunctionTemplate",...e}):void 0,w={types:{key:"type",base:null,typeMap:{RasterFunctionTemplate:l}},json:{write:!0,name:"rasterFunctionDefinition",read:N}};return e.default=f=class extends n.JSONSupport{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.functionDefinition=null}set functionArguments(e){if(e){const t=Object.keys(e);if(t.some(t=>d.has(t.toLowerCase())&&h(e[t]))||t.some(t=>m.has(t.toLowerCase())&&Array.isArray(e[t])&&e[t].some(e=>h(e)))){e=r.clone(e);for(const n of t)d.has(n.toLowerCase())?e[n]=g(e[n]):m.has(n.toLowerCase())&&Array.isArray(e[n])&&(e[n]=e[n].map(e=>g(e)))}}this._set("functionArguments",e)}readFunctionArguments(e){return(e=>{if(null==e)return null;e=r.clone(e);const t={};for(const n of Object.keys(e))d.has(n.toLowerCase())?t[n]=y(e[n]):m.has(n.toLowerCase())&&Array.isArray(e[n])?t[n]=e[n].map(y):t[n]=e[n];return t})(e)}writeFunctionArguments(e,t,n){const r={};for(const t of Object.keys(e))d.has(t.toLowerCase())?r[t]=F(e[t]):m.has(t.toLowerCase())&&Array.isArray(e[t])?r[t]=e[t].map(F):r[t]=F(e[t]);t[n]=r}readFunctionName(e,t){const n=t.rasterFunctionInfos;return t.name||(n?.length&&"None"!==n[0].name?n[0].name:t.rasterFunction||t.rasterFunctionDefinition?.name)}get rasterFunctionDefinition(){return this.functionDefinition?.toJSON()}set rasterFunctionDefinition(e){this.functionDefinition=N(e)}get hasClipFunction(){return this.rasterFunctionDefinition?JSON.stringify(this.rasterFunctionDefinition).includes('"type":"ClipFunction"'):JSON.stringify(this).includes('"rasterFunction":"Clip"')}clone(){return new f({functionName:this.functionName,functionArguments:r.clone(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:r.clone(this.rasterFunctionDefinition)})}},t.__decorate([o.property({json:{type:Object,name:"rasterFunctionArguments"}})],e.default.prototype,"functionArguments",null),t.__decorate([u.reader("functionArguments")],e.default.prototype,"readFunctionArguments",null),t.__decorate([p.writer("functionArguments")],e.default.prototype,"writeFunctionArguments",null),t.__decorate([o.property({json:{type:String,write:{target:"rasterFunction"}}})],e.default.prototype,"functionName",void 0),t.__decorate([u.reader("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],e.default.prototype,"readFunctionName",null),t.__decorate([s.enumeration({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1,default:"unknown"})],e.default.prototype,"outputPixelType",void 0),t.__decorate([o.property({type:String,json:{read:!0,write:!0}})],e.default.prototype,"variableName",void 0),t.__decorate([o.property()],e.default.prototype,"rasterFunctionDefinition",null),t.__decorate([o.property(w)],e.default.prototype,"functionDefinition",void 0),t.__decorate([o.property()],e.default.prototype,"hasClipFunction",null),e.default=f=t.__decorate([c.subclass("esri.layers.support.RasterFunction")],e.default),e.default});