// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/lang","./RasterFunction","./rasterFormats/pixelRangeUtils","./rasterFunctions/rasterFunctionSchema","../../renderers/support/colorRampUtils","../../renderers/support/stretchRendererUtils","../../renderers/visualVariables/SizeVariable"],function(e,n,t,r,o,a,i,u){"use strict";const s=new Set(["u1","u2","u4","u8","s8","u16","s16"]),l={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},c=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function m(e,n){for(const t in e)"raster"===t.toLowerCase()&&("RasterFunctionVariable"===e[t].type?(e[t]=n.rasterFunctionDefinition,e[t].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[t].type&&m(e[t].arguments,n))}function p(e){const t=n.clone(o.schema[e.functionName+"Function"]),r=e.functionArguments;for(const e in r)"raster"===e.toLowerCase()?(t.arguments[e]=p(r[e]),t.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(t.arguments[e].value=y(r[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=r[e];return t}function f(e){const n=e?.Raster??e?.raster;return n&&"esri.layers.support.RasterFunction"===n.declaredClass?f(n.functionArguments):e}const g={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function d(e,n){const t=s.has(n)?r.getPixelValueRange(n):null;return t&&e.push([Math.floor(t[0]-1),0,0,0],[Math.ceil(t[1]+1),0,0,0]),e}function R(e){if(null==e)return;const{fields:n}=e,t=n?.find(e=>e?.name&&"value"===e.name.toLowerCase());return t?.name}function h(e){return"polygon-3d"===e.symbol?.type?e.symbol.symbolLayers?.find(e=>"fill"===e.type)?.material?.color:e.symbol?.color}function y(e){const n=[],t=[];return e.forEach(e=>{n.push(e[0]),t.push(a.convertRGBATo32Bit([...e.slice(1),255]))}),{type:"RasterColormap",values:n,colors:t}}e.combineRenderingRules=function(e,t){if(!e||!t)return n.clone(e||t);const r=n.clone(e);if(r.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),m(r.functionDefinition.arguments,t),r.rasterFunctionDefinition=r.functionDefinition.toJSON()}else"none"!==t.functionName?.toLowerCase()&&(f(r.functionArguments).Raster=t);return r},e.convertRendererToRenderingRule=function(e,n){switch(n=n||{},e.type){case"raster-stretch":return function(e,n){const r=n.convertToRFT,o=new t;o.functionName="Stretch";const u=g[i.stretchTypeJSONDict.toJSON(e.stretchType)],s="u8",l=e.customStatistics?.map(e=>[e.min,e.max,e.avg??0,e.stddev??1]),c={StretchType:u,Statistics:l,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(c.Min=e.outputMin),null!=e.outputMax&&(c.Max=e.outputMax),u===g.standardDeviation?(c.NumberOfStandardDeviations=e.numberOfStandardDeviations,o.outputPixelType=s):u===g.percentClip?(c.MinPercent=e.minPercent,c.MaxPercent=e.maxPercent,o.outputPixelType=s):u===g.minMax?o.outputPixelType=s:u===g.sigmoid&&(c.SigmoidStrengthLevel=e.sigmoidStrengthLevel),o.functionArguments=c,o.variableName="Raster",e.colorRamp){const i=e.colorRamp,u=new t;if(r)u.functionArguments={ColorRamp:a.getRFxArgColorRampValue(i)};else{const t=a.getColorRampName(i,!0);if(t)u.functionArguments={colorRampName:t};else if(!n.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type){const n=e.colorRamp.toJSON();"algorithmic"===n.type?n.algorithm=n.algorithm||"esriCIELabAlgorithm":"multipart"===n.type&&n.colorRamps?.length&&n.colorRamps.forEach(e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm"),u.functionArguments={colorRamp:n}}else u.functionArguments={Colormap:a.convertColorRampToColormap(i)}}return u.variableName="Raster",u.functionName="Colormap",u.functionArguments.Raster=o,r?new t({rasterFunctionDefinition:p(u)}):u}return r?new t({rasterFunctionDefinition:p(o)}):o}(e,n);case"class-breaks":return function(e,n){const r=[],o=[],a=[],i=[],u=1e-4,{pixelType:s,rasterAttributeTable:l}=n,c=null==l?null:l.features,m=R(l);if(m&&c&&Array.isArray(c)&&e.classBreakInfos){e.classBreakInfos.forEach((n,t)=>{const r=n.symbol?.color;let o;r?.a&&null!=n.minValue&&null!=n.maxValue&&c.forEach(a=>{null!=n.minValue&&null!=n.maxValue&&(o=a.attributes[e.field],(o>=n.minValue&&o<n.maxValue||t===e.classBreakInfos.length-1&&o>=n.minValue)&&i.push([a.attributes[m],r.r,r.g,r.b]))})});const r=s?d(i,s):i,o=new t;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=r,o.variableName="Raster",n.convertToRFT?new t({rasterFunctionDefinition:p(o)}):o}e.classBreakInfos.forEach((e,n)=>{if(null==e.minValue||null==e.maxValue)return;const t=e.symbol&&e.symbol.color;t?.a?(0===n?r.push(e.minValue,e.maxValue+u):r.push(e.minValue+u,e.maxValue+u),o.push(n),i.push([n,t.r,t.g,t.b])):a.push(e.minValue,e.maxValue)});const f=s?d(i,s):i,g=new t;g.functionName="Remap",g.functionArguments={InputRanges:r,OutputValues:o,NoDataRanges:a},g.variableName="Raster";const h=new t;return h.functionName="Colormap",h.functionArguments={Colormap:f,Raster:g},n.convertToRFT?new t({rasterFunctionDefinition:p(h)}):h}(e,n);case"unique-value":return function(e,n){const r=[],{pixelType:o,rasterAttributeTable:a}=n,i=null==a?null:a.features,u=R(a),s=e.defaultSymbol?.color?.toRgb(),l=e.uniqueValueInfos;if(l)if(i){if(u){const n=new Map;l.forEach(e=>{const t=e.value,r=h(e);null!=t&&r?.a&&n.set(String(t),r.toRgb())});const t=e.field;t&&i.forEach(({attributes:e})=>{const o=String(e[t]),a=e[u],i=n.get(o);i?r.push([a,...i]):s&&r.push([a,...s])})}}else for(let e=0;e<l.length;e++){const n=l[e],t=h(n),o=+n.value;if(t?.a){if(isNaN(o))return null;r.push([o,t.r,t.g,t.b])}}const c=o?d(r,o):r,m=new t;return m.functionName="Colormap",m.functionArguments={},m.functionArguments.Colormap=c,m.variableName="Raster",n.convertToRFT?new t({rasterFunctionDefinition:p(m)}):m}(e,n);case"raster-colormap":return function(e,n){const r=e.extractColormap();if(!r||0===r.length)return null;const{pixelType:o}=n,a=o?d(r,o):r,i=new t;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=a,n.convertToRFT?new t({rasterFunctionDefinition:p(i)}):i}(e,n);case"vector-field":return function(e,n){const r=new t;r.functionName="VectorFieldRenderer";const{dataType:o,bandNames:a}=n,i="vector-uv"===o;let s,c;if(a&&2===a.length){const e=a.map(e=>e.toLowerCase());s=e.indexOf("magnitude"),c=e.indexOf("direction")}-1!==s&&null!==s||(s=0,c=1);const m="arithmetic"===e.rotationType?1:2,f="flow-from"===e.flowRepresentation?0:1,g=e.visualVariables?e.visualVariables.find(e=>"Magnitude"===e.field):new u,d={magnitudeBandID:s,directionBandID:c,isUVComponents:i,referenceSystem:m,massFlowAngleRepresentation:f,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:l[e.style.toLowerCase().replace("-","_")],minimumMagnitude:g.minDataValue,maximumMagnitude:g.maxDataValue,minimumSymbolSize:g.minSize,maximumSymbolSize:g.maxSize};r.functionArguments=d;const R=p(r);return n.convertToRFT?t.fromJSON({rasterFunctionDefinition:R}):r}(e,n);case"raster-shaded-relief":return function(e,n){const r=n.convertToRFT;if("elevation"!==n.dataType&&("generic"!==n.dataType||1!==n.bandCount||"s16"!==n.pixelType&&"s32"!==n.pixelType&&"f32"!==n.pixelType&&"f64"!==n.pixelType))return new t;const o=new t;o.functionName="Hillshade";const i="traditional"===e.hillshadeType?0:1,u="none"===e.scalingType?1:3,s={HillshadeType:i,SlopeType:u,ZFactor:e.zFactor};return 0===i&&(s.Azimuth=e.azimuth,s.Altitude=e.altitude),3===u&&(s.PSPower=e.pixelSizePower,s.PSZFactor=e.pixelSizeFactor),o.functionArguments=s,o.variableName="Raster",e.colorRamp&&(o.functionName="ShadedRelief",r?s.ColorRamp=a.getRFxArgColorRampValue(e.colorRamp):s.Colormap=a.convertColorRampToColormap(e.colorRamp)),r?new t({rasterFunctionDefinition:p(o)}):o}(e,n);case"flow":throw new Error("Unsupported rendering rule.")}},e.convertRenderingRuleToRFT=p,e.isSupportedRendererType=function(e){return c.has(e.type)},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});