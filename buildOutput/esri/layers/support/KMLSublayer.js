// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/Collection","../../core/Evented","../../core/JSONSupport","../../core/Loadable","../../core/reactiveUtils","../../core/string","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../geometry/Extent","./kmlUtils"],function(e,t,r,s,o,i,l,a,n,u,p,c,y,d,h,f){"use strict";var v;return e.default=v=class extends(s.EventedMixin(o.JSONSupportMixin(i.Loadable))){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.id=null,this.networkLink=null,this.parent=null,this.sublayers=null,this.title=null,this.sourceJSON=null,this.layer=null,this.addHandles([l.on(()=>this.sublayers,"after-add",({item:e})=>{e.parent=this,e.layer=this.layer},l.sync),l.on(()=>this.sublayers,"after-remove",({item:e})=>{e.layer=e.parent=null},l.sync),l.watch(()=>this.sublayers,(e,t)=>{if(t)for(const e of t)e.layer=e.parent=null;if(e)for(const t of e)t.parent=this,t.layer=this.layer},l.sync),l.watch(()=>this.layer,e=>{if(this.sublayers)for(const t of this.sublayers)t.layer=e},l.sync)])}initialize(){l.whenOnce(()=>this.networkLink).then(()=>l.whenOnce(()=>!0===this.visible)).then(()=>this.load())}load(e){if(!this.networkLink)return;if(this.networkLink.viewFormat)return;const t=null!=e?e.signal:null,s=this._fetchService(this._get("networkLink")?.href??"",t).then(e=>{const t=f.computeExtent(e.sublayers);this.fullExtent=h.fromJSON(t),this.sourceJSON=e;const s=u.ensureType(r.ofType(v),f.sublayersFromJSON(v,e));this.sublayers?this.sublayers.addMany(s):this.sublayers=s,this.layer?.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")});return this.addResolvingPromise(s),Promise.resolve(this)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,t){return!!t.visibility}_fetchService(e,t){return f.fetchService(e,this.layer.outSpatialReference,this.layer.refreshInterval,t).then(e=>f.parseKML(e.data))}},t.__decorate([n.property()],e.default.prototype,"description",void 0),t.__decorate([n.property({type:h})],e.default.prototype,"fullExtent",void 0),t.__decorate([n.property()],e.default.prototype,"id",void 0),t.__decorate([n.property({readOnly:!0,value:null})],e.default.prototype,"networkLink",void 0),t.__decorate([n.property({json:{write:{allowNull:!0}}})],e.default.prototype,"parent",void 0),t.__decorate([n.property({type:r.ofType(e.default),json:{write:{allowNull:!0}}})],e.default.prototype,"sublayers",void 0),t.__decorate([n.property({value:null,json:{read:{source:"name",reader:e=>a.stripHTML(e)}}})],e.default.prototype,"title",void 0),t.__decorate([n.property({value:!0})],e.default.prototype,"visible",null),t.__decorate([y.reader("visible",["visibility"])],e.default.prototype,"readVisible",null),t.__decorate([n.property()],e.default.prototype,"sourceJSON",void 0),t.__decorate([n.property()],e.default.prototype,"layer",void 0),e.default=v=t.__decorate([d.subclass("esri.layers.support.KMLSublayer")],e.default),e.default});