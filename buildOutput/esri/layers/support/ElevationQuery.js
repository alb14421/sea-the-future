// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/asyncUtils","../../core/Error","../../core/maybe","../../core/promiseUtils","../../core/unitUtils","../../geometry/Multipoint","../../geometry/Point","../../geometry/Polyline","../../geometry/projectionUtils","../../geometry/support/aaBoundingRect","./ElevationSampler","./ElevationTile","./TileKey"],function(e,t,i,n,l,o,s,a,r,c,u,h,f,p){"use strict";class m{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new m;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(e=>e.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await c.initializeProjection([{source:this.spatialReference,dest:e}],{signal:t});const i=new s({spatialReference:this.spatialReference,points:this.coordinates.map(e=>[e.x,e.y])}),n=c.project(i,e);if(!n)return null;const l=this.coordinates.map((e,t)=>{const i=e.clone(),l=n.points[t];return i.x=l[0],i.y=l[1],i}),o=this.clone(l);return o.spatialReference=e,o}static fromGeometry(e){const t=new m;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof m)t.coordinates=e.coordinates.map(e=>e.clone()),t._exporter=(t,i)=>{const n=e.clone(t);return n.spatialReference=i,n};else switch(e.type){case"point":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?[new d(i.x,i.y,i.z,i.m)]:n?[new d(i.x,i.y,i.z)]:l?[new d(i.x,i.y,null,i.m)]:[new d(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new a(t[0].x,t[0].y,t[0].z,t[0].m,i):new a(t[0].x,t[0].y,t[0].z,i);break}case"multipoint":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?i.points.map(e=>new d(e[0],e[1],e[2],e[3])):n?i.points.map(e=>new d(e[0],e[1],e[2])):l?i.points.map(e=>new d(e[0],e[1],null,e[2])):i.points.map(e=>new d(e[0],e[1])),t._exporter=(t,i)=>e.hasM?new s({points:t.map(e=>[e.x,e.y,e.z,e.m]),hasZ:!0,hasM:!0,spatialReference:i}):new s(t.map(e=>[e.x,e.y,e.z]),i);break}case"polyline":{const i=e,n=[],l=[],{hasZ:o,hasM:s}=e;let a=0;for(const e of i.paths)if(l.push([a,a+e.length]),a+=e.length,o&&s)for(const t of e)n.push(new d(t[0],t[1],t[2],t[3]));else if(o)for(const t of e)n.push(new d(t[0],t[1],t[2]));else if(s)for(const t of e)n.push(new d(t[0],t[1],null,t[2]));else for(const t of e)n.push(new d(t[0],t[1]));t.coordinates=n,t._exporter=(t,i)=>{const n=e.hasM?t.map(e=>[e.x,e.y,e.z??0,e.m??0]):t.map(e=>[e.x,e.y,e.z??0]),o=l.map(e=>n.slice(e[0],e[1]));return new r({paths:o,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class d{constructor(e,t,i=null,n=null,l=null,o=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=l,this.elevationTile=o}clone(){return new d(this.x,this.y,this.z,this.m)}}class y{constructor(e,t){this.layer=e,this.options=t}}class T extends y{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(e=>e.tile=null);else{const{tileInfo:t,tilemapCache:i}=this.layer,n=x(t,i)[e].level;this.geometry.coordinates.forEach(e=>e.tile=t.tileAt(n,e.x,e.y))}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;if(!n)continue;const l=i.tile?.id;i.elevationTile||!l||e[l]||(e[l]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class v extends y{constructor(e,t,i,n){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.clone().intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=x(t,i);if(!e)return n.length-1;const l=this.extent;if(null==l)return-1;for(let i=n.length-1;i>=0;i--){const o=n[i],s=o.resolution*t.size[0],a=o.resolution*t.size[1];if(Math.ceil(l.width/s)*Math.ceil(l.height/a)<=e)return i}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=E(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach(i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let n=!1;e(i,()=>n=!0),n?t&&t(i):this._candidateTiles.push(i)}),this._candidateTiles=E(this._candidateTiles,t)}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(null==t)return;const{tileInfo:i,tilemapCache:n}=this.layer,l=x(i,n)[e],o=i.tileAt(l.level,t.xmin,t.ymin),s=o.extent;if(null==s)return;const a=l.resolution*i.size[0],r=l.resolution*i.size[1],c=Math.ceil((t.xmax-s[0])/a),u=Math.ceil((t.ymax-s[1])/r);for(let e=0;e<u;e++)for(let t=0;t<c;t++){const n=new p.TileKey(null,o.level,o.row-e,o.col+t);i.updateTileInfo(n),this._tileIsMasked(n)||this._candidateTiles.push(n)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>e.extent&&u.contains(t,e.extent))}}function w(e,t,i=0){const n=x(e,t);let l=n.length-1;if(i>0){const t=i/o.getMetersPerUnitForSR(e.spatialReference),s=n.findIndex(e=>e.resolution<t);0===s?l=0:s>0&&(l=s-1)}return l}const g={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};function x(e,t){const i=e.lods;if(R(t)){const{effectiveMinLOD:e,effectiveMaxLOD:n}=t;return i.filter(t=>t.level>=e&&t.level<=n)}return i}async function _(e,t){const i=e.getTilesToFetch(),n={},o=e.options.cache,s=e.options.noDataValue,a=i.map(async i=>{if(null==i.id)return;const l=`${e.layer.uid}:${i.id}:${s}`,a=null!=o?o.get(l):null,r=null!=a?a:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:s,signal:t});null!=o&&o.put(l,r),n[i.id]=new f.ElevationTile(i,r)});await l.whenOrAbort(Promise.allSettled(a),t),e.populateElevationTiles(n)}function E(e,t){const i={},n=[];for(const l of e){const e=l.id;e&&!i[e]?(i[e]=l,n.push(l)):t&&t(l)}const l=n.sort((e,t)=>e.level-t.level);return l.filter((e,i)=>{for(let n=0;n<i;n++){const i=l[n].extent;if(i&&e.extent&&u.contains(i,e.extent))return t&&t(e),!1}return!0})}function R(e){return null!=e?.tileInfo}e.ElevationQuery=class{async queryAll(e,t,n){if(!(e=n?.ignoreInvisibleLayers?e.filter(e=>e.visible):e.slice()).length)throw new i("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const l=m.fromGeometry(t);let o=!1;n?.returnSampleInfo||(o=!0);const s={...g,...n,returnSampleInfo:!0},a=await this.query(e[e.length-1],l,s),r=await this._queryAllContinue(e,a,s);return r.geometry=r.geometry.export(),o&&delete r.sampleInfo,r}async query(e,t,l){if(!e)throw new i("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof m)&&"point"!==t.type&&"multipoint"!==t.type&&"polyline"!==t.type)throw new i("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const s={...g,...l},a=new T(e,t.spatialReference,s),r=s.signal;return await e.load({signal:r}),await async function(e,t,n){let l;const o=e.layer.tileInfo.spatialReference;if(t instanceof m?l=await t.project(o,n):(await c.initializeProjection([{source:t.spatialReference,dest:o}],{signal:n}),l=c.project(t,o)),!l)throw new i("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${o.wkid}'`);e.geometry=m.fromGeometry(l)}(a,t,r),await this._selectTiles(a,r),await _(a,r),function(e){e.geometry.coordinates.forEach(t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);null!=e?n=e:t.elevationTile=null}t.z=n})}(a),async function(e,t){const i=await e.geometry.project(e.outSpatialReference,t);n.assertIsSome(i);const l={geometry:i.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(l.sampleInfo=function(e){const t=e.layer.tileInfo,i=o.getMetersPerUnitForSR(t.spatialReference);return e.geometry.coordinates.map(n=>{let l=-1;return n.elevationTile&&n.elevationTile!==e.outsideExtentTile&&(l=t.lodAt(n.elevationTile.tile.level).resolution*i),{demResolution:l}})}(e)),e.geometry.coordinates.forEach(e=>{e.tile=null,e.elevationTile=null}),l}(a,r)}async createSampler(e,t,n){if(!e)throw new i("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||"extent"!==t.type)throw new i("elevation-query:invalid-extent","Invalid or undefined extent");const l={...g,...n};return this._createSampler(e,t,l)}async createSamplerAll(e,t,n){if(!(e=n?.ignoreInvisibleLayers?e.filter(e=>e.visible):e.slice()).length)throw new i("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||"extent"!==t.type)throw new i("elevation-query:invalid-extent","Invalid or undefined extent");const l={...g,...n,returnSampleInfo:!0},o=await this._createSampler(e[e.length-1],t,l);return this._createSamplerAllContinue(e,t,o,l)}async _createSampler(e,t,i,n){const l=i.signal;await e.load({signal:l});const o=t.spatialReference,s=e.tileInfo.spatialReference;o.equals(s)||(await c.initializeProjection([{source:o,dest:s}],{signal:l}),t=c.project(t,s));const a=new v(e,t,i,n);return await this._selectTiles(a,l),await _(a,l),new h.MultiTileElevationSampler(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const l=i.samplers.filter(e=>!e.tile.hasNoDataValues).map(e=>u.fromExtent(e.extent)),o=await this._createSampler(e[e.length-1],t,n,l);if(0===o.samplers.length)return i;const s=i.samplers.concat(o.samplers),a=new h.MultiTileElevationSampler(s,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,i){const l=e.pop(),o=t.geometry.coordinates,s=t.sampleInfo;n.assertIsSome(s);const a=[],r=[];for(let t=0;t<o.length;t++){const i=s[t];i.demResolution>=0?i.source||(i.source=l):e.length&&(a.push(o[t]),r.push(t))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,i),h=u.sampleInfo;if(!h)throw new Error("no sampleInfo");return r.forEach((e,t)=>{o[e].z=u.geometry.coordinates[t].z,s[e].demResolution=h[t].demResolution}),this._queryAllContinue(e,t,i)}async _selectTiles(e,t){"geometry"===e.type&&function(e){if(null==e.layer.fullExtent)return;const t=new f.ElevationTile(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach(e=>{const n=e.x,l=e.y;(n<i.xmin||n>i.xmax||l<i.ymin||l>i.ymax)&&(e.elevationTile=t)})}(e);const n=e.options.demResolution;if("number"==typeof n)!function(e,t){const i=function(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=t/o.getMetersPerUnitForSR(i.spatialReference),s=x(i,n);let a=s[0],r=0;for(let e=1;e<s.length;e++){const t=s[e];Math.abs(t.resolution-l)<Math.abs(a.resolution-l)&&(a=t,r=e)}return r}(e,t);e.selectTilesAtLOD(i)}(e,n);else if("finest-contiguous"===n)await this._selectTilesFinestContiguous(e,t);else{if("auto"!==n)throw new i("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${n}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=w(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,l,t)}async _selectTilesFinestContiguousAt(e,t,n){const o=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const s=o.tilemapCache,a=e.getTilesToFetch();try{if(s&&!R(s))await l.whenOrAbort(Promise.all(a.map(e=>s.fetchAvailability(e.level,e.row,e.col,{signal:n}))),n);else if(await _(e,n),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new i("elevation-query:has-unavailable-tiles","Some elevation tiles are unavailable")}catch(i){l.throwIfAbortError(i),await this._selectTilesFinestContiguousAt(e,t-1,n)}}async _selectTilesAuto(e,i){!function(e){const{tileInfo:t,tilemapCache:i}=e.layer,n=w(t,i,e.options.minDemResolution);e.selectTilesAtLOD(n,e.options.maximumAutoTileRequests)}(e),function(e){const t=e.layer.tileInfo;let i=0;const n={},l=e=>{null!=e.id&&(e.id in n?n[e.id]++:(n[e.id]=1,i++))},o=e=>{if(null==e.id)return;const t=n[e.id];1===t?(delete n[e.id],i--):n[e.id]=t-1};e.forEachTileToFetch(l,o);let s=!0;for(;s&&(s=!1,e.forEachTileToFetch(n=>{i<=e.options.maximumAutoTileRequests||(o(n),t.upsampleTile(n)&&(s=!0),l(n))},o),s););}(e);const n=e.layer.tilemapCache;if(!n||R(n))return this._selectTilesAutoPrefetchUpsample(e,i);const o=e.getTilesToFetch(),s={},a=o.map(async e=>{const o=new p.TileKey(null,0,0,0,u.create()),a=await t.result(n.fetchAvailabilityUpsample(e.level,e.row,e.col,o,{signal:i}));!1!==a.ok?null!=e.id&&(s[e.id]=o):l.throwIfAbortError(a.error)});await l.whenOrAbort(Promise.all(a),i),e.remapTiles(s)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await _(e,t);let n=!1;e.forEachTileToFetch((e,t)=>{i.upsampleTile(e)?n=!0:t()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}},e.GeometryDescriptor=m,e.getFinestLodIndex=w,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});