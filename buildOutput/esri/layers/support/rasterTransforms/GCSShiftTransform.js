// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/enumeration","../../../core/accessorSupport/decorators/subclass","./BaseRasterTransform"],function(e,r,t,o,s,a,n,c,i){"use strict";var p;return e.default=p=class extends i{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new p({tolerance:this.tolerance})}},r.__decorate([n.enumeration({GCSShiftXform:"gcs-shift"})],e.default.prototype,"type",void 0),r.__decorate([t.property()],e.default.prototype,"tolerance",void 0),e.default=p=r.__decorate([c.subclass("esri.layers.support.rasterTransforms.GCSShiftTransform")],e.default),e.default});