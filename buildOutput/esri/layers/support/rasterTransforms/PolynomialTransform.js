// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/enumeration","../../../core/accessorSupport/decorators/reader","../../../core/accessorSupport/decorators/subclass","../../../core/accessorSupport/decorators/writer","../../../geometry/Extent","../../../geometry/Point","./BaseRasterTransform"],function(e,r,t,o,n,s,i,f,a,l,c,p,u){"use strict";var d;function y(e,r,t){const{x:o,y:n}=r;if(t<2)return{x:e[0]+o*e[2]+n*e[4],y:e[1]+o*e[3]+n*e[5]};if(2===t){const r=o*o,t=n*n,s=o*n;return{x:e[0]+o*e[2]+n*e[4]+r*e[6]+s*e[8]+t*e[10],y:e[1]+o*e[3]+n*e[5]+r*e[7]+s*e[9]+t*e[11]}}const s=o*o,i=n*n,f=o*n,a=s*o,l=s*n,c=o*i,p=n*i;return{x:e[0]+o*e[2]+n*e[4]+s*e[6]+f*e[8]+i*e[10]+a*e[12]+l*e[14]+c*e[16]+p*e[18],y:e[1]+o*e[3]+n*e[5]+s*e[7]+f*e[9]+i*e[11]+a*e[13]+l*e[15]+c*e[17]+p*e[19]}}function h(e,r,t){const{xmin:o,ymin:n,xmax:s,ymax:i,spatialReference:f}=r;let a=[];if(t<2)a.push({x:o,y:i}),a.push({x:s,y:i}),a.push({x:o,y:n}),a.push({x:s,y:n});else{let e=10;for(let r=0;r<e;r++)a.push({x:o,y:n+(i-n)*r/(e-1)}),a.push({x:s,y:n+(i-n)*r/(e-1)});e=8;for(let r=1;r<=e;r++)a.push({x:o+(s-o)*r/e,y:n}),a.push({x:o+(s-o)*r/e,y:i})}a=a.map(r=>y(e,r,t));const l=a.map(e=>e.x),p=a.map(e=>e.y);return new c({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:f})}return e.default=d=class extends u{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,r){const{coeffX:t,coeffY:o}=r;if(!t?.length||!o?.length||t.length!==o.length)return null;const n=[];for(let e=0;e<t.length;e++)n.push(t[e]),n.push(o[e]);return n}writeForwardCoefficients(e,r,t){const o=[],n=[];for(let r=0;r<e?.length;r++)r%2==0?o.push(e[r]):n.push(e[r]);r.coeffX=o,r.coeffY=n}get inverseCoefficients(){let e=this._get("inverseCoefficients");const r=this._get("forwardCoefficients");return!e&&r&&this.polynomialOrder<2&&(e=function(e){const[r,t,o,n,s,i]=e,f=o*i-s*n,a=s*n-o*i;return[(s*t-r*i)/f,(o*t-r*n)/a,i/f,n/a,-s/f,-o/a]}(r)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,r){const{inverseCoeffX:t,inverseCoeffY:o}=r;if(!t?.length||!o?.length||t.length!==o.length)return null;const n=[];for(let e=0;e<t.length;e++)n.push(t[e]),n.push(o[e]);return n}writeInverseCoefficients(e,r,t){const o=[],n=[];for(let r=0;r<e?.length;r++)r%2==0?o.push(e[r]):n.push(e[r]);r.inverseCoeffX=o,r.inverseCoeffY=n}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const r=y(this.forwardCoefficients,e,this.polynomialOrder);return new p({x:r.x,y:r.y,spatialReference:e.spatialReference})}return h(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const r=y(this.inverseCoefficients,e,this.polynomialOrder);return new p({x:r.x,y:r.y,spatialReference:e.spatialReference})}return h(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new d({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}},r.__decorate([t.property({json:{write:!0}})],e.default.prototype,"polynomialOrder",void 0),r.__decorate([t.property()],e.default.prototype,"forwardCoefficients",void 0),r.__decorate([f.reader("forwardCoefficients",["coeffX","coeffY"])],e.default.prototype,"readForwardCoefficients",null),r.__decorate([l.writer("forwardCoefficients")],e.default.prototype,"writeForwardCoefficients",null),r.__decorate([t.property({json:{write:!0}})],e.default.prototype,"inverseCoefficients",null),r.__decorate([f.reader("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],e.default.prototype,"readInverseCoefficients",null),r.__decorate([l.writer("inverseCoefficients")],e.default.prototype,"writeInverseCoefficients",null),r.__decorate([t.property()],e.default.prototype,"affectsPixelSize",null),r.__decorate([i.enumeration({PolynomialXform:"polynomial"})],e.default.prototype,"type",void 0),e.default=d=r.__decorate([a.subclass("esri.layers.support.rasterTransforms.PolynomialTransform")],e.default),e.default});