// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../request","../../core/Accessor","../../core/Error","../../core/handleUtils","../../core/has","../../core/LRUCache","../../core/PooledArray","../../core/promiseUtils","../../core/reactiveUtils","../../core/scheduling","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","./TileKey","./Tilemap"],function(e,t,i,r,a,l,s,o,n,c,h,p,f,u,m,d,y,v,_){"use strict";var b;function T(e,t,i){return new a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})}e.TilemapCache=class extends r{static{b=this}constructor(e){super(e),this._pendingTilemapRequests={},this.request=i,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new o.LRUCache(2097152),this.addHandles(h.watch(()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]},()=>this._initializeTilemapDefinition(),h.initial))}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,t,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const r=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return r?r.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,r){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(T(e,t,i)):this._fetchTilemap(e,t,i,r).catch(e=>e).then(r=>{if(r instanceof _.Tilemap){const a=r.getAvailability(t,i);if("unavailable"===a)throw T(e,t,i);return a}if(c.isAbortError(r))throw r;return"unknown"})}fetchAvailabilityUpsample(e,t,i,r,a){r.level=e,r.row=t,r.col=i;const l=this.layer.tileInfo;l.updateTileInfo(r);const s=this.fetchAvailability(e,t,i,a).catch(e=>{if(c.isAbortError(e))throw e;if(l.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r,a);throw e});return this._fetchAvailabilityUpsamplePrefetch(r.id,e,t,i,a,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,r,a,s){if(!this._prefetchingEnabled||null==e)return;const o=`prefetch-${e}`;if(this.hasHandles(o))return;const n=new AbortController;s.then(()=>n.abort(),()=>n.abort());let h=!1;const f=l.makeHandle(()=>{h||(h=!0,n.abort())});if(this.addHandles(f,o),await p.waitTicks(10,n.signal).catch(()=>{}),h||(h=!0,this.removeHandles(o)),c.isAborted(n))return;const u=new v.TileKey(e,t,i,r),m={...a,signal:n.signal},d=this.layer.tileInfo;for(let e=0;b._prefetches.length<b._maxPrefetch&&d.upsampleTile(u);++e){const e=this.fetchAvailability(u.level,u.row,u.col,m);b._prefetches.push(e);const t=()=>{b._prefetches.removeUnordered(e)};e.then(t,t)}}static{this._maxPrefetch=4}static{this._prefetches=new n({initialSize:b._maxPrefetch})}static cleanupTilemapCache(){this._prefetches.prune()}_fetchTilemap(e,t,i,r){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const l=this._tmpTilemapDefinition,s=this._tilemapFromCache(e,t,i,l);if(s)return Promise.resolve(s);const o=r?.signal;return r={...r,signal:null},new Promise((e,t)=>{c.onAbort(o,()=>t(c.createAbortError()));const i=_.tilemapDefinitionId(l);let a=this._pendingTilemapRequests[i];if(!a){a=_.Tilemap.fromDefinition(l,r).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));const e=()=>{delete this._pendingTilemapRequests[i]};this._pendingTilemapRequests[i]=a,a.then(e,e)}a.then(e,t)})}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:i}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:f.objectToQuery({...e.query,...i,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,r){r.level=e,r.row=t-t%this.size,r.col=i-i%this.size;const a=_.tilemapDefinitionId(r);return this._tilemapCache.get(a)}get test(){}},t.__decorate([u.property({constructOnly:!0})],e.TilemapCache.prototype,"layer",void 0),t.__decorate([u.property({constructOnly:!0})],e.TilemapCache.prototype,"minLOD",void 0),t.__decorate([u.property({constructOnly:!0})],e.TilemapCache.prototype,"maxLOD",void 0),t.__decorate([u.property({constructOnly:!0})],e.TilemapCache.prototype,"request",void 0),t.__decorate([u.property({constructOnly:!0})],e.TilemapCache.prototype,"size",void 0),e.TilemapCache=b=t.__decorate([y.subclass("esri.layers.support.TilemapCache")],e.TilemapCache),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});