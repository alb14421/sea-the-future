// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../chunks/tslib.es6","../config","../Graphic","../PopupTemplate","../core/Collection","../core/Error","../core/Logger","../core/MultiOriginJSONSupport","../core/object","../core/promiseUtils","../core/reactiveUtils","../core/unitUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/has","../core/RandomLCG","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../core/accessorSupport/originUtils","../geometry/Extent","../geometry/Multipoint","../geometry/projectionUtils","../geometry/SpatialReference","../geometry/support/spatialReferenceUtils","./Layer","./mixins/BlendLayer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./support/arcgisLayerUrl","./support/RouteSymbols","../portal/Portal","../portal/PortalItem","../portal/support/portalItemUtils","../renderers/support/jsonUtils","../rest/networkService","../rest/route","../rest/support/DirectionLine","../rest/support/DirectionPoint","../rest/support/PointBarrier","../rest/support/PolygonBarrier","../rest/support/PolylineBarrier","../rest/support/RouteInfo","../rest/support/RouteParameters","../rest/support/RouteSettings","../rest/support/Stop"],function(e,t,r,o,i,s,n,a,l,u,c,p,y,d,m,f,h,w,g,S,b,v,_,B,P,I,N,D,C,L,O,R,T,F,A,k,x,j,G,J,M,E,U,W,q,V,z){"use strict";function K(e){if(!e.length)return;const t=e.toArray(),r=t.map(({objectId:e})=>e).filter(e=>null!=e);let o=Math.max(...r,0);for(const e of t)null==e.objectId&&(e.objectId=++o)}function Y(e,t){return!!e.length&&e.length===t.length&&Z(e)&&Z(t)}function Z(e){return e.every(({objectId:e})=>null!=e)}function X(e){return e.length?e:null}function H(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:H("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:H("esriGeometryPolyline")}}}function Q(e){return"layers"in e}async function $(e){const t=B.WGS84;return await _.initializeProjection(e.spatialReference,t),_.project(e,t)}function ee(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function te(e,t){return"decimal-degrees"===t||"points"===t||"unknown"===t?e:p.convertUnit(e,t,"meters")}const re=i.ofType(G),oe=i.ofType(J),ie=i.ofType(M),se=i.ofType(E),ne=i.ofType(U),ae=i.ofType(z);let le=class extends(N.BlendLayer(L.ScaleRangeLayer(D.OperationalLayer(C.PortalLayer(a.MultiOriginJSONMixin(I)))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.checksum=null,this.defaultSymbols=new R,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new ie,this.polygonBarriers=new se,this.polylineBarriers=new ne,this.routeInfo=null,this.spatialReference=B.WGS84,this.stops=new ae,this.type="route";const t=()=>{this._setStopSymbol(this.stops)};this.addHandles(c.on(()=>this.stops,"change",t,{sync:!0,onListenerAdd:t}))}writeFeatureCollectionWebmap(e,t,r,o){const i=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(e=>!!e),s=i.map((e,t)=>t),n="web-map"===o.origin?"featureCollection.layers":"layers";l.setDeepValue(n,i,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=s}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",e=>G.fromGraphic(e))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",e=>J.fromGraphic(e))}get fullExtent(){const e=new b({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:B.WGS84});if(null!=this.routeInfo?.geometry)return this.routeInfo.geometry.extent??e;if(null==this.stops)return e;const t=this.stops.filter(e=>null!=e.geometry);if(t.length<2)return e;const{spatialReference:r}=t.at(0).geometry;if(null==r)return e;const o=t.toArray().map(e=>{const t=e.geometry;return[t.x,t.y]});return new v({points:o,spatialReference:r}).extent}readMaxScale(e,t){const r=Q(t)?t.layers:t.featureCollection?.layers,o=r?.find(e=>null!=e.layerDefinition.maxScale);return o?.layerDefinition.maxScale??0}readMinScale(e,t){const r=Q(t)?t.layers:t.featureCollection?.layers,o=r?.find(e=>null!=e.layerDefinition.minScale);return o?.layerDefinition.minScale??0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",e=>M.fromGraphic(e))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",e=>E.fromGraphic(e))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",e=>U.fromGraphic(e))}readRouteInfo(e,t){return this._getNetworkFeatures(t,"RouteInfo",e=>W.fromGraphic(e)).at(0)??null}readSpatialReference(e,t){const r=Q(t)?t.layers:t.featureCollection?.layers;if(!r?.length)return B.WGS84;const{layerDefinition:o,featureSet:i}=r[0],s=i.features[0],n=s?.geometry?.spatialReference??i.spatialReference??o.spatialReference??o.extent.spatialReference??P.wgs84;return B.fromJSON(n)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",e=>z.fromGraphic(e),e=>this._setStopSymbol(e))}get title(){return this.routeInfo?.name??"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return t.routeServiceUrl}set url(e){null!=e?this._set("url",O.sanitizeUrl(e,n.getLogger(this))):this._set("url",t.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){null!=this.directionLines&&(this.directionLines.removeAll(),this._set("directionLines",null)),null!=this.directionPoints&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),null!=this.routeInfo&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new s("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new s("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==t.type)throw new s("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(!this.routeInfo)throw new s("routelayer:route-unsolved","save() requires a solved route");const{portal:r}=t;await r.signIn(),r.user||await t.reload();const{itemUrl:o,itemControl:i}=t;if("admin"!==i&&"update"!==i)throw new s("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const n={messages:[],origin:"portal-item",portal:r,url:o?y.urlToObject(o):void 0,writtenProperties:[]},a=this.write(void 0,n);return t.extent=await $(e),t.title=this.title,await t.update({data:a}),t}async saveAs(e,t={}){if(await this.load(),null==this.routeInfo)throw new s("routelayer:route-unsolved","saveAs() requires a solved route");const r=F.from(e).clone();r.extent??=await $(this.fullExtent),r.id=null,r.portal??=T.getDefault(),r.title??=this.title,r.type="Feature Collection",r.typeKeywords=["Data","Feature Collection",A.typeKeyword.MULTI_LAYER,"Route Layer"];const{portal:o}=r,i={messages:[],origin:"portal-item",portal:o,url:null,writtenProperties:[]};await o.signIn();const n=t?.folder,a=this.write(void 0,i);return await o.user.addItem({item:r,folder:n,data:a}),this.portalItem=r,S.updateOrigins(i),i.portalItem=r,r}async solve(e,t){K(this.stops),K(this.pointBarriers),K(this.polylineBarriers),K(this.polygonBarriers);const r=e?.stops??this.stops,o=e?.pointBarriers??X(this.pointBarriers),n=e?.polylineBarriers??X(this.polylineBarriers),a=e?.polygonBarriers??X(this.polygonBarriers);if(null==r)throw new s("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if(("esri.rest.support.FeatureSet"===r.declaredClass||"esri.rest.support.NetworkFeatureSet"===r.declaredClass)&&r.features.length<2||i.isCollection(r)&&r.length<2)throw new s("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(i.isCollection(r))for(const e of r)e.routeName=null;const l=e?.apiKey,{checksum:c,url:p}=this,y=await this._getServiceDescription(p,l,t),d=e?.travelMode??y.defaultTravelMode,m=e?.accumulateAttributes??[];d&&(m.push(d.distanceAttributeName),d.timeAttributeName&&m.push(d.timeAttributeName));const f={accumulateAttributes:m,checksum:c,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:o,polylineBarriers:n,polygonBarriers:a,preserveObjectID:!0,returnBarriers:!!o,returnDirections:!0,returnPolygonBarriers:!!a,returnPolylineBarriers:!!n,returnRoutes:!0,returnStops:!0,stops:r},h=q.from(e??{});let w;h.set(f);try{w=await j.solve(p,h,t)}catch(e){throw u.isAbortError(e)?e:new s("routelayer:failed-route-request","the routing request failed",{error:e})}const g=this._toRouteLayerSolution(w);return this._isOverridden("title")||(this.title=g.routeInfo.name??"Route"),this._populatePortalFields(g,y,h),g}update(e){const{checksum:t,directionLines:r,directionPoints:o,pointBarriers:i,polygonBarriers:s,polylineBarriers:n,routeInfo:a,stops:l}=e;Y(l,this.stops)?function(e,t){for(const r of e){const e=t.find(e=>e.objectId===r.objectId);e&&(e.arriveCurbApproach=r.arriveCurbApproach,e.arriveTime=r.arriveTime,e.arriveTimeOffset=r.arriveTimeOffset,e.cumulativeCosts=r.cumulativeCosts,e.cumulativeDistance=r.cumulativeDistance,e.cumulativeDuration=r.cumulativeDuration,e.curbApproach=r.curbApproach,e.departCurbApproach=r.departCurbApproach,e.departTime=r.departTime,e.departTimeOffset=r.departTimeOffset,e.distanceToNetworkInMeters=r.distanceToNetworkInMeters,e.geometry=r.geometry,e.lateDuration=r.lateDuration,e.name=r.name,e.navLatency=r.navLatency,e.posAlong=r.posAlong,e.routeName=r.routeName,e.serviceCosts=r.serviceCosts,e.serviceDistance=r.serviceDistance,e.serviceDuration=r.serviceDuration,e.sequence=r.sequence,e.sideOfEdge=r.sideOfEdge,e.snapX=r.snapX,e.snapY=r.snapY,e.snapZ=r.snapZ,e.sourceId=r.sourceId,e.sourceOid=r.sourceOid,e.status=r.status,e.symbol=r.symbol,e.timeWindowEnd=r.timeWindowEnd,e.timeWindowStart=r.timeWindowStart,e.violations=r.violations,e.waitDuration=r.waitDuration,e.wait=r.wait)}}(l,this.stops):this.set({stops:l}),Y(i,this.pointBarriers)?function(e,t){for(const r of e){const e=t.find(e=>e.objectId===r.objectId);e&&(e.addedCost=r.addedCost,e.barrierType=r.barrierType,e.costs=r.costs,e.curbApproach=r.curbApproach,e.fullEdge=r.fullEdge,e.geometry=r.geometry,e.name=r.name,e.sideOfEdge=r.sideOfEdge,e.sourceId=r.sourceId,e.sourceOid=r.sourceOid,e.status=r.status,e.symbol=r.symbol)}}(i,this.pointBarriers):this.set({pointBarriers:i}),Y(n,this.polylineBarriers)?function(e,t){for(const r of e){const e=t.find(e=>e.objectId===r.objectId);e&&(e.barrierType=r.barrierType,e.costs=r.costs,e.geometry=r.geometry,e.name=r.name,e.scaleFactor=r.scaleFactor,e.symbol=r.symbol)}}(n,this.polylineBarriers):this.set({polylineBarriers:n}),Y(s,this.polygonBarriers)?function(e,t){for(const r of e){const e=t.find(e=>e.objectId===r.objectId);e&&(e.barrierType=r.barrierType,e.costs=r.costs,e.geometry=r.geometry,e.name=r.name,e.scaleFactor=r.scaleFactor,e.symbol=r.symbol)}}(s,this.polygonBarriers):this.set({polygonBarriers:s}),this.set({checksum:t}),this._set("directionLines",r),this._set("directionPoints",o),this._set("routeInfo",a),null!=a.geometry&&(this.spatialReference=a.geometry.spatialReference)}_getNetworkFeatures(e,t,s,n){const a=Q(e)?e.layers:e.featureCollection?.layers,l=a?.find(e=>e.layerDefinition.name===t);if(null==l)return new i;const{layerDefinition:u,popupInfo:c,featureSet:p}=l,y=u.drawingInfo.renderer,{features:d}=p,m=p.spatialReference??u.spatialReference??u.extent.spatialReference??P.wgs84,f=y&&k.read(y),h=B.fromJSON(m),w=d.map(e=>{const i=r.fromJSON(e);null!=i.geometry&&null!=e.geometry&&null==e.geometry.spatialReference&&(i.geometry.spatialReference=h);const n=s(i);return n.symbol??=f?.getSymbol(i)??this._getNetworkSymbol(t),n.popupTemplate??=c&&o.fromJSON(c),n});return n&&w.some(({symbol:e})=>!e)&&n(w),new i(w)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,t,r){if(null!=this._cachedServiceDescription&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const o=await x.fetchServiceDescription(e,t,r);return this._cachedServiceDescription={serviceDescription:o,url:e},o}_setStopSymbol(e){if(!e||!e.length||!this.defaultSymbols.stops||e.every(({symbol:e})=>!!e))return;const{first:t,last:r,middle:o,unlocated:i,waypoint:s,break:n}=this.defaultSymbols.stops,a=e.map(({sequence:e})=>e).filter(e=>null!=e),l=e.length===a.length;if(!this.routeInfo&&!l||1===e.length)return void e.forEach((i,s)=>{switch(s){case 0:i.symbol=t;break;case e.length-1:i.symbol=r;break;default:i.symbol=o}});const u=Math.min(...a),c=Math.max(...a);for(const a of e)a.sequence!==u?a.sequence!==c?this.routeInfo&&"ok"!==a.status&&"not-located-on-closest"!==a.status?a.symbol=i:"waypoint"!==a.locationType?"break"!==a.locationType?a.symbol=o:a.symbol=n:a.symbol=s:a.symbol=r:a.symbol=t}_toRouteLayerSolution(e){const{checksum:t,routeResults:r}=e,o=r[0].stops?.map(e=>z.fromJSON(e.toJSON()));this._setStopSymbol(o);const i=new ae(o),s=new se(e.polygonBarriers?.map(e=>{const t=E.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polygonBarriers,t})),n=new ne(e.polylineBarriers?.map(e=>{const t=U.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polylineBarriers,t})),a=new ie(e.pointBarriers?.map(e=>{const t=M.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.pointBarriers,t})),l=r[0].route?.toJSON(),u=W.fromJSON(l);u.symbol=this.defaultSymbols.routeInfo;const c=new oe(r[0].directionPoints?.features.map(e=>{const t=J.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionPoints,t}));return{checksum:t,directionLines:new re(r[0].directionLines?.features.map(e=>{const t=G.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionLines,t})),directionPoints:c,pointBarriers:a,polygonBarriers:s,polylineBarriers:n,routeInfo:u,stops:i}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",G.fields,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",J.fields,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,t,r,o,i,s){if(!e?.length)return null;const n=this.spatialReference.toJSON(),{fullExtent:a,maxScale:l,minScale:u}=this;return{featureSet:{features:e.toArray().map(e=>function(e){const{attributes:t,geometry:r,popupTemplate:o,symbol:i}=e.toGraphic().toJSON();return{attributes:t,geometry:r,popupInfo:o,symbol:i}}(e)),geometryType:r,spatialReference:n},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:null!=t?t.toJSON():H(r)}},extent:a.toJSON(),fields:o,geometryType:r,hasM:!1,hasZ:!1,maxScale:l,minScale:u,name:i,objectIdField:"ObjectID",spatialReference:n,title:s,type:"Feature Layer",typeIdField:""}}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",M.fields,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",E.fields,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",U.fields,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(null!=this.routeInfo?new i([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",W.fields,"RouteInfo","Route Details")}_writeStops(){const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",z.fields,"Stops","Stops");if(null==e)return null;const{stops:t}=this.defaultSymbols,r=t?.first?.toJSON(),o=t?.middle?.toJSON(),i=t?.last?.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:o,uniqueValueInfos:[{value:"1",symbol:r,label:"First Stop"},{value:`${this.stops.length}`,symbol:i,label:"Last Stop"}]},e}_populatePortalFields(e,t,r){const o=t.networkDataset?.networkAttributes,i=o?.filter(({usageType:e})=>"cost"===e)??[],a=r.travelMode??t.defaultTravelMode;if(null==a)return void n.getLogger(this).warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:l,distanceAttributeName:u}=a,c=i.find(({name:e})=>e===l),p=i.find(({name:e})=>e===u),y=r.travelMode?.impedanceAttributeName??r.impedanceAttribute??t.impedance,d=c?.units,m=p?.units;if(!d||!m)throw new s("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const f=r.directionsLanguage??t.directionsLanguage,h=r.accumulateAttributes??t.accumulateAttributeNames??[],w=new Set(i.filter(({name:e})=>e===l||e===u||e===y||null!=e&&h.includes(e)).map(({name:e})=>e)),g=e=>{for(const t in e)w.has(t)||delete e[t]};for(const t of e.pointBarriers)null!=t.costs&&(t.addedCost=t.costs[y]??0,g(t.costs));for(const t of e.polygonBarriers)null!=t.costs&&(t.scaleFactor=t.costs[y]??1,g(t.costs));for(const t of e.polylineBarriers)null!=t.costs&&(t.scaleFactor=t.costs[y]??1,g(t.costs));const{routeInfo:S}=e,{findBestSequence:b,preserveFirstStop:v,preserveLastStop:_,startTimeIsUTC:B,timeWindowsAreUTC:P}=r;S.analysisSettings=new V({accumulateAttributes:h,directionsLanguage:f,findBestSequence:b,preserveFirstStop:v,preserveLastStop:_,startTimeIsUTC:B,timeWindowsAreUTC:P,travelMode:a}),S.totalDuration=ee(S.totalCosts?.[l]??0,d),S.totalDistance=te(S.totalCosts?.[u]??0,m),S.totalLateDuration=ee(S.totalViolations?.[l]??0,d),S.totalWaitDuration=ee(S.totalWait?.[l]??0,d),null!=S.totalCosts&&g(S.totalCosts),null!=S.totalViolations&&g(S.totalViolations),null!=S.totalWait&&g(S.totalWait);for(const t of e.stops)null!=t.serviceCosts&&(t.serviceDuration=ee(t.serviceCosts[l]??0,d),t.serviceDistance=te(t.serviceCosts[u]??0,m),g(t.serviceCosts)),null!=t.cumulativeCosts&&(t.cumulativeDuration=ee(t.cumulativeCosts[l]??0,d),t.cumulativeDistance=te(t.cumulativeCosts[u]??0,m),g(t.cumulativeCosts)),null!=t.violations&&(t.lateDuration=ee(t.violations[l]??0,d),g(t.violations)),null!=t.wait&&(t.waitDuration=ee(t.wait[l]??0,d),g(t.wait))}};return e.__decorate([d.property({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],le.prototype,"_featureCollection",void 0),e.__decorate([g.writer(["web-map","portal-item"],"_featureCollection")],le.prototype,"writeFeatureCollectionWebmap",null),e.__decorate([d.property({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=this.portalItem}}}}}}})],le.prototype,"_type",void 0),e.__decorate([d.property({type:String})],le.prototype,"checksum",void 0),e.__decorate([d.property({nonNullable:!0,type:R})],le.prototype,"defaultSymbols",void 0),e.__decorate([d.property({readOnly:!0})],le.prototype,"directionLines",void 0),e.__decorate([h.reader(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],le.prototype,"readDirectionLines",null),e.__decorate([d.property({readOnly:!0})],le.prototype,"directionPoints",void 0),e.__decorate([h.reader(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],le.prototype,"readDirectionPoints",null),e.__decorate([d.property({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],le.prototype,"featureCollectionType",void 0),e.__decorate([d.property({readOnly:!0})],le.prototype,"fullExtent",null),e.__decorate([d.property({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],le.prototype,"legendEnabled",void 0),e.__decorate([d.property({type:["show","hide"]})],le.prototype,"listMode",void 0),e.__decorate([d.property({type:Number,nonNullable:!0,json:{write:!1}})],le.prototype,"maxScale",void 0),e.__decorate([h.reader(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],le.prototype,"readMaxScale",null),e.__decorate([d.property({type:Number,nonNullable:!0,json:{write:!1}})],le.prototype,"minScale",void 0),e.__decorate([h.reader(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],le.prototype,"readMinScale",null),e.__decorate([d.property({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],le.prototype,"operationalLayerType",void 0),e.__decorate([d.property({nonNullable:!0,type:i.ofType(M)})],le.prototype,"pointBarriers",void 0),e.__decorate([h.reader(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],le.prototype,"readPointBarriers",null),e.__decorate([d.property({nonNullable:!0,type:i.ofType(E)})],le.prototype,"polygonBarriers",void 0),e.__decorate([h.reader(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],le.prototype,"readPolygonBarriers",null),e.__decorate([d.property({nonNullable:!0,type:i.ofType(U)})],le.prototype,"polylineBarriers",void 0),e.__decorate([h.reader(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],le.prototype,"readPolylineBarriers",null),e.__decorate([d.property({readOnly:!0})],le.prototype,"routeInfo",void 0),e.__decorate([h.reader(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],le.prototype,"readRouteInfo",null),e.__decorate([d.property({type:B})],le.prototype,"spatialReference",void 0),e.__decorate([h.reader(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],le.prototype,"readSpatialReference",null),e.__decorate([d.property({nonNullable:!0,type:i.ofType(z)})],le.prototype,"stops",void 0),e.__decorate([h.reader(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],le.prototype,"readStops",null),e.__decorate([d.property()],le.prototype,"title",null),e.__decorate([d.property({readOnly:!0,json:{read:!1}})],le.prototype,"type",void 0),e.__decorate([d.property()],le.prototype,"url",null),le=e.__decorate([w.subclass("esri.layers.RouteLayer")],le),le});