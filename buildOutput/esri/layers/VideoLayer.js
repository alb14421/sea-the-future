// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../chunks/tslib.es6","../Color","../request","../core/deprecate","../core/Error","../core/Logger","../core/mathUtils","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/reactiveUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/has","../core/RandomLCG","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../geometry/Extent","../geometry/Polyline","../geometry/SpatialReference","./Layer","./mixins/ArcGISService","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./support/arcgisLayerUrl","./support/commonProperties","./support/multiLayerServiceUtils","./support/PlaybackInfo","./support/serviceCapabilitiesUtils","./support/TelemetryData","./support/TelemetryDisplay","./support/VideoFrame","./support/VideoTimeExtent","./video/VideoController","./video/videoUtils","../symbols/CIMSymbol","../symbols/PictureMarkerSymbol","../symbols/SimpleFillSymbol","../symbols/SimpleLineSymbol","../symbols/SimpleMarkerSymbol","../symbols/Symbol","../symbols/support/jsonUtils"],function(e,r,t,o,i,l,n,s,a,p,y,d,c,u,m,h,_,v,g,S,f,b,O,T,w,I,L,C,P,x,U,E,j,N,M,V,k,F,G,A,H,J,R,z){"use strict";function D(e,r){return{ignoreOrigin:this.originIdOf(r)<3}}let q=[];const B=new r([255,127,0]),W=new r([0,0,0,.05]),Q=new J({angle:0,color:B,size:10,style:"cross"}),$=new A({color:W,outline:new H({color:B,width:2})}),Z=new H({color:B,width:1}),K=new J({angle:0,color:B,outline:{color:[255,255,255],width:1.33},size:10,style:"circle"}),X=new H({color:B,width:1}),Y={types:{base:R,key:"type",typeMap:{"simple-marker":J,"picture-marker":G,cim:F}},json:{name:"drawingInfo.sensorSymbol",write:{writer:z.write,overridePolicy:D}}};function ee(e,r){return{type:r,json:{name:e,write:{overridePolicy:D}}}}let re=class extends(b.BlendLayer(I.ScaleRangeLayer(f.ArcGISService(T.OperationalLayer(w.PortalLayer(s.MultiOriginJSONMixin(O.CustomParametersMixin(S)))))))){constructor(e){super(e),this.capabilities=null,this.codecs=null,this.connectionInfo=null,this.controller=new V,this.copyright=null,this.created=null,this.customParameters=null,this.description=null,this.elevationSource=null,this.frame=null,this.frameCenterSymbol=Q.clone(),this.frameCount=null,this.frameEffect=null,this.frameOpacity=1,this.frameOutlineSymbol=$.clone(),this.fullExtent=null,this.initialExtent=null,this.layerId=null,this.operationalLayerType="ArcGISVideoLayer",this.playbackInfo=null,this.posterUrl=null,this.qualities=null,this.sensorSymbolOrientation={source:"platformHeading",symbolOffset:0},this.sensorSymbol=K.clone(),this.sensorSightLineSymbol=Z.clone(),this.sensorTrailSymbol=X.clone(),this.serviceItemId=null,this.sourceJSON=null,this.sourceQuality=null,this.sourceType=null,this.spatialReference=g.WGS84,this.start=0,this.telemetryDisplay=new j,this.type="video",this.url=null,this.version=null,this.videoLayersInfo=null}initialize(){this.addHandles([p.watch(()=>this.metadata,()=>{this.notifyChange("telemetry"),this.notifyChange("groundControlPoints"),this.notifyChange("frameHorizonPoints")}),p.watch(()=>this.telemetry?.sensorLocation,e=>this._setSensorTrail(e),p.initial)]),p.whenOnce(()=>this.loaded&&"can-play"===this.state&&this.duration>0).then(()=>{this.start>=0&&this.start<=this.duration&&this.setCurrentTime(this.start)})}destroy(){this.removeAllHandles(),this.controller&&this.controller.destroy()}load(e){const r=null!=e?e.signal:null,t=this.loadFromPortal({supportedTypes:["Video Service"],supportsData:!1},e).catch(a.throwIfAbortError).then(()=>this._fetchService(r));return this.addResolvingPromise(t),Promise.resolve(this)}get autoplay(){return this.controller?.autoplay??!1}set autoplay(e){this.controller.autoplay=e}get buffered(){return this.controller.buffered}readCapabilitiesFromService(e,r){return U.getVideoLayerCapabilities(r)}readConnectionInfo(e,r){const t=Object.values(r.connectionUrl);return t?.length&&(this.controller.playerUrl=t[0]),r.connectionUrl}get currentTime(){return this.controller.currentTime}get duration(){return this.controller.duration}get ended(){return this.controller.ended}get frameHorizonPoints(){return k.getFrameHorizonPoints(this.metadata)}get groundControlPoints(){return k.getGroundControlPoints(this.metadata)}get isLive(){return this.controller?.isLive??!1}get livestreamStatus(){return this.controller?.livestreamStatus}get loop(){return this.controller.loop}set loop(e){this.controller.loop=e}get metadata(){return this.controller?.currentMetadata}get mimeType(){return this.controller?.mimeType}get muted(){return this.controller.muted}set muted(e){this.controller.muted=e}get parsedUrl(){return P.normalizeParsedUrlObject(this)}get playbackRate(){return this.controller.rate}set playbackRate(e){this.controller.rate=e}get playerUrl(){return this.controller.playerUrl}get playing(){return this.controller.playing}get started(){return this.controller?.started??!1}get state(){return this.controller.state}get telemetry(){return k.getTelemetryData(this.metadata)}readTitleFromService(e,{name:r}){return this.url?L.titleFromUrlAndName(this.url,r):r}get videoElement(){return this.controller?.element}get videoHeight(){return this.controller?.videoHeight}readLayerInfosFromService(e,r){return k.getServiceLayersInfo(r)}get videoTimeExtent(){return o.deprecatedProperty(l.getLogger(this),"videoTimeExtent",{replacement:"fullTimeExtent",version:"4.33",warnOnce:!0}),this.fullTimeExtent}get videoWidth(){return this.controller?.videoWidth}get volume(){return this.controller?.volume??0}set volume(e){this.controller.volume=e}get waiting(){return this.controller.waiting}play(){this.controller.play()}pause(){this.controller.pause()}reset(){q=[],this.controller.reset()}setCurrentTime(e){if(this.duration<0)return;const r=n.clamp(e,0,this.duration);this.controller.setCurrentTime(r)}toGround(e,r){return this.controller?.sensorModel?.metadataSupportsTransforms?this.controller.sensorModel.transformImageToGeo(e,r):null}toVideo(e){if(!this.controller?.sensorModel?.metadataSupportsTransforms)return null;const r=this.controller.sensorModel.transformGeoToImage(e.x,e.y,e.z);return{x:r[0],y:r[1]}}updateTelemetryColor(e){this.frameCenterSymbol=k.getStyledTelemetrySymbol(this.frameCenterSymbol,e)??Q,this.frameOutlineSymbol=k.getStyledTelemetrySymbol(this.frameOutlineSymbol,e,W)??$,this.sensorSightLineSymbol=k.getStyledTelemetrySymbol(this.sensorSightLineSymbol,e)??Z,this.sensorTrailSymbol=k.getStyledTelemetrySymbol(this.sensorTrailSymbol,e)??X,this.sensorSymbol=k.getStyledTelemetrySymbol(this.sensorSymbol,e)??K}write(e,r){return null==this.layerId?(r?.messages?.push(new i("layer:unsupported",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' cannot be saved to a web map, web scene, or portal item. The ArcGIS server version must be greater than 11.2.`)),null):super.write(e,r)}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:r,ssl:o}=await t(this.url,{query:{f:"json",...this.parsedUrl.query,...this.customParameters},signal:e});if(o&&(this.url=this.url.replace(/^http:/i,"https:")),!r?.currentVersion)return r.currentVersion="11.2",this.sourceJSON=r,void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});if(this.layerId??=r.layers?.[0]?.id??null,null==this.layerId)throw new i("arcgis-layers:url-mismatch","The url is not a valid arcgis resource");const{data:l}=await t(this.parsedUrl.path,{query:{f:"json",...this.customParameters},signal:e});this.sourceJSON={...r,...l},this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl})}_setSensorTrail(e){if(!e)return;const r=k.getSensorTrailPoints(e,q);q=[...r];const t=q.map(e=>e.toArray()),o=new v({hasZ:e.hasZ,paths:[t]});this.telemetry.sensorTrail=o.clone()}};return e.__decorate([y.property({type:Boolean,json:{write:{ignoreOrigin:!0}}})],re.prototype,"autoplay",null),e.__decorate([y.property({readOnly:!0})],re.prototype,"buffered",null),e.__decorate([y.property({readOnly:!0})],re.prototype,"cameraInfo",void 0),e.__decorate([y.property({readOnly:!0,json:{read:!1}})],re.prototype,"capabilities",void 0),e.__decorate([m.reader("service","capabilities",["supportsAppend","supportsCoverageQuery","supportsExportClip","supportsExportFrameset","supportsMensuration","supportsPreviews","supportsUpdate"])],re.prototype,"readCapabilitiesFromService",null),e.__decorate([y.property({readOnly:!0})],re.prototype,"codecs",void 0),e.__decorate([y.property({readOnly:!0})],re.prototype,"connectionInfo",void 0),e.__decorate([m.reader("connectionInfo",["connectionUrl"])],re.prototype,"readConnectionInfo",null),e.__decorate([y.property()],re.prototype,"controller",void 0),e.__decorate([y.property({type:String})],re.prototype,"copyright",void 0),e.__decorate([y.property({readOnly:!0,type:Date})],re.prototype,"created",void 0),e.__decorate([y.property({type:Number})],re.prototype,"currentTime",null),e.__decorate([y.property({json:{write:!1}})],re.prototype,"customParameters",void 0),e.__decorate([y.property({type:String})],re.prototype,"description",void 0),e.__decorate([y.property({type:Number})],re.prototype,"duration",null),e.__decorate([y.property({readOnly:!0})],re.prototype,"elevationSource",void 0),e.__decorate([y.property({type:Boolean})],re.prototype,"ended",null),e.__decorate([y.property({type:N})],re.prototype,"frame",void 0),e.__decorate([y.property(ee("drawingInfo.frameCenterSymbol",J))],re.prototype,"frameCenterSymbol",void 0),e.__decorate([y.property({readOnly:!0,type:d.Integer})],re.prototype,"frameCount",void 0),e.__decorate([y.property(b.effectProperty)],re.prototype,"frameEffect",void 0),e.__decorate([y.property(C.opacity)],re.prototype,"frameOpacity",void 0),e.__decorate([y.property(ee("drawingInfo.frameOutlineSymbol",A))],re.prototype,"frameOutlineSymbol",void 0),e.__decorate([y.property({type:_})],re.prototype,"fullExtent",void 0),e.__decorate([y.property({readOnly:!0})],re.prototype,"frameHorizonPoints",null),e.__decorate([y.property({readOnly:!0,json:{read:{reader:k.readVideoTimeExtent,source:"time"}},type:M})],re.prototype,"fullTimeExtent",void 0),e.__decorate([y.property({readOnly:!0})],re.prototype,"groundControlPoints",null),e.__decorate([y.property(C.id)],re.prototype,"id",void 0),e.__decorate([y.property({type:_})],re.prototype,"initialExtent",void 0),e.__decorate([y.property({readOnly:!0})],re.prototype,"isLive",null),e.__decorate([y.property({type:d.Integer,json:{read:!1,origins:{service:{read:{source:"id"}}}}})],re.prototype,"layerId",void 0),e.__decorate([y.property({readOnly:!0})],re.prototype,"livestreamStatus",null),e.__decorate([y.property({type:Boolean})],re.prototype,"loop",null),e.__decorate([y.property({readOnly:!0})],re.prototype,"metadata",null),e.__decorate([y.property({readOnly:!0})],re.prototype,"mimeType",null),e.__decorate([y.property({type:Boolean,json:{write:{ignoreOrigin:!0}}})],re.prototype,"muted",null),e.__decorate([y.property({type:["ArcGISVideoLayer"]})],re.prototype,"operationalLayerType",void 0),e.__decorate([y.property({readOnly:!0})],re.prototype,"parsedUrl",null),e.__decorate([y.property({type:x})],re.prototype,"playbackInfo",void 0),e.__decorate([y.property({type:Number})],re.prototype,"playbackRate",null),e.__decorate([y.property({readOnly:!0,type:String})],re.prototype,"playerUrl",null),e.__decorate([y.property({readOnly:!0})],re.prototype,"playing",null),e.__decorate([y.property({readOnly:!0,json:{read:{source:"poster"}}})],re.prototype,"posterUrl",void 0),e.__decorate([y.property({readOnly:!0})],re.prototype,"qualities",void 0),e.__decorate([y.property()],re.prototype,"sensorSymbolOrientation",void 0),e.__decorate([y.property(Y)],re.prototype,"sensorSymbol",void 0),e.__decorate([y.property(ee("drawingInfo.sensorSightLineSymbol",H))],re.prototype,"sensorSightLineSymbol",void 0),e.__decorate([y.property(ee("drawingInfo.sensorTrailSymbol",H))],re.prototype,"sensorTrailSymbol",void 0),e.__decorate([y.property({readOnly:!0})],re.prototype,"serviceItemId",void 0),e.__decorate([y.property()],re.prototype,"sourceJSON",void 0),e.__decorate([y.property({readOnly:!0})],re.prototype,"sourceQuality",void 0),e.__decorate([y.property({readOnly:!0,json:{name:"serviceType"}})],re.prototype,"sourceType",void 0),e.__decorate([y.property()],re.prototype,"spatialReference",void 0),e.__decorate([y.property({json:{write:!0}})],re.prototype,"start",void 0),e.__decorate([y.property({readOnly:!0})],re.prototype,"started",null),e.__decorate([y.property({readOnly:!0,type:String})],re.prototype,"state",null),e.__decorate([y.property({readOnly:!0,type:E})],re.prototype,"telemetry",null),e.__decorate([y.property({type:j,nonNullable:!0,json:{write:{ignoreOrigin:!0}}})],re.prototype,"telemetryDisplay",void 0),e.__decorate([m.reader("service","title",["name"])],re.prototype,"readTitleFromService",null),e.__decorate([y.property({readOnly:!0})],re.prototype,"type",void 0),e.__decorate([y.property(P.urlProperty())],re.prototype,"url",void 0),e.__decorate([y.property({readOnly:!0,type:Number,json:{read:{source:"currentVersion"}}})],re.prototype,"version",void 0),e.__decorate([y.property({readOnly:!0})],re.prototype,"videoElement",null),e.__decorate([y.property({readOnly:!0})],re.prototype,"videoHeight",null),e.__decorate([y.property({readOnly:!0,json:{read:!1}})],re.prototype,"videoLayersInfo",void 0),e.__decorate([m.reader("service","videoLayersInfo",["id","name","poster","serviceType","type"])],re.prototype,"readLayerInfosFromService",null),e.__decorate([y.property({type:M,readOnly:!0})],re.prototype,"videoTimeExtent",null),e.__decorate([y.property({readOnly:!0})],re.prototype,"videoWidth",null),e.__decorate([y.property()],re.prototype,"volume",null),e.__decorate([y.property({readOnly:!0})],re.prototype,"waiting",null),re=e.__decorate([h.subclass("esri.layers.VideoLayer")],re),re});