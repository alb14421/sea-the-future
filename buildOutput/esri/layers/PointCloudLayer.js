// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../chunks/tslib.es6","../PopupTemplate","../request","../core/Clonable","../core/Error","../core/lang","../core/Logger","../core/MultiOriginJSONSupport","../core/object","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/has","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","./Layer","./mixins/APIKeyMixin","./mixins/ArcGISService","./mixins/CustomParametersMixin","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./mixins/SceneService","./pointCloudFilters/typeUtils","./support/commonProperties","./support/Field","./support/fieldProperties","../popup/ExpressionInfo","../renderers/support/pointCloud/typeUtils","../support/elevationInfoUtils","../support/popupUtils"],function(e,r,t,o,i,n,s,a,p,l,d,u,c,y,f,h,g,m,v,_,I,w,b,S,x,P,T,F,L,C,E,j){"use strict";const N=F.defineFieldProperties();let O=class extends(S.SceneService(v.ArcGISService(I.OperationalLayer(w.PortalLayer(b.ScaleRangeLayer(a.MultiOriginJSONMixin(_.CustomParametersMixin(m.APIKeyMixin(o.ClonableMixin(g)))))))))){constructor(...e){super(...e),this.operationalLayerType="PointCloudLayer",this.popupEnabled=!0,this.popupTemplate=null,this.opacity=1,this.filters=[],this.fields=null,this.fieldsIndex=null,this.outFields=null,this.path=null,this.legendEnabled=!0,this.renderer=null,this.type="point-cloud"}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}get defaultPopupTemplate(){return this.attributeStorageInfo?this.createPopupTemplate():null}getFieldDomain(e){const r=this.fieldsIndex.get(e);return r?.domain?r.domain:null}readServiceFields(e,r,t){return Array.isArray(e)?e.map(e=>{const r=new T;return"FieldTypeInteger"===e.type&&((e=n.clone(e)).type="esriFieldTypeInteger"),r.read(e,t),r}):Array.isArray(r.attributeStorageInfo)?r.attributeStorageInfo.map(e=>new T({name:e.name,type:"ELEVATION"===e.name?"double":"integer"})):null}set elevationInfo(e){null!=e&&"absolute-height"!==e.mode||this._set("elevationInfo",e),this._validateElevationInfo(e)}writeRenderer(e,r,t,o){p.setDeepValue("layerDefinition.drawingInfo.renderer",e.write({},o),r)}load(e){const r=null!=e?e.signal:null,t=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(l.throwIfAbortError).then(()=>this._fetchService(r));return this.addResolvingPromise(t),Promise.resolve(this)}createPopupTemplate(e){const r=j.createPopupTemplate(this,e);return r&&(this._formatPopupTemplateReturnsField(r),this._formatPopupTemplateRGBField(r)),r}_formatPopupTemplateReturnsField(e){const r=this.fieldsIndex.get("RETURNS");if(!r)return;const t=e.fieldInfos?.find(e=>e.fieldName===r.name);if(!t)return;const o=new L({name:"pcl-returns-decoded",title:r.alias||r.name,expression:`\n        var returnValue = $feature.${r.name};\n        return (returnValue % 16) + " / " + Floor(returnValue / 16);\n      `});e.expressionInfos=[...e.expressionInfos||[],o],t.fieldName="expression/pcl-returns-decoded"}_formatPopupTemplateRGBField(e){const r=this.fieldsIndex.get("RGB");if(!r)return;const t=e.fieldInfos?.find(e=>e.fieldName===r.name);if(!t)return;const o=new L({name:"pcl-rgb-decoded",title:r.alias||r.name,expression:`\n        var rgb = $feature.${r.name};\n        var red = Floor(rgb / 65536, 0);\n        var green = Floor((rgb - (red * 65536)) / 256,0);\n        var blue = rgb - (red * 65536) - (green * 256);\n\n        return "rgb(" + red + "," + green + "," + blue + ")";\n      `});e.expressionInfos=[...e.expressionInfos||[],o],t.fieldName="expression/pcl-rgb-decoded"}async queryCachedStatistics(e,r){if(await this.load(r),!this.attributeStorageInfo)throw new i("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const o=this.fieldsIndex.get(e);if(!o)throw new i("pointcloudlayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.attributeStorageInfo)if(e.name===o.name){const o=d.join(this.parsedUrl?.path??"",`./statistics/${e.key}`);return t(o,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r?r.signal:null}).then(e=>e.data)}throw new i("pointcloudlayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,r){return this._debouncedSaveOperations(1,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"};return this._debouncedSaveOperations(0,e)}validateLayer(e){if(e.layerType&&"PointCloud"!==e.layerType)throw new i("pointcloudlayer:layer-type-not-supported","PointCloudLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new i("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});if(this.version.major>2)throw new i("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"})}hasCachedStatistics(e){return null!=this.attributeStorageInfo&&this.attributeStorageInfo.some(r=>r.name===e)}_getTypeKeywords(){return["PointCloud"]}_validateElevationInfo(e){E.logInvalidElevationInfoWarning(s.getLogger(this),E.elevationModeRequiredMessage("Point cloud layers","absolute-height",e)),E.logInvalidElevationInfoWarning(s.getLogger(this),E.featureExpressionUnsupportedMessage("Point cloud layers",e))}};return e.__decorate([u.property({type:["PointCloudLayer"]})],O.prototype,"operationalLayerType",void 0),e.__decorate([u.property(P.popupEnabled)],O.prototype,"popupEnabled",void 0),e.__decorate([u.property({type:r,json:{name:"popupInfo",write:!0}})],O.prototype,"popupTemplate",void 0),e.__decorate([u.property({readOnly:!0,json:{read:!1}})],O.prototype,"defaultPopupTemplate",null),e.__decorate([u.property({readOnly:!0,json:{write:!1,read:!1,origins:{"web-document":{write:!1,read:!1}}}})],O.prototype,"opacity",void 0),e.__decorate([u.property({type:["show","hide"]})],O.prototype,"listMode",void 0),e.__decorate([u.property({types:[x.types],json:{origins:{service:{read:{source:"filters"}}},name:"layerDefinition.filters",write:!0}})],O.prototype,"filters",void 0),e.__decorate([u.property({type:[T]})],O.prototype,"fields",void 0),e.__decorate([u.property(N.fieldsIndex)],O.prototype,"fieldsIndex",void 0),e.__decorate([y.reader("service","fields",["fields","attributeStorageInfo"])],O.prototype,"readServiceFields",null),e.__decorate([u.property(N.outFields)],O.prototype,"outFields",void 0),e.__decorate([u.property({readOnly:!0})],O.prototype,"attributeStorageInfo",void 0),e.__decorate([u.property(P.elevationInfo)],O.prototype,"elevationInfo",null),e.__decorate([u.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],O.prototype,"path",void 0),e.__decorate([u.property(P.legendEnabled)],O.prototype,"legendEnabled",void 0),e.__decorate([u.property({types:C.types,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:{target:{"layerDefinition.drawingInfo.renderer":{types:C.types},"layerDefinition.drawingInfo.transparency":{type:Number}}}}})],O.prototype,"renderer",void 0),e.__decorate([h.writer("renderer")],O.prototype,"writeRenderer",null),e.__decorate([u.property({json:{read:!1},readOnly:!0})],O.prototype,"type",void 0),O=e.__decorate([f.subclass("esri.layers.PointCloudLayer")],O),O});