// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","../chunks/tslib.es6","../PopupTemplate","../request","../core/Clonable","../core/Error","../core/handleUtils","../core/lang","../core/Logger","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../geometry/Extent","../geometry/SpatialReference","../geometry/support/typeUtils","../graphic/StreamGraphicOrigin","./Layer","./mixins/ArcGISService","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/DisplayFilteredLayer","./mixins/FeatureEffectLayer","./mixins/FeatureReductionLayer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./mixins/TemporalLayer","./mixins/TrackableLayer","./support/commonProperties","./support/featureLayerUtils","./support/Field","./support/fieldProperties","./support/fieldUtils","./support/LabelClass","./support/labelingInfo","./support/PurgeOptions","./support/streamLayerUtils","../renderers/support/jsonUtils","../renderers/support/styleUtils","../renderers/support/typeUtils","../rest/support/Query","../support/popupUtils","../symbols/support/ElevationInfo"],function(e,t,r,i,o,s,n,a,p,l,d,c,y,u,m,h,f,g,b,_,v,w,S,I,x,T,R,F,L,P,j,O,U,E,D,k,A,C,G,M,N,J,V,z,q,$,K){"use strict";const W=k.defineFieldProperties();function B(e,t){return new s("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}let Q=class extends(I.DisplayFilteredLayer(T.FeatureReductionLayer(x.FeatureEffectLayer(w.BlendLayer(j.TemporalLayer(O.TrackableLayer(P.ScaleRangeLayer(L.RefreshableLayer(v.ArcGISService(R.OperationalLayer(F.PortalLayer(l.MultiOriginJSONMixin(S.CustomParametersMixin(o.ClonableMixin(_))))))))))))))){constructor(...t){super(...t),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.graphicOrigin=new b(this),this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.outFields=["*"],this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new M,this.refreshInterval=0,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=f.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.useViewTime=!0,this.webSocketUrl=null,this._debouncedSaveOperations=d.debounce(async(t,r,i)=>{const{save:o,saveAs:s}=await new Promise((t,r)=>e(["./save/streamLayerUtils"],t,r));switch(t){case 0:return o(this,r);case 1:return s(this,i,r)}})}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new s("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(d.throwIfAbortError).then(()=>this._fetchService(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set featureReduction(e){const t=this._normalizeFeatureReduction(e);this._set("featureReduction",t)}set renderer(e){A.fixRendererFields(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,r){t=t.layerDefinition||t;const i=t.drawingInfo?.renderer;if(i){const e=J.read(i,t,r)||void 0;return e||p.getLogger(this).error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:r}),e}return E.createDefaultRenderer(t,r)}async connect(t){const[{createConnection:r}]=await Promise.all([new Promise((t,r)=>e(["./graphics/sources/connections/createConnection"],t,r)),this.load()]),i=this.geometryType?g.featureGeometryTypeKebabDictionary.toJSON(this.geometryType):null,{customParameters:o=null,definitionExpression:s=null,geometryDefinition:a=null,maxReconnectionAttempts:p=0,maxReconnectionInterval:l=20,spatialReference:d=this.spatialReference}=t||this.createConnectionParameters(),c=r(this.parsedUrl,this.spatialReference,d,i,s,a,p,l,o??void 0),y=n.handlesGroup([this.on("send-message-to-socket",e=>c.sendMessageToSocket(e)),this.on("send-message-to-client",e=>c.sendMessageToClient(e))]);return c.once("destroy",y.remove),c}createConnectionParameters(){return{spatialReference:this.spatialReference,customParameters:this.customParameters,definitionExpression:this.definitionExpression,geometryDefinition:this.geometryDefinition,maxReconnectionAttempts:this.maxReconnectionAttempts,maxReconnectionInterval:this.maxReconnectionInterval}}createPopupTemplate(e){return $.createPopupTemplate(this,e)}createQuery(){const e=new q;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,t){if(!this.fields)return null;let r=null;return this.fields.some(t=>(t.name===e&&(r=t.domain),!!r)),r}getField(e){return this.fieldsIndex.get(e)}serviceSupportsSpatialReference(e){return!0}sendMessageToSocket(e){this.emit("send-message-to-socket",e)}sendMessageToClient(e){this.emit("send-message-to-client",e)}async save(e){return this._debouncedSaveOperations(0,e)}async saveAs(e,t){return this._debouncedSaveOperations(1,t,e)}write(e,t){const r=t?.messages;return this.webSocketUrl?(r?.push(B(this,"using a custom websocket connection cannot be written to web scenes and web maps")),null):this.parsedUrl?super.write(e,t):(r?.push(B(this,"using a client-side only connection without a url cannot be written to web scenes and web maps")),null)}async _fetchService(e){if(!this.webSocketUrl&&this.parsedUrl){if(!this.sourceJSON){const{data:t}=await i(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=t}}else{if(!this.timeInfo?.trackIdField)throw new s("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField){const e=this.fields.find(e=>"oid"===e.type)?.name;if(!e)throw new s("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");this.objectIdField=e}if(!this.fields)throw new s("stream-layer:missing-metadata","The stream layer fields must be specified.");if(this.fields.some(e=>e.name===this.objectIdField)||this.fields.push(new D({name:this.objectIdField,alias:this.objectIdField,type:"oid"})),!this.geometryType)throw new s("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.webSocketUrl&&(this.url=this.webSocketUrl)}return this.read(this.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}),A.fixRendererFields(this.renderer,this.fieldsIndex),A.fixTimeInfoFields(this.timeInfo,this.fieldsIndex),this.objectIdField||(this.objectIdField=N.defaultStreamIdField),V.loadStyleRenderer(this,{origin:"service"})}};return t.__decorate([c.property({type:String})],Q.prototype,"copyright",void 0),t.__decorate([c.property({readOnly:!0})],Q.prototype,"defaultPopupTemplate",null),t.__decorate([c.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],Q.prototype,"definitionExpression",void 0),t.__decorate([c.property({type:String})],Q.prototype,"displayField",void 0),t.__decorate([c.property({type:K})],Q.prototype,"elevationInfo",void 0),t.__decorate([c.property({json:{origins:{"web-map":{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],Q.prototype,"featureReduction",null),t.__decorate([c.property(W.fields)],Q.prototype,"fields",void 0),t.__decorate([c.property(W.fieldsIndex)],Q.prototype,"fieldsIndex",void 0),t.__decorate([c.property({type:h,json:{name:"layerDefinition.definitionGeometry",write:!0}})],Q.prototype,"geometryDefinition",void 0),t.__decorate([c.property({type:g.featureGeometryTypeKebabDictionary.apiValues,json:{read:{reader:g.featureGeometryTypeKebabDictionary.read}}})],Q.prototype,"geometryType",void 0),t.__decorate([c.property({readOnly:!0,clonable:!1})],Q.prototype,"graphicOrigin",void 0),t.__decorate([c.property(U.labelsVisible)],Q.prototype,"labelsVisible",void 0),t.__decorate([c.property({type:[C],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:G.reader},write:!0}})],Q.prototype,"labelingInfo",void 0),t.__decorate([c.property(U.legendEnabled)],Q.prototype,"legendEnabled",void 0),t.__decorate([c.property({type:["show","hide"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],Q.prototype,"listMode",void 0),t.__decorate([c.property({type:y.Integer})],Q.prototype,"maxReconnectionAttempts",void 0),t.__decorate([c.property({type:y.Integer})],Q.prototype,"maxReconnectionInterval",void 0),t.__decorate([c.property(U.maxScale)],Q.prototype,"maxScale",void 0),t.__decorate([c.property(U.minScale)],Q.prototype,"minScale",void 0),t.__decorate([c.property({type:String})],Q.prototype,"objectIdField",void 0),t.__decorate([c.property({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],Q.prototype,"operationalLayerType",void 0),t.__decorate([c.property({readOnly:!0})],Q.prototype,"outFields",void 0),t.__decorate([c.property(U.popupEnabled)],Q.prototype,"popupEnabled",void 0),t.__decorate([c.property({type:r,json:{name:"popupInfo",write:!0}})],Q.prototype,"popupTemplate",void 0),t.__decorate([c.property({type:M})],Q.prototype,"purgeOptions",void 0),t.__decorate([c.property({json:{read:!1,write:!1}})],Q.prototype,"refreshInterval",void 0),t.__decorate([c.property({types:z.rendererTypes,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:z.webSceneRendererTypes,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],Q.prototype,"renderer",null),t.__decorate([u.reader("service","renderer",["drawingInfo.renderer","defaultSymbol"]),u.reader("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],Q.prototype,"readRenderer",null),t.__decorate([c.property((()=>{const e=a.clone(U.screenSizePerspectiveEnabled);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],Q.prototype,"screenSizePerspectiveEnabled",void 0),t.__decorate([c.property()],Q.prototype,"sourceJSON",void 0),t.__decorate([c.property({type:f,json:{origins:{service:{read:{source:"spatialReference"}}}}})],Q.prototype,"spatialReference",void 0),t.__decorate([c.property({json:{read:!1}})],Q.prototype,"type",void 0),t.__decorate([c.property(U.url)],Q.prototype,"url",void 0),t.__decorate([c.property({type:Number})],Q.prototype,"updateInterval",void 0),t.__decorate([c.property({json:{read:!1,write:!1}})],Q.prototype,"useViewTime",void 0),t.__decorate([c.property({type:String})],Q.prototype,"webSocketUrl",void 0),Q=t.__decorate([m.subclass("esri.layers.StreamLayer")],Q),Q});