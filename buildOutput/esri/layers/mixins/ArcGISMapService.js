// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../request","../../core/MapUtils","../../core/promiseUtils","../../core/urlUtils","../../core/Version","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../geometry/Extent","../../geometry/SpatialReference","../support/arcgisLayerUrl","../support/commonProperties","../../portal/support/portalItemUtils"],function(e,r,t,s,o,a,i,p,l,n,c,u,d,y,h,m,b,f){"use strict";e.ArcGISMapService=e=>{const l=e;let n=class extends l{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(e,r){const t=r.capabilities&&r.capabilities.split(",").map(e=>e.toLowerCase().trim());if(!t)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const s=this.type,o="tile"!==s&&!!r.supportsDynamicLayers,a=t.includes("query"),p=t.includes("map"),l=!!r.exportTilesAllowed,n=t.includes("tilemap"),c=t.includes("data"),u="tile"!==s&&(!r.tileInfo||o),d="tile"!==s&&(!r.tileInfo||o),y="tile"!==s,h="tile"!==s&&o&&r.currentVersion>=11.1,m=r.cimVersion?i.Version.parse(r.cimVersion):null,b=m?.greaterEqual(1,4)??!1,f=m?.greaterEqual(2,0)??!1;return{operations:{supportsExportMap:p,supportsExportTiles:l,supportsIdentify:a,supportsQuery:c,supportsTileMap:n},exportMap:p?{supportsArcadeExpressionForLabeling:b,supportsCIMSymbols:f,supportsDynamicLayers:o,supportsSublayerOrderBy:h,supportsSublayerDefinitionExpression:d,supportsSublayerVisibility:u,supportsSublayersChanges:y}:null,exportTiles:l?{maxExportTilesCount:+r.maxExportTilesCount}:null}}readVersion(e,r){let t=r.currentVersion;return t||(t=r.hasOwnProperty("capabilities")||r.hasOwnProperty("tables")?10:r.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),t}async fetchRelatedService(e){const r=this.portalItem;if(!r||!f.isHostedLayer(r))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=r.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},e).then(e=>e.find(e=>"Feature Service"===e.type)??null,()=>null));const t=await this._relatedFeatureServicePromise;return o.throwIfAborted(e),t?{itemId:t.id,url:t.url}:null}async fetchSublayerInfo(e,r){const{source:s}=e;if(this?.portalItem&&"tile"===this.type&&"map-layer"===s?.type&&f.isHostedLayer(this.portalItem)&&e.originIdOf("url")<2){const t=await this.fetchRelatedService(r);t&&(e.url=a.join(t.url,s.mapLayerId.toString()),e.layerItemId=t.itemId)}const{url:o}=e;let i;if("data-layer"===s.type)i=(await t(o,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...r})).data;else if(o&&e.originIdOf("url")>2)try{const e=await this._fetchAllLayersAndTablesFromService(o),r=m.parse(o)?.sublayer??s.mapLayerId;i=e.get(r)}catch{}else{let t=e.id;"map-layer"===s?.type&&(t=s.mapLayerId);try{i=(await this.fetchAllLayersAndTables(r)).get(t)}catch{}}return i}async fetchAllLayersAndTables(e){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,e)}async _fetchAllLayersAndTablesFromService(e,r){await this.load(r),this._allLayersAndTablesMap||=new Map;const i=m.parse(e),p=s.getOrCreateMapValue(this._allLayersAndTablesMap,i?.url.path,()=>t(a.join(i?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(e=>{const r=new Map,{layers:t,tables:s}=e.data,o=[...t??[],...s??[]];for(const e of o)r.set(e.id,e);return{result:r}},e=>({error:e}))),l=await p;if(o.throwIfAborted(r),"result"in l)return l.result;throw l.error}};return r.__decorate([p.property({readOnly:!0})],n.prototype,"capabilities",void 0),r.__decorate([u.reader("service","capabilities",["capabilities","cimVersion","currentVersion","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],n.prototype,"readCapabilities",null),r.__decorate([p.property({json:{read:{source:"copyrightText"}}})],n.prototype,"copyright",void 0),r.__decorate([p.property({type:y})],n.prototype,"fullExtent",void 0),r.__decorate([p.property(b.id)],n.prototype,"id",void 0),r.__decorate([p.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],n.prototype,"legendEnabled",void 0),r.__decorate([p.property(b.popupEnabled)],n.prototype,"popupEnabled",void 0),r.__decorate([p.property({type:h})],n.prototype,"spatialReference",void 0),r.__decorate([p.property({readOnly:!0})],n.prototype,"version",void 0),r.__decorate([u.reader("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],n.prototype,"readVersion",null),n=r.__decorate([d.subclass("esri.layers.mixins.ArcGISMapService")],n),n},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});