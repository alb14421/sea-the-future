// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/JSONSupport","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../support/fieldUtils","../support/sceneLayerCacheUtils","../support/TimeInfo","../../chunks/TimeExtent","../../chunks/TimeInterval"],function(e,t,r,n,i,s,o,a,l,c,d,p,m){"use strict";let u=class extends r.JSONSupport{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};t.__decorate([n.property({type:String})],u.prototype,"endTimeField",void 0),t.__decorate([n.property({type:String})],u.prototype,"startTimeField",void 0),u=t.__decorate([a.subclass("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],u),e.TemporalSceneLayer=e=>{const r=e;let i=class extends r{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){const e=this.associatedLayer?.timeInfo;if(null==e)return null;const t=e.clone();return l.fixTimeInfoFields(t,this.fieldsIndex),t}set timeInfo(e){l.fixTimeInfoFields(e,this.fieldsIndex),this._override("timeInfo",e)}get timeExtent(){return this.associatedLayer?.timeExtent}set timeExtent(e){this._override("timeExtent",e)}get timeOffset(){return this.associatedLayer?.timeOffset}set timeOffset(e){this._override("timeOffset",e)}get datesInUnknownTimezone(){return this.associatedLayer?.datesInUnknownTimezone??!1}set datesInUnknownTimezone(e){this._override("datesInUnknownTimezone",e)}async loadTimeInfoFromService(e){const{serviceTimeInfo:t}=this;if(null==t)return;const{startTimeField:r,endTimeField:n}=t;if(null==r&&null==n)return;if(c.cacheIsOutOfSync({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const i=async t=>{let n=null;try{const r=await(this.fetchStatistics?.(t,e));n=r?.stats}catch{}if(null==n)return null;const{minTimeStr:i,min:s,maxTimeStr:o,max:a}=n,l=t===r?i??s:o??a;return null!=l?new Date(l):null},[s,o]=await Promise.all([i(r),i(n)]);if(null!=r&&null==s||null!=n&&null==o)return;const a=new p.TimeExtent({start:s,end:o});this.setAtOrigin("timeInfo",new d({endField:n,startField:r,fullTimeExtent:a}),"service")}};return t.__decorate([n.property({type:d,json:{read:!1,write:!1}})],i.prototype,"timeInfo",null),t.__decorate([n.property({type:p.TimeExtent,json:{read:!1,write:!1}})],i.prototype,"timeExtent",null),t.__decorate([n.property({type:m.TimeInterval,json:{read:!1,write:!1}})],i.prototype,"timeOffset",null),t.__decorate([n.property({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],i.prototype,"datesInUnknownTimezone",null),t.__decorate([n.property({type:u,readOnly:!0,json:{read:{source:"timeInfo"}},clonable:!1})],i.prototype,"serviceTimeInfo",void 0),i=t.__decorate([a.subclass("esri.layers.mixins.TemporalSceneLayer")],i),i},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});