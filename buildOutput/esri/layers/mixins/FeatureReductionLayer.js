// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../support/AggregateField","../support/featureReductionUtils","../../renderers/SimpleRenderer","../../renderers/visualVariables/SizeVariable","../../renderers/visualVariables/support/SizeStop","../../views/2d/layers/support/clusterUtils"],function(e,r,t,s,i,a,u,n,l,o,c,d,f,p){"use strict";e.FeatureReductionLayer=e=>{const i=e;let a=class extends i{constructor(...e){super(...e),this.addHandles(t.watch(()=>this.renderer,()=>{if(this.featureReduction){const e=this._normalizeFeatureReduction(this.featureReduction);this._set("featureReduction",e)}},t.sync))}set featureReduction(e){const r=this._normalizeFeatureReduction(e);this._set("featureReduction",r)}set renderer(e){}_withClusterVariable(e,r,t){const s=e.clone();return"visualVariables"in s&&(s.visualVariables||(s.visualVariables=[]),s.visualVariables.some(e=>"size"===e.type)||s.visualVariables.push(new d({field:"cluster_count",stops:[new f({value:1}),new f({useMinValue:!0,size:r}),new f({useMaxValue:!0,size:t})]}))),s}_normalizeFeatureReduction(e){if("cluster"!==e?.type)return e;const r=e.clone(),t=[new l({name:"cluster_count",alias:"cluster_count",isAutoGenerated:!0,statisticType:"count"})],s=(r.fields??[]).filter(e=>!e.isAutoGenerated),i=e.renderer&&!e.renderer.authoringInfo?.isAutoGenerated,{clusterMinSize:a,clusterMaxSize:u}=r;if(i){r.fields=[...t,...s];const e=this._withClusterVariable(r.renderer,a,u);return r.effectiveFeatureRenderer=e,r.effectiveClusterRenderer=e,r}if(e.symbol){if(r.fields=[...t,...s],r.renderer=null,!this.renderer)return r.effectiveFeatureRenderer=null,r.effectiveClusterRenderer=null,r;const i=p.createInferredClusterRenderer(t,this.renderer),n=this._withClusterVariable(i,a,u),l="visualVariables"in n&&n.visualVariables?n.visualVariables:[],o=new c({symbol:e.symbol,visualVariables:l});return r.fields=[...t,...s],r.effectiveFeatureRenderer=n,r.effectiveClusterRenderer=o,r}if(!this.renderer)return e;const n=p.createInferredClusterRenderer(t,this.renderer);r.fields=[...t,...s],r.renderer=n;const o=this._withClusterVariable(n,a,u);return r.effectiveFeatureRenderer=o,r.effectiveClusterRenderer=o,r}};return r.__decorate([s.property(o.featureReductionProperty)],a.prototype,"featureReduction",null),a=r.__decorate([n.subclass("esri.layers.mixins.FeatureReductionLayer")],a),a},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});