// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../chunks/tslib.es6","../config","../request","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/RandomLCG","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../geometry/Extent","../geometry/support/spatialReferenceUtils","./Layer","./mixins/BlendLayer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./support/commonProperties","../symbols/PictureMarkerSymbol","../symbols/SimpleFillSymbol","../symbols/SimpleLineSymbol","../symbols/SimpleMarkerSymbol","../symbols/Symbol"],function(e,r,t,o,i,s,l,a,n,p,y,c,d,u,m,h,S,g,_,b,f,v,L,x,C,R){"use strict";const G=["atom","xml"],P={base:R,key:"type",typeMap:{"simple-line":x},errorContext:"symbol"},k={base:R,key:"type",typeMap:{"picture-marker":v,"simple-marker":C},errorContext:"symbol"},M={base:R,key:"type",typeMap:{"simple-fill":L},errorContext:"symbol"};let w=class extends(h.BlendLayer(_.RefreshableLayer(S.OperationalLayer(g.PortalLayer(b.ScaleRangeLayer(o.MultiOriginJSONMixin(m))))))){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}readFeatureCollections(e,r){return r.featureCollection.layers.forEach(e=>{const r=e.layerDefinition.drawingInfo.renderer.symbol;r&&"esriSFS"===r.type&&r.outline?.style.includes("esriSFS")&&(r.outline.style="esriSLSSolid")}),r.featureCollection.layers}get hasPoints(){return this._hasGeometry("esriGeometryPoint")}get hasPolylines(){return this._hasGeometry("esriGeometryPolyline")}get hasPolygons(){return this._hasGeometry("esriGeometryPolygon")}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?s.getFilename(this.url,G)||"GeoRSS":e}set title(e){this._set("title",e)}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(i.throwIfAbortError).then(()=>this._fetchService(r)).then(e=>{this.read(e,{origin:"service"})})),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:"service",ignoreDefaults:!0}),!0}async _fetchService(e){const o=this.spatialReference,{data:i}=await t(r.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:u.isWGS84(o)?void 0:o.wkid??JSON.stringify(o)},signal:e});return i}_hasGeometry(e){return this.featureCollections?.some(r=>r.featureSet?.geometryType===e&&r.featureSet.features?.length>0)??!1}};return e.__decorate([l.property()],w.prototype,"description",void 0),e.__decorate([l.property()],w.prototype,"featureCollections",void 0),e.__decorate([y.reader("service","featureCollections",["featureCollection.layers"])],w.prototype,"readFeatureCollections",null),e.__decorate([l.property({type:d,json:{name:"lookAtExtent"}})],w.prototype,"fullExtent",void 0),e.__decorate([l.property(f.id)],w.prototype,"id",void 0),e.__decorate([l.property(f.legendEnabled)],w.prototype,"legendEnabled",void 0),e.__decorate([l.property({types:P,json:{write:!0}})],w.prototype,"lineSymbol",void 0),e.__decorate([l.property({type:["show","hide"]})],w.prototype,"listMode",void 0),e.__decorate([l.property({types:k,json:{write:!0}})],w.prototype,"pointSymbol",void 0),e.__decorate([l.property({types:M,json:{write:!0}})],w.prototype,"polygonSymbol",void 0),e.__decorate([l.property({type:["GeoRSS"]})],w.prototype,"operationalLayerType",void 0),e.__decorate([l.property(f.url)],w.prototype,"url",void 0),e.__decorate([l.property({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],w.prototype,"title",null),e.__decorate([l.property({readOnly:!0,json:{read:!1},value:"geo-rss"})],w.prototype,"type",void 0),w=e.__decorate([c.subclass("esri.layers.GeoRSSLayer")],w),w});