// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
require({cache:{"esri/layers/mixins/ArcGISCachedService":function(){define(["exports","../../chunks/tslib.es6","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../geometry/SpatialReference","../support/TileInfo","../support/TileInfoTilemapCache","../support/TilemapCache"],function(e,t,r,i,o,a,s,l,n,p,c,u){"use strict";e.ArcGISCachedService=e=>{const i=e;let o=class extends i{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}destroy(){this.tilemapCache?.destroy?.()}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t,r){const i=t.capabilities?.includes("Tilemap");let{minLOD:o,maxLOD:a,minScale:s,maxScale:l}=t;if(null==o&&null==a&&(0!==s||0!==l)){const e=e=>Math.round(1e4*e)/1e4;s=e(s||t.tileInfo.lods[0].scale),l=e(l||t.tileInfo.lods[t.tileInfo.lods.length-1].scale);for(const r of t.tileInfo.lods){const t=e(r.scale);o=t>=s?r.level:o,a=t>=l?r.level:a}}if(i)return new u.TilemapCache({layer:this,minLOD:o,maxLOD:a});if(t.tileInfo){const e=new p;return e.read(t.tileInfo,r),new c(e,o,a)}return null}};return t.__decorate([r.property({json:{read:{source:"copyrightText"}}})],o.prototype,"copyright",void 0),t.__decorate([r.property()],o.prototype,"minScale",void 0),t.__decorate([s.reader("service","minScale")],o.prototype,"readMinScale",null),t.__decorate([r.property()],o.prototype,"maxScale",void 0),t.__decorate([s.reader("service","maxScale")],o.prototype,"readMaxScale",null),t.__decorate([r.property({type:n})],o.prototype,"spatialReference",void 0),t.__decorate([r.property({readOnly:!0})],o.prototype,"supportsBlankTile",null),t.__decorate([r.property({type:p})],o.prototype,"tileInfo",void 0),t.__decorate([r.property()],o.prototype,"tilemapCache",void 0),t.__decorate([s.reader("service","tilemapCache",["capabilities","tileInfo"])],o.prototype,"readTilemapCache",null),t.__decorate([r.property()],o.prototype,"version",void 0),o=t.__decorate([l.subclass("esri.layers.mixins.ArcGISCachedService")],o),o},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/TileInfo":function(){define(["exports","../../chunks/tslib.es6","../../core/jsonMap","../../core/JSONSupport","../../core/unitUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../geometry/Point","../../geometry/SpatialReference","../../geometry/support/aaBoundingRect","../../geometry/support/spatialReferenceUtils","../../geometry/support/webMercatorUtils","./LOD","./TileKey"],function(e,t,r,i,o,a,s,l,n,p,c,u,d,y,h,f,m,b,g){"use strict";var v;const _=new r.JSONMap({PNG:"png",PNG8:"png8",PNG24:"png24",PNG32:"png32",JPEG:"jpg",JPG:"jpg",DIB:"dib",TIFF:"tiff",EMF:"emf",PS:"ps",PDF:"pdf",GIF:"gif",SVG:"svg",SVGZ:"svgz",Mixed:"mixed",MIXED:"mixed",LERC:"lerc",LERC2D:"lerc2d",RAW:"raw",pbf:"pbf"});return e.default=class extends i.JSONSupport{static{v=this}static create(e={}){const{resolutionFactor:t=1,scales:r,size:i=256,spatialReference:a=y.WebMercator,numLODs:s=24}=e;if(!f.isValid(a)){const e=[];if(r)for(let t=0;t<r.length;t++){const i=r[t];e.push(new b({level:t,scale:i,resolution:i}))}else{let t=5e-4;for(let r=s-1;r>=0;r--)e.unshift(new b({level:r,scale:t,resolution:t})),t*=2}return new v({dpi:96,lods:e,origin:new d(0,0,a),size:[i,i],spatialReference:a})}const l=f.getInfo(a),n=e.origin?new d({x:e.origin.x,y:e.origin.y,spatialReference:a}):new d(l?{x:l.origin[0],y:l.origin[1],spatialReference:a}:{x:0,y:0,spatialReference:a}),p=1/(39.37*o.getMetersPerUnitForSR(a)*96),c=[];if(r)for(let e=0;e<r.length;e++){const t=r[e],i=t*p;c.push(new b({level:e,scale:t,resolution:i}))}else{let e=f.isGeographic(a)?512/i*591657527.5917094:256/i*591657527.591555;const r=Math.ceil(s/t);c.push(new b({level:0,scale:e,resolution:e*p}));for(let i=1;i<r;i++){const r=e/2**t,o=r*p;c.push(new b({level:i,scale:r,resolution:o})),e=r}}return new v({dpi:96,lods:c,origin:n,size:[i,i],spatialReference:a})}constructor(e){super(e),this.dpi=96,this.format=null,this.origin=null,this.size=null,this.spatialReference=null}get isWrappable(){const{spatialReference:e,origin:t}=this;if(e&&t){const r=f.getInfo(e);return e.isWrappable&&!!r&&Math.abs(r.origin[0]-t.x)<=r.dx}return!1}readOrigin(e,t){return d.fromJSON({spatialReference:t.spatialReference,...e})}set lods(e){let t=0,r=0;const i=[],o=this._levelToLOD={};e&&(t=-1/0,r=1/0,e.forEach(e=>{i.push(e.scale),t=e.scale>t?e.scale:t,r=e.scale<r?e.scale:r,o[e.level]=e})),this._set("scales",i),this._set("lods",e),this._initializeUpsampleLevels()}readSize(e,t){return[t.cols,t.rows]}writeSize(e,t){t.cols=e[0],t.rows=e[1]}zoomToScale(e){const t=this.scales;if(e<=0)return t[0];if(e>=t.length-1)return t[t.length-1];const r=Math.floor(e),i=r+1;return t[r]/(t[r]/t[i])**(e-r)}scaleToZoom(e){const t=this.scales,r=t.length-1;let i=0;for(;i<r;i++){const r=t[i],o=t[i+1];if(r<=e)return i;if(o===e)return i+1;if(r>e&&o<e)return i+Math.log(r/e)/Math.log(r/o)}return i}tileAt(e,t,r,i){const o=this.lodAt(e);if(!o)return null;let a,s;if("number"==typeof t)a=t,s=r;else if(f.equals(t.spatialReference,this.spatialReference))a=t.x,s=t.y,i=r;else{const e=m.project(t,this.spatialReference);if(null==e)return null;a=e.x,s=e.y,i=r}const l=o.resolution*this.size[0],n=o.resolution*this.size[1];return i||(i=new g.TileKey(null,0,0,0,h.create())),i.level=e,i.row=Math.floor((this.origin.y-s)/n+.001),i.col=Math.floor((a-this.origin.x)/l+.001),this.updateTileInfo(i),i}updateTileInfo(e,t=0){let r=this.lodAt(e.level);if(!r&&1===t){const t=this.lods[this.lods.length-1];t.level<e.level&&(r=t)}if(!r)return;const i=e.level-r.level,o=r.resolution*this.size[0]/2**i,a=r.resolution*this.size[1]/2**i;e.id=`${e.level}/${e.row}/${e.col}`,e.extent||(e.extent=h.create()),e.extent[0]=this.origin.x+e.col*o,e.extent[1]=this.origin.y-(e.row+1)*a,e.extent[2]=e.extent[0]+o,e.extent[3]=e.extent[1]+a}upsampleTile(e){const t=this._upsampleLevels[e.level];return!(!t||-1===t.parentLevel||(e.level=t.parentLevel,e.row=Math.floor(e.row/t.factor+.001),e.col=Math.floor(e.col/t.factor+.001),this.updateTileInfo(e),0))}getTileBounds(e,t){const r=this.lodAt(t.level);if(null==r)return null;const{resolution:i}=r,o=i*this.size[0],a=i*this.size[1];return e[0]=this.origin.x+t.col*o,e[1]=this.origin.y-(t.row+1)*a,e[2]=e[0]+o,e[3]=e[1]+a,e}lodAt(e){return this._levelToLOD?.[e]??null}clone(){return v.fromJSON(this.write({}))}getCompatibleForVTL(e){if(this.size[0]!==this.size[1]||256===this.size[0]&&512===e)return null;const t=(512===this.size[0]&&256===e?-1:0)+(this.spatialReference.isGeographic?1:0);if(this.size[0]===e&&0===t)return this;const r=[],i=this.lods.length-t;for(let e=0;e<i;e++){const i=e+t,{scale:o,resolution:a}=i>=0?this.lods[i]:{scale:2*this.lods[0].scale,resolution:2*this.lods[0].resolution};r.push(new b({level:e,scale:o,resolution:a}))}return new v({size:[e,e],dpi:this.dpi,format:this.format,compressionQuality:this.compressionQuality,origin:this.origin,spatialReference:this.spatialReference,lods:r})}_initializeUpsampleLevels(){const e=this.lods;this._upsampleLevels=[];let t=null;for(let r=0;r<e.length;r++){const i=e[r];this._upsampleLevels[i.level]={parentLevel:t?t.level:-1,factor:t?t.resolution/i.resolution:0},t=i}}},t.__decorate([a.property({type:Number,json:{write:!0}})],e.default.prototype,"compressionQuality",void 0),t.__decorate([a.property({type:Number,json:{write:!0}})],e.default.prototype,"dpi",void 0),t.__decorate([a.property({type:String,json:{read:_.read,write:_.write,origins:{"web-scene":{read:!1,write:!1}}}})],e.default.prototype,"format",void 0),t.__decorate([a.property({readOnly:!0})],e.default.prototype,"isWrappable",null),t.__decorate([a.property({type:d,json:{write:!0}})],e.default.prototype,"origin",void 0),t.__decorate([p.reader("origin")],e.default.prototype,"readOrigin",null),t.__decorate([a.property({type:[b],value:null,json:{write:!0}})],e.default.prototype,"lods",null),t.__decorate([a.property({readOnly:!0})],e.default.prototype,"scales",void 0),t.__decorate([a.property({cast:e=>Array.isArray(e)?e:"number"==typeof e?[e,e]:[256,256]})],e.default.prototype,"size",void 0),t.__decorate([p.reader("size",["rows","cols"])],e.default.prototype,"readSize",null),t.__decorate([u.writer("size",{cols:{type:s.Integer},rows:{type:s.Integer}})],e.default.prototype,"writeSize",null),t.__decorate([a.property({type:y,json:{write:!0}})],e.default.prototype,"spatialReference",void 0),e.default=v=t.__decorate([c.subclass("esri.layers.support.TileInfo")],e.default),e.default})},"esri/layers/support/LOD":function(){define(["exports","../../chunks/tslib.es6","../../core/JSONSupport","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass"],function(e,t,r,i,o,a,s,l){"use strict";var n;return e.default=class extends r.JSONSupport{static{n=this}constructor(e){super(e),this.cols=null,this.level=0,this.levelValue=null,this.origin=null,this.resolution=0,this.rows=null,this.scale=0}clone(){return new n({cols:this.cols,level:this.level,levelValue:this.levelValue,resolution:this.resolution,rows:this.rows,scale:this.scale})}},t.__decorate([i.property({json:{write:!0,origins:{"web-document":{read:!1,write:!1},"portal-item":{read:!1,write:!1}}}})],e.default.prototype,"cols",void 0),t.__decorate([i.property({type:o.Integer,json:{write:!0}})],e.default.prototype,"level",void 0),t.__decorate([i.property({type:String,json:{write:!0}})],e.default.prototype,"levelValue",void 0),t.__decorate([i.property({json:{write:!0,origins:{"web-document":{read:!1,write:!1},"portal-item":{read:!1,write:!1}}}})],e.default.prototype,"origin",void 0),t.__decorate([i.property({type:Number,json:{write:!0}})],e.default.prototype,"resolution",void 0),t.__decorate([i.property({json:{write:!0,origins:{"web-document":{read:!1,write:!1},"portal-item":{read:!1,write:!1}}}})],e.default.prototype,"rows",void 0),t.__decorate([i.property({type:Number,json:{write:!0}})],e.default.prototype,"scale",void 0),e.default=n=t.__decorate([l.subclass("esri.layers.support.LOD")],e.default),e.default})},"esri/layers/support/TileKey":function(){define(["exports"],function(e){"use strict";e.TileKey=class{constructor(e,t,r,i,o=void 0){this.id=e,this.level=t,this.row=r,this.col=i,this.extent=o}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/TileInfoTilemapCache":function(){define(["../../core/Error","../../core/promiseUtils"],function(e,t){"use strict";return class{constructor(e,t=0,r=e.lods[e.lods.length-1].level){this.tileInfo=e,this.minLOD=t,this.maxLOD=r,e.lodAt(t)||(this.minLOD=e.lods[0].level),e.lodAt(r)||(this.maxLOD=e.lods[e.lods.length-1].level)}get effectiveMinLOD(){return this.minLOD??this.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.tileInfo.lods[this.tileInfo.lods.length-1].level}getAvailability(e,t,r){const i=this.tileInfo?.lodAt(e);return!i||e<this.minLOD||e>this.maxLOD?"unavailable":i.cols&&i.rows?r>=i.cols[0]&&r<=i.cols[1]&&t>=i.rows[0]&&t<=i.rows[1]?"unknown":"unavailable":"unknown"}async fetchAvailability(r,i,o,a){await t.waitTick(a);const s=this.getAvailability(r,i,o);if("unavailable"===s)throw new e("tile-map:tile-unavailable","Tile is not available",{level:r,row:i,col:o});return s}async fetchAvailabilityUpsample(e,r,i,o,a){await t.waitTick(a),o.level=e,o.row=r,o.col=i;const s=this.tileInfo;return s.updateTileInfo(o),this.fetchAvailability(e,r,i,a).catch(e=>{if(t.isAbortError(e))throw e;if(s.upsampleTile(o))return this.fetchAvailabilityUpsample(o.level,o.row,o.col,o,a);throw e})}}})},"esri/layers/support/TilemapCache":function(){define(["exports","../../chunks/tslib.es6","../../request","../../core/Accessor","../../core/Error","../../core/handleUtils","../../core/has","../../core/LRUCache","../../core/PooledArray","../../core/promiseUtils","../../core/reactiveUtils","../../core/scheduling","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","./TileKey","./Tilemap"],function(e,t,r,i,o,a,s,l,n,p,c,u,d,y,h,f,m,b,g){"use strict";var v;function _(e,t,r){return new o("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:r})}e.TilemapCache=class extends i{static{v=this}constructor(e){super(e),this._pendingTilemapRequests={},this.request=r,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new l.LRUCache(2097152),this.addHandles(c.watch(()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]},()=>this._initializeTilemapDefinition(),c.initial))}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,t,r){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const i=this._tilemapFromCache(e,t,r,this._tmpTilemapDefinition);return i?i.getAvailability(t,r):"unknown"}fetchAvailability(e,t,r,i){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(_(e,t,r)):this._fetchTilemap(e,t,r,i).catch(e=>e).then(i=>{if(i instanceof g.Tilemap){const o=i.getAvailability(t,r);if("unavailable"===o)throw _(e,t,r);return o}if(p.isAbortError(i))throw i;return"unknown"})}fetchAvailabilityUpsample(e,t,r,i,o){i.level=e,i.row=t,i.col=r;const a=this.layer.tileInfo;a.updateTileInfo(i);const s=this.fetchAvailability(e,t,r,o).catch(e=>{if(p.isAbortError(e))throw e;if(a.upsampleTile(i))return this.fetchAvailabilityUpsample(i.level,i.row,i.col,i,o);throw e});return this._fetchAvailabilityUpsamplePrefetch(i.id,e,t,r,o,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,r,i,o,s){if(!this._prefetchingEnabled||null==e)return;const l=`prefetch-${e}`;if(this.hasHandles(l))return;const n=new AbortController;s.then(()=>n.abort(),()=>n.abort());let c=!1;const d=a.makeHandle(()=>{c||(c=!0,n.abort())});if(this.addHandles(d,l),await u.waitTicks(10,n.signal).catch(()=>{}),c||(c=!0,this.removeHandles(l)),p.isAborted(n))return;const y=new b.TileKey(e,t,r,i),h={...o,signal:n.signal},f=this.layer.tileInfo;for(let e=0;v._prefetches.length<v._maxPrefetch&&f.upsampleTile(y);++e){const e=this.fetchAvailability(y.level,y.row,y.col,h);v._prefetches.push(e);const t=()=>{v._prefetches.removeUnordered(e)};e.then(t,t)}}static{this._maxPrefetch=4}static{this._prefetches=new n({initialSize:v._maxPrefetch})}static cleanupTilemapCache(){this._prefetches.prune()}_fetchTilemap(e,t,r,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new o("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const a=this._tmpTilemapDefinition,s=this._tilemapFromCache(e,t,r,a);if(s)return Promise.resolve(s);const l=i?.signal;return i={...i,signal:null},new Promise((e,t)=>{p.onAbort(l,()=>t(p.createAbortError()));const r=g.tilemapDefinitionId(a);let o=this._pendingTilemapRequests[r];if(!o){o=g.Tilemap.fromDefinition(a,i).then(e=>(this._tilemapCache.put(r,e,e.byteSize),e));const e=()=>{delete this._pendingTilemapRequests[r]};this._pendingTilemapRequests[r]=o,o.then(e,e)}o.then(e,t)})}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:r}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:d.objectToQuery({...e.query,...r,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,r,i){i.level=e,i.row=t-t%this.size,i.col=r-r%this.size;const o=g.tilemapDefinitionId(i);return this._tilemapCache.get(o)}get test(){}},t.__decorate([y.property({constructOnly:!0})],e.TilemapCache.prototype,"layer",void 0),t.__decorate([y.property({constructOnly:!0})],e.TilemapCache.prototype,"minLOD",void 0),t.__decorate([y.property({constructOnly:!0})],e.TilemapCache.prototype,"maxLOD",void 0),t.__decorate([y.property({constructOnly:!0})],e.TilemapCache.prototype,"request",void 0),t.__decorate([y.property({constructOnly:!0})],e.TilemapCache.prototype,"size",void 0),e.TilemapCache=v=t.__decorate([m.subclass("esri.layers.support.TilemapCache")],e.TilemapCache),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/Tilemap":function(){define(["exports","../../request","../../core/Error","../../core/lang","../../core/memoryEstimations","../../geometry/support/UintArray"],function(e,t,r,i,o,a){"use strict";class s{constructor(e){!function(e){if(!e?.location)throw new r("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new r("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new r("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new r("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new r("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}(e);const{location:t,data:s}=e;this.location=Object.freeze(i.clone(t));const l=this.location.width,n=this.location.height;let p=!0,c=!0;const u=Math.ceil(l*n/32),d=a.newUintArray(u);let y=0;for(let e=0;e<s.length;e++){const t=e%32;s[e]?(c=!1,d[y]|=1<<t):p=!1,31===t&&++y}c?(this._availability="unavailable",this.byteSize=40):p?(this._availability="available",this.byteSize=40):(this._availability=d,this.byteSize=40+o.estimateNumberArrayMemory(d))}getAvailability(e,t){if("unavailable"===this._availability||"available"===this._availability)return this._availability;const r=(e-this.location.top)*this.location.width+(t-this.location.left),i=r%32,o=r>>5,a=this._availability;return o<0||o>a.length?"unknown":a[o]&1<<i?"available":"unavailable"}static fromDefinition(e,i){const o=e.service.request||t,{row:a,col:l,width:n,height:p}=e,c={query:{f:"json"}};return i=i?{...c,...i}:c,o(function(e){let t;if(e.service.tileServers?.length){const r=e.service.tileServers;t=`${r&&r.length?r[e.row%r.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}else t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;const r=e.service.query;return r&&(t=`${t}?${r}`),t}(e),i).then(e=>e.data).catch(e=>{if(422===e?.details?.httpStatus)return{location:{top:a,left:l,width:n,height:p},valid:!0,data:new Array(n*p).fill(0)};throw e}).then(e=>{if(e.location&&(e.location.top!==a||e.location.left!==l||e.location.width!==n||e.location.height!==p))throw new r("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:a,left:l,width:n,height:p}});return s.fromJSON(e)})}static fromJSON(e){return Object.freeze(new s(e))}}e.Tilemap=s,e.tilemapDefinitionId=function(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/geometry/support/UintArray":function(){define(["exports","../../core/typedArrayUtil"],function(e,t){"use strict";e.newUintArray=function(e,r=!1){return e<=t.nativeArrayMaxSize?r?new Array(e).fill(0):new Array(e):new Uint32Array(e)},e.uintSubArray=function(e,t,r){return Array.isArray(e)?e.slice(t,t+r):e.subarray(t,t+r)},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/mixins/ArcGISMapService":function(){define(["exports","../../chunks/tslib.es6","../../request","../../core/MapUtils","../../core/promiseUtils","../../core/urlUtils","../../core/Version","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../geometry/Extent","../../geometry/SpatialReference","../support/arcgisLayerUrl","../support/commonProperties","../../portal/support/portalItemUtils"],function(e,t,r,i,o,a,s,l,n,p,c,u,d,y,h,f,m,b){"use strict";e.ArcGISMapService=e=>{const n=e;let p=class extends n{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(e,t){const r=t.capabilities&&t.capabilities.split(",").map(e=>e.toLowerCase().trim());if(!r)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const i=this.type,o="tile"!==i&&!!t.supportsDynamicLayers,a=r.includes("query"),l=r.includes("map"),n=!!t.exportTilesAllowed,p=r.includes("tilemap"),c=r.includes("data"),u="tile"!==i&&(!t.tileInfo||o),d="tile"!==i&&(!t.tileInfo||o),y="tile"!==i,h="tile"!==i&&o&&t.currentVersion>=11.1,f=t.cimVersion?s.Version.parse(t.cimVersion):null,m=f?.greaterEqual(1,4)??!1,b=f?.greaterEqual(2,0)??!1;return{operations:{supportsExportMap:l,supportsExportTiles:n,supportsIdentify:a,supportsQuery:c,supportsTileMap:p},exportMap:l?{supportsArcadeExpressionForLabeling:m,supportsCIMSymbols:b,supportsDynamicLayers:o,supportsSublayerOrderBy:h,supportsSublayerDefinitionExpression:d,supportsSublayerVisibility:u,supportsSublayersChanges:y}:null,exportTiles:n?{maxExportTilesCount:+t.maxExportTilesCount}:null}}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("capabilities")||t.hasOwnProperty("tables")?10:t.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),r}async fetchRelatedService(e){const t=this.portalItem;if(!t||!b.isHostedLayer(t))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=t.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},e).then(e=>e.find(e=>"Feature Service"===e.type)??null,()=>null));const r=await this._relatedFeatureServicePromise;return o.throwIfAborted(e),r?{itemId:r.id,url:r.url}:null}async fetchSublayerInfo(e,t){const{source:i}=e;if(this?.portalItem&&"tile"===this.type&&"map-layer"===i?.type&&b.isHostedLayer(this.portalItem)&&e.originIdOf("url")<2){const r=await this.fetchRelatedService(t);r&&(e.url=a.join(r.url,i.mapLayerId.toString()),e.layerItemId=r.itemId)}const{url:o}=e;let s;if("data-layer"===i.type)s=(await r(o,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...t})).data;else if(o&&e.originIdOf("url")>2)try{const e=await this._fetchAllLayersAndTablesFromService(o),t=f.parse(o)?.sublayer??i.mapLayerId;s=e.get(t)}catch{}else{let r=e.id;"map-layer"===i?.type&&(r=i.mapLayerId);try{s=(await this.fetchAllLayersAndTables(t)).get(r)}catch{}}return s}async fetchAllLayersAndTables(e){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,e)}async _fetchAllLayersAndTablesFromService(e,t){await this.load(t),this._allLayersAndTablesMap||=new Map;const s=f.parse(e),l=i.getOrCreateMapValue(this._allLayersAndTablesMap,s?.url.path,()=>r(a.join(s?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(e=>{const t=new Map,{layers:r,tables:i}=e.data,o=[...r??[],...i??[]];for(const e of o)t.set(e.id,e);return{result:t}},e=>({error:e}))),n=await l;if(o.throwIfAborted(t),"result"in n)return n.result;throw n.error}};return t.__decorate([l.property({readOnly:!0})],p.prototype,"capabilities",void 0),t.__decorate([u.reader("service","capabilities",["capabilities","cimVersion","currentVersion","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],p.prototype,"readCapabilities",null),t.__decorate([l.property({json:{read:{source:"copyrightText"}}})],p.prototype,"copyright",void 0),t.__decorate([l.property({type:y})],p.prototype,"fullExtent",void 0),t.__decorate([l.property(m.id)],p.prototype,"id",void 0),t.__decorate([l.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],p.prototype,"legendEnabled",void 0),t.__decorate([l.property(m.popupEnabled)],p.prototype,"popupEnabled",void 0),t.__decorate([l.property({type:h})],p.prototype,"spatialReference",void 0),t.__decorate([l.property({readOnly:!0})],p.prototype,"version",void 0),t.__decorate([u.reader("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],p.prototype,"readVersion",null),p=t.__decorate([d.subclass("esri.layers.mixins.ArcGISMapService")],p),p},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/mixins/SublayersOwner":function(){define(["exports","../../chunks/tslib.es6","../../core/Collection","../../core/CollectionFlattener","../../core/Error","../../core/Logger","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/RandomLCG","../../core/accessorSupport/utils","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/PropertyOrigin","../support/Sublayer","../support/sublayerUtils"],function(e,t,r,i,o,a,s,l,n,p,c,u,d,y,h){"use strict";const f=r.ofType(y);function m(e,t){e&&e.forEach(e=>{t(e),e.sublayers&&e.sublayers.length&&m(e.sublayers,t)})}e.SublayersOwner=e=>{const n=e;let p=class extends n{constructor(...e){super(...e),this.allSublayers=new i({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={2:{},3:{},4:{},5:{},6:{}},this.subtables=null,this.addHandles([s.watch(()=>this.sublayers,(e,t)=>this._handleSublayersChange(e,t),s.sync),s.watch(()=>this.subtables,(e,t)=>this._handleSublayersChange(e,t),s.sync)])}destroy(){this.allSublayers.destroy()}readSublayers(e,t){if(!t||!e)return;const{sublayersSourceJSON:r}=this,i=d.nameToId(t.origin);if(i<2)return;if(r[i]={context:t,visibleLayers:e.visibleLayers||r[i].visibleLayers,layers:e.layers||r[i].layers},i>2)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:o,origin:a}=this.createSublayersForOrigin("web-document"),s=c.getProperties(this);s.setDefaultOrigin(a),this._set("sublayers",new f(o)),s.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find(t=>t.id===e)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){let t;const r="web-document"===e?d.nameToId("web-map"):d.nameToId(e);let i=2,o=this.sublayersSourceJSON[2].layers,a=this.sublayersSourceJSON[2].context,s=null;const l=[3,4,5].filter(e=>e<=r);for(const e of l){const t=this.sublayersSourceJSON[e];h.isSublayerOverhaul(t.layers)&&(i=e,o=t.layers,a=t.context,t.visibleLayers&&(s={visibleLayers:t.visibleLayers,context:t.context}))}const n=[3,4,5].filter(e=>e>i&&e<=r);let p=null;for(const e of n){const{layers:r,visibleLayers:i,context:o}=this.sublayersSourceJSON[e];r&&(p={layers:r,context:o},t??=e),i&&(s={visibleLayers:i,context:o})}const c=function(e,t){const r=[],i={};return e?(e.forEach(e=>{const o=new y;if(o.read(e,t),i[o.id]=o,null!=e.parentLayerId&&-1!==e.parentLayerId){const t=i[e.parentLayerId];t.sublayers||(t.sublayers=[]),t.sublayers.unshift(o)}else r.unshift(o)}),r):r}(o,a),u=new Map,b=new Set;if(p)for(const e of p.layers)u.set(e.id,e);if(s?.visibleLayers)for(const e of s.visibleLayers)b.add(e);return m(c,e=>{p&&e.read(u.get(e.id),p.context),s&&e.read({defaultVisibility:b.has(e.id)},s.context)}),{origin:d.idToName(i),originWithPartialOverrides:t?d.idToName(t):null,sublayers:new f({items:c})}}read(e,t){super.read(e,t),this.readSublayers(e,t)}_handleSublayersChange(e,t){t&&(t.forEach(e=>{e.parent=null,e.layer=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(e=>{e.parent=this,e.layer=this}),this.addHandles([e.on("after-add",({item:e})=>{e.parent=this,e.layer=this}),e.on("after-remove",({item:e})=>{e.parent=null,e.layer=null})],"sublayers-owner"),"tile"===this.type&&this.addHandles(e.on("before-changes",e=>{a.getLogger("esri.layers.TileLayer").error(new o("tilelayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()}),"sublayers-owner"))}};return t.__decorate([l.property({readOnly:!0})],p.prototype,"allSublayers",void 0),t.__decorate([l.property({readOnly:!0,type:r.ofType(y)})],p.prototype,"serviceSublayers",void 0),t.__decorate([l.property({value:null,type:f,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],p.prototype,"sublayers",void 0),t.__decorate([l.property({readOnly:!0})],p.prototype,"sublayersSourceJSON",void 0),t.__decorate([l.property({type:f,json:{read:{source:"tables"}}})],p.prototype,"subtables",void 0),p=t.__decorate([u.subclass("esri.layers.mixins.SublayersOwner")],p),p},e.forEachSublayer=m,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/Sublayer":function(){define(["require","exports","../../chunks/tslib.es6","../../PopupTemplate","../../request","../../core/Collection","../../core/Error","../../core/has","../../core/Identifiable","../../core/lang","../../core/Loadable","../../core/Logger","../../core/MultiOriginJSONSupport","../../core/sql","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/cast","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/accessorSupport/ensureType","../../core/accessorSupport/PropertyOrigin","../../core/accessorSupport/utils","../../geometry/Extent","../../geometry/SpatialReference","../../geometry/support/typeUtils","../../graphic/MapImageGraphicOrigin","../../graphic/TileGraphicOrigin","../graphics/sources/support/QueryTask","../mixins/OrderedLayer","./featureLayerUtils","./FeatureType","./Field","./FieldsIndex","./fieldUtils","./LabelClass","./labelingInfo","./LayerFloorInfo","./OrderByInfo","./Relationship","./serviceCapabilitiesUtils","./source/DataLayerSource","./source/MapLayerSource","../../renderers/support/typeUtils","../../rest/utils","../../rest/support/AttachmentQuery","../../rest/support/Query","../../support/popupUtils","../../symbols/support/typeUtils","../../tables/AttributeTableTemplate"],function(e,t,r,i,o,a,s,l,n,p,c,u,d,y,h,f,m,b,g,v,_,S,w,I,O,T,x,L,A,P,D,M,j,C,F,R,q,E,U,N,k,G,B,V,z,$,J,Q,K,W){"use strict";const H=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));var X;function Z(e){return"esriSMS"===e?.type}function Y(e,t,r){const i=r.minimumWritableOrigin||r.origin;return!!i&&e.originIdOf(t)>=S.nameToId(i)}function ee(e,t,r){const i=Y(this,t,r);return{ignoreOrigin:!0,allowNull:i,enabled:!!r&&"map-image"===r.layer?.type&&(r.writeSublayerStructure||i)}}function te(e,t,r){return{enabled:!!r&&"tile"===r.layer?.type&&(Y(this,t,r)||this._isOverridden(t))}}function re(e,t,r){return{ignoreOrigin:!0,enabled:r&&r.writeSublayerStructure||!1}}function ie(e,t,r){return{ignoreOrigin:!0,enabled:!!r?.writeSublayerStructure&&this.originIdOf(t)>2}}function oe(e,t,r){return{ignoreOrigin:!0,enabled:!!r&&(r.writeSublayerStructure||Y(this,t,r))}}let ae=0;const se=new Set(["layer","parent","loaded","loadStatus","loadError","loadWarnings"]);return t.default=class extends(d.MultiOriginJSONMixin(n.IdentifiableMixin(c.Loadable))){static{X=this}constructor(e){super(e),this.attributeTableTemplate=null,this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.isTable=!1,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.spatialReference=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:t,url:r}=this;if(!t&&!r)throw new s("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=t?await t.fetchSublayerInfo(this,e):(await o(r,{responseType:"json",query:{f:"json"},...e})).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service",layer:t,url:z.parseUrl(r)}))})()),this}readCapabilities(e,t){t=t.layerDefinition||t;const{attachment:r,operations:{supportsQuery:i,supportsQueryAttachments:o},query:{supportsFormatPBF:a,supportsOrderBy:s,supportsPagination:l},data:{supportsAttachment:n},queryRelated:p}=k.getFeatureLayerCapabilities(t,this.url);return{attachment:{supportsOrderByFields:r?.supportsOrderByFields??!1,supportsResize:r?.supportsResize??!1},exportMap:{supportsModification:!!t.canModifyLayer},operations:{supportsQuery:i,supportsQueryAttachments:o},data:{supportsAttachment:n},query:{supportsFormatPBF:a,supportsOrderBy:s,supportsPagination:l},queryRelated:p}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){const{minScale:e,maxScale:t}=this;return{minScale:e,maxScale:t}}readMaxScaleRange(e,t){return{minScale:(t=t.layerDefinition||t).minScale??0,maxScale:t.maxScale??0}}get fieldsIndex(){return new C(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,t){if((t=t.layerDefinition||t).globalIdField)return t.globalIdField;if(t.fields)for(const e of t.fields)if("esriFieldTypeGlobalID"===e.type)return e.name}get graphicOrigin(){if(!this.layer)return null;switch(this.layer.type){case"tile":return new L(this.layer,this);case"map-image":return new x(this.layer,this)}}get id(){return this._get("id")??ae++}set id(e){this._get("id")!==e&&(!1!==this.layer?.capabilities?.exportMap?.supportsDynamicLayers?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}readIsTable(e,t){return"Table"===t.type}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,t,r,i){e&&e.length&&(t.layerDefinition={drawingInfo:{labelingInfo:e.map(e=>e.write({},i))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers?.forEach(t=>t.layer=e)}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,t){return t.minScale||t.layerDefinition?.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,t){return t.maxScale||t.layerDefinition?.maxScale||0}readObjectIdFieldFromService(e,t){if((t=t.layerDefinition||t).objectIdField)return t.objectIdField;const r=t.fields?.find(e=>"esriFieldTypeOID"===e.type);return r?.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,t){const{layerDefinition:r}=t;return 1-.01*(r?.transparency??r?.drawingInfo?.transparency??0)}writeOpacity(e,t,r,i){t.layerDefinition={drawingInfo:{transparency:100-100*e}}}set orderBy(e){this._setAndNotifyLayer("orderBy",e)}writeParent(e,t){this.parent&&this.parent!==this.layer?t.parentLayerId=_.ensureInteger(this.parent.id):t.parentLayerId=-1}get queryTask(){if(!this.layer)return null;const{capabilities:e,fieldsIndex:t,layer:r,url:i}=this,{spatialReference:o}=r,a="gdbVersion"in r?r.gdbVersion:void 0,s=l("featurelayer-pbf")&&e?.query.supportsFormatPBF;return new A({fieldsIndex:t,gdbVersion:a,pbfSupported:s,queryAttachmentsSupported:e?.operations?.supportsQueryAttachments??!1,sourceSpatialReference:o,url:i})}set renderer(e){if(F.fixRendererFields(e,this.fieldsIndex),e)for(const t of e.symbols)if(K.isSymbol3D(t)){u.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new B.MapLayerSource({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return _.ensureType(a.ofType(X),e)}writeSublayers(e,t,r){this.sublayers?.length&&(t[r]=this.sublayers.map(e=>e.id).toArray().reverse())}readTitle(e,t){return t.layerDefinition?.name??t.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const e=t.fields.find(e=>e.name.toLowerCase()===r);e&&(r=e.name)}return r}get url(){const e=this.layer?.parsedUrl??this._lastParsedUrl,t=this.source;if(!e)return null;if(this._lastParsedUrl=e,"map-layer"===t?.type)return`${e.path}/${t.mapLayerId}`;const r={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${h.objectToQuery(r)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,t,r,i){t[r]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=w.getProperties(this),t=new X;return w.getProperties(t).store=e.clone(se),this.commitProperty("url"),t._lastParsedUrl=this._lastParsedUrl,t}createPopupTemplate(e){return Q.createPopupTemplate(this,e)}createQuery(){return new J({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;const t=(await new Promise((t,r)=>e(["../FeatureLayer"],e=>t(H(e)),r))).default,{layer:r,url:i}=this;let o;if(i&&this.originIdOf("url")>2)o=new t({url:i});else{if(!r?.parsedUrl)throw new s("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const e=r.parsedUrl;o=new t({url:e.path}),e&&this.source&&("map-layer"===this.source.type?o.layerId=this.source.mapLayerId:o.dynamicDataSource=this.source)}}return null!=r?.refreshInterval&&(o.refreshInterval=r.refreshInterval),this.definitionExpression&&(o.definitionExpression=this.definitionExpression),this.floorInfo&&(o.floorInfo=p.clone(this.floorInfo)),this.originIdOf("labelingInfo")>2&&(o.labelingInfo=p.clone(this.labelingInfo)),this.originIdOf("labelsVisible")>0&&(o.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>0&&(o.legendEnabled=this.legendEnabled),this.originIdOf("visible")>0&&(o.visible=this.visible),this.originIdOf("minScale")>0&&(o.minScale=this.minScale),this.originIdOf("maxScale")>0&&(o.maxScale=this.maxScale),this.originIdOf("opacity")>0&&(o.opacity=this.opacity),this.originIdOf("popupTemplate")>0&&(o.popupTemplate=p.clone(this.popupTemplate)),this.originIdOf("renderer")>2&&(o.renderer=p.clone(this.renderer)),"data-layer"===this.source?.type&&(o.dynamicDataSource=this.source.clone()),this.originIdOf("title")>0&&(o.title=this.title),"map-image"===r?.type&&r.originIdOf("customParameters")>0&&(o.customParameters=r.customParameters),"tile"===r?.type&&r.originIdOf("customParameters")>0&&(o.customParameters=r.customParameters),o}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){return D.getFeatureType(this.types,this.typeIdField,e)}getFieldDomain(e,t){const r=t?.feature,i=this.getFeatureType(r);if(i){const t=i.domains&&i.domains[e];if(t&&"inherited"!==t.type)return t}return this._getLayerDomain(e)}async queryAttachments(e,t){await this.load(),e=$.from(e);const r=this.capabilities;if(!r?.data?.supportsAttachment)throw new s("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:o,globalIds:a,num:l,size:n,start:p,where:c}=e;if(!r?.operations?.supportsQueryAttachments&&(i?.length>0||a?.length>0||n?.length>0||l||p||c))throw new s("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(o?.length||a?.length||c))throw new s("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return!r?.attachment?.supportsOrderByFields&&e.orderByFields?.length&&((e=e.clone()).orderByFields=null),this.queryTask.executeAttachmentQuery(e,t)}async queryFeatureCount(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryFeatureCount:not-supported","this layer doesn't support queries.");if(!this.url)throw new s("queryFeatureCount:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeForCount(e,{...t,query:{...this.layer?.customParameters,token:r}})}async queryFeatures(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new s("queryFeatures:not-supported","this layer has no url.");const r=await this.queryTask.execute(e,{...t,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(r?.features)for(const e of r.features)e.sourceLayer=this,e.origin=this.graphicOrigin;return r}async queryObjectIds(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryObjectIds:not-supported","this layer doesn't support queries.");if(!this.url)throw new s("queryObjectIds:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeForIds(e,{...t,query:{...this.layer?.customParameters,token:r}})}async queryRelatedFeatures(e,t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryRelatedFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new s("queryRelatedFeatures:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeRelationshipQuery(e,{...t,query:{...this.layer?.customParameters,token:r}})}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryRelatedFeaturesCount:not-supported","this layer doesn't support queries.");if(!this.capabilities.queryRelated.supportsCount)throw new s("queryRelatedFeaturesCount:not-supported","this layer doesn't support query related counts.");if(!this.url)throw new s("queryRelatedFeaturesCount:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeRelationshipQueryForCount(e,{...t,query:{...this.layer?.customParameters,token:r}})}toExportImageJSON(e){const t={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},r=y.sqlAnd(e,this.definitionExpression);null!=r&&(t.definitionExpression=r);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((e,t)=>(e[t]=this.originIdOf(t),e),{});if(Object.keys(i).some(e=>i[e]>2)){const e=t.drawingInfo={};if(i.renderer>2&&(e.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>2&&(e.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>2)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some(e=>!e.labelPlacement)&&u.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let t=this.labelingInfo;null!=this.geometryType&&(t=q.validateLabelingInfo(this.labelingInfo,T.featureGeometryTypeKebabDictionary.toJSON(this.geometryType))),e.showLabels=!0,e.labelingInfo=t.filter(e=>e.labelPlacement).map(e=>e.toJSON({origin:"service",layer:this.layer}))}else e.showLabels=!1;i.opacity>2&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return(this.layer?.capabilities?.exportMap?.supportsSublayerOrderBy??!1)&&this.originIdOf("orderBy")>2&&(t.orderBy=this.orderBy?.map(e=>e.toJSON())??null),t}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,e=>{e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||(e.outline?.color?e.color=e.outline.color:e.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(e,t){if(e){const r=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const e of r)Z(e.symbol)&&t(e.symbol);"symbol"in e&&Z(e.symbol)&&t(e.symbol),"defaultSymbol"in e&&Z(e.defaultSymbol)&&t(e.defaultSymbol)}}_setAndNotifyLayer(e,t){const r=this.layer,i=this._get(e);let o,a;switch(e){case"definitionExpression":case"floorInfo":o="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":o="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":o="supportsDynamicLayers",a="supportsModification";break;case"orderBy":o="supportsSublayerOrderBy",a="supportsModification"}const s=w.getProperties(this).getDefaultOrigin();if("service"!==s){if(o&&!1===this.layer?.capabilities?.exportMap?.[o])return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${o}'`);if(a&&!1===this.capabilities?.exportMap[a])return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${a}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,t),"service"!==s&&i!==t&&r?.emit&&r.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,t){t&&(t.forEach(e=>{e.parent=null,e.layer=null}),this.removeAllHandles()),e&&(e.forEach(e=>{e.parent=this,e.layer=this.layer}),this.addHandles([e.on("after-add",({item:e})=>{e.parent=this,e.layer=this.layer}),e.on("after-remove",({item:e})=>{e.parent=null,e.layer=null}),e.on("before-changes",e=>{(this.layer?.capabilities?.exportMap?.supportsSublayersChanges??1)||(u.getLogger(this).error(new s("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())})]))}_logLockedError(e,t){const{layer:r,declaredClass:i}=this;u.getLogger(i).error(new s("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${r?.id}'`,{reason:t,sublayer:this,layer:r}))}_getLayerDomain(e){return this.fieldsIndex.get(e)?.domain??null}static{this.test={isMapImageLayerOverridePolicy:e=>e===ie||e===re||e===ee,isTileImageLayerOverridePolicy:e=>e===te}}},r.__decorate([f.property({type:W,json:{name:"attributeTableInfo",write:{overridePolicy:ee},origins:{"web-scene":{write:!1}}}})],t.default.prototype,"attributeTableTemplate",void 0),r.__decorate([f.property({readOnly:!0})],t.default.prototype,"capabilities",void 0),r.__decorate([b.reader("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],t.default.prototype,"readCapabilities",null),r.__decorate([f.property()],t.default.prototype,"defaultPopupTemplate",null),r.__decorate([f.property({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:ee}}})],t.default.prototype,"definitionExpression",null),r.__decorate([f.property({readOnly:!0})],t.default.prototype,"effectiveScaleRange",null),r.__decorate([b.reader("service","maxScaleRange",["minScale","maxScale"])],t.default.prototype,"readMaxScaleRange",null),r.__decorate([f.property({type:[j],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],t.default.prototype,"fields",void 0),r.__decorate([f.property({readOnly:!0})],t.default.prototype,"fieldsIndex",null),r.__decorate([f.property({type:E,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:ee},origins:{"web-scene":{read:!1,write:!1}}}})],t.default.prototype,"floorInfo",null),r.__decorate([f.property({type:I,json:{read:{source:"layerDefinition.extent"}}})],t.default.prototype,"fullExtent",void 0),r.__decorate([f.property({type:T.featureGeometryTypeKebabDictionary.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:T.featureGeometryTypeKebabDictionary.read}}}}})],t.default.prototype,"geometryType",void 0),r.__decorate([f.property({type:String})],t.default.prototype,"globalIdField",void 0),r.__decorate([b.reader("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],t.default.prototype,"readGlobalIdFieldFromService",null),r.__decorate([f.property({readOnly:!0})],t.default.prototype,"graphicOrigin",null),r.__decorate([f.property({type:_.Integer,json:{write:{ignoreOrigin:!0}}})],t.default.prototype,"id",null),r.__decorate([f.property({readOnly:!0})],t.default.prototype,"isTable",void 0),r.__decorate([b.reader("service","isTable",["type"])],t.default.prototype,"readIsTable",null),r.__decorate([f.property({value:null,type:[R],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:ie}}})],t.default.prototype,"labelingInfo",null),r.__decorate([v.writer("labelingInfo")],t.default.prototype,"writeLabelingInfo",null),r.__decorate([f.property({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:re}}})],t.default.prototype,"labelsVisible",null),r.__decorate([f.property({value:null})],t.default.prototype,"layer",null),r.__decorate([f.property({type:String,json:{write:{overridePolicy:te}}})],t.default.prototype,"layerItemId",void 0),r.__decorate([f.property({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:oe}}})],t.default.prototype,"legendEnabled",void 0),r.__decorate([f.property({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],t.default.prototype,"listMode",null),r.__decorate([f.property({type:Number,value:0,json:{write:{overridePolicy:re}}})],t.default.prototype,"minScale",null),r.__decorate([b.reader("minScale",["minScale","layerDefinition.minScale"])],t.default.prototype,"readMinScale",null),r.__decorate([f.property({type:Number,value:0,json:{write:{overridePolicy:re}}})],t.default.prototype,"maxScale",null),r.__decorate([b.reader("maxScale",["maxScale","layerDefinition.maxScale"])],t.default.prototype,"readMaxScale",null),r.__decorate([f.property()],t.default.prototype,"objectIdField",void 0),r.__decorate([b.reader("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],t.default.prototype,"readObjectIdFieldFromService",null),r.__decorate([f.property({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:re}}})],t.default.prototype,"opacity",null),r.__decorate([b.reader("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],t.default.prototype,"readOpacity",null),r.__decorate([v.writer("opacity")],t.default.prototype,"writeOpacity",null),r.__decorate([f.property({value:null,type:[U],json:{name:"layerDefinition.orderBy",read:{reader:P.readOrderByInfos},write:{overridePolicy:ee},origins:{"web-scene":{read:!1,write:!1}}}})],t.default.prototype,"orderBy",null),r.__decorate([f.property({json:{type:_.Integer,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:re}}})],t.default.prototype,"parent",void 0),r.__decorate([v.writer("parent")],t.default.prototype,"writeParent",null),r.__decorate([f.property({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:oe,writer(e,t,r){t[r]=!e}}}})],t.default.prototype,"popupEnabled",void 0),r.__decorate([f.property({type:i,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:oe}}})],t.default.prototype,"popupTemplate",void 0),r.__decorate([f.property({readOnly:!0})],t.default.prototype,"queryTask",null),r.__decorate([f.property({type:[N],readOnly:!0,json:{origins:{service:{read:{source:"layerDefinition.relationships"}}}}})],t.default.prototype,"relationships",void 0),r.__decorate([f.property({types:V.rendererTypes,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:ie},origins:{"web-scene":{types:V.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:ie}}}}})],t.default.prototype,"renderer",null),r.__decorate([f.property({types:{key:"type",base:null,typeMap:{"data-layer":G.DataLayerSource,"map-layer":B.MapLayerSource}},cast(e){if(e){if("mapLayerId"in e)return _.ensureClass(B.MapLayerSource,e);if("dataSource"in e)return _.ensureClass(G.DataLayerSource,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:re}}})],t.default.prototype,"source",null),r.__decorate([f.property()],t.default.prototype,"sourceJSON",void 0),r.__decorate([f.property({type:O,json:{origins:{service:{read:{source:"layerDefinition.extent.spatialReference"}}}}})],t.default.prototype,"spatialReference",void 0),r.__decorate([f.property({value:null,json:{type:[_.Integer],write:{target:"subLayerIds",allowNull:!0,overridePolicy:re}}})],t.default.prototype,"sublayers",null),r.__decorate([m.cast("sublayers")],t.default.prototype,"castSublayers",null),r.__decorate([v.writer("sublayers")],t.default.prototype,"writeSublayers",null),r.__decorate([f.property({type:String,json:{name:"name",write:{overridePolicy:oe}}})],t.default.prototype,"title",void 0),r.__decorate([b.reader("service","title",["name","layerDefinition.name"])],t.default.prototype,"readTitle",null),r.__decorate([f.property({type:String})],t.default.prototype,"typeIdField",void 0),r.__decorate([f.property({json:{read:!1},readOnly:!0,value:"sublayer"})],t.default.prototype,"type",void 0),r.__decorate([b.reader("typeIdField",["layerDefinition.typeIdField"])],t.default.prototype,"readTypeIdField",null),r.__decorate([f.property({type:[M],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],t.default.prototype,"types",void 0),r.__decorate([f.property({type:String,json:{name:"layerUrl",write:{overridePolicy:te}}})],t.default.prototype,"url",null),r.__decorate([f.property({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:re}}})],t.default.prototype,"visible",null),r.__decorate([v.writer("visible")],t.default.prototype,"writeVisible",null),t.default=X=r.__decorate([g.subclass("esri.layers.support.Sublayer")],t.default),t.default})},"esri/graphic/MapImageGraphicOrigin":function(){define(["./GraphicOrigin","./isMapImageGraphicOrigin"],function(e,t){"use strict";var r;class i extends e{static{r=t.isMapImageGraphicOriginSymbol}constructor(e,t){super(),this[r]=!0,this.type="map-image",this.layer=e,this.sublayer=t}}return i})},"esri/graphic/isMapImageGraphicOrigin":function(){define(["exports"],function(e){"use strict";const t=Symbol("isMapImageGraphicOriginSymbol");e.isMapImageGraphicOrigin=function(e){return!!e&&t in e},e.isMapImageGraphicOriginSymbol=t,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/graphic/TileGraphicOrigin":function(){define(["./GraphicOrigin","./isTileGraphicOrigin"],function(e,t){"use strict";var r;class i extends e{static{r=t.isTileGraphicOriginSymbol}constructor(e,t){super(),this[r]=!0,this.type="tile",this.layer=e,this.sublayer=t}}return i})},"esri/graphic/isTileGraphicOrigin":function(){define(["exports"],function(e){"use strict";const t=Symbol("isTileGraphicOriginSymbol");e.isTileGraphicOrigin=function(e){return!!e&&t in e},e.isTileGraphicOriginSymbol=t,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/sublayerUtils":function(){define(["exports"],function(e){"use strict";function t(e,t){if(!e?.length||null==t)return!0;const r=t.slice().reverse().flatten(({sublayers:e})=>e&&e.toArray().reverse()).map(e=>e.id).toArray();if(e.length>r.length)return!1;let i=0;const o=r.length;for(const{id:t}of e){for(;i<o&&r[i]!==t;)i++;if(i>=o)return!1}return!0}e.isExportDynamic=function(e,r,i){return!!e.some(e=>{const t=e.source,r=!t||"map-layer"===t.type&&t.mapLayerId===e.id&&(null==t.gdbVersion||t.gdbVersion===i);e.commitProperty("renderer"),e.commitProperty("labelingInfo"),e.commitProperty("opacity"),e.commitProperty("labelsVisible"),e.commitProperty("orderBy");const o=e.layer?.capabilities?.exportMap?.supportsSublayerOrderBy??!1;return!r||e.originIdOf("renderer")>2||e.originIdOf("labelingInfo")>2||e.originIdOf("opacity")>2||e.originIdOf("labelsVisible")>2||o&&e.originIdOf("orderBy")>2})||!t(e,r)},e.isSublayerOverhaul=function(e){return!!e&&e.some(e=>null!=e.minScale||null!=e.layerDefinition?.minScale)},e.shouldWriteSublayerStructure=function(e,r,i){return r.flatten(({sublayers:e})=>e).length!==e.length||!!e.some(e=>e.originIdOf("minScale")>i||e.originIdOf("maxScale")>i||e.originIdOf("renderer")>i||e.originIdOf("labelingInfo")>i||e.originIdOf("opacity")>i||e.originIdOf("labelsVisible")>i||e.originIdOf("source")>i)||!t(e,r)},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/imageBitmapUtils":function(){define(["exports","../../core/Error","../../core/promiseUtils"],function(e,t,r){"use strict";e.createBitmap=async function(e,i,o){let a;try{a=await createImageBitmap(e)}catch(e){throw new t("request:server",`Unable to load ${i}`,{url:i,error:e})}return r.throwIfAborted(o),a},e.createTileBitmap=async function(e,i,o,a,s){let l;try{l=await createImageBitmap(e)}catch(e){throw new t("request:server",`Unable to load tile ${i}/${o}/${a}`,{error:e,level:i,row:o,col:a})}return r.throwIfAborted(s),l},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"*noref":1}}),define(["../chunks/tslib.es6","../request","../core/Error","../core/loadAll","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/cast","../core/has","../core/RandomLCG","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../geometry/SpatialReference","./Layer","./mixins/APIKeyMixin","./mixins/ArcGISCachedService","./mixins/ArcGISMapService","./mixins/ArcGISService","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./mixins/SublayersOwner","./support/arcgisLayerUrl","./support/commonProperties","./support/imageBitmapUtils","./support/Sublayer","../symbols/support/ElevationInfo"],function(e,t,r,i,o,a,s,l,n,p,c,u,d,y,h,f,m,b,g,v,_,S,w,I,O,T,x,L,A,P,D,M){"use strict";var j;const C=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let F=j=class extends(_.BlendLayer(T.ScaleRangeLayer(x.SublayersOwner(b.ArcGISCachedService(g.ArcGISMapService(w.OperationalLayer(I.PortalLayer(v.ArcGISService(o.MultiOriginJSONMixin(O.RefreshableLayer(m.APIKeyMixin(S.CustomParametersMixin(f))))))))))))){constructor(...e){super(...e),this.listMode="show",this.elevationInfo=new M({mode:"on-the-ground"}),this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(a.throwIfAbortError).then(()=>this._fetchService(t))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}get hasAttributionData(){return super.hasAttributionData}readSpatialReference(e,t){return(e=e||t.tileInfo?.spatialReference)&&h.fromJSON(e)}writeSublayers(e,t,r,i){if(!this.loaded||!e)return;const o=e.slice().reverse().flatten(({sublayers:e})=>e&&e.toArray().reverse()).toArray(),a=[],s={writeSublayerStructure:!1,...i};o.forEach(e=>{const t=e.write({},s);a.push(t)}),a.some(e=>Object.keys(e).length>1)&&(t.layers=a)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(e){return Array.isArray(e)?e.map(e=>s.urlToObject(e).path):null}fetchTile(e,r,i,o={}){const{signal:a}=o,s=this.getTileUrl(e,r,i),l={responseType:"image",signal:a,query:{...this.refreshParameters}};return t(s,l).then(e=>e.data)}async fetchImageBitmapTile(e,r,i,o={}){const{signal:a}=o;if(this.fetchTile!==j.prototype.fetchTile){const t=await this.fetchTile(e,r,i,o);return P.createTileBitmap(t,e,r,i,a)}const s=this.getTileUrl(e,r,i),l={responseType:"blob",signal:a,query:{...this.refreshParameters}},{data:n}=await t(s,l);return P.createTileBitmap(n,e,r,i,a)}getTileUrl(e,t,r){const i=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,o=s.objectToQuery({...this.parsedUrl?.query,blankTile:!i&&null,...this.customParameters,token:this.apiKey}),a=this.tileServers;return`${a&&a.length?a[t%a.length]:this.parsedUrl?.path}/tile/${e}/${t}/${r}${o?"?"+o:""}`}loadAll(){return i.loadAll(this,e=>{e(this.allSublayers)})}_fetchService(e){return new Promise((i,o)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new r("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void i({data:this.sourceJSON})}if(!this.parsedUrl)throw new r("tile-layer:undefined-url","layer's url is not defined");const a=L.parse(this.parsedUrl.path);if(null!=a&&"ImageServer"===a.serverType)throw new r("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");t(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(i,o)}).then(t=>{let r=this.url;if(t.ssl&&(r=this.url=r.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!L.isHostedAgolService(r))return this._fetchServerVersion(r,e).then(e=>{this.read({currentVersion:e})}).catch(()=>{})})}_fetchServerVersion(e,i){if(!L.isArcGISUrl(e))return Promise.reject();const o=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return t(o,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:i}).then(e=>{if(e.data?.currentVersion)return e.data.currentVersion;throw new r("tile-layer:version-not-available","Server did not provide a version")})}_getMapName(e){const t=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return t?t[2]:void 0}_getDefaultAttribution(e){if(null==e)return null;let t;e=e.toLowerCase();for(let r=0,i=C.length;r<i;r++)if(t=C[r],t.toLowerCase().includes(e))return s.makeAbsolute("//static.arcgis.com/attribution/"+t);return null}_getDefaultTileServers(e){if(null==e)return[];const t=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),r=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return t||r?[e,e.replace(t?/server\.arcgisonline/i:/services\.arcgisonline/i,t?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[R]}};e.__decorate([l.property({readOnly:!0})],F.prototype,"attributionDataUrl",null),e.__decorate([l.property({type:["show","hide","hide-children"]})],F.prototype,"listMode",void 0),e.__decorate([l.property({json:{read:!0,write:!0}})],F.prototype,"blendMode",void 0),e.__decorate([l.property()],F.prototype,"elevationInfo",void 0),e.__decorate([l.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],F.prototype,"isReference",void 0),e.__decorate([l.property({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],F.prototype,"operationalLayerType",void 0),e.__decorate([l.property({type:Boolean})],F.prototype,"resampling",void 0),e.__decorate([l.property()],F.prototype,"sourceJSON",void 0),e.__decorate([l.property({type:h})],F.prototype,"spatialReference",void 0),e.__decorate([u.reader("spatialReference",["spatialReference","tileInfo"])],F.prototype,"readSpatialReference",null),e.__decorate([l.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],F.prototype,"path",void 0),e.__decorate([l.property({readOnly:!0})],F.prototype,"sublayers",void 0),e.__decorate([y.writer("sublayers",{layers:{type:[D]}})],F.prototype,"writeSublayers",null),e.__decorate([l.property({json:{read:!1,write:!1}})],F.prototype,"popupEnabled",void 0),e.__decorate([l.property()],F.prototype,"tileServers",null),e.__decorate([n.cast("tileServers")],F.prototype,"castTileServers",null),e.__decorate([l.property({readOnly:!0,json:{read:!1}})],F.prototype,"type",void 0),e.__decorate([l.property(A.url)],F.prototype,"url",void 0),F=j=e.__decorate([d.subclass("esri.layers.TileLayer")],F);const R=Symbol("default-fetch-tile");return F.prototype.fetchTile[R]=!0,F});