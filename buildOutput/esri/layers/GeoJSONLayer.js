// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
require({cache:{"esri/graphic/GeoJSONGraphicOrigin":function(){define(["./GraphicOrigin","./isGeoJSONGraphicOrigin"],function(e,t){"use strict";var r;class o extends e{static{r=t.isGeoJSONGraphicOriginSymbol}constructor(e){super(),this[r]=!0,this.type="geojson",this.layer=e}}return o})},"esri/graphic/isGeoJSONGraphicOrigin":function(){define(["exports"],function(e){"use strict";const t=Symbol("isGeoJSONGraphicOrigin");e.isGeoJSONGraphicOrigin=function(e){return!!e&&t in e},e.isGeoJSONGraphicOriginSymbol=t,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/graphics/sources/GeoJSONSource":function(){define(["exports","../../../chunks/tslib.es6","../../../core/Error","../../../core/has","../../../core/Loadable","../../../core/Logger","../../../core/promiseUtils","../../../core/workers/workers","../../../core/accessorSupport/decorators/property","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../geometry/Extent","../../../geometry/Polygon","../../../geometry/support/typeUtils","./support/clientSideDefaults","../../../rest/support/FeatureSet"],function(e,t,r,o,i,s,n,a,l,p,u,d,c,y,h,m){"use strict";e.GeoJSONSource=class extends i.Loadable{constructor(){super(...arguments),this.type="geojson",this.refresh=n.debounce(async e=>{await this.load();const{extent:t,timeExtent:r}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=t,r&&(this.sourceJSON.timeInfo.timeExtent=[r.start,r.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}applyEdits(e){return this.load().then(()=>this._applyEdits(e))}openPorts(){return this.load().then(()=>this._connection.openPorts())}queryFeatures(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)).then(e=>m.fromJSON(e))}queryFeaturesJSON(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))}queryFeatureCount(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t))}queryObjectIds(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t))}queryExtent(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t)).then(e=>({count:e.count,extent:d.fromJSON(e.extent)}))}querySnapping(e,t={}){return this.load(t).then(()=>this._connection.invoke("querySnapping",e,t))}async queryAttributeBins(e,t={}){return await this.load(),this._connection.invoke("queryAttributeBins",e?.toJSON(),t)}_applyEdits(e){if(!this._connection)throw new r("geojson-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField,o=[],i=[],s=[];if(e.addFeatures)for(const t of e.addFeatures)o.push(this._serializeFeature(t));if(e.deleteFeatures)for(const r of e.deleteFeatures)"objectId"in r&&null!=r.objectId?i.push(r.objectId):"attributes"in r&&null!=r.attributes[t]&&i.push(r.attributes[t]);if(e.updateFeatures)for(const t of e.updateFeatures)s.push(this._serializeFeature(t));return this._connection.invoke("applyEdits",{adds:o,updates:s,deletes:i}).then(({extent:e,timeExtent:t,featureEditResults:r})=>(this.sourceJSON.extent=e,t&&(this.sourceJSON.timeInfo.timeExtent=[t.start,t.end]),this._createEditsResult(r)))}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=!0===e.success?null:e.error||{code:void 0,description:""};return{objectId:e.objectId,globalId:e.globalId,error:t?new r("geojson-layer-source:edit-failure",t.description,{code:t.code}):null}}_serializeFeature(e){const{attributes:t}=e,r=this._geometryForSerialization(e);return r?{geometry:r.toJSON(),attributes:t}:{attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return null==t?null:"mesh"===t.type||"extent"===t.type?c.fromExtent(t.extent):t}async _startWorker(e){this._connection=await a.open("GeoJSONSourceWorker",{strategy:o("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:r,hasZ:i,geometryType:n,objectIdField:l,url:p,timeInfo:u,customParameters:d}=this.layer,c="defaults"===this.layer.originOf("spatialReference"),m={url:p,customParameters:d,fields:t&&t.map(e=>e.toJSON()),geometryType:y.featureGeometryTypeKebabDictionary.toJSON(n),hasZ:i,objectIdField:l,timeInfo:u?u.toJSON():null,spatialReference:c?null:r&&r.toJSON()},f=await this._connection.invoke("load",m,{signal:e});for(const e of f.warnings)s.getLogger(this.layer).warn("#load()",`${e.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:e});f.featureErrors.length&&s.getLogger(this.layer).warn("#load()",`Encountered ${f.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:f.featureErrors}),this.sourceJSON=f.layerDefinition,this.capabilities=h.createCapabilities(this.sourceJSON.hasZ,!0)}},t.__decorate([l.property()],e.GeoJSONSource.prototype,"capabilities",void 0),t.__decorate([l.property()],e.GeoJSONSource.prototype,"type",void 0),t.__decorate([l.property({constructOnly:!0})],e.GeoJSONSource.prototype,"layer",void 0),t.__decorate([l.property()],e.GeoJSONSource.prototype,"sourceJSON",void 0),e.GeoJSONSource=t.__decorate([u.subclass("esri.layers.graphics.sources.GeoJSONSource")],e.GeoJSONSource),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"*noref":1}}),define(["require","../chunks/tslib.es6","../PopupTemplate","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/RandomLCG","../core/accessorSupport/decorators/subclass","../geometry/Extent","../geometry/SpatialReference","../geometry/support/typeUtils","../graphic/GeoJSONGraphicOrigin","./Layer","./graphics/sources/GeoJSONSource","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/DisplayFilteredLayer","./mixins/FeatureEffectLayer","./mixins/FeatureReductionLayer","./mixins/OperationalLayer","./mixins/OrderedLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./mixins/TemporalLayer","./mixins/TrackableLayer","./support/commonProperties","./support/featureLayerUtils","./support/FeatureTemplate","./support/Field","./support/fieldProperties","./support/fieldUtils","./support/LabelClass","./support/labelingInfo","../renderers/support/typeUtils","../rest/support/Query","../support/popupUtils","../time/timeZoneUtils"],function(e,t,r,o,i,s,n,a,l,p,u,d,c,y,h,m,f,g,_,b,S,O,v,x,F,J,N,E,I,w,T,G,R,P,L,j,q,k,D,U,C){"use strict";const B=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),Q=P.defineFieldProperties();let Z=class extends(x.OrderedLayer(b.DisplayFilteredLayer(_.CustomParametersMixin(O.FeatureReductionLayer(S.FeatureEffectLayer(g.BlendLayer(E.TemporalLayer(I.TrackableLayer(N.ScaleRangeLayer(J.RefreshableLayer(v.OperationalLayer(F.PortalLayer(o.MultiOriginJSONMixin(m)))))))))))))){constructor(e){super(e),this.attributeTableTemplate=null,this.copyright=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.editingEnabled=!1,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.graphicOrigin=new h(this),this.hasZ=void 0,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="GeoJSON",this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new f.GeoJSONSource({layer:this}),this.spatialReference=c.WGS84,this.templates=null,this.title="GeoJSON",this.type="geojson"}destroy(){this.source?.destroy()}load(e){const t=this.loadFromPortal({supportedTypes:["GeoJson"],supportsData:!1},e).catch(i.throwIfAbortError).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo"],"service"),L.fixRendererFields(this.renderer,this.fieldsIndex),L.fixTimeInfoFields(this.timeInfo,this.fieldsIndex)});return this.addResolvingPromise(t),Promise.resolve(this)}set portalItem(e){super.portalItem=e}set timeInfo(e){super.timeInfo=e}get capabilities(){return this.source?this.source.capabilities:null}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&null==this.geometryType}get parsedUrl(){return s.urlToObject(this.url)}set renderer(e){L.fixRendererFields(e,this.fieldsIndex),this._set("renderer",e)}set url(e){if(!e)return void this._set("url",e);const t=s.urlToObject(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async applyEdits(t,r){const{applyEdits:o}=await new Promise((t,r)=>e(["./graphics/editingSupport"],t,r));await this.load();const i=await o(this,this.source,t,r);return this.read({extent:this.source.sourceJSON.extent,timeInfo:this.source.sourceJSON.timeInfo},{origin:"service",ignoreDefaults:!0}),i}createPopupTemplate(e){return U.createPopupTemplate(this,e)}createQuery(){const e=new D,t=this.capabilities?.data;e.returnGeometry=!0,t&&t.supportsZ&&(e.returnZ=!0),e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:r,timeExtent:o}=this;return e.timeExtent=null!=r&&null!=o?o.offset(-r.value,r.unit):o||null,e}getFieldDomain(e,t){return this.getField(e)?.domain}getField(e){return this.fieldsIndex.get(e)}queryFeatures(e,t){return this.load().then(()=>this.source.queryFeatures(D.from(e)||this.createQuery(),t)).then(e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this,t.origin=this.graphicOrigin;return e})}queryObjectIds(e,t){return this.load().then(()=>this.source.queryObjectIds(D.from(e)||this.createQuery(),t))}queryFeatureCount(e,t){return this.load().then(()=>this.source.queryFeatureCount(D.from(e)||this.createQuery(),t))}queryExtent(e,t){return this.load().then(()=>this.source.queryExtent(D.from(e)||this.createQuery(),t))}async queryAttributeBins(t,r){const{source:o,capabilities:i}=await this.load();T.validateBinsQuery(t,i,"GeoJSONLayer");const s=await new Promise((t,r)=>e(["../rest/support/AttributeBinsQuery"],e=>t(B(e)),r)),n=await o.queryAttributeBins(s.default.from(t),r);if(n.features)for(const e of n.features)e.layer=e.sourceLayer=this;return n}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return null!=t&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};return t.__decorate([n.property(w.attributeTableTemplate)],Z.prototype,"attributeTableTemplate",void 0),t.__decorate([n.property({readOnly:!0,json:{read:!1,write:!1}})],Z.prototype,"capabilities",null),t.__decorate([n.property({type:String})],Z.prototype,"copyright",void 0),t.__decorate([n.property({readOnly:!0})],Z.prototype,"createQueryVersion",null),t.__decorate([n.property(C.timeZoneProperty("dateFieldsTimeReference"))],Z.prototype,"dateFieldsTimeZone",void 0),t.__decorate([n.property({readOnly:!0})],Z.prototype,"defaultPopupTemplate",null),t.__decorate([n.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],Z.prototype,"definitionExpression",void 0),t.__decorate([n.property({type:String})],Z.prototype,"displayField",void 0),t.__decorate([n.property({type:Boolean})],Z.prototype,"editingEnabled",void 0),t.__decorate([n.property(w.elevationInfo)],Z.prototype,"elevationInfo",void 0),t.__decorate([n.property({type:[R],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],Z.prototype,"fields",void 0),t.__decorate([n.property(Q.fieldsIndex)],Z.prototype,"fieldsIndex",void 0),t.__decorate([n.property({type:d,json:{name:"extent"}})],Z.prototype,"fullExtent",void 0),t.__decorate([n.property({type:["point","polygon","polyline","multipoint"],json:{read:{reader:y.featureGeometryTypeKebabDictionary.read}}})],Z.prototype,"geometryType",void 0),t.__decorate([n.property({readOnly:!0,clonable:!1})],Z.prototype,"graphicOrigin",void 0),t.__decorate([n.property({type:Boolean})],Z.prototype,"hasZ",void 0),t.__decorate([n.property(w.id)],Z.prototype,"id",void 0),t.__decorate([n.property({type:Boolean,readOnly:!0})],Z.prototype,"isTable",null),t.__decorate([n.property(w.labelsVisible)],Z.prototype,"labelsVisible",void 0),t.__decorate([n.property({type:[j],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:q.reader},write:!0}})],Z.prototype,"labelingInfo",void 0),t.__decorate([n.property(w.legendEnabled)],Z.prototype,"legendEnabled",void 0),t.__decorate([n.property({type:["show","hide"]})],Z.prototype,"listMode",void 0),t.__decorate([n.property({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],Z.prototype,"objectIdField",void 0),t.__decorate([n.property(w.opacity)],Z.prototype,"opacity",void 0),t.__decorate([n.property({type:["GeoJSON"]})],Z.prototype,"operationalLayerType",void 0),t.__decorate([n.property(Q.outFields)],Z.prototype,"outFields",void 0),t.__decorate([n.property({readOnly:!0})],Z.prototype,"parsedUrl",null),t.__decorate([n.property(w.popupEnabled)],Z.prototype,"popupEnabled",void 0),t.__decorate([n.property({type:r,json:{name:"popupInfo",write:!0}})],Z.prototype,"popupTemplate",void 0),t.__decorate([n.property({types:k.rendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:k.webSceneRendererTypes}}}})],Z.prototype,"renderer",null),t.__decorate([n.property(w.screenSizePerspectiveEnabled)],Z.prototype,"screenSizePerspectiveEnabled",void 0),t.__decorate([n.property({readOnly:!0})],Z.prototype,"source",void 0),t.__decorate([n.property({type:c})],Z.prototype,"spatialReference",void 0),t.__decorate([n.property({type:[G]})],Z.prototype,"templates",void 0),t.__decorate([n.property()],Z.prototype,"title",void 0),t.__decorate([n.property({json:{read:!1},readOnly:!0})],Z.prototype,"type",void 0),t.__decorate([n.property(w.url)],Z.prototype,"url",null),Z=t.__decorate([u.subclass("esri.layers.GeoJSONLayer")],Z),Z});