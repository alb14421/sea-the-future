// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../core/Error","../../../geometry/support/contains","../../../geometry/support/intersects","../../../geometry/support/jsonUtils","../../../geometry/support/spatialReferenceUtils","../contains","../featureConversionUtils","../OptimizedGeometry","./geometryUtils","./projectionSupport"],function(e,t,r,o,i,n,s,a,l,p,u,y){"use strict";const c="unsupported-query",m={esriSpatialRelIntersects:!0,esriSpatialRelContains:!0,esriSpatialRelWithin:!0,esriSpatialRelCrosses:!0,esriSpatialRelDisjoint:!0,esriSpatialRelTouches:!0,esriSpatialRelOverlaps:!0,esriSpatialRelEnvelopeIntersects:!0,esriSpatialRelIndexIntersects:!1,esriSpatialRelRelation:!1},R={esriGeometryPoint:!0,esriGeometryMultiPatch:!1,esriGeometryMultipoint:!0,esriGeometryPolyline:!0,esriGeometryPolygon:!0,esriGeometryEnvelope:!0},S={esriGeometryPoint:!0,esriGeometryMultiPatch:!0,esriGeometryMultipoint:!0,esriGeometryPolyline:!0,esriGeometryPolygon:!0,esriGeometryEnvelope:!1},g={esriSpatialRelIntersects:()=>new Promise((t,r)=>e(["../../../geometry/operators/json/intersectsOperator"],t,r)),esriSpatialRelContains:()=>new Promise((t,r)=>e(["../../../geometry/operators/json/containsOperator"],t,r)),esriSpatialRelCrosses:()=>new Promise((t,r)=>e(["../../../geometry/operators/json/crossesOperator"],t,r)),esriSpatialRelDisjoint:()=>new Promise((t,r)=>e(["../../../geometry/operators/json/disjointOperator"],t,r)),esriSpatialRelEnvelopeIntersects:null,esriSpatialRelIndexIntersects:null,esriSpatialRelOverlaps:()=>new Promise((t,r)=>e(["../../../geometry/operators/json/overlapsOperator"],t,r)),esriSpatialRelTouches:()=>new Promise((t,r)=>e(["../../../geometry/operators/json/touchesOperator"],t,r)),esriSpatialRelWithin:()=>new Promise((t,r)=>e(["../../../geometry/operators/json/withinOperator"],t,r)),esriSpatialRelRelation:null};t.canQueryWithRBush=function(e){if(n.isExtent(e))return!0;if(n.isPolygon(e)){for(const t of e.rings){if(5!==t.length)return!1;if(t[0][0]!==t[1][0]||t[0][0]!==t[4][0]||t[2][0]!==t[3][0]||t[0][1]!==t[3][1]||t[0][1]!==t[4][1]||t[1][1]!==t[2][1])return!1}return!0}return!1},t.checkSpatialQuerySupport=async function(e,t,o){const{spatialRel:i,geometry:a}=e;if(a){if(null==(l=i)||!0!==m[l])throw new r(c,"Unsupported query spatial relationship",{query:e});var l;if(s.isValid(a.spatialReference)&&s.isValid(o)){if(!function(e){return null!=e&&!0===R[n.getJsonType(e)]}(a))throw new r(c,"Unsupported query geometry type",{query:e});if(!function(e){return null!=e&&!0===S[e]}(t))throw new r(c,"Unsupported layer geometry type",{query:e});if(e.outSR)return y.checkProjectionSupport(e.geometry?.spatialReference,e.outSR)}}},t.getSpatialQueryOperator=async function(e,t,r,s,y){if(n.isPolygon(t)){if("esriGeometryPoint"===r&&("esriSpatialRelIntersects"===e||"esriSpatialRelContains"===e)){const e=l.convertFromPolygon(new p,t,!1,!1);return t=>a.polygonContainsPoint(e,!1,!1,t)}if("esriGeometryMultipoint"===r){const r=l.convertFromPolygon(new p,t,!1,!1);if("esriSpatialRelContains"===e)return e=>a.polygonContainsMultipoint(r,!1,!1,e,s,y)}}if(n.isExtent(t)){if("esriGeometryPoint"===r&&("esriSpatialRelIntersects"===e||"esriSpatialRelContains"===e))return e=>o.extentContainsPoint(t,u.getGeometry(r,s,y,e));if("esriGeometryMultipoint"===r&&"esriSpatialRelContains"===e)return e=>o.extentContainsMultipoint(t,u.getGeometry(r,s,y,e));if("esriSpatialRelIntersects"===e){const e=i.getExtentIntersector(r);return o=>e(t,u.getGeometry(r,s,y,o))}}"esriSpatialRelEnvelopeIntersects"===e&&(e="esriSpatialRelIntersects");const c=await function(e){const t=g[e];if(null==t)throw new Error(`Cannot load unsupported spatial operator: ${e}`);return t()}(e);return e=>c.execute(t,u.getGeometry(r,s,y,e))},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});