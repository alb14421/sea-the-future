// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/Error","../../../../core/has","../../../../core/promiseUtils","../../../../core/urlUtils","../../../../core/accessorSupport/decorators/property","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/support/spatialReferenceUtils","../../../support/infoFor3D","../../../support/source/DataLayerSource","../../../../rest/utils","../../../../rest/query/executeForCount","../../../../rest/query/executeForExtent","../../../../rest/query/executeForIds","../../../../rest/query/executeQueryJSON","../../../../rest/query/executeQueryPBF","../../../../rest/support/FeatureSet","../../../../rest/support/Query"],function(e,t,r,o,s,u,i,a,n,c,l,p,d,y,h,f,m,F,S,x,b,w,_){"use strict";const q=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));return t.default=class extends o{constructor(e){super(e),this.dynamicDataSource=null,this.fieldsIndex=null,this.gdbVersion=null,this.infoFor3D=null,this.pbfSupported=!1,this.queryAttachmentsSupported=!1,this.sourceSpatialReference=null,this.uniqueIdFields=null,this.url=null}get parsedUrl(){return a.urlToObject(this.url)}async execute(e,t){const r=await this.executeJSON(e,t);return this.featureSetFromJSON(e,r,t)}async executeJSON(e,t){const r=this._normalizeQuery(e),o=null!=e.outStatistics?.[0],s=u("featurelayer-pbf-statistics"),i=(!o||s)&&!0!==e.returnTrueCurves;let a;if(this.pbfSupported&&i)try{a=await b.executeRawQueryPBF(this.url,r,t,{uniqueIdFields:this.uniqueIdFields})}catch(e){if("query:parsing-pbf"!==e.name)throw e;this.pbfSupported=!1}return this.pbfSupported&&i||(a=await x.executeRawQueryJSON(this.url,r,t,{uniqueIdFields:this.uniqueIdFields})),this._normalizeFields(a.fields),a}async featureSetFromJSON(t,r,o){if(!this._queryIs3DObjectFormat(t)||null==this.infoFor3D||!r.features)return w.fromJSON(r);const{meshFeatureSetFromJSON:s}=await i.whenOrAbort(new Promise((t,r)=>e(["../../../../rest/support/meshFeatureSet"],t,r)),o);return s(t,this.infoFor3D,r)}executeForCount(e,t){return m.executeForCount(this.url,this._normalizeQuery(e),t,{uniqueIdFields:this.uniqueIdFields})}executeForExtent(e,t){return F.executeForExtent(this.url,this._normalizeQuery(e),t)}executeForIds(e,t){return S.executeForIds(this.url,this._normalizeQuery(e),t,{uniqueIdFields:this.uniqueIdFields})}async executeRelationshipQuery(t,r){const[{default:o},{executeRelationshipQuery:s}]=await i.whenOrAbort(Promise.all([new Promise((t,r)=>e(["../../../../rest/support/RelationshipQuery"],e=>t(q(e)),r)),new Promise((t,r)=>e(["../../../../rest/query/executeRelationshipQuery"],t,r))]),r);return t=o.from(t),(this.gdbVersion||this.dynamicDataSource)&&((t=t.clone()).gdbVersion=t.gdbVersion||this.gdbVersion,t.dynamicDataSource=t.dynamicDataSource||this.dynamicDataSource),s(this.url,t,r)}async executeRelationshipQueryForCount(t,r){const[{default:o},{executeRelationshipQueryForCount:s}]=await i.whenOrAbort(Promise.all([new Promise((t,r)=>e(["../../../../rest/support/RelationshipQuery"],e=>t(q(e)),r)),new Promise((t,r)=>e(["../../../../rest/query/executeRelationshipQuery"],t,r))]),r);return t=o.from(t),(this.gdbVersion||this.dynamicDataSource)&&((t=t.clone()).gdbVersion=t.gdbVersion||this.gdbVersion,t.dynamicDataSource=t.dynamicDataSource||this.dynamicDataSource),s(this.url,t,r)}async executeAttachmentQuery(t,r){const{executeAttachmentQuery:o,fetchAttachments:s,processAttachmentQueryResult:u}=await i.whenOrAbort(new Promise((t,r)=>e(["../../../../rest/query/operations/queryAttachments"],t,r)),r),a=f.parseUrl(this.url);return u(a,await(this.queryAttachmentsSupported?o(a,t,r):s(a,t,r)))}async executeAttributeBinsQuery(t,r){const{executeAttributeBinsQuery:o}=await i.whenOrAbort(new Promise((t,r)=>e(["../../../../rest/query/executeAttributeBinsQuery"],t,r)),r);return o(this.parsedUrl,t,r)}async executeTopFeaturesQuery(t,r){const{executeTopFeaturesQuery:o}=await i.whenOrAbort(new Promise((t,r)=>e(["../../../../rest/query/executeTopFeaturesQuery"],t,r)),r);return o(this.parsedUrl,t,this.sourceSpatialReference,r)}async executeForTopIds(t,r){const{executeForTopIds:o}=await i.whenOrAbort(new Promise((t,r)=>e(["../../../../rest/query/executeForTopIds"],t,r)),r);return o(this.parsedUrl,t,r)}async executeForTopExtents(t,r){const{executeForTopExtents:o}=await i.whenOrAbort(new Promise((t,r)=>e(["../../../../rest/query/executeForTopExtents"],t,r)),r);return o(this.parsedUrl,t,r)}async executeForTopCount(t,r){const{executeForTopCount:o}=await i.whenOrAbort(new Promise((t,r)=>e(["../../../../rest/query/executeForTopCount"],t,r)),r);return o(this.parsedUrl,t,r)}_normalizeQuery(e){let t=_.from(e);t.sourceSpatialReference=t.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(t=t===e?t.clone():t,t.gdbVersion=e.gdbVersion||this.gdbVersion,t.dynamicDataSource=e.dynamicDataSource?h.DataLayerSource.from(e.dynamicDataSource):this.dynamicDataSource);const{infoFor3D:r}=this;if(null!=r&&this._queryIs3DObjectFormat(e)){if(t=t===e?t.clone():t,t.formatOf3DObjects=y.getGltfQueryFormat(r),!t.formatOf3DObjects)throw new s("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(t.outSpatialReference&&!d.equals(t.outSpatialReference,this.sourceSpatialReference))throw new s("query:unsupported-out-spatial-reference","3D object feature services do not support projection of geometries");if(null==t.outFields||!t.outFields.includes("*")){t=t===e?t.clone():t,null==t.outFields&&(t.outFields=[]);const{originX:o,originY:s,originZ:u,translationX:i,translationY:a,translationZ:n,scaleX:c,scaleY:l,scaleZ:p,rotationX:d,rotationY:y,rotationZ:h,rotationDeg:f}=r.transformFieldRoles;t.outFields.push(o,s,u,i,a,n,c,l,p,d,y,h,f)}}return t}_normalizeFields(e){if(null!=this.fieldsIndex&&null!=e)for(const t of e){const e=this.fieldsIndex.get(t.name);e&&Object.assign(t,e.toJSON())}}_queryIs3DObjectFormat(e){return null!=this.infoFor3D&&!0===e.returnGeometry&&"xyFootprint"!==e.multipatchOption&&!e.outStatistics}},r.__decorate([n.property({type:h.DataLayerSource})],t.default.prototype,"dynamicDataSource",void 0),r.__decorate([n.property()],t.default.prototype,"fieldsIndex",void 0),r.__decorate([n.property()],t.default.prototype,"gdbVersion",void 0),r.__decorate([n.property()],t.default.prototype,"infoFor3D",void 0),r.__decorate([n.property({readOnly:!0})],t.default.prototype,"parsedUrl",null),r.__decorate([n.property()],t.default.prototype,"pbfSupported",void 0),r.__decorate([n.property()],t.default.prototype,"queryAttachmentsSupported",void 0),r.__decorate([n.property()],t.default.prototype,"sourceSpatialReference",void 0),r.__decorate([n.property()],t.default.prototype,"uniqueIdFields",void 0),r.__decorate([n.property({type:String})],t.default.prototype,"url",void 0),t.default=r.__decorate([p.subclass("esri.layers.graphics.sources.support.QueryTask")],t.default),t.default});