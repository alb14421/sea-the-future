// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/asyncUtils","../../../core/Collection","../../../core/has","../../../core/Error","../../../core/lang","../../../core/Logger","../../../core/maybe","../../../core/Promise","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/sql","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/support/UpdatingHandles","../../../geometry/projectionUtils","../../support/arcgisLayerUrl","../../support/featureLayerUtils","../../support/layerUtils","../../../rest/support/StatisticDefinition","../../../views/3d/layers/support/FeatureTileDescriptor","../../../views/3d/layers/support/FeatureTileFetcher3D","../../../views/3d/layers/support/FeatureTileFetcher3DDebugger","../../../views/3d/support/debugFlags"],function(e,t,i,r,s,a,l,o,n,u,h,c,d,p,y,_,m,f,F,g,D,v,x,C,w,T){"use strict";e.FeatureTileController3D=class extends(h.EsriPromiseMixin(i)){get dataUpdating(){return this._tileFetcher?.dataUpdating??!1}set extent(e){if(null!=e&&!e.spatialReference.equals(this.layerView.view.spatialReference))return void n.getLogger(this).error("#extent=","extent needs to be in the same spatial reference as the view");const t=this._get("extent");if(t===e)return;if(null!=t&&e&&t.equals(e))return;const i=null!=e?e.clone():null;this._set("extent",i)}get updating(){return!!(this._tileFetcher?.updating||null!=this._fetchDataInfoPromise||"tiles"===this.mode&&this.layerView.view.featureTiles?.updating||this._updatingHandles?.updating)}get updatingTotal(){return this.updating&&null!=this._tileFetcher?this._tileFetcher.updatingTotal:0}get updatingRemaining(){return this.updating&&null!=this._tileFetcher?this._tileFetcher.updatingRemaining:0}get expectedFeatureDiff(){return this.updating&&null!=this._tileFetcher?this._tileFetcher.expectedFeatureDiff:0}get memoryForUnusedFeatures(){return null!=this._tileFetcher?this._tileFetcher.memoryForUnusedFeatures:0}get maximumNumberOfFeaturesExceeded(){return!(null==this._tileFetcher||!this._tileFetcher.maximumNumberOfFeaturesExceeded)}get maximumNumberOfFeatures(){return this.displayFeatureLimit?.maximumNumberOfFeatures??0}set maximumNumberOfFeatures(e){e!==this.maximumNumberOfFeatures&&this._overrideIfSome("maximumNumberOfFeatures",e)}get hasMaximumNumberOfFeaturesOverride(){return this._isOverridden("maximumNumberOfFeatures")}get hasAllFeatures(){return this.serviceDataCount===V.noServiceDataCount&&"snapshot"===this.mode&&this.hasAllFeaturesInView||this.serviceDataCount===this.graphics.length}get hasAllFeaturesInView(){const e=this.context.effectiveDisplayFilter?.where||null,t=null!=e&&"1=1"!==e;return("tiles"!==this.mode||!t)&&(this._tileFetcher?.showsAllFeatures??!1)}get hasFullGeometries(){return this._tileFetcher?.hasFullGeometries??!1}get mode(){const e=this.layerView.layer;if("feature"===e.type&&null!=e.infoFor3D)return"snapshot";if("catalog-footprint"===e.type)return"tiles";if(this._forceTilesMode)return"tiles";const t=this.layerView.view;if(!1===t.qualitySettings?.graphics3D?.snapshotAvailable||this.serviceDataCount===V.noServiceDataCount||this._snapshotLimitExceeded||this.maximumNumberOfFeaturesExceeded||t.quality<1)return"tiles";const i=t&&t.featureTiles,r=i?.tilingScheme;if(e&&e.minScale&&this.serviceDataExtent&&r){const t=this._approximateExtentSizeAtScale(e.minScale,r);if((this.serviceDataExtent.width/t+this.serviceDataExtent.height/t)/2>V.maxSnapshotMinScaleFactor)return"tiles"}return!this.maximumNumberOfFeatures||this.serviceDataCount<=this.maximumNumberOfFeatures?"snapshot":"tiles"}get maxTotalSnapshotVertices(){const e=this._get("maxTotalSnapshotVertices")||0,t="snapshot"===this.mode&&this._tileFetcher?.totalVertices||0;return Math.max(e,t)}_approximateExtentSizeAtScale(e,t){const i=this.layerView.view,r=Math.ceil((i.width/t.pixelSize+i.height/t.pixelSize)/2),s=t.levels[0];return r*((s.tileSize[0]/(s.scale/e)+s.tileSize[1]/(s.scale/e))/2)}get tileDescriptors(){if("snapshot"===this.mode){const e=new x.FeatureTileDescriptor(0,0,0,null,x.virtualSnapshotTileId);return new s([e])}const e=this.layerView.view.featureTiles;if(!e)return new s;const t=e.tiles;if(this.layerView.displayFilterEnabled&&null!=this.layerView.effectiveDisplayFilterClause&&"1=1"!==this.layerView.effectiveDisplayFilterClause){const e=new x.FeatureTileDescriptor(0,0,0,this.layerView.view.featureTiles?.tilingScheme,x.virtualDisplayFilterHighlightTileId);return new s([...t,e])}return t}get test(){}constructor(e){super(e),this.type="feature-tile-3d",this._updatingHandles=new m.UpdatingHandles,this.serviceDataExtent=null,this.serviceDataCount=V.noServiceDataCount,this._snapshotLimitExceeded=!1,this.displayFeatureLimit=null,this._forceTilesMode=!1,this._suspended=!1,this._tileFetcher=null,this._fetchDataInfoPromise=null,this._fetchDataInfoAbortController=null,this._lifeCycleAbortController=new AbortController}initialize(){this._updatingHandles.add(()=>this.displayFeatureLimit,e=>this._updatingHandles.addPromise(this._updateSnapshotLimit(e,null,this._lifeCycleAbortController.signal))),this._updatingHandles.add(()=>this.mode,()=>this._modeChanged(),d.initial),this._updatingHandles.add(()=>this.mode,(e,t)=>{"tiles"===e&&"snapshot"===t&&(this._forceTilesMode=!0)},d.initial),this.addResolvingPromise(Promise.resolve().then(()=>this._verifyCapabilities()).then(()=>this._updatingHandles.addPromise(this._fetchServiceDataInfo())).then(()=>this._initializeTileFetcher()))}_verifyCapabilities(){const e=this.layerView.layer;if("ogc-feature"!==e.type&&!D.getEffectiveLayerCapabilities(e)?.operations.supportsQuery)throw new l("graphicscontroller:query-capability-required","Service requires query capabilities to be used as a feature layer",{layer:e})}destroy(){this._cancelFetchServiceDataInfo(),this._tileFetcher=u.destroyMaybe(this._tileFetcher),this._tilesHandle=u.removeMaybe(this._tilesHandle),this._lifeCycleAbortController=u.abortMaybe(this._lifeCycleAbortController),this._updatingHandles.destroy(),this._set("_updatingHandles",null)}suspend(){this._suspended||(this._suspended=!0,null!=this._tileFetcher&&this._tileFetcher.suspend())}resume(){this._suspended&&(this._suspended=!1,null!=this._tileFetcher&&this._tileFetcher.resume())}restart(){const e=()=>{null!=this._tileFetcher&&this._tileFetcher.restart()};this._updatingHandles.addPromise(this._fetchServiceDataInfo().then(e,e))}refetch(){this._refetch({resetForceTilesMode:!1})}getMissingAttributesForFeature(e){return this._tileFetcher?.getMissingAttributesForFeature(e)}_refetch(e){const t=()=>{null!=this._tileFetcher&&(e.resetForceTilesMode&&(this._forceTilesMode=!1),this._tileFetcher.refetch())};this._updatingHandles.addPromise(this._fetchServiceDataInfo().then(t,t))}_initializeTileFetcher(){const e=this.layerView.view;if(!e)return;const{layerView:t,tileDescriptors:i}=this,r=t.layer,s=new C.FeatureTileFetcher3D({context:this.context,filterExtent:this.extent,tileDescriptors:i,features:this.graphics});this._tileFetcher=s,this._suspended?s.suspend():s.resume(),e&&this.addHandles(d.watch(()=>e.quality,e=>s.memoryFactor=e,d.syncAndInitial));const a="polygon"===this.context.geometryType?"polygonLodFactor":"polyline"===this.context.geometryType?"polylineLodFactor":null;a&&this.addHandles(d.watch(()=>this.layerView.view?.qualitySettings?.graphics3D?.[a],e=>s.lodFactor=e||1,d.initial)),"ogc-feature"!==r.type&&this._updatingHandles.add(()=>r.createQueryVersion,()=>this._dataFilterChanged()),this._updatingHandles.add(()=>this.layerView.effectiveDisplayFilter,()=>this._effectiveDisplayFilterChanged()),this._updatingHandles.add(()=>this.layerView.highlightIds,()=>this._displayFilterHighlightIdsChanged()),this._updatingHandles.add(()=>t.availableFields,(e,t)=>this._availableFieldsChanged(t,e)),this._updatingHandles.add(()=>t.requiredFields,(e,t)=>this._requiredFieldsChanged(t,e)),"customParameters"in r&&this._updatingHandles.add(()=>r.customParameters,()=>this.restart()),this.addHandles([r.on("apply-edits",e=>this._applyEdits(e)),d.watch(()=>this.extent,e=>s.filterExtent=e,d.sync),d.watch(()=>this.tileDescriptors,e=>s.tileDescriptors=e,d.sync),d.watch(()=>this.maximumNumberOfFeatures,e=>{s.maximumNumberOfFeatures=e,s.useTileCount=this.serviceDataCount>e},d.syncAndInitial),d.watch(()=>this.serviceDataCount,e=>{s.useTileCount=e>this.maximumNumberOfFeatures},d.syncAndInitial),d.watch(()=>({featureTiles:e.featureTiles,show:T.debugFlags.FEATURE_TILE_FETCH_SHOW_TILES}),({show:t,featureTiles:i})=>{t&&s&&i?s.debugger??=new w.FeatureTileFetcher3DDebugger(s,i.tilingScheme.toTileInfo(),e):s.debugger=u.destroyMaybe(s.debugger)},d.initial)]),this._supportsExceedsLimitQuery||this._updatingHandles.add(()=>this.maxTotalSnapshotVertices,()=>this._updatingHandles.addPromise(this._updateSnapshotLimit(this.displayFeatureLimit,null,this._lifeCycleAbortController.signal)))}_modeChanged(){switch(this.mode){case"tiles":this._tilesHandle||(this._tilesHandle=this.layerView.view.enableFeatureTiles());break;default:n.getLogger(this).warn("Unhandled feature layer mode "+this.mode);case"snapshot":null!=this._tilesHandle&&(this._tilesHandle.remove(),this._tilesHandle=null)}}_dataFilterChanged(){this._set("maxTotalSnapshotVertices",0),this.notifyChange("maxTotalSnapshotVertices"),this._refetch({resetForceTilesMode:!0})}_effectiveDisplayFilterChanged(){"snapshot"!==this.mode&&this._refetch({resetForceTilesMode:!1})}_displayFilterHighlightIdsChanged(){"snapshot"!==this.mode&&null!=this._tileFetcher&&this._tileFetcher.refetchDisplayFilterHighlightTile()}_applyEdits(e){const t=this.layerView.layer;null!=this._tileFetcher&&this._tileFetcher.applyEdits(e).then(e=>{if(e){if(!this._lifeCycleAbortController)throw c.createAbortError();e.exceededTransferLimit&&"refresh"in t?t.refresh():(e.deletedFeatures.length||e.updatedFeatures.length||e.addedFeatures.length)&&this._updatingHandles.addPromise(this._updateServiceDataExtent(this._lifeCycleAbortController.signal))}}).catch(e=>{if(!c.isAbortError(e))throw e})}_availableFieldsChanged(e,t){null!=this._tileFetcher&&E(this._tileFetcher.availableFields,t)&&this._refetch({resetForceTilesMode:!1})}_requiredFieldsChanged(e,t){null!=this._tileFetcher&&E(this._tileFetcher.availableFields,t)&&this.restart()}_createVertexLimitExceededQuery(e){const t=this.layerView.layer,i=t.createQuery();return i.returnGeometry=!1,i.outStatistics=[new v({statisticType:"exceedslimit",maxVertexCount:e,outStatisticFieldName:"exceedslimit",maxPointCount:1e8,maxRecordCount:1e8})],t.capabilities?.query.supportsCacheHint&&(i.cacheHint=!0),i}_createDataInfoQuery(){const e=this.layerView.layer,t=this.layerView,i=e.createQuery();return i.returnGeometry=!1,i.outSpatialReference=this.layerView.view.spatialReference,e.capabilities?.query.supportsCacheHint&&(i.cacheHint=!0),t.effectiveDisplayFilter&&(i.where=p.sqlAnd(i.where,t.effectiveDisplayFilter.where)),i}_fullExtentIsAccurate(){const e=this.layerView.layer;if("definitionExpression"in e&&e.definitionExpression)return!1;switch(e.type){case"feature":case"catalog-footprint":case"oriented-imagery":return F.isHostedAgolService(e.url);case"csv":case"geojson":case"ogc-feature":case"wfs":return!0;default:return}}async _updateServiceDataExtent(e){try{await this._tryUpdateServiceDataExtent(e)}catch(e){c.isAbortError(e)||this._set("serviceDataExtent",o.clone(this.layerView.fullExtentInLocalViewSpatialReference)??null)}}async _tryUpdateServiceDataExtent(e){const t=this.layerView,i=t.layer,r=i.capabilities?.query.supportsExtent??!1,s=o.clone(t.fullExtentInLocalViewSpatialReference),a=i.fullExtent,l=this._fullExtentIsAccurate(),n=this.serviceDataCount;if(r&&n<=V.maxFeatureCountForExtent&&(!s||!l)&&"queryExtent"in i){const t=this._createDataInfoQuery(),r=await i.queryExtent(t,{timeout:V.queryExtentTimeout,signal:e});this._set("serviceDataExtent",r.extent)}else if(s)this._set("serviceDataExtent",s);else if(null!=a){const e=a.spatialReference?await f.projectWithZConversion(a,t.view.spatialReference):null;this._set("serviceDataExtent",e??null)}else this._set("serviceDataExtent",null)}async _updateServiceDataCount(e){const t=this.layerView.layer;if(!("queryFeatureCount"in t)||!a("featurelayer-snapshot-enabled"))return void this._set("serviceDataCount",V.noServiceDataCount);const i=await r.result(t.queryFeatureCount(this._createDataInfoQuery(),{timeout:V.queryStatisticsTimeout,signal:e}));if(!0===i.ok)this._set("serviceDataCount",i.value);else{if(c.isAbortError(i.error))throw i.error;this._set("serviceDataCount",V.noServiceDataCount)}}get _supportsExceedsLimitQuery(){const e=this.layerView.layer;return null!=e.capabilities&&e.capabilities.operations&&e.capabilities.operations.supportsExceedsLimitStatistics}get _minimumNumberOfVerticesForGeometry(){switch(this.layerView.layer.geometryType){case"point":case"multipoint":return 1;case"polygon":return 4;case"polyline":return 2;case"multipatch":case"mesh":return 3;default:return 0}}async _updateSnapshotLimit(e,t,i){if(null==e?.averageSymbolComplexity)return void(this._snapshotLimitExceeded=!1);const{maximumTotalNumberOfVertices:s,averageSymbolComplexity:l}=e,{verticesPerFeature:o,verticesPerCoordinate:n}=l,u=o<=0,h=this._minimumNumberOfVerticesForGeometry>1;if(!u&&!h)return void(this._snapshotLimitExceeded=!1);0!==o&&null!=t&&await t;const d=Math.min(s,b),p=this.serviceDataCount,y=p!==V.noServiceDataCount;let _=y?Math.ceil((d-p*o)/(n||1)):Math.ceil(d/(n||1));if(h&&(_=Math.min(_,S)),y&&this._minimumNumberOfVerticesForGeometry*p>_)return void(this._snapshotLimitExceeded=!0);if(!this._supportsExceedsLimitQuery||!a("featurelayer-snapshot-enabled"))return void(this._snapshotLimitExceeded=this.maxTotalSnapshotVertices>_);const m=await r.result(this.layerView.layer.queryFeatures(this._createVertexLimitExceededQuery(_),{timeout:V.queryStatisticsTimeout,signal:i}));if(!1===m.ok){if(c.isAbortError(m.error))throw m.error;return void(this._snapshotLimitExceeded=!1)}const f=m.value.features[0];this._snapshotLimitExceeded=!!f?.attributes&&!!f.attributes.exceedslimit}async _fetchServiceDataInfo(){this._cancelFetchServiceDataInfo(),await g.checkServiceCurrentUserSupport(this.layerView.layer);let e=new AbortController;const t=e.signal,i=this._updateServiceDataCount(t),r=Promise.allSettled([i,this._updateSnapshotLimit(this.displayFeatureLimit,i,t)]),s=r.then(()=>this._updateServiceDataExtent(t)).catch(e=>{c.isAbortError(e)||n.getLogger(this).error("#fetchServiceDataInfo()",e)}).then(()=>{s===this._fetchDataInfoPromise&&(this._fetchDataInfoPromise=null,this._fetchDataInfoAbortController=null),e=null});return e&&(this._fetchDataInfoPromise=s),this._fetchDataInfoAbortController=e,r.then(()=>{},()=>{})}_cancelFetchServiceDataInfo(){const e=this._fetchDataInfoAbortController;e&&(this._fetchDataInfoAbortController=null,this._fetchDataInfoPromise=null,e.abort())}get performanceInfo(){return{storedFeatures:this._tileFetcher?.storedFeatures??0,totalFeatures:this._tileFetcher?.totalFeatures??0,totalVertices:this._tileFetcher?.totalVertices??0,missingTiles:this._tileFetcher?.missingTiles??0}}},t.__decorate([y.property({readOnly:!0})],e.FeatureTileController3D.prototype,"type",void 0),t.__decorate([y.property({constructOnly:!0})],e.FeatureTileController3D.prototype,"graphics",void 0),t.__decorate([y.property({constructOnly:!0})],e.FeatureTileController3D.prototype,"layerView",void 0),t.__decorate([y.property({constructOnly:!0})],e.FeatureTileController3D.prototype,"context",void 0),t.__decorate([y.property({readOnly:!0})],e.FeatureTileController3D.prototype,"dataUpdating",null),t.__decorate([y.property()],e.FeatureTileController3D.prototype,"extent",null),t.__decorate([y.property()],e.FeatureTileController3D.prototype,"updating",null),t.__decorate([y.property({readOnly:!0})],e.FeatureTileController3D.prototype,"_updatingHandles",void 0),t.__decorate([y.property()],e.FeatureTileController3D.prototype,"updatingTotal",null),t.__decorate([y.property()],e.FeatureTileController3D.prototype,"updatingRemaining",null),t.__decorate([y.property()],e.FeatureTileController3D.prototype,"expectedFeatureDiff",null),t.__decorate([y.property()],e.FeatureTileController3D.prototype,"memoryForUnusedFeatures",null),t.__decorate([y.property()],e.FeatureTileController3D.prototype,"maximumNumberOfFeaturesExceeded",null),t.__decorate([y.property({readOnly:!0})],e.FeatureTileController3D.prototype,"serviceDataExtent",void 0),t.__decorate([y.property({readOnly:!0})],e.FeatureTileController3D.prototype,"serviceDataCount",void 0),t.__decorate([y.property()],e.FeatureTileController3D.prototype,"_snapshotLimitExceeded",void 0),t.__decorate([y.property()],e.FeatureTileController3D.prototype,"displayFeatureLimit",void 0),t.__decorate([y.property({type:Number})],e.FeatureTileController3D.prototype,"maximumNumberOfFeatures",null),t.__decorate([y.property({readOnly:!0})],e.FeatureTileController3D.prototype,"hasAllFeatures",null),t.__decorate([y.property({readOnly:!0})],e.FeatureTileController3D.prototype,"hasAllFeaturesInView",null),t.__decorate([y.property({readOnly:!0})],e.FeatureTileController3D.prototype,"hasFullGeometries",null),t.__decorate([y.property()],e.FeatureTileController3D.prototype,"_forceTilesMode",void 0),t.__decorate([y.property({readOnly:!0})],e.FeatureTileController3D.prototype,"mode",null),t.__decorate([y.property({readOnly:!0})],e.FeatureTileController3D.prototype,"maxTotalSnapshotVertices",null),t.__decorate([y.property({readOnly:!0})],e.FeatureTileController3D.prototype,"tileDescriptors",null),t.__decorate([y.property()],e.FeatureTileController3D.prototype,"_tileFetcher",void 0),t.__decorate([y.property()],e.FeatureTileController3D.prototype,"_fetchDataInfoPromise",void 0),e.FeatureTileController3D=t.__decorate([_.subclass("esri.layers.graphics.controllers.FeatureTileController3D")],e.FeatureTileController3D);const b=1e6,S=5e6;function E(e,t){if(!t)return!1;for(const i of t)if(!e.has(i))return!0;return!1}class V{static{this.noServiceDataCount=1/0}static{this.maxSnapshotMinScaleFactor=5}static reset(){V.maxFeatureCountForExtent=1e4,V.queryStatisticsTimeout=12e3,V.queryExtentTimeout=1e4}}V.reset(),e.FeatureTileController3DConstants=V,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});