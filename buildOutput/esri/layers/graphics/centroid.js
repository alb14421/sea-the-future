// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports"],function(t){"use strict";function n(t,n){return t?n?4:3:n?3:2}function e(t,e,r,I,o,u){const l=n(o,u);let N=r,s=r+l,c=0,i=0,f=0,T=0,g=0;for(let n=0,r=I-1;n<r;n++,N+=l,s+=l){const n=e[N],r=e[N+1],I=e[N+2],u=e[s],l=e[s+1],h=e[s+2];let E=n*l-u*r;T+=E,c+=(n+u)*E,i+=(r+l)*E,o&&(E=n*h-u*I,f+=(I+h)*E,g+=E),n<t[0]&&(t[0]=n),n>t[1]&&(t[1]=n),r<t[2]&&(t[2]=r),r>t[3]&&(t[3]=r),o&&(I<t[4]&&(t[4]=I),I>t[5]&&(t[5]=I))}if(T>0&&(T*=-1),g>0&&(g*=-1),!T)return null;const h=[c,i,.5*T];return o&&(h[3]=f,h[4]=.5*g),h}function r(t,e,r,N,s){const c=n(N,s);let i=e,f=e+c,T=0,g=0,h=0,E=0;for(let n=0,e=r-1;n<e;n++,i+=c,f+=c){const n=t[i],e=t[i+1],r=t[i+2],s=t[f],c=t[f+1],m=t[f+2],b=N?o(n,e,r,s,c,m):I(n,e,s,c);if(b)if(T+=b,N){const t=l(n,e,r,s,c,m);g+=b*t[0],h+=b*t[1],E+=b*t[2]}else{const t=u(n,e,s,c);g+=b*t[0],h+=b*t[1]}}return T>0?N?[g/T,h/T,E/T]:[g/T,h/T]:r>0?N?[t[e],t[e+1],t[e+2]]:[t[e],t[e+1]]:null}function I(t,n,e,r){const I=e-t,o=r-n;return Math.sqrt(I*I+o*o)}function o(t,n,e,r,I,o){const u=r-t,l=I-n,N=o-e;return Math.sqrt(u*u+l*l+N*N)}function u(t,n,e,r){return[t+.5*(e-t),n+.5*(r-n)]}function l(t,n,e,r,I,o){return[t+.5*(r-t),n+.5*(I-n),e+.5*(o-e)]}t.getCentroidOptimizedGeometry=function(t,I,o,u){if(!I?.lengths.length)return null;t.lengths.length&&(t.lengths.length=0),t.coords.length&&(t.coords.length=0);const l=t.coords,N=[],s=o?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:c,coords:i}=I,f=n(o,u);let T=0;for(const t of c){const n=e(s,i,T,t,o,u);n&&N.push(n),T+=t*f}if(N.sort((t,n)=>{let e=t[2]-n[2];return 0===e&&o&&(e=t[4]-n[4]),e}),N.length){let t=6*N[0][2];l[0]=N[0][0]/t,l[1]=N[0][1]/t,o&&(t=6*N[0][4],l[2]=0!==t?N[0][3]/t:0),(l[0]<s[0]||l[0]>s[1]||l[1]<s[2]||l[1]>s[3]||o&&(l[2]<s[4]||l[2]>s[5]))&&(l.length=0)}if(!l.length){const t=I.lengths[0]?r(i,0,c[0],o,u):null;if(!t)return null;l[0]=t[0],l[1]=t[1],o&&t.length>2&&(l[2]=t[2])}return t},t.lineCentroid=r,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});