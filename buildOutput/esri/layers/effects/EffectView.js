// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/Accessor","../../core/has","../../core/lang","../../core/Logger","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/subclass","./parser","./utils"],function(t,e,s,r,i,c,n,f,o,l){"use strict";function a(t){const e=o.parse(t)||[];return function(t){const e=t[0];return!!e&&"type"in e}(e)?[{scale:-1,effects:e}]:e}function h(t,e,s){return!t[0]?.effects||!e[0]?.effects||!((-1===t[0]?.scale||-1===e[0]?.scale)&&(t.length>1||e.length>1)&&s<=0)&&l.canInterpolateEffects(t[0].effects,e[0].effects)}function _(t,e,s){const r=t.length>e.length?t:e,i=t.length>e.length?e:t,c=i[i.length-1],n=c?.scale??s,f=c?.effects??[];for(let t=i.length;t<r.length;t++)i.push({scale:n,effects:[...f]});for(let t=0;t<r.length;t++)i[t].scale=-1===i[t].scale?s:i[t].scale,r[t].scale=-1===r[t].scale?s:r[t].scale,l.normalizeEffects(i[t].effects,r[t].effects)}function u(t,e,s){return t+(e-t)*s}t.EffectView=class extends s{constructor(t){super(t),this._from=null,this._to=null,this._final=null,this._current=[],this._time=0,this.duration=r("mapview-transitions-duration"),this.effects=[]}set effect(t){if(this._get("effect")!==(t=t||"")){this._set("effect",t);try{this._transitionTo(a(t))}catch(e){this._transitionTo([]),c.getLogger(this).warn("Invalid Effect",{effect:t,error:e})}}}get final(){return this._final}get hasEffects(){return this.transitioning||!!this.effects.length}set scale(t){this._updateForScale(t)}get transitioning(){return null!==this._to}canTransitionTo(t){try{return this.scale>0&&h(this._current,a(t),this.scale)}catch{return!1}}transitionStep(t,e){this._applyTimeTransition(t),this._updateForScale(e)}endTransition(){this._applyTimeTransition(this.duration)}_transitionTo(t){this.scale>0&&h(this._current,t,this.scale)?(this._final=t,this._to=i.clone(t),_(this._current,this._to,this.scale),this._from=i.clone(this._current),this._time=0):(this._from=this._to=this._final=null,this._current=t),this._set("effects",this._current[0]?i.clone(this._current[0].effects):[])}_applyTimeTransition(t){if(!(this._to&&this._from&&this._current&&this._final))return;this._time+=t;const e=Math.min(1,this._time/this.duration);for(let t=0;t<this._current.length;t++){const s=this._current[t],r=this._from[t],i=this._to[t];s.scale=u(r.scale,i.scale,e);for(let t=0;t<s.effects.length;t++){const c=s.effects[t],n=r.effects[t],f=i.effects[t];c.interpolate(n,f,e)}}1===e&&(this._current=this._final,this._set("effects",this._current[0]?i.clone(this._current[0].effects):[]),this._from=this._to=this._final=null)}_updateForScale(t){if(this._set("scale",t),0===this._current.length)return;const e=this._current,s=this._current.length-1;let r,i,c=1;if(1===e.length||t>=e[0].scale)i=r=e[0].effects;else if(t<=e[s].scale)i=r=e[s].effects;else for(let n=0;n<s;n++){const s=e[n],f=e[n+1];if(s.scale>=t&&f.scale<=t){c=(t-s.scale)/(f.scale-s.scale),r=s.effects,i=f.effects;break}}for(let t=0;t<this.effects.length;t++)this.effects[t].interpolate(r[t],i[t],c)}},e.__decorate([n.property()],t.EffectView.prototype,"_to",void 0),e.__decorate([n.property()],t.EffectView.prototype,"duration",void 0),e.__decorate([n.property({value:""})],t.EffectView.prototype,"effect",null),e.__decorate([n.property({readOnly:!0})],t.EffectView.prototype,"effects",void 0),e.__decorate([n.property({readOnly:!0})],t.EffectView.prototype,"final",null),e.__decorate([n.property({readOnly:!0})],t.EffectView.prototype,"hasEffects",null),e.__decorate([n.property({value:0})],t.EffectView.prototype,"scale",null),e.__decorate([n.property({readOnly:!0})],t.EffectView.prototype,"transitioning",null),t.EffectView=e.__decorate([f.subclass("esri.layers.effects.EffectView")],t.EffectView),t.canInterpolateEffectStops=h,t.convertEffectToStops=a,t.normalizeEffectStops=_,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});