// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../request","../../core/Error","../../core/promiseUtils","../support/rasterDatasets/wcsCapabilitiesParser","../support/rasterDatasets/wcsCoverageParser"],function(e,r,s,t,a,i){"use strict";e.describeCoverage=async function(e,a){const{coverageIds:o,version:n,customParameters:c,signal:p}=a,l=n.slice(0,3),u="1.0"===l?"coverage":"1.1"===l?"identifiers":"coverageId",v={service:"WCS",request:"DescribeCoverage",version:n,[u]:o.join(","),...c};try{const{data:s}=await r(e,{query:v,responseType:"xml",signal:p});return i.parseCoverages(s,n)}catch(e){if(!t.isAbortError(e))throw new s("wcslayer:open","wcs coverage description is not valid or supported");throw e}},e.getCapabilities=async function(e,i){const{version:o,customParameters:n,signal:c}=i??{},p=o?.startsWith("1.0")?"version":"acceptVersions",l={service:"WCS",request:"GetCapabilities",[p]:o,...n};try{let{data:s}=await r(e,{query:l,responseType:"xml",signal:c});return i?.version||a.isSupportedVersion(s)||(l[p]="2.0.1",({data:s}=await r(e,{query:l,responseType:"xml",signal:c}))),a.parseCapabilities(s)}catch(e){if(!t.isAbortError(e))throw new s("wcslayer:open","wcs capabilities is not valid or supported");throw e}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});