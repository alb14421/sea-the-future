// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../chunks/tslib.es6","../PopupTemplate","../request","../core/Clonable","../core/Collection","../core/Error","../core/lang","../core/Logger","../core/maybe","../core/MultiOriginJSONSupport","../core/object","../core/promiseUtils","../core/sql","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/cast","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../core/accessorSupport/layerContainerType","../form/FormTemplate","../geometry/SpatialReference","../graphic/FeatureGraphicOrigin","./Layer","./graphics/sources/MemorySource","./mixins/APIKeyMixin","./mixins/ArcGISService","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/DisplayFilteredLayer","./mixins/EditBusLayer","./mixins/FeatureEffectLayer","./mixins/FeatureLayerBase","./mixins/FeatureReductionLayer","./mixins/OperationalLayer","./mixins/OrderedLayer","./mixins/PortalLayer","./mixins/PublishableLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./mixins/TemporalLayer","./mixins/TrackableLayer","./support/arcgisLayerUrl","./support/commonProperties","./support/featureLayerUtils","./support/FeatureTemplate","./support/FeatureType","./support/fieldProperties","./support/fieldUtils","./support/LabelClass","./support/labelingInfo","./support/serviceCapabilitiesUtils","./support/TimeInfo","./support/TitleCreator","./support/versionUtils","./support/source/DataLayerSource","../renderers/support/jsonUtils","../renderers/support/styleUtils","../renderers/support/typeUtils","../rest/support/FeatureSet","../rest/support/Query","../support/guards","../support/popupUtils","../symbols/support/typeUtils","../webdoc/support/opacityUtils"],function(e,t,r,i,a,o,s,n,l,d,p,u,y,c,f,h,m,b,_,g,w,T,F,v,S,I,E,L,D,x,P,C,j,O,M,q,A,R,V,Q,U,B,N,G,J,$,W,z,K,Z,k,H,X,Y,ee,te,re,ie,ae,oe,se,ne,le,de,pe,ue){"use strict";const ye=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),ce="FeatureLayer";function fe(e,t){return new n("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}function he(e){return e&&e instanceof s}const me=K.defineFieldProperties();function be(e,t,r){const i=!!r?.writeLayerSchema;return{enabled:i,ignoreOrigin:i}}return t.default=class extends(O.FeatureLayerBase(M.FeatureReductionLayer(j.FeatureEffectLayer(V.PublishableLayer(C.EditBusLayer(P.DisplayFilteredLayer(D.BlendLayer(A.OrderedLayer(B.TemporalLayer(N.TrackableLayer(U.ScaleRangeLayer(Q.RefreshableLayer(L.ArcGISService(q.OperationalLayer(R.PortalLayer(u.MultiOriginJSONMixin(x.CustomParametersMixin(E.APIKeyMixin(o.ClonableMixin(S)))))))))))))))))))){constructor(...t){super(...t),this.attributeTableTemplate=null,this.charts=null,this.copyright=null,this.displayField=null,this.dynamicDataSource=null,this.fields=null,this.fieldsIndex=null,this.formTemplate=null,this.fullExtent=null,this.geometryType=null,this.graphicOrigin=new v(this),this.hasM=void 0,this.hasZ=void 0,this.infoFor3D=null,this.isTable=!1,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="ArcGISFeatureLayer",this.outFields=null,this.path=null,this.popupEnabled=!0,this.popupTemplate=null,this.resourceInfo=null,this.screenSizePerspectiveEnabled=!0,this.spatialReference=F.WGS84,this.subtypeCode=null,this.supportedSourceTypes=new Set(["Feature Layer","Oriented Imagery Layer","Table","Catalog Layer"]),this.templates=null,this.timeInfo=null,this.title=null,this.sublayerTitleMode="item-title",this.type="feature",this.typeIdField=null,this.types=null,this.visible=!0,this._debouncedSaveOperations=c.debounce(async(t,r,i)=>{const{save:a,saveAs:o}=await new Promise((t,r)=>e(["./save/featureLayerUtils"],t,r));switch(t){case 0:return a(this,r);case 1:return o(this,i,r)}})}destroy(){this.source?.destroy()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;if(this.portalItem?.loaded&&this.source)return this.addResolvingPromise(this.createGraphicsSource(t).then(e=>this.initLayerProperties(e))),Promise.resolve(this);const r=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection","Scene Service"]},e).catch(c.throwIfAbortError).then(async()=>{if(this.url&&null==this.layerId&&/FeatureServer|MapServer\/*$/i.test(this.url)){const e=await this._fetchFirstValidLayerId(t);null!=e&&(this.layerId=e)}if(!this.url&&!this._hasMemorySource())throw new n("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this.initLayerProperties(await this.createGraphicsSource(t))}).then(()=>$.ensureLayerCredential(this,"load",e));return this.addResolvingPromise(r),Promise.resolve(this)}get _titleCreator(){const e=this._get("_titleCreator");return p.destroyMaybe(e),new ee({fieldsIndex:this.fieldsIndex,objectIdField:this.objectIdField,fields:this.fields,displayField:this.displayField,effectivePopupTemplate:this.popupTemplate??this.defaultPopupTemplate})}readCapabilities(e,t){return t=t.layerDefinition||t,X.getFeatureLayerCapabilities(t,this.url)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("dynamicDataSource"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){return!(this.loaded&&!this.capabilities?.operations.supportsEditing)&&(this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges)}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}readEditingEnabled(e,t){return this._readEditingEnabled(t,!1)}readEditingEnabledFromWebMap(e,t,r){return this._readEditingEnabled(t,!0,r)}writeEditingEnabled(e,t){this._writeEditingEnabled(e,t,!1)}writeEditingEnabledToWebMap(e,t,r,i){this._writeEditingEnabled(e,t,!0,i)}get effectiveEditingEnabled(){return $.computeEffectiveEditingEnabled(this)}get featureTitleFields(){return[...this._titleCreator.requiredFields]}readIsTable(e,t){return"Table"===(t=t?.layerDefinition??t).type||!t.geometryType}writeIsTable(e,t,r,i){i?.writeLayerSchema&&y.setDeepValue(r,e?"Table":"Feature Layer",t)}readGlobalIdField(e,t){return $.readGlobalIdField(t.layerDefinition||t)}readObjectIdField(e,t){return $.readObjectIdField(t.layerDefinition||t)}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){Z.fixRendererFields(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,r){t=t.layerDefinition||t;const i=t.drawingInfo?.renderer;if(i){const e=ie.read(i,t,r)??void 0;return e||d.getLogger(this).error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:r}),e}return $.createDefaultRenderer(t,r)}set source(e){const t=this._get("source");t!==e&&(he(t)&&this._resetMemorySource(t),he(e)&&this._initMemorySource(e),this._set("source",e))}castSource(e){return e?Array.isArray(e)||e instanceof s?new I.MemorySource({layer:this,items:e}):e:null}readSource(e,t){const r=se.fromJSON(t.featureSet);return new I.MemorySource({layer:this,items:r?.features??[]})}readTemplates(e,t){const r=t.editFieldsInfo,i=r?.creatorField,a=r?.editorField;return e=e?.map(e=>W.fromJSON(e)),this._fixTemplates(e,i),this._fixTemplates(e,a),e}readTitle(e,t){const r=t.layerDefinition?.name??t.name,i=t.title||t.layerDefinition?.title;if(r){const e=this.portalItem?.title;if("item-title"===this.sublayerTitleMode)return this.url?G.titleFromUrlAndName(this.url,r):r;let t=r;if(!t&&this.url){const e=G.parse(this.url);null!=e&&(t=e.title)}if(!t)return;return"item-title-and-service-name"===this.sublayerTitleMode&&e&&e!==t&&(t=e+" - "+t),G.cleanTitle(t)}if("item-title"===this.sublayerTitleMode&&i)return i}readTitleFromWebMap(e,t){return t.title||t.layerDefinition?.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const e=t.fields.find(e=>e.name.toLowerCase()===r);e&&(r=e.name)}return r}readTypes(e,t){e=(t=t.layerDefinition||t).types;const r=t.editFieldsInfo,i=r?.creatorField,a=r?.editorField;return e?.map(e=>(e=z.fromJSON(e),this._fixTemplates(e.templates,i),this._fixTemplates(e.templates,a),e))}readVisible(e,t){return null!=t.layerDefinition?.defaultVisibility?!!t.layerDefinition.defaultVisibility:null!=t.visibility?!!t.visibility:void 0}async addAttachment(e,t){const r=await $.addAttachment(this,e,t,ce);return this.lastEditsEventDate=new Date,r}async updateAttachment(e,t,r){const i=await $.updateAttachment(this,e,t,r,ce);return this.lastEditsEventDate=new Date,i}async applyEdits(e,t){return $.applyEdits(this,e,t)}async uploadAssets(e,t){return $.uploadAssets(this,e,t)}createPopupTemplate(e){return de.createPopupTemplate(this,e)}async createGraphicsSource(t){if(this._hasMemorySource()&&this.source)return this.source.load({signal:t});const{default:r}=await c.whenOrAbort(new Promise((t,r)=>e(["./graphics/sources/FeatureLayerSource"],e=>t(ye(e)),r)),t);return new r({layer:this,supportedSourceTypes:this.supportedSourceTypes}).load({signal:t})}createQuery(){const e=$.createQuery(this);e.dynamicDataSource=this.dynamicDataSource;const t=null!=this.subtypeCode?`${this.subtypeField} = ${this.subtypeCode}`:null,r=f.sqlAnd(this.definitionExpression,t);return e.where=r||"1=1",e}async deleteAttachments(e,t){const r=await $.deleteAttachments(this,e,t,ce);return this.lastEditsEventDate=new Date,r}async fetchRecomputedExtents(e){return $.fetchRecomputedExtents(this,e,ce)}async getFeatureTitle(e,t){return this._titleCreator.getTitle(this,e,t)}async getFeatureTitles(e,t){return this._titleCreator.getTitles(this,e,t)}getFeatureType(e){return $.getFeatureType(this.types,this.typeIdField,e)}getFieldDomain(e,t){return $.getFieldDomain(this,e,t,this.getField(e)?.domain??null)}async queryAttachments(e,t){return $.queryAttachments(this,e,t,ce)}async queryFeatures(e,t){const r=await this.load(),i=await r.source.queryFeatures(ne.from(e)??r.createQuery(),t);if(i?.features)for(const e of i.features)e.layer=e.sourceLayer=r;return i}async queryObjectIds(e,t){return await $.queryObjectIds(this,e,t,ce)}async queryFeatureCount(e,t){return $.queryFeatureCount(this,e,t,ce)}async queryExtent(e,t){return $.queryExtent(this,e,t,ce)}async queryRelatedFeatures(e,t){return $.queryRelatedFeatures(this,e,t,ce)}async queryRelatedFeaturesCount(e,t){return $.queryRelatedFeaturesCount(this,e,t,ce)}async queryTopFeatures(t,r){const{source:i,capabilities:a}=await this.load();if(!i.queryTopFeatures||!a?.query?.supportsTopFeaturesQuery)throw new n(ce,"Layer source does not support queryTopFeatures capability");const o=await new Promise((t,r)=>e(["../rest/support/TopFeaturesQuery"],e=>t(ye(e)),r)),s=await i.queryTopFeatures(o.default.from(t),r);if(s?.features)for(const e of s.features)e.layer=e.sourceLayer=this;return s}async queryAttributeBins(t,r){const{source:i,capabilities:a}=await this.load();if(!i.queryAttributeBins)throw new n(ce,"Layer source does not support queryAttributeBins capability");$.validateBinsQuery(t,a,ce);const o=await new Promise((t,r)=>e(["../rest/support/AttributeBinsQuery"],e=>t(ye(e)),r)),s=await i.queryAttributeBins(o.default.from(t),r);if(s.features)for(const e of s.features)e.layer=e.sourceLayer=this;return s}async queryTopObjectIds(t,r){const{source:i,capabilities:a}=await this.load();if(!i.queryTopObjectIds||!a?.query.supportsTopFeaturesQuery)throw new n(ce,"Layer source does not support queryTopObjectIds capability");const o=await new Promise((t,r)=>e(["../rest/support/TopFeaturesQuery"],e=>t(ye(e)),r));return(await i.queryTopObjectIds(o.default.from(t),r)).filter(le.isNumber)}async queryTopFeaturesExtent(t,r){const{source:i,capabilities:a}=await this.load();if(!i.queryTopExtents||!a?.query?.supportsTopFeaturesQuery)throw new n(ce,"Layer source does not support queryTopExtents capability");const o=await new Promise((t,r)=>e(["../rest/support/TopFeaturesQuery"],e=>t(ye(e)),r));return i.queryTopExtents(o.default.from(t),r)}async queryTopFeatureCount(t,r){const{source:i,capabilities:a}=await this.load();if(!i.queryTopCount||!a?.query?.supportsTopFeaturesQuery)throw new n(ce,"Layer source does not support queryFeatureCount capability");const o=await new Promise((t,r)=>e(["../rest/support/TopFeaturesQuery"],e=>t(ye(e)),r));return i.queryTopCount(o.default.from(t),r)}read(e,t){const r=e.featureCollection;if((r||"Feature Collection"===e.type)&&(this.resourceInfo=e),r){const{layers:e,showLegend:i}=r;1===e?.length&&(super.read(e[0],t),null!=i&&super.read({showLegend:i},t))}super.read(e,t),t&&"service"===t.origin&&(this.revert(["objectIdField","fields","timeInfo","dateFieldsTimeZone"],"service"),this.spatialReference||this.revert(["spatialReference"],"service"))}write(e,t){t={...t,origin:t?.origin??void 0,writeLayerSchema:t?.writeLayerSchema??this._hasMemorySource()};const{origin:r,layerContainerType:i,messages:a}=t;if(this.dynamicDataSource)return a?.push(fe(this,"using a dynamic data source cannot be written to web scenes, web maps and feature service items")),null;if(this.isTable){if(("web-map"===r||"web-scene"===r)&&"tables"!==i)return a?.push(fe(this,`a table source can only be written to tables, not ${i}`)),null;if(this._hasMemorySource())return a?.push(fe(this,"using an in-memory table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&("web-map"===r||"web-scene"===r)&&"tables"===i)return a?.push(fe(this,"using a non-table source cannot be written to tables in web maps or web scenes")),null;return super.write(e,t)}clone(){if(this._hasMemorySource())throw new n(ce,`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return super.clone()}serviceSupportsSpatialReference(e){return!!this.loaded&&("memory"===this.source?.type||te.serviceSupportsSpatialReference(this,e))}async save(e){return this._debouncedSaveOperations(0,e)}async saveAs(e,t){return this._debouncedSaveOperations(1,t,e)}_readEditingEnabled(e,t,r){let i=e.layerDefinition?.capabilities;return i?this._hasEditingCapability(i):(i=e.capabilities,t&&"web-map"===r?.origin&&!this._hasMemorySource()&&i?this._hasEditingCapability(i):void 0)}_hasEditingCapability(e){return e.toLowerCase().split(",").map(e=>e.trim()).includes("editing")}_writeEditingEnabled(e,t,r,i){if(!e){const e=this.capabilities?.operations?.supportsSync?"Query,Sync":"Query";y.setDeepValue("layerDefinition.capabilities",e,t),r&&!i?.writeLayerSchema&&(t.capabilities=e)}}_fetchFirstValidLayerId(e){return a(this.url??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(e=>{const t=e.data;if(t)return this.applyPreferredHost(t),this.findFirstValidLayerId(t)})}async initLayerProperties(e){return this._set("source",e),e.sourceJSON&&(this.sourceJSON=e.sourceJSON,this.read(e.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl})),this._verifySource(),this._verifyFields(),Z.fixRendererFields(this.renderer,this.fieldsIndex),Z.fixTimeInfoFields(this.timeInfo,this.fieldsIndex),this._hasMemorySource()&&"mesh"===this.geometryType&&(this.capabilities.query.supportsReturnMesh=!0),ae.loadStyleRenderer(this,{origin:"service"})}async hasDataChanged(){return $.hasDataChanged(this)}async fetchPublishingStatus(){const e=this.source;return e?.fetchPublishingStatus?e.fetchPublishingStatus():"unavailable"}_verifyFields(){const e=this.parsedUrl?.path??"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||this._hasMemorySource()||-1!==e.search(/\/FeatureServer\//i)||this.fields?.some(e=>"geometry"===e.type)||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_fixTemplates(e,t){e&&e.forEach(e=>{const r=e.prototype?.attributes;r&&t&&delete r[t]})}_verifySource(){if(this._hasMemorySource()){if(this.url)throw new n("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url")}else if(!this.url)throw new n("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source")}_initMemorySource(e){e.forEach(e=>{e.layer=this,e.sourceLayer=this}),this.addHandles([e.on("after-add",e=>{e.item.layer=this,e.item.sourceLayer=this}),e.on("after-remove",e=>{e.item.layer=null,e.item.sourceLayer=null})],"fl-source")}_resetMemorySource(e){e.forEach(e=>{e.layer=null,e.sourceLayer=null}),this.removeHandles("fl-source")}_hasMemorySource(){return!(this.url||!this.source)}findFirstValidLayerId(e){return Array.isArray(e.layers)&&e.layers.length>0?e.layers[0].id:Array.isArray(e.tables)&&e.tables.length>0?e.tables[0].id:void 0}},r.__decorate([h.property({clonable:!1,readOnly:!0})],t.default.prototype,"_titleCreator",null),r.__decorate([h.property(J.attributeTableTemplate)],t.default.prototype,"attributeTableTemplate",void 0),r.__decorate([b.reader("service","capabilities")],t.default.prototype,"readCapabilities",null),r.__decorate([h.property({json:{origins:{"web-scene":{write:!1}},write:!0}})],t.default.prototype,"charts",void 0),r.__decorate([h.property({readOnly:!0})],t.default.prototype,"createQueryVersion",null),r.__decorate([h.property({json:{read:{source:"layerDefinition.copyrightText"}}})],t.default.prototype,"copyright",void 0),r.__decorate([h.property({json:{read:{source:"layerDefinition.displayField"}}})],t.default.prototype,"displayField",void 0),r.__decorate([h.property({types:pe.symbolTypes,readOnly:!0})],t.default.prototype,"defaultSymbol",void 0),r.__decorate([h.property({type:re.DataLayerSource})],t.default.prototype,"dynamicDataSource",void 0),r.__decorate([h.property({type:Boolean})],t.default.prototype,"editingEnabled",null),r.__decorate([b.reader(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],t.default.prototype,"readEditingEnabled",null),r.__decorate([b.reader("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],t.default.prototype,"readEditingEnabledFromWebMap",null),r.__decorate([g.writer(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],t.default.prototype,"writeEditingEnabled",null),r.__decorate([g.writer("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],t.default.prototype,"writeEditingEnabledToWebMap",null),r.__decorate([h.property({readOnly:!0})],t.default.prototype,"effectiveEditingEnabled",null),r.__decorate([h.property({clonable:!1,readOnly:!0})],t.default.prototype,"featureTitleFields",null),r.__decorate([h.property({...me.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:be}}}}})],t.default.prototype,"fields",void 0),r.__decorate([h.property(me.fieldsIndex)],t.default.prototype,"fieldsIndex",void 0),r.__decorate([h.property({type:T,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],t.default.prototype,"formTemplate",void 0),r.__decorate([h.property({json:{read:{source:"layerDefinition.extent"}}})],t.default.prototype,"fullExtent",void 0),r.__decorate([h.property({json:{origins:{"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:be,writer(e,t,r){const i=e?$.geometryTypeKebabDict.toJSON(e):null;i&&y.setDeepValue(r,i,t)}}}},read:{source:"layerDefinition.geometryType",reader:$.geometryTypeKebabDict.read}}})],t.default.prototype,"geometryType",void 0),r.__decorate([h.property({readOnly:!0,clonable:!1})],t.default.prototype,"graphicOrigin",void 0),r.__decorate([h.property({json:{read:{source:"layerDefinition.hasM"}}})],t.default.prototype,"hasM",void 0),r.__decorate([h.property({json:{read:{source:"layerDefinition.hasZ"}}})],t.default.prototype,"hasZ",void 0),r.__decorate([h.property(J.id)],t.default.prototype,"id",void 0),r.__decorate([h.property({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],t.default.prototype,"infoFor3D",void 0),r.__decorate([h.property({json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],t.default.prototype,"isTable",void 0),r.__decorate([b.reader("service","isTable",["type","geometryType"]),b.reader("isTable",["layerDefinition.type","layerDefinition.geometryType"])],t.default.prototype,"readIsTable",null),r.__decorate([g.writer("web-map","isTable")],t.default.prototype,"writeIsTable",null),r.__decorate([h.property(J.labelsVisible)],t.default.prototype,"labelsVisible",void 0),r.__decorate([h.property({type:[k],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:H.reader,write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:H.reader,write:{layerContainerTypes:w.excludeTables}}})],t.default.prototype,"labelingInfo",void 0),r.__decorate([h.property((()=>{const e=l.clone(J.opacityDrawingInfo);return e.json.origins["portal-item"]={write:{target:"layerDefinition.drawingInfo.transparency",writer(e,t,r){y.setDeepValue(r,ue.opacityToTransparency(e),t)}}},e})())],t.default.prototype,"opacity",void 0),r.__decorate([h.property(J.legendEnabled)],t.default.prototype,"legendEnabled",void 0),r.__decorate([h.property({type:["show","hide"],json:(()=>{const e=l.clone(J.listMode.json);return e.origins["portal-item"]={read:!1,write:!1},e})()})],t.default.prototype,"listMode",void 0),r.__decorate([b.reader("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],t.default.prototype,"readGlobalIdField",null),r.__decorate([h.property({json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:be}}}}})],t.default.prototype,"objectIdField",void 0),r.__decorate([b.reader("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],t.default.prototype,"readObjectIdField",null),r.__decorate([h.property({type:["ArcGISFeatureLayer"],json:{write:{target:"layerType",ignoreOrigin:!0,layerContainerTypes:w.excludeTables}}})],t.default.prototype,"operationalLayerType",void 0),r.__decorate([h.property(me.outFields)],t.default.prototype,"outFields",void 0),r.__decorate([h.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],t.default.prototype,"path",void 0),r.__decorate([h.property(J.popupEnabled)],t.default.prototype,"popupEnabled",void 0),r.__decorate([h.property({type:i,json:{name:"popupInfo",write:!0}})],t.default.prototype,"popupTemplate",void 0),r.__decorate([h.property({readOnly:!0})],t.default.prototype,"defaultPopupTemplate",null),r.__decorate([h.property({types:oe.rendererTypes,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:oe.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{layerContainerTypes:w.excludeTables,overridePolicy:(e,t,r)=>({ignoreOrigin:r?.writeLayerSchema,layerContainerTypes:w.excludeTables})}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:(e,t,r)=>({ignoreOrigin:r?.writeLayerSchema,layerContainerTypes:w.excludeTables})}}})],t.default.prototype,"renderer",null),r.__decorate([b.reader("service","renderer",["drawingInfo.renderer","defaultSymbol"]),b.reader("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],t.default.prototype,"readRenderer",null),r.__decorate([h.property()],t.default.prototype,"resourceInfo",void 0),r.__decorate([h.property((()=>{const e=l.clone(J.screenSizePerspectiveEnabled);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],t.default.prototype,"screenSizePerspectiveEnabled",void 0),r.__decorate([h.property({clonable:!1})],t.default.prototype,"source",null),r.__decorate([m.cast("source")],t.default.prototype,"castSource",null),r.__decorate([b.reader("portal-item","source",["featureSet"]),b.reader("web-map","source",["featureSet"])],t.default.prototype,"readSource",null),r.__decorate([h.property({json:{read:{source:"layerDefinition.extent.spatialReference"}}})],t.default.prototype,"spatialReference",void 0),r.__decorate([h.property({type:Number})],t.default.prototype,"subtypeCode",void 0),r.__decorate([h.property({type:[W]})],t.default.prototype,"templates",void 0),r.__decorate([b.reader("templates",["editFieldsInfo","creatorField","editorField","templates"])],t.default.prototype,"readTemplates",null),r.__decorate([h.property({type:Y})],t.default.prototype,"timeInfo",void 0),r.__decorate([h.property()],t.default.prototype,"title",void 0),r.__decorate([b.reader("service","title",["name"]),b.reader("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],t.default.prototype,"readTitle",null),r.__decorate([b.reader("web-map","title",["layerDefinition.name","title"])],t.default.prototype,"readTitleFromWebMap",null),r.__decorate([h.property({type:String})],t.default.prototype,"sublayerTitleMode",void 0),r.__decorate([h.property({json:{read:!1}})],t.default.prototype,"type",void 0),r.__decorate([h.property({type:String})],t.default.prototype,"typeIdField",void 0),r.__decorate([b.reader("service","typeIdField"),b.reader("typeIdField",["layerDefinition.typeIdField"])],t.default.prototype,"readTypeIdField",null),r.__decorate([h.property({type:[z]})],t.default.prototype,"types",void 0),r.__decorate([b.reader("service","types",["types"]),b.reader("types",["layerDefinition.types"])],t.default.prototype,"readTypes",null),r.__decorate([h.property({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility",layerContainerTypes:w.excludeTables}}}}})],t.default.prototype,"visible",void 0),r.__decorate([b.reader("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],t.default.prototype,"readVisible",null),t.default=r.__decorate([_.subclass("esri.layers.FeatureLayer")],t.default),t.default});