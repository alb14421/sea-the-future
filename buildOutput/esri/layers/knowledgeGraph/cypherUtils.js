// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports"],function(e,r){"use strict";const n=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));r.getBindParametersFromCypherQuery=async function(r){const{CharStream:t,CommonTokenStream:a,ParseTreeWalker:o}=await new Promise((r,n)=>e(["../../chunks/antlr4.web"],r,n)),{default:s}=await new Promise((r,t)=>e(["./antlr/BindParamsListener"],e=>r(n(e)),t)),{default:i}=await new Promise((r,n)=>e(["../../chunks/CypherLexer"],r,n)),{default:m}=await new Promise((r,n)=>e(["../../chunks/CypherParser"],r,n)),{default:l}=await new Promise((r,t)=>e(["./antlr/SimpleErrorListener"],e=>r(n(e)),t)),w=new l,u=new i(new t(r));u.removeErrorListeners(),u.addErrorListener(w);const d=new m(new a(u));d.removeErrorListeners(),d.addErrorListener(w);const c=d.oC_Cypher(),P=new s;return(new o).walk(P,c),{bindParameters:Array.from(new Set(P.bindParams)).map(e=>e.slice(1)),parseErrors:w.errors}},Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});