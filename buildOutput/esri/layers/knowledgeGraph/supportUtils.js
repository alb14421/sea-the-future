// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../Graphic","../../core/Error","../../geometry/Point","../../geometry/Polygon","../../geometry/Polyline","../GraphicsLayer","./constants","./SessionMemoryStorage","../../libs/linkchartlayout/LinkChartLayout","../../linkChart/enums","../../rest/knowledgeGraphService","../../rest/knowledgeGraph/GraphQueryStreaming","../../symbols/CIMSymbol","../../symbols/SimpleFillSymbol","../../symbols/TextSymbol"],function(e,o,t,n,r,i,a,s,l,c,y,m,p,d,h,u){"use strict";function f(e,o){const t=new Map;if(o.dataModel?.relationshipTypes)for(const e of o.dataModel.relationshipTypes)e.name&&t.set(e.name,[]);for(const o of e)t.has(o.typeName)&&t.get(o.typeName)?.push(o.id);return t}const g="ESRI__ChronologicalLayoutOverlay";e.convertLayoutTypeToWebSupportedFormat=e=>y.layoutMap.get(e)??"radial-root-centric",e.getChronologicalOverlay=e=>{const t=[],s={type:"CIMGeometricEffectCut",beginCut:3,endCut:3};for(const n of e.chronologicalAuxiliaryGraphics?.lines??[]){const e={type:"CIMSolidStroke",enable:!0,width:n.width,color:[n.color.r,n.color.g,n.color.b,Math.round(n.color.a/100*255)],effects:n.dashPattern.length>0?[{type:"CIMGeometricEffectDashes",dashTemplate:n.dashPattern,lineDashEnding:"NoConstraint"},s]:void 0},r={type:"CIMVectorMarker",enable:!0,size:10,frame:{xmin:-5,ymin:-5,xmax:0,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{rings:[[[-12,-3.47],[-12,3.6],[-2.06,-.03],[-12,-3.47]]]},symbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",enable:!0,color:[n.color.r,n.color.g,n.color.b,Math.round(n.color.a/100*255)]}]}}],markerPlacement:{type:"CIMMarkerPlacementOnLine",angleToLine:!0,relativeTo:"LineEnd",offsetAlongLine:0}},a=new d({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:n.arrowheadSizeAtEnd?[e,r]:[e]}}});for(const e of n.elements){const n=new i({paths:[[[e.origin.x,e.origin.y],[e.destination.x,e.destination.y]]]});t.push(new o({geometry:n,symbol:a}))}}for(const n of e.chronologicalAuxiliaryGraphics?.polygons??[]){const e=new h({color:[n.color.r,n.color.g,n.color.b,n.color.a/100],style:"solid",outline:null});for(const i of n.elements){const n=new r({rings:[i.points.map(e=>[e.x,e.y])]});t.push(new o({geometry:n,symbol:e}))}}for(const r of e.chronologicalAuxiliaryGraphics?.texts??[]){let e="middle",i="center";switch(r.direction?.value){case c.Direction2D.left:i="right";break;case c.Direction2D.right:i="left";break;case c.Direction2D.bottom:e="bottom"}for(const a of r.elements){const s=new u({color:[r.color.r,r.color.g,r.color.b,r.color.a/100],text:a.str,font:{size:r.height,weight:"bold"},verticalAlignment:e,horizontalAlignment:i}),l=new n({x:a.anchor.x,y:a.anchor.y});t.push(new o({geometry:l,symbol:s}))}}return new a({graphics:t,listMode:"hide",title:g,id:g})},e.getDefaultChronologicalOverlayLayerId=()=>g,e.getRelationshipEndNodeIds=async function(e,o,t){const n=[],r=f(e,o),i={},a=[];for(const[e,o]of r){if(o.length<1)continue;const t=`${e}_ids`;i[t]=o,a.push(`MATCH (n)-[r:${e}]->(m) WHERE id(r) in $${t} RETURN id(n), labels(n)[0], id(m), labels(m)[0]`)}if(0===a.length)return[];const s=a.join(" UNION "),l=new p({openCypherQuery:s,bindParameters:i}),c=(await m.executeQueryStreaming(o,l,t?.requestOptions)).resultRowsStream.getReader();for(;;){const{done:e,value:o}=await c.read();if(e)break;for(const e of o)n.push({id:e[0],typeName:e[1]}),n.push({id:e[2],typeName:e[3]})}return n},e.getRelationshipEndNodeMap=async function(e,o,t){const n=new Map,r=f(e,o),i={},a=[];for(const[e,o]of r){if(o.length<1)continue;const t=`${e}_ids`;i[t]=o,a.push(`MATCH (n)-[r:${e}]->(m) WHERE id(r) in $${t} RETURN id(r), id(n), id(m)`)}if(0===a.length)return n;const s=a.join(" UNION "),l=new p({openCypherQuery:s,bindParameters:i}),c=(await m.executeQueryStreaming(o,l,t?.requestOptions)).resultRowsStream.getReader();for(;;){const{done:e,value:o}=await c.read();if(e)break;for(const e of o)n.set(e[0],[e[1],e[2]])}return n},e.loadRecordsIntoLocalCache=(e,o)=>{const t=new Map;for(const e of[...o.entityTypes??[],...o.relationshipTypes??[]])for(const o of e.properties??[])o.geometryType&&"esriGeometryNull"!==o.geometryType&&t.set(e.name,o.name??"");const n=l.getInstance();for(const o of e)n.writeToStore([o],s.systemOidFieldName,t.get(o.typeName??"")??"")},e.utilsExtentToInBoundsRings=function(e){if(!e.spatialReference.isWGS84)throw new t("knowledge-graph:layer-support-utils","The utilsExtentToInBoundsRings function only supports WGS84 spatial references.");return e.clone().normalize().map(e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]])},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});