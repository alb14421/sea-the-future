// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../arcade/deepClone","../../../core/Error","../../../core/has","../../../core/Logger","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../geometry/Point","../../../geometry/Polygon","../../../geometry/support/plane","./updateElevation","./utils","./worldToImage","../../../widgets/OrientedImageryViewer/components/imageNavigationUtils"],function(e,t,a,n,r,i,o,c,s,l,f,p,y){"use strict";function g(e,t){const a=new c({spatialReference:e});return a.addRing(t),[a.extent?.width?a.extent.width/10:1,a.extent?.height?a.extent.height/10:1]}async function m(e,a,n){const r=t.deepClone(e),i=await l(r,a);n.push(...i.map(f.pointToArray))}async function w(e,t,a){const n=await l(t,a),r=p.worldToImage(n,a);return{error:u(r,e),imagePoint:r,pointWithZ:n}}async function h(e,t,a){const n=await l(t,a),r=p.worldToImagePanoramic(n,a),i=y.normalizeDegrees(r.heading+a.cameraHeading);return{error:Math.abs(i-e.heading)+Math.abs(r.pitch-e.pitch),imagePoint:r,pointWithZ:n}}const u=(e,t)=>Math.abs(e.x-t.x)+Math.abs(e.y-t.y);async function d(e,t,a,n){const r=[[-e,-t],[e,-t],[e,t],[-e,t]].map(([e,t])=>new o([a.x+e,a.y+t],a.spatialReference));return l(r,n).then(e=>e.map(e=>e.toArray()))}e.rectifyMapPoint=async function(e,t,a,n=10){const{cameraLocation:r,farPlaneVertices:c}=a,l=f.pointToArray(r),p=new Array;await m(c,a,p);let y=s.fromPoints(p[0],p[1],p[2]),h=e.clone();for(let c=0;c<n;c++){const n=i.create();if(!s.intersectLine(y,l,f.pointToArray(e),n))break;let c=0,m=null;if(({error:c,imagePoint:m,pointWithZ:h}=await w(t,new o(n,r.spatialReference),a)),c<=1)break;const[u,P]=g(r.spatialReference,p);if(f.or(u<=1,P<=1))break;p.splice(0,p.length,...await d(u,P,new o(n,r.spatialReference),a)),y=s.fromPoints(p[0],p[1],p[2])}return f.pointToArray(h)},e.rectifyMapPointPanoramic=async function(e,t,a,n=10){const{cameraLocation:r,farPlaneVertices:c}=a,l=f.pointToArray(r),p=new Array;await m(c,a,p);const y=[0,0,0,0];let w=s.fromArray(y,p.flat(),!1),u=e.clone();for(let c=0;c<n;c++){const n=i.create();if(!s.intersectLine(y,l,f.pointToArray(e),n)||!w)break;let c,m=0;if(({error:m,imagePoint:c,pointWithZ:u}=await h(t,new o(n,r.spatialReference),a)),m<=1)break;const[P,b]=g(r.spatialReference,p);if(f.or(P<=1,b<=1))break;p.splice(0,p.length,...await d(P,b,new o(n,r.spatialReference),a)),w=s.fromArray(y,p.flat(),!1)}return f.pointToArray(u)},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});