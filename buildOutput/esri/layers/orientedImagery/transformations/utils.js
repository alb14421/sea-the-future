// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Error","../../../core/mathUtils","../../../core/libs/gl-matrix-2/factories/mat3f64","../../../core/libs/gl-matrix-2/factories/mat4f64","../../../core/libs/gl-matrix-2/factories/vec4f64","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../core/libs/gl-matrix-2/math/mat3","../../../core/libs/gl-matrix-2/math/mat4","../../../chunks/vec32","../../../core/support/jsonUtils","../../../geometry/Point","../../../geometry/projectionUtils","../../../geometry/support/Ellipsoid","../../../geometry/support/spatialReferenceUtils","../../../chunks/vec3","../core/ElevationSourceDefinitions","../core/utils","./updateElevationUtils","../../../support/guards","../../../widgets/PanoramicViewer/constants"],function(t,e,a,n,i,o,r,c,s,l,u,h,f,d,g,m,p,v,M,x,w){"use strict";function S(t,e,a){const[n,o,r,c]=e,[l,u,h,f]=a;b(n,o,r,c);const d=b(l,u,h,f),g=y(n,o,r,c),m=y(l,u,h,f),p=s.invertOrIdentity(i.create(),g),v=s.mul(i.create(),p,m),[M,x,w,S]=function(t,e){const[a,n,i]=t,o=[0,0,0,0];return o[0]=a*e[0]+n*e[1]+i*e[2]+e[3],o[1]=a*e[4]+n*e[5]+i*e[6]+e[7],o[2]=a*e[8]+n*e[9]+i*e[10]+e[11],o[3]=0===(r=a*e[12]+n*e[13]+i*e[14]+e[15])?1:r,o;var r}(t,v);return[M/S,x/S,d?0:w/S]}function b(t,e,a,n){return 0===t[2]&&0===e[2]&&0===a[2]&&0===n[2]&&(t[2]=e[2]=a[2]=n[2]=1,!0)}function y(t,e,a,n){const r=O(o.fromArray([...n,1]),s.invertOrIdentity(new Array(16),i.fromValues(t[0],e[0],a[0],0,t[1],e[1],a[1],0,t[2],e[2],a[2],0,1,1,1,1))),c=r[0],l=r[1],u=r[2],h=i.create();return h[0]=c*t[0],h[1]=l*e[0],h[2]=u*a[0],h[3]=0,h[4]=c*t[1],h[5]=l*e[1],h[6]=u*a[1],h[7]=0,h[8]=c*t[2],h[9]=l*e[2],h[10]=u*a[2],h[11]=0,h[12]=c,h[13]=l,h[14]=u,h[15]=1,h}function P(t,e,a,n,i=r.zeros()){return i[0]=t[0]+e[0]*a,i[1]=t[1]+e[1]*a,i[2]=t[2]+e[2]*(a/n),i}function z(t,e,a){const n=r.zeros();return n[0]=t[0]*e,n[1]=t[1]*e,n[2]=t[2]*(e/a),n}function E(t,e){const[a,n,i]=t,o=r.zeros();return o[0]=a*e[0]+n*e[3]+i*e[6],o[1]=a*e[1]+n*e[4]+i*e[7],o[2]=a*e[2]+n*e[5]+i*e[8],o}function O(t,e){const[a,n,i,o]=t,r=new Array(4);return r[0]=a*e[0]+n*e[1]+i*e[2]+o*e[3],r[1]=a*e[4]+n*e[5]+i*e[6]+o*e[7],r[2]=a*e[8]+n*e[9]+i*e[10]+o*e[11],r[3]=a*e[12]+n*e[13]+i*e[14]+o*e[15],r}function F(t,i,o,r=!0){if(!Number.isFinite(t))throw new e("InvalidRotationAngle","Please specify a valid angle for rotation");const c=o*(r?a.deg2rad(t):t),s=Math.cos(c),l=Math.sin(c),u=n.create();switch(i){case 0:u[4]=s,u[5]=-l,u[7]=l,u[8]=s;break;case 1:u[0]=s,u[2]=l,u[6]=-l,u[8]=s;break;case 2:u[0]=s,u[1]=-l,u[3]=l,u[4]=s;break;default:throw new e("InvalidRotationAxis","Please specify either 0, 1 or 2 for X, Y or Z axis respectively")}return u}const V=[[2,-1],[0,1],[2,-1]],T=[[0,1],[1,1],[2,1]];function R(t,a,i=!0){if(3!==t?.length||3!==a?.length)throw new e("InvalidRotationAngles","Please specify three angles with config for rotation");const o=n.create();for(let e=0;e<3;e++){const[n,r]=a[e],s=F(t[e],n,r,i);c.multiply(o,s,o)}return o}function A(t,e=!0){return R(t,T,e)}function I(t,e=!0){return R(t,V,e)}function H(t,e,a){const n=360/e,i=180/a;return{heading:(t.x-e/2)*n,pitch:90-(t.y-a/2)*i}}function D(t,e,a,n=w.defaultImageSphereSize/2){const{heading:i,pitch:o}=U(t,n);return L(i,o,e,a)}function L(t,e,a,n){const i=t%360;return{x:a/2+(i<-180?i+360:i>180?i-360:i)/(360/a),y:n-e/(180/n),heading:t,pitch:e}}function U(t,e){const n=a.rad2deg(Math.acos(-t.z/e));return{heading:a.rad2deg(Math.atan2(t.x,t.y)),pitch:n}}function C(t,e,n=w.defaultImageSphereSize/2){return[n*(Math.sin(a.deg2rad(t))*Math.sin(a.deg2rad(e))),n*(Math.cos(a.deg2rad(t))*Math.sin(a.deg2rad(e))),n*Math.cos(a.deg2rad(180-e))]}const W=(...t)=>t.some(t=>t);function N({a0:t,a1:e,a2:a,b0:n,b1:i,b2:o},r,c,s){const l=[t??r/2-.5,e,a??0,n??c/2-.5,i??0,o].map(q);return null!=s&&k(l)?{affines:l,focalLength:s}:{affines:[r/2-.5,1,0,c/2-.5,0,-1]}}function q(t,e){if(null==t)return null;const a=parseFloat(`${t}`);return isNaN(a)?null:a}function k(t){return null!=t[1]&&null!=t[5]}function j(t,e,a){const{a0:n,a1:i,a2:o,b0:r,b1:c,b2:s,cameraHeading:l,cameraOrientation:u,cameraPitch:h,cameraRoll:f,focalLength:d,horizontalFieldOfView:g,location:m,matrix:p,principalX:v,principalY:M,radial:x,tangential:w,verticalFieldOfView:S}=t,{affines:b,focalLength:y}=N({a0:n,a1:i,a2:o,b0:r,b1:c,b2:s},e,a,d),P=p??function(t,e,a,n){return X(n)?A([n.omega,n.phi,n.kappa]):Y(n)?I([n.heading,n.pitch,n.roll]):I([t,e,a??0])}(l,h,f,u),z=null!=v&&null!=M?[v,M]:void 0;return{affineTransformations:u?.affineTransformations??b,cameraLocation:m.clone(),focalLength:u?.focalLength??y,horizontalFieldOfView:g,imageHeight:a,imageWidth:e,principalOffsetPoint:u?.principalOffsetPoint??z,radialDistortionCoefficients:u?.radialDistortionCoefficients??x,rotationMatrix:P,tangentialDistortionCoefficients:u?.tangentialDistortionCoefficients??w,verticalFieldOfView:S}}const G=t=>null!=t&&"elevationSample"in t&&null!=t.elevationSample,Z=t=>p.isElevationSource(t?.elevationSource)&&null!=t?.extent,K=t=>p.isConstantElevation(t?.elevationSource),X=t=>2===t?.type,Y=t=>1===t?.type;function J(t,e,a=!0){const n=v.getMetersPerUnitOfSR(e),i=a?t.clone():t;return i.cameraHeight/=n,i.farDistance/=n,i.nearDistance/=n,p.isConstantElevation(i.elevationSource)&&(i.elevationSource.constantElevation/=n),i}t.computeFarplaneVertices=function(t){const{cameraLocation:e,farDistance:i,horizontalFieldOfView:o,rotationMatrix:s,scalingFactor:u,verticalFieldOfView:h}=t,f=n.create();c.transpose(f,s);const d=2*Math.tan(a.deg2rad(h)/2)*i*u,g=2*Math.tan(a.deg2rad(o)/2)*i*u,m=E([0,0,-1],f),p=P([e.x,e.y,e.z],m,t.farDistance*u,u),v=E([0,1,0],f),M=E([1,0,0],f),x=z(v,d/2,u),w=z(M,g/2,u),S=l.sub(r.zeros(),x,w),b=l.add(r.zeros(),x,w);return[l.add(r.zeros(),p,S),l.add(r.zeros(),p,b),l.sub(r.zeros(),p,S),l.sub(r.zeros(),p,b)]},t.computeHFOVAndVFOV=function(t,e,n){const i=Math.sin(a.deg2rad(n)),o=Math.cos(a.deg2rad(n)),r=[[t,0],[t,e],[0,e]];r.forEach((t,e)=>{r[e]=[o*t[0]-i*t[1],i*t[0]+o*t[1]]});const c=Math.min(0,r[0][0],r[1][0],r[2][0]),s=Math.max(0,r[0][0],r[1][0],r[2][0]),l=Math.min(0,r[0][1],r[1][1],r[2][1]),u=Math.max(0,r[0][1],r[1][1],r[2][1]);return{hfov:Math.abs(s-c),vfov:Math.abs(u-l)}},t.computeNewReferenceCoordinates=function(t,e,a,n){return[[-e,-e],[+e,-e],[+e,+e],[-e,+e]].map(([e,i])=>S(m.translate(r.zeros(),a,[e,i,0]),n,t))},t.convertHeadingPitchToSphereVertex=C,t.convertOrientationToPixelLocation=L,t.convertPixelLocationToSphereVertex=function(t,e,a,n=w.defaultImageSphereSize/2){const{heading:i,pitch:o}=H(t,e,a);return C(i,o,n)},t.convertPixelToHeadingPitch=H,t.convertSphereVertexToOrientation=U,t.convertSphereVertexToPixelLocation=D,t.convertToSRUnits=J,t.createRotationMatrix=R,t.createRotationMatrixFromHPR=I,t.createRotationMatrixFromOPK=A,t.geographicToLTP=function(t,e){const n=a.deg2rad(t[1]),i=a.deg2rad(t[0]),o=t[2],[r,c,s,l]=e,u=a.deg2rad(r),h=a.deg2rad(c),f=s/Math.sqrt(1-l*Math.sin(u)**2),d=i-h,g=s/Math.sqrt(1-l*Math.sin(u)**2),m=l*(f*Math.sin(u)-g*Math.sin(n));return[(g+o)*Math.cos(n)*Math.sin(d),(g+o)*(Math.sin(n)*Math.cos(u)-Math.sin(u)*Math.cos(u)*Math.cos(d))+m*Math.cos(u),(g+o)*(Math.sin(n)*Math.sin(u)+Math.cos(u)*Math.cos(n)*Math.cos(d))-f+m*Math.sin(u)]},t.getAffinesAndFocalLength=N,t.getImageToWorldPanoramicProperties=function(t,e,a){const{cameraHeading:n,cameraHeight:i,farDistance:o,horizontalFieldOfView:r,location:c,verticalFieldOfView:s}=J(t,t.location.spatialReference);return{averageElevation:(c.z??0)-i,cameraLocation:c,cameraHeading:n,farDistance:o,horizontalFieldOfView:r,imageHeight:a,imageWidth:e,verticalFieldOfView:s}},t.getImageToWorldProperties=function(t,e,a){const{cameraHeight:n,cameraPitch:i,cameraRoll:o,elevation:r,farDistance:c,horizontalFieldOfView:s,location:l,verticalFieldOfView:u}=J(t,t.location.spatialReference),h=r??(l.z??0)-n;return{...j(t,e,a),averageElevation:h,cameraPitch:i,cameraRoll:o??0,farDistance:c,horizontalFieldOfView:s,verticalFieldOfView:u}},t.getInitialAngle=async function(t,e,n){const i=await f.projectWithZConversion(e,t.spatialReference,n);let o=a.rad2deg(Math.atan2(i.y-t.y,i.x-t.x));return o=o>=0&&o<=90?90-o:o>90&&o<=180?360-o+90:90+Math.abs(o),o},t.getUpdateElevationProps=async(t,e,a,n,i)=>{const o=v.getMetersPerUnitOfSR(t),r=e-a/o;return K(n)?(n.elevationSource=new p.ConstantElevation({constantElevation:n.elevationSource.constantElevation/o}),n):G(n)?n:Z(n)?{elevationSample:await M.getElevationSampler({...u.isSerializable(n.elevationSource)?n.elevationSource.toJSON():n.elevationSource,extent:n.extent},i),elevationSource:new p.ConstantElevation({constantElevation:r})}:{averageGroundElevation:r,spatialReference:t}},t.getWebMercatorScalingFactor=function(t,e){return g.isWebMercator(e)?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*t/d.earth.radius))):1},t.getWorldToImageProperties=j,t.hasAngles=t=>x.isNumber(t?.heading)&&x.isNumber(t?.pitch),t.hasHeadingPitchRoll=Y,t.hasOmegaPhiKappa=X,t.isElevationSampler=t=>null!=t&&"queryExtent"in t,t.isUpdateElevationWithElevationSampler=G,t.isUpdateElevationWithElevationSource=Z,t.isUpdateUsingConstantElevation=K,t.isValidAffines=k,t.linearEquationSolve=y,t.ltpToGeographic=function(t,e){const n=Number(t[0]),i=Number(t[1]),o=Number(t[2]),[r,c,s,l]=e,u=a.deg2rad(r),h=a.deg2rad(c),f=s/Math.sqrt(1-l*Math.sin(u)**2),d=n/f,g=i/f,m=o/f,p=Math.cos(u)-Math.sin(u)*g+Math.cos(u)*m,v=Math.sin(u)+Math.cos(u)*g+Math.sin(u)*m,M=Math.sqrt(p**2+d**2),x=l*f*Math.sin(u),w=(t,e=5)=>{if(0===e)return t;const a=w(t,e-1);return Math.atan(v/M-(x-l*(s/Math.sqrt(1-l*Math.sin(a)**2))*Math.sin(a))/(f*M))},S=w(u),b=Math.atan(n/(f*p))+h,y=a.rad2deg(S);return[a.rad2deg(b),y,n/(Math.cos(S)*Math.sin(b-h))-s/Math.sqrt(1-l*Math.sin(S)**2)]},t.normalizeHeading=function(t){const e=t%360;return e<-180?e+360:e},t.or=W,t.pointToArray=t=>t.toArray(),t.projectiveTransform=S,t.reducerFn=(t,e)=>[[-t,-e],[t,-e],[t,e],[-t,e]],t.rotatePixel=function(t,e,a){const n=Math.cos(a),i=Math.sin(a),o=[1,0,0,1,0,0],r=o[0]*n+o[2]*i,c=o[1]*n+o[3]*i,s=-o[0]*i+o[2]*n,l=-o[1]*i+o[3]*n;return o[0]=r,o[1]=c,o[2]=s,o[3]=l,[t*o[0]+e*o[2]+o[4],t*o[1]+e*o[3]+o[5]]},t.scaleAndAddWithFactor=P,t.scaleWithFactor=z,t.transformGraphicCoordinatesToPixel=function(t,e,a){if("panoramic"===t){const[t,n]=a;return D({x:e.x,y:e.y,z:e.z},t,n)}return{x:e.x+.5,y:.5-e.y}},t.transformMat3=E,t.transformMat4=O,t.validatePixelsToTransform=function(t,e){if(W(0===t.length,t.some(({x:t,y:e})=>W(null==t,null==e)),!e.hasZ))throw new Error("Input pixels must have x, y and camera location must have z value")},t.validatePointsToTransform=function(t,e){if(t.some(t=>null==t.z)||null==e.z)throw new Error("Input points and camera location must have z value")},t.validateRotationMatrix=function(t){if(9!==t?.length)throw new Error("Rotation matrix is not provided or is not a valid 3x3 matrix")},t.vecToPoint=t=>e=>new h(e,t),Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});