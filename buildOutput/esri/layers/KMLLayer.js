// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../chunks/tslib.es6","../core/Collection","../core/CollectionFlattener","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/reactiveUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/RandomLCG","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../geometry/Extent","../geometry/SpatialReference","./Layer","./mixins/BlendLayer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./support/commonProperties","./support/KMLSublayer","./support/kmlUtils"],function(e,r,t,o,s,l,i,a,n,p,u,y,c,d,h,b,_,f,g,m,v,S,L,x,w){"use strict";const E=["kml","xml"];let O=class extends(f.BlendLayer(v.RefreshableLayer(S.ScaleRangeLayer(g.OperationalLayer(m.PortalLayer(o.MultiOriginJSONMixin(_))))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new t({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.outSpatialReference=b.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.addHandles([l.watch(()=>this.sublayers,(e,r)=>{r&&r.forEach(e=>{e.parent=null,e.layer=null}),e&&e.forEach(e=>{e.parent=this,e.layer=this})},l.sync),this.on("sublayer-update",()=>this.notifyChange("fullExtent"))])}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}readSublayersFromItemOrWebMap(e,r){this._visibleFolders=r.visibleFolders}readSublayers(e,r,t){return w.sublayersFromJSON(x,r,t,this._visibleFolders)}writeSublayers(e,r){const t=[],o=e.toArray();for(;o.length;){const e=o[0];e.networkLink||(e.visible&&t.push(e.id),e.sublayers&&o.push(...e.sublayers.toArray())),o.shift()}r.visibleFolders=t}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?i.getFilename(this.url,E)||"KML":e}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,r=[],t=e=>{e.visible&&(r.push(e),e.sublayers&&e.sublayers.forEach(t))};return e&&e.forEach(t),r}get fullExtent(){return this._recomputeFullExtent()}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"],supportsData:!1},e).catch(s.throwIfAbortError).then(()=>this._fetchService(r))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const r=await Promise.resolve().then(()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:w.fetchService(this.url??"",this.outSpatialReference,this.refreshInterval,e)),t=w.parseKML(r.data);t&&this.read(t,{origin:"service"})}_recomputeFullExtent(){let e=null;null!=this.extent&&(e=this.extent.clone());const r=t=>{if(t.sublayers)for(const o of t.sublayers.items)r(o),o.visible&&o.fullExtent&&(null!=e?e.union(o.fullExtent):e=o.fullExtent.clone())};return r(this),e}};return e.__decorate([a.property({readOnly:!0})],O.prototype,"allSublayers",void 0),e.__decorate([a.property({type:b})],O.prototype,"outSpatialReference",void 0),e.__decorate([a.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],O.prototype,"path",void 0),e.__decorate([a.property({readOnly:!0,json:{read:!1,write:!1}})],O.prototype,"legendEnabled",void 0),e.__decorate([a.property({type:["show","hide","hide-children"]})],O.prototype,"listMode",void 0),e.__decorate([a.property({type:["KML"]})],O.prototype,"operationalLayerType",void 0),e.__decorate([a.property({})],O.prototype,"resourceInfo",void 0),e.__decorate([a.property({type:r.ofType(x),json:{write:{ignoreOrigin:!0}}})],O.prototype,"sublayers",void 0),e.__decorate([y.reader(["web-map","portal-item"],"sublayers",["visibleFolders"])],O.prototype,"readSublayersFromItemOrWebMap",null),e.__decorate([y.reader("service","sublayers",["sublayers"])],O.prototype,"readSublayers",null),e.__decorate([d.writer("sublayers")],O.prototype,"writeSublayers",null),e.__decorate([a.property({readOnly:!0,json:{read:!1}})],O.prototype,"type",void 0),e.__decorate([a.property({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],O.prototype,"title",null),e.__decorate([a.property(L.url)],O.prototype,"url",void 0),e.__decorate([a.property({readOnly:!0})],O.prototype,"visibleSublayers",null),e.__decorate([a.property({type:h})],O.prototype,"extent",void 0),e.__decorate([a.property()],O.prototype,"fullExtent",null),O=e.__decorate([c.subclass("esri.layers.KMLLayer")],O),O});