// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../chunks/tslib.es6","../PopupTemplate","../core/Clonable","../core/Collection","../core/Error","../core/Logger","../core/MultiOriginJSONSupport","../core/reactiveUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/subclass","../geometry/SpatialReference","../graphic/ParquetGraphicOrigin","./Layer","./graphics/sources/ParquetSource","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/DisplayFilteredLayer","./mixins/FeatureEffectLayer","./mixins/FeatureReductionLayer","./mixins/OperationalLayer","./mixins/OrderedLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./mixins/TemporalLayer","./support/commonProperties","./support/FeatureTemplate","./support/Field","./support/fieldProperties","./support/fieldUtils","./support/LabelClass","./support/labelingInfo","./support/ParquetEncodingBase","./support/ParquetEncodingLocation","./support/ParquetEncodingWkb","./support/parquetUtils","../renderers/support/typeUtils","../rest/support/Query","../support/popupUtils"],function(e,t,r,s,o,i,p,a,n,u,l,d,c,y,h,m,g,f,_,F,x,b,v,S,P,q,I,O,R,T,w,C,L,D,B,Q,j,E){"use strict";const z=O.defineFieldProperties(),A="__OBJECTID",M={types:{key:"type",base:C.ParquetEncodingBase,typeMap:{wkb:D,location:L}}};let G=class extends(g.DisplayFilteredLayer(_.FeatureReductionLayer(f.FeatureEffectLayer(h.BlendLayer(x.OrderedLayer(S.TemporalLayer(v.ScaleRangeLayer(F.OperationalLayer(b.PortalLayer(p.MultiOriginJSONMixin(m.CustomParametersMixin(r.ClonableMixin(c))))))))))))){constructor(e){super(e),this.capabilities={analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,isBranchVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:!1},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryBins:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:8e3,maxRecordCountFactor:void 0,maxUniqueIDCount:void 0,standardMaxRecordCount:void 0,supportsCacheHint:!1,supportsCentroid:!1,supportsCurrentUser:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!0,supportsPaginationOnAggregatedQueries:!1,supportsPercentileStatistics:!1,supportsQuantization:!0,supportsQuantizationEditMode:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsStatistics:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,supportsSqlExpression:!1,supportsTrueCurve:!1,tileMaxRecordCount:void 0},queryAttributeBins:{supportsDate:!1,supportsFixedInterval:!1,supportsAutoInterval:!1,supportsFixedBoundaries:!1,supportsStackBy:!1,supportsSplitBy:!1,supportsSnapToData:!1,supportsReturnFullIntervalBin:!1,supportsFirstDayOfWeek:!1,supportsNormalization:!1},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUploadWithItemId:!1,supportsUpdateWithoutM:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}},this.copyright=null,this.displayOptimization=null,this.fields=null,this.fieldsIndex=null,this.encoding=null,this.geometryType=null,this.graphicOrigin=new d(this),this.labelsVisible=!0,this.labelingInfo=null,this.objectIdField=A,this.outFields=null,this.popupTemplate=null,this.source=null,this.spatialReference=l.WGS84,this.templates=null,this.title="Parquet",this.type="parquet",this.urls=new s}async load(e){return this.addResolvingPromise(this._load(e)),this.addHandles([a.watch(()=>this.customParameters,e=>this.source?.setCustomParameters(e))]),this}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return null==this.geometryType}set renderer(e){R.fixRendererFields(e,this.fieldsIndex),this._set("renderer",e)}createPopupTemplate(e){return E.createPopupTemplate(this,e)}createQuery(){const e=new j;return e.returnGeometry=!0,e.outFields=["*"],e}async createSource(e){const t=await B.completeParquetLayerInfo({urls:this.urls,fields:this.fields,encoding:this.encoding,geometryType:this.geometryType,spatialReference:this.spatialReference,file:this.file},{customParameters:this.customParameters});let{fields:r,geometryType:s,encoding:p,spatialReference:a,urls:n,file:u,displayOptimization:d}=t;if(null==r)throw new o("parquet-layer:missing-metadata","Unable to create parquet source: cannot infer fields",t);if(a){if(!a.isGeographic&&!a.isWebMercator)throw new o("parquet-layer:unsupported","Unable to create parquet source: currently only geographic and Web Mercator supported",t);a.isGeographic&&!a.isWGS84&&(i.getLogger("parquet-layer").warn("Found a geographic projection that is not WGS84. Handling as WGS84.",{spatialReference:t.spatialReference}),a=l.WGS84)}r.push(new I({name:A,type:"oid",alias:A}));const c=new y.ParquetSource({urls:n.items,fields:r,objectIdField:A,spatialReference:a,encoding:p,geometryType:s,file:u,customParameters:this.customParameters??void 0,displayOptimization:d});return await c.load(e),c}getFieldDomain(e,t){return null}getField(e){return this.fieldsIndex.get(e)}async queryFeatures(e,t){await this.load();const r=await this.source.queryFeatures(this._normalizeQuery(e),t);if(r?.features)for(const e of r.features)e.layer=e.sourceLayer=this;return r}async queryObjectIds(e,t){return await this.load(),this.source.queryObjectIds(this._normalizeQuery(e),t)}async queryFeatureCount(e,t){return await this.load(),this.source.queryFeatureCount(this._normalizeQuery(e),t)}async queryExtent(e,t){return await this.load(),this.source.queryExtent(this._normalizeQuery(e),t)}_normalizeQuery(e){return j.from(e)??this.createQuery()}async _load(e){const t=await this.createSource(e);this._set("source",t),this.fields=t.fields,this.objectIdField=t.objectIdField,this.encoding=t.encoding,this.file=t.file,this.geometryType=t.geometryType,t.spatialReference&&(this.spatialReference=t.spatialReference),this.displayOptimization=t.displayOptimization,t.fullExtent&&(this.fullExtent=t.fullExtent),R.fixRendererFields(this.renderer,this.fieldsIndex),R.fixTimeInfoFields(this.timeInfo,this.fieldsIndex)}};return e.__decorate([n.property({readOnly:!0,json:{read:!1,write:!1}})],G.prototype,"capabilities",void 0),e.__decorate([n.property({type:String})],G.prototype,"copyright",void 0),e.__decorate([n.property({readOnly:!0})],G.prototype,"defaultPopupTemplate",null),e.__decorate([n.property()],G.prototype,"displayOptimization",void 0),e.__decorate([n.property({type:[I],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],G.prototype,"fields",void 0),e.__decorate([n.property(z.fieldsIndex)],G.prototype,"fieldsIndex",void 0),e.__decorate([n.property(M)],G.prototype,"encoding",void 0),e.__decorate([n.property({json:{read:{reader:B.parquetGeometryTypeKebabDict.read}}})],G.prototype,"geometryType",void 0),e.__decorate([n.property({readOnly:!0,clonable:!1})],G.prototype,"graphicOrigin",void 0),e.__decorate([n.property(P.labelsVisible)],G.prototype,"labelsVisible",void 0),e.__decorate([n.property({type:[T],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:w.reader},write:!0}})],G.prototype,"labelingInfo",void 0),e.__decorate([n.property()],G.prototype,"file",void 0),e.__decorate([n.property({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],G.prototype,"objectIdField",void 0),e.__decorate([n.property(z.outFields)],G.prototype,"outFields",void 0),e.__decorate([n.property({type:t,json:{name:"popupInfo",write:!0}})],G.prototype,"popupTemplate",void 0),e.__decorate([n.property({types:Q.rendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"}}}})],G.prototype,"renderer",null),e.__decorate([n.property({json:{read:!1},cast:null,type:y.ParquetSource,readOnly:!0})],G.prototype,"source",void 0),e.__decorate([n.property({type:l})],G.prototype,"spatialReference",void 0),e.__decorate([n.property({type:[q]})],G.prototype,"templates",void 0),e.__decorate([n.property()],G.prototype,"title",void 0),e.__decorate([n.property({json:{read:!1},readOnly:!0})],G.prototype,"type",void 0),e.__decorate([n.property({type:s.ofType(String)})],G.prototype,"urls",void 0),G=e.__decorate([u.subclass("esri.layers.ParquetLayer")],G),G});