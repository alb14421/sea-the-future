// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../core/Error","./regenerateUtils"],function(e,r,n,a){"use strict";async function i(r,n){const{regenerateVisualVariables:i,updateRendererWithReferenceSize:t,updateRendererWithSpike:s}=await new Promise((r,n)=>e(["../size"],r,n)),{visualVariables:o,authoringInfo:c,isGrid:d}=await i({...r,renderer:n});a.spliceVisualVariables(n,o,a.findSizeVVIndex),a.updateAuthoringInfoVisualVariable(n,c,"size");const u=a.getAuthoringInfoVisualVariable(n,"size","reference-size"),w=a.getAuthoringInfoVisualVariable(n,"size","spike");return u||w?w?await s({layer:r.layer,renderer:n,sizeStops:w.sizeStops,forBinning:r.forBinning}):await t({layer:r.layer,renderer:n,sizeStops:u.sizeStops,view:r.view,forBinning:r.forBinning,sizeOptimizationEnabled:a.hasScaleDependentSizeVV(n),isGrid:d}):n}r.regenerateRenderer=async function(r){const t=await a.getRendererToUpdate(r),s=a.getStyleType(t),o=r.includedParts,c=o?.includes("size-variable")??!0,d=o?.includes("color-variable")??!0,u=o?.includes("class-breaks")??!0;switch(s){case"color-continuous":{if(!d)return t;const{regenerateContinuousRenderer:n}=await new Promise((r,n)=>e(["../color"],r,n));return(await n(r)).renderer}case"color-class-breaks":{if(!u)return t;const{regenerateClassBreaksRenderer:n}=await new Promise((r,n)=>e(["../color"],r,n));return(await n(r)).renderer}case"color-age":{if(!d)return t;const{regenerateAgeRenderer:n}=await new Promise((r,n)=>e(["../color"],r,n));return(await n(r)).renderer}case"size-continuous":{if(!c)return t;const{regenerateContinuousRenderer:n}=await new Promise((r,n)=>e(["../size"],r,n));return(await n(r)).renderer}case"size-class-breaks":{if(!u)return t;const{regenerateClassBreaksRenderer:n}=await new Promise((r,n)=>e(["../size"],r,n));return(await n(r)).renderer}case"size-age":{if(!c)return t;const{regenerateAgeRenderer:n}=await new Promise((r,n)=>e(["../size"],r,n));return(await n(r)).renderer}case"color-size":{let n=t;if(d){const{regenerateContinuousRenderer:a}=await new Promise((r,n)=>e(["../color"],r,n));n=(await a(r)).renderer}return c?await i(r,n):n}case"type":{const{regenerateRenderer:n}=await new Promise((r,n)=>e(["../type"],r,n));return(await n(r)).renderer}case"type-size":{const{regenerateRenderer:n}=await new Promise((r,n)=>e(["../type"],r,n)),{renderer:a}=await n(r);return c?await i(r,a):a}case"predominance":{const{regenerateRenderer:n}=await new Promise((r,n)=>e(["../predominance"],r,n));return(await n(r)).renderer}case"relationship":{if(!u)return t;const{regenerateRenderer:n}=await new Promise((r,n)=>e(["../relationship"],r,n));return(await n(r)).renderer}case"relationship-size":{let n=t;if(u){const{regenerateRenderer:a}=await new Promise((r,n)=>e(["../relationship"],r,n)),{renderer:i}=await a(r);n=i}return c?await i(r,n):n}case"pie-chart":{const{regenerateRenderer:n}=await new Promise((r,n)=>e(["../pieChart"],r,n));return(await n(r)).renderer}case"dot-density":{const{regenerateRenderer:n}=await new Promise((r,n)=>e(["../dotDensity"],r,n));return(await n(r)).renderer}case"heatmap":{const{regenerateRenderer:n}=await new Promise((r,n)=>e(["../heatmap"],r,n));return(await n(r)).renderer}case"univariate-color-size":{const{regenerateRenderer:n}=await new Promise((r,n)=>e(["../univariateColorSize"],r,n));return(await n(r)).renderer}default:throw new n("regenerate-renderer:invalid-parameters","renderer type not supported")}},Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});