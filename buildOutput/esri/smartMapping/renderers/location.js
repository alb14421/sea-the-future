// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/Error","../../renderers/SimpleRenderer","../heuristics/outline","../heuristics/sizeRange","./support/utils","../support/binningUtils","../support/adapters/support/layerUtils","../symbology/location"],function(e,i,a,n,r,l,o,t,s){"use strict";e.createRenderer=async function(e){const m=await async function(e){if(!e?.layer)throw new i("location-renderer:missing-parameters","'layer' parameter is required");e.forBinning&&o.verifyBinningParams(e,"location-renderer");const a={...e,layer:e.layer};a.symbolType=a.symbolType||"2d";const n=e.forBinning?t.binningCapableLayerTypes:t.featureCapableLayerTypes,r=t.createLayerAdapter(a.layer,n,e.forBinning);if(!r)throw new i("location-renderer:invalid-parameters","'layer' must be one of these types: "+t.getLayerTypeLabels(n).join(", "));a.layer=r;const l=null!=a.signal?{signal:a.signal}:null;await r.load(l);const s=r.geometryType;if(a.outlineOptimizationEnabled="polygon"===s&&a.outlineOptimizationEnabled,a.sizeOptimizationEnabled=("point"===s||"multipoint"===s||"polyline"===s)&&a.sizeOptimizationEnabled,"mesh"===s)a.symbolType="3d-volumetric",a.colorMixMode=a.colorMixMode||"replace",a.edgesType=a.edgesType||"none";else{if("3d-volumetric-uniform"===a.symbolType&&"point"!==s)throw new i("location-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new i("location-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}return a}(e),p=m.layer.geometryType,c=await async function(e,i){let a=e.locationScheme,n=null,r=null;const o=await l.getBasemapInfo(e.basemap,e.view);if(n=null!=o.basemapId?o.basemapId:null,r=null!=o.basemapTheme?o.basemapTheme:null,a)return{scheme:s.cloneScheme(a),basemapId:n,basemapTheme:r};const t=s.getSchemes({basemapTheme:r,geometryType:i,worldScale:!!e.symbolType?.includes("3d-volumetric"),view:e.view});return t&&(a=t.primaryScheme,n=t.basemapId,r=t.basemapTheme),{scheme:a,basemapId:n,basemapTheme:r}}(m,p),y=c.scheme;if(!y)throw new i("location-renderer:insufficient-info","Unable to find location scheme");const{view:u,layer:d,signal:b,filter:h}=m,[f,g]=await Promise.all([m.outlineOptimizationEnabled?n({view:u,layer:d,signal:b,filter:h}).catch(l.errorCallback):null,m.sizeOptimizationEnabled?r({view:u,layer:d,signal:b,filter:h}).catch(l.errorCallback):null]),w=f?.opacity,T=new a({symbol:l.createSymbol(p,{type:m.symbolType,color:y.color,size:l.getSymbolSizeFromScheme(y,p),outline:l.getSymbolOutlineFromScheme(y,p,w),meshInfo:{colorMixMode:m.colorMixMode,edgesType:m.edgesType}})});return f?.visualVariables.length&&(T.visualVariables=f.visualVariables.map(e=>e.clone())),g?.minSize&&(T.visualVariables?T.visualVariables.push(g.minSize):T.visualVariables=[g.minSize]),{renderer:T,locationScheme:s.cloneScheme(y),basemapId:c.basemapId,basemapTheme:c.basemapTheme}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});