// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../Color","../../core/colorUtils","../../core/Error","../../renderers/HeatmapRenderer","../../renderers/support/AuthoringInfo","../../renderers/support/HeatmapColorStop","../../renderers/support/heatmapUtils","./support/regenerateUtils","./support/utils","../statistics/heatmapStatistics","../support/utils","../support/adapters/support/layerUtils","../symbology/heatmap"],function(e,a,r,t,n,i,s,o,l,d,m,c,u,p){"use strict";const f=[0,.04];async function h(e){if(!e?.layer||!e.view)throw new t("heatmap-renderer:missing-parameters","'layer' and 'view' parameters are required");const a={...e,layer:e.layer,view:e.view};a.radius??=null==a.blurRadius?18:o.gaussianBlurRadiusPxToKernelDensityRadiusPt(a.blurRadius),a.minRatio??=.01,a.maxRatio??=1,a.fadeRatio??=.2,a.fadeToTransparent??=!0;const r=[2,3,4,6,7,8,9,12,15],n=u.createLayerAdapter(a.layer,r);if(!n)throw new t("heatmap-renderer:invalid-parameters","'layer' must be one of these types: "+u.getLayerTypeLabels(r).join(", "));a.layer=n;const i=null!=a.signal?{signal:a.signal}:null;await n.load(i);const s=await c.getFieldsList({field:a.field}),l=d.verifyBasicFieldValidity(n,s,"heatmap-renderer:invalid-parameters");if(l)throw l;return a}function w(e,a){const r=10*(1-a)+1,t=e.length-3,n=e[2].color.a;e.forEach((e,i)=>{if(i<=2)return;const{color:s}=e,o=(i-3)/t;s.a=0===a?1:Math.min(Math.max(o*r+o+n,n),1)})}function y(e){const{fadeRatio:a,renderer:r}=e,t=r.clone(),n=a??(t?.authoringInfo?.fadeRatio||0);return w(t.colorStops,n),t.authoringInfo?t.authoringInfo.fadeRatio=n:t.authoringInfo=new i({fadeRatio:n}),t}e.createRenderer=async function(e){const t=await h(e);return async function(e,t){const{field:o,basemap:l,radius:m,fadeToTransparent:c,heatmapScheme:u,view:h}=t,{scheme:y,basemapId:g,basemapTheme:b}=await async function(e){let a=e.scheme,r=null,t=null;const n=await d.getBasemapInfo(e.basemap,e.view);if(r=null!=n.basemapId?n.basemapId:null,t=null!=n.basemapTheme?n.basemapTheme:null,a)return{scheme:p.cloneScheme(a),basemapId:r,basemapTheme:t};const i=p.getSchemes({basemapTheme:t});return i&&(a=i.primaryScheme,r=i.basemapId,t=i.basemapTheme),{scheme:a,basemapId:r,basemapTheme:t}}({basemap:l,scheme:u,view:h}),R=y.colors,v=R.length,T=null==e.min,I=T?f:[e.min,e.max];let S;const x=t.fadeRatio??0,U=t.maxRatio??0,P=t.minRatio??0,D=(U-P)/(v-1),L=R[0],B=c?P:.01,C=[new s({ratio:0,color:new a([L.r,L.g,L.b,0])}),new s({ratio:.01,color:new a([L.r,L.g,L.b,0])}),new s({ratio:B,color:new a([L.r,L.g,L.b,B])})];return r.createUniqueColors(R,v).forEach((e,a)=>{const r=P+D*a;C.push(new s({ratio:r,color:e}))}),c&&(w(C,x),S=new i({fadeRatio:x})),{renderer:new n({authoringInfo:S,radius:m,colorStops:C,field:o,minDensity:I[0],maxDensity:I[1]}),statistics:e,defaultValuesUsed:T,scheme:p.cloneScheme(y),basemapId:g,basemapTheme:b}}(t.statistics??await m({layer:t.layer,field:t.field,radius:t.radius,view:t.view,filter:t.filter,signal:t.signal}),t)},e.regenerateRenderer=async function(e){const{creatorParameters:a,renderer:r}=await async function(e){const a="regenerate-heatmap-renderer";await l.processRegenerateParams(e,a);const r=await l.getRendererToUpdate(e);if("heatmap"!==l.getStyleType(r))throw new t(`${a}:invalid-parameters`,"Renderer is invalid");const{layer:n,filter:i,view:s,signal:o}=e,d=await h({layer:n,field:r.field,radius:r.radius,fadeRatio:r.authoringInfo?.fadeRatio,filter:i,view:s,signal:o});return{...e,creatorParameters:d,renderer:r}}(e),n=await m({layer:a.layer,field:a.field,radius:a.radius,view:a.view,filter:a.filter,signal:a.signal}),i=null==n.min?f:[n.min,n.max];return r.minDensity=i[0],r.maxDensity=i[1],{renderer:y({renderer:r,fadeRatio:a.fadeRatio})}},e.updateRenderer=y,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});