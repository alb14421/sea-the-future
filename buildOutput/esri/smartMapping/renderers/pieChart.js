// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../Color","../../core/arrayUtils","../../core/colorUtils","../../core/Error","../../core/screenUtils","../../intl/messages","../../layers/support/AggregateField","../../layers/support/ExpressionInfo","../../renderers/PieChartRenderer","../../renderers/support/AttributeColorInfo","../../renderers/support/OthersCategory","../../renderers/support/RendererLegendOptions","../heuristics/outline","../heuristics/sizeRange","./size","./support/regenerateUtils","./support/utils","../statistics/predominantCategories","../statistics/support/utils","../support/binningUtils","../support/utils","../support/adapters/support/layerUtils","../symbology/pieChart","../../symbols/SimpleLineSymbol","../../symbols/support/cimSymbolUtils"],function(e,r,a,i,n,t,l,s,o,u,c,p,d,m,f,b,h,y,g,w,v,S,z,V,E,C){"use strict";const x=[2,3,4,6,7,8,9,12,15];async function T(e){if(!(e?.layer&&e.view&&e.attributes?.length))throw new n("pie-chart-renderer:missing-parameters","'layer', 'view' and 'attributes' parameters are required");if(e.attributes.length>10)throw new n("pie-chart-renderer:invalid-parameters","PieChart renderer does not support more than 10 attributes");e.forBinning&&v.verifyBinningParams(e,"pie-chart-renderer");const r={...e,layer:e.layer,view:e.view,attributes:e.attributes};r.shape=r.shape||"pie",r.othersCategoryEnabled??=!0,r.includeSizeVariable=e.includeSizeVariable||!1;const a=e.forBinning?z.binningCapableLayerTypes:x,i=z.createLayerAdapter(r.layer,a,e.forBinning);if(!i)throw new n("pie-chart-renderer:invalid-parameters","'layer' must be one of these types: "+z.getLayerTypeLabels(a).join(", "));const t=null!=r.signal?{signal:r.signal}:null;await Promise.all([e.view.when(),i.load(t)]);const l=i.geometryType,s="polygon"===l,o="point"===l||"multipoint"===l||s;if(r.outlineOptimizationEnabled=!!s&&r.outlineOptimizationEnabled,r.sizeOptimizationEnabled=!!o&&r.sizeOptimizationEnabled,!o)throw new n("pie-chart-renderer:not-supported","PieChart renderer is only supported for point and polygon layers");const u=[],c=r.attributes;for(const e of c){const r=await S.getFieldsList({field:e.field,valueExpression:e.valueExpression});u.push(...r)}const p=y.verifyBasicFieldValidity(i,u.filter(Boolean),"pie-chart-renderer:invalid-parameters");if(p)throw p;return{...r,layer:i}}async function I(e){let r=e.pieChartScheme,a=null,i=null;const n=await y.getBasemapInfo(e.basemap,e.view);if(a=null!=n.basemapId?n.basemapId:null,i=null!=n.basemapTheme?n.basemapTheme:null,r)return{scheme:V.cloneScheme(r),basemapId:a,basemapTheme:i};const t=V.getSchemes({numColors:e.attributes.length,geometryType:e.layer.geometryType,basemapTheme:i});return t&&(r=t.primaryScheme,a=t.basemapId,i=t.basemapTheme),{scheme:r,basemapId:a,basemapTheme:i}}async function O(e,r){const{valueExpression:a,sqlExpression:i,sqlWhere:n}=w.getSumOfAttributesExpr(e.attributes),t=await l.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");return b.createVisualVariables({layer:e.layer,basemap:e.basemap,valueExpression:a,sqlExpression:i,sqlWhere:n,sizeScheme:r,sizeOptimizationEnabled:e.sizeOptimizationEnabled,legendOptions:{title:t.sumOfCategories},filter:e.filter,view:e.view,signal:e.signal})}function $(e,r,a){r||e.visualVariables.forEach(e=>{"number"==typeof e.minSize&&"number"==typeof e.maxSize&&(e.minSize*=2.5,e.maxSize*=1.8)}),r&&"point"===a&&e.visualVariables.forEach(e=>{e?.minSize&&"object"==typeof e.minSize&&e.minSize?.stops?.forEach(e=>{e.size*=1.8})})}function k(e,r){"point"===r&&e.minSize.stops?.forEach(e=>{e.size*=2.5}),"polygon"===r&&e.minSize.stops?.forEach(e=>{e.size*=1.8})}const B=new Set(["unique-value","class-breaks"]),q=new r("#aaaaaa"),P=new r("#5c5c5c"),L=[new r("#e60049"),new r("#0bb4ff"),new r("#50e991"),new r("#e6d800"),new r("#9b19f5"),new r("#ffa300"),new r("#dc0ab4"),new r("#b3d4ff"),new r("#00bfa0"),new r("#f0cccc")];function U(e){return"SUM_"+(e+"").replaceAll(/[^a-zA-Z0-9_]/g,"_")}function R(e,r){if("simple-marker"===e?.type&&e.color)return e.color.clone();if("cim"===e?.type){const r=C.getCIMSymbolColor(e);if(r)return r.clone()}return r?r.clone():q.clone()}function F(e,r){return`Number(Text($feature["${e}"]) == "${r.value+""}")`}function M(e,r){return`Number(!(${r.map(r=>`(Text($feature["${e}"]) == "${r.value+""}")`).join(" || ")}))`}function A(e,r){return`Number($feature["${e}"] >= ${r.minValue} && $feature["${e}"] < ${r.maxValue})`}function j(e,r){return`Number(!(${r.map(r=>`($feature["${e}"] >= ${r.minValue} && $feature["${e}"] < ${r.maxValue})`).join(" || ")}))`}e.createRenderer=async function(e){const[r,s]=await Promise.all([T(e),l.fetchMessageBundle("esri/smartMapping/t9n/smartMapping")]),o=await I(r),b=o?.scheme;if(!b)throw new n("pie-chart-renderer:insufficient-info","Unable to find pie-chart scheme");const{layer:h,includeSizeVariable:w,sizeOptimizationEnabled:v,outlineOptimizationEnabled:S,view:z,signal:C,filter:x}=r,B=b.sizeScheme,q=r.attributes,P=q.map(e=>e.field).filter(a.isSome),[L,U,R,F]=await Promise.all([P.length>1?g({layer:h,fields:P,view:z,signal:C,filter:x}):null,w?O(r,B):null,!w&&v?f({layer:h,view:z,signal:C,filter:x}).catch(y.errorCallback):null,S?m({layer:h,view:z,signal:C,filter:x}).catch(y.errorCallback):null]),M=L?.predominantCategoryInfos?{uniqueValueInfos:L.predominantCategoryInfos}:{uniqueValueInfos:P.map(e=>({value:e,count:0}))},A=i.createUniqueColors(b.colors,q.length),j=q.map((e,r)=>new c({field:e.field,valueExpression:e.valueExpression,label:e.label,valueExpressionTitle:e.valueExpressionTitle,color:A[r]})),_=h.geometryType,N=null!=B&&"background"in B&&B.background,D=new u({attributes:j,othersCategory:new p.OthersCategory({label:s.other,color:r.othersCategoryEnabled?b.colorForOthersCategory:null,threshold:.04}),holePercentage:"donut"===r.shape?.45:0,backgroundFillSymbol:N?y.createSymbol(_,{type:"2d",color:N.color,outline:y.getSymbolOutlineFromScheme(N,_,F?.opacity)}):null,size:t.toPt(b.size),outline:new E(y.getSymbolOutlineFromScheme(b,"point",F?.opacity)),legendOptions:d.from(r.legendOptions)});if(U&&($(U,v,_),D.authoringInfo=U.authoringInfo.clone(),D.visualVariables=U.visualVariables?.map(e=>e.clone())),F?.visualVariables?.length){const e=F.visualVariables.map(e=>e.clone()).filter(e=>"color"!==e.type&&"rotation"!==e.type);D.visualVariables?D.visualVariables.push(...e):D.visualVariables=e}return R?.minSize&&(k(R,_),D.visualVariables?D.visualVariables.push(R.minSize):D.visualVariables=[R.minSize]),{renderer:D,pieChartScheme:V.cloneScheme(b),size:U,basemapId:o.basemapId,basemapTheme:o.basemapTheme,statistics:M}},e.createRendererForClustering=async function(e){const r=await async function(e){if(!e||!e.layer)throw new n("pie-chart-cluster-renderer:missing-parameters","'layer' parameter is required");const r={...e};r.shape=r.shape||"pie",r.defaultSymbolEnabled??=!0;const a=e.layer;if(!z.getLayerTypes(x).includes(a.type))throw new n("pie-chart-cluster-renderer:invalid-parameters","'layer' must be one of these types: "+z.getLayerTypeLabels(x).join(", "));const i=null!=r.signal?{signal:r.signal}:null;if(await a.load(i),"point"!==a.geometryType)throw new n("pie-chart-cluster-renderer:invalid-parameters","Cluster renderers are only supported for point layers");const t="renderer"in a?a.renderer:void 0;if(!t)throw new n("pie-chart-cluster-renderer:invalid-parameters","input layer does not have a renderer.");if(!B.has(t.type))throw new n("pie-chart-cluster-renderer:invalid-parameters",`Cannot create a pie chart renderer for clusters based on a ${t.type} renderer.`);if("valueExpression"in t&&t.valueExpression)throw new n("pie-chart-cluster-renderer:invalid-parameters","Cannot create a pie chart renderer for clusters from a layer whose renderer contains a valueExpression.");if("unique-value"===t.type){if(t.field2)throw new n("pie-chart-cluster-renderer:invalid-parameters","Cannot create a pie chart renderer for clusters from a UniqueValueRenderer using more than one field.");if(null!=t.uniqueValueInfos&&t.uniqueValueInfos.length>10)throw new n("pie-chart-cluster-renderer:invalid-parameters","PieChart cluster renderer cannot be created from a UniqueValueRenderer with more than 10 unique value infos.")}if("class-breaks"===t.type){if(t.classBreakInfos.length<2)throw new n("pie-chart-cluster-renderer:invalid-parameters","Cannot create a pie chart renderer for clusters from a layer renderer with a continuous color or size gradient.");if(t.classBreakInfos.length>10)throw new n("pie-chart-cluster-renderer:invalid-parameters","PieChart cluster renderer can not be created from a ClassBreaksRenderer with more than 10 class break infos.");if("class-breaks-size"===t?.authoringInfo?.type)throw new n("pie-chart-cluster-renderer:invalid-parameters","PieChart cluster renderer can not be created from a ClassBreaksRenderer with breaks varied by size instead of color.")}return r}(e),{layer:a,shape:t,defaultSymbolEnabled:p,legendOptions:m}=r,f="renderer"in a?a.renderer:void 0,b=(await l.fetchMessageBundle("esri/smartMapping/t9n/smartMapping")).other;let h=[];"unique-value"===f?.type&&(h=function(e){const{renderer:r,defaultSymbolEnabled:a,defaultLabelBackup:n}=e,{field:t,defaultSymbol:l,defaultLabel:u}=r,c=r.uniqueValueInfos??[],p=l&&a,d=p?9:10,m=i.createUniqueColors(L,d),f=(t?c.slice(0,d).map((e,r)=>{const a=e.label,i=m[r];return{field:new s({name:U(e.value?.toString()),alias:a,onStatisticExpression:new o({title:`Field definition - ${a}`,expression:F(t,e),returnType:"number"}),statisticType:"sum"}),color:R(e.symbol,i)}}):null)??[];if(p){const e="cluster_default",r=u||n;f.push({field:new s({name:U(e),alias:r,onStatisticExpression:new o({title:`Field definition - ${r}`,expression:M(t,c),returnType:"number"}),statisticType:"sum"}),color:R(l,P)})}return f}({renderer:f,defaultSymbolEnabled:p,defaultLabelBackup:b})),"class-breaks"===f?.type&&(h=function(e){const{renderer:r,defaultSymbolEnabled:a,defaultLabelBackup:n}=e,{field:t,classBreakInfos:l,defaultSymbol:u,defaultLabel:c}=r,p=u&&a,d=p?9:10,m=i.createUniqueColors(L,d),f=l.slice(0,d).map((e,r)=>{const a=e.label||`${e.minValue} - ${e.maxValue}`,i=m[r];return{field:new s({name:U(a),alias:a,onStatisticExpression:new o({title:`Field definition - ${a}`,expression:A(t,e),returnType:"number"}),statisticType:"sum"}),color:R(e.symbol,i)}});if(p){const e="cluster_default",r=c||n;f.push({field:new s({name:U(e),alias:r,onStatisticExpression:new o({title:`Field definition - ${r}`,expression:j(t,l),returnType:"number"}),statisticType:"sum"}),color:R(u,P)})}return f}({renderer:f,defaultSymbolEnabled:p,defaultLabelBackup:b}));const y=[],g=[];for(const e of h){const{field:r,color:a}=e;y.push(r),g.push(new c({color:a,field:r.name,label:r.alias}))}return{fields:y,renderer:new u({attributes:g,legendOptions:d.from(m),holePercentage:"donut"===t?.45:0,outline:null,size:9,othersCategory:null})}},e.regenerateRenderer=async function(e){const{creatorParameters:r,view:a,signal:i,filter:t,renderer:l}=await async function(e){const r="regenerate-pie-chart-renderer",a=e.includedParts?.includes("size-variable")??!0;await h.processRegenerateParams(e,r);const i=await h.getRendererToUpdate(e);if("pie-chart"!==h.getStyleType(i))throw new n(`${r}:invalid-parameters`,"Renderer is invalid");const{visualVariables:t}=i,{layer:l,forBinning:s,filter:o,view:u,signal:c}=e,p=h.hasOutlineVV(i),d=h.hasScaleDependentSizeVV(i),m=a&&t?.some(h.isSizeVV),f=i.attributes.map(e=>({field:e.field,label:e.label,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle})),b=await T({layer:l,attributes:f,outlineOptimizationEnabled:p,sizeOptimizationEnabled:d,includeSizeVariable:m,forBinning:s,filter:o,view:u,signal:c});return{...e,creatorParameters:b,renderer:i}}(e),{layer:s,outlineOptimizationEnabled:o,includeSizeVariable:u,sizeOptimizationEnabled:c}=r,p=await I(r),d=p?.scheme?.sizeScheme,[b,g,w]=await Promise.all([o?m({layer:s,view:a,signal:i,filter:t}).catch(y.errorCallback):null,u?O(r,d):null,!u&&c?f({layer:s,view:a,signal:i,filter:t}).catch(y.errorCallback):null]),v=s.geometryType;if(g&&($(g,c,v),h.spliceVisualVariables(l,g?.visualVariables,h.findSizeVVIndex),h.updateAuthoringInfoVisualVariable(l,g?.authoringInfo,"size")),b?.visualVariables?.length){const e=b.visualVariables.map(e=>e.clone()).filter(e=>"color"!==e.type&&"rotation"!==e.type);h.spliceVisualVariables(l,e,h.findOutlineVVIndex)}return w?.minSize&&(k(w,v),h.spliceVisualVariables(l,w?.minSize,h.findScaleDependentSizeVVIndex)),{renderer:l}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});