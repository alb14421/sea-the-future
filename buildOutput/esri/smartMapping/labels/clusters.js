// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/Error","../../intl/messages","../heuristics/clusterMinSize","./support/utils","../support/clusterUtils","../../views/2d/layers/support/clusterUtils"],function(e,t,s,r,n,a,i){"use strict";async function l(e){const{layer:s,renderer:r,view:n}=e;await Promise.all([s.load(),n.when()]);const a=r||s.renderer;if(!i.isClusterCompatibleRenderer(a))throw new t("clusters-label-schemes:invalid-parameters","'renderer' is not valid");return{layer:s,renderer:a,view:n}}async function o(e){const{renderer:t,view:s,statInfo:i}=e,l=i?.statisticType,o=i?a.getClusterField(i.attributeInfo,l):a.clusterCountField,c="type"===l?function(e,t,s){const r="unique-value"===e.type?e.uniqueValueInfos??[]:[];return a.getPredominantTypeExpression(r,t,s)}(t,o,e.noneValueLabel):n.createNumericLabelExpression(o),u=n.createLabelClass(c);return{name:i?`clusters-${l}-${a.getClusterFieldHash(o,l)}`:"clusters-count",labelingInfo:[u],clusterMinSize:await r(u.symbol,s),fieldName:o}}e.getLabelSchemes=async function(e){const[{renderer:i,layer:c,view:u},d]=await Promise.all([l(e),s.fetchMessageBundle("esri/smartMapping/t9n/smartMapping")]),f=d.clusters.predominantNoneValue;if(!i)return null;let p=null;const m=[];if(e.field){const s=n.getAggregateFieldInfo(e.field,c);if(!s)throw new t("clusters-label-schemes:invalid-parameters","'field' is not a valid aggregate field");const{name:a}=s,l=n.createLabelExpressionForAggregateField(c,i,s,f),o=n.createLabelClass(l);return p={name:`clusters-${a}`,labelingInfo:[o],clusterMinSize:await r(o.symbol,u),fieldName:a},{primaryScheme:p,secondarySchemes:m}}const g=function(e){const t=new Map;for(const s of e)"size"===s.attributeInfo.vvType?t.set(s.statisticHash,s):t.has(s.statisticHash)||t.set(s.statisticHash,s);return[...t.values()]}(a.getStatisticInfos(c,i,!1));for(const e of g){const t=await o({renderer:i,view:u,statInfo:e,noneValueLabel:f});"size"===e.attributeInfo.vvType?p=t:m.push(t)}const y=await o({renderer:i,view:u});return p?m.unshift(y):p=y,{primaryScheme:p,secondarySchemes:m}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});