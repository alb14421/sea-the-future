// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../intl","../../core/Error","./support/utils","../support/binningUtils","../../intl/messages"],function(e,n,r,t,a,i){"use strict";async function s(e){const{layer:n,renderer:t}=e;if(await n.load(),"binning"!==n.featureReduction?.type)throw new r("bins-label-schemes:invalid-parameters","featureReduction type of the layer is not valid");const a=t||n.featureReduction.renderer;if(!a)throw new r("bins-label-schemes:invalid-parameters","'renderer' is not valid");return{layer:n,renderer:a}}async function o(e,n,r,a){const i=t.getAggregateFieldInfo(e,n);if(!i)return null;const s=t.createLabelExpressionForAggregateField(n,r,i,a);return{name:`binning-${e}`,labelingInfo:[t.createLabelClass(s,!0)],fieldName:e}}e.getLabelSchemes=async function(e){const[{renderer:n,layer:t},l]=await Promise.all([s(e),i.fetchMessageBundle("esri/smartMapping/t9n/smartMapping")]),c=l.clusters.predominantNoneValue;if(e.field){const a=await o(e.field,t,n,c);if(!a)throw new r("bins-label-schemes:invalid-parameters","'field' is not a valid aggregate field");return{primaryScheme:a,secondarySchemes:[]}}const d=await o(a.aggregateCountField,t),u=[],f=function(e){let n=[];const r=e.featureReduction;return"fields"in r&&(n=r.fields.map(e=>e.name)),n}(t).filter(e=>e.toLowerCase()!==a.aggregateCountField.toLowerCase());for(const e of f){const r=await o(e,t,n,c);r&&u.push(r)}return{primaryScheme:d,secondarySchemes:u}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});