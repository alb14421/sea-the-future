// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../intl/substitute","../../../layers/support/fieldUtils","../../../popup/content/AttachmentsContent","../../../popup/content/Content","../../../popup/content/CustomContent","../../../popup/content/ExpressionContent","../../../popup/content/FieldsContent","../../../popup/content/MediaContent","../../../popup/content/RelationshipContent","../../../popup/content/TextContent","../../../popup/content/UtilityNetworkAssociationsContent","../../../popup/ExpressionInfo","../../../popup/FieldInfo","../../../popup/support/FieldInfoFormat","./utils","../../support/clusterUtils","../../../views/2d/layers/support/clusterUtils"],function(e,t,n,o,s,i,l,r,u,p,a,d,f,c,m,y,F,b){"use strict";function I(e){const{fieldName:t,label:o,type:s}=e,i=null!=s&&n.numericTypes.includes(s),l=new c({fieldName:t,label:o,visible:!0,format:i?new m({places:"integer"===s||"small-integer"===s?0:2,digitSeparator:!0}):void 0});return"date"===s&&(l.format=new m({dateFormat:"short-date-short-time"})),l}function g(e,t){const n=e?t.getField(e):null;return null!=n?n.alias||n.name:void 0}function C(e,n,o){const{attributeInfo:s,statisticType:i}=n,{field:l,normalizationField:r}=s;let u,p="";if("avg"===i?u=r?o.clusters.avgNormFieldLabel:o.clusters.avgFieldLabel:"type"===i&&(u=o.clusters.predominantFieldLabel),u){const n=s.valueExpression?s.valueExpressionTitle:g(l,e),o=r&&g(r,e);p=t.substitute(u,{fieldLabel:n||"",normFieldLabel:o||""})}return p}function x(e,n,o,s){const{attributeInfo:i,statisticType:l}=n,{field:r,normalizationField:u}=i;let p,a="";if("avg"===l?p=u?s.clusters.avgNormFieldSummary:s.clusters.avgFieldSummary:"type"===l&&(p=s.clusters.predominantFieldSummary),p){const n=i.valueExpression?i.valueExpressionTitle:g(r,e),s=u&&g(u,e);a=t.substitute(p,{fieldLabel:n||"",normFieldLabel:s||"",fieldValue:"{"+o+"}"})}return a}function v(e){return{fieldInfo:I({fieldName:F.clusterCountField,label:e.clusters.numFeatures,type:"integer"}),fieldSummary:new a({text:t.substitute(e.clusters.countSummary,{count:`{${F.clusterCountField}}`})})}}e.getContentAndInfos=async function(e,t,n){if(!b.isClusterCompatibleRenderer(t))return null;const o=F.getStatisticInfos(e,t),s=n.clusters.predominantNoneValue,i="unique-value"===t.type?t.uniqueValueInfos??[]:[],{fieldInfo:l,fieldSummary:r}=v(n),u=[r],p=[l],d=[];for(const t of o){const{statisticType:o,attributeInfo:l}=t,r=F.getClusterField(l,o),c=C(e,t,n);if("avg"===o)u.push(new a({text:x(e,t,r,n)})),p.push(I({fieldName:r,label:c,type:"double"}));else if("type"===o){const o=`expression/${r}`;u.push(new a({text:x(e,t,o,n)})),d.push(new f({name:r,title:c,returnType:"string",expression:F.getPredominantTypeExpression(i,r,s)})),p.push(I({fieldName:o}))}}return{fieldInfos:p,expressionInfos:d,content:u}},e.getContentAndInfosForPieChart=async function(e,t,n){if(!b.isClusterCompatibleRenderer(t))return null;const{fieldInfo:o,fieldSummary:s}=v(n),i=[s],l=[o],r=[],{fieldInfos:u,expressionInfos:p}=await y.getFieldAndExpressionInfos({renderer:t,layer:e,isFeatureReduction:!0}),a=await y.getContentFromFieldInfos(e,{fieldInfos:u,expressionInfos:p},!0);return i.push(...a),l.push(...u),r.push(...p),{fieldInfos:l,expressionInfos:r,content:i}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});