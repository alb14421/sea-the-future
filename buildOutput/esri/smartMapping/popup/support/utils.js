// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/arrayUtils","../../../core/has","../../../intl/messages","../../../intl/substitute","../../../layers/support/fieldUtils","../../../popup/content/AttachmentsContent","../../../popup/content/Content","../../../popup/content/CustomContent","../../../popup/content/ExpressionContent","../../../popup/content/FieldsContent","../../../popup/content/MediaContent","../../../popup/content/RelationshipContent","../../../popup/content/TextContent","../../../popup/content/UtilityNetworkAssociationsContent","../../../popup/ExpressionInfo","../../../popup/FieldInfo","../../../popup/support/FieldInfoFormat","../../../renderers/support/utils","../../../renderers/visualVariables/support/visualVariableUtils","../../support/adapters/support/utils"],function(e,t,n,i,s,o,a,r,l,p,u,f,d,c,m,g,F,b,x,y,I){"use strict";let h=0;const $="expression/";function w(e){return"hasVisualVariables"in e&&e.hasVisualVariables()?e.visualVariables.filter(e=>!(y.viewScaleRE.test(e.valueExpression)||"target"in e&&"outline"===e.target)):[]}function C(e,t){if(!t)return null;const n=I.getFeatureReductionFields(e);return n?.find(e=>e.name.toLowerCase()===t.toLowerCase())}function T(e,t,n){let i=null;if(n&&"featureReduction"in e){const t=e.featureReduction;t&&"popupTemplate"in t&&t.popupTemplate&&(i=t.popupTemplate.fieldInfos)}else"popupTemplate"in e&&e.popupTemplate&&(i=e.popupTemplate.fieldInfos);const s=n?C(e,t):e.getField(t);let a=null;if(i&&i.some(e=>!(!e||e.fieldName?.toLowerCase()!==s?.name.toLowerCase()||(a=e.clone(),0))),!a){const e=o.numericTypes.includes(s.type),t="integer"===s.type||"small-integer"===s.type;a=new F({fieldName:s.name,isEditable:s.editable,visible:!0,format:e?new b({places:t?0:2,digitSeparator:!0}):void 0})}return a.label||(a.label=s.alias),a}function V(e){const{expression:t,title:n,returnType:i}=e;return new g({name:"expr"+h++,expression:t,title:n,returnType:i})}function v(e){const t="number"===e.returnType?new b({places:2,digitSeparator:!0}):void 0;return new F({fieldName:`${$}${e.name}`,visible:!0,format:t})}e.expressionFieldPrefix=$,e.getContentFromFieldInfos=async function(e,t,n){const{fieldInfos:o,expressionInfos:a}=t,r=await i.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");if(o.length>2)return[new u({fieldInfos:o})];const l=[];for(const t of o){const i=t.fieldName||"";let o=t.label;if(!o){const t=n?C(e,i):e.getField(i);if(t)o=t.alias||i;else if(a){const e=i.split($)[1],t=a[a.findIndex(t=>t.name===e)];t&&(o=t.title||t.name)}}l.push(new c({text:s.substitute(r.fieldInfo,{fieldLabel:o,fieldValue:`{${i}}`})}))}return l},e.getExpressionInfo=V,e.getFieldAndExpressionInfos=async function(e){const n=await i.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),{renderer:o,layer:a,normFieldExpressionTemplate:r,isFeatureReduction:l}=e,p=[],u=[],f=x.getAttributes(o,w);for(const e of f)if("field"===e.type)p.push(T(a,e.field,l));else if("normalized-field"===e.type){const t=l?C(a,e.field):a.getField(e.field),i=l?C(a,e.normalizationField):a.getField(e.normalizationField),o=V({expression:`\n      $feature["${t.name}"];\n      $feature["${i.name}"];\n      ${"percentage"===r?`($feature["${t.name}"] / $feature["${i.name}"]) * 100;`:`$feature["${t.name}"] / $feature["${i.name}"];`}\n      `,title:"percentage"===r?s.substitute(n.normFieldLabelAsPercent,{expression1:t.alias,expression2:i.alias}):s.substitute(n.normFieldLabel,{expression1:t.alias,expression2:i.alias}),returnType:"number"});p.push(v(o),T(a,e.field,l),T(a,e.normalizationField,l)),u.push(o)}else if("expression"===e.type){const t=V(e);p.push(v(t)),u.push(t)}return{fieldInfos:t.unique(p,(e,t)=>e.fieldName===t.fieldName),expressionInfos:t.unique(u,(e,t)=>e.expression===t.expression)}},e.getFieldInfo=T,e.getFieldInfoFromExpressionInfo=v,e.getPrimaryVisualVariables=w,e.hasNormalizedField=function(e){return!(!("normalizationField"in e)||!e.normalizationField)||"hasVisualVariables"in e&&e.hasVisualVariables()&&e.visualVariables.some(e=>!(!("normalizationField"in e)||!e.normalizationField))},e.resetSuffixForTests=function(e=0){},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});