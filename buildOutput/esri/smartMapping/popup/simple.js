// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../PopupTemplate","../../core/Error","../../intl/messages","./support/utils","../../support/popupUtils"],function(e,r,n,t,s,i){"use strict";async function a(e){const{layer:r,renderer:t}=e;await r.load();const s=t??("renderer"in r?r.renderer:void 0);if("simple"!==s?.type)throw new n("simple-popup:invalid-parameters","renderer.type must be 'simple'");return{layer:r,renderer:s}}async function l(e,n,t="divide"){const{fieldInfos:i,expressionInfos:a}=await s.getFieldAndExpressionInfos({renderer:e,layer:n,normFieldExpressionTemplate:t});return new r({content:await s.getContentFromFieldInfos(n,{fieldInfos:i,expressionInfos:a}),expressionInfos:a,fieldInfos:i})}e.getTemplates=async function(e){const[{renderer:r,layer:n},p]=await Promise.all([a(e),t.fetchMessageBundle("esri/smartMapping/t9n/smartMapping")]),o=[];if(!s.getPrimaryVisualVariables(r).length){const e=i.createPopupTemplate(n);return e?{primaryTemplate:{name:"simple",title:p.simple,value:e},secondaryTemplates:o}:null}const m={name:"simple",title:p.simple,value:await l(r,n)};return s.hasNormalizedField(r)&&o.push({name:"simple-percent",title:p.simpleNormFieldAsPercent,value:await l(r,n,"percentage")}),{primaryTemplate:m,secondaryTemplates:o}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});