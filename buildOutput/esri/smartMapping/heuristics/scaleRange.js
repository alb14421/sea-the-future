// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../core/Error","../../geometry/support/scaleUtils","../statistics/spatialStatistics","../support/binningUtils","../support/adapters/support/layerUtils"],function(e,a,n,t,i){"use strict";function r(e,a,n=!0){if(e.constraints&&"effectiveLODs"in e.constraints){const t=e.constraints.effectiveLODs,i=n?t:t.slice().reverse();let r=null;for(const e of i)if(!(n?e.scale>a:e.scale<a)){r=e;break}return r}}return async function(s){const l=await async function(a){const{view:n,sampleSize:r}=a;if(!a||!a.layer)throw new e("scale-range:missing-parameters","'layer' parameter is required");if(a.snapToLOD&&!n)throw new e("scale-range:missing-parameters","'view' parameter is required when 'snapToLOD' is true");a.forBinning&&t.verifyBinningParams(a,"scale-range");const{layer:s,...l}=a,o=a.forBinning?i.binningCapableLayerTypes:i.featureCapableLayerTypes,c=i.createLayerAdapter(s,o,a.forBinning);if(!c)throw new e("scale-range:invalid-parameters","'layer' must be one of these types: "+i.getLayerTypeLabels(o).join(", "));const p={layerAdapter:c,...l};p.sampleSize=r||500,await(n?.when());const u=null!=p.signal?{signal:p.signal}:null;return await c.load(u),p}(s),{view:o,sampleSize:c,layerAdapter:p,signal:u,filter:f}=l,g=await p.getSampleFeatures({view:o,sampleSize:c,returnGeometry:!0,filter:f,signal:u},"json");if(!g?.length)throw new e("scale-range:insufficient-info","No features are available to calculate statistics");const y=await n({features:g,geometryType:p.geometryType}),{minScale:m,maxScale:w}=function(e,n,t){const i=function(e,a){let n=0,t=0,i=0,r=0;switch(e){case"point":case"multipoint":{const e=a;n=e.avgMinDistance??0,t=12,i=e.minDistance??0,r=320;break}case"polyline":{const e=a;n=e.avgLength??0,t=30,i=e.minLength??0,r=320;break}case"polygon":{const e=a;n=e.avgSize??0,t=15,i=e.minSize??0,r=640;break}}return{resolutionForMinScale:n>0?n/t:null,resolutionForMaxScale:i>0?i/r:null}}(e.geometryType,n),r=t?.spatialReference||e.layer.spatialReference;return{minScale:a.getScaleForResolution(i.resolutionForMinScale??0,r),maxScale:a.getScaleForResolution(i.resolutionForMaxScale??0,r)}}(p,y,o);return function(a,n,t,i){const{view:s,snapToLOD:l,layerAdapter:o}=a;if(l&&s){const e=r(s,n),a=r(s,t,!1);n=e?e.scale:n,t=a?a.scale:t}if(n<t)throw new e("scale-range:invalid","calculated minScale is less than maxScale.");return t>n/2&&(t=Math.floor(t/2)),n>1e8&&(n=0),"polygon"!==o.geometryType&&(t=0),{minScale:Math.ceil(n),maxScale:Math.floor(t),spatialStatistics:i}}(l,m,w,y)}});