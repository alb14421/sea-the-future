// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../../chunks/tslib.es6","../../../../core/Error","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/Extent","../../../../layers/support/rasterFunctions/stretchUtils","./RasterLayerAdapter"],function(t,e,r,a,s,i,o,n,c,l){"use strict";let h=class extends l{async generateRasterInfo(t){const{layer:e}=this,r=t?.rasterFunction;if("imagery-tile"===e.type&&r)try{return await e.generateRasterInfo(r,{signal:t?.signal})}catch{return e.serviceRasterInfo}return this.rasterInfo}async estimateStatisticsHistograms(t){const{layer:r}=this,a=r.multidimensionalDefinition?.[0]?.variableName??"",s=`${r.rasterFunction?.functionName??"default"}${a}`,i=this._statsCache.get(s);if(i)return i;const{raster:o}=r,{extent:l,width:h,height:m}=function(t,e=1e3){const{pyramidScalingFactor:r,maximumPyramidLevel:a}=t.storageInfo;let{extent:s,width:i,height:o,pixelSize:c}=t,l=Math.max(0,Math.ceil(Math.log(Math.max(i,o)/e)/Math.log(r))-1),h=0,m=0;if(l<=a){const t=r**l;i=Math.floor(i/t),o=Math.floor(o/t)}else l=0,i=Math.min(i,e),o=Math.min(o,e),h=Math.max(Math.floor(i/2-500),0),m=Math.max(Math.floor(o/2-500),0),s=new n({xmin:s.xmin+h*c.x,xmax:Math.min(s.xmax,s.xmin+h*c.x*e),ymin:s.ymin+m*c.y,ymax:Math.min(s.ymax,s.ymin+m*c.y*e)});return{extent:s,width:i,height:o,origin:{x:h,y:m}}}(o.rasterInfo),{pixelBlock:u}=await r.fetchPixels(l,h,m,t);if(null==u)throw new e("raster-layer-adapter","Unable to estimate histograms");const y=c.estimateStatisticsHistograms(u);return y&&this._statsCache.put(s,y),y}supportsMultidirectionalHillshade(){return!0}load(t){return this.addResolvingPromise(this.layer.load(t).then(()=>this.rasterInfo=this.layer.raster.rasterInfo)),Promise.resolve(this)}};return t.__decorate([r.property()],h.prototype,"layer",void 0),h=t.__decorate([o.subclass("esri.smartMapping.raster.support.adapters.ImageryTileLayerAdapter")],h),h});