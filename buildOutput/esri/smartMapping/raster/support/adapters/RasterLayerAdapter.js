// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../../chunks/tslib.es6","../../../../core/Loadable","../../../../core/LRUCache","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass"],function(t,e,r,s,o,a,c,p){"use strict";let i=class extends e.Loadable{constructor(){super(...arguments),this.type="raster-layer-adapter",this._statsCache=new r.LRUCache(20)}get serviceRasterInfo(){return this.rasterInfo}async updateRasterInfo(t){this.rasterInfo=await this.generateRasterInfo(t),this.rasterFunction=t?.rasterFunction}async updateRasterInfoWithEstimatedStats(t,e){const r=await this.estimateStatisticsHistograms(e);r?.statistics&&(t.statistics=r.statistics),r?.histograms&&(t.histograms=r.histograms)}};return t.__decorate([s.property()],i.prototype,"layer",void 0),t.__decorate([s.property()],i.prototype,"serviceRasterInfo",null),t.__decorate([s.property()],i.prototype,"rasterInfo",void 0),t.__decorate([s.property()],i.prototype,"rasterFunction",void 0),t.__decorate([s.property({readOnly:!0})],i.prototype,"type",void 0),t.__decorate([s.property()],i.prototype,"version",void 0),i=t.__decorate([p.subclass("esri.smartMapping.raster.support.adapters.RasterLayerAdapter")],i),i});