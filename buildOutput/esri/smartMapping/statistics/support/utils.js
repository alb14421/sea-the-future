// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Error","../../../core/screenUtils","../../../core/timeUtils","../../../geometry/Point","../../../geometry/SpatialReference","../../../geometry/support/quantizationUtils","../../../geometry/support/spatialReferenceUtils","../../../layers/support/fieldUtils","../../../renderers/support/heatmapUtils","../../support/utils","../../../statistics/utils","../../../support/loadArcade"],function(e,t,n,i,l,r,s,o,a,u,c,f,d){"use strict";let p=null;const m=/^(?<hh>([01][0-9])|(2[0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?(\.(?<ms>\d+))?$/;function h(e){const t=m.exec(e);if(!t)return null;const{hh:n,mm:l,ss:r,ms:s}=t.groups;return Number(n)*i.millisecondsPerTimeUnit.hours+Number(l)*i.millisecondsPerTimeUnit.minutes+Number(r)*i.millisecondsPerTimeUnit.seconds+Number(s||0)}function y(e,t){let n=null!=e?e:"";return null!=t&&t&&(n=n?"("+n+") AND ("+t+")":t),n}e.calculateHeatmapStats=function(e,t=18,i,l,r){const s=new Float64Array(l*r);t=Math.round(n.pt2px(t));let o=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;const c=u.createValueFunction(i);for(const{geometry:n,attributes:i}of e){const{x:e,y:f}=n,d=Math.max(0,e-t),p=Math.max(0,f-t),m=Math.min(r,f+t),h=Math.min(l,e+t),y=+c(i);for(let n=p;n<m;n++)for(let i=d;i<h;i++){const r=n*l+i,c=u.evaluateDensityKernel(i-e,n-f,t)*y,d=s[r]+=c;o=Math.min(o,d),a=Math.max(a,d)}}return{min:o,max:a}},e.getDataValues=async function(e,t,n=!0){if(!t)return[];const{field:i,field2:l,field3:s,fieldDelimiter:o,fieldInfos:u,timeZone:m}=e,y=i&&u?.find(e=>e.name.toLowerCase()===i.toLowerCase()),g=!!y&&a.isTimeOnlyField(y),$=!!y&&c.isAnyDateField(y),F=e.valueExpression,x=e.normalizationType,b=e.normalizationField,N=e.normalizationTotal,w=[],I=e.viewInfoParams;let v=null,T=null;if(F){if(!p){const{arcadeUtils:e}=await d.loadArcade();p=e}p.hasGeometryOperations(F)&&await p.enableGeometryOperations(),v=p.createFunction(F),T=I?p.getViewInfo({viewingMode:I.viewingMode,scale:I.scale,spatialReference:new r(I.spatialReference)}):null}const E=e.fieldInfos,U=t[0]&&"declaredClass"in t[0]&&"esri.Graphic"===t[0].declaredClass||!E?null:{fields:E};return t.forEach(e=>{const t=e.attributes;let r;if(F){const t=U?Object.assign({},e,{layer:U}):e,n=p.createExecContext(t,T,m);r=p.executeFunction(v,n)}else t&&(r=t[i],l?(r=`${f.processNullValue(r)}${o}${f.processNullValue(t[l])}`,s&&(r=`${r}${o}${f.processNullValue(t[s])}`)):"string"==typeof r&&n&&($?r=r?new Date(r).getTime():null:g&&(r=r?h(r):null)));if(x&&"number"==typeof r&&isFinite(r)){const e=t&&parseFloat(t[b]);r=f.getNormalizedValue(r,x,e,N)}w.push(r)}),w},e.getRangeExpr=function(e,t,n){const i=null!=t?e+" >= "+t:"",l=null!=n?e+" <= "+n:"";let r="";return r=i&&l?y(i,l):i||l,r?"("+r+")":""},e.getSQLFilterForNormalization=function(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let l;return"field"===n?l="(NOT "+i+" = 0)":"log"!==n&&"natural-log"!==n&&"square-root"!==n||(l=`(${t} > 0)`),l},e.getSumOfAttributesExpr=function(e,t,n){const i=[],l=[],r=[],s=[],o=[];e.forEach((e,t)=>{const a=e.field?"field":"expression",u=e.field||e.valueExpression;e.field?(o.push(u),l.push(`var ${a}${t} = Number($feature["${u}"]);`)):(i.push(`function getValueForExpr${t}() {\n  ${u} \n}`),l.push(`var ${a}${t} = Number(getValueForExpr${t}());`)),n||r.push(`${a}${t} = IIf(${a}${t} < 0, 0, ${a}${t});`),s.push(`${a}${t}`)});const a=i.length?null:o.reduce((e,t)=>`${e} + ${t}`);let u=null;return t||n?t?n||a&&(u=`(( ${a} ) >= 0)`):a&&(u=`(( ${a} ) <> 0)`):a&&(u=`(( ${a} ) > 0)`),{valueExpression:[i.length?i.join("\n"):"",l.join("\n"),r.join("\n"),`var total = ${s.join(" + ")};`,"return total;"].filter(Boolean).join("\n\n"),sqlExpression:a,sqlWhere:u}},e.mergeWhereClauses=y,e.quantizeFeatures=function(e,t,n,i){const r=o.isWrappable(n)?o.getInfo(n):null,a=r?Math.round((r.valid[1]-r.valid[0])/t.scale[0]):null;return e.map(e=>{const n=new l(e.geometry);return s.quantizePoint(t,n,n),e.geometry=r?function(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}(n,a??0,i[0]):n,e})},e.timeOnlyToMilliseconds=h,e.verifyBasicFieldValidity=function(e,n,i){const l=function(e){const t=e.layer;return e.fields.filter(e=>!t.getField(e))}({layer:e,fields:n});if(l.length)return new t(i,"Unknown fields: "+l.join(", ")+". You can only use fields defined in the layer schema");const r=function(e){const t=e.layer;return e.fields.filter(e=>{const n=t.getFieldUsageInfo(e);return!n||!n.supportsStatistics})}({layer:e,fields:n});return r.length?new t(i,"Unsupported fields: "+r.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0},e.verifyFieldType=function(e,n,i,l){let r;return n?n.name!==e.objectIdField&&l.includes(n.type)||(r=new t(i,"'field' should be one of these types: "+l.join(","))):r=new t(i,"'field' is not defined in the layer schema"),r},e.verifyFilterValidity=function(e,n){if(e&&"intersects"!==e.spatialRelationship)return new t(n,"Only 'intersects' spatialRelationship is supported for featureFilter")},e.verifyNumericField=function(e,n,i){let l;return n?n.name!==e.objectIdField&&a.isNumericField(n)||(l=new t(i,"'field' should be one of these numeric types: "+a.numericTypes.join(","))):l=new t(i,"'field' is not defined in the layer schema"),l},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});