// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../core/Error","./support/utils","../support/binningUtils","../support/utils","../support/adapters/support/layerUtils"],function(e,t,s,i,r){"use strict";return async function(a){const{layerAdapter:n,...l}=await async function(a){if(!(a&&a.layer&&a.attributes))throw new e("summary-statistics-for-attributes:missing-parameters","'layer' and 'attributes' parameters are required");if(a.attributes.some(e=>!!e.valueExpression)&&!a.view)throw new e("summary-statistics-for-attributes:missing-parameters","View is required when 'valueExpression' is specified in attributes");a.forBinning&&s.verifyBinningParams(a,"summary-statistics-for-attributes");const{layer:n,...l}=a,u=a.forBinning?r.binningCapableLayerTypes:[2,3,7,4,6,9,15],o=r.createLayerAdapter(n,u,a.forBinning);if(!o)throw new e("summary-statistics-for-attributes:invalid-parameters","'layer' must be one of these types: "+r.getLayerTypeLabels(u).join(", "));const p={layerAdapter:o,...l};p.includeZeros=null==p.includeZeros||p.includeZeros,p.includeNegatives=null==p.includeNegatives||p.includeNegatives;const c=p.view,y=null!=p.signal?{signal:p.signal}:null;await Promise.all([c?.when(),o.load(y)]);const f=[];for(const e of p.attributes){const t=await i.getFieldsList({field:e.field,valueExpression:e.valueExpression});Array.prototype.push.apply(f,t)}const d=t.verifyBasicFieldValidity(o,f,"summary-statistics-for-attributes:invalid-parameters");if(d)throw d;return p}(a),u=t.getSumOfAttributesExpr(l.attributes,l.includeZeros,l.includeNegatives);return n.summaryStatistics({valueExpression:u.valueExpression,sqlExpression:u.sqlExpression,sqlWhere:u.sqlWhere,view:l.view,filter:l.filter,outStatisticTypes:i.defaultStatisticTypes,signal:l.signal})}});