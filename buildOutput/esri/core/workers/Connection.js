// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../handleUtils","../has","../promiseUtils","../Queue","./connectionRegistry","./InvokeHandler","./RemoteClient"],function(e,t,s,i,o,n,r){"use strict";return class{constructor(){this._inUseClients=new Array,this._clients=new Array,this._clientPromises=new Array,this._ongoingJobsQueue=new i,this._ongoingLowPriorityJobsQueue=new i}destroy(){this.close()}get closed(){return!this._clients?.length}open(e,t){return new Promise((i,o)=>{let n=!0;const l=e=>{s.throwIfAborted(t.signal),n&&(n=!1,e())};this._clients.length=e.length,this._clientPromises.length=e.length,this._inUseClients.length=e.length;for(let n=0;n<e.length;++n){const h=e[n];s.isPromiseLike(h)?this._clientPromises[n]=h.then(e=>(this._clients[n]=new r(e,t,this._ongoingJobsQueue,this._ongoingLowPriorityJobsQueue),l(i),this._clients[n]),()=>(l(o),null)):(this._clients[n]=new r(h,t,this._ongoingJobsQueue,this._ongoingLowPriorityJobsQueue),this._clientPromises[n]=Promise.resolve(this._clients[n]),l(i))}})}broadcast(e,t,s){const i=new Array(this._clientPromises.length);for(let o=0;o<this._clientPromises.length;++o){const n=this._clientPromises[o];i[o]=n.then(i=>i?.invoke(e,t,s))}return i}close(){let e;for(;e=this._ongoingJobsQueue.pop();)e.resolver.reject(s.createAbortError(`Worker closing, aborting job calling '${e.methodName}'`));for(;e=this._ongoingLowPriorityJobsQueue.pop();)e.resolver.reject(s.createAbortError(`Worker closing, aborting job calling '${e.methodName}'`));for(const e of this._clientPromises)e.then(e=>e?.close());this._clients.length=0,this._clientPromises.length=0,this._inUseClients.length=0,o.unregister(this)}invoke(e,t,s){return this.apply(e,[t],s)}apply(e,t,i){const o=s.createResolver();("low"===i?.priority?this._ongoingLowPriorityJobsQueue:this._ongoingJobsQueue).push({methodName:e,data:t,invokeOptions:i,resolver:o});for(let e=0;e<this._clientPromises.length;e++){const t=this._clients[e];t?t.jobAdded():this._clientPromises[e].then(e=>e?.jobAdded())}return o.promise}createInvokeProxy(e){return n.createInvokeProxy(this,e)}on(t,s){return Promise.all(this._clientPromises).then(()=>e.handlesGroup(this._clients.map(e=>e.on(t,s))))}openPorts(){return new Promise(e=>{const t=new Array(this._clientPromises.length);let s=t.length;for(let i=0;i<this._clientPromises.length;++i)this._clientPromises[i].then(o=>{o&&(t[i]=o.openPort()),0===--s&&e(t)})})}get test(){}}});