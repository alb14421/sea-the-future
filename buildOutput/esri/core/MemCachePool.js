// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./Logger","./MemCache"],function(e,t,c){"use strict";class h extends Array{constructor(e){super(),this.item=e,this.cachedMemory=e.cachedMemory,this.push(e)}}e.MemCachePool=class{constructor(e,c){this._cache=e(c,(e,c,h)=>{switch(c){case 0:return e.forEach(e=>e.dispose()),0;case 1:{const c=e.shift();return c?(h-=Math.round(c.cachedMemory),c.dispose()):h>0&&(t.getLogger("esri/core/MemCachePool").warn("Encountered empty MemCachePool with non-zero memory."),h=0),h}}})}hitrate(){return this._cache.hitRate}destroy(){this._cache.destroy()}clear(){this._cache.clear()}getSize(e){return this._cache.getSize(e)}pop(e){const t=this._cache.peek(e);if(!t)return;const c=t.pop();return t.length>0?c&&(t.cachedMemory=this._cache.getSize(e)-Math.round(c.cachedMemory),this._cache.updateSize(e,t)):this._cache.pop(e),c}put(e,t,r=c.NoPriority){const o=this._cache.peek(e);if(!o){const c=new h(t);return void this._cache.put(e,c,r)}o.push(t),o.cachedMemory=this._cache.getSize(e)+Math.round(t.cachedMemory),this._cache.updateSize(e,o)}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});