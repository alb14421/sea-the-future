// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./errorSupport"],function(e,r){"use strict";function t(e){if(null!==e.precision||null!==e.secondary)throw new r.SqlError("PrimarySecondaryQualifiers")}function l(e,r){if(r.includes(".")){const t=r.split(".");e.second=parseFloat(t[0]),e.millis=parseInt(t[1],10)}else e.second=parseFloat(r)}const o="esri.core.sql.SqlInterval";class s{constructor(){this.declaredRootClass=o,this.op="+",this.day=0,this.second=0,this.hour=0,this.month=0,this.year=0,this.minute=0,this.millis=0}static isInterval(e){return"object"==typeof e&&null!=e&&"declaredRootClass"in e&&e.declaredRootClass===o}static createFromMilliseconds(e){const r=new s;return r.second=e/1e3,r}static createFromValueAndQualifier(e,o,a){let n=null;const i=new s;if(i.op="-"===a?"-":"+","interval-period"===o.type){t(o);const s=new RegExp("^[0-9]{1,}$");if("year"===o.period||"month"===o.period)throw new r.SqlError("YearMonthIntervals");if("second"===o.period){if(!/^[0-9]{1,}(\.[0-9]{1,}){0,1}$/.test(e))throw new r.SqlError("IllegalInterval");l(i,e)}else{if(!s.test(e))throw new r.SqlError("IllegalInterval");i[o.period]=parseFloat(e)}}else{if(t(o.start),t(o.end),"year"===o.start.period||"month"===o.start.period||"year"===o.end.period||"month"===o.end.period)throw new r.SqlError("YearMonthIntervals");switch(o.start.period){case"day":switch(o.end.period){case"hour":if(n=new RegExp("^[0-9]{1,} [0-9]{1,}$"),!n.test(e))throw new r.SqlError("IllegalInterval");i[o.start.period]=parseFloat(e.split(" ")[0]),i[o.end.period]=parseFloat(e.split(" ")[1]);break;case"minute":if(n=new RegExp("^[0-9]{1,} [0-9]{1,2}:[0-9]{1,}$"),!n.test(e))throw new r.SqlError("IllegalInterval");{i[o.start.period]=parseFloat(e.split(" ")[0]);const r=e.split(" ")[1].split(":");i.hour=parseFloat(r[0]),i.minute=parseFloat(r[1])}break;case"second":if(n=new RegExp("^[0-9]{1,} [0-9]{1,2}:[0-9]{1,2}:[0-9]{1,}(\\.[0-9]{1,}){0,1}$"),!n.test(e))throw new r.SqlError("IllegalInterval");{i[o.start.period]=parseFloat(e.split(" ")[0]);const r=e.split(" ")[1].split(":");i.hour=parseFloat(r[0]),i.minute=parseFloat(r[1]),l(i,r[2])}break;default:throw new r.SqlError("IllegalInterval")}break;case"hour":switch(o.end.period){case"minute":if(n=new RegExp("^[0-9]{1,}:[0-9]{1,}$"),!n.test(e))throw new r.SqlError("IllegalInterval");i.hour=parseFloat(e.split(":")[0]),i.minute=parseFloat(e.split(":")[1]);break;case"second":if(n=new RegExp("^[0-9]{1,}:[0-9]{1,2}:[0-9]{1,}(\\.[0-9]{1,}){0,1}$"),!n.test(e))throw new r.SqlError("IllegalInterval");{const r=e.split(":");i.hour=parseFloat(r[0]),i.minute=parseFloat(r[1]),l(i,r[2])}break;default:throw new r.SqlError("IllegalInterval")}break;case"minute":if("second"!==o.end.period)throw new r.SqlError("IllegalInterval");if(n=new RegExp("^[0-9]{1,}:[0-9]{1,}(\\.[0-9]{1,}){0,1}$"),!n.test(e))throw new r.SqlError("IllegalInterval");{const r=e.split(":");i.minute=parseFloat(r[0]),l(i,r[1])}break;default:throw new r.SqlError("IllegalInterval")}}return i}valueInMilliseconds(){return("-"===this.op?-1:1)*(this.millis+1e3*this.second+60*this.minute*1e3+60*this.hour*60*1e3+24*this.day*60*60*1e3+this.month*(365/12)*24*60*60*1e3+365*this.year*24*60*60*1e3)}}e.SqlInterval=s,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});