// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./Accessor","./handleUtils"],function(e,t,s){"use strict";const n=e=>{const t=e;return class extends t{constructor(){super(...arguments),this._listenersMap=null}clearEvents(){this._listenersMap?.clear(),this._listenersMap=null}destroy(){this.clearEvents()}emit(e,t){let s=this._listenersMap?.get(e);if(!s)return!1;let n=!1;for(const e of s.slice()){const s="deref"in e?e.deref():e;s?s?.call(this,t):n=!0}return n&&(s=s.filter(e=>!("deref"in e)||null!=e.deref()),this._listenersMap.set(e,s)),s.length>0}on(e,t){if(Array.isArray(e)){const n=e.map(e=>this.on(e,t));return s.handlesGroup(n)}if(e.includes(","))throw new TypeError("Evented.on() with a comma delimited string of event types is not supported");this._listenersMap??=new Map;const n=this._listenersMap.get(e)||[];return n.push(t),this._listenersMap.set(e,n),s.makeHandle(()=>{const s=this._listenersMap?.get(e),n=s?.indexOf(t)??-1;n>=0&&s.splice(n,1)})}once(e,t){const s=this.on(e,e=>{s.remove();const n="deref"in t?t.deref():t;n?.call(null,e)});return s}hasEventListener(e){const t=this._listenersMap?.get(e);return null!=t&&t.length>0}}},r=n(class{}),i=r,l=n(t);e.EventEmitter=i,e.Evented=r,e.EventedAccessor=l,e.EventedMixin=n,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});