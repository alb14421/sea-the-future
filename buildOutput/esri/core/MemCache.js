// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./has"],function(t,e){"use strict";const i=!!e("esri-tests-disable-gpu-memory-measurements");class s{constructor(t,e,i,s=0){this.name=t,this._storage=e,this.removeFunc=i,this._defaultPriority=s,this.id=`${h++}${o}`,this.size=0,this._hit=0,this._miss=0,this._storage.register(this)}destroy(){this._storage.deregister(this),this._storage=null}get hitRate(){return this._hit/(this._hit+this._miss)}get storageSize(){return this._storage.size}getSize(t){return this._storage.getSize(this,t)}set maxSize(t){this._storage.setMaxSize(this,t)}resetHitRate(){this._hit=this._miss=0}put(t,e,i=this._defaultPriority){this._storage.put(this,t,e,e.cachedMemory,i)}pop(t){const e=this._storage.pop(this,t);return void 0===e?++this._miss:++this._hit,e}get(t){const e=this._storage.get(this,t);return void 0===e?++this._miss:++this._hit,e}peek(t){return this._storage.peek(this,t)}updateSize(t,e){this._storage.updateSize(this,t,e,e.cachedMemory)}clear(){this._storage.clear(this)}clearAll(){this._storage.clearAll()}*[Symbol.iterator](){yield*this._storage.values(this)}get performanceInfo(){return this._storage.performanceInfo}resetStats(){this._storage.resetStats()}}let h=0;class r{constructor(t,e,i){this.entry=t,this.size=e,this.lifetime=i,this.lives=i}}const o=":";t.MemCache=s,t.MemCacheStorage=class{get size(){return this._size}constructor(t=10485760){this._maxSize=t,this._db=new Map,this._size=0,this._hit=0,this._miss=0,this._users=new Map,this._sizeLimits=new Map}destroy(){this.clearAll(),this._sizeLimits.clear(),this._users.clear(),this._db=null}register(t){this._users.set(t.id.slice(0,-1),t)}deregister(t){this.clear(t),this._sizeLimits.delete(t),this._users.delete(t.id.slice(0,-1))}get maxSize(){return this._maxSize}set maxSize(t){this._maxSize=Math.max(t,-1),this._checkSize()}getSize(t,e){const i=this._db.get(t.id+e);return i?.size??0}put(t,e,s,h,o){e=t.id+e;const n=this._db.get(e);if(n&&(this._size-=n.size,t.size-=n.size,this._db.delete(e),n.entry!==s&&this._notifyRemove(e,n.entry,n.size,0)),h>this._maxSize)return void this._notifyRemove(e,s,h,0);if(void 0===s)return void console.warn("Refusing to cache undefined entry ");if(!h||h<0)return i||console.warn(`Refusing to cache entry with size ${h} for key ${e}`),void this._notifyRemove(e,s,0,0);const _=1+Math.max(o,-4)- -3;this._db.set(e,new r(s,h,_)),this._size+=h,t.size+=h,this._checkSize()}updateSize(t,e,i,s){e=t.id+e;const h=this._db.get(e);if(h&&h.entry===i){for(this._size-=h.size,t.size-=h.size;s>this._maxSize;){const t=this._notifyRemove(e,i,s,1);if(!(null!=t&&t>0))return void this._db.delete(e);s=t}h.size=s,this._size+=s,t.size+=s,this._checkSize()}}pop(t,e){e=t.id+e;const i=this._db.get(e);if(i)return this._size-=i.size,t.size-=i.size,this._db.delete(e),++this._hit,i.entry;++this._miss}get(t,e){e=t.id+e;const i=this._db.get(e);if(void 0!==i)return this._db.delete(e),i.lives=i.lifetime,this._db.set(e,i),++this._hit,i.entry;++this._miss}peek(t,e){const i=this._db.get(t.id+e);return i?++this._hit:++this._miss,i?.entry}get performanceInfo(){const t={Size:Math.round(this._size/1048576)+"/"+Math.round(this._maxSize/1048576)+"MB","Hit rate":Math.round(100*this._getHitRate())+"%",Entries:this._db.size.toString()},e={},i=new Array;this._db.forEach((t,s)=>{const h=t.lifetime;i[h]=(i[h]||0)+t.size,this._users.forEach(i=>{const{id:h,name:r}=i;if(s.startsWith(h)){const i=e[r]||0;e[r]=i+t.size}})});const s={};this._users.forEach(t=>{const i=t.name;if("hitRate"in t&&"number"==typeof t.hitRate&&!isNaN(t.hitRate)&&t.hitRate>0){const h=e[i]||0;e[i]=h,s[i]=Math.round(100*t.hitRate)+"%"}else s[i]="0%"});const h=Object.keys(e);h.sort((t,i)=>e[i]-e[t]),h.forEach(i=>t[i]=Math.round(e[i]/2**20)+"MB / "+s[i]);for(let e=i.length-1;e>=0;--e){const s=i[e];s&&(t["Priority "+(e+-3-1)]=Math.round(s/this._size*100)+"%")}return t}resetStats(){this._hit=this._miss=0,this._users.forEach(t=>t.resetHitRate())}clear(t){const e=t.id;this._db.forEach((t,i)=>{i.startsWith(e)&&(this._size-=t.size,this._db.delete(i),this._notifyRemove(i,t.entry,t.size,0))}),t.size=0}clearAll(){this._db.forEach((t,e)=>this._notifyRemove(e,t.entry,t.size,0)),this._users.forEach(t=>t.size=0),this._size=0,this._db.clear()}*values(t){for(const[e,i]of this._db)e.startsWith(t.id)&&(yield i.entry)}_getHitRate(){return this._hit/(this._hit+this._miss)}_notifyRemove(t,e,i,s){const h=this._users.get(t.split(o)[0])?.removeFunc,r=h?.(e,s,i);return"number"==typeof r?r:null}_checkSize(){this._sizeLimits.forEach((t,e)=>this._checkSizeLimits(t,e)),this._checkSizeLimits(this.maxSize)}setMaxSize(t,e){null==e||e<=0?this._sizeLimits.delete(t):this._sizeLimits.set(t,e)}_checkSizeLimits(t,e){const i=e??this;if(i.size<=t)return;const s=e?.id;let h=!0;for(;h;){h=!1;for(const[r,n]of this._db)if(0===n.lifetime&&(!s||r.startsWith(s))){const s=e??this._users.get(r.split(o)[0]);if(this._purgeItem(r,n,s),i.size<=.9*t)return;h||=this._db.has(r)}}for(const[h,r]of this._db)if(!s||h.startsWith(s)){const s=e??this._users.get(h.split(o)[0]);if(this._purgeItem(h,r,s),i.size<=.9*t)return}}_purgeItem(t,e,i){if(this._db.delete(t),e.lives<=1){this._size-=e.size,i&&(i.size-=e.size);const s=this._notifyRemove(t,e.entry,e.size,1);null!=s&&s>0&&(this._size+=s,i&&(i.size+=s),e.lives=e.lifetime,e.size=s,this._db.set(t,e))}else--e.lives,this._db.set(t,e)}},t.MinPriority=-3,t.NoPriority=-4,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});