// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","./chunks/tslib.es6","./config","./request","./core/Collection","./core/collectionUtils","./core/JSONSupport","./core/lang","./core/Loadable","./core/loadAll","./core/Logger","./core/maybe","./core/promiseUtils","./core/urlUtils","./core/accessorSupport/decorators/property","./core/has","./core/accessorSupport/decorators/subclass","./core/accessorSupport/decorators/writer","./geometry/SpatialReference","./portal/Portal","./portal/PortalItem","./support/basemapDefinitions","./support/BasemapStyle","./webdoc/support/writeUtils"],function(e,r,t,a,s,o,i,l,n,c,p,y,d,h,u,m,f,b,w,L,g,I,_,S){"use strict";var v;let U=0,O=v=class extends(i.JSONSupportMixin(n.Loadable)){constructor(e){super(e),this.id=null,this.portalItem=null,this.spatialReference=null,this.style=null,this.thumbnailUrl=null,this.title="Basemap",this.id=Date.now().toString(16)+"-basemap-"+U++,this.baseLayers=new s,this.referenceLayers=new s;const r=e=>{e.parent&&e.parent!==this&&"remove"in e.parent&&e.parent.remove(e),e.parent=this,"elevation"===e.type&&p.getLogger(this).error(`Layer '${e.title}, id:${e.id}' of type '${e.type}' is not supported as a basemap layer and will therefore be ignored.`)},t=e=>{e.parent=null};this.addHandles([this.baseLayers.on("after-add",e=>r(e.item)),this.referenceLayers.on("after-add",e=>r(e.item)),this.baseLayers.on("after-remove",e=>t(e.item)),this.referenceLayers.on("after-remove",e=>t(e.item))])}initialize(){this.when().catch(e=>{p.getLogger(this).error("#load()",`Failed to load basemap (title: '${this.title}', id: '${this.id}')`,e)}),this.resourceInfo&&this.read(this.resourceInfo.data,this.resourceInfo.context)}destroy(){const e=this.baseLayers.toArray();for(const r of e)r.destroyed||r.destroy();const r=this.referenceLayers.toArray();for(const e of r)e.destroyed||e.destroy();this.baseLayers.destroy(),this.referenceLayers.destroy(),this.portalItem=y.destroyMaybe(this.portalItem)}normalizeCtorArgs(e){return e&&"resourceInfo"in e&&(this._set("resourceInfo",e.resourceInfo),delete(e={...e}).resourceInfo),e}set baseLayers(e){this._set("baseLayers",o.referenceSetter(e,this._get("baseLayers")))}_writeBaseLayers(e,r,t){const a=[];e?(t={...t,layerContainerType:"basemap"},this.baseLayers.forEach(e=>{const r=S.getLayerJSON(e,t.webmap?t.webmap.getLayerJSONFromResourceInfo(e):null,t);null!=r&&a.push(r)}),this.referenceLayers.forEach(e=>{const r=S.getLayerJSON(e,t.webmap?t.webmap.getLayerJSONFromResourceInfo(e):null,t);null!=r&&("scene"!==e.type&&(r.isReference=!0),a.push(r))}),r.baseMapLayers=a):r.baseMapLayers=a}get loaded(){return super.loaded}set referenceLayers(e){this._set("referenceLayers",o.referenceSetter(e,this._get("referenceLayers")))}writeTitle(e,r){r.title=e||"Basemap"}load(e){return this.addResolvingPromise(this._loadFromSource(e)),Promise.resolve(this)}loadAll(){return c.loadAll(this,e=>{e(this.baseLayers,this.referenceLayers)})}clone(){const e={id:this.id,title:this.title,portalItem:this.portalItem,baseLayers:this.baseLayers.map(e=>l.isClonable(e)?e.clone():e),referenceLayers:this.referenceLayers.map(e=>l.isClonable(e)?e.clone():e)};return this.loaded&&(e.loadStatus="loaded"),new v({resourceInfo:this.resourceInfo}).set(e)}read(e,r){this.resourceInfo||this._set("resourceInfo",{data:e,context:r}),super.read(e,r)}write(e,r){return e=e||{},r?.origin||(r={origin:"web-map",...r}),super.write(e,r),!this.loaded&&this.resourceInfo?.data.baseMapLayers&&(e.baseMapLayers=this.resourceInfo.data.baseMapLayers.map(e=>{const r=l.clone(e);return r.url&&h.isProtocolRelative(r.url)&&(r.url=`https:${r.url}`),r.templateUrl&&h.isProtocolRelative(r.templateUrl)&&(r.templateUrl=`https:${r.templateUrl}`),r})),e}async _loadFromSource(e){const{resourceInfo:r,portalItem:t,style:a}=this;d.throwIfAborted(e);const s=[];if(r){const t=r.context?r.context.url:null;if(s.push(this._loadLayersFromJSON(r.data,t,e)),r.data.id&&!r.data.title){const e=r.data.id;s.push(I.getBasemapTitle(e).then(e=>{e&&this.read({title:e},r.context)}))}}else t?s.push(this._loadFromItem(t,e)):a&&s.push(this._loadFromStylesService(a,e));await Promise.all(s)}async _loadLayersFromJSON(r,t,a){const s=this.resourceInfo?.context,o=this.portalItem?.portal||s?.portal||null,i=x[s?.origin||""]??"web-map",{populateOperationalLayers:l}=await new Promise((r,t)=>e(["./layers/support/layersCreator"],r,t)),n=[];if(d.throwIfAborted(a),r.baseMapLayers&&Array.isArray(r.baseMapLayers)){const e={context:{...s,origin:i,url:t,portal:o,layerContainerType:"basemap"},defaultLayerType:"DefaultTileLayer"},a=e=>"web-scene"===i&&"ArcGISSceneServiceLayer"===e.layerType||e.isReference,c=l(this.baseLayers,r.baseMapLayers.filter(e=>!a(e)),e);n.push(c);const p=l(this.referenceLayers,r.baseMapLayers.filter(a),e);n.push(p)}await Promise.allSettled(n)}async _loadFromItem(e,r){const t=await e.load(r),a=await t.fetchData("json",r),s=h.urlToObject(e.itemUrl??"");return this._set("resourceInfo",{data:a.baseMap??{},context:{origin:M[e.type||""]??"web-map",portal:e.portal||L.getDefault(),url:s}}),this.read(this.resourceInfo.data,this.resourceInfo.context),this.read({spatialReference:a.spatialReference},this.resourceInfo.context),this.read({title:e.title,thumbnailUrl:e.thumbnailUrl},{origin:"portal-item",portal:e.portal||L.getDefault(),url:s}),this._loadLayersFromJSON(this.resourceInfo.data,s,r)}async _loadFromStylesService(e,r){const s=e.serviceUrl.endsWith("/webmaps")?e.serviceUrl.slice(0,-8):e.serviceUrl,o=`${s}/styles/${e.id}/self`,i=`${s}/webmaps/${e.id}`,l=e.apiKey??t.apiKeys.basemapStyles,[n,c]=await Promise.all([(await a(o,{query:{token:l},signal:r?.signal})).data,(await a(i,{query:{language:e.languageParameter,places:e.places,worldview:e.worldview,token:l},signal:r?.signal})).data]);this.thumbnailUrl??=n.thumbnailUrl;const p=h.urlToObject(i);if(this._set("resourceInfo",{data:c.baseMap??{},context:{origin:"web-map",url:p}}),this.read(this.resourceInfo.data,this.resourceInfo.context),this.read({spatialReference:c.spatialReference},this.resourceInfo.context),await this._loadLayersFromJSON(this.resourceInfo.data,p,r),l)for(const e of[...this.baseLayers,...this.referenceLayers])"apiKey"in e&&(e.apiKey=l)}static fromId(e){const r=I.esriBasemapDefinitions[e];return r?r.itemId?new v({portalItem:{id:r.itemId,portal:{url:"https://www.arcgis.com"}}}):v.fromJSON(r,r.is3d?{origin:"web-scene",portal:new L({url:"https://www.arcgis.com"})}:{origin:"web-map"}):null}};r.__decorate([u.property({json:{write:{ignoreOrigin:!0,target:"baseMapLayers",writer(e,r,t,a){this._writeBaseLayers(e,r,a)}},origins:{"web-scene":{write:{ignoreOrigin:!0,target:{baseMapLayers:{type:s}},writer(e,r,t,a){this._writeBaseLayers(e,r,a)}}}}}})],O.prototype,"baseLayers",null),r.__decorate([u.property({type:String,json:{origins:{"web-scene":{write:!0}}}})],O.prototype,"id",void 0),r.__decorate([u.property({type:g})],O.prototype,"portalItem",void 0),r.__decorate([u.property()],O.prototype,"referenceLayers",null),r.__decorate([u.property({readOnly:!0})],O.prototype,"resourceInfo",void 0),r.__decorate([u.property({type:w})],O.prototype,"spatialReference",void 0),r.__decorate([u.property({type:_})],O.prototype,"style",void 0),r.__decorate([u.property()],O.prototype,"thumbnailUrl",void 0),r.__decorate([u.property({type:String,json:{origins:{"web-scene":{write:{isRequired:!0}}}}})],O.prototype,"title",void 0),r.__decorate([b.writer("title")],O.prototype,"writeTitle",null),O=v=r.__decorate([f.subclass("esri.Basemap")],O);const M={"Web Scene":"web-scene","Web Map":"web-map","Link Chart":"link-chart"},x={"web-scene":"web-scene","web-map":"web-map","link-chart":"link-chart"};return O});