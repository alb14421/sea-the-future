// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./geohashUtils","../geometry/SpatialReference","../layers/graphics/featureConversionUtils","../layers/graphics/OptimizedGeometry","../layers/graphics/data/projectionSupport","../views/2d/layers/features/aggregation/AAggregateCell","../views/2d/layers/features/aggregation/AccumulatedStatistics"],function(t,e,o,s,i,r,h,a){"use strict";class n extends h.AAggregateCell{static create(t,e,o,s){const i=a.AccumulatedStatistics.create(t),r=new Array(32);for(let t=0;t<r.length;t++)r[t]=null;return new n(i,e,o,s,r)}constructor(t,e,o,s,i){super(t),this.xNode=e,this.yNode=o,this.depth=s,this.children=i,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const t=new n(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return t._count=this._count,t._xWorldTotal=this._xWorldTotal,t._yWorldTotal=this._yWorldTotal,t._xGeohashTotal=this._xGeohashTotal,t._yGeohashTotal=this._yGeohashTotal,t.next=this.next,t._objectIds=new Set(this._objectIds),t}insert(t,e,o,s,i,r){this._count+=1,this._xWorldTotal+=e,this._yWorldTotal+=o,this._xGeohashTotal+=s,this._yGeohashTotal+=i,this._statistics.insert(t,r),this._objectIds.add(t.getObjectId())}merge(t){if(0!==t._count){this._count+=t._count,this._xWorldTotal+=t._xWorldTotal,this._yWorldTotal+=t._yWorldTotal,this._xGeohashTotal+=t._xWorldTotal,this._yGeohashTotal+=t._yWorldTotal,this._statistics.merge(t._statistics);for(const e of t._objectIds.values())this._objectIds.add(e)}}getCentroid(t){throw new Error("getCentroid not supported for GeohashNode")}getGeometry(t,e){const h=this._getLngLatBounds(),[a,n,l,d]=h,c={rings:[[[a,n],[a,d],[l,d],[l,n],[a,n]]]},u=r.project(c,o.WGS84,t),g=s.convertFromPolygon(new i,u,!1,!1);return null!=e?s.quantizeOptimizedGeometry(new i,g,!1,!1,"esriGeometryPolygon",e,!1,!1):g}getGeometricCentroid(t,e){const h=this._getLngLatBounds(),[a,n,l,d]=h,c={x:(a+l)/2,y:(n+d)/2},u=r.project(c,o.WGS84,t),g=s.convertFromPoint(new i,u);return null!=e?s.quantizeOptimizedGeometry(new i,g,!1,!1,"esriGeometryPoint",e,!1,!1):g}getAttributes(){const t={aggregateId:this.id};for(const e of this._statistics.values())t[e.field.name]=e.value;return t.aggregateCount=this._count,t}find(t,e,o,s,i,r){if(s>=o)return this;const h=1-s%2,a=3*h+2*(1-h),n=2*h+3*(1-h),l=30-i-a,d=30-r-n,c=((t&7*h+3*(1-h)<<l)>>l)+((e&3*h+7*(1-h)<<d)>>d)*(8*h+4*(1-h)),u=this.children[c];return null==u?null:u.find(t,e,o,s+1,i+a,r+n)}_getLngLatBounds(){const t=this.depth,o=Math.ceil(t/2),s=Math.floor(t/2),i=30-(3*o+2*s),r=30-(2*o+3*s),h=this.xNode<<i,a=this.yNode<<r;return e.decodeGeohashXY({geohashX:h,geohashY:a},this.depth)}}t.GeohashCell=n,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});