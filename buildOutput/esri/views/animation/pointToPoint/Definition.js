// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/libs/gl-matrix-2/math/common","./Camera","./Settings"],function(e,t,s,r){"use strict";class i{constructor(e){this._createCamera=e,this.compared=new s.CompareResult,this.segmentStart=0,this.segmentEnd=1,this.settings={desiredScreenFlow:r.defaultSettings.desiredScreenFlow},this.source=e(),this.target=e()}clone(){const e=new i(this._createCamera);return e.copyFrom(this),e}copyFrom(e){this.update(e.source,e.target,e.settings)}update(e,t,s){this.source!==e&&this.source.copyFrom(e),this.target!==t&&this.target.copyFrom(t),this.source.compareTo(this.target,this.compared),this.settings.desiredScreenFlow=s.desiredScreenFlow??r.defaultSettings.desiredScreenFlow,this.desiredPixelFlow=this.settings.desiredScreenFlow*this.target.size,this.halfWindowSize=this.target.size/2}halfWindowPanAtZoom(e){const t=this.target.pixelsPerPanAtZoom(e);return this.halfWindowSize/t}get hasZoom(){return Math.abs(this.compared.sourceZoom-this.compared.targetZoom)>1e-5}get hasPan(){return this.compared.pan>t.getEpsilon()}get hasFov(){return Math.abs(this.compared.fov)>t.getEpsilon()}get hasRotate(){return this.compared.rotate>t.getEpsilon()}}e.Definition=i,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});