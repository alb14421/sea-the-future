// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../core/Accessor","../../core/Error","../../core/Logger","../../core/MapUtils","../../core/promiseUtils","../../core/reactiveUtils","../../core/scheduling","../../core/accessorSupport/decorators/property","../../core/has","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/get","../../core/support/UpdatingHandles","../../support/collectionUtils","./LayerLayerViewInfo"],function(e,r,t,i,a,s,o,n,l,y,c,h,p,d,w,u){"use strict";function _(e){return null!=e&&"object"==typeof e&&"layerViews"in e}let f=class extends r{constructor(e){super(e),this._layerLayerViewInfoMap=new Map,this._recyclingInfoMap=new Map,this._watchUpdatingTracking=new d.UpdatingHandles,this.supportsGround=!0,this._preloadLayerViewModules=()=>{const e=this.view.map?.allLayers;if(e)for(const r of e)!1!==this.layerViewFilter?.(r)&&this.layerViewImporter.hasLayerViewModule(r)&&this.layerViewImporter.importLayerView(r)},this._reschedule=()=>this.destroyed?Promise.reject():(null==this._workPromise&&(this._workPromise=s.createResolver(),this._workPromise.promise.catch(()=>{})),this.removeHandles("reschedule"),this.addHandles(n.schedule(this._doWork),"reschedule"),this._workPromise.promise),this._doWork=()=>{if(this.destroyed)return;const{map:e}=this.view;if(!e)return void this.clear();if(this._map!==e&&(this.clear(),this._map=e),null==this._workPromise)return void this.notifyChange("updating");this.removeHandles("reschedule"),this.removeHandles("collection-change");const r=new Set,t=[],i=this.view.ready,a=e=>{if(null!=e)for(const s of e)if(s){if(!1===this.layerViewFilter?.(s))continue;r.add(s);const e=this._layerLayerViewInfoMap.get(s);e&&i?e.start():e||this._recyclingInfoMap.has(s)||t.push(s),"layers"in s&&s.layers&&a(s.layers)}};for(const e of this._rootCollectionNames)a(p.get(this,e));const o=new Array,n=e=>{const r=e.tryRecycle(t);r?(this._recyclingInfoMap.set(e.layer,e),this.notifyChange("updating"),r.then(()=>{this._recyclingInfoMap.delete(e.layer),this._layerLayerViewInfoMap.set(e.layer,e),this._reschedule(),this.notifyChange("updating")}).catch(r=>{s.isAbortError(r)||(this._recyclingInfoMap.delete(e.layer),e.destroy(),this._reschedule(),this.notifyChange("updating"))})):o.push(e)};for(const e of this._layerLayerViewInfoMap.values())r.has(e.layer)||(this._layerLayerViewInfoMap.delete(e.layer),n(e));for(const e of this._recyclingInfoMap.values())r.has(e.layer)||(this._recyclingInfoMap.delete(e.layer),n(e));for(const e of t)this._createLayerView(e);this._refreshCollections(),o.forEach(e=>e.destroy());const l=[e?.ground?.layers,e?.basemap?.baseLayers,e?.basemap?.referenceLayers,e?.layers].filter(e=>!!e);r.forEach(e=>"layers"in e&&l.push(e.layers)),this.addHandles(l.map(e=>this._watchUpdatingTracking.addOnCollectionChange(()=>e,this._reschedule)),"collection-change"),this._workPromise.resolve(),this._workPromise=null}}initialize(){this.addHandles([o.on(()=>this.view?.map?.allLayers,"change",this._preloadLayerViewModules,{onListenerAdd:this._preloadLayerViewModules}),o.watch(()=>{const e=this.view,r=e?.map;return[r?.basemap,r?.ground,r?.layers,e?.ready]},()=>this._reschedule(),o.syncAndInitial)]),this._preloadLayerViewModules(),this._reschedule()}clearHandles(){this._watchUpdatingTracking.removeAll()}destroy(){this.clear(),w.destroyMap(this._recyclingInfoMap),w.destroyMap(this._layerLayerViewInfoMap),this._watchUpdatingTracking.destroy(),this._map=null,null!=this._workPromise&&(this._workPromise.reject(s.createAbortError()),this._workPromise=null)}get _layersToLayerViews(){const e=[["view.map.basemap.baseLayers","view.basemapView.baseLayerViews"],["view.map.layers","view.layerViews"],["view.map.basemap.referenceLayers","view.basemapView.referenceLayerViews"]];return this.supportsGround&&e.push(["view.map.ground.layers","view.groundView.layerViews"]),new Map(e)}get _rootCollectionNames(){return Array.from(this._layersToLayerViews.keys())}get updating(){return null!=this._workPromise||this._watchUpdatingTracking.updating||a.someMap(this._layerLayerViewInfoMap,e=>!e.done)||this._recyclingInfoMap.size>0}get updatingRemaining(){let e=0;for(const r of this._layerLayerViewInfoMap.values())r.done||++e;return e}clear(){this.destroyed||(this._clearCollections(),w.destroyMap(this._layerLayerViewInfoMap))}async whenLayerView(e){if(await this._reschedule(),!this._layerLayerViewInfoMap.has(e)){if(this._recyclingInfoMap.has(e))return this._recyclingInfoMap.get(e).promise;throw new t("view:no-layerview-for-layer","No layerview has been found for the layer",{layer:e})}return this._layerLayerViewInfoMap.get(e).promise}isCreatingLayerViewsForLayer(e,r){this.commitProperty("updatingRemaining");const t=this._layerLayerViewInfoMap.get(e);if(!t?.done)return!0;const i=t.layerView;return!(!i||!r||i.parent===r)||!!(t.done&&i&&"layers"in e&&e.layers?.length)&&e.layers.some(e=>this.isCreatingLayerViewsForLayer(e,i))}_refreshCollections(){for(const[e,r]of this._layersToLayerViews)this._populateLayerViewsOwners(p.get(this,e),p.get(this,r),this.view);this.notifyChange("updating"),this.notifyChange("updatingRemaining")}_clearCollections(){for(const e of this._layersToLayerViews.values())p.get(this,e)?.removeAll()}_populateLayerViewsOwners(e,r,t){if(!e||!r)return void r?.removeAll();let i=0;for(const a of e){const e=this._layerLayerViewInfoMap.get(a);if(!e?.layerView)continue;const s=e.layerView;s.layer=a,s.parent=t,r.at(i)!==s&&r.splice(i,0,s),"layers"in a&&_(s)&&this._populateLayerViewsOwners(a.layers,s.layerViews,s),i+=1}i<r.length&&r.splice(i)}_createLayerView(e){e.load().catch(()=>{}),this.layerViewImporter.hasLayerViewModule(e)&&this.layerViewImporter.importLayerView(e);const r=new u.LayerLayerViewInfo(e,this.view,this.layerViewImporter);r.promise.then(()=>this._refreshCollections(),r=>{r&&(s.isAbortError(r)||"cancelled:layerview-create"===r.name)||i.getLogger(this).error(`Failed to create layerview for layer title:'${e.title??"no title"}', id:'${e.id??"no id"}' of type '${e.type}'.`,{layer:e,error:r}),this._refreshCollections()}),this._layerLayerViewInfoMap.set(e,r),this.view.ready&&r.start(),this.notifyChange("updating"),this.notifyChange("updatingRemaining")}};return e.__decorate([l.property()],f.prototype,"_workPromise",void 0),e.__decorate([l.property({readOnly:!0})],f.prototype,"_watchUpdatingTracking",void 0),e.__decorate([l.property({readOnly:!0})],f.prototype,"_layersToLayerViews",null),e.__decorate([l.property({readOnly:!0})],f.prototype,"_rootCollectionNames",null),e.__decorate([l.property({constructOnly:!0})],f.prototype,"layerViewFilter",void 0),e.__decorate([l.property()],f.prototype,"layerViewImporter",void 0),e.__decorate([l.property()],f.prototype,"supportsGround",void 0),e.__decorate([l.property({readOnly:!0})],f.prototype,"updating",null),e.__decorate([l.property({readOnly:!0})],f.prototype,"updatingRemaining",null),e.__decorate([l.property({constructOnly:!0})],f.prototype,"view",void 0),f=e.__decorate([h.subclass("esri.views.support.LayerViewManager")],f),f});