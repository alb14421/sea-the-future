// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../request","../../geometry/Point","../../geometry/operators/projectOperator","../../layers/support/rasterFunctions/rasterProjectionHelper","../2d/engine/Bitmap","../2d/engine/webgl/VertexStream","../2d/engine/webgl/shaders/MaterialPrograms","../webgl/enums","../webgl/FramebufferObject","../webgl/rasterUtils","../webgl/RenderingContext","../webgl/RenderingContextOptions","../webgl/Texture","../webgl/TextureDescriptor"],function(t,e,r,i,a,n,s,o,c,x,p,h,m,u,d){"use strict";class g{static{this._instanceRefCount=0}constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(g._instance)return g._instanceRefCount++,g._instance;g._instanceRefCount=1,g._instance=this,this._ownsRctx=!0;const t=document.createElement("canvas").getContext("webgl2");t.getExtension("OES_texture_float"),this._rctx=new h.RenderingContext(t,new m.RenderingContextOptions)}this._quad=new s(this._rctx,[0,0,1,0,0,1,1,1]);const e=o.createProgramTemplate("raster/reproject","raster/reproject",{applyProjection:!0,bilinear:!1,bicubic:!1});this._program=this._rctx.programCache.acquire(e.vertexShader,e.fragmentShader,this._quad.locations),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1)}reprojectTexture(t,e,n=!1){const s=i.execute(t.extent,e),o=new r({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:h,y:m}=a.projectResolution(o,e,t.extent);let u=(h+m)/2;const g=Math.round((s.xmax-s.xmin)/u),_=Math.round((s.ymax-s.ymin)/u);u=(s.width/g+s.height/_)/2;const l=new r({x:u,y:u,spatialReference:s.spatialReference}),f=a.getProjectionOffsetGrid({projectedExtent:s,srcBufferExtent:t.extent,pixelSize:l,hasWrapAround:!0,spacing:[16,16]}),w=p.createTransformTexture(this._rctx,f),b=new d.TextureDescriptor(g,_);b.wrapMode=33071;const D=new x.FramebufferObject(this._rctx,b);this._rctx.bindFramebuffer(D),this._rctx.setViewport(0,0,g,_),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(w,1),this._quad.bind();const{width:R=0,height:y=0}=t.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",R,y),this._program.setUniform2fv("u_transformSpacing",f.spacing),this._program.setUniform2fv("u_transformGridSize",f.size),this._program.setUniform2f("u_targetImageSize",g,_),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),w.dispose(),n){const{width:t,height:e}=D,r=new ImageData(t??0,e??0);D.readPixels(0,0,t??0,e??0,6408,c.PixelType.UNSIGNED_BYTE,r.data);const i=D.detachColorTexture();return D.dispose(),{texture:i,extent:s,imageData:r}}const T=D.detachColorTexture();return D.dispose(),{texture:T,extent:s}}reprojectBitmapData(t,e){const r=n.isImageSource(t.bitmapData)?n.rasterize(t.bitmapData):t.bitmapData,i=new d.TextureDescriptor(t.bitmapData.width,t.bitmapData.height);i.wrapMode=33071;const a=new u.Texture(this._rctx,i,r),s=this.reprojectTexture({texture:a,extent:t.extent},e,!0);s.texture.dispose();const o=document.createElement("canvas"),c=s.imageData;return o.width=c.width,o.height=c.height,o.getContext("2d").putImageData(c,0,0),{bitmapData:o,extent:s.extent}}async loadAndReprojectBitmapData(t,r,i){const[n]=await Promise.all([e(t,{responseType:"image"}).then(t=>t.data),a.load()]),s=document.createElement("canvas");s.width=n.width,s.height=n.height;const o=s.getContext("2d");o.drawImage(n,0,0);const c=o.getImageData(0,0,s.width,s.height);if(r.spatialReference.equals(i))return{bitmapData:c,extent:r};const x=this.reprojectBitmapData({bitmapData:c,extent:r},i);return{bitmapData:x.bitmapData,extent:x.extent}}destroy(){this._ownsRctx?(g._instanceRefCount--,0===g._instanceRefCount&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),g._instance=null)):(this._quad.dispose(),this._program.dispose())}}t.ImageReprojector=g,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});