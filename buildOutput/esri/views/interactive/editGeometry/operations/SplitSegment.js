// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../geometry/support/curves/bezierCurveUtils","../../../../geometry/support/curves/circularArcUtils","../../../../geometry/support/curves/curveUtils","../../../../geometry/support/curves/ellipticArc4Utils","../../../../geometry/support/curves/ellipticArc7Utils","../EditGeometry"],function(e,t,r,s,i,c,n){"use strict";e.SplitSegment=class{constructor(e,t,r){this._editGeometry=e,this._segment=t,this._t=r,this.createdVertex=null,this._createdLeftEdge=null,this._createdRightEdge=null}apply(){let e="redo";const d=this._editGeometry.coordinateHelper,l=this._segment,a=l.part,o=l.leftVertex,h=l.rightVertex;a.segments.splice(a.segments.indexOf(l),1);const g=[];switch(null==this.createdVertex&&(e="apply",this.createdVertex=new n.Vertex(a)),l.type){case"line":g.push(d.lerp(o.pos,h.pos,this._t,d.createVector()));break;case"bezier":{const e=l.toCurveOrCoordinate();g.push(...t.splitBezierCurve(o.pos,e,this._t));break}case"circular-arc":{const e=l.toCurveOrCoordinate(),t=r.deriveCircleFromCircularArc(o.pos,e);g.push(...r.splitCircularArc(t,e,this._t));break}case"elliptic-arc-4":{const e=l.toCurveOrCoordinate(),t=i.deriveCircleFromEllipticArc4(o.pos,e);g.push(...i.splitEllipticArc4(t,e,this._t));break}case"elliptic-arc-7":{const e=l.toCurveOrCoordinate(),t=c.deriveEllipse(o.pos,e);g.push(...c.splitEllipticArc7(t,e,this._t));break}}a.vertices.push(this.createdVertex),this.createdVertex.pos=d.arrayToVector(s.getEndpoint(g[0])),g.length>1&&(h.pos=d.arrayToVector(s.getEndpoint(g[1]))),null==this._createdLeftEdge&&(this._createdLeftEdge=n.createConnectingSegment(a,o,this.createdVertex,g[0])),this._createdLeftEdge.leftVertex.leftSegment?a.segments.push(this._createdLeftEdge):a.segments.unshift(this._createdLeftEdge),o.rightSegment=this._createdLeftEdge,null==this._createdRightEdge&&(this._createdRightEdge=n.createConnectingSegment(a,this.createdVertex,h,g.at(1)??h.pos)),a.segments.push(this._createdRightEdge),h.leftSegment=this._createdRightEdge,a.updateVertexIndex(this.createdVertex,o.index+1),this._editGeometry.notifyChanges({operation:e,addedVertices:[this.createdVertex]})}undo(){if(null==this.createdVertex||null==this._createdLeftEdge||null==this._createdRightEdge)return null;const e=this._segment,t=e.part,{leftSegment:r,rightSegment:s}=this.createdVertex,i=r?.leftVertex,c=s?.rightVertex;t.vertices.splice(t.vertices.indexOf(this.createdVertex),1),t.segments.splice(t.segments.indexOf(this._createdLeftEdge),1),t.segments.splice(t.segments.indexOf(this._createdRightEdge),1),e.leftVertex.leftSegment?t.segments.push(e):t.segments.unshift(e),i&&(i.rightSegment=e),c&&(c.leftSegment=e),i&&t.updateVertexIndex(i,i.index),this._editGeometry.notifyChanges({operation:"undo",removedVertices:[this.createdVertex]})}accumulate(){return!1}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});