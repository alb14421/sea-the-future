// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/quantityFormatUtils","../../../../core/quantityUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","./parsingAndFormattingUtils","./TooltipField","../../../support/angularMeasurementUtils"],function(t,e,o,i,r,n,a,s,l,c,p,u){"use strict";t.TooltipFieldOrientation=class extends p.TooltipField{constructor(t){super(t),this.precision=1}normalizeCtorArgs(t){return{name:"orientation",actual:null,parse:c.makeQuantityParser({createQuantity:(t,e)=>i.createAngle(t,(t=>t.inputUnitInfos.angle.unit)(e),"geographic"),sanitize:c.sanitizeAngle}),format:t=>{const e=u.getNormalizedGeographicOrientation(t);return o.formatAngle(e,"geographic",this.precision)},formatForInputMode:(t,e)=>{const o=u.getNormalizedGeographicOrientation(t);return e.formatters.scalar(o)},suffix:t=>t.inputUnitInfos.angle.abbreviation,title:t=>t.messages.sketch.orientation,...t}}},e.__decorate([r.property()],t.TooltipFieldOrientation.prototype,"precision",void 0),t.TooltipFieldOrientation=e.__decorate([l.subclass("esri.views.interactive.tooltip.fields.TooltipFieldOrientation")],t.TooltipFieldOrientation),Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});