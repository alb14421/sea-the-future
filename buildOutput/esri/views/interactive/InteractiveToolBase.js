// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/Evented","../../core/has","../../core/Logger","../../core/promiseUtils","../../core/accessorSupport/decorators/property","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","./ManipulatorCollection"],function(e,t,a,i,o,r,s,n,l,c){"use strict";e.InteractiveToolBase=class extends a.EventedAccessor{constructor(e){super(e),this.manipulators=new c.ManipulatorCollection,this.automaticManipulatorSelection=!0,this.hasGrabbedManipulators=!1,this.hasHoveredManipulators=!1,this.firstGrabbedManipulator=null,this.created=!1,this.removeIncompleteOnCancel=!0,this._editableFlags=new Map([[1,!0],[0,!0]]),this._creationFinishedResolver=r.createResolver()}get active(){return null!=this.view&&this.view.activeTool===this}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this._syncVisible())}get editable(){return this.getEditableFlag(0)}set editable(e){this.setEditableFlag(0,e)}get updating(){return!1}get cursor(){return null}get hasFocusedManipulators(){return this.hasGrabbedManipulators||this.hasHoveredManipulators}destroy(){this.manipulators.destroy(),this._set("view",null)}onAdd(){this._syncVisible()}activate(){null!=this.view&&(this.view.focus(),this.onActivate())}deactivate(){this.onDeactivate()}cancel(){this.emit("cancel")}handleInputEvent(e){this.onInputEvent(e)}handleInputEventAfter(e){this.onInputEventAfter(e)}setEditableFlag(e,t){this._editableFlags.set(e,t),this.manipulators.isToolEditable=this.internallyEditable,this._updateManipulatorAttachment(),0===e&&this.notifyChange("editable"),this.onEditableChange(),this.onManipulatorSelectionChanged()}getEditableFlag(e){return this._editableFlags.get(e)??!1}endDrag(){const e=this.view.inputManager.latestPointerLocation;if(!e)return;let t=!1;this.manipulators.forEach(({manipulator:a})=>{a.dragging&&(t=!0,a.events.emit("drag",{action:"end",start:e,screenPoint:e}))}),t&&(this.view.toolViewManager.activeTool=null)}whenCreated(){return this._creationFinishedResolver.promise}onManipulatorSelectionChanged(){}onActivate(){}onDeactivate(){}onShow(){}onHide(){}onEditableChange(){}onInputEvent(e){}onInputEventAfter(e){}get internallyEditable(){return this.getEditableFlag(0)&&this.getEditableFlag(1)}finishToolCreation(){this.created||this._creationFinishedResolver.resolve(this),this._set("created",!0)}_syncVisible(){if(this.initialized)if(this.visible)this._show();else if(this._hide(),this.active)return void(this.view.activeTool=null)}_show(){this._updateManipulatorAttachment(),this.onShow()}_hide(){this._updateManipulatorAttachment(),this.onHide()}_updateManipulatorAttachment(){this.visible?this.manipulators.attach():this.manipulators.detach()}},t.__decorate([s.property({constructOnly:!0})],e.InteractiveToolBase.prototype,"view",void 0),t.__decorate([s.property({readOnly:!0})],e.InteractiveToolBase.prototype,"active",null),t.__decorate([s.property({value:!0})],e.InteractiveToolBase.prototype,"visible",null),t.__decorate([s.property({value:!0})],e.InteractiveToolBase.prototype,"editable",null),t.__decorate([s.property({readOnly:!0})],e.InteractiveToolBase.prototype,"manipulators",void 0),t.__decorate([s.property({readOnly:!0})],e.InteractiveToolBase.prototype,"updating",null),t.__decorate([s.property()],e.InteractiveToolBase.prototype,"cursor",null),t.__decorate([s.property({readOnly:!0})],e.InteractiveToolBase.prototype,"automaticManipulatorSelection",void 0),t.__decorate([s.property()],e.InteractiveToolBase.prototype,"hasFocusedManipulators",null),t.__decorate([s.property()],e.InteractiveToolBase.prototype,"hasGrabbedManipulators",void 0),t.__decorate([s.property()],e.InteractiveToolBase.prototype,"hasHoveredManipulators",void 0),t.__decorate([s.property()],e.InteractiveToolBase.prototype,"firstGrabbedManipulator",void 0),t.__decorate([s.property({readOnly:!0})],e.InteractiveToolBase.prototype,"created",void 0),t.__decorate([s.property({readOnly:!0})],e.InteractiveToolBase.prototype,"removeIncompleteOnCancel",void 0),e.InteractiveToolBase=t.__decorate([l.subclass("esri.views.interactive.InteractiveToolBase")],e.InteractiveToolBase),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});