// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/quantityUtils","../../../core/unitUtils","../../../chunks/vec32","../../../geometry/SpatialReference","../../../geometry/projection/projectVectorToVector","../../../geometry/support/geodesicUtils","../../../layers/graphics/dehydratedPoint","../../../support/elevationInfoUtils","./constraints","./normalizedPoint","../../support/angularMeasurementUtils"],function(e,t,n,r,o,i,l,c,a,u,s,d){"use strict";function f(e,r,o){if(null==r||null==e)return;const i=n.lengthUnitFromSpatialReference(o.measurementSR);if(null==i)return;const l=y(e,o);if(null==l)return;const c=t.valueInUnit(r,i);return new u.VerticalCylinderConstraint(l,c)}function g(e,n,r,o){if(null==r||null==e)return;const i=y(e,o);if(null==i)return;const l=d.getDegreesGeographic(r),c=e=>{if(null==e)return;const n=s.createWritable(),r=t.createAngle(e,"degrees","geographic");return d.pointFromDistanceAlongAzimuth(n,i,o.measurementSR,10,r,o.mode)?new u.VerticalHalfPlaneConstraint(i,n):void 0},a=()=>{if(null!=n&&null!=e)return d.getDegreesGeographic(d.directionBetweenPoints(n,e))};switch(o.directionMode){case"absolute":return c(l);case"relative":{const e=a();if(null==e)return;return c(e+l)}case"relative-bilateral":{const e=a();if(null==e)return;return u.constraintOrSet([c(e+l),c(e-l)])}}}function p(e,t){const n=C(e,t);return null!=n?new u.HorizontalPlaneConstraint(n):void 0}function v(e,n,r){const{context:o,longitude:l,latitude:c,direction:a,distance:f,elevation:g}=r;if(null!=l||null!=c||null!=f||null!=g||null!=a){if(null!=l||null!=c){const e=d.getDegreesGeographic(l),t=d.getDegreesGeographic(c),n=C(g,o);return new u.CoordinateConstraint(e,t,n)}return function(e,n,{context:r,direction:o,distance:l,elevation:c}){if(null==n)return p(c,r);const{view:a,elevationInfo:f,measurementSR:g}=r,v=s.fromPoint(n,a,f);if(!g||!i.projectVectorToVector(v,n.spatialReference,R,g))return;const[m,h]=R,y=null!=l?t.valueInUnit(l,"meters"):void 0,S=d.getDegreesGeographic(o),P=C(c,r),w=e=>{const t=new u.GeodesicConstraint([m,h],g,y,P,e);return null==y||null==e||null==P&&r.hasZ?t:new u.PointConstraint(t.closestTo(v))};if(null==S)return w(void 0);const b=()=>{if(null!=e&&null!=n)return d.getDegreesGeographic(d.directionBetweenPoints(e,n))};switch(r.directionMode){case"absolute":return w(S);case"relative":{const e=b();if(null==e)return;return w(e+S)}case"relative-bilateral":{const e=b();if(null==e)return;return u.constraintOrSet([w(e+S),w(e-S)])}}}(e,n,r)}}function m({x:e,y:t,elevation:n,context:r}){w.x=e?.value??0,w.y=t?.value??0,w.spatialReference=r.spatialReference;const o=y(w,r,S);return new u.CoordinateConstraint(null!=e&&null!=o?o[0]:void 0,null!=t&&null!=o?o[1]:void 0,C(n,r))}function h(e){let t;for(const n of e)n&&(t=t?.intersect(n)??n);return t}function y(e,t,n=s.createWritable()){const{view:o,elevationInfo:l,measurementSR:c,origin:a,mode:u}=t;if(s.fromPoint(e,o,l,n),i.projectVectorToVector(n,e.spatialReference,n,c))return"geodesic"!==u&&r.subtract(n,n,a),n}function C(e,r){return function(e,{view:r,origin:o,elevationInfo:i,hasZ:l,measurementSR:c}){if(null==e||!l)return;const u=n.verticalLengthUnitFromSpatialReference(c);if(null==u)return;const[s,d]=o,f=t.valueInUnit(e,u),g="3d"===r?.type?a.getConvertedElevationFromXYZ(r,s,d,f,c,i):f;return null!=g?t.createLength(g,u):void 0}(e,r)?.value??void 0}const R=s.createWritable(),S=s.createWritable(),P=s.createWritable(),w=c.makeDehydratedPoint(0,0,0,o.WGS84);e.constraintSpaceToPoint=function(e,t,n,o){const{view:l,measurementSR:c,spatialReference:a,origin:u,mode:d}=n;if("geodesic"===d?r.copy(P,e):r.add(P,e,u),i.projectVectorToVector(P,c,P,a))return s.toElevationAlignedDehydratedPoint(P,l,t,n,o)},e.getConstraintContext=function(e,t,n,r,o,c){let a="geodesic",u=l.geodesicCompatibleSpatialReference(n);const d=s.createWritable();return s.fromPoint(e,t,r,d),d[2]=0,u&&i.projectVectorToVector(d,n,d,u)||(a="euclidean",u=n),{mode:a,view:t,elevationInfo:r,hasZ:o,directionMode:c,spatialReference:e.spatialReference,measurementSR:u,origin:d}},e.getGeodesicConstraint=v,e.getPointConstraint=function(e){return"geodesic"===e.context.mode?v(null,null,e):m(e)},e.getPolylineOrPolygonConstraint=function(e,t,n){const{context:r,x:o,y:i,distance:l,direction:c,elevation:a}=n;return"geodesic"===r.mode?v(t,e,n):null!=o||null!=i?m(n):h([f(e,l,r),g(e,t,c,r),p(a,r)])},e.intersectAll=h,e.pointToConstraintSpace=y,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});