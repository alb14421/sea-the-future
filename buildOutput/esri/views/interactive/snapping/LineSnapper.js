// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Cyclical","../../../core/quantityUtils","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../support/elevationInfoUtils","../sketch/normalizedPoint","./SnappingAlgorithm","./snappingUtils","./candidates/LineSnappingCandidate","../support/viewUtils","../../support/angularMeasurementUtils","../../support/geometry3dUtils"],function(e,t,n,i,s,r,o,a,c,l,g,d){"use strict";class h extends o.SnappingAlgorithm{constructor(e,t,n){super(e,t),this._geodesicLengthMeasurementUtils=n}snapNewVertex(e,t){const n=t.editGeometryOperations.data.parts[0],i=n.segments.length,r=[];if(i<1)return r;const{spatialReference:o}=t,c=l.vectorToScreenPoint(e,o,s.absoluteHeightElevationInfo,this.view),{view:g}=this,d=n.segments[i-1];let h=d;do{if(this.edgeExceedsShortLineThreshold(h,t)){const n=a.editEdgeToSnappingEdge(h,g,t);this._processCandidateProposal(n.left,n.right,e,c,t,r)}h=h.leftVertex.leftSegment}while(h&&h!==d);return r}snapExistingVertex(e,t){const n=[],i=t.vertexHandle,o=i.part;if(o.segments.length<2)return n;const{view:c}=this,{spatialReference:g}=t,d=l.vectorToScreenPoint(e,g,s.absoluteHeightElevationInfo,c),h=i.leftSegment,p=i.rightSegment;h&&p&&this.edgeExceedsShortLineThreshold(h,t)&&this.edgeExceedsShortLineThreshold(p,t)&&this._processCandidateProposal(r.fromAnyMapPoint(h.leftVertex.pos,c,t),r.fromAnyMapPoint(p.rightVertex.pos,c,t),e,d,t,n);const u=o.segments[0];let f=u;do{if(f!==i.leftSegment&&f!==i.rightSegment&&this.edgeExceedsShortLineThreshold(f,t)){const i=a.editEdgeToSnappingEdge(f,c,t);this._processCandidateProposal(i.left,i.right,e,d,t,n)}f=f.rightVertex.rightSegment}while(f&&f!==u);return n}_processCandidateProposal(e,o,h,p,u,f){const{spatialReference:m,pointer:S}=u,P=i.create();!function(e,i,s,r,o,a){(function(e,i,s,r,{spatialReference:o},a){const c=g.radiansGeographicBetweenVec(i,s,o,o);if(null==c)return!1;const l=g.radiansGeographicBetweenVec(s,r,o,o);if(null==l)return!1;const d=a.geodesicDistance(s,r,o);if(null==d)return!1;const h=Math.abs(t.cyclicalPI.shortestSignedDiff(c,l))>Math.PI/2?t.cyclical2PI.normalize(c+Math.PI):c;return g.pointFromDistanceAlongAzimuth(e,s,o,n.valueInUnit(d,"meters"),n.createAngle(h,"radians","geographic"),"geodesic"),e[2]=r[2],!0})(e,i,s,r,o,a)||function(e,t,n,i){d.projectPointToLineLike(t,{start:n,end:i,type:1},e),e[2]=t[2]}(e,r,i,s)}(P,e,o,h,u,this._geodesicLengthMeasurementUtils);const v=r.markAsTarget(r.fromVec3(P));a.squaredScreenDistance(p,l.vectorToScreenPoint(v,m,s.absoluteHeightElevationInfo,this.view))<this.squaredProximityThreshold(S)&&f.push(new c.LineSnappingCandidate({lineStart:e,lineEnd:o,targetPoint:v,isDraped:"on-the-ground"===u.elevationInfo?.mode}))}}e.LineSnapper=h,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});