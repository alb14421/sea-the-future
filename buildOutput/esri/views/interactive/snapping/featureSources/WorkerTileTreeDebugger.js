// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/handleUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/Polygon","../../../../geometry/support/aaBoundingRect","../../../support/TileTreeDebugger"],function(e,t,r,o,s,a,n,i,l,u,d){"use strict";e.WorkerTileTreeDebugger=class extends d.TileTreeDebugger{constructor(e){super(e)}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.addHandles(r.makeHandle(()=>clearInterval(e)))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(t=>{e.set(t.data.id,t.featureCount)}),this._debugInfo.pendingTiles.forEach(r=>{e.set(r.data.id,r.featureCount),t.set(r.data.id,r.state)});const r=r=>{const o=t.get(r),s=e.get(r)??"?";return o?`${o}:${s}\n${r}`:`store:${s}\n${r}`},o=new Map;return this._debugInfo.storedTiles.forEach(e=>{o.set(e.data.id,e.data)}),this._debugInfo.pendingTiles.forEach(e=>{o.set(e.data.id,e.data)}),Array.from(o.values()).map(e=>({lij:[e.level,e.row,e.col],level:e.level,geometry:l.fromExtent(u.toExtent(e.extent,this.view.spatialReference)),label:r(e.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}},t.__decorate([o.property({constructOnly:!0})],e.WorkerTileTreeDebugger.prototype,"handle",void 0),e.WorkerTileTreeDebugger=t.__decorate([i.subclass("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],e.WorkerTileTreeDebugger),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});