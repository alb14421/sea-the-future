// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/asyncUtils","../../../../core/handleUtils","../../../../core/memoize","../../../../core/promiseUtils","../../../../core/reactiveUtils","../../../../core/sql","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../core/support/UpdatingHandles","../../../../layers/support/layerUtils","../../../../support/elevationInfoUtils","../../../2d/interactive/snapping/featureSources/featureServiceSource/FeatureServiceTiles2D","../../../3d/interactive/snapping/featureSources/featureServiceSource/FeatureServiceTiles3D","../snappingUtils","./queryEngineUtils","./WorkerTileTreeDebugger","./featureServiceSource/FeatureServiceSnappingSourceWorkerHandle","./featureServiceSource/FeatureServiceTilesSimple","../../../support/debugFlags"],function(e,r,t,i,a,o,n,s,l,u,d,p,c,y,h,S,g,_,f,v,w,m,b,F,H,I){"use strict";const k=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));r.FeatureServiceSnappingSource=class extends i{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){return this.view?.allLayerViews.find(e=>e.layer===this._layer)}get _isSuspended(){return!(!g.isSubtypeGroupLayer(this._layer)||this.layerSource.sublayerSources.some(e=>e.enabled&&e.layer.visible))||!(!this.view||!1===this._layerView?.suspended&&this.layerSource.enabled)}get updating(){return this._workerHandle?.updating||this._updatingHandles.updating}get _outFields(){const{view:e,_layerView:r,layerSource:t}=this,{layer:i}=t,{fieldsIndex:a,timeInfo:o,floorInfo:n,subtypeField:s}=i,l=r&&"filter"in r?r.filter:null,u=l?.where&&"1=1"!==l.where?this._getOrLoadWhereFields(l.where,a):[];if(l?.timeExtent&&o){const{startField:e,endField:r}=o,t=a.get(e)?.name??e,i=a.get(r)?.name??r;t&&u.push(t),i&&u.push(i)}if(e?.map&&w.isUtilityNetworkWebMap(e.map)&&e.map.utilityNetworks?.find(e=>e.isUtilityLayer(i))){const e=i.fieldsIndex.get("assetGroup")?.name,r=i.fieldsIndex.get("assetType")?.name;e&&r&&(u.push(e),u.push(r))}if(i&&n?.floorField&&e?.floors?.length){const e=a.get(n.floorField)?.name??n.floorField;e&&u.push(e)}if(s){const e=a.get(s)?.name??s;e&&u.push(e)}return new Set(u)}get configuration(){const{view:e}=this,{apiKey:r,customParameters:t}=this._layer,i=null!=e?e.type:"2d",a=this._layer.createQuery();return this._layerView&&"effectiveDisplayFilter"in this._layerView&&(a.where=u.sqlAnd(a.where,this._layerView.effectiveDisplayFilter?.where)),{filter:a,customParameters:r?{...t,token:r}:t,viewType:i}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new S.UpdatingHandles,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=n.memoize(m.makeGetGroundElevation)}initialize(){let e;const r=this.view;if(null==r||r.destroyed)this._tilesOfInterest=new H.FeatureServiceTilesSimple({layer:this._layer}),e=this._workerHandle=new F.FeatureServiceSnappingSourceWorkerHandle;else switch(r.type){case"2d":this._tilesOfInterest=new f.FeatureServiceTiles2D({view:r,layer:this._layer}),e=this._workerHandle=new F.FeatureServiceSnappingSourceWorkerHandle;break;case"3d":{const{resourceController:t}=r,i=this._layer;this._tilesOfInterest=new v.FeatureServiceTiles3D({view:r}),e=this._workerHandle=new F.FeatureServiceSnappingSourceWorkerHandle({schedule:e=>t.immediate.schedule(e),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(e,t)=>{const a=await r.whenLayerView(i);return s.throwIfAborted(t),a.elevationAlignPointsInFeatures(e,t)},queryForSymbologySnapping:async(e,t)=>{const a=await r.whenLayerView(i);return s.throwIfAborted(t),a.queryForSymbologySnapping(e,t)}}),this.addHandles([r.elevationProvider.on("elevation-change",({context:r})=>{const{elevationInfo:t}=i;_.elevationContextAffectsAlignment(r,t)&&s.ignoreAbortErrors(e.notifyElevationSourceChange())}),l.watch(()=>i.elevationInfo,()=>s.ignoreAbortErrors(e.notifyElevationSourceChange()),l.initial),l.watch(()=>this._layerView?.layer?.renderer,()=>s.ignoreAbortErrors(e.notifySymbologyChange()),l.initial),l.watch(()=>this._layerView?.symbologySnappingSupported??!1,r=>s.ignoreAbortErrors(e.setSymbologySnappingSupported(r)),l.initial),l.on(()=>this._layerView?.layer,["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}this.addHandles([o.destroyHandle(e)]),s.ignoreAbortErrors(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add(()=>this._updateTilesParameters,()=>s.ignoreAbortErrors(e.updateTiles(this._updateTilesParameters,null)),l.initial),this.addHandles([l.watch(()=>this.configuration,r=>s.ignoreAbortErrors(e.configure(r,null)),l.sync),l.watch(()=>this._layer.historicMoment,r=>s.ignoreAbortErrors(e.setHistoricMoment(r)),l.syncAndInitial),l.watch(()=>this._outFields,r=>s.ignoreAbortErrors(e.updateOutFields(r)),l.initial),l.watch(()=>this._isSuspended,r=>s.ignoreAbortErrors(e.setSuspended(r)),l.syncAndInitial)]),null!=r&&this.addHandles(l.watch(()=>I.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,t=>{t&&!this._debug?(this._debug=new b.WorkerTileTreeDebugger({view:r,handle:e}),this.addHandles(o.destroyHandle(this._debug),"debug")):!t&&this._debug&&this.removeHandles("debug")},l.initial)),this.addHandles([this.layerSource.layer.on("edits",r=>s.ignoreAbortErrors(e.handleEdits(r,null))),this.layerSource.layer.on("apply-edits",e=>this._updatingHandles.addPromise(e.result))])}destroy(){this._updatingHandles.destroy(),this._tilesOfInterest.destroy()}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,r){const{coordinateHelper:t,point:i}=e;this._tilesOfInterest.pointOfInterest=t.arrayToPoint(i);const a=this._memoizedMakeGetGroundElevation(this.view,t.spatialReference);return(await this._workerHandle.fetchCandidates({...e},r)).candidates.map(e=>m.convertSnappingCandidate(e,a))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(r,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const r=a.createTask(async()=>{const r=await new Promise((r,t)=>e(["../../../../core/sql/WhereClause"],e=>r(k(e)),t));return this._whereModule=r.default,this._whereModule});return this._loadWhereModuleTask=r,this._updatingHandles.addPromise(r.promise),[]}if(!i)return[];try{return i.create(r,{fieldsIndex:t}).fieldNames}catch(e){return[]}}},t.__decorate([d.property({constructOnly:!0})],r.FeatureServiceSnappingSource.prototype,"spatialReference",void 0),t.__decorate([d.property({constructOnly:!0})],r.FeatureServiceSnappingSource.prototype,"layerSource",void 0),t.__decorate([d.property({constructOnly:!0})],r.FeatureServiceSnappingSource.prototype,"view",void 0),t.__decorate([d.property()],r.FeatureServiceSnappingSource.prototype,"_tilesOfInterest",void 0),t.__decorate([d.property({readOnly:!0})],r.FeatureServiceSnappingSource.prototype,"_updateTilesParameters",null),t.__decorate([d.property()],r.FeatureServiceSnappingSource.prototype,"_layerView",null),t.__decorate([d.property()],r.FeatureServiceSnappingSource.prototype,"_isSuspended",null),t.__decorate([d.property({readOnly:!0})],r.FeatureServiceSnappingSource.prototype,"updating",null),t.__decorate([d.property()],r.FeatureServiceSnappingSource.prototype,"_outFields",null),t.__decorate([d.property({readOnly:!0})],r.FeatureServiceSnappingSource.prototype,"configuration",null),t.__decorate([d.property({readOnly:!0})],r.FeatureServiceSnappingSource.prototype,"availability",null),t.__decorate([d.property()],r.FeatureServiceSnappingSource.prototype,"_loadWhereModuleTask",void 0),t.__decorate([d.property()],r.FeatureServiceSnappingSource.prototype,"_whereModule",void 0),r.FeatureServiceSnappingSource=t.__decorate([h.subclass("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],r.FeatureServiceSnappingSource),Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});