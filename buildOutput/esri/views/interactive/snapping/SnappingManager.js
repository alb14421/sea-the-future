// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../chunks/tslib.es6","../../../core/asyncUtils","../../../core/Evented","../../../core/has","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../geometry/projectionUtils","../../../support/elevationInfoUtils","../sketch/normalizedPoint","./Settings","./SnappingOptions","./snappingUtils","./candidates/DrapedEdgeSnappingCandidate","./candidates/EdgeSnappingCandidate","./candidates/IntersectionSnappingCandidate","./candidates/LineSnappingCandidate","./candidates/ParallelLineSnappingCandidate","./candidates/RightAngleSnappingCandidate","./candidates/RightAngleTriangleSnappingCandidate","../support/viewUtils","../../support/geodesicLengthMeasurementUtils"],function(e,t,n,i,a,s,r,o,d,p,c,l,h,u,g,f,_,S,v,y,w,C,P,m,E,T,M){"use strict";t.SnappingManager=class extends a.EventedAccessor{constructor(e){super(e),this.options=new _,this._engineCache=new Map,this._loadTask=null,this._engines=[],this._currentMainCandidate=null,this._currentOtherActiveCandidates=[],this._currentSnappedType=0}initialize(){this.addHandles([o.watch(()=>{const{distance:e,touchSensitivityMultiplier:t,effectiveSelfEnabled:n,effectiveFeatureEnabled:i,effectiveGridEnabled:a}=this.options;return{selfEnabled:n,featureEnabled:i,gridEnabled:"2d"===this.view.type&&a,viewReady:this.view.ready,viewSpatialReference:this.view.spatialReference,distance:e,touchSensitivityMultiplier:t}},(e,t)=>{t&&(this.doneSnapping(),this.emit("changed")),this._loadTask?.abort(),this._loadTask=i.createTask(n=>this._updateEngines(e,t,n))},o.syncAndInitial),o.watch(()=>this.options,e=>{for(const t of this._engines)t.options=e},o.sync)])}destroy(){this._loadTask?.abort(),this._destroyEngines()}get updating(){return this._engines.some(e=>e.updating)||!this._loadTask?.finished}_destroyEngines(){this._engineCache.forEach(e=>e.destroy()),this._engineCache.clear(),this._engines=[]}async _updateEngines(e,t,n){if(!e.viewReady)return void this._destroyEngines();t?.viewSpatialReference!==e.viewSpatialReference&&this._destroyEngines();const i=this._engineCache,a=await Promise.allSettled([e.featureEnabled&&!i.has("feature")?this._createFeatureSnappingEngine(n):void 0,e.selfEnabled&&!i.has("self")?this._createSelfSnappingEngine(n):void 0,e.gridEnabled&&!i.has("grid")?this._createGridSnappingEngine(n):void 0]);if(n.aborted)for(const e of a)"fulfilled"===e.status&&e.value?.engine.destroy();else{for(const e of a)"fulfilled"===e.status&&e.value&&i.set(e.value.type,e.value.engine);this._engines=Array.from(i.values())}}async _createSelfSnappingEngine(t){const[{SelfSnappingEngine:n},i]=await Promise.all([new Promise((t,n)=>e(["./SelfSnappingEngine"],t,n)),M.loadGeodesicLengthMeasurementUtils()]);return r.throwIfAborted(t),{type:"self",engine:new n({view:this.view,options:this.options,geodesicLengthMeasurementUtils:i})}}async _createGridSnappingEngine(t){const{view:n}=this;if("2d"!==n.type)return;const{GridSnappingEngine:i}=await new Promise((t,n)=>e(["./GridSnappingEngine"],t,n));return r.throwIfAborted(t),{type:"grid",engine:new i({view:n,options:this.options})}}async _createFeatureSnappingEngine(t){const{FeatureSnappingEngine:n}=await new Promise((t,n)=>e(["./FeatureSnappingEngine"],t,n));r.throwIfAborted(t);const{view:i,options:a}=this,{spatialReference:s}=i;return{type:"feature",engine:new n({view:i,options:a,spatialReference:s})}}get _squaredMouseProximityThreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:e,touchSensitivityMultiplier:t}=this.options,n=e*t;return n*n}snap(e){return function(e){return null!=e.scenePoint}(e)?this._snapMultiPoint(e):this._snapSinglePoint(e)}update(e){const{point:t,context:n}=e;this._removeVisualization();const i=this._currentMainCandidate;if(null==i)return t;const a=this._selectUpdateInput(e);if(null==a)return t;const{spatialReference:s}=n,r=h.project(a,s);if(null==r)return t;const{view:o}=this,{elevationInfo:d,visualizer:p}=n,c=[],l=g.fromPoint(r,o,d),u=i.constraint.closestTo(l);if(!this._arePointsWithinScreenThreshold(l,u,n)||!I(i,n.drawConstraints))return this._resetSnappingState(),t;i.targetPoint=g.markAsTarget(u),c.push(...i.hints);for(const e of this._currentOtherActiveCandidates)I(e,n.drawConstraints)&&(e.targetPoint=g.markAsTarget(u),c.push(...e.hints));return null!=p&&this.addHandles(p.draw(c,{spatialReference:s,elevationInfo:q(n),view:o,selfSnappingZ:n.selfSnappingZ}),b),g.toElevationAlignedDehydratedPoint(u,o,t,n)}doneSnapping(){this._removeVisualization(),this._resetSnappingState()}_selectUpdateInput({point:e,scenePoint:t}){switch(this._currentSnappedType){case 0:return e;case 1:return t}}_resetSnappingState(){this._currentMainCandidate=null,this._currentOtherActiveCandidates=[],this._currentSnappedType=0}_removeVisualization(){this.removeHandles(b)}async _snapSinglePoint({point:e,context:t,signal:n}){const{view:i}=this,{elevationInfo:a}=t,s=g.fromPoint(e,i,a),r=await this._fetchCandidates(s,3,t,n);return this._createSnapResult(s,0,r,i,e,t,n)}async _snapMultiPoint({point:e,scenePoint:t,context:n,signal:i}){const{view:a}=this,{coordinateHelper:s,elevationInfo:r,spatialReference:o}=n;await h.initializeProjection(t.spatialReference,o);const d=h.project(t,o),p=g.fromPoint(d,a,r),c=await this._fetchCandidates(p,1,n,i);if(c.length>0){const e=await this._fetchCandidates(p,2,n,i);return this._createSnapResult(p,1,[...c,...e],a,d,n,i)}const l=g.fromPoint(e,a,r),u=await this._fetchCandidates(l,2,n,i);return this._createSnapResult(l,0,u,a,{z:s.hasZ()&&e.hasZ?e.z??0:void 0,m:s.hasM()&&e.hasM?e.m??0:void 0},n,i)}async _fetchCandidates(e,t,n,i){return(await Promise.all(this._engines.map(a=>a.fetchCandidates(e,t,n,i)))).flat()}_createSnapResult(e,t,n,i,a,s,o){return{get valid(){return!r.isAborted(o)},apply:()=>{const{spatialReference:r}=s,{snappedPoint:o,hints:d}=this._processCandidates(e,t,n,s);return this._removeVisualization(),null!=s.visualizer&&this.addHandles(s.visualizer.draw(d,{spatialReference:r,elevationInfo:u.absoluteHeightElevationInfo,view:i,selfSnappingZ:s.selfSnappingZ}),b),g.toElevationAlignedDehydratedPoint(o,i,a,s)}}}_processCandidates(e,t,n,i){if(n.length<1)return this.doneSnapping(),{snappedPoint:e,hints:[]};this._currentSnappedType!==t&&this._resetSnappingState(),S.sortCandidatesInPlace(e,n);const a=this._currentMainCandidate;if(null!=a){const o=(r=n,(s=a)instanceof w.IntersectionSnappingCandidate?A(r,s.first)>=0&&A(r,s.second)>=0?0:-1:A(r,s));if(o>=0){if(!(n[o]instanceof w.IntersectionSnappingCandidate))return this._intersectWithOtherCandidates(o,n,e,t,i);if(this._arePointsWithinScreenThreshold(e,a.targetPoint,i))return this._updateSnappingCandidate(a,t,n,i)}}var s,r;return this._intersectWithOtherCandidates(0,n,e,t,i)}_intersectWithOtherCandidates(e,t,n,i,a){const{coordinateHelper:s}=a,r=t[e],o=[];for(let i=0;i<t.length;++i){if(i===e)continue;const a=t[i],d=r.constraint.intersect(a.constraint);if(d)for(const e of d.closestPoints(r.targetPoint))o.push([new w.IntersectionSnappingCandidate(g.markAsTarget(e),r,a,a.isDraped),this._squaredScreenDistance(n,e,s)])}return o.length>0&&(o.sort((e,t)=>e[1]-t[1]),o[0][1]<this._squaredPointProximityThreshold(a.pointer))?this._updateSnappingCandidate(o[0][0],i,t,a):I(r,a.drawConstraints)?this._updateSnappingCandidate(r,i,t,a):{snappedPoint:n,hints:[]}}_updateSnappingCandidate(e,t,n,i){this.doneSnapping(),this._currentMainCandidate=e,this._currentSnappedType=t;const a=this._currentMainCandidate.targetPoint,s=[];s.push(...e.hints);for(const t of n){if(e instanceof w.IntersectionSnappingCandidate){if(t.constraint.equals(e.first.constraint)||t.constraint.equals(e.second.constraint))continue}else if(t.constraint.equals(e.constraint))continue;const n=t.constraint.closestTo(a);this._squaredScreenDistance(n,a,i.coordinateHelper)<R()&&(t.targetPoint=a,this._currentOtherActiveCandidates.push(t),s.push(...t.hints))}return{snappedPoint:a,hints:s}}_squaredPointProximityThreshold(e){return"touch"===e?this._squaredTouchProximityThreshold:this._squaredMouseProximityThreshold}_arePointsWithinScreenThreshold(e,t,n){return this._squaredScreenDistance(e,t,n.coordinateHelper)<this._squaredPointProximityThreshold(n.pointer)}_squaredScreenDistance(e,t,n){return S.squaredScreenDistance(this._toScreen(e,n),this._toScreen(t,n))}_toScreen(e,t){return T.vectorToScreenPoint(e,t.spatialReference,u.absoluteHeightElevationInfo,this.view)}get test(){}},n.__decorate([d.property({constructOnly:!0})],t.SnappingManager.prototype,"view",void 0),n.__decorate([d.property()],t.SnappingManager.prototype,"options",void 0),n.__decorate([d.property({readOnly:!0})],t.SnappingManager.prototype,"updating",null),n.__decorate([d.property()],t.SnappingManager.prototype,"_loadTask",void 0),n.__decorate([d.property()],t.SnappingManager.prototype,"_engines",void 0),n.__decorate([d.property()],t.SnappingManager.prototype,"_squaredMouseProximityThreshold",null),n.__decorate([d.property()],t.SnappingManager.prototype,"_squaredTouchProximityThreshold",null),t.SnappingManager=n.__decorate([l.subclass("esri.views.interactive.snapping.SnappingManager")],t.SnappingManager);const b="visualization-handle";function R(){return f.defaults.satisfiesConstraintScreenThreshold*f.defaults.satisfiesConstraintScreenThreshold}function I(e,t){return!t||null==t.direction&&null==t.distance||!(e instanceof v.DrapedEdgeSnappingCandidate||e instanceof y.EdgeSnappingCandidate||e instanceof C.LineSnappingCandidate||e instanceof P.ParallelLineSnappingCandidate||e instanceof E.RightAngleTriangleSnappingCandidate)&&(!(e instanceof m.RightAngleSnappingCandidate)||null==t.direction&&1===e.selfSnappingType)}function A(e,t){let n=-1;for(let i=0;i<e.length;++i)if(t.constraint.equals(e[i].constraint)){n=i;break}return n}function q({coordinateHelper:e,elevationInfo:t}){return e.hasZ()?u.absoluteHeightElevationInfo:t}Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});