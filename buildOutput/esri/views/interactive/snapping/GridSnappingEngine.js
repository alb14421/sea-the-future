// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/Logger","../../../core/mathUtils","../../../core/unitUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../chunks/vec32","../../../geometry/projectionUtils","../../../geometry/support/normalizeUtils","../../../geometry/support/scaleUtils","../../2d/grid/constants","../../2d/grid/gridUtils","../sketch/normalizedPoint","./snappingUtils","./candidates/IntersectionSnappingCandidate","./candidates/LineSnappingCandidate"],function(e,t,r,n,i,o,a,s,p,c,d,l,g,u,S,h,y,f,v,P){"use strict";e.GridSnappingEngine=class extends r{constructor(e){super(e),this.options=null}destroy(){this._set("options",null)}get grid(){return this.view.grid}get effectiveViewRotation(){return this.grid?.rotateWithMap?0:i.deg2rad(this.view.rotation??0)}get gridRotation(){return i.deg2rad(this.grid?.rotation??0)}get gridCenter(){const{spatialReference:e,grid:t}=this;if(!t||!e||!l.isLoadedOrLoadFor(t.center.spatialReference,e))return null;try{const r=l.project(t.center,e),n=e.isWrappable&&null!=this.view?.center?g.getClosestDenormalizedXToReference(r.x,this.view.center.x,e):r.x;return y.create(n,r.y,r.z)}catch(e){return n.getLogger(this).errorOnce("Grid Snapping - Failed to project grid center.",e),null}}get offsetScaleFactor(){const{pixelsPerStride:e,grid:t}=this;if(!t||!e)return 1;const{majorLineInterval:r,dynamicScaling:n}=t;return r<1?null:h.getScaleFactor(r,e,n)}get spatialReference(){return this.view.spatialReference}get gridMetersPerStride(){const{grid:e}=this;return e?o.convertUnit(e.spacing,e.units,"meters"):null}get viewMetersPerPixel(){const{viewMetersPerSRUnit:e}=this;return null==e?null:e*u.getResolutionForScale(this.view.scale,this.view.spatialReference)}get viewMetersPerSRUnit(){const{spatialReference:e}=this.view;return this.gridCenter?h.measureMetersPerUnitAtReferencePoint(this.gridCenter[0],this.gridCenter[1],e):null}get pixelsPerStride(){const{gridMetersPerStride:e,viewMetersPerPixel:t}=this;return t&&e?e/t:null}get updating(){return null!=this.grid&&null!=this.spatialReference&&null==this.viewMetersPerSRUnit}async fetchCandidates(e,t,r){const{options:n,view:i}=this;if(!n?.effectiveGridEnabled||!i.grid||r.feature?.attributes&&f.gridPlacementGraphicSymbol in r.feature.attributes)return[];const o=r.coordinateHelper.arrayToPoint(e),a=n.distance*("touch"===r.pointer?n.touchSensitivityMultiplier:1);return this.fetchCandidatesSync(o,a)}fetchCandidatesSync(e,t){const r=[],{grid:n,effectiveViewRotation:i,gridRotation:o,gridCenter:a,viewMetersPerPixel:s,viewMetersPerSRUnit:p,offsetScaleFactor:c,spatialReference:d,gridMetersPerStride:g,pixelsPerStride:u}=this;if(!(n&&s&&p&&a&&d&&c&&g&&u))return r;if(!n.dynamicScaling&&u<S.minimumPixelsPerStrideForDisplayWhenScalingOff)return r;if(!l.isLoadedOrLoadFor(e.spatialReference,d))return r;const h=l.project(e,d),f=y.create(h.x,h.y,h.z),G=_(f,-o,a,-i),E=g/p*c,m=w(G,E,a),{shouldSnapX:x,shouldSnapY:C}=R(m,G,t,s,p);if(!x&&!C)return[];const U=y.create((x?m:G)[0],(C?m:G)[1]),b=_(U,o,a,i),L=_(m,o,a,i);if(C){const e=M(m,G,E,"y"),t=_(e,o,a,i);r.push(new P.LineSnappingCandidate({lineStart:L,lineEnd:t,targetPoint:b,isDraped:!1}))}if(x){const e=M(m,G,E,"x"),t=_(e,o,a,i);r.push(new P.LineSnappingCandidate({lineStart:L,lineEnd:t,targetPoint:b,isDraped:!1}))}return x&&C&&r.push(new v.IntersectionSnappingCandidate(b,r[0],r[1],!1)),r}},t.__decorate([a.property({constructOnly:!0})],e.GridSnappingEngine.prototype,"view",void 0),t.__decorate([a.property()],e.GridSnappingEngine.prototype,"options",void 0),t.__decorate([a.property()],e.GridSnappingEngine.prototype,"grid",null),t.__decorate([a.property()],e.GridSnappingEngine.prototype,"effectiveViewRotation",null),t.__decorate([a.property()],e.GridSnappingEngine.prototype,"gridRotation",null),t.__decorate([a.property()],e.GridSnappingEngine.prototype,"gridCenter",null),t.__decorate([a.property()],e.GridSnappingEngine.prototype,"offsetScaleFactor",null),t.__decorate([a.property()],e.GridSnappingEngine.prototype,"spatialReference",null),t.__decorate([a.property()],e.GridSnappingEngine.prototype,"gridMetersPerStride",null),t.__decorate([a.property()],e.GridSnappingEngine.prototype,"viewMetersPerPixel",null),t.__decorate([a.property()],e.GridSnappingEngine.prototype,"viewMetersPerSRUnit",null),t.__decorate([a.property()],e.GridSnappingEngine.prototype,"pixelsPerStride",null),t.__decorate([a.property()],e.GridSnappingEngine.prototype,"updating",null),e.GridSnappingEngine=t.__decorate([c.subclass("esri.views.interactive.snapping.GridSnappingEngine")],e.GridSnappingEngine);const _=(e,t,r,n)=>{const i=y.createWritable(e[0],e[1],e[2]);return d.rotateZ(i,d.rotateZ(i,i,r,t),r,n)},w=(e,t,r)=>{const n=(e[0]-r[0])/t,i=(e[1]-r[1])/t,o=Math.trunc(n),a=Math.trunc(i),s=Math.round(n%1),p=Math.round(i%1),c=r[0]+(o+s)*t,d=r[1]+(a+p)*t;return y.create(c,d)},R=(e,t,r,n,i)=>{if(n<=0)return{shouldSnapX:!1,shouldSnapY:!1};const o=(e[0]-t[0])/n,a=(e[1]-t[1])/n;return{shouldSnapX:Math.abs(o*i)<r,shouldSnapY:Math.abs(a*i)<r}},M=(e,t,r,n)=>{if("y"===n){const n=t[0]>e[0]?1:-1;return y.create(e[0]+r*n,e[1])}const i=t[1]>e[1]?1:-1;return y.create(e[0],e[1]+r*i)};Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});