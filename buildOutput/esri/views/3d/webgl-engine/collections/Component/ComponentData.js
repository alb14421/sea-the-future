// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/MapUtils","./IndexRange/ComponentRange","../../../../support/HighlightDefaults"],function(t,e,h,i){"use strict";t.ComponentData=class{constructor(t,e){this.offsets=e,this._highlightsInOrder=[],this.pickability=null,this.componentHighlights=new Map,this.verticalOffsets=null,this._cachedGeometryRanges=null,this._cachedHighlightRangesMap=null,this._cachedShadowmapRanges=null;const i=this.count;this.visibility=new h.ComponentRange(i),this.materialDataBuffer=t.getBuffer(i),this.materialDataIndices=new Uint16Array(i);for(let t=0;t<i;t++)this.materialDataIndices[t]=this.materialDataBuffer.acquireIndex()}destroy(){for(let t=0;t<this.count;t++)this.materialDataBuffer.releaseIndex(this.materialDataIndices[t])}get count(){return this.offsets.length-1}get geometryRanges(){return null==this._cachedGeometryRanges&&(this._cachedGeometryRanges=this.visibility.computeOffsetRanges(this.offsets)),this._cachedGeometryRanges}get highlightRangesMap(){return 0===this.componentHighlights.size?null:(this._updateCachedHighlightRanges(),this._cachedHighlightRangesMap)}get shadowmapRanges(){return 0===this.componentHighlights.size?this.geometryRanges:(this._updateCachedHighlightRanges(),this._cachedShadowmapRanges)}markHighlightsDirty(){this._cachedHighlightRangesMap=null,this._cachedShadowmapRanges=null}markVisibilityDirty(){this._cachedGeometryRanges=null,this.markHighlightsDirty()}updateHighlights(t){this._updateHighlightOrder(t)&&(this.markHighlightsDirty(),this._updateCachedHighlightRanges())}_updateHighlightOrder(t){const{_highlightsInOrder:e}=this;let h=e.length!==t.length;e.length=Math.min(t.length,8);for(let i=0;i<t.length;++i){const a=t.at(i).name;e.length<i?(h=!0,e.push(a)):e[i]!==a&&(e[i]=a,h=!0)}return h}_updateCachedHighlightRanges(){if(null==this._cachedHighlightRangesMap||null==this._cachedShadowmapRanges){const{highlightRangesMap:t,shadowmapRangesMap:h}=function(t,h,a,s){const n=new Map,g=[];if(t.size>0){let l=a.length;h.forEachComponent(h=>{let r=!1;for(let g=s.length-1;g>=0;--g){const l=s[g],c=t.get(l);if((c?.[h]??0)>0){const t=e.getOrCreateMapValue(n,l,()=>[]),s=a[h],g=a[h+1];t.push(s),t.push(g-s),r||=l===i.defaultHighlightName;break}}return r||(l!==h-1&&(g.length>0&&g.push(a[l+1]-g[g.length-1]),g.push(a[h])),l=h),!0}),g.length>0&&g.push(a[l+1]-g[g.length-1])}return{highlightRangesMap:n,shadowmapRangesMap:g}}(this.componentHighlights,this.visibility,this.offsets,this._highlightsInOrder);this._cachedHighlightRangesMap=t,this._cachedShadowmapRanges=h}}},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});