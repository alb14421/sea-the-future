// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../support/buffer/InterleavedLayout","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/OrderIndependentTransparency","../../../../chunks/MeasurementArrow.glsl","../../../webgl/enums","../../../webgl/renderState"],function(e,r,t,n,i,o,l,a,u){"use strict";class s extends i.ShaderTechnique{constructor(r,t){super(r,t,new n.ReloadableShaderModule(l.MeasurementArrow,()=>new Promise((r,t)=>e(["./MeasurementArrow.glsl"],r,t))),d.locations),this.primitiveType=a.PrimitiveType.TRIANGLE_STRIP}initializePipeline(e){return u.makePipelineState({blending:e.transparent?o.blending(e.oitPass):null,polygonOffset:e.polygonOffsetEnabled?{factor:0,units:-4}:null,depthTest:{func:513},depthWrite:u.defaultDepthWrite,colorWrite:u.defaultColorWrite})}}const d=t.newLayout().vec3f("position").vec3f("normal").vec2f("uv0").f32("length");r.MeasurementArrowTechnique=s,r.layout=d,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});