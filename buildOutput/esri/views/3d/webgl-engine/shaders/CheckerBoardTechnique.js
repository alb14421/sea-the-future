// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/OrderIndependentTransparency","../materials/DefaultLayouts","../../../../chunks/CheckerBoard.glsl","../../../webgl/renderState"],function(e,r,t,n,o,a,i,l){"use strict";class s extends n.ShaderTechnique{constructor(r,n){super(r,n,new t.ReloadableShaderModule(i.CheckerBoard,()=>new Promise((r,t)=>e(["./CheckerBoard.glsl"],r,t))),a.PositionUvLayout.locations)}initializePipeline(e){const{oitPass:r,transparent:t,polygonOffset:n,output:a}=e,i=0===r,s=2===r;return l.makePipelineState({blending:t?o.blending(r):null,depthTest:{func:o.oitDepthTest(r)},depthWrite:o.depthWrite(e),drawBuffers:o.getDrawBuffers(r,a),colorWrite:l.defaultColorWrite,polygonOffset:i||s?n?d:null:{factor:-1,units:-25}})}}const d={factor:0,units:-25};r.CheckerBoardTechnique=s,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});