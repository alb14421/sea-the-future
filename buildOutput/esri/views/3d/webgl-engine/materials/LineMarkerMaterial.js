// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/support/float16","../core/shaderLibrary/ShaderOutput","../lib/GLMaterial","../lib/Material","./VisualVariablePassParameters","./internal/bufferWriterUtils","../shaders/LineMarkerTechnique","../shaders/LineMarkerTechniqueConfiguration","../../../../webscene/support/AlphaCutoff"],function(e,t,r,i,a,s,o,n,h,l,c,u){"use strict";class p extends o.Material{constructor(e){super(e,d),this._configuration=new c.LineMarkerTechniqueConfiguration,this.produces=new Map([[2,e=>8===e||a.isColor(e)&&8===this.parameters.renderOccluded],[3,e=>a.isDepth(e)],[10,e=>a.isColorHighlightOrDepth(e)&&8===this.parameters.renderOccluded],[11,e=>a.isColorHighlightOrDepth(e)&&8===this.parameters.renderOccluded],[4,e=>a.isColor(e)&&this.parameters.writeDepth],[8,e=>a.isColor(e)&&!this.parameters.writeDepth],[18,e=>a.isColorOrColorEmission(e)||8===e]]),this.intersectDraped=void 0}getConfiguration(e,t){return super.getConfiguration(e,t,this._configuration),this._configuration.space=18===t.slot?0:this.parameters.worldSpace?2:1,this._configuration.hideOnShortSegments=this.parameters.hideOnShortSegments,this._configuration.hasCap=0!==this.parameters.cap,this._configuration.anchor=this.parameters.anchor,this._configuration.hasTip=this.parameters.hasTip,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasOccludees=t.hasOccludees,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasVVSize=this.parameters.hasVVSize,this._configuration.hasVVColor=this.parameters.hasVVColor,this._configuration.hasVVOpacity=this.parameters.hasVVOpacity,this._configuration.occluder=8===this.parameters.renderOccluded,this._configuration.oitPass=t.oitPass,this._configuration.terrainDepthTest=t.terrainDepthTest&&a.isColorOrColorEmission(e),this._configuration.cullAboveTerrain=t.cullAboveTerrain,this._configuration}get visible(){return this.parameters.color[3]>=u.alphaCutoff}intersect(){}createBufferWriter(){return new g(l.getLayout(this.parameters),this.parameters)}createGLMaterial(e){return new m(e)}}class m extends s{dispose(){super.dispose(),this._markerTextures?.release(this._markerPrimitive),this._markerPrimitive=null}beginSlot(e){const t=this._material.parameters.markerPrimitive;return t!==this._markerPrimitive&&(this._material.setParameters({markerTexture:this._markerTextures.swap(t,this._markerPrimitive)}),this._markerPrimitive=t),this.getTechnique(l.LineMarkerTechnique,e)}}class d extends n.VisualVariablePassParameters{constructor(){super(...arguments),this.width=0,this.color=[1,1,1,1],this.markerPrimitive="arrow",this.placement="end",this.cap=0,this.anchor=0,this.hasTip=!1,this.worldSpace=!1,this.hideOnShortSegments=!1,this.writeDepth=!0,this.hasSlicePlane=!1,this.vvFastUpdate=!1,this.markerTexture=null}}class g{constructor(e,t){this.layout=e,this._parameters=t}elementCount(){return"begin-end"===this._parameters.placement?12:6}write(e,r,a,s,o,n){const l=a.get("position").data,c=l.length/3;let u=[1,0,0];const p=a.get("normal");this._parameters.worldSpace&&null!=p&&(u=p.data);let m=1,d=0;this._parameters.vvSize?d=a.get("sizeFeatureAttribute").data[0]:a.has("size")&&(m=a.get("size").data[0]);let g=[1,1,1,1],v=0;this._parameters.vvColor?v=a.get("colorFeatureAttribute").data[0]:a.has("color")&&(g=a.get("color").data);let b=0;this._parameters.vvOpacity&&(b=a.get("opacityFeatureAttribute").data[0]);const S=new Float32Array(o.buffer),w=i.makeFloat16Array(o.buffer),C=new Uint8Array(o.buffer);let P=n*(this.layout.stride/4);const T=S.BYTES_PER_ELEMENT/w.BYTES_PER_ELEMENT,M=4/T,O=(e,t,r,i)=>{S[P++]=e[0],S[P++]=e[1],S[P++]=e[2],h.writeDeltaF16Vector(t,e,w,P*T),P+=M;let a=P*T;if(w[a++]=r[0],w[a++]=r[1],P=Math.ceil(a/T),this._parameters.vvColor)S[P++]=v;else{const e=Math.min(4*i,g.length-4),t=4*P++;C[t]=255*g[e],C[t+1]=255*g[e+1],C[t+2]=255*g[e+2],C[t+3]=255*g[e+3]}this._parameters.vvOpacity&&(S[P++]=b),a=P*T,this._parameters.vvSize?(S[P++]=d,a+=2):w[a++]=m,this._parameters.worldSpace&&(w[a++]=u[0],w[a++]=u[1],w[a++]=u[2]),P=Math.ceil(a/T)},k=(r,i)=>{const a=t.set(f,l[3*r],l[3*r+1],l[3*r+2]),s=_;let o=r+i;do{t.set(s,l[3*o],l[3*o+1],l[3*o+2]),o+=i}while(t.equals(a,s)&&o>=0&&o<c);e&&(t.transformMat4(a,a,e),t.transformMat4(s,s,e)),O(a,s,[-1,-1],r),O(a,s,[1,-1],r),O(a,s,[1,1],r),O(a,s,[-1,-1],r),O(a,s,[1,1],r),O(a,s,[-1,1],r)},V=this._parameters.placement;return"begin"!==V&&"begin-end"!==V||k(0,1),"end"!==V&&"begin-end"!==V||k(c-1,-1),null}}const f=r.create(),_=r.create();e.LineMarkerMaterial=p,e.Parameters=d,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});