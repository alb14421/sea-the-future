// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/buffer/BufferView","../core/shaderLibrary/ShaderOutput","../lib/GLMaterial","../lib/Material","../lib/RayIntersections","../lib/Util","./internal/bufferWriterUtils","../shaders/ShadedColorMaterialTechnique","../shaders/ShadedColorMaterialTechniqueConfiguration","../../../../webscene/support/AlphaCutoff"],function(e,t,r,i,s,a,n,o,c,l,h,u,p,f,d){"use strict";class g extends c.Material{constructor(e){super(e,b),this._configuration=new f.ShadedColorMaterialTechniqueConfiguration,this.supportsEdges=!0,this._pp0=r.fromValues(0,0,1),this._pp1=r.fromValues(0,0,0),this.produces=new Map([[2,e=>8===e||n.isColorOrOID(e)&&!this.parameters.transparent],[4,e=>n.isColorOrOID(e)&&this.parameters.transparent&&this.parameters.writeDepth],[8,e=>n.isColorOrOID(e)&&this.parameters.transparent&&!this.parameters.writeDepth]])}getConfiguration(e,t){return super.getConfiguration(e,t,this._configuration),this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.screenSizeEnabled=this.parameters.screenSizeEnabled,this._configuration.shadingEnabled=this.parameters.shadingEnabled,this._configuration.oitPass=t.oitPass,this._configuration.terrainDepthTest=t.terrainDepthTest&&n.isColorOrColorEmission(e),this._configuration.cullAboveTerrain=t.cullAboveTerrain,this._configuration}get visible(){return this.parameters.color[3]>=d.alphaCutoff}intersect(e,t,r,i,s,a){this._intersect(e,r,i,s,a)}intersectDraped(e,t,r,i){return this._pp0[0]=this._pp1[0]=r[0],this._pp0[1]=this._pp1[1]=r[1],this._intersect(e,t,this._pp0,this._pp1,i)}_intersect(e,r,i,a,n){if(this.parameters.screenSizeEnabled){const o=e.attributes.get("offset"),c={applyToVertex:(e,i,s,a)=>{const n=t.set(_,o.data[3*a],o.data[3*a+1],o.data[3*a+2]),c=t.set(C,e,i,s);return t.scale(n,n,this.parameters.screenSizeScale*(r.camera?.computeScreenPixelSizeAt(n)??1)),t.add(c,c,n),[c[0],c[1],c[2]]},applyToAabb:e=>{const t=s.center(e,_);return s.scale(e,this.parameters.screenSizeScale*(r.camera?.computeScreenPixelSizeAt(t)??1))}};l.intersectTriangleGeometry(e,r,i,a,c,n)}else l.intersectTriangleGeometry(e,r,i,a,void 0,n)}createGLMaterial(e){return new m(e)}createBufferWriter(){return new S(p.getLayout(this.parameters))}}class m extends o{beginSlot(e){return this.getTechnique(p.ShadedColorMaterialTechnique,e)}}class b extends c.MaterialParameters{constructor(){super(...arguments),this.color=i.fromValues(1,1,1,1),this.shadingTint=i.fromValues(0,0,0,.25),this.shadingDirection=t.normalize(r.create(),[.5,-.5,-.5]),this.screenSizeScale=14,this.forceTransparentMode=!1,this.writeDepth=!0,this.hasSlicePlane=!1,this.cullFace=0,this.screenSizeEnabled=!1,this.shadingEnabled=!0}get transparent(){return this.color[3]<1||this.forceTransparentMode}}class S{constructor(e){this.layout=e}elementCount(e){return e.get("position").indices.length}write(e,t,r,i,s,n){const o=u.writeAttributes(r,i,this.layout,e,t,s,n),c=s.getField("offset",a.BufferViewVec3f);if(c&&r.has("offset")){const e=r.get("offset");h.assert(3===e.size),u.writePosition(e,t,c,n)}return o}}const _=r.create(),C=r.create();e.Parameters=b,e.ShadedColorMaterial=g,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});