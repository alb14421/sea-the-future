// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../core/shaderLibrary/shading/WaterDistortion.glsl","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../effects/geometry/olidUtils","../lib/OrderIndependentTransparency","./DefaultLayouts","../../../../chunks/WaterSurface.glsl","../../../webgl/renderState"],function(e,t,r,a,s,i,o,n,l,d){"use strict";class u extends r.WaterDistortionPassParameters{}class c extends s.ShaderTechnique{constructor(t,r){super(t,r,new a.ReloadableShaderModule(l.WaterSurface,()=>new Promise((t,r)=>e(["../shaders/WaterSurface.glsl"],t,r))),i.olidEnabled()?n.PositionUvf32OlidLayout.locations:n.PositionUvf32Layout.locations)}initializePipeline(e){const{oitPass:t,output:r,transparent:a,draped:s}=e;return d.makePipelineState({blending:3!==r&&8!==r&&9!==r&&a?o.blending(t):null,depthTest:s?null:{func:o.oitDepthTest(t)},depthWrite:o.depthWrite(e),drawBuffers:o.getDrawBuffers(t,r),colorWrite:d.defaultColorWrite,polygonOffset:o.oitPolygonOffset(e)})}}t.WaterMaterialPassParameters=u,t.WaterTechnique=c,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});