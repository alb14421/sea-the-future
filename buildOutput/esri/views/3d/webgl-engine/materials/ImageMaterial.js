// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../geometry/support/buffer/BufferView","../core/shaderLibrary/ShaderOutput","../lib/GLMaterial","../lib/ITexture","../lib/Material","../lib/OrderIndependentTransparency","../lib/Util","./DefaultBufferWriter","./TriangleMaterial","./internal/bufferWriterUtils","../shaders/ImageMaterialTechnique","../shaders/ImageMaterialTechniqueConfiguration"],function(e,t,r,i,a,s,n,o,u,l,h,c,p){"use strict";class f extends l.TriangleMaterial{constructor(e){super(e,m),this.supportsEdges=!0,this.produces=new Map([[2,e=>r.isHighlightOrOID(e)],[4,e=>r.isColor(e)&&this.parameters.writeDepth],[8,e=>r.isColor(e)&&!this.parameters.writeDepth],[18,e=>r.isColor(e)||r.isHighlightOrOID(e)]]),this._configuration=new p.ImageMaterialTechniqueConfiguration(e.draped)}dispose(){this.setParameters({texture:void 0})}getConfiguration(e,t){return super.getConfiguration(e,t,this._configuration),this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=t.hasOccludees,this._configuration.oitPass=t.oitPass,this._configuration.enableOffset=t.camera.relativeElevation<n.OITPolygonOffsetLimit,this._configuration.terrainDepthTest=t.terrainDepthTest,this._configuration.cullAboveTerrain=t.cullAboveTerrain,this._configuration.perspectiveInterpolation=this.parameters.perspectiveInterpolation,this._configuration}get visible(){return!0}createGLMaterial(e){return new g(e)}createBufferWriter(){return new d(c.getLayout(this.parameters))}}class g extends i{constructor(e){super({...e,...e.material.parameters}),this.parameters=e;const t=this._material.parameters.texture;a.isUpdatableTexture(t)&&e.textures.updater.add(t)}dispose(){this.parameters.textures.updater.remove(this._material.parameters.texture)}beginSlot(e){return this.getTechnique(c.ImageMaterialTechnique,e)}}class d extends u.DefaultBufferWriter{write(e,r,i,a,s,n){for(const a of this.layout.fields.keys()){const u=i.get(a);if(u)if("perspectiveDivide"===a){o.assert(1===u.size);const e=s.getField(a,t.BufferViewFloat);e&&h.writeBufferFloat(u,e,n)}else h.writeAttribute(a,u,e,r,s,n)}return null}}class m extends s.MaterialParameters{constructor(e,t){super(),this.texture=e,this.draped=t,this.writeDepth=!0,this.hasSlicePlane=!1,this.cullFace=0,this.opacity=1,this.perspectiveInterpolation=!1}get glTexture(){return this.texture.glTexture}}e.ImageMaterial=f,e.Parameters=m,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});