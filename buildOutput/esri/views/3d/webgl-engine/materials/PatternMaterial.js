// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/support/buffer/BufferView","../core/shaderLibrary/ShaderOutput","../lib/GLMaterial","../lib/OrderIndependentTransparency","../lib/Util","./DefaultBufferWriter","./TriangleMaterial","./VisualVariablePassParameters","./internal/bufferWriterUtils","../shaders/PatternTechnique","../shaders/PatternTechniqueConfiguration","../../../../webscene/support/AlphaCutoff"],function(e,t,r,i,s,a,o,n,l,u,c,f,h,g){"use strict";class p extends l.TriangleMaterial{constructor(e){super(e,y),this._configuration=new h.PatternTechniqueConfiguration,this.supportsEdges=!0,this.produces=new Map([[2,e=>i.isHighlightOrOID(e)],[4,e=>i.isColorOrColorEmission(e)],[5,e=>i.isDepth(e)],[18,e=>this.parameters.draped&&i.isColorEmissionHighlightOrOID(e)]])}getConfiguration(e,t){return super.getConfiguration(e,t,this._configuration),this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasVertexColors=this.parameters.hasVertexColors&&!this.parameters.vvColor,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.style=this.parameters.style,this._configuration.draped=this.parameters.draped,this._configuration.oitPass=t.oitPass,this._configuration.enableOffset=t.camera.relativeElevation<a.OITPolygonOffsetLimit,this._configuration.terrainDepthTest=t.terrainDepthTest&&i.isColorOrColorEmission(e),this._configuration.cullAboveTerrain=t.cullAboveTerrain,this._configuration.hasVVColor=!!this.parameters.vvColor,this._configuration}get visible(){return this.parameters.color[3]>=g.alphaCutoff}createGLMaterial(e){return new d(e)}createBufferWriter(){return new m(f.getLayout(this.parameters))}}class d extends s{beginSlot(e){return this.getTechnique(f.PatternTechnique,e)}}class m extends n.DefaultBufferWriter{write(e,t,i,s,a,n){const l=c.writeAttributes(i,s,this.layout,e,t,a,n);for(const t of this.layout.fields.keys()){const s=i.get(t),l=s?.indices;if(s&&l)switch(t){case"uvMapSpace":{o.assert(4===s.size);const e=a.getField(t,r.BufferViewVec4f);e&&c.writeBufferVec4(s,e,n);break}case"boundingRect":{o.assert(9===s.size);const i=a.getField(t,r.BufferViewMat3f);i&&b(s,e,i,n);break}}}return l}}function b(e,t,r,i){const{data:s,indices:a}=e,o=t,n=r.typedBuffer,l=r.typedBufferStride,u=a.length;i*=l;for(let e=0;e<u;++e){const t=9*a[e],r=s[t],u=s[t+1],c=s[t+2];n[i]=o[0]*r+o[4]*u+o[8]*c+o[12],n[i+1]=o[1]*r+o[5]*u+o[9]*c+o[13],n[i+2]=o[2]*r+o[6]*u+o[10]*c+o[14];for(let e=3;e<9;++e)n[i+e]=s[t+e];i+=l}}class y extends u.VisualVariablePassParameters{constructor(){super(...arguments),this.color=t.fromValues(1,1,1,1),this.hasVertexColors=!1,this.polygonOffset=!1,this.hasSlicePlane=!1,this.cullFace=0,this.hasOccludees=!1,this.style=2,this.draped=!0}}e.Parameters=y,e.PatternMaterial=p,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});