// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/arrayUtils","../../../../../core/memoryEstimations","../IntersectorResult","./Intersector"],function(e,t,r,s,n){"use strict";class i{constructor(e,t,r,s){this.material=e,this.buffer=t,this.numVertices=r,this.boundingInfo=s,this.bufferWriter=e.createBufferWriter()}get layout(){return this.bufferWriter.layout}get numTriangles(){return this.numVertices/3}computeUsedMemory(){return this.buffer.byteLength+r.baseTypedArrayMemory}get renderGeometry(){return this}intersect(e,t,r,s,n,i,u,a){const m=this.bufferWriter,c=this.buffer;m.intersect(c,this.material.parameters,null,e,r,s,(r,s,m)=>o(r,s,m,e,t,i,u,n,a))}}function o(e,t,r,i,o,u,a,m,c){if(e<0)return;if(o&&!o(i.rayBegin,i.rayEnd,e))return;const l=new n.LodTarget(u.layerViewUid,u.graphicUid(m),r,a,c);if((null==i.results.min.distance||e<i.results.min.distance)&&i.results.min.set(6,l,e,t,i.transform.transform),(null==i.results.max.distance||e>i.results.max.distance)&&i.results.max.set(6,l,e,t,i.transform.transform),2===i.options.store){const r=new s.IntersectorResult(i.results.min.ray);r.set(6,l,e,t,i.transform.transform),i.results.all.push(r)}}e.LodComponentEngineGeometry=class{constructor(e){this.engineGeometry=e;const t=this.material,r=this.engineGeometry,s=r.attributes,n=r.boundingInfo,o=t.createBufferWriter(),u=o.layout,a=o.elementCount(s),m=u.createBuffer(a);o.write(null,null,s,null,m,0),this.renderGeometry=new i(t,m.buffer,a,n)}get material(){return this.engineGeometry.material}get numVertices(){return this.engineGeometry.indexCount}get numTriangles(){return this.numVertices/3}get boundingInfo(){return this.engineGeometry.boundingInfo}computeUsedMemory(){return Array.from(this.engineGeometry.attributes.values()).reduce((e,t)=>e+r.estimateNumberArrayMemory(t.data,t.indices),0)}intersect(e,t,r,s,n,i,u,a){const m=this.engineGeometry;this.material.intersect(m,e.transform.transform,e,r,s,(r,s,m)=>o(r,s,m,e,t,i,u,n,a))}},e.LodComponentRenderGeometry=i,e.LodComponentResources=class{constructor(e,t=null){this.geometry=e,this.textures=t}get material(){return this.geometry.material}get numTriangles(){return this.geometry.numTriangles}},e.LodLevelResources=class{constructor(e,r,s){this.components=e,this.minScreenSpaceRadius=r,this.pivotOffset=s;const n=t.unique(this.components.map(e=>e.geometry));this.numVertices=n.reduce((e,t)=>e+t.numVertices,0)}},e.LodResources=class{constructor(e){this.levels=e,this.levels.sort((e,t)=>e.minScreenSpaceRadius===t.minScreenSpaceRadius?e.numVertices-t.numVertices:e.minScreenSpaceRadius-t.minScreenSpaceRadius)}get materialParameters(){return this.levels[0].components[0].geometry.material.parameters}getMaterials(){const e=[];return this.levels.forEach(t=>t.components.forEach(t=>e.push(t.geometry.material))),t.unique(e)}getTextures(){const e=new Array;return this.levels.forEach(t=>t.components.forEach(t=>{null!=t.textures&&e.push(...t.textures)})),t.unique(e)}getGeometries(){const e=new Array;return this.levels.forEach(t=>t.components.forEach(t=>{e.push(t.geometry)})),t.unique(e)}getEngineGeometries(){return this.getGeometries().map(e=>e.engineGeometry).filter(e=>null!=e)}computeUsedMemory(){const e=this.getGeometries(),t=this.getTextures(),r=e.reduce((e,t)=>e+t.computeUsedMemory(),0);return t.reduce((e,t)=>e+t.usedMemory,0)+r}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});