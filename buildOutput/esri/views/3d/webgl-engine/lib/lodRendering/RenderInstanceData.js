// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/arrayUtils","../../../../../geometry/support/buffer/BufferView","../../../support/buffer/InterleavedLayout","../Util","./BackedBufferObject","./InstanceData"],function(t,e,i,s,a,n,r){"use strict";class h{constructor(t){this.model=t.instanceModel,this.modelNormal=t.instanceModelNormal,this.modelOriginHi=t.instanceModelOriginHi,this.modelOriginLo=t.instanceModelOriginLo,this.featureAttribute=t.getField("instanceFeatureAttribute",i.BufferViewVec4f),this.color=t.getField("instanceColor",i.BufferViewVec4u8),this.olidColor=t.getField("instanceOlidColor",i.BufferViewVec4u8)}}const d=s.newLayout().vec3f("instanceModelOriginHi").vec3f("instanceModelOriginLo").mat3f("instanceModel").mat3f("instanceModelNormal");t.RenderInstanceData=class{constructor(t,e){this._rctx=t,this._layout=e,this._headIndex=0,this._tailIndex=0,this._firstIndex=null,this._captureFirstIndex=!0,this._updating=!1,this._prevHeadIndex=0,this._resized=!1,this._capacity=1}destroy(){this._buffer&&this._buffer.destroy()}get buffer(){return this._buffer.buffer}get view(){return this._view}get capacity(){return this._capacity}get size(){const t=this._headIndex,e=this._tailIndex;return t>=e?t-e:t+this._capacity-e}get isEmpty(){return this._headIndex===this._tailIndex}get isFull(){return this._tailIndex===(this._headIndex+1)%this._capacity}get headIndex(){return this._headIndex}get tailIndex(){return this._tailIndex}get firstIndex(){return this._firstIndex}get usedMemory(){return this._buffer?.usedMemory??0}reset(){this._headIndex=0,this._tailIndex=0,this._firstIndex=null}startUpdateCycle(){this._captureFirstIndex=!0}beginUpdate(){a.assert(!this._updating,"already updating"),this._updating=!0,this._prevHeadIndex=this._headIndex}endUpdate(){a.assert(this._updating,"not updating"),this.size<e.reallocShrinkThreshold*this.capacity&&this._shrink(),this._resized?(this._buffer.transferAll(),this._resized=!1):this._transferRange(this._prevHeadIndex,this._headIndex),this._updating=!1}allocateHead(){a.assert(this._updating,"not updating"),this.isFull&&this._grow();const t=this.headIndex;return this._captureFirstIndex&&(this._firstIndex=t,this._captureFirstIndex=!1),this._incrementHead(),a.assert(this._headIndex!==this._tailIndex,"invalid pointers"),t}freeTail(){a.assert(this._updating,"not updating"),a.assert(this.size>0,"invalid size");const t=this._tailIndex===this._firstIndex;this._incrementTail(),t&&(this._firstIndex=this._tailIndex)}_grow(){const t=Math.max(r.initialCapacity,Math.floor(this._capacity*e.reallocGrowthFactor));this._resize(t)}_shrink(){const t=Math.max(r.initialCapacity,Math.floor(this._capacity*e.reallocShrinkFactor));this._resize(t)}_resize(t){if(a.assert(this._updating,"not updating"),t===this._capacity)return;const e=new n.BackedBufferObject(this._rctx,this._layout,t);if(this._buffer){this._firstIndex&&(this._firstIndex=(this._firstIndex+this._capacity-this._tailIndex)%this._capacity);const t=this.size,i=this._compactInstances(e);a.assert(i===t,"invalid compaction"),this._buffer.destroy(),this._tailIndex=0,this._headIndex=i,this._prevHeadIndex=0}this._resized=!0,this._capacity=t,this._buffer=e,this._view=new h(this._layout.createView(this._buffer.array))}_compactInstances(t){const e=this._headIndex,i=this._tailIndex;return i<e?(this._buffer.copyRange(i,e,t),e-i):i>e?(this._buffer.copyRange(i,this._capacity,t),e>0&&this._buffer.copyRange(0,e,t,this._capacity-i),e+(this._capacity-i)):0}_incrementHead(t=1){this._headIndex=(this._headIndex+t)%this._capacity}_incrementTail(t=1){this._tailIndex=(this._tailIndex+t)%this._capacity}_transferRange(t,e){t<e?this._buffer.transferRange(t,e):t>e&&(e>0&&this._buffer.transferRange(0,e),this._buffer.transferRange(t,this._capacity))}},t.RenderInstanceDataView=h,t.getRenderInstanceDataLayout=function(t){return r.addOptionalLayoutFields(d.clone(),t)},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});