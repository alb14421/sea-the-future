// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/Accessor","../../../../../core/arrayUtils","../../../../../core/Evented","../../../../../core/accessorSupport/decorators/property","../../../../../core/has","../../../../../core/Logger","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/libs/gl-matrix-2/math/mat3","../../../../../core/libs/gl-matrix-2/factories/mat3f64","../../../../../core/libs/gl-matrix-2/math/mat4","../../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../geometry/support/buffer/BufferView","../../../support/mathUtils","../../../support/buffer/InterleavedLayout","../../effects/geometry/olidUtils","../Util"],function(t,e,s,a,i,r,o,n,l,h,c,g,d,m,f,u,_,p,v,b){"use strict";class M{constructor(t){this.localTransform=t.localTransform,this.globalTransform=t.globalTransform,this.modelOrigin=t.modelOrigin,this.model=t.instanceModel,this.modelNormal=t.instanceModelNormal,this.modelScaleFactors=t.modelScaleFactors,this.boundingSphere=t.boundingSphere,this.featureAttribute=t.getField("instanceFeatureAttribute",u.BufferViewVec4f),this.color=t.getField("instanceColor",u.BufferViewVec4u8),this.olidColor=t.getField("instanceOlidColor",u.BufferViewVec4u8),this.state=t.getField("state",u.BufferViewUint8),this.lodLevel=t.getField("lodLevel",u.BufferViewUint8)}}t.InstanceData=class extends s{constructor(t,e){super(t),this.events=new i.EventEmitter,this._capacity=0,this._size=0,this._next=0,this._highlightOptionsMap=new Map,this._highlightOptionsMapPrev=new Map,this._layout=function(t){return y(w.clone(),t).u8("state").u8("lodLevel")}(e),this._capacity=V,this._buffer=this._layout.createBuffer(this._capacity),this._view=new M(this._buffer)}get capacity(){return this._capacity}get size(){return this._size}get view(){return this._view}addInstance(){this._size+1>this._capacity&&this._grow();const t=this._findSlot();return this._view.state.set(t,1),this._size++,this.events.emit("instances-changed"),t}removeInstance(t){const e=this._view.state;b.assert(t>=0&&t<this._capacity&&!!(1&e.get(t)),"invalid instance handle"),this._getStateFlag(t,18)?this._setStateFlags(t,32):this.freeInstance(t),this.events.emit("instances-changed")}freeInstance(t){const e=this._view.state;b.assert(t>=0&&t<this._capacity&&!!(1&e.get(t)),"invalid instance handle"),e.set(t,0),this._size--}setLocalTransform(t,e,s=!0){this._view.localTransform.setMat(t,e),s&&this.updateModelTransform(t)}getLocalTransform(t,e){this._view.localTransform.getMat(t,e)}setGlobalTransform(t,e,s=!0){this._view.globalTransform.setMat(t,e),s&&this.updateModelTransform(t)}getGlobalTransform(t,e){this._view.globalTransform.getMat(t,e)}updateModelTransform(t){const e=this._view,s=F,a=T;e.localTransform.getMat(t,S),e.globalTransform.getMat(t,O);const i=g.multiply(O,O,S);m.set(s,i[12],i[13],i[14]),e.modelOrigin.setVec(t,s),h.fromMat4(a,i),e.model.setMat(t,a);const r=_.scaleFromMatrix(F,i);r.sort(),e.modelScaleFactors.set(t,0,r[1]),e.modelScaleFactors.set(t,1,r[2]),h.invert(a,a),h.transpose(a,a),e.modelNormal.setMat(t,a),this._setStateFlags(t,64),this.events.emit("instance-transform-changed",{index:t})}getModelTransform(t,e){const s=this._view;s.model.getMat(t,T),s.modelOrigin.getVec(t,F),e[0]=T[0],e[1]=T[1],e[2]=T[2],e[3]=0,e[4]=T[3],e[5]=T[4],e[6]=T[5],e[7]=0,e[8]=T[6],e[9]=T[7],e[10]=T[8],e[11]=0,e[12]=F[0],e[13]=F[1],e[14]=F[2],e[15]=1}applyShaderTransformation(t,e){null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,t,e)}getCombinedModelTransform(t,e){return this.getModelTransform(t,e),null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,t,e),e}getCombinedLocalTransform(t,e){this._view.localTransform.getMat(t,e),null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,t,e)}getCombinedMaxScaleFactor(t){let e=this._view.modelScaleFactors.get(t,1);return null!=this.shaderTransformation&&(this.shaderTransformation.scaleFactor(F,this,t),e*=Math.max(F[0],F[1],F[2])),e}getCombinedMedianScaleFactor(t){let e=this._view.modelScaleFactors.get(t,0);var s,a,i;return null!=this.shaderTransformation&&(this.shaderTransformation.scaleFactor(F,this,t),e*=(s=F[0],a=F[1],i=F[2],Math.max(Math.min(s,a),Math.min(Math.max(s,a),i)))),e}getModel(t,e){this._view.model.getMat(t,e)}setFeatureAttribute(t,e){this._view.featureAttribute?.setVec(t,e)}getFeatureAttribute(t,e){this._view.featureAttribute?.getVec(t,e)}setColor(t,e){this._view.color?.setVec(t,e)}setObjectAndLayerIdColor(t,e){this._view.olidColor?.setVec(t,e)}setVisible(t,e){e!==this.getVisible(t)&&(this._setStateFlag(t,4,e),this.events.emit("instance-visibility-changed",{index:t}))}getVisible(t){return this._getStateFlag(t,4)}setHighlight(t,e){const{_highlightOptionsMap:s}=this,a=s.get(t);e?e!==a&&(s.set(t,e),this._setStateFlag(t,8,!0),this.events.emit("instance-highlight-changed")):a&&(s.delete(t),this._setStateFlag(t,8,!1),this.events.emit("instance-highlight-changed"))}get highlightOptionsMap(){return this._highlightOptionsMap}getHighlightStateFlag(t){return this._getStateFlag(t,8)}geHighlightOptionsPrev(t){const e=this._highlightOptionsMapPrev.get(t)??null;return this._highlightOptionsMapPrev.delete(t),e}getHighlightName(t){const e=this.highlightOptionsMap.get(t)??null;return e?this._highlightOptionsMapPrev.set(t,e):this._highlightOptionsMapPrev.delete(t),e}getState(t){return this._view.state.get(t)}getLodLevel(t){return this._view.lodLevel.get(t)}countFlags(t){let e=0;for(let s=0;s<this._capacity;++s)this.getState(s)&t&&++e;return e}_setStateFlags(t,e){const s=this._view.state;e=s.get(t)|e,s.set(t,e)}_clearStateFlags(t,e){const s=this._view.state;e=s.get(t)&~e,s.set(t,e)}_setStateFlag(t,e,s){s?this._setStateFlags(t,e):this._clearStateFlags(t,e)}_getStateFlag(t,e){return!!(this._view.state.get(t)&e)}_grow(){this._capacity=Math.max(V,Math.floor(this._capacity*a.reallocGrowthFactor)),this._buffer=this._layout.createBuffer(this._capacity).copyFrom(this._buffer),this._view=new M(this._buffer)}_findSlot(){const t=this._view.state;let e=this._next;for(;1&t.get(e);)e=e+1===this._capacity?0:e+1;return this._next=e+1===this._capacity?0:e+1,e}},e.__decorate([r.property({constructOnly:!0})],t.InstanceData.prototype,"shaderTransformation",void 0),e.__decorate([r.property()],t.InstanceData.prototype,"_size",void 0),e.__decorate([r.property({readOnly:!0})],t.InstanceData.prototype,"size",null),t.InstanceData=e.__decorate([l.subclass("esri.views.3d.webgl-engine.lib.lodRendering.InstanceData")],t.InstanceData);const w=p.newLayout().mat4f64("localTransform").mat4f64("globalTransform").vec4f64("boundingSphere").vec3f64("modelOrigin").mat3f("instanceModel").mat3f("instanceModelNormal").vec2f("modelScaleFactors");function y(t,e){return e.instancedFeatureAttribute&&t.vec4f("instanceFeatureAttribute"),e.instancedColor&&t.vec4u8("instanceColor"),v.olidEnabled()&&t.vec4u8("instanceOlidColor"),t}const F=f.create(),T=c.create(),S=d.create(),O=d.create(),V=64;t.InstanceDataView=M,t.addOptionalLayoutFields=y,t.initialCapacity=V,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});