// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/support/aaBoundingBox","./Util"],function(t,n,e,i,o){"use strict";class c{constructor(t=!1,n=!0){this.isVerticalRay=t,this.normalRequired=n}}const s=i.create(),r=e.create();function a(t,n,e,o,c,l,f){if(null==t)return;const b=y(e,r);if(i.setMin(s,t.bbMin),i.setMax(s,t.bbMax),null!=c&&c.applyToAabb(s),g(s,n,b,o)){const{primitiveIndices:i,position:s}=t,r=i?i.length:s.indices.length/3;if(r>T){const i=t.getChildren();if(void 0!==i){for(const t of i)a(t,n,e,o,c,l,f);return}}!function(t,n,e,i,o,c,s,r,a,l,f){const b=t[0],h=t[1],m=t[2],M=n[0],d=n[1],y=n[2],{normalRequired:g}=l;for(let t=0;t<i;++t){const n=r[t],e=3*n,i=s*o[e];let l=c[i],x=c[i+1],T=c[i+2];const R=s*o[e+1];let I=c[R],V=c[R+1],q=c[R+2];const D=s*o[e+2];let B=c[D],A=c[D+1],G=c[D+2];null!=a&&([l,x,T]=a.applyToVertex(l,x,T,t),[I,V,q]=a.applyToVertex(I,V,q,t),[B,A,G]=a.applyToVertex(B,A,G,t));const O=I-l,W=V-x,z=q-T,F=B-l,N=A-x,P=G-T,S=d*P-N*y,U=y*F-P*M,j=M*N-F*d,k=O*S+W*U+z*j;if(Math.abs(k)<=v)continue;const w=b-l,C=h-x,E=m-T,H=w*S+C*U+E*j;if(k>0){if(H<0||H>k)continue}else if(H>0||H<k)continue;const J=C*z-W*E,K=E*O-z*w,L=w*W-O*C,Q=M*J+d*K+y*L;if(k>0){if(Q<0||H+Q>k)continue}else if(Q>0||H+Q<k)continue;const X=(F*J+N*K+P*L)/k;X>=0&&f(X,n,g?p(O,W,z,F,N,P,u):null)}}(n,e,0,r,s.indices,s.data,s.stride,i,c,l,f)}}const u=e.create();function l(t,e,i,o,c,s,r,a,u,l){const p=e,M=I,d=Math.abs(p[0]),y=Math.abs(p[1]),g=Math.abs(p[2]),x=d>=y?d>=g?0:2:y>=g?1:2,T=x,v=p[T]<0?2:1,R=(x+v)%3,V=(x+(3-v))%3,q=p[R]/p[T],D=p[V]/p[T],B=1/p[T],A=f,G=b,O=h,{normalRequired:W}=u;for(let e=i;e<o;++e){const i=3*e,o=r*c[i];n.set(M[0],s[o+0],s[o+1],s[o+2]);const u=r*c[i+1];n.set(M[1],s[u+0],s[u+1],s[u+2]);const f=r*c[i+2];n.set(M[2],s[f+0],s[f+1],s[f+2]),a&&(n.copy(M[0],a.applyToVertex(M[0][0],M[0][1],M[0][2],e)),n.copy(M[1],a.applyToVertex(M[1][0],M[1][1],M[1][2],e)),n.copy(M[2],a.applyToVertex(M[2][0],M[2][1],M[2][2],e))),n.sub(A,M[0],t),n.sub(G,M[1],t),n.sub(O,M[2],t);const b=A[R]-q*A[T],h=A[V]-D*A[T],p=G[R]-q*G[T],d=G[V]-D*G[T],y=O[R]-q*O[T],g=O[V]-D*O[T],x=y*d-g*p,v=b*g-h*y,I=p*h-d*b;if((x<0||v<0||I<0)&&(x>0||v>0||I>0))continue;const z=x+v+I;if(0===z)continue;const F=x*(B*A[T])+v*(B*G[T])+I*(B*O[T]);if(F*Math.sign(z)<0)continue;const N=F/z;N>=0&&l(N,e,W?m(M):null)}}const f=e.create(),b=e.create(),h=e.create();function p(t,e,i,o,c,s,r){return n.set(M,t,e,i),n.set(d,o,c,s),n.cross(r,M,d),n.normalize(r,r),r}function m(t){return n.sub(M,t[1],t[0]),n.sub(d,t[2],t[0]),n.cross(u,M,d),n.normalize(u,u),u}const M=e.create(),d=e.create();function y(t,e){return n.set(e,1/t[0],1/t[1],1/t[2])}function g(t,n,e,i){return x(t,n,e,i,1/0)}function x(t,n,e,i,o){const c=(t[0]-i-n[0])*e[0],s=(t[3]+i-n[0])*e[0];let r=Math.min(c,s),a=Math.max(c,s);const u=(t[1]-i-n[1])*e[1],l=(t[4]+i-n[1])*e[1];if(a=Math.min(a,Math.max(u,l)),a<0)return!1;if(r=Math.max(r,Math.min(u,l)),r>a)return!1;const f=(t[2]-i-n[2])*e[2],b=(t[5]+i-n[2])*e[2];return a=Math.min(a,Math.max(f,b)),!(a<0)&&(r=Math.max(r,Math.min(f,b)),!(r>a)&&r<o)}const T=1e3,v=1e-7,R=e.create(),I=[e.create(),e.create(),e.create()];t.MeshIntersectionOptions=c,t.computeInvDir=function(t,e,i){return n.set(i,1/(e[0]-t[0]),1/(e[1]-t[1]),1/(e[2]-t[2]))},t.computeInvDirFromDirection=y,t.computeNormalFromBarycentric=p,t.intersectAabbInvDir=g,t.intersectAabbInvDirBefore=x,t.intersectRayTriangles=function(t,n,e,i,o,c,s,r,a,l=null,f=0){const b=t[0],h=t[1],m=t[2],M=n[0],d=n[1],y=n[2];for(let t=e;t<i;++t){const n=f+(l?l[t]:t),e=3*n,i=s*o[e],g=c[i],x=c[i+1],T=c[i+2],R=s*o[e+1],I=c[R],V=c[R+1],q=c[R+2],D=s*o[e+2],B=I-g,A=V-x,G=q-T,O=c[D]-g,W=c[D+1]-x,z=c[D+2]-T,F=d*z-W*y,N=y*O-z*M,P=M*W-O*d,S=B*F+A*N+G*P;if(Math.abs(S)<=v)continue;const U=b-g,j=h-x,k=m-T,w=U*F+j*N+k*P;if(S>0){if(w<0||w>S)continue}else if(w>0||w<S)continue;const C=j*G-A*k,E=k*B-G*U,H=U*A-B*j,J=M*C+d*E+y*H;if(S>0){if(J<0||w+J>S)continue}else if(J>0||w+J<S)continue;const K=(O*C+W*E+z*H)/S;K>=0&&a(K,n,r?p(B,A,G,O,W,z,u):null)}},t.intersectRayTrianglesWithDisplacementWatertight=l,t.intersectRayTrianglesWithVerticalOffsetENUGlobal=function(t,n,e,i,o,c,s,r,a,l,f,b=null,h=0){const m=t[0],M=t[1],d=t[2],y=n[0],g=n[1],x=n[2];for(let t=e;t<i;++t){const n=h+(b?b[t]:t),e=3*n,i=s*o[e],T=c[i],R=c[i+1],I=c[i+2],V=s*o[e+1],q=c[V],D=c[V+1],B=c[V+2],A=s*o[e+2],G=c[A],O=c[A+1],W=c[A+2],z=I-a,F=r/Math.sqrt(T*T+R*R+z*z),N=T+T*F,P=R+R*F,S=I+z*F,U=B-a,j=r/Math.sqrt(q*q+D*D+U*U),k=q+q*j,w=D+D*j,C=B+U*j,E=W-a,H=r/Math.sqrt(G*G+O*O+E*E),J=k-N,K=w-P,L=C-S,Q=G+G*H-N,X=O+O*H-P,Y=W+E*H-S,Z=g*Y-X*x,$=x*Q-Y*y,_=y*X-Q*g,tt=J*Z+K*$+L*_;if(Math.abs(tt)<=v)continue;const nt=m-N,et=M-P,it=d-S,ot=nt*Z+et*$+it*_;if(tt>0){if(ot<0||ot>tt)continue}else if(ot>0||ot<tt)continue;const ct=et*L-K*it,st=it*J-L*nt,rt=nt*K-J*et,at=y*ct+g*st+x*rt;if(tt>0){if(at<0||ot+at>tt)continue}else if(at>0||ot+at<tt)continue;const ut=(Q*ct+X*st+Y*rt)/tt;ut>=0&&f(ut,n,l?p(J,K,L,Q,X,Y,u):null)}},t.intersectRenderGeometryTriangles=function(t,n,e,i,o,c,s,r){const a=t[0],l=t[1],f=t[2],b=n[0],h=n[1],m=n[2];for(let t=e;t<i;++t){const n=3*t,e=n+1,i=n+2,M=c*n,d=o[M],y=o[M+1],g=o[M+2],x=c*e,T=c*i,R=o[x]-d,I=o[x+1]-y,V=o[x+2]-g,q=o[T]-d,D=o[T+1]-y,B=o[T+2]-g,A=h*B-D*m,G=m*q-B*b,O=b*D-q*h,W=R*A+I*G+V*O;if(Math.abs(W)<=v)continue;const z=a-d,F=l-y,N=f-g,P=z*A+F*G+N*O;if(W>0){if(P<0||P>W)continue}else if(P>0||P<W)continue;const S=F*V-I*N,U=N*R-V*z,j=z*I-R*F,k=b*S+h*U+m*j;if(W>0){if(k<0||P+k>W)continue}else if(k>0||P+k<W)continue;const w=(q*S+D*U+B*j)/W;w>=0&&r(w,t,s?p(R,I,V,q,D,B,u):null)}},t.intersectTriangleGeometry=function(t,e,i,s,r,u){if(!t.visible)return;const f=n.sub(R,s,i),b=(t,n,e)=>{u(t,e,n)},h=new c(!1,e.options.normalRequired);if(t.boundingInfo){o.assert(0===t.type);const n=e.tolerance;a(t.boundingInfo,i,f,n,r,h,b)}else{const n=t.attributes.get("position"),e=n.indices;l(i,f,0,e.length/3,e,n.data,n.stride,r,h,b)}},t.intersectTriangles=function(t,e,i,o,c,s,r,a,u){const{data:f,stride:b}=s;l(t,n.sub(R,e,t),i,o,c,f,b,r,a,u)},t.triangleRayParallelTolerance=v,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});