// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/has","../../../../core/NestedMap","../../../../core/uid","../../../../core/accessorSupport/decorators/property","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","./Util"],function(e,t,r,o,s,d,i,c,a,n){"use strict";class y{constructor(e,t,r,o){this.operation=e,this.geometry=t,this.states=r,this.sync=o}}let h=class extends t{constructor(e){super(e),this._residentGeomRecords=new o.NestedMap,this._dirtyGeomRecords=new o.NestedMap,this._dirtyRecordCount=0}get dirty(){return this._dirtyRecordCount>0}commitLayer(e,t){const r=this._dirtyGeomRecords.getInner(e),o=this.model.getLayer(e);if(!r||!o)return;let s=0;r.forEach((r,d)=>{const i=this._ensureGeomRecord(e,d);this._dirtyGeomRecords.delete(e,d),s+=r.size,r.forEach(({geometry:e,operation:r,states:s},c)=>{let a=!1;if(1===r){const r=i.get(c);if(r){if(4&s){const t=o.getObject(d);this.model.updateRenderGeometryTransformation(t,e,r)&&(a=!0)}a||t.updates.push({renderGeometry:r,updateType:s})}else n.assert(!1,"ModelDirtySet.commitLayer: invalid update")}if(2===r||a){const e=i.get(c);e?(t.removes.push(e),i.delete(c)):2===r&&n.assert(!1,"ModelDirtySet.commitLayer: invalid remove")}if(0===r||a){const r=o.getObject(d);if(null!=r){const o=this.model.getRenderGeometry(r,e);t.adds.push(o),i.set(c,o)}}}),0===i.size&&this._residentGeomRecords.delete(e,d)}),this._dirtyRecordCount-=s}commitSyncUpdates(e,t){const r=this._dirtyGeomRecords.getInner(e),o=this.model.getLayer(e);r&&o&&r.forEach((r,s)=>{const d=this._ensureGeomRecord(e,s);r.forEach(({geometry:e,operation:r,states:i,sync:c},a)=>{let y=!1;if(1===r&&c){const r=d.get(a);if(r){if(4&i){const t=o.getObject(s);this.model.updateRenderGeometryTransformation(t,e,r)&&(y=!0)}y||t.updates.push({renderGeometry:r,updateType:i})}else n.assert(!1,"ModelDirtySet.commitSyncUpdates: invalid update")}})})}_objectStateChanged(e,t){for(const r of t.geometries)this._updateOrCreateDirtyRecord(t,r,1,e)}visibilityChanged(e){this._objectStateChanged(1,e)}highlightChanged(e){this._objectStateChanged(8,e)}occlusionChanged(e){this._objectStateChanged(16,e)}attributesChanged({object:e,geometry:t,sync:r}){this._updateOrCreateDirtyRecord(e,t,1,2,r)}layerAdded(e){e.objects.forEach(e=>this.layerObjectAdded(e))}layerRemoved(e){e.objects.forEach(e=>this.layerObjectRemoved(e))}layerObjectAdded(e){for(const t of e.geometries)this._geometryAdded(e,t)}layerObjectRemoved(e){for(const t of e.geometries)this._geometryRemoved(e,t)}layerObjectsAdded(e){for(const t of e)this.layerObjectAdded(t)}layerObjectsRemoved(e){for(const t of e)this.layerObjectRemoved(t)}transformationChanged(e){const t=this._getLayerId(e),r=e.id;this._ensureGeomRecord(t,r).forEach(({geometry:t})=>this._updateOrCreateDirtyRecord(e,t,1,4))}shaderTransformationChanged(e){const t=this._getLayerId(e),r=e.id;this._ensureGeomRecord(t,r).forEach(t=>t.objectShaderTransformationChanged(e.shaderTransformation))}geometryAdded(e){this._geometryAdded(e.object,e.geometry)}_geometryAdded(e,t){this._updateOrCreateDirtyRecord(e,t,0)}geometryRemoved(e){this._geometryRemoved(e.object,e.geometry)}_geometryRemoved(e,t){this._updateOrCreateDirtyRecord(e,t,2)}_updateOrCreateDirtyRecord(e,t,r,o=0,s=!1){const d=this._getLayerId(e),i=e.id,c=t.id,a=this._ensureDirtyRecord(d,i),h=a.get(c);if(h){const e=h.operation;2===e&&0===r&&0!==h.states?h.operation=1:2===e&&0===r||0===e&&2===r?(a.delete(c),this._dirtyRecordCount--):1!==e||2!==r&&1!==r?(n.assert((2===e||0===e)&&1===r,"ModelDirtySet.objectGeometryAdded: inconsistent state"),h.states|=o):(h.operation=r,h.states|=o),h.sync=h.sync||s}else a.set(c,new y(r,t,o,s)),this._dirtyRecordCount++}_ensureGeomRecord(e,t){let r=this._residentGeomRecords.get(e,t);return r||(r=new Map,this._residentGeomRecords.set(e,t,r)),r}assertLayerClean(e){n.assert(null==this._dirtyGeomRecords.getInner(e),"Dirty geometry records for removed layer")}_ensureDirtyRecord(e,t){const r=this.model.getLayer(e);n.assert(null!=r,"Updating geometry record for an unregistered layer");let o=this._dirtyGeomRecords.get(e,t);return o||(o=new Map,this._dirtyGeomRecords.set(e,t,o)),o}_getLayerId(e){return e.layer?.id??s.nullUid}formatDebugInfo(){const e=["ADD","UPD",void 0,"REM"];let t="";return this._dirtyGeomRecords.forAll((r,o,s)=>{t.length>0&&(t+="\n"),t+=o+"."+s;const d=[];r.forEach(e=>{const t=e.operation;d[t]||(d[t]=[]),d[t].push(e.geometry.id)});for(let r=0;r<d.length;r++)if(d[r]){t+=" "+e[r-1]+": ";for(let e=0;e<d[r].length;e++)t+=d[r][e]+", "}}),t}get test(){}};return e.__decorate([d.property({constructOnly:!0})],h.prototype,"model",void 0),e.__decorate([d.property()],h.prototype,"_dirtyRecordCount",void 0),h=e.__decorate([a.subclass("esri.views.3d.webgl-engine.lib.ModelDirtySet")],h),h});