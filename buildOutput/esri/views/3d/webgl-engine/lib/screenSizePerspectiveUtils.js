// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/mathUtils","../../../../chunks/boundedPlane","../../../../chunks/sphere"],function(e,t,a,r){"use strict";function c(e,t,a){const r=a.parameters;return u.scale=Math.min(r.divisor/(t-r.offset),1),u.factor=function(e){return Math.abs(e*e*e)}(e),u}function l(e,a){return t.lerp(e*Math.max(a.scale,a.minScaleFactor),e,a.factor)}class n{get minScaleFactor(){return null!=this._fontHeight?Math.min(this._description.minPixelSize/this._fontHeight,1):0}constructor(e,t,a,r={camera:{distance:0,fovY:0},divisor:0,offset:0},c){this._viewingMode=e,this._description=t,this._ellipsoidRadius=a,this.parameters=r,this._fontHeight=c,2===this._viewingMode?(this._coverageCompensation=this._surfaceCoverageCompensationLocal,this._calculateCurvatureDependentParameters=this._calculateCurvatureDependentParametersLocal):(this._coverageCompensation=this._surfaceCoverageCompensationGlobal,this._calculateCurvatureDependentParameters=this._calculateCurvatureDependentParametersGlobal)}update(e){return!(this.parameters&&this.parameters.camera.fovY===e.fovY&&this.parameters.camera.distance===e.distance||(this._calculateParameters(e,this._ellipsoidRadius,this.parameters),0))}overrideFontHeight(e){return e!==this._fontHeight?new n(this._viewingMode,this._description,this._ellipsoidRadius,this.parameters,e):this}_calculateParameters(e,t,a){const{scaleStart:r,scaleFallOffRange:c}=this._description,{fovY:l,distance:n}=e,i=this._calculateCurvatureDependentParameters(e,t),s=this._coverageCompensation(e,t,i),{tiltAngle:o,scaleFallOffFactor:u}=i,f=Math.sin(o)*n,m=.5*Math.PI-o-l*(.5-r*s),d=f/Math.cos(m),h=m+l*c*s,p=(d-u*(f/Math.cos(h)))/(1-u);return a.camera.fovY=e.fovY,a.camera.distance=e.distance,a.offset=p,a.divisor=d-p,a}_calculateCurvatureDependentParametersLocal(e,t,a=f){return a.tiltAngle=this._description.curvatureDependent.min.tiltAngle,a.scaleFallOffFactor=this._description.curvatureDependent.min.scaleFallOffFactor,a}_calculateCurvatureDependentParametersGlobal(e,a,r=f){const c=this._description.curvatureDependent,l=1+e.distance/a,n=Math.sqrt(l*l-1),[i,s]=[c.min.curvature,c.max.curvature],o=t.clamp((n-i)/(s-i),0,1),[u,m]=[c.min,c.max];return r.tiltAngle=t.lerp(u.tiltAngle,m.tiltAngle,o),r.scaleFallOffFactor=t.lerp(u.scaleFallOffFactor,m.scaleFallOffFactor,o),r}_surfaceCoverageCompensationLocal(e,t,r){return a.cameraFrustumCoverage(r.tiltAngle,e.fovY)}_surfaceCoverageCompensationGlobal(e,t,a){return r.fromRadius(m,t),r.cameraFrustumCoverage(m,a.tiltAngle,e.distance,e.fovY)}}const i={curvatureDependent:{min:{curvature:t.deg2rad(10),tiltAngle:t.deg2rad(12),scaleFallOffFactor:.5},max:{curvature:t.deg2rad(70),tiltAngle:t.deg2rad(40),scaleFallOffFactor:.8}},scaleStart:.3,scaleFallOffRange:.65,minPixelSize:0},s={scaleFallOffFactor:.7},o={scaleFallOffFactor:.95},u={scale:0,factor:0,minScaleFactor:0},f={tiltAngle:0,scaleFallOffFactor:0},m=r.create();e.applyPrecomputedScaleFactor=function(e,t,a=[0,0]){const r=Math.min(Math.max(t.scale,t.minScaleFactor),1);return a[0]=e[0]*r,a[1]=e[1]*r,a},e.applyScaleFactor=l,e.getLabelSettings=function(e,t){const{curvatureDependent:a,scaleStart:r,scaleFallOffRange:c}=i;return new n(e,{curvatureDependent:{min:{curvature:a.min.curvature,tiltAngle:a.min.tiltAngle,scaleFallOffFactor:s.scaleFallOffFactor},max:{curvature:a.max.curvature,tiltAngle:a.max.tiltAngle,scaleFallOffFactor:o.scaleFallOffFactor}},scaleStart:r,scaleFallOffRange:c,minPixelSize:14},t)},e.getSettings=function(e,t){return new n(e,i,t)},e.precomputeScaleFactor=function(e,t,a,r){r.scale=function(e,t,a){const r=c(e,t,a);return r.minScaleFactor=0,l(1,r)}(e,t,a),r.factor=0,r.minScaleFactor=a.minScaleFactor},e.scale=function(e,t,a,r){return l(e,c(t,a,r))},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});