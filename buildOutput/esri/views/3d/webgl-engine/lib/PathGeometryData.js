// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/libs/gl-matrix-2/math/vec2","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../chunks/vec42","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/support/FloatArray","../../../../geometry/support/HalfFloatArray","../../../../geometry/support/Indices","./Attribute","./Normals","./RayIntersections"],function(t,e,i,r,s,o,a,n,l,c,h,u,p){"use strict";class b{constructor(t){this.builder=t}onPathChanged(t){this.builder.onPathChanged()}}class d extends b{constructor(t){super(t),this.color=a.fromValues(255,255,255,255),this._size=i.create(),this.positions=n.newFloatArray(3*this.builder.numVerticesTotal),this.normals=new Int16Array(2*this.builder.numVerticesTotal)}bakeVertexColors(t){o.copy(this.color,t)}bake(t){e.copy(this._size,t);const{numVerticesTotal:i,pathVertexData:s,positions:o,profileRightAxes:a,profileUpAxes:n,profileVertexAndNormals:l,profileAuxData:c}=this.builder;for(let h=0;h<i;++h){let i=s[h];i*=3;const p=g;let b=0,d=0;const x=u.decompressNormal(v,a,h),w=u.decompressNormal(y,n,h),V=4*h,z=e.set(A,l[V]*t[0],l[V+1]*t[1]),C=3*h;if(1===c[C+2])r.cross(p,w,x),b=c[C]*t[0],d=c[C+1];else{const t=m,i=f;e.set(t,c[C],c[C+1]);const s=e.length(t);e.normalize(t,t);const o=e.dot(z,t);if(Math.abs(o)>s){e.set(i,-t[1],t[0]);const r=e.dot(z,i);e.scale(t,t,s*Math.sign(o)),e.scale(i,i,r),e.add(z,t,i)}r.set(p,0,0,0)}const F=x[0]*z[0]+w[0]*z[1],P=x[1]*z[0]+w[1]*z[1],_=x[2]*z[0]+w[2]*z[1];this.positions[C]=o[i]+F+p[0]*b,this.positions[C+1]=o[i+1]+P+p[1]*b,this.positions[C+2]=o[i+2]+_+p[2]*b;const I=l[V+2],D=l[V+3];u.compressNormal(this.normals,h,x[0]*I+w[0]*D+p[0]*d,x[1]*I+w[1]*D+p[1]*d,x[2]*I+w[2]*D+p[2]*d)}}createGeometryData(){const t=this.builder.vertexIndices;return[["position",new h.Attribute(this.positions,t,3,!0)],["normalCompressed",new h.Attribute(this.normals,t,2,!0)],["color",new h.Attribute(this.color,c.getZeroIndexArray(t.length),4,!0)]]}onPathChanged(t){super.onPathChanged(t),this.bake(this.size)}intersect(t,e,i,r){const s=this.builder.vertexIndices,o=new h.Vertices(this.positions,3),a=s.length/3;p.intersectTriangles(t,e,0,a,s,o,void 0,i,(t,e,i)=>r(t,i,e))}get size(){return this._size}}const A=i.create(),m=i.create(),f=i.create(),g=s.create(),v=s.create(),y=s.create();t.FastUpdatePathGeometry=class extends b{constructor(t,e,i,r){super(t),this.sizeAttributeValue=e,this.colorAttributeValue=i,this.opacityAttributeValue=r,this.baked=new d(t),this._vvSize=n.newFloatArray(this.builder.path.vertices.length).fill(e),this._vvColor=l.newHalfFloatArray(this.builder.path.vertices.length).fill(i),this._vvOpacity=l.newHalfFloatArray(this.builder.path.vertices.length).fill(r)}createGeometryData(){const t=this.builder,{pathVertexIndices:e,vertexIndices:i}=t;return[["position",new h.Attribute(t.positions,e,3,!0)],["profileVertexAndNormal",new h.Attribute(t.profileVertexAndNormals,i,4,!0)],["profileAuxData",new h.Attribute(t.profileAuxData,i,3,!0)],["profileRight",new h.Attribute(t.profileRightAxes,i,2,!0)],["profileUp",new h.Attribute(t.profileUpAxes,i,2,!0)],["sizeFeatureAttribute",new h.Attribute(this._vvSize,e,1,!0)],["colorFeatureAttribute",new h.Attribute(this._vvColor,e,1,!0)],["opacityFeatureAttribute",new h.Attribute(this._vvOpacity,e,1,!0)]]}onPathChanged(t){super.onPathChanged(t);const e=t.getMutableAttribute("position");e&&(e.data=this.builder.positions)}},t.PathGeometryData=b,t.StaticPathGeometry=d,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});