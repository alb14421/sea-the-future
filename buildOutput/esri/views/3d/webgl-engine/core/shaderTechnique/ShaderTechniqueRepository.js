// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/Error","../../../../../core/has","../../../../../core/NestedMap","./ShaderTechniqueConfiguration"],function(e,t,i,n,o){"use strict";const c=new o.ShaderTechniqueConfiguration;e.NoConfiguration=c,e.ShaderTechniqueRepository=class{constructor(e){this._context=e,this._debug=!1,this._precompiling=this._debug?0:1,this._cache=new n.NestedMap}get context(){return this._context}get precompiling(){return this._precompiling}set precompiling(e){this._precompiling=e,0===e&&this.context.rctx.gl.flush()}get viewingMode(){return this.context.viewingMode}destroy(){this._cache.forAll(e=>e.destroy()),this._cache.clear(),this._context=null}precompile(e,t=c){++this.precompiling,this.get(e,t),--this.precompiling}get(e,i=c){const n=i.key.code;let o=this._cache.get(e,n);if(null==o){if(0===this._precompiling){let n=`Uncached shader compile in ${(new Error).stack}\n  for configuration\n${i.decode()}`;const o=this._cache.getInner(e);throw o?.size&&(n+="\n\n  cached configurations:\n",n+=Array.from(o.values()).map(e=>i.decode(e.key)).sort().join("\n\n")),console.log(n),new t("shader:uncached-compile",n)}o=new e(this.context,i),this._cache.set(e,n,o)}return o}async reloadAll(){const e=new Array;this._cache.forEach(t=>e.push(async function(e){let t=!0;e.forEach(async e=>{await e.reload(t),t=!1})}(t))),await Promise.all(e)}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});