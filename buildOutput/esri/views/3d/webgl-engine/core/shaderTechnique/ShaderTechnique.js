// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/Logger","../../../../../core/maybe","../shaderLibrary/ShaderOutput","../../lib/Program","../../../../webgl/enums","../../../../webgl/renderState"],function(e,i,t,r,a,n,o){"use strict";e.ShaderTechnique=class{constructor(e,r,o,s){this.primitiveType=n.PrimitiveType.TRIANGLES,this.key=r.key,this._program=new a.Program(e.rctx,o.get().build(r),s),this._pipeline=this.initializePipeline(r),this.reload=async n=>{n&&await o.reload(),this.key.equals(r.key)||i.getLogger("esri.views.3d.webgl.ShaderTechnique").warn("Configuration was changed after construction, cannot reload shader.",o),t.disposeMaybe(this._program),this._program=new a.Program(e.rctx,o.get().build(r),s),this._pipeline=this.initializePipeline(r)}}destroy(){this._program=t.disposeMaybe(this._program),this._pipeline=null}get program(){return this._program}get compiled(){return this.program.compiled}ensureAttributeLocations(e){this.program.assertCompatibleVertexAttributeLocations(e)}getPipeline(e,i){return this._pipeline}initializePipeline(e){return o.makePipelineState({blending:o.premultipliedAlpha,colorWrite:o.defaultColorWrite})}},e.depthOnlyOutputBuffersOr=function(e,i){return r.isDepthOnlyOutput(e)?{buffers:[0]}:i??null},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});