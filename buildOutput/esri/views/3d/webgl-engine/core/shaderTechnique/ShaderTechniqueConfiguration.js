// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/Error","./ShaderTechniqueConfigurationKey","../../../../webgl/NoParameters"],function(e,t,r,a){"use strict";class i extends a.NoParameters{constructor(){super(),this._parameterBits=this._parameterBits?.map(()=>0)??[],this._parameterNames??=[]}get key(){return this._key??=new r.ShaderTechniqueConfigurationKey(this._parameterBits),this._key}decode(e=this.key){const t=this._parameterBits;this._parameterBits=[...e.bits];const r=this._parameterNames.map(e=>`    ${e}: ${this[e]}`).join("\n");return this._parameterBits=t,r}}e.ShaderTechniqueConfiguration=i,e.parameter=function(e={}){return(r,a)=>{r.hasOwnProperty("_parameterNames")||Object.defineProperty(r,"_parameterNames",{value:r._parameterNames?.slice()??[],configurable:!0,writable:!0}),r.hasOwnProperty("_parameterBits")||Object.defineProperty(r,"_parameterBits",{value:r._parameterBits?.slice()??[0],configurable:!0,writable:!0}),r._parameterNames.push(a);const i=e.count||2,n=Math.ceil(Math.log2(i)),s=r._parameterBits;let o=0;for(;s[o]+n>16;)o++,o>=s.length&&s.push(0);const u=s[o],p=(1<<n)-1<<u;s[o]+=n,e.count?Object.defineProperty(r,a,{get(){return(this._parameterBits[o]&p)>>u},set(r){if(this[a]!==r){if(this._key=null,this._parameterBits[o]=this._parameterBits[o]&~p|+r<<u&p,"number"!=typeof r)throw new t("internal:invalid-shader-configuration",`Configuration value for ${a} must be a number, got ${typeof r}`);if(null==e.count)throw new t("internal:invalid-shader-configuration",`Configuration value for ${a} must provide a count option`)}}}):Object.defineProperty(r,a,{get(){return!!((this._parameterBits[o]&p)>>u)},set(e){if(this[a]!==e&&(this._key=null,this._parameterBits[o]=this._parameterBits[o]&~p|+e<<u&p,"boolean"!=typeof e))throw new t("internal:invalid-shader-configuration",`Configuration value for ${a} must be boolean, got ${typeof e}`)}})}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});