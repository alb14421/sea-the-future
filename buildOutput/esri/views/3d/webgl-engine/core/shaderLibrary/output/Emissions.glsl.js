// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../ShaderOutput","../attributes/VertexTextureCoordinates.glsl","../shading/Gamma.glsl","../../shaderModules/Float3DrawUniform","../../shaderModules/Float3PassUniform","../../shaderModules/FloatDrawUniform","../../shaderModules/FloatPassUniform","../../shaderModules/glsl","../../shaderModules/Texture2DDrawUniform","../../shaderModules/Texture2DPassUniform","../../../lib/GLTextureMaterial"],function(e,s,i,o,r,m,a,n,t,l,v,u){"use strict";class d extends u.GLEmissiveTexturePassParameters{}e.Emissions=function(e,u){if(!s.isColorOrColorEmission(u.output))return;e.fragment.include(o.Gamma);const{emissionSource:d,hasEmissiveTextureTransform:c,bindType:f}=u,x=3===d||4===d||5===d;x&&(e.include(i.VertexTextureCoordinates,u),e.fragment.uniforms.add(1===f?new v.Texture2DPassUniform("texEmission",e=>e.textureEmissive):new l.Texture2DDrawUniform("texEmission",e=>e.textureEmissive)));const g=2===d||x;g&&e.fragment.uniforms.add(1===f?new m.Float3PassUniform("emissiveBaseColor",e=>e.emissiveBaseColor):new r.Float3DrawUniform("emissiveBaseColor",e=>e.emissiveBaseColor));const T=0!==d;T&&7!==d&&6!==d&&4!==d&&5!==d&&e.fragment.uniforms.add(1===f?new n.FloatPassUniform("emissiveStrength",e=>e.emissiveStrength):new a.FloatDrawUniform("emissiveStrength",e=>e.emissiveStrength));const h=7===d,w=5===d,C=1===d||6===d||h;e.fragment.code.add(t.glsl`
    vec4 getEmissions(vec3 symbolColor) {
      vec4 emissions = ${g?w?"emissiveSource == 0 ? vec4(emissiveBaseColor, 1.0): vec4(linearizeGamma(symbolColor), 1.0)":"vec4(emissiveBaseColor, 1.0)":C?h?"emissiveSource == 0 ? vec4(0.0): vec4(linearizeGamma(symbolColor), 1.0)":"vec4(linearizeGamma(symbolColor), 1.0)":"vec4(0.0)"};
      ${t.If(x,`${t.If(w,`if(emissiveSource == 0) {\n              vec4 emissiveFromTex = textureLookup(texEmission, ${c?"emissiveUV":"vuv0"});\n              emissions *= vec4(linearizeGamma(emissiveFromTex.rgb), emissiveFromTex.a);\n           }`,`vec4 emissiveFromTex = textureLookup(texEmission, ${c?"emissiveUV":"vuv0"});\n           emissions *= vec4(linearizeGamma(emissiveFromTex.rgb), emissiveFromTex.a);`)}\n         emissions.w = emissions.rgb == vec3(0.0) ? 0.0: emissions.w;`)}
      ${t.If(T,"emissions.rgb *= emissiveStrength;")}
      return emissions;
    }
  `)},e.EmissionsParameters=d,e.emissiveStrengthDefault=1,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});