// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../core/compilerUtils","../../../../../../core/libs/gl-matrix-2/factories/mat3f64","../../../../../../core/libs/gl-matrix-2/factories/vec4f64","./NormalAttribute.glsl","./VertexPosition.glsl","../../shaderModules/glsl","../../shaderModules/Matrix3DrawUniform","../../shaderModules/Matrix3PassUniform"],function(r,a,e,o,l,s,t,m,i){"use strict";class d extends s.VertexPositionPassParameters{constructor(){super(...arguments),this.transformNormalViewFromGlobal=e.create()}}class n extends s.VertexPositionDrawParameters{constructor(){super(...arguments),this.transformNormalGlobalFromModel=e.create(),this.toMapSpace=o.create()}}r.VertexNormal=function(r,e){switch(e.normalType){case 0:case 1:r.include(l.NormalAttribute,e),r.varyings.add("vNormalWorld","vec3"),r.varyings.add("vNormalView","vec3"),r.vertex.uniforms.add(new m.Matrix3DrawUniform("transformNormalGlobalFromModel",r=>r.transformNormalGlobalFromModel),new i.Matrix3PassUniform("transformNormalViewFromGlobal",r=>r.transformNormalViewFromGlobal)).code.add(t.glsl`void forwardNormal() {
vNormalWorld = transformNormalGlobalFromModel * normalModel();
vNormalView = transformNormalViewFromGlobal * vNormalWorld;
}`);break;case 2:r.vertex.code.add(t.glsl`void forwardNormal() {}`);break;default:a.neverReached(e.normalType);case 3:}},r.VertexNormalDrawParameters=n,r.VertexNormalPassParameters=d,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});