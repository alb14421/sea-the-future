// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../../core/mathUtils","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../geometry/support/lineSegment","../../core/shaderTechnique/ReloadableShaderModule","../../core/shaderTechnique/ShaderTechnique","../../lib/DefaultVertexBufferLayouts","../../../../../chunks/Laserlines.glsl","../../../../webgl/NoParameters"],function(e,t,s,r,i,a,l,o,n,h){"use strict";class c extends h.NoParameters{constructor(){super(...arguments),this.innerColor=r.fromValues(1,1,1),this.innerWidth=1,this.glowColor=r.fromValues(1,.5,0),this.glowWidth=8,this.glowFalloff=8,this.globalAlpha=.75,this.globalAlphaContrastBoost=2,this.angleCutoff=s.deg2rad(6),this.pointDistanceOrigin=r.create(),this.pointDistanceTarget=r.create(),this.lineVerticalPlaneSegment=i.create(),this.intersectsLineSegment=i.create(),this.intersectsLineRadius=3,this.heightManifoldTarget=r.create(),this.lineStartWorld=r.create(),this.lineEndWorld=r.create()}}class d extends l.ShaderTechnique{constructor(t,s){super(t,s,new a.ReloadableShaderModule(n.Laserlines,()=>new Promise((t,s)=>e(["../../shaders/Laserlines.glsl"],t,s))),o.Pos2Locations)}}t.LaserlinePassParameters=c,t.LaserlineTechnique=d,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});