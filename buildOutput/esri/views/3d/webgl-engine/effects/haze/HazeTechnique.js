// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../environment/ChapmanApproximation.glsl","../../core/shaderTechnique/ReloadableShaderModule","../../core/shaderTechnique/ShaderTechnique","../../../../../chunks/Haze.glsl","../../lib/DefaultVertexBufferLayouts","../../../../webgl/renderState","../../../../webgl/VertexAttributeLocations"],function(e,r,t,a,n,i,o,l,s){"use strict";class u extends t.ChapmanApproximationParameters{constructor(){super(...arguments),this.hazeStrength=1}}class c extends n.ShaderTechnique{constructor(r,t){super(r,t,new a.ReloadableShaderModule(i.Haze,()=>new Promise((r,t)=>e(["./Haze.glsl"],r,t))),s.fromLayout(o.Pos2TexF16))}initializePipeline(e){return e.reduced?l.makePipelineState({blending:l.copySource,depthTest:{func:519},colorWrite:l.defaultColorWrite}):l.makePipelineState({blending:l.separateBlendingParams(1,0,769,1),colorWrite:l.defaultColorWrite})}}r.HazePassParameters=u,r.HazeTechnique=c,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});