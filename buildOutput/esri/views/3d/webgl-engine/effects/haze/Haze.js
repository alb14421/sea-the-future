// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/mathUtils","../../../../../core/maybe","../../../../../core/reactiveUtils","../../../../../core/Logger","../../../../../core/has","../../../../../core/RandomLCG","../../../../../core/Error","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/libs/gl-matrix-2/math/vec2","../../../../../chunks/vec32","../../../../../chunks/vec42","../../../../../geometry/support/Ellipsoid","../../../webgl","../TransparentEnvironment","../../../../../chunks/HazeCompositing.glsl","./HazeCompositingTechnique","./HazeTechnique","./HazeTechniqueConfiguration","../../lib/glUtil3D","../../lib/textureUtils","../../../../webgl/enums"],function(e,t,i,s,a,r,n,o,h,c,m,u,d,p,l,g,_,b,f,w,z,P,T){"use strict";e.Haze=class extends g.TransparentEnvironment{constructor(e){super(e),this._compositingPassParameters=new _.HazeCompositingPassParameters,this._passParameters=new f.HazePassParameters,this._hazeConfiguration=new w.HazeTechniqueConfiguration,this.requireGeometryDepth=!0,this._oldAmount=1,this._newAmount=1,this._amount=this._newAmount;const t=e.view.stage.renderView.techniques;t.precompile(f.HazeTechnique,new w.HazeTechniqueConfiguration);const i=new w.HazeTechniqueConfiguration;i.reduced=!0,t.precompile(f.HazeTechnique,i),t.precompile(b.HazeCompositingTechnique)}initialize(){this.addHandles([a.watch(()=>this.view.environment.atmosphereEnabled,e=>e?this._enable():this._disable(),a.syncAndInitial),a.watch(()=>this.view.stage?.renderer.renderContext.bind.clouds.fadeFactor??1,e=>this._fade(e),a.syncAndInitial),a.watch(()=>this.view.environment.weather.type,e=>this._newAmount="rainy"===e?0:1,a.syncAndInitial),a.watch(()=>this.view.stage.renderer?.fullResolutionAtmosphere,e=>this._hazeConfiguration.reduced=!e,a.syncAndInitial)])}_fade(e){e>=1?(this._amount=this._newAmount,this._oldAmount=this._newAmount):this._amount=e<=0?this._oldAmount:i.lerp(this._oldAmount,this._newAmount,e)}destroy(){this._vao=s.disposeMaybe(this._vao)}render(e){const t=e.find(({name:e})=>e===l.InternalRenderCategory.TRANSPARENT_ENVIRONMENT);if(!this.bindParameters.mainDepth)return t;const s=this.renderingContext,a=this.techniques.get(f.HazeTechnique,this._hazeConfiguration);if(!a.compiled)return t;const r=t.getAttachment(T.DepthStencilAttachment);if(this._update(),!this._hazeConfiguration.reduced)return t.detachDepth(),s.bindFramebuffer(t.fbo),s.bindTechnique(a,this.bindParameters,this._passParameters),this._renderCommon(s),t.attachDepth(r),t;const n=this.techniques.get(b.HazeCompositingTechnique);if(!n.compiled)return t;const o=s.getViewport(),h=this.camera,c=u.length(h.eye)-p.earth.radius;let m;const d=p.earth.atmosphereHeight;if(c<d){const e=Math.min(1,Math.max(0,c/d));m=i.lerp(.4,.5,e)}else{const e=Math.min(1,Math.max(0,(c-d)/(15*d)));m=i.lerp(.5,1,e)}const g=this.renderingContext.parameters.maxTextureSize,_=P.applyTextureResizeModulo(Math.round(m*h.fullViewport[2]),g),w=P.applyTextureResizeModulo(Math.round(m*h.fullViewport[3]),g);s.setViewport(0,0,_,w);const z=this.fboCache.acquire(_,w,"haze",5);return s.bindFramebuffer(z.fbo),s.clearFramebuffer([0,0,0,1],!0,!0),s.bindTechnique(a,this.bindParameters,this._passParameters),this._renderCommon(s),s.setViewport(o.x,o.y,o.width,o.height),this._compositingPassParameters.color=z.getTexture(),t.detachDepth(),s.bindFramebuffer(t.fbo),s.bindTechnique(n,this.bindParameters,this._compositingPassParameters),s.screen.draw(),t.attachDepth(r),z.release(),t}_renderCommon(e){this._vao??=z.createQuadVAO(e,1),e.bindVAO(this._vao),e.drawArrays(T.PrimitiveType.TRIANGLE_STRIP,0,4)}_update(){const e=this.bindParameters.camera,t=u.squaredLength(e.eye),s=Math.sqrt(t),a=t-this._passParameters.radii[1]*this._passParameters.radii[1],r=i.clamp((s-this._passParameters.radii[0])/p.earth.atmosphereHeight,0,1);d.set(this._passParameters.heightParameters,s,t,a,r);const n=this.view.basemapTerrain?.getLowerBoundRadius()??0;m.set(this._passParameters.radii,n,n+p.earth.atmosphereHeight),this._passParameters.hazeStrength=i.lerp(i.lerp(.6,1,i.smoothstep(9500,10500,s-p.earth.radius)),1,this._amount)}},e.Haze=t.__decorate([c.subclass("esri.views.3d.webgl-engine.effects.haze.Haze")],e.Haze),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});