// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/Error","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","./support/LayerViewPerformanceInfo","../support/updatingProperties","../terrain/terrainUtils","../../support/layerViewUtils"],function(e,t,r,a,i,l,n,s,o,c,p,h,u){"use strict";e.TiledLayerView3D=e=>{const l=e;let n=class extends l{constructor(){super(...arguments),this.hasMixedImageFormats=!0}get imageFormatIsOpaque(){return!1}get fullExtent(){return this.layer.fullExtent}get isOpaque(){return this.fullOpacity>=1&&this.imageFormatIsOpaque}get visibleAtCurrentScale(){const{minScale:e,maxScale:t}=this.layer;if(!u.isScaleRangeActive(e,t))return!0;const{basemapTerrain:r}=this.view,a=r.getLayerIndexByUID(1,this.uid);if(null==a)return!1;const{tilingScheme:i}=r,l=e&&i.levelAtScale(e),n=t&&i.levelAtScale(t);return r.renderer.visibleTiles.some(e=>!!e.layerInfo[1][a]&&(!l||e.level>=l)&&(!n||e.level<=n))}get dataScaleRange(){const e=this.tileInfo.lods;let t=e[0].scale,r=e[e.length-1].scale;if("tilemapCache"in this.layer&&this.layer.tilemapCache){const{effectiveMinLOD:e,effectiveMaxLOD:a}=this.layer.tilemapCache;t=this.tileInfo.lodAt(e).scale,r=this.tileInfo.lodAt(a).scale}return{minScale:t,maxScale:r}}canResume(){const e=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;return this.visible&&this.layer?.loaded&&!this.parent?.suspended&&this.view?.ready&&u.validateScaleRange(e)&&this.visibleAtCurrentTimeExtent||!1}get dataLevelRange(){const{minScale:e,maxScale:t}=this.dataScaleRange;return this.levelRangeFromScaleRange(e,t)}get displayLevelRange(){const e=this.layer.minScale||this.dataScaleRange.minScale,t=this.layer.maxScale||this.dataScaleRange.maxScale,r=this.levelRangeFromScaleRange(e,t);return this.layer.maxScale&&r.maxLevel++,r}get performanceInfo(){return new c.LayerViewPerformanceInfo(this.view.basemapTerrain.getUsedMemoryForLayerView(this))}getTileUrl(e){return this.layer.getTileUrl(e[0],e[1],e[2])}_addTilingSchemeMatchPromise(){if(null==this.fullExtent)return this.addResolvingPromise(Promise.reject(new r("tilingscheme:extent-not-defined","This layer doesn't define a fullExtent.")));const e=this._getTileInfoSupportError(this.tileInfo,this.fullExtent);if(e)return this.addResolvingPromise(Promise.reject(e));this.addResolvingPromise(a.whenOnce(()=>this.view?.basemapTerrain?.tilingSchemeLocked).then(()=>{const e=this.view.basemapTerrain.tilingScheme,t="tilemapCache"in this.layer?this.layer.tilemapCache?.effectiveMaxLOD:void 0,r=this._getTileInfoCompatibilityError(this.tileInfo,e,t);if(r)throw r}))}_getTileInfoSupportError(e,t){const a=h.checkIfTileInfoSupportedForView(e,t,this.view.spatialReference,this.view.state.viewingMode,"tilemapCache"in this.layer?this.layer.tilemapCache?.effectiveMaxLOD:void 0);if(!a)return;const i={layer:this.layer,error:a};switch(a.name){case"tilingscheme:spatial-reference-mismatch":case"tilingscheme:global-unsupported-spatial-reference":case"tilingscheme:local-unsupported-spatial-reference":return new r("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",i);default:return new r("layerview:tiling-scheme-unsupported","The tiling scheme of this layer is not supported by SceneView",i)}}_getTileInfoCompatibilityError(e,t,a){return null!=e&&t.compatibleWith(e,a)?null:new r("layerview:tiling-scheme-incompatible","The tiling scheme of this layer is incompatible with the tiling scheme of the surface")}levelRangeFromScaleRange(e,t){const r={minLevel:0,maxLevel:1/0},a=this.view&&this.view.basemapTerrain&&this.view.basemapTerrain.tilingScheme;if(!a)return r;const i=a.levels[0],l=e=>{const t=Math.log(i.scale/e)/Math.LN2;return.5-Math.abs(.5-t%1)<1e-9?Math.round(t):Math.ceil(t)};return null!=e&&e>0&&(r.minLevel=Math.max(0,l(e))),null!=t&&t>0&&(r.maxLevel=Math.max(0,l(t))),r}isUpdating(){return!!(this.view&&this.view.basemapTerrain&&this.view.basemapTerrain.updating)}};return t.__decorate([i.property({readOnly:!0})],n.prototype,"imageFormatIsOpaque",null),t.__decorate([i.property({readOnly:!0})],n.prototype,"updating",void 0),t.__decorate([i.property(p.updatingProgress)],n.prototype,"updatingProgress",void 0),t.__decorate([i.property(p.updatingProgressValue)],n.prototype,"updatingProgressValue",void 0),t.__decorate([i.property()],n.prototype,"hasMixedImageFormats",void 0),t.__decorate([i.property()],n.prototype,"fullExtent",null),t.__decorate([i.property({readOnly:!0})],n.prototype,"isOpaque",null),t.__decorate([i.property({readOnly:!0})],n.prototype,"visibleAtCurrentScale",null),t.__decorate([i.property()],n.prototype,"dataScaleRange",null),t.__decorate([i.property({readOnly:!0})],n.prototype,"dataLevelRange",null),t.__decorate([i.property({readOnly:!0})],n.prototype,"displayLevelRange",null),t.__decorate([i.property()],n.prototype,"layer",void 0),n=t.__decorate([o.subclass("esri.views.3d.layers.TiledLayerView3D")],n),n},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});