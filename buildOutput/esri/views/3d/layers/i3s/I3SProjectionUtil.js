// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/ellipsoidUtils","../../../../geometry/projection/computeTranslationToOriginAndRotation"],function(t,o,e,n,a){"use strict";function i(t,o,a){const i=e.create(),r=t[3],c=2**(4*Math.ceil(Math.log(r)*Math.LOG2E/4)+1);if(a.isGeographic){const o=c/n.getReferenceEllipsoid(a).radius*180/Math.PI,e=Math.round(t[1]/o),r=Math.max(-90,Math.min(90,e*o)),s=o/Math.cos((Math.abs(r)-o/2)/180*Math.PI),l=Math.round(t[0]/s)*s;i[0]=l,i[1]=r}else{const o=Math.round(t[0]/c),e=Math.round(t[1]/c);i[0]=o*c,i[1]=e*c}const s=t[2]+o,l=Math.round(s/c);return i[2]=l*c,i}t.computeGlobalTransformation=function(t,n,r,c,s){const l="east-north-up"===r?e.clone(t):i(t,n,c),u=o.create();return a.computeTranslationToOriginAndRotation(c,l,u,s),u},t.getLocalOrigin=i,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});