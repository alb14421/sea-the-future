// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","../../../chunks/tslib.es6","../../../core/has","../../../core/Logger","../../../core/maybe","../../../core/memoryEstimations","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/uid","../../../core/accessorSupport/decorators/property","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../geometry/projection/projectBuffer","../../../geometry/projection/projectVectorToVector","../../../geometry/support/contains","../../../geometry/support/DoubleArray","../../../geometry/support/zscale","../../../graphic/SceneGraphicOrigin","../../../layers/LayerConstants","../../../layers/graphics/dehydratedFeatures","../../../layers/graphics/dehydratedPoint","../../../layers/graphics/hydratedFeatures","../../../layers/graphics/controllers/I3SOnDemandController","../../../layers/support/FeatureFilter","../../../rest/support/Query","../../../support/basemapUtils","../../../support/guards","./I3SPointsWorkerHandle","./LayerView3D","./graphics/Graphics3DFeatureProcessor","./graphics/QueryEngine","./graphics/QueryEngineContext","./i3s/featureEditing","./i3s/I3SBinaryReader","./i3s/I3SGraphicsMap","./i3s/I3SOverrides","./i3s/I3SUtil","./support/attributeUtils","./support/DefinitionExpressionSceneLayerView","./support/fieldProperties","./support/highlightUtils","./support/LayerViewPerformanceInfo","./support/PopupSceneLayerView","./support/SceneLayerViewRequiredFields","./support/TemporalSceneLayerView","../support/debugFlags","../support/orientedBoundingBox","../support/updatingProperties","../webgl-engine/lib/Attribute","../../layers/SceneLayerView","../../layers/support/popupUtils","../../support/highlightOptionsUtils","../../support/layerViewUtils","../../support/Scheduler"],function(e,t,r,i,s,o,a,n,l,d,u,h,c,p,g,y,_,b,m,f,v,I,w,E,x,O,S,C,D,N,F,G,V,A,P,L,R,H,M,j,U,Q,T,q,B,k,z,W,Z,K,$,Y,J,X,ee,te){"use strict";const re=Q.defineFieldProperties();class ie{constructor(e,t,r,i){this.graphics=e,this.featureIds=t,this.attributeInfo=r,this.node=i}get cachedMemory(){return this.graphics.reduce((e,t)=>I.estimateSize(t)+e,o.estimateNumberArrayMemory(this.featureIds)+1024)}}let se=class extends(z.TemporalSceneLayerView(U.DefinitionExpressionSceneLayerView(B.PopupSceneLayerView(F.LayerView3D(Y))))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this._pendingEditsQueue=Promise.resolve(),this.loadedGraphics=new R.I3SGraphicsMap((e,t,r)=>function(e,t,r){const i=t.attributeInfo;if(null==i?.loadedAttributes||null==i.attributeData)return!1;let s=!1;for(const{name:t}of i.loadedAttributes)if(i.attributeData[t]){const o=L.getCachedAttributeValue(i.attributeData[t],r);o!==e.attributes[t]&&(e.attributes[t]=o,s=!0)}return s}(e,t,r),e=>this.processor.graphicsCore.recreateGraphics(e)),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(e,t){return e.url===this.layer.url&&this._i3sOverrides.isEmpty?e.load(t).then(()=>{a.throwIfAborted(t),M.checkRecyclable(this.layer,e,this._i3sOverrides),this.layer=e,this._i3sOverrides.destroy();const r=this.view.resourceController?.memoryController;this._i3sOverrides=new H.I3SOverrides({view:this.view,layer:e,memoryController:r}),s.destroyMaybe(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()}):null}initialize(){this.addResolvingPromise(this.layer.indexInfo);const t=this.view.resourceController?.memoryController;this._i3sOverrides=new H.I3SOverrides({view:this.view,layer:this.layer,memoryController:t}),M.checkSpatialReferences(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new k.SceneLayerViewRequiredFields({layerView:this}),this._updatingHandles.add(()=>this.layer.rangeInfos,e=>this._rangeInfosChanged(e),n.initial),this._updatingHandles.add(()=>this.layer.renderer,(e,t)=>this._rendererChange(e,t)),this._updatingHandles.add(()=>[this.parsedDefinitionExpression,this.layer.excludeObjectIds],()=>this._filterChange()),this._set("processor",new G.Graphics3DFeatureProcessor({owner:this,preferredUpdatePolicy:0,scaleVisibilityEnabled:!ee.hasLayerBasedScaleVisibility(),filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),this.processor.elevationAlignment?.events.on("invalidate-elevation",({extent:e,spatialReference:t})=>this._controller.updateElevationChanged(e,t)),this.supportsHeightUnitConversion&&(this._verticalScale=m.getGeometryZScaler("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.when()),this._memCache=this.view.resourceController.memoryController.newCache(`psl-${this.uid}`),this._controller=new x({layerView:this}),M.containsDraco(this.layer.geometryDefinitions)&&(this._workerHandle=new N.I3SPointsWorkerHandle(e=>this.view.resourceController.immediate.schedule(e))),this.addHandles(this.layer.on("apply-edits",e=>this._updatingHandles.addPromise(e.result))),this.addHandles([this.layer.on("edits",e=>{const t=this._pendingEditsQueue.then(()=>this._handleEdits(e)).then();this._pendingEditsQueue=t,this._updatingHandles.addPromise(t)}),n.watch(()=>W.debugFlags.I3S_TREE_SHOW_TILES,t=>{if(t&&!this._treeDebugger){const t=this._controller.crsIndex;new Promise((t,r)=>e(["./support/I3STreeDebugger"],t,r)).then(({I3STreeDebugger:e})=>{!this._treeDebugger&&W.debugFlags.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new e({lv:this,view:this.view,nodeSR:t}))})}else t||!this._treeDebugger||W.debugFlags.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)},n.initial)]),this.when(()=>{this._setupQueryEngine(),this._updatingHandles.add(()=>this.maximumNumberOfFeatures,e=>this._controller.featureTarget=e,n.initial),this._updatingHandles.add(()=>this.suspended,e=>{e&&this._removeAllNodeData()})})}destroy(){this._treeDebugger=s.destroyMaybe(this._treeDebugger),this._i3sOverrides=s.destroyMaybe(this._i3sOverrides),this._set("processor",s.destroyMaybe(this.processor)),this._controller=s.destroyMaybe(this._controller),this._queryEngine=s.destroyMaybe(this._queryEngine),this._workerHandle=s.destroyMaybe(this._workerHandle),this._memCache=s.destroyMaybe(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=s.destroyMaybe(this._fieldsHelper)}get i3slayer(){return this.layer}get layerViewUid(){return this.uid}get updatingProgressValue(){return this._controller?.updatingProgress??1}get visibleAtCurrentScale(){return ee.hasLayerBasedScaleVisibility()?ee.isInEffectiveScaleRange(this.layer.effectiveScaleRange,this.view.scale):!this.processor?.scaleVisibilitySuspended}get requiredFields(){return this._fieldsHelper?.requiredFields??[]}get maximumNumberOfFeatures(){const e=this.processor?.graphicsCore?.displayFeatureLimit;return e?.maximumNumberOfFeatures??0}set maximumNumberOfFeatures(e){null!=e?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){return!this.suspended&&!!this._controller?.useMaximumNumberOfFeatures&&!this._controller.leavesReached}get _excludeObjectIds(){return new Set(this.layer.excludeObjectIds)}get lodFactor(){return"Labels"===this.layer.semantic?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}get contentVisible(){return!this.suspended&&!!this._controller?.rootNodeVisible}get legendEnabled(){return this.contentVisible&&!0===this.i3slayer?.legendEnabled}get _graphicOrigin(){return new f(this.layer)}async whenGraphicAttributes(e,t){return M.whenGraphicAttributes(this.layer,e,this._getObjectIdField(),t,()=>[...this.loadedGraphics.nodes()])}getHit(e){if(!this.loadedGraphics)return null;const t=E.hydrateGraphic(this.loadedGraphics.find(t=>t.uid===e),this.layer),r=this._getObjectIdField();return t?.attributes?.[r]?(t.layer=this.layer,t.sourceLayer=this.layer,t.origin=this._graphicOrigin,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}isUpdating(){return!!(this._controller?.updating||this.processor?.updating||this._fieldsHelper?.updating||this.layerFilterUpdating)}highlight(e,t){const r=X.getHighlightName(t),i=this.layer.objectIdField,s=T.normalizeHighlightTarget(e);if(0===s.length)return T.emptyHighlightHandle;if(D.isGraphic(s[0])){const e=s;if(null!=j.attributeLookup(this.layer.fieldsIndex,e[0].attributes,i)){const t=e.map(e=>j.attributeLookup(this.layer.fieldsIndex,e.attributes,i));return this.processor.highlightByObjectIds(t,i,r)}return this.processor.highlightByGraphics(e,r)}return T.isObjectId(s[0])?this.processor.highlightByObjectIds(s,i,r):T.emptyHighlightHandle}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return P.createInteractiveEditSession(this._attributeEditingContext,e)}async _decompressBinaryPointData(e,t){const r={geometryBuffer:e.geometryBuffer};null==this._workerHandle&&(this._workerHandle=new N.I3SPointsWorkerHandle(e=>this.view.resourceController.immediate.schedule(e)));const i=await this._workerHandle.invoke(r,t);if(null==i)throw new Error("Failed to decompress Draco point data");return{positionData:i.positions,featureIds:i.featureIds}}async addNode(e,t,r){if(!ae(t)&&!function(e){return"pointData"in e}(t))throw new Error;if(this.loadedGraphics.hasNode(e.index))return void i.getLogger(this).error("I3S node "+e.id+" already added");const s=null!=this.layer.fullExtent?(d=.5,(l=this.layer.fullExtent.clone()).xmin-=d,l.ymin-=d,l.xmax+=d,l.ymax+=d,null!=l.zmin&&null!=l.zmax&&(l.zmin-=d,l.zmax+=d),null!=l.mmin&&null!=l.mmax&&(l.mmin-=d,l.mmax+=d),l):null,{featureIds:o,pointPositions:a}=ae(t)?await this._extractBinaryPointPositions(e,t,r):this._extractLegacyPointPositions(t),n=new Array;var l,d;this._validatePositions(e,o,a,s,n);const u=this._controller.crsVertex,h=this.view.spatialReference;g.projectBuffer(a,u,0,a,h,0,o.length);const c=ae(t)?e.level:0,p=this._createGraphics(o,a,e.index,c),y=new ie(p,o,t.attributeDataInfo,e);if(await this._i3sOverrides.applyAttributeOverrides(y.featureIds,t.attributeDataInfo,r),e.numFeatures=y.graphics.length,this._updateNodeMemory(e),ne(y),n.length>0&&(this._computeObb(e,n,u),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return void this._cacheNodeData(y);if(null!=this._verticalScale)for(const e of y.graphics)this._verticalScale(e.geometry);const _=this.view.stage.renderView.olidRenderHelper;if(_){const e=C.isBasemapLayerView(this.view,this.uid);for(let t=0;t<y.featureIds.length;t++){const r=y.featureIds[t];_.setUidToObjectAndLayerId(r,y.graphics[t].uid,this.layer.id,this.uid,this.layer.popupEnabled&&!e&&J.hasPopupTemplate(this.layer,this.view.popup?.defaultPopupTemplateEnabled),y.node.resources.attributes,t)}}this.loadedGraphics.addNode(e.index,y),this._controller.updateLoadStatus(e.index,!0),this._filterNode(y),this._treeDebugger&&this._treeDebugger.update()}_computeObb(e,t,r){const i=this._controller.crsIndex,s=i.isGeographic?this.view.renderSpatialReference:i;g.projectBuffer(t,r,0,t,s,0),e.serviceObbInIndexSR=Z.compute(new $.Vertices(t,3)),i.isGeographic&&(y.projectVectorToVector(e.serviceObbInIndexSR.center,s,de,i),e.serviceObbInIndexSR.center=de)}isNodeLoaded(e){return this.loadedGraphics.hasNode(e)}isNodeReloading(){return!1}updateNodeState(){}getNodeComponentHandle(){}async _extractBinaryPointPositions(e,t,r){const i=await this._decompressBinaryPointData(t,r),s=i.positionData,o=s.length/3,a=b.newDoubleArray(3*o),n=null!=e.serviceObbInIndexSR?e.serviceObbInIndexSR.center:p.ZEROS,l=Math.abs(n[2])*2**-20;for(let e=0;e<o;e++){const t=3*e;a[t]=s[t]+n[0],a[t+1]=s[t+1]+n[1],a[t+2]=s[t+2]+n[2],Math.abs(a[t+2])<l&&(a[t+2]=0)}return{featureIds:i.featureIds?b.doubleArrayFrom(i.featureIds):[],pointPositions:a}}_extractLegacyPointPositions(e){const t=e.pointData.length,r=b.newDoubleArray(3*t),i=new Array;for(let s=0;s<t;s++){const t=e.pointData[s],o=t.featureDataPosition,a=o.length,n=t.geometries?.[0]??le[a],l=t.featureIds[0];if("Embedded"!==n.type||"points"!==n.params.type||a<2||a>3)continue;const d=n.params.vertexAttributes?.position??[0,0,0],u=3*i.length;r[u]=o[0]+d[0],r[u+1]=o[1]+d[1],r[u+2]=3===a?o[2]+d[2]:NaN,i.push(l)}return{featureIds:i,pointPositions:r}}_validatePositions(e,t,r,s,o){if(null==s&&e.serviceObbInIndexSR)return;const a=t.length;for(let t=0;t<a;t++){const a=3*t;c.set(de,r[a],r[a+1],r[a+2]);const n=!Number.isNaN(r[2]);null==s||(n?_.extentContainsCoords3D(s,de):_.extentContainsCoords2D(s,de))||(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&i.getLogger(this).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&i.getLogger(this).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),e.serviceObbInIndexSR||o.push(de[0],de[1],de[2])}}_createGraphics(e,t,r,i){const s=e.length,o=this._getObjectIdField(),a=this.processor.graphicsCore,n=new Array,d=this.view.spatialReference;for(let u=0;u<s;u++){const s=e[u],h={};null!=s&&(h[o]=s);const c=s??l.generateUID(),p=3*u,g=isNaN(t[p+2])?void 0:t[p+2],y=new w.ImmutableDehydratedPoint(d,t[p],t[p+1],g),_=this.loadedGraphics.get(c);if(null!=_)(null==_.level||_.level<i)&&(ue.property="geometry",ue.graphic=_,ue.oldValue=_.geometry,ue.newValue=y,_.geometry=y,_.level=i,a.graphicUpdateHandler(ue),he()),n.push(_);else{const e=l.generateUID();n.push({objectId:c,uid:e,geometry:y,attributes:h,visible:!0,nodeIndex:r,level:i})}}return n}_updateNodeMemory(e){e.memory=4096+(e.numFeatures??0)*this.processor.graphicsCore.usedMemoryPerGraphic}_cacheNodeData(e){this._memCache.put(this._getMemCacheKey(e.node),e)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this.loadedGraphics.forEachNode((e,t)=>{if(e){const t=e.node;this._updateNodeMemory(t),this._cacheNodeData(e)}this._controller.updateLoadStatus(t,!1)}),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this.loadedGraphics.getNode(e);return null==t?null:(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeNode(e),this._treeDebugger&&this._treeDebugger.update(),t)}async loadCachedNodeData(e){return this._memCache?.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,r,s){this.loadedGraphics.hasNode(e.index)?i.getLogger(this).error("I3S node "+e.id+" already added"):(await this._i3sOverrides.applyAttributeOverrides(t.featureIds,r,s),t.attributeInfo=r,this.loadedGraphics.addNode(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),ne(t),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const e=[];return this.loadedGraphics.forEachNode(t=>e.push(t.node.id)),e.sort()}getVisibleNodes(){const e=new Array;return this.loadedGraphics.forEachNode(t=>e.push(t.node)),e}getLoadedNodeIndices(e){this.loadedGraphics.forEachNode((t,r)=>e.push(r))}getLoadedAttributes(e){const t=this.loadedGraphics.getNode(e);if(null!=t?.attributeInfo)return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this.loadedGraphics.getNode(e);if(null!=t?.attributeInfo)return t.attributeInfo.attributeData}_setAttributeData(e,t){const r=this.loadedGraphics.getNode(e);null!=r?.attributeInfo&&(r.attributeInfo.attributeData=t,this._attributeValuesChanged(r))}async updateAttributes(e,t,r){const i=this.loadedGraphics.getNode(e);null!=i&&(await this._i3sOverrides.applyAttributeOverrides(i.featureIds,t,r),i.attributeInfo=t,this._attributeValuesChanged(i))}_attributeValuesChanged(e){ne(e),this._filterNode(e);const{processor:t}=this,{graphicsCore:r}=t;if(r.labelsEnabled){const t=e.node.index,i=new Array;e.graphics.forEach(e=>e.nodeIndex===t&&i.push(e.uid)),r.updateLabelingInfo(i)}t.refreshFilter()}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||v.fallbackObjectIDAttribute}_getGlobalIdField(){return this.layer.globalIdField}async _rendererChange(e,t){const{layer:{fieldsIndex:r}}=this,i=new Set;let s,o;e?(await e.collectRequiredFields(i,r),s=Array.from(i).sort()):s=[],i.clear(),t?(await t.collectRequiredFields(i,r),o=Array.from(i).sort()):o=[],s.length===o.length&&s.every((e,t)=>s[t]===o[t])||this._reloadAllNodes()}_rangeInfosChanged(e){null!=e&&e.length>0&&i.getLogger(this).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode(e=>this._filterNode(e))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression,r=this._excludeObjectIds,i=this._getObjectIdField();for(const s of e.graphics){const e=s.visible,o=this._evaluateClause(t,s),a=!r.has(s.attributes[i]);s.visible=o&&a,e!==s.visible&&(ue.graphic=s,ue.property="visible",ue.oldValue=e,ue.newValue=s.visible,this.processor.graphicsCore.graphicUpdateHandler(ue),he())}}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return this.filter?.createQuery(e)??new S(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t?.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t?.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t?.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t?.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(null==e?this.createQuery():S.from(e))}_setupQueryEngine(){const{layer:e,view:t,hasM:r,hasZ:i}=this,{spatialReference:s,resourceController:o}=t,a=new A.QueryEngineContext(s,e,o,()=>this.processor.featureStore,i,r);this._queryEngine=new V.QueryEngine({context:a,priority:te.TaskPriority.FEATURE_QUERY_ENGINE})}get usedMemory(){return this.processor?.graphicsCore?.usedMemory??0}get unloadedMemory(){return.8*((this._controller?.unloadedMemoryEstimate??0)+(this.processor?.graphicsCore?.unprocessedMemoryEstimate??0))}get ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}async _handleEdits(e){const t=this._attributeEditingContext,r=await P.normalizeEditResultsEvent(t,e);P.processAttributeEdits(t,r)}get _attributeEditingContext(){const e=this._getObjectIdField(),t=this._getGlobalIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,globalIdField:t,forEachNode:e=>this.loadedGraphics.forEachNode(t=>e(t.node,t.featureIds)),attributeStorageInfo:this.i3slayer.attributeStorageInfo??[],i3sOverrides:this._i3sOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(t,r,i)=>{this._setAttributeData(t,r);const s=this.loadedGraphics.getNode(t);if(null!=i){const t=this.loadedGraphics.get(i.attributes[e]);null!=t&&this.processor.graphicsCore.recreateGraphics([t])}else null!=s&&this.processor.graphicsCore.recreateGraphics(s.graphics)},clearMemCache:()=>{}}}get performanceInfo(){return new q.LayerViewPerformanceInfo(this.usedMemory,this.loadedGraphics.length,-1,this.maximumNumberOfFeatures,this.loadedGraphics.nodeCount,this.processor.graphicsCore.performanceInfo)}get test(){}};t.__decorate([d.property()],se.prototype,"processor",void 0),t.__decorate([d.property({type:O})],se.prototype,"filter",void 0),t.__decorate([d.property()],se.prototype,"loadedGraphics",void 0),t.__decorate([d.property()],se.prototype,"i3slayer",null),t.__decorate([d.property()],se.prototype,"layerViewUid",null),t.__decorate([d.property()],se.prototype,"_controller",void 0),t.__decorate([d.property()],se.prototype,"updating",void 0),t.__decorate([d.property()],se.prototype,"suspended",void 0),t.__decorate([d.property(K.updatingProgress)],se.prototype,"updatingProgress",void 0),t.__decorate([d.property()],se.prototype,"updatingProgressValue",null),t.__decorate([d.property({readOnly:!0})],se.prototype,"visibleAtCurrentScale",null),t.__decorate([d.property(re.requiredFields)],se.prototype,"requiredFields",null),t.__decorate([d.property(re.availableFields)],se.prototype,"availableFields",void 0),t.__decorate([d.property()],se.prototype,"_fieldsHelper",void 0),t.__decorate([d.property({type:Number})],se.prototype,"maximumNumberOfFeatures",null),t.__decorate([d.property({readOnly:!0})],se.prototype,"maximumNumberOfFeaturesExceeded",null),t.__decorate([d.property()],se.prototype,"_excludeObjectIds",null),t.__decorate([d.property({readOnly:!0})],se.prototype,"lodFactor",null),t.__decorate([d.property({readOnly:!0})],se.prototype,"hasM",null),t.__decorate([d.property({readOnly:!0})],se.prototype,"hasZ",null),t.__decorate([d.property()],se.prototype,"contentVisible",null),t.__decorate([d.property({readOnly:!0})],se.prototype,"legendEnabled",null),t.__decorate([d.property()],se.prototype,"_graphicOrigin",null),se=t.__decorate([h.subclass("esri.views.3d.layers.SceneLayerGraphicsView3D")],se);const oe=se;function ae(e){return"geometryBuffer"in e&&null!==e.geometryBuffer}function ne(e){const t=e.attributeInfo;if(null==t?.loadedAttributes||null==t.attributeData)return;const r=e.node.index;for(let i=0;i<e.graphics.length;i++){const s=e.graphics[i];if(s.nodeIndex===r){s.attributes||(s.attributes={});for(const{name:e}of t.loadedAttributes)t.attributeData[e]&&(s.attributes[e]=L.getCachedAttributeValue(t.attributeData[e],i))}}}const le={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},de=p.create(),ue={graphic:null,property:null,oldValue:null,newValue:null};function he(){ue.graphic=null,ue.property=null,ue.oldValue=null,ue.newValue=null}return oe});