// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/has","../../../core/Logger","../../../core/maybe","../../../core/reactiveUtils","../../../core/scheduling","../../../core/accessorSupport/decorators/property","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/math/mat3","../../../core/libs/gl-matrix-2/factories/mat3f64","../../../core/libs/gl-matrix-2/math/mat4","../../../core/libs/gl-matrix-2/factories/mat4f64","../../../core/libs/gl-matrix-2/factories/quatf64","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../core/libs/gl-matrix-2/factories/vec4f64","../../../geometry/ellipsoidUtils","../../../geometry/projection/computeTranslationToOriginAndRotation","../../../geometry/projection/localLinearScaleFactors","../../../geometry/projection/projectVectorToVector","../../../geometry/support/aaBoundingRect","../../../geometry/support/buffer/BufferView","../../../layers/support/SceneModification","../../../support/elevationInfoUtils","./I3SMeshWorkerHandle","./IntegratedMesh3DTilesViewPerformanceInfo","./LayerView3D","./Lyr3DWasm","./i3s/LayerElevationProvider","./support/lyr3dTypeConversions","./support/Tiles3DIntersectionHandler","../support/ElevationRange","../support/extentUtils","../support/orientedBoundingBox","../webgl-engine/collections/Component/ObjectParameters","../webgl-engine/collections/Component/SourceGeometry","../webgl-engine/collections/Component/Transform","../webgl-engine/core/material/RenderTexture","../webgl-engine/core/shaderLibrary/util/EllipsoidMode","../webgl-engine/lib/Attribute","../webgl-engine/lib/Normals","../webgl-engine/lib/Texture","../webgl-engine/materials/internal/bufferWriterUtils","../../layers/LayerView","../../support/layerViewUtils","../../support/TextureCompressionTracker","../../../webscene/support/AlphaCutoff"],function(e,t,i,r,s,a,o,n,l,c,d,u,h,m,p,f,g,y,b,_,w,v,x,C,T,M,V,O,U,P,H,E,R,A,B,S,F,j,I,k,L,D,G,N,W,z,$,J){"use strict";class Y{constructor(){this.handle=0,this.isVisible=!1,this.components=[],this.textureMemoryUsage=0,this.vboMemoryUsage=0,this.cpuMemoryUsage=0,this.textures=[]}get usedMemory(){return this.textureMemoryUsage+this.vboMemoryUsage+this.cpuMemoryUsage}get cachedMemory(){return this.usedMemory}}function q(e){return Math.round(e/1048.576)/1e3}let K=class extends(O.LayerView3D(W)){constructor(){super(...arguments),this.type="integrated-mesh-3dtiles",this._compressionTracker=new $.TextureCompressionTracker,this._modifications=new Array,this._visibleGeometryChangedSchedulerHandle=null,this._wasmLayerId=-1,this.ignoresMemoryFactor=!1,this.drapeTargetType=1,this._applySSAO=!t("disable-feature:im-ssao"),this._shadeNormals=!!t("enable-feature:im-shading"),this._lyrHandleToObjects=new Map,this._initialCullFace=new Map,this._suspendedHandle=null,this._dbgFlags=new Set}get hasModifications(){return this._modifications&&this._modifications.length>0}initialize(){if(this._dbgFlags.add(3),this._dbg(2,"Tiles3DLayerView3D initialize() called"),this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),s.initial),!this._canProjectWithoutEngine())throw z.spatialReferenceIncompatibleError("layer",this.layer.spatialReference.wkid,this.view.renderSpatialReference?.wkid);const e=U.addLayerViewToWasm(this).then(e=>{this._wasmLayerId=e,this._intersectionHandler=new E.Tiles3DIntersectionHandler(this),this.view.sceneIntersectionHelper.addIntersectionHandler(this._intersectionHandler),this._updatingHandles.add(()=>this.slicePlaneEnabled,e=>this._slicePlaneEnabledChange(e)),this._updatingHandles.add(()=>this._modifications,()=>this._modificationsChanged(),s.initial),this._updatingHandles.add(()=>this.fullOpacity,e=>this._opacityChange(e)),this._updatingHandles.add(()=>this.view.clippingArea,()=>this._clippingAreaChanged(),s.initial),this._elevationProvider=new P.LayerElevationProvider({view:this.view,layerElevationSource:this,intersectionHandler:this._intersectionHandler}),this.view.elevationProvider.register("im",this._elevationProvider),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this);const t=this.view.resourceController.memoryController.newCache(`t3d-${this.uid}`,e=>this._onRemoveFromCache(e));this._memCache=t,this.addHandles([s.watch(()=>this.layer.elevationInfo,e=>this._elevationInfoChanged(e))]),this._suspendedHandle=s.watch(()=>this.suspended,e=>this._wasm?.setEnabled(this,!e),s.initial)});this.addResolvingPromise(e)}_opacityChange(e){this.objects.forEach(t=>{this._collection.getMaterial(t).objectOpacity=e})}destroy(){this._dbg(2,"Tiles3DLayerView3D destroy() called"),U.removeLayerViewFromWasm(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null),this._intersectionHandler&&(this.view.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler),this._intersectionHandler=null),this._elevationProvider&&(this._elevationProvider.objectsChanged(this._obbs),this.view.elevationProvider.unregister(this._elevationProvider),this._elevationProvider=null),this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this),this._lyrHandleToObjects.forEach(e=>this.freeObject(e)),this._lyrHandleToObjects.clear(),this._initialCullFace.clear(),this._memCache=r.destroyMaybe(this._memCache),this._updatingHandles=r.destroyMaybe(this._updatingHandles),this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle.remove(),this._visibleGeometryChangedSchedulerHandle=null)}_modificationsChanged(){const e=this.layer.spatialReference,t=M.toWasmModification(this._layerClippingArea,this._modifications,e);this._wasm?.setMeshModifications(this,t,e.wkid)}_clippingAreaChanged(){const e=this.layer.spatialReference,t=v.create();this._layerClippingArea=A.toBoundingRect(this.view.clippingArea,t,e)?t:null,this._modificationsChanged()}_visibleGeometryChanged(){this._visibleGeometryChangedSchedulerHandle??=a.schedule(()=>{this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle=null})}_slicePlaneEnabledChange(e){this._intersectionHandler&&(this._intersectionHandler.slicePlaneEnabled=e),this.objects.forEach(t=>{const i=this._collection.getMaterial(t);i.commonMaterialParameters.hasSlicePlane=e,i.commonMaterialParameters.cullFace=e?0:this._initialCullFace.get(t)})}_elevationInfoChanged(e){this._wasm?.setLayerOffset(this,T.getElevationOffsetInMeters(e))}get _obbs(){return this.objects.map(e=>this._collection.getComponentObb(e))}get _wasm(){return U.getLyr3DWasm(this.view)}get wasmLayerId(){return this._wasmLayerId}get usedMemory(){let e=0;return this._lyrHandleToObjects.forEach(t=>{t.isVisible&&(e+=t.usedMemory)}),e}get unloadedMemory(){return 0}get cachedMemory(){let e=0;return this._lyrHandleToObjects.forEach(t=>{t.isVisible||(e+=t.usedMemory)}),e}get visibleAtCurrentScale(){return z.isInEffectiveScaleRange(this.layer.effectiveScaleRange,this.view.scale)}get performanceInfo(){let e=0,t=0,i=0,r=0,s=0,a=0;return this._lyrHandleToObjects.forEach(o=>{o.isVisible?(e+=o.textureMemoryUsage,t+=o.vboMemoryUsage,s++):(i+=o.textureMemoryUsage,r+=o.vboMemoryUsage,a++)}),new V.IntegratedMesh3DTilesViewPerformanceInfo(this.usedMemory,s,a,q(t),q(e),q(r),q(i))}_canProjectWithoutEngine(){if(2===this.view.state.viewingMode){const e=this.view.renderSpatialReference?.isWebMercator?3857:this.view.renderSpatialReference?.wkid??-1;if(3857!==e&&32662!==e)return!1}return!0}get _stage(){return this.view.stage}get _collection(){return this._stage.renderView.componentObjectCollection}get elevationOffset(){return T.getElevationOffsetInMeters(this.layer.elevationInfo)}get elevationRange(){const e=this.fullExtent;return e?.zmin&&e?.zmax?new R.ElevationRange(e.zmin,e.zmax):null}getElevationRange(e){return null}get fullExtent(){return this.layer.fullExtent}get objects(){return Array.from(this._lyrHandleToObjects.values()).reduce((e,t)=>e.concat(t.components),new Array)}isUpdating(){const e=this._wasm;return!(this._wasmLayerId<0||null==e)&&(e.isUpdating(this._wasmLayerId)||this._compressionTracker.compressing)}updatingFlagChanged(){this.notifyChange("updating")}async createRenderable(e){const t=e.meshData;if(null==t.data)throw new Error("meshData.data undefined");if(t.desc=JSON.parse(t.desc),null==t.desc)throw new Error("meshData.desc undefined");const i=f.fromArray(t.desc.origin),r=new Array,s=new Map,a=new Y;a.handle=e.handle,this._lyrHandleToObjects.set(e.handle,a);const o=this.view.basemapTerrain.spatialReference;let n,l;if("global"===this.view.viewingMode){const e=h.create();b.computeTranslationToOriginAndRotation(y.SphericalECEFSpatialReferenceLike,i,e,o),n=c.fromMat4(d.create(),e),l=c.invert(d.create(),n)}else n=d.IDENTITY,l=d.IDENTITY;const v=h.create();u.translate(v,v,i);const C=u.getTranslation(f.create(),v);let T=null;const M=f.create();if(t.desc.obb){const e=t.desc.obb.quaternion;T=new B.Obb(t.desc.obb.center,t.desc.obb.halfSize,m.fromValues(e[0],e[1],e[2],e[3]))}for(let e=0;e<t.desc.prims.length;e++){const c=t.desc.prims[e];if(this._dbg(2,JSON.stringify(c)),null==H.primTypeConversion[c.ptype]||null==t.data){this._dbg(2,"[Unsupported Feature] Unsupported primitive mode ("+c.ptype+"). Skipping primitive.");continue}const u=t.desc?.materials&&null!=c.materialId?t.desc.materials[c.materialId]:null,h=null!=u?u.lightingModel:"Unlit",{positionView:m,positionAttr:y,normalsView:b,normalsAttr:v,colorAttr:V,texCoord0Attr:O,indicesView:U}=this.getBufferViews(c,t.data.buffer,n);if(null==y||null==m||null==U)continue;const P=new F.GeometryParameters(null!=V,O?1:0,null!=b,this._shadeNormals,this._applySSAO),E=y.data.length/y.size,R=(e,t)=>!e||e.data.length/e.size===E||(this._dbg(3,`${t} !== numPos. Skipping primitive.`),!1);if(!R(O,"numTexcoord")||!R(V,"numColors")||!R(v,"normals"))continue;const A=F.createVertexBufferLayout(P);if(null!=T?T=T.clone():(T=B.compute(y),p.add(M,T.center,i),T.center=M),n!==d.IDENTITY)for(let e=0;e<m.count;e++)m.getVec(e,M),p.transformMat3(M,M,n),m.setVec(e,M);const I=A.createBuffer(y.data.length);if(N.writeAttribute("position",y,null,null,I,0),null!=O){const e=I.getField("uv0",x.BufferViewVec2f);N.writeBufferVec2(O,e,0)}null!=V&&N.writeAttribute("color",y,null,null,I,0),null!=v&&N.writeAttribute("normalCompressed",v,null,null,I,0);const L=new Uint32Array([0,U.typedBuffer.length]),D={vertices:{data:I.buffer,count:I.byteLength/A.stride,layoutParameters:P},positionData:{positions:m.typedBuffer,indices:U.typedBuffer},indices:U.typedBuffer,componentOffsets:L};a.cpuMemoryUsage+=m.count,a.cpuMemoryUsage+=U.count;const G=this.view.renderSpatialReference,W=f.create(),z=[1,1,1];_.localLinearScaleFactors(C,G,z,o)||this._dbg(3,"Unsupported coordinate system for IM overlay"),w.projectVectorToVector(C,G,W,o);const $=this._collection.createObject(new S.ObjectParameters(g.fromValues(W[0],W[1],z[0],z[1]),new j.Transform(C,l),T,D));u&&this._collection.updateMaterial($,e=>{e.baseColor=u.baseColorFactor,e.usePBR="Pbr"===h,e.hasParametersFromSource=!1,e.baseColorTexture=this._getTexture(u.baseColorTex,t,s,a),e.usePBR&&(e.mrrFactors=[u.metallicFactor,u.roughnessFactor,0],e.emissiveBaseColor=u.emissiveFactor??[0,0,0],e.metallicRoughnessTexture=this._getTexture(u.metalTex,t,s,a),e.emissionTexture=this._getTexture(u.emissiveTex,t,s,a),e.occlusionTexture=this._getTexture(u.occlusionTex,t,s,a),e.normalTexture=this._getTexture(u.normalTex,t,s,a)),e.objectOpacity=0,e.alphaDiscardMode=2;const i=[];e.baseColorTexture&&i.push(e.baseColorTexture.loadPromise),e.usePBR&&e.metallicRoughnessTexture&&i.push(e.metallicRoughnessTexture.loadPromise),e.usePBR&&e.emissionTexture&&i.push(e.emissionTexture.loadPromise),e.usePBR&&e.occlusionTexture&&i.push(e.occlusionTexture.loadPromise),e.usePBR&&e.normalTexture&&i.push(e.normalTexture.loadPromise);const o=Promise.all(i);r.push(o),o.then(()=>{e.alphaDiscardMode=H.alphaModeConversion[u.alphaMode],e.objectOpacity=this.fullOpacity,a.textureMemoryUsage+=e.baseColorTexture?.glTexture?.usedMemory||0,e.usePBR&&(a.textureMemoryUsage+=e.metallicRoughnessTexture?.glTexture?.usedMemory||0,a.textureMemoryUsage+=e.emissionTexture?.glTexture?.usedMemory||0,a.textureMemoryUsage+=e.occlusionTexture?.glTexture?.usedMemory||0,a.textureMemoryUsage+=e.normalTexture?.glTexture?.usedMemory||0)}),e.commonMaterialParameters.doubleSided=u.isDoubleSided,e.commonMaterialParameters.cullFace=u.faceCulling?H.faceCullingConversion[u.faceCulling]:2,this._initialCullFace.set($,e.commonMaterialParameters.cullFace),e.commonMaterialParameters.hasSlicePlane=this.slicePlaneEnabled,e.componentParameters.castShadows=0,e.textureAlphaCutoff=u.alphaCutoff??J.alphaCutoff,e.alphaDiscardMode=H.alphaModeConversion[u.alphaMode],e.isIntegratedMesh=!0,e.polygonOffsetEnabled=!1,e.hasOccludees=!1,e.ellipsoidMode=k.getEllipsoidMode(this.view.spatialReference)}),a.components.push($),a.vboMemoryUsage+=this._collection.getObjectGPUMemoryUsage($)}if(await Promise.all(r),s.forEach(e=>{a.textures.push(e)}),!this._memCache)throw new Error("no memCache");return this._memCache.put(`${a.handle}`,a),{memUsageBytes:a.usedMemory}}freeRenderable(e){const t=this._lyrHandleToObjects.get(e);t&&(this.freeObject(t),this._lyrHandleToObjects.delete(e))}freeObject(e){this._memCache&&this._memCache.pop(`${e.handle}`),e.components.forEach(t=>{e.textures.forEach(e=>{this._stage.removeTexture(e)}),this._collection.destroyObject(t),this._initialCullFace.delete(t)})}setRenderableVisibility(e,t,i){if(this._memCache){for(let r=0;r<i;++r){const i=e[r],s=t[r];if(!s)continue;const a=this._lyrHandleToObjects.get(i);a&&(this._visibleGeometryChanged(),a.isVisible=s,a.components.forEach(e=>{this._collection.setObjectVisibility(e,s),this._elevationProvider.objectChanged(this._collection.getComponentObb(e))}),this._memCache.pop(`${i}`))}for(let r=0;r<i;++r){const i=e[r],s=t[r];if(s)continue;const a=this._lyrHandleToObjects.get(i);a&&(this._visibleGeometryChanged(),a.isVisible=s,a.components.forEach(e=>{this._collection.setObjectVisibility(e,s),this._elevationProvider.objectChanged(this._collection.getComponentObb(e))}),this._memCache.put(`${i}`,a))}}}_getTexture(e,i,r,s){let a=null;if(e&&i.desc?.images&&i.data?.buffer){const o=i.desc.images[e?.imageId];if(a=r.get(o),!a&&o){const n=this._stage.renderView.renderingContext.parameters.maxMaxAnisotropy,l=!!o.mipCount||n>1,c=H.wrapModeConversion[e.wrapMode??"None"];let d=o.alpha?4:3;const u=new Uint8Array(i.data.buffer,o.data.byteOffset,o.data.byteCount);let h=null,m=null,p=null;switch(o.format){case"Raw":"R8"===o.pixelFormat?(h=u,d=1,m=""):"Rgb8"===o.pixelFormat?(h=u,d=3,m=""):"Rgba8"===o.pixelFormat&&(h=u,d=4,m="");break;case"Dxt1":h=u,d=3,m="image/vnd-ms.dds";break;case"Dxt5":h=u,d=4,m="image/vnd-ms.dds";break;case"Basis":h=u,d=3,m="image/ktx2";break;case"Png":m="image/png",p=document.createElement("img");break;case"Jpeg":m="image/jpeg",p=document.createElement("img");break;case"Etc2":m="image/ktx",p=document.createElement("img");break;case"Astc":this._dbg(3,"Astc texture not supported");break;case"Pvrtc":this._dbg(3,"Pvrtc texture not supported")}if(p&&m){const e=new Blob([u],{type:m});p.src=URL.createObjectURL(e),h=p}if(h&&null!=m){const e=t("enable-feature:esri-compress-IM-textures")?{compressionTracker:this._compressionTracker,compressionCallback:e=>{e&&e>0&&(s.textureMemoryUsage-=e)}}:void 0;a=new G.Texture(h,{mipmap:l,maxAnisotropy:n,encoding:m,wrap:c,components:d,compressionOptions:e,noUnpackFlip:!0,width:o.mip0Width,height:o.mip0Height}),this._stage.addTexture(a),r.set(o,a)}}}return a?new I.RenderTexture(this.view.stage.renderView.textures,a.id):null}getBufferViews(e,t,i){let r,s,a,o,n,l,c,d=null;for(let c=0;c<e.atrbs.length;c++){const u=e.atrbs[c],h=u.view,m=void 0,p=h.byteOffset+h.byteCount,f=h.byteCount/H.lyr3DTypeToByteSize[h.type],g=[...Array(f).keys()].map(e=>e);try{switch(u.sem){case"Position":3!==h.ncomp||"F32"!==h.type?this._dbg(3,"[Unsupported Feature] Unsupported view for Position ("+h+")"):(r=new x.BufferViewVec3f(t,h.byteOffset,m,p),s=new L.Attribute(r.typedBuffer,g,3));break;case"Normal":if(3!==h.ncomp||"F32"!==h.type)this._dbg(3,"[Unsupported Feature] Unsupported view for Normal ("+h+")");else{const e=new x.BufferViewVec3f(t,h.byteOffset,m,p),r=D.compressAndTransformNormals(e.typedBuffer,i);n=new x.BufferViewInt16(r),l=new L.Attribute(n.typedBuffer,g,2)}break;case"TexCoord":2!==h.ncomp||"F32"!==h.type?this._dbg(3,"[Unsupported Feature] Unsupported view for Texcoord ("+h+")"):void 0===o&&(o=new L.Attribute(new x.BufferViewVec2f(t,h.byteOffset,m,p).typedBuffer,g,2));break;case"Color":4===h.ncomp?("F32"===h.type&&(d=new x.BufferViewVec4f(t,h.byteOffset,m,p)),"U8"===h.type&&(d=new x.BufferViewVec4u8(t,h.byteOffset,m,p)),"U16"===h.type&&(d=new x.BufferViewVec4u16(t,h.byteOffset,m,p))):3===h.ncomp&&("F32"===h.type&&(d=new x.BufferViewVec3f(t,h.byteOffset,m,p)),"U8"===h.type&&(d=new x.BufferViewVec3u8(t,h.byteOffset,m,p)),"U16"===h.type&&(d=new x.BufferViewVec3u16(t,h.byteOffset,m,p))),null==d?this._dbg(2,"[Unsupported Feature] Unsupported view for Color ("+h+")"):a=new L.Attribute(d.typedBuffer,g,h.ncomp);break;case"FeatureIndex":break;default:this._dbg(2,"[Unsupported Feature] Unsupported semantic ("+u.sem+"). Skipping vertex attribute.")}}catch(e){this._dbg(2,"Error Creating buffer ("+e+"). Skipping vertex attribute.")}}if(e.index){const i=e.index.view,r=void 0,s=i.byteOffset+i.byteCount;switch(e.index.view.type){case"U16":c=new x.BufferViewUint16(t,i.byteOffset,r,s);break;case"U32":c=new x.BufferViewUint32(t,i.byteOffset,r,s);break;default:this._dbg(3,"[Unsupported Feature] index type not supported ("+i.type+").")}}if(null==c&&null!=r){const e=r.count;if(e<65535){const t=new Uint16Array(e);c=new x.BufferViewUint16(t)}else{const t=new Uint32Array(e);c=new x.BufferViewUint32(t)}for(let t=0;t<e;t++)c.set(t,t)}return{positionView:r,positionAttr:s,colorAttr:a,texCoord0Attr:o,indicesView:c,normalsView:n,normalsAttr:l}}_loadModifications(){if(this.removeHandles("modifications"),null==this.layer.modifications)return void(this._modifications=[]);const e=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>e,()=>this._modifications=e.toArray(),s.initial),"modifications")}_onRemoveFromCache(e){this._wasm?.onRenderableEvicted(this,e.handle,e.usedMemory),this.freeRenderable(e.handle)}_dbg(e,t){this._dbgFlags.has(e)&&(3===e?i.getLogger(this).error(t):i.getLogger(this).warn(t))}};return e.__decorate([o.property({type:[C]})],K.prototype,"_modifications",void 0),e.__decorate([o.property()],K.prototype,"_visibleGeometryChangedSchedulerHandle",void 0),e.__decorate([o.property()],K.prototype,"layer",void 0),e.__decorate([o.property({readOnly:!0})],K.prototype,"visibleAtCurrentScale",null),e.__decorate([o.property()],K.prototype,"elevationOffset",null),K=e.__decorate([l.subclass("esri.views.3d.layers.IntegratedMesh3DTilesLayerView3D")],K),K});