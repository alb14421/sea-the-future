// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/arrayUtils","../../../core/has","../../../core/maybe","../../../core/promiseUtils","../../../core/RandomLCG","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/accessorSupport/decorators/subclass","../../../geometry/projectionUtils","../../../geometry/support/aaBoundingRect","../../../symbols/support/ElevationInfo","../../2d/engine/flow/utils","./SubView3D","./support/makeScheduleFunction","../support/flow/FlowWorkerHandle","../support/flow/geometryUtils","../support/flow/loadUtils","../support/flow/StreamlineResources3DOverlay","../support/flow/StreamlineResources3DShape","../support/flow/VisualQuery3D","../terrain/tileUtils","../webgl-engine/materials/RibbonLineMaterial","../../support/Scheduler"],function(e,t,r,i,o,s,l,n,a,u,d,c,h,p,f,_,y,g,m,w,b,v,S,T,R,x){"use strict";e.default=class extends _{constructor(e){super(e),this.type="flow",this.renderedTiles=null,this._abortController=null,this._frameTask=null,this.workerHandle=null,this.emissiveStrength=0,this._overrideSimulationSettings=null,this._debouncedLoad=s.debounce(async e=>{const{view:t}=this;if(!this._visible)return void this.clear();if(0===e.size)return;const r=this._computeExtent(e);if(null==r)return;const i=new S(r,this.layer.timeExtent,this._viewSizeWithEqualRatio(r),t.state.contentPixelRatio);null==this._abortController&&(this._abortController=new AbortController);const o=this._abortController,l=await this._load(i,o.signal);s.throwIfAborted(o.signal),this.clear(),this._visible&&null!=l&&(l.attach(),this._resources=l)}),this._debouncedTileUpdate=s.debounce(async()=>{const{allTiles:e}=this.surface,{featureTiles:t}=this.view,{_dataBounds:i,_featureTilesBounds:o}=this,s=e=>e.rendered&&e.visible&&L(i,e.extent);if(null==t)return void(this.renderedTiles=new Set(e.filter(e=>s(e))));const l=t.tiles.filter(e=>e.measures.visible),n=new Set;await this._frameTask.scheduleGenerator(function*(t){for(let i=0;i<e.length;++i){const a=e.at(i);s(a)&&L(o,a.extent)&&(l.some(({lij:e})=>r.equals(e,a.lij)||T.tilesAreRelated(e,a.lij))&&n.add(a),t.madeProgress(),t.done&&(t=yield))}}),this.renderedTiles=n}),this._debugStopLoading=!1}initialize(){const{surface:e,view:t}=this,{resourceController:r}=t;this.workerHandle=new g.FlowWorkerHandle(y.makeScheduleFunction(r)),this._frameTask=r.scheduler.registerTask(x.TaskPriority.FLOW_GENERATOR),this.addHandles([n.watch(()=>this.simulationSettings,()=>this.triggerLoad(),{sync:!0,equals:(e,t)=>null==e&&null==t||null!=e&&null!=t&&f.simulationSettingsEqual(e,t)}),n.watch(()=>{const{elevationInfo:e}=this;return[this._visible,this._draped,e?.mode,e?.offset,e?.unit]},()=>this.triggerLoad(),n.sync),n.watch(()=>m.materialParametersFromRenderer(this._flowRenderer,this._opacity,this.emissiveStrength),e=>this._resources?.setMaterialParameters(e)),e.on("tiles-changed",()=>this._triggerTilesUpdate()),t.enableFeatureTiles(),n.watch(()=>[this._dataBounds,this._featureTilesBounds],()=>this._triggerTilesUpdate()),n.when(()=>!t.featureTiles?.updating,()=>this._triggerTilesUpdate())]),this._triggerTilesUpdate()}destroy(){this.abort(),this.clear()}abort(){this._abortController=o.abortMaybe(this._abortController)}get _dataBounds(){const e=c.projectOrLoad(this.layer.fullExtent,this.surface.spatialReference).geometry;return null==e?null:h.fromExtent(e)}get _draped(){return"on-the-ground"===this.elevationInfo.mode}get _featureTilesBounds(){const e=this.view.featureTiles?.filterExtent,t=c.projectOrLoad(e,this.surface.spatialReference).geometry;return null==t?null:h.fromExtent(t)}get _flowRenderer(){const e=this.layer.renderer;return"flow"!==e?.type?null:e}get _opacity(){return this.layerView.fullOpacity}get _visible(){const e=this._flowRenderer?.color;return this.layer.effectiveVisible&&this._opacity>0&&(null==e||e.a>0)}get elevationInfo(){return this.layer.elevationInfo??E}get layer(){return this.layerView.layer}get simulationSettings(){const{_flowRenderer:e,_overrideSimulationSettings:t}=this;if(null==e)return null;let r=f.getFlowSimulationSettings(e);return null!=t&&(r={...r,...t}),r}get surface(){return this.view.basemapTerrain}doRefresh(){return this.triggerLoad()}clear(){this._resources?.detach(),this._resources=null}async triggerLoad(){const{renderedTiles:e}=this;if(null==e||0===e.size||this._debugStopLoading)return;const t=this._debouncedLoad(e);return this.updatingHandles.addPromise(s.ignoreAbortErrors(t))}async _load(e,t){const r=await this.fetchDataAndGenerateStreamlines(e,t);if(null==r||0===r.length)return null;const i=await this._createGeometry(e,r);return this._draped?new b.StreamlineResources3DOverlay(r,i,this.surface.overlayManager):new v.StreamlineResources3DShape(r,i,this.view.stage)}async fetchDataAndGenerateStreamlines(e,t){return null}async _createGeometry(e,t){const r=new R.RibbonLineMaterial(m.materialParametersFromRenderer(this._flowRenderer,this._opacity,this.emissiveStrength)),i=new Array,o=new l(1),{elevationInfo:s,_draped:n,view:a}=this;return await this._frameTask.scheduleGenerator(function*(l){for(let u=0;u<t.length;++u)i.push(m.createStreamlineGeometry(a,e,t[u],s,r,n,o)),l.madeProgress(),l.done&&(l=yield)}),i}_computeExtent(e){const{spatialReference:t}=this.surface;if(null==t)return null;const r=w.boundingRectOfTiles(e);return null==r?null:h.toExtent(r,t)}async _triggerTilesUpdate(){const e=this._debouncedTileUpdate();return this.updatingHandles.addPromise(s.ignoreAbortErrors(e))}_viewSizeWithEqualRatio(e){const t=(e.xmax-e.xmin)/(e.ymax-e.ymin),[r,i]=this.view.size;return r<i?[r,Math.floor(r/t)]:[Math.floor(i*t),i]}get test(){}},t.__decorate([a.property()],e.default.prototype,"type",void 0),t.__decorate([a.property()],e.default.prototype,"renderedTiles",void 0),t.__decorate([a.property()],e.default.prototype,"emissiveStrength",void 0),t.__decorate([a.property()],e.default.prototype,"_dataBounds",null),t.__decorate([a.property()],e.default.prototype,"_draped",null),t.__decorate([a.property()],e.default.prototype,"_featureTilesBounds",null),t.__decorate([a.property()],e.default.prototype,"_flowRenderer",null),t.__decorate([a.property()],e.default.prototype,"_opacity",null),t.__decorate([a.property()],e.default.prototype,"_visible",null),t.__decorate([a.property()],e.default.prototype,"elevationInfo",null),t.__decorate([a.property()],e.default.prototype,"layer",null),t.__decorate([a.property()],e.default.prototype,"_overrideSimulationSettings",void 0),t.__decorate([a.property()],e.default.prototype,"simulationSettings",null),t.__decorate([a.property()],e.default.prototype,"surface",null),e.default=t.__decorate([d.subclass("esri.views.3d.layers.FlowSubView3D")],e.default);const E=new p({mode:"relative-to-ground",offset:100});function L(e,t){return null==e||null==t||h.intersects(e,t)}return e.default});