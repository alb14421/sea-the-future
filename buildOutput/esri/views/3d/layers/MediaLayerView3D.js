// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Error","../../../core/handleUtils","../../../core/has","../../../core/iteratorUtils","../../../core/perspectiveUtils","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/factories/mat3f64","../../../geometry/support/aaBoundingRect","../../../layers/support/MediaElementView","./LayerView3D","./support/MediaLayerInteraction","../terrain/OverlayRenderer","../webgl-engine/lib/Attribute","../webgl-engine/lib/Geometry","../webgl-engine/lib/Object3DStateID","../webgl-engine/lib/RenderGeometry","../webgl-engine/lib/Texture","../webgl-engine/materials/ImageMaterial","../../layers/LayerView","../../layers/MediaLayerView","../../support/highlightOptionsUtils","../../support/layerViewUtils"],function(e,t,r,i,n,s,a,d,o,l,h,c,m,g,p,u,y,_,v,w,E,f,D,R,b,H,A,G){"use strict";let M=class extends(u.LayerView3D(H(b))){get interactive(){return this._interaction.enabled}set interactive(e){this._interaction&&(this._interaction.enabled=e)}get selectedElement(){return this._interaction.selectedElement}set selectedElement(e){this._interaction&&(this._interaction.selectedElement=e)}get visibleAtCurrentScale(){return G.isInEffectiveScaleRange(this.layer.effectiveScaleRange,this.view.scale)}get usedMemory(){return Array.from(this._renderElements.values()).reduce((e,t)=>e+(t.getRenderData()?.texture.usedMemory??0),0)}constructor(e){super(e),this.type="media-3d",this.drapeSourceType=1,this.updatePolicy=1,this.ignoresMemoryFactor=!0,this.unloadedMemory=0,this._uidToElement=new Map,this._highlightedElements=new Map,this._elementsInHighlightedId=new Map,this._renderElements=new Map,this._lastDrapingExtent=null,this._update=a.debounce(async(e,t,r)=>{const i=await this._collectMediaElements(e,t,r);this._synchronizeRenderElements(i)},0);const{view:t,layer:r}=e;this._interaction=new y.MediaLayerInteraction({view:t,layer:r}),this.addHandles(d.watch(()=>this.interactionOptions,e=>this._interaction.options=e,d.syncAndInitial))}initialize(){const{view:e,layer:t}=this;this._renderer=e.basemapTerrain.overlayManager.registerGeometryDrapeSource(this);const i=()=>this._updateWithLastDrapingExtent();this.addHandles([r.makeHandle(()=>e.basemapTerrain.overlayManager.unregisterDrapeSource(this)),d.on(()=>t.effectiveSource,"change",i),d.on(()=>t.effectiveSource,"refresh",i)]),this._updatingHandles.add(()=>this.suspended,i)}destroy(){this._synchronizeRenderElements(new Set)}setDrapingExtent(e,t){this._lastDrapingExtent={overlays:e,spatialReference:t},this._updateWithLastDrapingExtent()}getHit(e){const t=this._uidToElement.get(e);return t?{type:"media",element:t,layer:this.layer}:null}highlight(e,t){const i=A.getHighlightName(t),s=new E.Object3DHighlightStateID(i),a=n.isIterable(e)?Array.from(e):[e];this._elementsInHighlightedId.set(s,a);for(const e of a){const t=this._highlightedElements.get(e);t?t.add(s):this._highlightedElements.set(e,new Set([s]));const r=this._renderElements.get(e)?.getRenderData();r&&(r.renderGeometry.geometry.addHighlight(s),this._renderer.modifyGeometries([r.renderGeometry],8))}return r.makeHandle(()=>{const e=this._elementsInHighlightedId.get(s);if(e){for(const t of e){const e=this._highlightedElements.get(t);if(!e)continue;e.delete(s);const r=this._renderElements.get(t)?.getRenderData();r&&(r.renderGeometry.geometry.removeHighlight(s),this._renderer.modifyGeometries([r.renderGeometry],8)),0===e.size&&this._highlightedElements.delete(t)}this._elementsInHighlightedId.delete(s)}})}isUpdating(){return super.isUpdating()||this._interaction.updating}_updateWithLastDrapingExtent(){if(null==this._lastDrapingExtent||this.suspended)return void(this._renderer&&this._synchronizeRenderElements(new Set));const{overlays:e,spatialReference:t}=this._lastDrapingExtent;this._updatingHandles.addPromise(this._update(e,t).catch(()=>{}))}async _collectMediaElements(e,t,r){const i=this.layer.effectiveSource;return null==i?new Set:new Set((await Promise.all(e.map(e=>i.queryElements(g.toExtent(e.extent,t),{signal:r})))).flat())}_synchronizeRenderElements(e){this._synchronizeRenderElementsRemove(e),this._synchronizeRenderElementsAdd(e)}_synchronizeRenderElementsRemove(e){this._renderElements.forEach((t,r)=>{e.has(r)||(this._removeElement(r,t),this.emit("element-render-changed",{element:r}))})}_synchronizeRenderElementsAdd(e){for(const t of e)this._renderElements.has(t)||this._createRenderElement(t)}_removeElement(e,t){this._destroyRenderData(e,t),this._renderElements.delete(e),this._uidToElement.delete(e.uid),t.handle.remove()}_createRenderElement(e){const t=new p.MediaElementView({spatialReference:this.view.spatialReference,element:e}),i=new I(r.handlesGroup([this._updatingHandles.add(()=>e.opacity,e=>i.getRenderData()?.material.setParameters({opacity:e})),this._updatingHandles.add(()=>t.coords,()=>{i.data?this._updateGeometry(t,i):this._initializeRenderData(t,i)}),this._updatingHandles.add(()=>e.content,()=>this._initializeRenderData(t,i)),r.destroyHandle(t)]));this._renderElements.set(e,i),this._uidToElement.set(e.uid,e),this._updatingHandles.addPromise(e.load().catch(()=>{})),this._initializeRenderData(t,i)}_initializeRenderData(e,t){const{coords:r,element:i}=e,{contentWidth:n,contentHeight:s}=i;if(null==r||null==i.content)return void this._destroyRenderData(i,t);if(t.data)return;const d=this._createTexture(i.content),o=d.load(this.view.stage.renderView.renderingContext),l=()=>{if(!d.loaded)return;this.view.stage.addTexture(d);const e=new R.ImageMaterial({draped:!0,texture:d,opacity:i.opacity,perspectiveInterpolation:!0}),a=this._getPositionAttributeArray(r),o=this._getPerspectiveDivideAttributeArray(a,n,s),l=[0,1,2,0,2,3],h=new w.Geometry(e,[["position",new v.Attribute(a,l,3,!0)],["uv0",new v.Attribute([0,0,1,0,1,1,0,1],l,2,!0)],["perspectiveDivide",new v.Attribute(o,l,1,!0)]]),c=new f.RenderGeometry(h,{layerViewUid:this.uid,graphicUid:i.uid}),m=this._highlightedElements.get(i);m?.forEach(e=>c.geometry.addHighlight(e)),this._renderer.addGeometries([c],0),t.data=new S(c,d,e),this.emit("element-render-changed",{element:i})};a.isPromiseLike(o)?(t.data=d,this._updatingHandles.addPromise(o),o.then(l).catch(()=>d.dispose())):l()}_updateGeometry(e,t){const{coords:r,element:i}=e;if(null==r||null==i.content)return void this._destroyRenderData(i,t);const n=t.getRenderData();if(!n)return;const s=this._getPositionAttributeArray(r);n.renderGeometry.geometry.setAttributeData("position",s);const a=this._getPerspectiveDivideAttributeArray(s,i.contentWidth,i.contentHeight);n.renderGeometry.geometry.setAttributeData("perspectiveDivide",a),n.renderGeometry.geometry.invalidateBoundingInfo(),this._renderer.modifyGeometries([n.renderGeometry],2),this.emit("element-render-changed",{element:i})}_getPositionAttributeArray(e){const[t,r,i,n]=e.rings[0];return[t[0],t[1],_.drapedZ,n[0],n[1],_.drapedZ,i[0],i[1],_.drapedZ,r[0],r[1],_.drapedZ]}_getPerspectiveDivideAttributeArray(e,t,r){s.getProjectiveTransform(x,[0,0,t,0,t,r,0,r],[e[0],e[1],e[3],e[4],e[6],e[7],e[9],e[10]]);const i=x[6]/x[8]*t,n=x[7]/x[8]*r;return[1,1+i,1+i+n,1+n]}_destroyRenderData(e,t){const r=t.data;if(null==r)return;if(t.data=null,"dispose"in r)return void r.dispose();const i=r.texture;i.unload(),this.view.stage.removeTexture(i),this._renderer.removeGeometries([r.renderGeometry],2),this.emit("element-render-changed",{element:e})}_createTexture(e){const r=e instanceof HTMLImageElement?e.naturalWidth:e.width,i=e instanceof HTMLImageElement?e.naturalHeight:e.height;if("getFrame"in e)throw new t("media-layer-view-3d","animation is not supported");return new D.Texture(e,{wrap:{s:33071,t:33071},preMultiplyAlpha:!0,width:r,height:i,mipmap:!0,updateCallback:()=>this.view.basemapTerrain.overlayManager.requestRender()})}get test(){}};e.__decorate([o.property({readOnly:!0})],M.prototype,"type",void 0),e.__decorate([o.property()],M.prototype,"layer",void 0),e.__decorate([o.property()],M.prototype,"interactive",null),e.__decorate([o.property()],M.prototype,"selectedElement",null),e.__decorate([o.property({readOnly:!0})],M.prototype,"visibleAtCurrentScale",null),M=e.__decorate([c.subclass("esri.views.3d.layers.MediaLayerView3D")],M);const x=m.create();class I{constructor(e){this.handle=e}getRenderData(){return this.data&&"type"in this.data&&"RenderData"===this.data.type?this.data:null}}class S{constructor(e,t,r){this.renderGeometry=e,this.texture=t,this.material=r,this.type="RenderData"}}return M});