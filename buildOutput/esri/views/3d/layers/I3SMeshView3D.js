// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../chunks/tslib.es6","../../../Color","../../../Graphic","../../../core/arrayUtils","../../../core/has","../../../core/Logger","../../../core/MapUtils","../../../core/maybe","../../../core/PooledArray","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/scheduling","../../../core/SetUtils","../../../core/typedArrayUtil","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/math/mat3","../../../core/libs/gl-matrix-2/factories/mat3f64","../../../core/libs/gl-matrix-2/math/mat4","../../../core/libs/gl-matrix-2/factories/mat4f64","../../../core/libs/gl-matrix-2/factories/quatf64","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../chunks/vec42","../../../core/libs/gl-matrix-2/factories/vec4f64","../../../core/support/UpdatingHandles","../../../geometry/spatialReferenceEllipsoidUtils","../../../geometry/projection/localLinearScaleFactors","../../../geometry/projection/projectBoundingSphere","../../../geometry/projection/projectBuffer","../../../geometry/projection/projectors","../../../geometry/projection/projectVectorToVector","../../../geometry/support/aaBoundingBox","../../../geometry/support/aaBoundingRect","../../../geometry/support/DoubleArray","../../../geometry/support/FloatArray","../../../geometry/support/Indices","../../../chunks/sphere","../../../geometry/support/UByteArray","../../../layers/LayerConstants","../../../layers/graphics/controllers/I3SOnDemandController","../../../layers/support/fieldUtils","../../../layers/support/SceneModification","../../../renderers/visualVariables/support/visualVariableUtils","../../../support/basemapUtils","../../../support/elevationInfoUtils","../../../support/loadArcade","../../../symbols/MeshSymbol3D","../../../symbols/SimpleFillSymbol","./ContentGeometryLayerView","./I3SMeshViewLabeler","./I3SMeshViewPerformanceInfo","./I3SMeshWorkerHandle","./SceneLayerWorker","./graphics/graphicUtils","./graphics/Labeler","./i3s/Highlights","./i3s/I3SAsyncElevationUpdater","./i3s/I3SBinaryReader","./i3s/I3SCrossfadeHelper","./i3s/I3SGeometryUtil","./i3s/I3SIntersectionHandler","./i3s/I3SMaterialUtil","./i3s/I3SOverrides","./i3s/I3SProjectionUtil","./i3s/I3SUtil","./i3s/IDBCache","./i3s/IDBMockCache","./i3s/LayerElevationProvider","./i3s/SymbologyInfo","./support/attributeUtils","./support/highlightUtils","./support/makeScheduleFunction","../support/debugFlags","../support/ElevationRange","../support/extentUtils","../support/orientedBoundingBox","../support/updatingProperties","../support/buffer/glUtil","../webgl-engine/collections/Component/ObjectParameters","../webgl-engine/collections/Component/SourceGeometry","../webgl-engine/collections/Component/Transform","../webgl-engine/core/shaderLibrary/output/Emissions.glsl","../webgl-engine/lib/BasisUtil","../../support/highlightOptionsUtils","../../support/TextureCompressionTracker","../../../webscene/support/AlphaCutoff"],function(e,t,i,s,r,a,o,n,l,d,h,c,u,_,g,p,f,m,y,b,v,I,C,M,w,x,S,R,E,O,V,F,A,D,T,H,N,P,j,k,L,U,G,B,q,W,z,$,K,Q,Y,J,X,Z,ee,te,ie,se,re,ae,oe,ne,le,de,he,ce,ue,_e,ge,pe,fe,me,ye,be,ve,Ie,Ce,Me,we,xe,Se,Re,Ee,Oe,Ve,Fe,Ae,De,Te){"use strict";const He=[1,1,1,1];class Ne extends ne.NodeCrossfadeMetaData{constructor(e,t,i,s,r,a,o,n,l){super(),this.node=e,this.featureIds=t,this.objectHandle=i,this.cachedRendererVersion=s,this.attributeInfo=r,this.material=a,this.textures=o,this.anchorIds=n,this.anchors=l,this.cachedElevationAnchors=null,this.cachedEdgeMaterials=new Array,this.edgeMemoryUsage=0,this.cachedSymbologyStride=5}get cachedMemory(){return this.node.memory}get featureExtents(){return this._featureExtents??=new Float64Array(6*this.featureIds.length).fill(Number.POSITIVE_INFINITY),this._featureExtents}}const Pe=T.create(),je=H.create(),ke=H.create(),Le=new we.Obb,Ue=new s([0,0,0,0]),Ge=k.fromValues(0,0,0,0);function Be(e){if(null==e)return!1;const t=e.metallicRoughness;return t&&t.baseColorTextureId>=0||t&&t.metallicRoughnessTextureId>=0||e.normalTextureId>=0||e.emissiveTextureId>=0||e.occlusionTextureId>=0}function qe(e){return null!=e&&p.isArrayBuffer(e.data)}function We(e,t){let i=1024+e.interleavedVertexData.byteLength+(e.indices?e.indices.byteLength:0)+e.positionData.data.byteLength+e.positionData.indices.byteLength;if(null!=t)for(const e of t)null!=e&&p.isArrayBuffer(e.data)&&(i+=e.data.byteLength);return i}class ze{constructor(e,t,i){this.attributeInfo=e,this.meta=t,this.promise=i,this.allowMemCache=!0}}function $e(e,t){e.forEach(e=>e.opacity=t)}class Ke{constructor(e,t){this.mode=e,this.offset=t}}const Qe=w.create(),Ye=T.create(),Je="elevation-change",Xe=[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],Ze=new Ce.ElevationRange;function et(e,t,i){let s=e.elevationRangeMin,r=e.elevationRangeMax;const a=i;if(a>0){t.getCorners(Xe);for(const e of Xe){const t=M.len(e)-a;s=Math.min(s,t),r=Math.max(r,t)}}else{t.getCorners(Xe);for(const e of Xe){const t=e[2];s=Math.min(s,t),r=Math.max(r,t)}}e.expandElevationRangeValues(s,r)}function tt(e,t,i){const s=k.getCenter(t),r=i>0?M.len(s)-i:s[2],a=k.getRadius(t);e.expandElevationRangeValues(r-a,r+a)}function it(e,t,i){const s=new Array,r=e.filteredIds;if(null==r||t?.size||i?.size){if(null!=r){let a=0;e.featureIds.forEach((e,o)=>{if(r[a]===e)++a;else if(!t?.has(e))return;i?.has(e)||s.push(o)})}}else e.featureIds.forEach((e,t)=>{r[s.length]===e&&s.push(t)});return s}function st(e,t,i){if(e&&t)for(const s of t){const t=(e.get(s)??0)+i;t>0?e.set(s,t):e.delete(s)}}function rt(e,t=0){const i=new Map;for(const s of e)st(i,0===t?s?.featureIds:1===t?s?.filteredIds:s?.weaklyRemovedIds,1);return i}t.I3SMeshView3D=t=>{const s=t;let p=class extends s{constructor(){super(...arguments),this._applySSAO=!0,this._shadeNormals=!0,this._updatingHandles=new R.UpdatingHandles,this._highlights=null,this._nodeId2Meta=new Map,this._nodeId2MetaReloading=new Map,this._i3sWasmLoaded=!1,this._snappingSourcesTrackers=[],this._compressionTracker=new De.TextureCompressionTracker,this._hasLoadedPBRTextures=!1,this._asyncModuleLoading=0,this._addTasks=new Map,this._currentRenderer=null,this._rendererVersion=0,this._colorVariable=null,this._opacityVariable=null,this._rendererFields=null,this._symbologyFields=null,this._symbologyOverride=null,this._symbologyOverrideFields=null,this._symbolInfos=new Map,this._visibleGeometryChangedSchedulerHandle=null,this._hasComponentData=!1,this._hasVertexColors=!1,this._nodeColorOverride=null,this.updating=!0,this.holeFilling="auto",this._hasColors=!1,this._hasTextures=!1,this._hasData=!1,this.slicePlaneEnabled=!1,this._modifications=new Array,this.ignoresMemoryFactor=!1,this._layerUrl="",this._cacheKeySuffix=null,this._planetRadiusInGlobalMode=0,this._elevationTask=null,this._needFilterResolve=!1,this._filters=[],this._arcade=null,this._tmpAttributeOnlyGraphic=new r,this._crossfadeHelper=new ne.I3SCrossfadeHelper(this)}get lodCrossfadeoutDuration(){return 0}get lodCrossfadeinDuration(){return 0}get lodCrossfadeUncoveredDuration(){return 0}get layerViewUid(){return this.uid}get layerId(){return this.i3slayer&&this.i3slayer.id}get sublayerId(){return null}get _isIntegratedMesh(){return"integrated-mesh"===this.i3slayer.type}get contentVisible(){return!this.suspended&&this._controller?.rootNodeVisible&&this.fullOpacity>Te.alphaCutoff}get legendEnabled(){return this.contentVisible&&!0===this.i3slayer?.legendEnabled}get updatingProgressValue(){return this._controller?.updatingProgress??0}get hasTexturesOrVertexColors(){return this._hasData?this._hasTextures||this._hasColors?"yes":"probably-not":"unknown"}get rendererTextureUsage(){return _e.rendererNeedsTextures(this._currentRenderer)?this._usePBR||this._hasLoadedPBRTextures?63:37:this._usePBR||this._hasLoadedPBRTextures?44:36}get elevationOffset(){const e=null!=this.i3slayer?this.i3slayer.elevationInfo:null;return null!=e&&"absolute-height"===e.mode?$.getElevationOffset(e,this.i3slayer.spatialReference):0}get elevationInfo(){const e=null!=this.i3slayer?this.i3slayer.elevationInfo:null;if(null==e)return new Ke(0,0);const t=$.getElevationOffset(e,this.i3slayer.spatialReference);switch(e.mode){case"absolute-height":return new Ke(0,t);case"relative-to-ground":return new Ke(1,t);case"on-the-ground":return new Ke(2,0);default:return new Ke(0,0)}}get supportedTextureEncodings(){return he.getSupportedEncodings(this.view.stage.renderView.capabilities)}get clientGeometry(){return this.i3sOverrides.geometryOverrides}get elevationRange(){const e=this._nodeId2Meta,t=new Ce.ElevationRange;for(const i of e.values()){if(null==i)continue;const{node:{serviceMbsInIndexSR:e}}=i,[s,r,a,o]=e;t.expandElevationRangeValues(a-o,a+o)}return t.elevationRangeValid?t:null}get fullExtent(){return this.i3slayer.fullExtent}initialize(){const t=o("enable-feature:idb-mock-cache");this._idbCache=t?new pe.IDBMockCache(this.view,t):new ge.IDBCache("esri-scenelayer-cache","geometries"),this._preLoadBasis(),this.addResolvingPromise(this.i3slayer.indexInfo);const i=this.view.resourceController,s=i.memoryController;this.i3sOverrides=new ce.I3SOverrides({view:this.view,layer:this.i3slayer,memoryController:s}),this._workerHandle=new ee.I3SMeshWorkerHandle(ve.makeScheduleFunction(i)),this.addResolvingPromise(this._workerHandle.promise);const r=this.i3slayer.store;this.addResolvingPromise(this._workerHandle.setLegacySchema(this.uid,r.defaultGeometrySchema).catch(c.ignoreAbortErrors)),_e.checkSceneLayerValid(this.i3slayer),_e.checkSceneLayerCompatibleWithView(this.i3slayer,this.view),this._layerUrl=this.i3slayer.parsedUrl.path,this._controller=new G({layerView:this,worker:this._workerHandle}),this._gpuMemoryEstimate=0,this._texMemoryEstimate=0,this._geoMemoryEstimate=0,this._stage=this.view.stage,this._collection=this._stage.renderView.componentObjectCollection;const a=r.defaultGeometrySchema;if(this._isIntegratedMesh||!a)this._hasComponentData=!1;else{const e=a.featureAttributes;this._hasComponentData=!!(e&&e.faceRange&&e.id)}this._hasVertexColors=null!=(a?.vertexAttributes.color??null)&&!this.i3slayer.cachedDrawingInfo?.color;const l=this.view.resourceController.memoryController.newCache(`sl-${this.uid}`,e=>this._deleteComponentObject(e));this._memCache=l;const h=this._controller,_=this._nodeId2Meta,g=this._nodeId2MetaReloading;this._intersectionHandler=new de.I3SIntersectionHandler({layerViewUid:this.layerViewUid,sublayerId:this.sublayerId,collection:this._collection,slicePlaneEnabled:this.slicePlaneEnabled,isGround:this._isIntegratedMesh,traverseNodeHierarchy:e=>{const t=h.index;if(!t)return;const i=t.rootNode;i&&t.traverse(i,t=>{const i=t.index,s=_.get(i)||g.get(i);return e(t,s?.objectHandle??null)})}}),this._elevationProvider=new fe.LayerElevationProvider({view:this.view,layerElevationSource:this,intersectionHandler:this._intersectionHandler}),this._hasLoadedPBRTextures=this._usePBR,this._updatingHandles.add(()=>this.view.clippingArea,()=>this._clippingAreaChanged(),u.initial),this._updatingHandles.add(()=>this.fullOpacity,e=>this._opacityChange(e)),this._updatingHandles.add(()=>this.slicePlaneEnabled,e=>this._slicePlaneEnabledChange(e)),this._updatingHandles.add(()=>this.elevationOffset,(e,t)=>{this._reloadAll(t),this._controller.invalidateVisibilityObbs()}),this._updatingHandles.add(()=>this.elevationInfo,(e,t)=>this._elevationInfoChanged(e,t),u.initial),this._updatingHandles.add(()=>!this.suspended&&0!==this.elevationInfo.mode,(e,t)=>{e?this.addHandles(this.view.basemapTerrain.on("elevation-change",({extent:e})=>this._ensureElevationTask().addExtent(e)),Je):t&&this.removeHandles(Je)},u.initial),this._updatingHandles.add(()=>this._usePBR,e=>this._updatePBR(e)),this._updatingHandles.add(()=>this.rendererTextureUsage,()=>{this._reloadAll(),this.clearMemCache()}),this._updatingHandles.add(()=>this.contentVisible,e=>this._contentVisibleChanged(e),u.initial),this._updatingHandles.add(()=>this.i3slayer.labelsVisible,()=>this._labelingChanged(),u.initial),this._updatingHandles.add(()=>this.i3slayer.labelingInfo,()=>this._labelingChanged(),u.initial),this._updatingHandles.add(()=>this._modifications,()=>this._modificationsChanged(),u.initial),this.addHandles([u.watch(()=>Ie.debugFlags.I3S_TREE_SHOW_TILES,t=>{if(t&&!this._treeDebugger){const t=this._controller.crsIndex;new Promise((t,i)=>e(["./support/I3STreeDebugger"],t,i)).then(({I3STreeDebugger:e})=>{!this._treeDebugger&&Ie.debugFlags.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new e({lv:this,view:this.view,nodeSR:t}))})}else t||Ie.debugFlags.I3S_TREE_SHOW_TILES||(this._treeDebugger=d.destroyMaybe(this._treeDebugger))},u.initial),u.watch(()=>Ie.debugFlags.I3S_SHOW_MODIFICATIONS,()=>this._showModifications(),u.initial)]),this._cacheKeySuffix=this._getCacheKeySuffix(),this._idbCache.init().catch(e=>n.getLogger(this).warn(`Failed to initialize IndexedDB cache: ${e}`));const{view:p}=this,{viewingMode:f,renderCoordsHelper:m}=p;this._planetRadiusInGlobalMode="local"===f?0:m.referenceEllipsoid.radius}destroy(){this._clearAddTasks(),this._elevationTask=d.destroyMaybe(this._elevationTask),this.i3sOverrides=d.destroyMaybe(this.i3sOverrides),this._elevationProvider&&(this._elevationProvider.objectsChanged(this.getVisibleObbs()),this.view.elevationProvider.unregister(this._elevationProvider),this._elevationProvider=null),this._intersectionHandler&&(this._stage.view.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler),this._intersectionHandler=null);const e=this._workerHandle;e&&(e.destroyContextAndSelf(this.uid),this._workerHandle=null),this._removeAllNodeDataFromStage(),this._memCache=d.destroyMaybe(this._memCache),this._collection=null,this._stage=null,this._edgeView=null,this._labeler=d.destroyMaybe(this._labeler),this._treeDebugger=d.destroyMaybe(this._treeDebugger),this._controller=d.destroyMaybe(this._controller),this._highlights=d.destroyMaybe(this._highlights),this._nodeId2Meta.clear(),this._nodeId2MetaReloading.clear(),this._crossfadeHelper=d.destroyMaybe(this._crossfadeHelper),this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle.remove(),this._visibleGeometryChangedSchedulerHandle=null),this._updatingHandles=d.destroyMaybe(this._updatingHandles)}_memEstimateTextureAdded(e){const t=e.usedMemory;return this._gpuMemoryEstimate+=t,this._texMemoryEstimate+=t,t}_memEstimateTextureRemoved(e){if(null!=e){const t=e.usedMemory;this._gpuMemoryEstimate-=t,this._texMemoryEstimate-=t}}_memEstimateGeometryAdded(e){const t=this._collection.getObjectGPUMemoryUsage(e);return this._gpuMemoryEstimate+=t,this._geoMemoryEstimate+=t,t}_memEstimateGeometryRemoved(e){const t=this._collection.getObjectGPUMemoryUsage(e);this._gpuMemoryEstimate-=t,this._geoMemoryEstimate-=t}isNodeLoaded(e){return this._nodeId2Meta.has(e)}isNodeReloading(e){return this._nodeId2MetaReloading.has(e)}get usedMemory(){let e=null!=this._labeler?this._labeler.usedMemory:0;return this._nodeId2Meta.forEach(t=>e+=null!=t?t.node.memory:0),this._nodeId2MetaReloading.forEach(t=>e+=null!=t?t.node.memory:0),e}get unloadedMemory(){return(null!=this._controller?this._controller.unloadedMemoryEstimate:0)+(null!=this._labeler?this._labeler.unloadedMemoryEstimate:0)}_labelingChanged(){if(!se.areLabelsVisible(this.i3slayer)||!this._supportsLabeling)return void(null!=this._labeler&&(this._labeler.destroy(),this._labeler=null));if(null!=this._labeler)return;const e=new X({view:this.view,layer:this.i3slayer,collection:this._collection,overrides:this.i3sOverrides,layerViewUid:this.uid});this._nodeId2Meta.forEach(t=>null!=t&&this._addMetaToLabeler(e,t)),this._labeler=e}_loadAsyncModule(e){return++this._asyncModuleLoading,e.then(e=>(--this._asyncModuleLoading,e),e=>{throw--this._asyncModuleLoading,e})}_modificationsChanged(){if(!this._i3sWasmLoaded&&this.hasModifications)return this._i3sWasmLoaded=te.initialize().then(()=>{this._i3sWasmLoaded=!0,this._modificationsChanged(),this.notifyUpdate()}),void this.notifyUpdate();if(!0!==this._i3sWasmLoaded)return;const e=e=>n.getLogger(this).error("set-modifications-error","Error when setting modifications:",e),t=this.uid,i=this.i3slayer.spatialReference,s=i.isGeographic,r=ee.toWasmModification(this._layerClippingArea,this._modifications,i);this._workerHandle.setModifications(t,r,s).catch(e);try{te.setModificationsSync({context:t,modifications:r,isGeodetic:s})}catch(t){e(t)}this._controller.modificationsChanged();const a=this.hasModifications?new h:null;this._nodeId2Meta.forEach((e,t)=>{null==e?(this._nodeId2Meta.delete(t),this._controller.updateLoadStatus(t,!1)):e.node.hasModifications?(this._updateFeatureIdCounts(e,-1),this._nodeId2Meta.delete(t),this._nodeId2MetaReloading.set(t,e)):null!=a&&a.push(e.node)}),this.notifyChange("elevationRange"),null!=a&&this._nodeId2MetaReloading.forEach(e=>a.push(e.node)),null!=a&&a.length>0&&(this.updateNodeModificationStatus(a),a.forAll(e=>{if(2!==e.imModificationImpact){const t=this._nodeId2Meta.get(e.index);this._controller.invalidateGeometryVisibility(e.index),null!=t?(this._updateFeatureIdCounts(t,-1),this._nodeId2Meta.delete(e.index),this._nodeId2MetaReloading.set(e.index,t),this.notifyChange("elevationRange")):this._nodeId2Meta.has(e.index)&&(this._nodeId2Meta.delete(e.index),this._controller.updateLoadStatus(e.index,!1))}})),this.clearMemCache(),this._controller.restartNodeLoading(),this._showModifications()}_showModifications(){if(null!=this._modificationGraphics&&(this.view.graphics.removeMany(this._modificationGraphics),this._modificationGraphics=null),!Ie.debugFlags.I3S_SHOW_MODIFICATIONS||0===this._modifications.length)return;const e={clip:[227,227,79,.8],mask:[227,139,79,.8],replace:[139,227,79,.8]},t={outline:{color:[255,255,255],width:1}};this._modificationGraphics=[];for(const i of this._modifications){const s=i.geometry;s.spatialReference=this.i3slayer.spatialReference;const a=new Y({...t,color:e[i.type]});this._modificationGraphics.push(new r({geometry:s,symbol:a}))}this.view.graphics.addMany(this._modificationGraphics)}_addMetaToLabeler(e,t){e.addNodeMeta(t,(e,t)=>this._createAttributes(e,t))}_contentVisibleChanged(e){e?(this.view.elevationProvider.register(this._elevationContext,this._elevationProvider),this._stage.view.sceneIntersectionHelper.addIntersectionHandler(this._intersectionHandler)):(this._removeAllNodeDataFromStage(),this.view.elevationProvider&&this.view.elevationProvider.unregister(this._elevationProvider),this._stage.view.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler))}getLoadedAttributes(e){const t=this._nodeId2Meta.get(e);if(null!=t?.attributeInfo)return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodeId2Meta.get(e);if(null!=t?.attributeInfo)return t.attributeInfo.attributeData}setAttributeData(e,t){const i=this._nodeId2Meta.get(e);null!=i?.attributeInfo&&(i.attributeInfo.attributeData=t,this._attributeValuesChanged(i))}async updateAttributes(e,t,i){const s=this._nodeId2Meta.get(e);null!=s&&(await this.i3sOverrides.applyAttributeOverrides(s.featureIds,t,i,this._controller.requiredAttributes),s.attributeInfo=t,this._controller.reschedule(()=>{this._nodeId2Meta.get(e)===s&&this._attributeValuesChanged(s)},i).catch(e=>{c.isAbortError(e)||n.getLogger(this).warn("Error while updating attribute values. Layer might not display correctly.",e)}))}_attributeValuesChanged(e){e.cachedRendererVersion=this._getInvalidRendererVersion(),e.appliedFilters=null,null!=this._labeler&&this._labeler.setNodeMetaAttributes(e,(e,t)=>this._createAttributes(e,t)),this._updateEngineObject(e)}clearMemCache(){null!=this._memCache&&this._memCache.clear(),this._addTasks.forEach(e=>e.allowMemCache=!1)}getVisibleNodes(){const e=new Array;return this._nodeId2Meta.forEach(t=>null!=t&&e.push(t.node)),e}getVisibleObbs(){const e=new Array;return this._nodeId2Meta.forEach(t=>t&&e.push(this._collection.getComponentObb(t.objectHandle))),e}getLoadedNodeIndices(e){this._nodeId2Meta.forEach((t,i)=>e.push(i)),this._nodeId2MetaReloading.forEach((t,i)=>e.push(i))}_preLoadBasis(){!o("disable-feature:i3s-basis")&&2&this.supportedTextureEncodings&&this.i3slayer.textureSetDefinitions?.some(e=>e.formats.some(e=>"basis"===e.format||"ktx2"===e.format))&&Fe.loadBasisTranscoder()}_getVertexBufferLayout(e,t){return Se.glLayout(Ee.createVertexBufferLayout(this._getGeometryParameters({hasTexture:Be(e.params.material),hasNormals:t.normal,hasRegions:t.uvRegion})))}_getObjectIdField(){return this.i3slayer.objectIdField||U.fallbackObjectIDAttribute}_getGlobalIdField(){return this.i3slayer.globalIdField}_findGraphicNodeAndIndex(e){const t=ye.attributeLookup(this.i3slayer.fieldsIndex,e.attributes,this._getObjectIdField());for(const e of this._nodeId2Meta.values()){const i=e?.featureIds.indexOf(t);if(null!=i&&i>=0)return{node:e.node,index:i}}return null}_getGraphicIndices(e,t){const i=this._nodeId2Meta.get(e.index);if(null==i)return[];const s=[],r=this._getObjectIdField(),a=this.i3slayer.fieldsIndex;for(const e of t){const t=ye.attributeLookup(a,e.attributes,r),o=i.featureIds.indexOf(t);-1!==o&&s.push(o)}return s}whenGraphicBounds(e){const t=this._findGraphicNodeAndIndex(e);if(!t)return Promise.reject();const i=this.getAABB(t.node.index,t.index);return null==i?Promise.reject():Promise.resolve({boundingBox:i,screenSpaceObjects:[]})}getAABBFromIntersectorTarget(e){return null==e.nodeIndex||null==e.componentIndex?null:this.getAABB(e.nodeIndex,e.componentIndex)}getAABB(e,t){const i=this._nodeId2Meta.get(e);if(null==i?.featureIds||t>=i.featureIds.length)return null;const s=i.objectHandle,r=le.boundingBoxCornerPoints(t,this._collection,s,N.newDoubleArray(24),0),a=this.view.renderSpatialReference,o=this.view.spatialReference;return F.projectBuffer(r,a,0,r,o,0)?T.fromBuffer(r):null}whenGraphicAttributes(e,t){return _e.whenGraphicAttributes(this.i3slayer,e,this._getObjectIdField(),t,()=>[...this._nodeId2Meta.values()].filter(a.isSome))}getGraphicFromIntersectorTarget(t,i){if(null==t.nodeIndex||null==t.componentIndex)return null;const s=this._nodeId2Meta.get(t.nodeIndex);if(null==s?.featureIds||t.componentIndex>=s.featureIds.length)return null;const r=this._createLayerGraphic(this._createAttributes(t.componentIndex,s));return i.defer?(i.defer(async()=>(r.geometry=(await new Promise((t,i)=>e(["./i3s/meshUtils"],t,i))).createMesh({layerView:this,nodeIndex:t.nodeIndex,featureIndex:t.componentIndex}),r)),null):r}_getCacheKey(e){return`${this._layerUrl}/v26/${e}${this._cacheKeySuffix}`}_getCacheKeySuffix(){const e=this.view.renderSpatialReference;return null==e?"@null":e===E.getSphericalPCPF(e)?"@ECEF":this.i3slayer.spatialReference.equals(e)?"":null!=e.wkid?`@${e.wkid}`:null}_getMemCacheKey(e,t=this.elevationOffset){return e+"#"+t}get _idbCacheEnabled(){return!this._controller.disableIDBCache&&!this.hasModifications&&0===this.elevationOffset&&null!=this._cacheKeySuffix}loadCachedGPUData(e){return null!=this._memCache?this._memCache.pop(this._getMemCacheKey(e)):null}deleteCachedGPUData(e){null!=e&&this._deleteComponentObject(e)}_cacheGPUData(e,t=this.elevationOffset){if(null==this._memCache)return void this._deleteComponentObject(e);const i=this._controller.indexDepth-e.node.level;this._memCache.put(this._getMemCacheKey(e.node.index,t),e,i)}loadMissingTextures(e,t,i,s){const r=e?.filter((e,i)=>{if(0===(e.usage&this.rendererTextureUsage))return!1;if(null==t)return!0;const s=he.selectEncoding(e.encodings,this.supportedTextureEncodings),r=t[i];return!!(null==r?.data||s&&r.encoding!==s.encoding)})??[];return 0===r.length?Promise.resolve(!1):i(r,s).then(i=>{let s=0;for(let r=0;r<e.length;r++)s<i.length&&i[s].id===e[r].id&&(t[r]=i[s],s++);return!0})}loadCachedNodeData(e,t,i){return this._idbCacheEnabled?this._idbCache.get(this._getCacheKey(e.id),t).then(s=>null==s?null:(s.globalTrafo=N.ensurePackedArray(s.globalTrafo),s.nodeVersion!==e.version?(this._idbCache.remove(this._getCacheKey(e.id)),null):(0===this.elevationInfo.mode&&(e.geometryObbInRenderSR=we.Obb.fromData(s.geometryObbData)),this.loadMissingTextures(s.requiredTextures,s.textureData,i,t).then(i=>(i&&this._idbCache.initialized&&null!=s.textureData&&(s.byteSize=We(s.transformedGeometry,s.textureData),s.textureData.every(qe)&&this._indexedDbSizeCheck(e,s)&&this._idbCache.put(this._getCacheKey(e.id),s).catch(t=>n.getLogger(this).warn(`Failed to update node with textures in IndexedDB cache: ${e.id}: ${t}`))),c.throwIfAborted(t),s))))):Promise.resolve(null)}addNode(e,t,i){return function(e){return"geometryData"in e}(t)?null==t.geometryBuffer?(this._addNodeMeta(e.index,null),Promise.resolve()):this._addData(e,t.attributeDataInfo,()=>this._transformNode(e,t,i).then(s=>this._safeReschedule(()=>{if(null==s)return e.hasModifications=!1,this._addCachedNodeData(e,null,i);e.hasModifications=s.transformedGeometry.hasModifications;const{obb:r,componentOffsets:a,featureIds:o,anchorIds:l,anchors:d,transformedGeometry:h}=s,c=N.ensurePackedArray(s.globalTrafo),u=M.set(Qe,r.center.x,r.center.y,r.center.z);M.transformMat4(u,u,c);const _=new we.Obb(u,[r.extents.x,r.extents.y,r.extents.z],C.fromValues(r.orientation.x,r.orientation.y,r.orientation.z,r.orientation.w));0===this.elevationInfo.mode&&(e.geometryObbInRenderSR=_),t.geometryData.componentOffsets=a,o&&(t.geometryData.featureIds=Array.from(o)),t.geometryData.anchorIds=l,t.geometryData.anchors=d;const g={nodeVersion:e.version,geometryData:t.geometryData,requiredTextures:t.requiredTextures,textureData:t.textureData,transformedGeometry:h,globalTrafo:c,geometryObbData:_.data,byteSize:We(h,t.textureData)};if(this._idbCacheEnabled&&this._idbCache.initialized&&this._indexedDbSizeCheck(e,g)){const t=null!=g.textureData?g.textureData.map(e=>qe(e)?e:null):null;this._idbCache.put(this._getCacheKey(e.id),{...g,textureData:t}).catch(t=>n.getLogger(this).warn(`Failed to store node in IndexedDB cache: ${e.id}: ${t}`))}return this._addCachedNodeData(e,g,i)},i))):Promise.reject()}getElevationRange(e){const t=new Ce.ElevationRange,i=this._controller,{index:s}=i;if(!s)return t;const{rootNode:r}=s;if(!r)return t;const a=this._nodeId2Meta,o=e[3],n=i.viewportQueries,l=this._planetRadiusInGlobalMode,{view:d}=this,{renderCoordsHelper:h}=d,c=h.referenceEllipsoid.radius,u=this._collection;return s.traverse(r,i=>{const{childrenLoaded:s}=i;if(0===s)return!1;const r=n.getAndUpdateVisibilityObbInRenderSR(i);let d=null,_=-1;if(r){if(_=r.radius,!r.intersectSphereWithMBS(e,_))return!1}else d=n.getServiceMbsInRenderSR(i),d&&(_=d[3]);if(_>=0&&o>=1*_)return null!=r?et(t,r,l):null!=d&&d[3]>=0&&tt(t,d,l),!1;const g=Ze;if(g.elevationRangeMin=1/0,g.elevationRangeMax=-1/0,(null!=r||null!=d)&&(null!=r?et(g,r,l):null!=d&&tt(g,d,l),g.elevationRangeMin>=t.elevationRangeMin&&g.elevationRangeMax<=t.elevationRangeMax))return!1;const p=a.get(i.index);if(p){const{geometryObbInRenderSR:s}=i;if(!s||s.intersectSphereWithMBS(e)){if(s&&o>0*s.radius)return et(t,s,l),!1;const{objectHandle:e}=p,i=u.getObjectTransform(e),r=h.getAltitude(i.position);u.expandRangeWithComponentObjectElevationRange(e,r,c,t)}}return s-(p?1:0)>0}),t}computeVisibilityObb(e){return _e.computeVisibilityObb(e,this.view.renderSpatialReference,this._controller.crsIndex,this.i3slayer.spatialReference,this.elevationOffset,this._modifications,this.view.renderCoordsHelper.sphericalPCPF)}_transformNode(e,t,i){const s=t.geometryData.geometries??[],r=new Array(s.length);for(let e=0;e<s.length;++e)r[e]=this._getVertexBufferLayout(s[e],t.geometryDescriptor);const a=this.i3slayer.normalReferenceFrame,o=t.normalReferenceFrame??a??"none",n=e.serviceMbsInIndexSR,l=this.elevationOffset,d=this._controller.crsIndex,h=this._controller.crsVertex,c=this.view.renderSpatialReference,u=ue.computeGlobalTransformation(n,l,o,d,c),_=A.getProjectorName(d,h),g=A.getProjectorName(h,c);if(null==_||null==g)return Promise.resolve(null);const p={context:this.uid,geometryBuffer:t.geometryBuffer,geometryData:t.geometryData,geometryDescriptor:t.geometryDescriptor,layouts:r,globalTrafo:u,mbs:n,obbData:e.serviceObbInIndexSR?.data,elevationOffset:l,needNormals:this._controller.isMeshPyramid,normalReferenceFrame:o,indexToVertexProjector:_,vertexToRenderProjector:g};return this._workerHandle.invoke(p,i)}get _supportsNodeCrossFading(){return!this.view?.stage?.renderer.shadowsEnabled}get nodeCrossfadingEnabled(){return this._supportsNodeCrossFading&&(this.lodCrossfadeinDuration>0||this.lodCrossfadeoutDuration>0||this.lodCrossfadeUncoveredDuration>0)}get nodeFadeoutEnabled(){return this._supportsNodeCrossFading&&this.lodCrossfadeoutDuration>0}_setNewNodeOpacity(e){const t=this.nodeCrossfadingEnabled?0:this.fullOpacity;this._setNodeOpacity(e,t)}addCachedGPUData(e,t,i){if(0===this.elevationInfo.mode&&(e.geometryObbInRenderSR=this._collection.getComponentObb(t.objectHandle).clone()),!this._controller.isGeometryVisible(e))return void this._cacheGPUData(t);null!=this._labeler&&this._addMetaToLabeler(this._labeler,t);const s=e.index;this._addNodeMeta(s,t),this.updateNodeState(s,i),this._collection.setObjectVisibility(t.objectHandle,!0),this._updateMaterial(t),this._setNewNodeOpacity(t),0!==this.elevationInfo.mode&&this._ensureElevationTask().schedule(s),this._updateEngineObject(t),this._highlights?.objectCreated(t),null!=this._treeDebugger&&this._treeDebugger.update()}addCachedNodeData(e,t,i,s){return this._addData(e,i,()=>this._addCachedNodeData(e,t,s))}async deleteCachedNodeData(e){if(this._idbCacheEnabled)return this._idbCache.remove(this._getCacheKey(e))}async _addCachedNodeData(e,t,i){if(!this.contentVisible||!this._controller.isGeometryVisible(e))return void this._removeNodeStageData(e.index,this.elevationOffset,this._nodeId2MetaReloading);if(null==t)return void this._addNodeMeta(e.index,null);const s=this._addTasks.get(e.index),{geometryData:r,transformedGeometry:a,globalTrafo:l}=t;await this.i3sOverrides.applyAttributeOverrides(r.featureIds,s.attributeInfo,i,this._controller.requiredAttributes);const d=null!=t.textureData?t.textureData.filter(e=>null!=e&&0!==(e.usage&this.rendererTextureUsage)):[];!o("disable-feature:i3s-basis")&&d.some(e=>null!=e&&(2===e.encoding||1===e.encoding))&&await Fe.loadBasisTranscoder(),e.memory=0;const{componentOffsets:h,geometries:c,featureIds:u,anchorIds:_,anchors:g}=r,p=this._collection,f=c[0],{layout:m,indices:C,interleavedVertexData:x,positionData:R,hasColors:E}=a,{material:V,geometryParameters:F}=this._materialParameters(f,m),A=h||new Uint32Array([0,C?C.length:x.byteLength/m[0].stride]),T={vertices:{data:x,count:x.byteLength/m[0].stride,layoutParameters:F},positionData:{positions:P.compactFloatArray(R.data),indices:j.compactIndices(R.indices)},indices:C,componentOffsets:A},H=f.transformation?I.clone(f.transformation):I.create();v.multiply(H,l,H);const N=v.getTranslation(w.create(),H),k=y.fromMat4(b.create(),H),L=this.view.renderSpatialReference,U=this.view.basemapTerrain.spatialReference,G=we.Obb.fromData(t.geometryObbData).center,B=[1,1,1];O.localLinearScaleFactors(G,L,B,U)||n.getLogger(this).errorOnce("Unsupported coordinate system for IM overlay");const q=w.create();D.projectVectorToVector(G,L,q,U);const W=b.create();y.invert(W,k);const z=w.create();M.transformMat3(z,M.sub(z,G,N),W);const $=q[0]-z[0]*B[0],K=q[1]-z[1]*B[1],Q=p.createObject(new Re.ObjectParameters(S.fromValues($,K,B[0],B[1]),new Oe.Transform(N,k),we.Obb.fromData(t.geometryObbData),T)),Y=2===F.textureCoordinateType,{textures:J,texturePromise:X}=this._initMaterialAndTextures(Q,V,d,Y,e);e.memory+=this._memEstimateGeometryAdded(Q),e.memory+=J.reduce((e,t)=>e+(null!=t?this._memEstimateTextureAdded(t):0),0);const Z=!!V.hasParametersFromSource,ee="blend"!==V.alphaMode&&V.metallicRoughness.baseColorFactor[3]>=1,te=new Ne(e,u,Q,this._getInvalidRendererVersion(),s.attributeInfo,{hasParametersFromSource:Z,isOpaque:ee},J,_,g);s.meta=te,this._hasTextures||=t.requiredTextures?.some(({usage:e})=>!!(19&e))||!!e.resources.texture,this._hasData=!0,this._hasColors||=E,this.notifyChange("hasTexturesOrVertexColors");const ie=this.slicePlaneEnabled;return Promise.all([this._addOrUpdateEdgeRendering(te),X]).then(([t,s])=>(this._addTasks.has(e.index)&&t?.updateObjectVisibility(te.objectHandle,!1).catch(e=>this._logEdgeViewError(e,this.i3slayer.title)),this._safeReschedule(()=>{const i=this._addTasks.get(e.index);if(!i)return;if(this._addNodeMeta(e.index,te),i.meta=null,!this.contentVisible)return void this._removeNodeStageData(e.index,this.elevationOffset);p.setObjectVisibility(Q,!0),t?.updateObjectVisibility(te.objectHandle,!0).catch(e=>this._logEdgeViewError(e,this.i3slayer.title)),te.attributeInfo=i.attributeInfo;const s=te.cachedRendererVersion!==this._rendererVersion,r=ie!==this.slicePlaneEnabled;this._updateElevationOffsets(te);const a=te.elevationOffsets;this._updateComponentData(te);const o=this._applyFiltersToNode(te);(s||null!=t&&(r||o||a))&&this._addOrUpdateEdgeRendering(te),null!=this._labeler&&this._addMetaToLabeler(this._labeler,te),this._visibleGeometryChanged(te,0),this._highlights?.objectCreated(te),this._updateMaterial(te),this._setNewNodeOpacity(te),null!=this._treeDebugger&&this._treeDebugger.update()},i))).catch(e=>{const{meta:t,allowMemCache:i}=s;throw s.meta=null,t&&i?this._cacheGPUData(t):t&&this._deleteComponentObject(t),e})}_addNodeMeta(e,t){if(this._removeNodeStageData(e,this.elevationOffset,this._nodeId2MetaReloading),this._nodeId2Meta.has(e)){n.getLogger(this).error("Removing duplicated node");const t=this._nodeId2Meta.get(e);t&&(this._deleteComponentObject(t),this._updateFeatureIdCounts(t,-1))}else this._controller.updateLoadStatus(e,!0);t&&(t.lodCrossfadeProgress=null,this.nodeCrossfadingEnabled&&$e(t.cachedEdgeMaterials,0),this._updateFeatureIdCounts(t,1)),this._nodeId2Meta.set(e,t),this.notifyChange("elevationRange")}_updateElevationOffsets(e){const t=this.view.renderSpatialReference,i=this._controller.crsIndex,s=this.elevationInfo,r=this.view.basemapTerrain,a=r.spatialReference,o=s.mode;if(null==t||null==a||0===o)return void(e.elevationOffsets=null);const n=this._collection.getObjectTransform(e.objectHandle);e.elevationOffsets=e.elevationOffsets??[];const l=Qe,d=Ye,h=2===o,c=this.view.renderCoordsHelper,u=e.featureIds.length,_=(()=>{if(e.cachedElevationAnchors)return e.cachedElevationAnchors;const s=N.newDoubleArray(3*u);e.cachedElevationAnchors=s;for(let r=0;r<u;r++){const o=3*r,h=e.anchorIds?.indexOf(r)??-1;e.anchors&&h>=0?(M.set(l,e.anchors[3*h],e.anchors[3*h+1],e.anchors[3*h+2]),M.add(l,l,k.getCenter(e.node.serviceMbsInIndexSR)),D.projectVectorToVector(l,i,l,a),s[o]=l[0],s[o+1]=l[1],s[o+2]=c.getAltitude(l)):(this._collection.getComponentAabb(e.objectHandle,r,d,!0),M.set(l,(d[0]+d[3])/2,(d[1]+d[4])/2,d[2]),M.transformMat3(l,l,n.rotationScale),M.add(l,l,n.position),s[o+2]=c.getAltitude(l),D.projectVectorToVector(l,t,l,a),s[o]=l[0],s[o+1]=l[1])}return s})(),g=s.offset,p=e.elevationOffsets;r.getElevations(_,u,(e,t)=>{const i=h?_[3*e+2]:0;p[e]=g+(t??0)-i})}_ensureElevationTask(){return null!=this._elevationTask||(this._elevationTask=new ae.I3SAsyncElevationUpdater(this.view.resourceController.scheduler,e=>this._controller.updateElevationChanged(e,this.view.basemapTerrain.spatialReference)?.filterInPlace(e=>null!=this._nodeId2Meta.get(e)),e=>this._nodeElevationAlignmentChanged(this._nodeId2Meta.get(e)),()=>this.elevationInfo?.mode)),this._elevationTask}_elevationInfoChanged(e,t){const i=0!==e.mode,s=!!t&&t!==e&&0!==t.mode;this._intersectionHandler.updateElevationAlignState(i,this.view.state.viewingMode),i&&!s&&this._controller.removeAllGeometryObbs(),this._nodeId2Meta.forEach(e=>this._nodeElevationAlignmentChanged(e))}_nodeElevationAlignmentChanged(e){null!=e&&(this._updateElevationOffsets(e),this._updateComponentData(e),this._updateEdgeRendering(e),null!=this._labeler&&this._labeler.updateLabelPositions(e),this._updateSnappingSources(e,2),this._elevationProvider.objectChanged(this._collection.getComponentObb(e.objectHandle)))}_safeReschedule(e,t){return c.throwIfAborted(t),this._controller.reschedule(e,t)}_materialParameters(e,t){const i=null!=e.params.material?e.params.material:he.defaultMaterial(),s=t.some(e=>"uvRegion"===e.name),r=t.some(e=>"normalCompressed"===e.name),a=Be(i);return{geometryParameters:this._getGeometryParameters({hasTexture:a,hasNormals:r,hasRegions:s}),material:i}}_initMaterialAndTextures(e,t,i,s,r){const a=this._stage.renderView,o=e=>{this._gpuMemoryEstimate-=e,this._texMemoryEstimate-=e,r.memory-=e},n=i.map(e=>he.createTexture(e,t,s,a,this._compressionTracker,o));this._stage.addTextures(n);let l=null;return this._collection.updateMaterial(e,e=>{l=he.configureMaterial(e,t,n,i,this.view.stage.renderView.textures,{rendererTextureUsage:this.rendererTextureUsage,usePBR:this._usePBR,isIntegratedMesh:this._isIntegratedMesh,slicePlaneEnabled:this.slicePlaneEnabled,viewSpatialReference:this.view.spatialReference}),this._updateMaterialOverlay(e)}),{textures:n,texturePromise:l}}_getGeometryParameters(e){return new Ee.GeometryParameters(this._hasVertexColors,e.hasTexture?e.hasRegions?2:1:0,e.hasNormals,this._shadeNormals,this._applySSAO)}_addData(e,t,i){let s=this._addTasks.get(e.index);if(s)s.attributeInfo=t;else{const r=c.createResolver();s=new ze(t,null,r.promise),this._addTasks.set(e.index,s),i().then(r.resolve,r.reject).then(()=>this._addTasks.delete(e.index)).catch(t=>{throw this._addTasks.delete(e.index),t})}return s.promise}_clearAddTasks(){this._addTasks.forEach(e=>{null!=e.meta&&(this._cacheGPUData(e.meta),e.meta=null)}),this._addTasks.clear()}_clippingAreaChanged(){const e=this.view.renderSpatialReference,t=this.i3slayer.spatialReference,i=H.create();this._renderClippingArea=Me.toBoundingRect(this.view.clippingArea,i,e)?i:null;const s=H.create();this._layerClippingArea=Me.toBoundingRect(this.view.clippingArea,s,t)?s:null,this._filterChange(),this._controller&&this._controller.updateClippingArea(this.view.clippingArea),this._isIntegratedMesh&&this._modificationsChanged()}get hasGeometryFilter(){return!1}_geometryFilterChange(){const e=this.hasGeometryFilter;this._controller.geometryFilterChanged(e),this._applyFilters(e),this._assertFeatureIdNodeCounts(e)}_assertFeatureIdNodeCounts(e){e&&!this._featureIdCounts?(this._featureIdCounts=rt(this._nodeId2Meta.values()),this._filteredIdCounts=rt(this._nodeId2Meta.values(),1),this._weaklyRemovedIdCounts=rt(this._nodeId2Meta.values(),2),this.addHandles(u.watch(()=>this._controller.updating,e=>{!e&&this._needFilterResolve&&(this.multiGeometryFilterResolve(),this._needFilterResolve=!1,this.notifyUpdate())},{sync:!0}),"updateFinished")):!e&&this._featureIdCounts&&(this._featureIdCounts=null,this._filteredIdCounts=null,this._weaklyRemovedIdCounts=null,this._mismatchShow=null,this._mismatchHide=null,this.removeHandles("updateFinished"),this._needFilterResolve=!1,this.notifyUpdate())}_updateFeatureIdCounts(e,t){this._featureIdCounts&&(this._needFilterResolve=!0,st(this._featureIdCounts,e.featureIds,t),st(this._filteredIdCounts,e.filteredIds,t),st(this._weaklyRemovedIdCounts,e.weaklyRemovedIds,t))}_updateFilteredIdCounts(e,t,i){this._filteredIdCounts&&(this._needFilterResolve=!0,st(this._filteredIdCounts,t,-1),st(this._filteredIdCounts,e.filteredIds,1),st(this._weaklyRemovedIdCounts,i,-1),st(this._weaklyRemovedIdCounts,e.weaklyRemovedIds,1))}_checkFeatureIdNodeCountInvariant(){const e=null!=this._featureIdCounts;if(this.hasGeometryFilter!==e&&n.getLogger(this).error("checkFeatureIdNodeCountInvariant()","LayerView should have feature id node counts if and only if it has a geometry filter",{layerView:this,hasNodeCounts:e}),!this._featureIdCounts||!this._filteredIdCounts)return;const t=rt(this._nodeId2Meta.values());l.equals(this._featureIdCounts,t)||n.getLogger(this).error("checkFeatureIdNodeCountInvariant()","Incorrect _featureIdCounts",{layerView:this,counts:this._featureIdCounts,expected:t});const i=rt(this._nodeId2Meta.values(),1);l.equals(this._filteredIdCounts,i)||n.getLogger(this).error("checkFeatureIdNodeCountInvariant()","Incorrect _filteredIdCounts",{layerView:this,counts:this._filteredIdCounts,expected:i});const s=rt(this._nodeId2Meta.values(),2);l.equals(this._weaklyRemovedIdCounts,s)||n.getLogger(this).error("checkFeatureIdNodeCountInvariant()","Incorrect _weaklyRemovedIdCounts",{layerView:this,counts:this._weaklyRemovedIdCounts,expected:i})}multiGeometryFilterResolve(){if(!this._featureIdCounts||!this._filteredIdCounts)return;let e=null,t=null;for(const[i,s]of this._filteredIdCounts){const r=this._featureIdCounts.get(i);r!==s&&(s+(this._weaklyRemovedIdCounts?.get(i)??0)===r?(e??=new Set,e.add(i)):(t??=new Set,t.add(i)))}g.equals(e,this._mismatchShow)&&g.equals(t,this._mismatchHide)||(this._mismatchShow=e,this._mismatchHide=t,this._nodeId2Meta.forEach(e=>{if(!e?.filteredIds)return;const t=it(e,this._mismatchShow,this._mismatchHide);this._collection.setAllComponentVisibilities(e.objectHandle,t),this._visibleGeometryChanged(e,2)}))}_filterChange(){this._applyFilters(this.hasGeometryFilter)}_applyFilters(e){this._filters=this.getFilters(),e?this._controller&&this._controller.requestUpdate():this._nodeId2Meta.forEach(e=>{e&&this._applyFiltersToNode(e)&&(this._addOrUpdateEdgeRendering(e),this._visibleGeometryChanged(e,2))})}getFilters(){const e=[],t=this._renderClippingArea;return null!=t&&e.push((e,i)=>this._boundingRectFilter(e,i,t)),e}addSqlFilter(e,t,i){if(null!=t){const s=t.fieldNames;e.push((e,r)=>this._sqlFilter(e,r,t,s,i))}}_sqlFilter(e,t,i,s,r){const a={},o=this._createLayerGraphic(a),n=this.i3slayer.objectIdField,l=t.featureIds,d=t.attributeInfo?.attributeData;s.every(e=>e===n||null!=d?.[e])&&_e.filterInPlace(e,l,e=>{a[n]=l[e];for(const t of s)t!==n&&(a[t]=d?oe.getCachedAttributeValue(d[t],e):null);try{return i.testFeature(o)}catch(e){return r(e),!1}})}_boundingRectNodeTest(e,t){return V.projectBoundingSphere(e.node.serviceMbsInIndexSR,this._controller.crsIndex,Ge,this.view.renderSpatialReference),_e.intersectBoundingRectWithMbs(t,Ge)}_boundingRectFeatureTest(e,t,i){return this._collection.getComponentAabb(e.objectHandle,t,Pe),T.toRect(Pe,je),H.intersects(i,je)}_boundingRectFilter(e,t,i){const s=this._collection,r=this._boundingRectNodeTest(t,i);if(3===r)return;if(0===r)return void(e.length=0);const a=s.getComponentCount(t.objectHandle);if(a.invisible+a.visible!==t.featureIds.length)return;const o=this._transformClippingArea(ke,i,t.objectHandle);_e.filterInPlace(e,t.featureIds,e=>this._boundingRectFeatureTest(t,e,o))}_transformClippingArea(e,t,i){const s=this._collection.getObjectTransform(i),r=s.position,a=s.rotationScale;return e[0]=(t[0]-r[0])/a[0],e[1]=(t[1]-r[1])/a[4],e[2]=(t[2]-r[0])/a[0],e[3]=(t[3]-r[1])/a[4],e}async _addOrUpdateEdgeRendering(e,t=!0){const i=e.objectHandle,{hasEdges:s,perFeatureEdgeMaterials:r}=this._getFilteredEdgeMaterials(e);s&&!this._edgeView&&(this._edgeView=await this._stage.renderer.loadEdgeView());const a=this._edgeView;if(!a)return null;const o=a.hasObject(i);if(s){if(o)return this.nodeCrossfadingEnabled&&$e(r,this.getNodeOpacity(e)),a.updateAllComponentMaterials(i,r,this.slicePlaneEnabled,t).catch(e=>this._logEdgeViewError(e,this.i3slayer.title)),a.updateObjectVisibility(i,!0).catch(e=>this._logEdgeViewError(e,this.i3slayer.title)),a.updateAllVerticalOffsets(i,e.elevationOffsets).catch(e=>this._logEdgeViewError(e,this.i3slayer.title)),a;const s=await this._collection.addEdges(i,a,r,this.slicePlaneEnabled,e.elevationOffsets);return e.edgeMemoryUsage=s,e.node.memory+=s,a}return o&&(e.node.memory-=e.edgeMemoryUsage,e.edgeMemoryUsage=0,a.removeObject(i)),null}_applyFiltersToNode(e){const{filteredIds:t,weaklyRemovedIds:i}=e,s=this._applyFiltersToNodeComponents(e);return this._updateFilteredIdCounts(e,t,i),s&&this._labeler?.applyFilterChange(e),s}_applyFiltersToNodeComponents(e){const t=this._collection,i=t.getComponentCount(e.objectHandle),s=null!=e.filteredIds,r=0===i.invisible;if(t.setAllComponentVisibilities(e.objectHandle,"all"),0===this._filters.length)return e.filteredIds=null,!r;if(null!=e.filteredIds&&e.appliedFilters===this._filters||(e.weaklyRemovedIds=null,e.filteredIds=function(e,t){const i=e.featureIds.slice();for(const s of t)if(s(i,e),0===i.length)break;return i.length===e.featureIds.length?e.featureIds:i}(e,this._filters),e.appliedFilters=this._filters),s&&e.filteredIds===e.featureIds&&(!this._mismatchHide||e.filteredIds.every(e=>!this._mismatchHide?.has(e))))return!r;const a=it(e,this._mismatchShow,this._mismatchHide);return t.setAllComponentVisibilities(e.objectHandle,a),!0}_removeAllNodeDataFromStage(e=this.elevationOffset){this._nodeId2Meta.forEach((t,i)=>this._removeNodeStageData(i,e)),this._nodeId2MetaReloading.forEach((t,i)=>this._removeNodeStageData(i,e,this._nodeId2MetaReloading)),this._elevationTask=d.destroyMaybe(this._elevationTask)}removeNode(e){const t=this.elevationOffset;this._removeNodeStageData(e,t),this._removeNodeStageData(e,t,this._nodeId2MetaReloading),null!=this._elevationTask&&this._elevationTask.remove(e)}_removeNodeStageData(e,t,i=this._nodeId2Meta){i.has(e)&&this._controller.updateLoadStatus(e,!1);const s=i.get(e);null!=s?(this._collection.setObjectVisibility(s.objectHandle,!1),null!=this._edgeView&&this._edgeView.hasObject(s.objectHandle)&&this._edgeView.updateObjectVisibility(s.objectHandle,!1).catch(e=>this._logEdgeViewError(e,this.i3slayer.title)),this._visibleGeometryChanged(s,1),null!=this._labeler&&this._labeler.removeNodeMeta(s),i.delete(e),this._highlights?.objectDeleted(s),i===this._nodeId2Meta?(this._updateFeatureIdCounts(s,-1),this._cacheGPUData(s,t),this.nodeCrossfadingEnabled&&this._crossfadeHelper.stopNodeFading(s)):this._deleteComponentObject(s),null!=this._treeDebugger&&this._treeDebugger.update()):i.delete(e)}_deleteComponentObject(e){if(null!=this._edgeView&&this._edgeView.removeObject(e.objectHandle),this._memEstimateGeometryRemoved(e.objectHandle),this._collection.destroyObject(e.objectHandle),e.textures)for(const t of e.textures)this._memEstimateTextureRemoved(t),this._stage.removeTexture(t)}updateNodeState(e,t){const i=this._nodeId2Meta.get(e);null!=i&&this._collection.updateMaterial(i.objectHandle,e=>e.polygonOffsetEnabled=0===t)}updateNodeIndex(e,t){if(this._nodeId2Meta.has(e)){const i=this._nodeId2Meta.get(e);this._nodeId2Meta.delete(e),this._nodeId2Meta.set(t,i),this.notifyChange("elevationRange")}const i=this._nodeId2MetaReloading.get(e);i&&(this._nodeId2MetaReloading.delete(e),this._nodeId2MetaReloading.set(t,i))}_invalidateAllSymbols(){this._rendererVersion=_e.addWraparound(this._rendererVersion,1),this._controller?.requestUpdate()}_getInvalidRendererVersion(){return _e.addWraparound(this._rendererVersion,-1)}async _rendererChange(e){if(this._currentRenderer=e,this.notifyChange("rendererTextureUsage"),this._rendererVersion=_e.addWraparound(this._rendererVersion,1),this._rendererFields=null,this._colorVariable=null,this._opacityVariable=null,this._invalidateAllSymbols(),e&&(this._rendererFields=await e.getRequiredFields(this.i3slayer.fieldsIndex)),this._updateSymbologyFields(),!this._arcade&&e&&"arcadeRequired"in e&&e.arcadeRequired&&(this._arcade=await K.loadArcade()),e&&"visualVariables"in e&&e.visualVariables)for(const t of e.visualVariables)"color"===t.type?this._colorVariable=t:"opacity"===t.type?this._opacityVariable=t:n.getLogger(this).warn(`Unsupported visual variable type for 3D Object Scene Services: ${t.type}`);if(e)for(const t of e.symbols)"mesh-3d"!==t.type&&n.getLogger(this).error(`Symbols of type '${t.type}' are not supported for 3D Object Scene Services.`);this._controller&&this._controller.requestUpdate()}_getCachedEdgeMaterials(e){return this._hasComponentData&&e.cachedRendererVersion!==this._rendererVersion&&this._updateCachedRendererData(e),e.cachedEdgeMaterials}_getComponentParameters(e){this._hasComponentData&&e.cachedRendererVersion!==this._rendererVersion&&this._updateCachedRendererData(e);const t=e.cachedSymbology;return(i,s)=>{const r=i*e.cachedSymbologyStride;x.set(s.externalColor,t[r]/255,t[r+1]/255,t[r+2]/255,t[r+3]/255);const a=this._stage.renderView.olidRenderHelper;if(a){const t=e.featureIds[i],r=this.sublayerId?`${this.layerViewUid}_${this.sublayerId}`:this.layerViewUid,o=z.isBasemapLayerView(this.view,this.uid);a.setUidToObjectAndLayerId(t,t,this.layerId,r,this.layerPopupEnabledAndHasTemplate&&!o,e.node.resources.attributes,i,this.sublayerId),s.olidColor=a.getObjectAndLayerIdColor({graphicUid:t,layerViewUid:r})}s.externalColorMixMode=15&t[r+4],s.castShadows=!!(16&t[r+4]),s.pickable=!!(32&t[r+4]),s.elevationOffset=e.elevationOffsets?.[i]??0,s.emissiveStrength=e.emissiveStrengths?.[i]??1,s.emissiveSource=e.emissiveSources?.[i]??0}}_getSymbolInfo(e,t){const i=e?.getSymbol(t,{arcade:this._arcade});if(!(i instanceof Q))return null;const s=i.id;if(this._symbolInfos.has(s))return this._symbolInfos.get(s);const r=_e.getSymbolInfo(i);return this._symbolInfos.set(s,r),r}_setSymbologyOverride(e,t){this._symbologyOverride!==e&&(this._symbologyOverride=e,this._symbologyOverrideFields=t,this._invalidateAllSymbols(),this._updateSymbologyFields())}_updateSymbologyFields(){this._symbologyFields=null!=this._symbologyOverrideFields&&this._symbologyOverrideFields.length>0?null!=this._rendererFields&&this._rendererFields.length>0?B.fixFields(this.i3slayer.fieldsIndex,[...this._rendererFields,...this._symbologyOverrideFields]):this._symbologyOverrideFields:this._rendererFields}_updateCachedRendererData(e){if(e.cachedRendererVersion=this._rendererVersion,!this._hasComponentData)return;const t=this._tmpAttributeOnlyGraphic,i={};t.attributes=i;const s=this._currentRenderer,r=e.attributeInfo?.attributeData,a=e.featureIds?this.i3slayer.objectIdField:null,o=null!=r&&null!=this._symbologyFields&&this._symbologyFields.length>0;let n=null,l=null;if(o&&null!=this._symbologyFields){n=[],l=[];for(const e of this._symbologyFields){const t=r[e];t&&(n.push(e),l.push(t))}}e.cachedSymbology||(e.cachedSymbology=L.newUByteArray(e.featureIds.length*e.cachedSymbologyStride));const d=new me.SymbologyInfo,h=this.fullOpacity,c=this.nodeCrossfadingEnabled?this.getNodeOpacity(e):h;let u=null,_=1,g=_e.transparentEdgeMaterial,p=0;for(let r=0;r<e.featureIds.length;r++){if(null!=a&&(i[a]=e.featureIds[r]),o&&n)for(let e=0;e<n.length;e++)i[n[e]]=oe.getCachedAttributeValue(l[e],r);const h=s?this._getSymbolInfo(s,t):null;let f,m;if(d.pickable=!0,s&&"visualVariables"in s){if(this._colorVariable){const e=W.getColor(this._colorVariable,t,{color:Ue,arcade:this._arcade});e&&(f=d.color,f[0]=e.r/255,f[1]=e.g/255,f[2]=e.b/255,f[3]=e.a??1,this._opacityVariable||null===e.a||(m=e.a))}this._opacityVariable&&(m=W.getOpacity(this._opacityVariable,t,{arcade:this._arcade}))}if(h?.material){const e=h.material;f=null==f||null==m?ie.overrideColor(f,m,e.color,e.alpha,He,d.color):ie.overrideColor(f,m,null,null,He,d.color)}f??=x.set(d.color,1,1,1,1);const y=h?.material;if(d.colorMixMode=y?.colorMixMode??1,d.edgeMaterial=h?.edgeMaterial,this._symbologyOverride?.(t,d),null!=this._nodeColorOverride&&(this._nodeColorOverride(e.node,f),d.colorMixMode=3),d.pickable&&=f[3]>=Te.alphaCutoff,d.castShadows=h?h.castShadows:d.pickable,null!=d.edgeMaterial){const t=f[3]>=1&&(e.material.isOpaque||3===d.colorMixMode)?1:0;d.edgeMaterial===u&&t===_||(g={...d.edgeMaterial,opacity:c,objectTransparency:t},u=d.edgeMaterial,_=t),e.cachedEdgeMaterials[r]=g}else e.cachedEdgeMaterials[r]=_e.transparentEdgeMaterial;e.cachedSymbology[p++]=Math.round(255*f[0]),e.cachedSymbology[p++]=Math.round(255*f[1]),e.cachedSymbology[p++]=Math.round(255*f[2]),e.cachedSymbology[p++]=Math.round(255*f[3]),e.cachedSymbology[p++]=d.colorMixMode|+d.castShadows<<4|+d.pickable<<5;const b=y?.emissive?.strength||Ve.emissiveStrengthDefault;b===Ve.emissiveStrengthDefault||e.emissiveStrengths||(e.emissiveStrengths=new Array(e.featureIds.length).fill(Ve.emissiveStrengthDefault)),e.emissiveStrengths&&(e.emissiveStrengths[r]=b);const v=y?.emissive?.source||0;0===v||e.emissiveSources||(e.emissiveSources=new Array(e.featureIds.length).fill(0)),e.emissiveSources&&(e.emissiveSources[r]=v)}}_getFilteredEdgeMaterials(e){const t=this._getCachedEdgeMaterials(e);this.nodeCrossfadingEnabled||$e(t,this.fullOpacity);const i=e.filteredIds;if(null==i)return{hasEdges:t.some(e=>e!==_e.transparentEdgeMaterial),perFeatureEdgeMaterials:t};let s=0,r=!1;const a=t.map((t,a)=>e.featureIds[a]!==i[s]?_e.transparentEdgeMaterial:(r=r||t!==_e.transparentEdgeMaterial,s++,t));return{hasEdges:r,perFeatureEdgeMaterials:a}}_updateComponentData(e){if(!this._hasComponentData)return;const t=e.objectHandle,i=this._getComponentParameters(e);this._collection.setComponentData(t,i),this._stage.renderView.requestRender()}_reloadAll(e=this.elevationOffset){this._removeAllNodeDataFromStage(e),null!=this._controller&&this._controller.restartNodeLoading()}_opacityChange(e){this.nodeCrossfadingEnabled&&this._crossfadeHelper.stopAllNodeFading(),this._nodeId2Meta.forEach(t=>{null!=t&&(this._collection.updateMaterial(t.objectHandle,t=>t.objectOpacity=e),$e(t.cachedEdgeMaterials,e),this._updateEdgeRendering(t))})}_updateMaterial(e){this._collection.updateMaterial(e.objectHandle,e=>{e.commonMaterialParameters.hasSlicePlane=this.slicePlaneEnabled,e.usePBR=this._usePBR,this._updateMaterialOverlay(e)})}_updateMaterialOverlay(e){}_updateEngineObject(e){this._updateComponentData(e),this._applyFiltersToNode(e),this._addOrUpdateEdgeRendering(e),this._visibleGeometryChanged(e,2)}_slicePlaneEnabledChange(e){this._intersectionHandler&&(this._intersectionHandler.slicePlaneEnabled=e),null!=this._labeler&&(this._labeler.slicePlaneEnabled=e),this._nodeId2Meta.forEach(t=>{null!=t&&(this._collection.updateMaterial(t.objectHandle,t=>t.commonMaterialParameters.hasSlicePlane=e),this._updateEdgeRendering(t,!1))})}_updatePBR(e){this._nodeId2Meta.forEach(t=>{null!=t&&this._collection.updateMaterial(t.objectHandle,t=>t.usePBR=e)}),this._hasLoadedPBRTextures=!0}get _usePBR(){return this._shadeNormals&&this.view.qualitySettings.physicallyBasedRenderingEnabled}_updateEdgeRendering(e,t=!0){null!=this._edgeView&&this._edgeView.hasObject(e.objectHandle)&&this._addOrUpdateEdgeRendering(e,t)}_forAllNodes(e){this._nodeId2Meta.forEach(e)}_ignoreClientNodeOverriddenFeatures(e){return this.i3sOverrides.hasGeometryChanges?(t,i,s)=>s.node.index>=0&&this.i3sOverrides.featureHasGeometryChanges(t)?1:e(t,i,s):e}_forAllFeatures(e,t,i){for(const s of this._nodeId2Meta.values()){if(null==s)continue;if(null!=t)switch(t(s.node.serviceMbsInIndexSR)){case 0:return;case 2:continue}let r=1;switch(i){case 1:r=this._forAllFeaturesOfNode(s,e);break;case 0:r=this._forAllVisibleFeaturesOfNode(s,e);break;case 2:r=this._forAllQueryableFeaturesOfNode(s,e)}if(0===r)return}}_forAllFeaturesOfNode(e,t){let i=1;const s=e.featureIds;for(let r=0;r<s.length;r++)if(i=t(s[r],r,e),0===i)return i;return i}_forAllVisibleFeaturesOfNode(e,t){let i=1;const s=e.featureIds;return this._collection.forEachVisibleComponent(e.objectHandle,r=>(i=t(s[r],r,e),1===i)),i}_forAllQueryableFeaturesOfNode(e,t){const i=this._ignoreClientNodeOverriddenFeatures(t);if(null==this._renderClippingArea)return this._forAllFeaturesOfNode(e,i);const s=this._boundingRectNodeTest(e,this._renderClippingArea);if(0===s)return 1;if(3===s)return this._forAllFeaturesOfNode(e,i);const r=e.featureIds,a=e.objectHandle,o=_e.getClipRect(this._renderClippingArea,this._collection.getObjectTransform(a));for(let t=0;t<r.length;t++){if(!this._boundingRectFeatureTest(e,t,o))continue;const s=i(r[t],t,e);if(0===s)return s}return 1}_createAttributes(e,t){const i={};null!=t.featureIds&&(i[this._getObjectIdField()]=t.featureIds[e]);const s=t.attributeInfo?.attributeData;if(null!=s)for(const t of Object.keys(s))i[t]=oe.getCachedAttributeValue(s[t],e);return i}_createGraphic(e,t){return this._createLayerGraphic(this._createAttributes(e,t))}highlight(e,t){const i=be.normalizeHighlightTarget(e);if(0===i.length)return be.emptyHighlightHandle;const s=Ae.getHighlightName(t),a=i[0]instanceof r?this._featureIdsFromGraphics(i):"number"==typeof i[0]?i:null;if(!a)return be.emptyHighlightHandle;const o=this._ensureHighlights(),{set:n,handle:l}=o.acquireSet(s);return o.setFeatureIds(n,a),l}_featureIdsFromGraphics(e){const t=this.i3slayer.fieldsIndex,i=this._getObjectIdField();return e.map(e=>ye.attributeLookup(t,e.attributes,i))}_ensureHighlights(){let e=this._highlights;return e||(e=new re({collection:this._collection,forAllFeatures:e=>this._forAllFeatures(e,null,1),forAllFeaturesOfNode:(e,t)=>this._forAllFeaturesOfNode(e,t)}),this._highlights=e),e}resetHighlights(){this._highlights=d.destroyMaybe(this._highlights)}_visibleGeometryChanged(e,t){this._elevationProvider&&(null==this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle=_.schedule(()=>{const{node:t}=e,i=t.visibilityObbInRenderSR??t.geometryObbInRenderSR??t.serviceObbInRenderSR;if(null!=i){const e=T.create();i.toAaBoundingBox(e),this.emit("visible-geometry-changed",new J.ContentGeometryUpdateEvent(e))}else this.emit("visible-geometry-changed");this._visibleGeometryChangedSchedulerHandle=null})),this._updateSnappingSources(e,t),this._elevationProvider.objectChanged(this._collection.getComponentObb(e.objectHandle)))}get performanceInfo(){return new Z.I3SMeshViewPerformanceInfo(this.usedMemory,this._nodeId2Meta.size,Math.round(this._gpuMemoryEstimate/1048576),Math.round(this._geoMemoryEstimate/1048576),Math.round(this._texMemoryEstimate/1048576),Math.round(this.unloadedMemory/1048576),this._idbCacheEnabled?Math.round(100*this._idbCache.getHitRate()):0)}checkInvariants(){}get test(){}getNodeOpacityByIndex(e){const t=this._nodeId2Meta.get(e);return this.getNodeOpacity(t)}getNodeOpacity(e){return null!=e?this._collection.getMaterial(e.objectHandle).objectOpacity:0}isNodeFullyFadedIn(e){return this._crossfadeHelper.isNodeFullyFadedIn(e)}getNodeCrossfadeMetaData(e){return this._nodeId2Meta.get(e)}getNodeComponentHandle(e){return this._nodeId2Meta.get(e)?.objectHandle}markNodeToRemove(e){this._controller&&this._controller.markNodeToRemove(e)}removeMarkedNodes(){this._controller&&this._controller.removeMarkedNodes()}foreachCrossfadeNode(e){this._nodeId2Meta.forEach(e)}fadeNode(e,t,i){if(!this.nodeCrossfadingEnabled)return;const s=this._nodeId2Meta.get(e);null!=s&&this._crossfadeHelper.fadeNode(e,s,t,i)}setNodeOpacityByIndex(e,t){const i=this._nodeId2Meta.get(e);null!=i&&this._setNodeOpacity(i,t)}_setNodeOpacity(e,t){this._collection.updateMaterial(e.objectHandle,e=>e.objectOpacity=t),this._setNodeEdgeOpacity(e,t)}_setNodeEdgeOpacity(e,t){if(null==this._edgeView||!e.cachedEdgeMaterials)return;$e(e.cachedEdgeMaterials,t);const i=e.objectHandle;this._edgeView.hasObject(i)&&this._edgeView.updateAllComponentOpacities(i,t).catch(e=>this._logEdgeViewError(e,this.i3slayer.title))}get hasModifications(){return this._isIntegratedMesh&&null!=this._layerClippingArea||this._modifications&&this._modifications.length>0}updateNodeModificationStatus(e){const t=e.length;if(!this.hasModifications||t<=0||!0!==this._i3sWasmLoaded)return;const i=this.uid,s=function(e){if(0===e.length)return;const t=10*e.length,i=new Float64Array(t);let s=0;return e.forAll(e=>{let t=e.serviceObbInIndexSR;null==t&&(t=Le,t.center=k.getCenter(e.serviceMbsInIndexSR),t.halfSize=[e.serviceMbsInIndexSR[3],e.serviceMbsInIndexSR[3],e.serviceMbsInIndexSR[3]]);const r=t.data;i[s++]=r[0],i[s++]=r[1],i[s++]=r[2],i[s++]=r[3],i[s++]=r[4],i[s++]=r[5],i[s++]=r[6],i[s++]=r[7],i[s++]=r[8],i[s++]=r[9]}),i}(e);if(s){const t={context:i,buffer:s.buffer};te.filterObbsForModificationsSync(t);const r=new Float64Array(s.buffer);e.forAll((e,t)=>{const i=r[t],s=te.interpretObbModificationResults(i);e.imModificationImpact=s,0!==s&&this._controller.invalidateGeometryVisibility(e.index)})}}notifyUpdate(){this.notifyChange("updating")}notifyLODUpdate(){this._controller.notifyLODUpdate()}isUpdating(){return!(!this._controller||!this._controller.updating)||!!this._visibleGeometryChangedSchedulerHandle||null!=this._labeler&&this._labeler.updating||this._crossfadeHelper?.updating||this._i3sWasmLoaded instanceof Promise||this._asyncModuleLoading>0||null!=this._elevationTask&&this._elevationTask.readyToRun||this._needFilterResolve||this._compressionTracker.compressing}trackSnappingSources(e){const t={events:e,fetchEdgeLocations:async(e,t,i)=>{const s=this._nodeId2Meta.get(e);if(null==s)throw new Error("invalid-node");const{origin:r,buffer:a}=await this._collection.extractEdgeInformation(s.objectHandle,t,i);return this._snappingLocationsApplyElevation(s,a,r),{type:"components",objectIds:s.featureIds,locations:a,origin:r}},remove:()=>a.removeUnordered(this._snappingSourcesTrackers,t)};return this._snappingSourcesTrackers.push(t),this._nodeId2Meta.forEach((t,i)=>{if(null==t)return;const s=this._controller.getRenderMbs(t.node);s&&e.add(i,s)}),t}_snappingLocationsApplyElevation(e,t,i){if(!e.elevationOffsets||0===this.elevationInfo.mode)return;const s=t.position0,r=t.position1,a=t.componentIndex,o=w.create(),n=w.create(),l=(e,t)=>{M.add(e,e,i),this.view.renderCoordsHelper.worldUpAtPosition(e,n),M.add(e,e,M.scale(n,n,t)),M.subtract(e,e,i)};for(let t=0;t<s.count;t++){const i=e.elevationOffsets[a.get(t)];s.getVec(t,o),l(o,i),s.setVec(t,o),r.getVec(t,o),l(o,i),r.setVec(t,o)}}_updateSnappingSources(e,t){const{index:i}=e.node,s=this._controller.getRenderMbs(e.node);if(null!=s)for(const e of this._snappingSourcesTrackers)1!==t&&2!==t||e.events.remove(i),0!==t&&2!==t||e.events.add(i,s)}_logEdgeViewError(e,t){c.isAbortError(e)||n.getLogger(this).warn("Error while processing edges. Edges on this layer might not display correctly",t,e)}_indexedDbSizeCheck(e,t){return t.byteSize>104857600?(n.getLogger(this).warn(`Node is too big to store in IndexedDB cache: ${e.id} (${t.byteSize} bytes)`),!1):t.byteSize>0}};return i.__decorate([f.property()],p.prototype,"_hasLoadedPBRTextures",void 0),i.__decorate([f.property()],p.prototype,"_asyncModuleLoading",void 0),i.__decorate([f.property()],p.prototype,"_visibleGeometryChangedSchedulerHandle",void 0),i.__decorate([f.property()],p.prototype,"view",void 0),i.__decorate([f.property()],p.prototype,"i3slayer",void 0),i.__decorate([f.property()],p.prototype,"_controller",void 0),i.__decorate([f.property()],p.prototype,"_labeler",void 0),i.__decorate([f.property()],p.prototype,"updating",void 0),i.__decorate([f.property()],p.prototype,"suspended",void 0),i.__decorate([f.property()],p.prototype,"contentVisible",null),i.__decorate([f.property({readOnly:!0})],p.prototype,"legendEnabled",null),i.__decorate([f.property(xe.updatingProgress)],p.prototype,"updatingProgress",void 0),i.__decorate([f.property()],p.prototype,"updatingProgressValue",null),i.__decorate([f.property()],p.prototype,"hasTexturesOrVertexColors",null),i.__decorate([f.property()],p.prototype,"rendererTextureUsage",null),i.__decorate([f.property()],p.prototype,"elevationOffset",null),i.__decorate([f.property()],p.prototype,"elevationInfo",null),i.__decorate([f.property({type:Boolean})],p.prototype,"slicePlaneEnabled",void 0),i.__decorate([f.property()],p.prototype,"supportedTextureEncodings",null),i.__decorate([f.property({type:[q]})],p.prototype,"_modifications",void 0),i.__decorate([f.property({readOnly:!0})],p.prototype,"clientGeometry",null),i.__decorate([f.property()],p.prototype,"elevationRange",null),i.__decorate([f.property()],p.prototype,"fullExtent",null),i.__decorate([f.property()],p.prototype,"_elevationTask",void 0),i.__decorate([f.property({readOnly:!0})],p.prototype,"_usePBR",null),p=i.__decorate([m.subclass("esri.views.3d.layers.I3SMeshView3D")],p),p},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});