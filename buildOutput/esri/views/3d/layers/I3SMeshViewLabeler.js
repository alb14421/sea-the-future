// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/arrayUtils","../../../core/has","../../../core/lang","../../../core/mathUtils","../../../core/maybe","../../../core/reactiveUtils","../../../core/uid","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/accessorSupport/decorators/subclass","../../../core/accessorSupport/diffUtils","../../../geometry/projection/projectBuffer","../../../geometry/support/aaBoundingBox","../../../geometry/support/DoubleArray","../../../layers/graphics/dehydratedPoint","../../../renderers/support/RenderingInfo","../../../symbols/PointSymbol3D","./graphics/Graphics3DCore","./graphics/Graphics3DScaleVisibility","./i3s/I3SGeometryUtil","../support/LimitGraphicsMap","../../support/layerViewUtils"],function(e,t,r,a,i,o,s,n,l,c,d,p,h,u,y,f,g,_,b,m,I,v,w,G,C){"use strict";class M{constructor(e,t){this.meta=e,this.index=t}}class E{constructor(e,t){this.graphic=e,this.geometry=t,this.components=[],this.overridesDirty=!1}}e.default=class extends r{get updating(){return this._graphicsCore?.updating??!1}constructor(e){super(e),this.loadedGraphics=new G.LimitGraphicsMap(5e4),this.slicePlaneEnabled=!1,this._renderingInfo=new b.RenderingInfo(null,new m),this._featuresMap=new Map}initialize(){const e=this.view.basemapTerrain;this._graphicsCore=new I.Graphics3DCore({owner:this,layer:this.layer,preferredUpdatePolicy:0,elevationFeatureExpressionEnabled:!1,graphicSymbolSupported:!1,getRenderingInfoWithoutRenderer:!0,hasZ:!0,hasM:!1,componentFactories:{deconflictor:e=>this.view.deconflictor.addGraphicsOwner(e),labeler:(e,t)=>this.view.labeler.addGraphicsOwner(e,t,{emptySymbolLabelSupported:!0,elevationInfoOverride:{mode:"absolute-height",offset:0},disablePlacement:{logEntityDescription:"3D Object Scene Layer features"}}),scaleVisibility:C.hasLayerBasedScaleVisibility()?null:(t,r)=>new v.Graphics3DScaleVisibility({graphicsCoreOwner:this,layer:this.layer,queryGraphicUIDsInExtent:r,graphicsCore:t,basemapTerrain:e,layerScaleEnabled:!1})}}),this._graphicsCore.initializePromise.then(()=>this._graphicsCore.startCreateGraphics()).catch(()=>{}),this.addHandles(l.watch(()=>this.layer.labelingInfo,(e,t)=>{u.diff(e,t)&&this._graphicsCore.updateLabelingInfo()}))}destroy(){this._graphicsCore=n.destroyMaybe(this._graphicsCore),this.loadedGraphics=n.destroyMaybe(this.loadedGraphics),this.view=null}addNodeMeta(e,t){let r=0;const a=e.filteredIds,i=this.view.spatialReference,o=[];for(let s=0;s<e.featureIds.length;s++){const n=e.featureIds[s];let l=null==a;if(a&&r<a.length&&n===a[r]&&(l=!0,r++),!this._enabledForFeatureInNode(e,s))continue;const d=this._featuresMap.get(n);if(d){d.components.push(new M(e,s)),this._updateLabelPosition(n);continue}const p=t(s,e),h=_.makeDehydratedPoint(0,0,0,i),u={objectId:n,uid:c.generateUID(),attributes:p,visible:l,geometry:h},y=new E(u,h);y.components.push(new M(e,s)),this._featuresMap.set(n,y),this._updateLabelGeometry(n),o.push(u)}this.loadedGraphics.addMany(o)}updateLabelPositions(e){const t=this.view.renderCoordsHelper;this._forEachGraphic(e,(r,a,i)=>{const o=this._graphicsCore.getGraphics3DGraphicById(a.uid);null!=o&&this._updateLabelGeometry(e.featureIds[r])&&o.alignWithAbsoluteElevation(i.z??0,t,!1)})}setNodeMetaAttributes(e,t){const r=new Array;this._forEachGraphic(e,(a,i)=>{const s=t(a,e);o.equalsShallow(i.attributes,s)||(i.attributes=s,r.push(i.uid))}),this._graphicsCore.updateLabelingInfo(r)}applyFilterChange(e){this._forEachFeature(e,(t,r,a)=>{if(!this._enabledForFeatureInNode(e,t)){const a=e.featureIds[t];switch(this._removeFeature(r,e,t)){case 2:this.loadedGraphics.removeManyByObjectId([a]);break;case 1:this._updateLabelPosition(a)}return}const i=r.graphic,o=i.visible;o!==a&&(i.visible=a,P.graphic=i,P.property="visible",P.oldValue=o,P.newValue=a,this._graphicsCore.graphicUpdateHandler(P),P.graphic=null)})}removeNodeMeta(e){const t=[];this._forEachGraphic(e,r=>{const a=e.featureIds[r],i=this._featuresMap.get(a);if(i)switch(this._removeFeature(i,e,r)){case 1:this._updateLabelPosition(a);break;case 2:t.push(a)}}),this.loadedGraphics.removeManyByObjectId(t)}_removeFeature(e,t,r){const i=e.components.length;return a.filterInPlace(e.components,e=>!(e.meta===t&&e.index===r)),0===e.components.length?(this._featuresMap.delete(t.featureIds[r]),2):i!==e.components.length?1:0}getRenderingInfo(){return this._renderingInfo}notifyGraphicGeometryChanged(){}notifyGraphicVisibilityChanged(){}_updateLabelPosition(e){const t=this._featuresMap.get(e);t&&this._updateLabelGeometry(e)&&(this.loadedGraphics.removeManyByObjectId([e]),this.loadedGraphics.addMany([t.graphic]))}_updateLabelGeometry(e){const t=this._featuresMap.get(e);if(!t)return!1;const r=t.geometry,a=this.view.spatialReference,i=this.view.renderCoordsHelper,o=r.x,n=r.y,l=r.z??0,c=t.components.length,d=g.newDoubleArray(c*w.boundingBoxCornersPointsStride);let p=0;for(const{meta:e,index:r}of t.components)w.boundingBoxCornerPoints(r,this.collection,e.objectHandle,d,p),p+=w.boundingBoxCornersPointsStride;return y.projectBuffer(d,i.spatialReference,0,d,a,0),f.fromBuffer(d,L),r.x=(L[0]+L[3])/2,r.y=(L[1]+L[4])/2,r.z=L[5],!s.floatEqualUlp(r.x,o)||!s.floatEqualUlp(r.y,n)||!s.floatEqualUlp(r.z,l)}_forEachGraphic(e,t){this._forEachFeature(e,(r,{graphic:a,geometry:i},o)=>{this._enabledForFeatureInNode(e,r)&&t(r,a,i,o)})}_forEachFeature(e,t){let r=0;for(let a=0;a<e.featureIds.length;a++){const i=this._featuresMap.get(e.featureIds[a]);let o=null==e.filteredIds;e.filteredIds&&e.filteredIds[r]===e.featureIds[a]&&(o=!0,r++),i&&t(a,i,o)}}_enabledForFeatureInNode(e,t){return e.node.index<0||!this.overrides?.featureHasGeometryChanges(e.featureIds[t])}get updatePolicy(){return this._graphicsCore.effectiveUpdatePolicy}get usedMemory(){return this._graphicsCore.usedMemory}get unloadedMemoryEstimate(){return this._graphicsCore.unprocessedMemoryEstimate}get test(){}},t.__decorate([d.property()],e.default.prototype,"view",void 0),t.__decorate([d.property()],e.default.prototype,"layer",void 0),t.__decorate([d.property()],e.default.prototype,"collection",void 0),t.__decorate([d.property()],e.default.prototype,"loadedGraphics",void 0),t.__decorate([d.property()],e.default.prototype,"overrides",void 0),t.__decorate([d.property()],e.default.prototype,"layerViewUid",void 0),t.__decorate([d.property()],e.default.prototype,"updating",null),t.__decorate([d.property()],e.default.prototype,"slicePlaneEnabled",void 0),t.__decorate([d.property()],e.default.prototype,"_graphicsCore",void 0),e.default=t.__decorate([h.subclass("esri.views.3d.layers.I3SMeshViewLabeler")],e.default);const P={graphic:null,property:null,oldValue:null,newValue:null},L=f.create();return e.default});