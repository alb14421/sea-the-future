// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../Color","../../../../core/unitUtils","../../../../chunks/earcut","../../../../core/libs/gl-matrix-2/math/vec2","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec42","../../../../core/libs/gl-matrix-2/math/common","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/FloatArray","./ElevationAligners","./elevationAlignmentUtils","./Graphics3DDrapedGraphicLayer","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolLayer","./polygonUtils","../../support/renderInfoUtils/polygon","../../webgl-engine/lib/Object3D","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/materials/WaterMaterial","../../webgl-engine/materials/internal/waterMaterialUtils"],function(e,t,r,n,a,i,o,s,l,c,h,d,u,p,y,g,m,v,x,f,D,_){"use strict";const b=["polyline","polygon","extent"];class S extends g.Graphics3DSymbolLayer{static{this.unitSizeOfTexture=100}static{this.elevationModeChangeTypes={definedChanged:2,staysOnTheGround:0,onTheGroundChanged:2}}constructor(e,t,r,n){super(e,t,r,n)}async doLoad(){}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,b,this.symbolLayer.type))return null;const r=this.setGraphicElevationContext(t);return this.ensureDrapedStatus("on-the-ground"===r.mode),this.ensureMaterial(),this.draped?this._createAsOverlay(t):this._createAs3DShape(t,r,t.uid)}ensureMaterial(){if(this._materials[0])return;const e=new D.Parameters,r=t.toUnitRGBA(this.symbolLayer.color);r[3]*=this._getLayerOpacity(),e.color=r,e.transparent=r[3]<1||this.needsDrivenTransparentPass,e.waveDirection=null!=this.symbolLayer.waveDirection?w(this.symbolLayer.waveDirection):i.fromValues(0,0);const n=this.symbolLayer.waveStrength+"-"+this.symbolLayer.waterbodySize,a=_.wavePresets[n];e.waveStrength=a.waveStrength,e.waveTextureRepeat=a.textureRepeat,e.waveVelocity=a.waveVelocity,e.flowStrength=a.perturbationStrength,e.hasSlicePlane=this._context.slicePlaneEnabled,e.draped=this.draped,this._materials[0]=new D.WaterMaterial(e,this._context)}layerOpacityChanged(){if(null==this._materials[0])return;const e=this._materials[0].parameters.color,t=this.symbolLayer.color.a*this._getLayerOpacity(),r=t<1||this.needsDrivenTransparentPass;this._materials[0].setParameters({color:[e[0],e[1],e[2],t],transparent:r})}layerElevationInfoChanged(e,t,r){const n=this._elevationContext.mode,a=u.elevationModeChangeUpdateType(S.elevationModeChangeTypes,r,n);if(1!==a)return a;const i=u.needsElevationUpdates2D(n);return this.updateGraphics3DGraphicElevationInfo(e,t,()=>i)}slicePlaneEnabledChanged(){return this._materials[0]?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),!0}physicalBasedRenderingChanged(){return!0}get needsDrivenTransparentPass(){return!1}_createAs3DShape(e,t,r){const n=m.geometryAsPolygon(e.geometry);if(null==n)return null;const a=v.geometryToRenderInfo(n,this._context.elevationProvider,this._context.renderCoordsHelper,t),i=a.position.length/3,o=h.newFloatArray(2*i);G(o,a.mapPositions,i,this._context.elevationProvider.spatialReference);const s=new O(a,o,this._context.layerViewUid,e.uid);if(s.olidColor=this._context.stage.renderView?.getObjectAndLayerIdColor(s),this._create3DShapeGeometries(s),this._logGeometryCreationWarnings(s.renderData,n.rings,"rings","WaterSymbol3DLayer"),0===s.outGeometries.length)return null;const l=new x.Object3D({geometries:s.outGeometries,castShadow:!1,layerViewUid:this._context.layerViewUid,graphicUid:r}),c=new y.Graphics3DObject3DGraphicLayer(this,l,null,d.perVertexElevationAligner,t);return c.alignedSampledElevation=s.renderData.sampledElevation,c.needsElevationUpdates=u.needsElevationUpdates2D(t.mode),c}_create3DShapeGeometries(e){const t=e.renderData.polygons,r=e.uvCoords;for(const{count:a,index:i,position:o,mapPositions:s,holeIndices:c}of t){if(null!=this._context.clippingExtent&&(l.fromBuffer(s,L),!l.intersectsClippingArea(L,this._context.clippingExtent)))continue;const t=n.earcut(s,c,3);if(0===t.length)continue;const d=h.floatSubArray(r,2*i,2*a),u=m.createWaterGeometry({material:this._materials[0],indices:t,mapPositions:s,attributeData:{position:o,uv0:d}},e.olidColor);e.outGeometries.push(u)}}_createAsOverlay(e){const t=m.geometryAsPolygon(e.geometry);if(null==t)return null;this._materials[0].renderPriority=this._renderPriority;const r=v.geometryToRenderInfoDraped(t,this._context.overlaySR),n=r.position.length/3,a=h.newFloatArray(2*n);G(a,r.position,n,this._context.overlaySR);const i=new B(r,a,this._context.layerViewUid,e.uid);return i.olidColor=this._context.stage.renderView?.getObjectAndLayerIdColor(i),i.outBoundingBox=l.empty(),this._createAsOverlayWater(i),this._logGeometryCreationWarnings(i.renderData,t.rings,"rings","WaterSymbol3DLayer"),0===i.outGeometries.length?null:new p.Graphics3DDrapedGraphicLayer(this,i.outGeometries,i.outBoundingBox,this._context.drapeSourceRenderer)}_createAsOverlayWater(e){const t=e.uvCoords,r=e.renderData.polygons;for(const{position:a,holeIndices:i,index:o,count:s}of r){if(l.fromBuffer(a,L),!l.intersectsClippingArea(L,this._context.clippingExtent))continue;l.expandWithAABB(e.outBoundingBox,L);const r=n.earcut(a,i,3);if(0===r.length)continue;const c=h.floatSubArray(t,2*o,2*s),d=m.createWaterGeometry({material:this._materials[0],indices:r,attributeData:{position:a,uv0:c}},e.olidColor);e.outGeometries.push(new f.RenderGeometry(d,e))}}test(){return{...super.test(),create3DShape:e=>this._createAs3DShape(e.graphic,e.elevationContext,e.graphicUid),ensureMaterial:()=>this.ensureMaterial()}}}function w(e){const t=i.create(),r=s.toRadian(e);return t[0]=Math.sin(r),t[1]=Math.cos(r),t}function G(e,t,n,i){const s=r.getMetersPerUnitForSR(i);c.empty(P);for(let e=0;e<n;e++)a.set(A,t[3*e],t[3*e+1]),c.expandPointInPlace(P,A);o.scale(P,P,s);const l=P[0]%S.unitSizeOfTexture,h=P[1]%S.unitSizeOfTexture;C[0]=P[0]-l,C[1]=P[1]-h;for(let r=0;r<n;r++)e[2*r]=(t[3*r]*s-C[0])/S.unitSizeOfTexture,e[2*r+1]=(t[3*r+1]*s-C[1])/S.unitSizeOfTexture}const C=i.create(),P=c.create(),A=i.create(),L=l.create();class O extends m.PolygonCreationDataBase{constructor(e,t,r,n){super(e,r,n),this.uvCoords=t}}class B extends m.PolygonCreationDataBase{constructor(e,t,r,n){super(e,r,n),this.uvCoords=t}}e.Graphics3DWaterSymbolLayer=S,e.headingVectorFromAngle=w,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});