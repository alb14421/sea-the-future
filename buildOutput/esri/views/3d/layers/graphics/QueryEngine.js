// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/Extent","../../../../geometry/support/typeUtils","../../../../layers/graphics/data/QueryEngine","../../../../layers/support/FieldsIndex","../../../../rest/support/FeatureSet","../../../../rest/support/Query","../../../2d/layers/features/layerAdapters/featureServiceUtils","./QueryEngineCache"],function(e,t,r,n,a,s,u,o,i,y,c,l,p,d,h,g){"use strict";const Q=c.QueryEngine;e.QueryEngine=class extends r{constructor(e){super(e),this._dataQueryEngineInstance=null}destroy(){this.clear()}get layer(){return this.context.layer}get spatialReference(){return this.context.spatialReference}get _queryGeometryType(){switch(this.layer.geometryType){case"multipoint":case"point":case"polygon":case"polyline":return this.layer.geometryType;case"mesh":return"polygon";default:return}}get defaultQueryJSON(){return new d({outSpatialReference:this.spatialReference}).toJSON()}clear(){return!!this._dataQueryEngineInstance&&(this._dataQueryEngineInstance.destroy(),this._dataQueryEngineInstance=null,!0)}async executeQueryForIdSet(e,t,r){return this._dataQueryEngine.executeQueryForIdSet(this._ensureQueryJSON(e,t),r)}async executeQueryForCount(e,t){return this._dataQueryEngine.executeQueryForCount(this._ensureQueryJSON(e),t)}async executeQueryForExtent(e,t){const{count:r,extent:n}=await this._dataQueryEngine.executeQueryForExtent(this._ensureQueryJSON(e),t);return{count:r,extent:i.fromJSON(n)}}async executeQueryForIds(e,t){return this._dataQueryEngine.executeQueryForIds(this._ensureQueryJSON(e),t)}async executeQueryForLatestObservations(e,t){const r=await this._dataQueryEngine.executeQueryForLatestObservations(this._ensureQueryJSON(e),t),n=p.fromJSON(r);return n.features.forEach(e=>{e.layer=this.layer,e.sourceLayer=this.layer}),n}async executeQuery(e,t){const r=await this._dataQueryEngine.executeQuery(this._ensureQueryJSON(e),t),n=p.fromJSON(r);return n.features.forEach(e=>{e.layer=this.layer,e.sourceLayer=this.layer}),n}_ensureQueryJSON(e,t){let r=this.defaultQueryJSON;if(null!=e&&("outSpatialReference"in e&&!e.outSpatialReference&&(e.outSpatialReference=this.spatialReference),r=e.toJSON(),r.cacheHint=!0),null!=t){const e=t.geometries.map(e=>e.toJSON()).reduce((e,t)=>(e.rings=e.rings.concat(t.rings),e));r={...r,cacheHint:!0,sceneFilter:{...t,geometry:e}}}return r}get _dataQueryEngine(){if(this._dataQueryEngineInstance)return this._dataQueryEngineInstance;const{priority:e,layer:t}=this,r="timeInfo"in t&&t.timeInfo?.toJSON()||null,n=h.createFeatureIdInfo(t),a=y.featureGeometryTypeKebabDictionary.toJSON(this._queryGeometryType),s=t.fieldsIndex?.toJSON()||new l([]),u=this.spatialReference.toJSON(),{hasZ:o,hasM:i,featureStore:c,scheduler:p,memoryController:d}=this.context,f=new g.QueryEngineCache(d);return this._dataQueryEngineInstance=new Q({hasZ:o,hasM:i,geometryType:a,fieldsIndex:s,timeInfo:r,spatialReference:u,featureIdInfo:n,featureStore:c,scheduler:p,cache:f,priority:e}),this._dataQueryEngineInstance}},t.__decorate([n.property({constructOnly:!0})],e.QueryEngine.prototype,"context",void 0),t.__decorate([n.property({constructOnly:!0})],e.QueryEngine.prototype,"priority",void 0),t.__decorate([n.property()],e.QueryEngine.prototype,"layer",null),t.__decorate([n.property()],e.QueryEngine.prototype,"spatialReference",null),t.__decorate([n.property()],e.QueryEngine.prototype,"_queryGeometryType",null),t.__decorate([n.property()],e.QueryEngine.prototype,"defaultQueryJSON",null),e.QueryEngine=t.__decorate([o.subclass("esri.views.3d.layers.graphics.QueryEngine")],e.QueryEngine),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});