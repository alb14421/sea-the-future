// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../webgl-engine/materials/DefaultMaterial"],function(a,t){"use strict";a.MaterialInfoCache=class{constructor(){this._byUid=new Map,this._byMaterial=new Map}get materials(){return Array.from(this._byUid.values(),a=>a.material)}byUid(a){return this._byUid.get(a)}byMaterial(a){return this._byMaterial.get(a)}set(a,t){this._byUid.set(a,t),this._byMaterial.set(t.material,t)}delete(a){const t=this._byMaterial.get(a)?.uid;t&&(this._byUid.delete(t),this._byMaterial.delete(a))}has(a){return this._byUid.has(a)}forEachMaterialInfo(a){this._byUid.forEach(a)}clear(){this._byUid.clear(),this._byMaterial.clear()}},a.MeshFastUpdateProcessor=class{constructor(){this._fastTransformOriginalMaterials=new Map,this._fastTransformClonedMaterials=new Map,this._graphicReferenceCount=0}enable(a,e,r){a.enableFastTransformUpdates(a=>{if(this._graphicReferenceCount<=1){if(this._fastTransformOriginalMaterials.has(a))return a;const t=e.byMaterial(a);return this._fastTransformOriginalMaterials.set(a,t),e.delete(a),a}const s=new t.DefaultMaterial(a.parameters,r);return this._fastTransformClonedMaterials.set(s,a),s},r.localOriginFactory)}disable(a,t){const e=new Set,r=new Set;a.disableFastTransformUpdates(a=>{if(!this._fastTransformClonedMaterials.has(a)){const s=a,i=this._fastTransformOriginalMaterials.get(s);return t.has(i.uid)?(e.add(s),t.byUid(i.uid).material):(r.add(s),i.material)}const s=a,i=this._fastTransformClonedMaterials.get(s);return this._fastTransformClonedMaterials.delete(s),i});for(const a of e)this._fastTransformOriginalMaterials.delete(a);for(const a of r){const e=this._fastTransformOriginalMaterials.get(a);this._fastTransformOriginalMaterials.delete(a),t.set(e.uid,e)}}onAddGraphic(){this._graphicReferenceCount++}onRemoveGraphic(a,t){this._graphicReferenceCount--,this.disable(a,t)}forEachMaterialInfo(a){this._fastTransformOriginalMaterials.forEach(a)}forEachClonedMaterial(a){this._fastTransformClonedMaterials.forEach(a)}destroy(){this._fastTransformClonedMaterials.clear(),this._fastTransformOriginalMaterials.clear()}},Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});