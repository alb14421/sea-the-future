// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../arcade/functions/hash","../../../../core/asyncUtils","../../../../core/compilerUtils","../../../../core/handleUtils","../../../../core/maybe","../../../../core/Promise","../../../../core/promiseUtils","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../core/accessorSupport/diffUtils","../../../../core/support/UpdatingHandles","../../../../geometry/support/webMercatorUtils","../../../../renderers/support/renderingInfoUtils","../../../../support/arcadeExpressionUtils","./constants","./DisplayFeatureLimit","./Graphics3DCore","./Graphics3DElevationAlignment","./Graphics3DFrustumVisibility","./Graphics3DObjectStates","./Graphics3DScaleVisibility","./graphicUtils","../support/FeatureVisibilityFilter","../support/highlightUtils"],function(e,t,r,i,s,a,o,n,p,c,l,d,u,h,y,g,b,m,_,f,G,E,C,w,P,x,D,F,v){"use strict";e.Graphics3DFeatureProcessor=class extends n.EsriPromise{constructor(e){super(e),this.type="graphics-3d",this._updatingHandles=new g.UpdatingHandles,this.elevationFeatureExpressionEnabled=!1,this.scaleVisibilityEnabled=!1,this.filterVisibilityEnabled=!1,this.frustumVisibilityEnabled=!1,this.elevationAlignmentEnabled=!1,this.timeExtentEnabled=!1,this.setUidToIdOnAdd=!0,this.dataExtent=null,this.drapeSourceType=1,this.preferredUpdatePolicy=0,this._suspendResumeExtent=null}initialize(){const e=this.owner,t=(this.filterVisibilityEnabled||this.timeExtentEnabled)&&"multipatch"!==e.layer.geometryType,r=new E.Graphics3DCore({owner:this,layer:this.layer,preferredUpdatePolicy:this.preferredUpdatePolicy,elevationFeatureExpressionEnabled:this.elevationFeatureExpressionEnabled,graphicSymbolSupported:!1,hasZ:e.hasZ,hasM:e.hasM,setUidToIdOnAdd:this.setUidToIdOnAdd,componentFactories:{deconflictor:t=>e.view.deconflictor.addGraphicsOwner(t),labeler:(t,r)=>e.view.labeler.addGraphicsOwner(t,r),elevationAlignment:this.elevationAlignmentEnabled?(t,r)=>new C.Graphics3DElevationAlignment({graphicsCoreOwner:this,graphicsCore:t,queryGraphicUIDsInExtent:r,elevationProvider:e.view.elevationProvider}):null,scaleVisibility:this.scaleVisibilityEnabled?(t,r)=>new x.Graphics3DScaleVisibility({graphicsCoreOwner:this,layer:this.layer,queryGraphicUIDsInExtent:r,graphicsCore:t,basemapTerrain:e.view.basemapTerrain}):null,filterVisibility:t?t=>new F.FeatureVisibilityFilter({context:{...t,configuration:e}}):null,objectStates:e=>new P.Graphics3DObjectStates(e)}});this._set("graphicsCore",r),this.frustumVisibilityEnabled&&this._set("frustumVisibility",new w.Graphics3DFrustumVisibility({graphicsCoreOwner:this})),this.elevationAlignment&&this._updatingHandles.add(()=>this.layer.elevationInfo,(e,t)=>{y.diff(e,t)&&this._updatingHandles.addPromise(this.graphicsCore.elevationInfoChange())}),this._updatingHandles.add(()=>this.layer.labelsVisible,()=>this.graphicsCore.updateVisibilityInfo()),this._updatingHandles.add(()=>this.layer.labelingInfo,(e,t)=>{y.diff(e,t)&&this.graphicsCore.updateLabelingInfo()}),this._updatingHandles.add(()=>this.preferredUpdatePolicy,e=>this.graphicsCore.preferredUpdatePolicy=e),this.addResolvingTask(i.createTask(e=>this._initializeAsync(e)))}async _initializeAsync(e){await p.logOnError(this.graphicsCore.initializePromise),p.throwIfAborted(e);const t=this.owner;this._updatingHandles.add(()=>this.renderer,e=>this._updatingHandles.addPromise(this.graphicsCore.rendererChange(e))),this._updatingHandles.add(()=>t.fullOpacity,()=>this.graphicsCore.opacityChange()),this._setupSuspendResumeExtent(),this.updateClippingExtent&&(this._updatingHandles.add(()=>t.view.clippingArea,()=>this._updateClippingExtent()),this._updateClippingExtent()),this.graphicsCore.startCreateGraphics(),this.graphicsCore.labelsEnabled&&(await p.logOnError(this.graphicsCore.updateLabelingInfo()),p.throwIfAborted(e))}destroy(){this._updatingHandles.destroy(),this._set("frustumVisibility",o.destroyMaybe(this.frustumVisibility)),this._set("graphicsCore",o.destroyMaybe(this.graphicsCore)),this._set("owner",null)}get layer(){return this.owner.layer}get layerViewUid(){return this.owner.layerViewUid}get dataUpdating(){return this.graphicsCore?.dataUpdating??!1}get renderer(){const{renderer:e,objectIdField:t}=this.layer;if(!e||!t||"heatmap"===e.type||!e.visualVariables)return e;const r=e.visualVariables.findIndex(e=>"rotation"===e.type&&null!=e.valueExpression&&_.matchRandomRotationExpression(e.valueExpression)===t&&(null==e.axis||"heading"===e.axis)&&"geographic"===e.rotationType);if(r<0)return e;const i=e.clone();return i.visualVariables?(i.visualVariables.splice(r,1),this._randomRotationRenderers??=new WeakMap,this._randomRotationRenderers.set(i,t),i):e}get scaleVisibility(){return this.graphicsCore?.scaleVisibility}get filterVisibility(){return this.graphicsCore?.filterVisibility}get elevationAlignment(){return this.graphicsCore?.elevationAlignment}get suspendResumeExtentMode(){return this.owner.suspendResumeExtentMode??"computed"}get scaleVisibilitySuspended(){return null!=this.scaleVisibility&&this.scaleVisibility.suspended}get suspended(){return this.owner.suspended}get legendEnabled(){return null==this.frustumVisibility||!this.frustumVisibility.suspended}get suspendInfo(){const e={};return this.scaleVisibilitySuspended&&(e.outsideScaleRange=!0),null!=this.frustumVisibility&&this.frustumVisibility.suspended&&(e.outsideOfView=!0),e}get updating(){return!!(this.graphicsCore?.updating||this.frustumVisibility?.updating||this._updatingHandles.updating)}get updatingRemaining(){return this.graphicsCore?.updatingRemaining??0}get featureStore(){return this.graphicsCore?.featureStore}get view(){return this.owner.view}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner?.fullOpacity}get filter(){return"filter"in this.owner?this.owner.filter:null}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}get featureSpatialReference(){return"featureSpatialReference"in this.owner?this.owner.featureSpatialReference:this.owner.view.spatialReference}get graphics3DGraphics(){return this.graphicsCore?.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphicsCore?.graphics3DGraphicsByObjectID}get symbolUpdateType(){return this.graphicsCore?.symbolUpdateType}get displayFeatureLimit(){const e=this.view.quality,t=this.graphicsCore?.displayFeatureLimit;if(1===e)return t;const r=Math.ceil(t.maximumNumberOfFeatures*e);return new G.DisplayFeatureLimit(t.maximumTotalNumberOfVertices,r,t.averageSymbolComplexity)}get usedMemory(){return this.graphicsCore?.usedMemory??0}get loadedFeatures(){return this.graphicsCore?.numberOfGraphics??0}get usedMemoryPerFeature(){return this.graphicsCore?.usedMemoryPerGraphic??0}get unprocessedMemoryEstimate(){return this.graphicsCore?.unprocessedMemoryEstimate??0}get performanceInfo(){return this.graphicsCore.performanceInfo}maskOccludee(e){const t=this.graphicsCore?.objectStates;if(!t)return a.makeHandle();const{set:r,handle:i}=t.acquireOccludeeSet(null);return t.setUid(r,e.uid),i}highlightByGraphics(e,t){const r=this.graphicsCore?.objectStates;if(!r)return v.emptyHighlightHandle;const i=e.map(e=>e.uid),{set:s,handle:a}=r.acquireHighlightSet(t,null);return r.setUids(s,i),a}highlightByObjectIds(e,t=null,r){const i=this.graphicsCore?.objectStates;if(!i)return v.emptyHighlightHandle;const{set:s,handle:a}=i.acquireHighlightSet(r,t);return i.setObjectIds(s,e),a}resetObjectStates(){this.graphicsCore?.objectStates?.reset()}whenGraphicBounds(e,t){return this.graphicsCore?.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.graphicsCore?.computeAttachmentOrigin(e,t)}notifyGraphicGeometryChanged(e){this.graphicsCore.notifyGraphicGeometryChanged(e)}notifyGraphicVisibilityChanged(e){this.graphicsCore.notifyGraphicVisibilityChanged(e)}notifyContentGeometryUpdate(){this.owner.notifyContentGeometryUpdate?.()}getRenderingInfo(e,t,i){const s=m.getRenderingInfo(e,{renderer:t,arcade:i});if(s?.color){const e=s.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255}if(null!=s&&null!=t&&this._randomRotationRenderers?.has(t)){const i=this._randomRotationRenderers.get(t),a=e.attributes[i],o=new r.XXH(0);o.updateFloatArray([a]),o.updateUint8Array([173]),s.heading=8.381e-8*o.digest()}return s}getRenderingInfoAsync(e,t,r,i){return m.getRenderingInfoAsync(e,{renderer:t,arcade:r,...i})}getSymbolLayerSize(e,t){return this.graphicsCore?.getSymbolLayerSize(e,t)}setObjectIdVisibility(e,t){this.graphicsCore?.setObjectIdVisibility(e,t)}refreshFilter(){null!=this.filterVisibility&&this.filterVisibility.reapply()}getGraphics3DGraphicByObjectId(e){return this.graphicsCore?.getGraphics3DGraphicByObjectId(e)}_updateClippingExtent(){const e=this.owner.view.clippingArea;this.graphicsCore.setClippingExtent(e,this.owner.view.spatialReference)&&(this.updateClippingExtent(e)||this.graphicsCore.recreateAllGraphics())}_setupSuspendResumeExtent(){(this.frustumVisibility||this.scaleVisibility)&&this.addHandles(c.watch(()=>this.suspendResumeExtentMode,()=>{switch(this.removeHandles(V),this.suspendResumeExtentMode){case"computed":this.addHandles([c.watch(()=>this.graphicsCore.computedExtent,e=>this._updateSuspendResumeExtent(e),c.initial),c.watch(()=>this.graphicsCore.extentPadding,()=>this._updateSuspendResumeExtent(this.graphicsCore.computedExtent))],V);break;case"data":this.addHandles([c.when(()=>this.dataExtent,e=>this._updateSuspendResumeExtent(e),c.initial),c.watch(()=>this.graphicsCore.extentPadding,()=>this._updateSuspendResumeExtent(this.dataExtent))],V);break;default:s.neverReached(this.suspendResumeExtentMode)}},c.initial))}_updateSuspendResumeExtent(e){e?this._suspendResumeExtentChanged(this._extentToSuspendResumeRect(e,this._suspendResumeExtent)):this._suspendResumeExtentChanged(null)}_extentToSuspendResumeRect(e,t){const r=this.owner.view.spatialReference;if(!e.spatialReference.equals(r)){if(!b.canProject(e,r))return;e=b.project(e,r)}return D.enlargeExtent(e,t,f.suspendResumeExtentOptimism,this.graphicsCore.extentPadding)}_suspendResumeExtentChanged(e){null!=this.frustumVisibility&&this.frustumVisibility.setExtent(e),null!=this.scaleVisibility&&this.scaleVisibility.setExtent(e)}},t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"type",void 0),t.__decorate([l.property({constructOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"owner",void 0),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"layer",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"layerViewUid",null),t.__decorate([l.property({readOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"dataUpdating",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"renderer",null),t.__decorate([l.property({constructOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"updateClippingExtent",void 0),t.__decorate([l.property({constructOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"elevationFeatureExpressionEnabled",void 0),t.__decorate([l.property({constructOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"graphicsCore",void 0),t.__decorate([l.property({constructOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"scaleVisibilityEnabled",void 0),t.__decorate([l.property({constructOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"filterVisibilityEnabled",void 0),t.__decorate([l.property({constructOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"frustumVisibilityEnabled",void 0),t.__decorate([l.property({constructOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"elevationAlignmentEnabled",void 0),t.__decorate([l.property({constructOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"timeExtentEnabled",void 0),t.__decorate([l.property({constructOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"setUidToIdOnAdd",void 0),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"scaleVisibility",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"filterVisibility",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"elevationAlignment",null),t.__decorate([l.property({constructOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"frustumVisibility",void 0),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"suspendResumeExtentMode",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"dataExtent",void 0),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"scaleVisibilitySuspended",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"suspended",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"legendEnabled",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"suspendInfo",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"updating",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"updatingRemaining",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"featureStore",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"view",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"loadedGraphics",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"fullOpacity",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"filter",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"slicePlaneEnabled",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"drapeSourceType",void 0),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"updatePolicy",null),t.__decorate([l.property()],e.Graphics3DFeatureProcessor.prototype,"preferredUpdatePolicy",void 0),t.__decorate([l.property({readOnly:!0})],e.Graphics3DFeatureProcessor.prototype,"displayFeatureLimit",null),e.Graphics3DFeatureProcessor=t.__decorate([h.subclass("esri.views.3d.layers.graphics.Graphics3DFeatureProcessor")],e.Graphics3DFeatureProcessor);const V="suspendResumeExtentMode";Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});