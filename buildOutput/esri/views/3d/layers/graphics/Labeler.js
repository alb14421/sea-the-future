// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/asyncUtils","../../../../core/has","../../../../core/Logger","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../layers/graphics/hydratedFeatures","../../../../layers/support/labelFormatUtils","../../../../symbols/callouts/calloutUtils","./Graphics3DCalloutSymbolLayerFactory","./Graphics3DLineCalloutSymbolLayer","./graphicSymbolUtils","./LabelInfo","./LabelParameters","./placementUtils","./pointUtils","../../webgl-engine/lib/TextRenderer","../../webgl-engine/lib/TextRenderParameters","../../webgl-engine/lib/TextTextureAtlas","../../webgl-engine/lib/WebGLLayer","../../../support/layerViewUtils","../../../support/Scheduler","../../../support/Yield"],function(e,t,s,a,i,l,r,o,n,c,h,b,u,d,y,p,g,x,f,C,_,m,L,v,w,G,A,D,T,I){"use strict";class S{constructor(e,t){this.labelingContext=e,this.graphics3DGraphic=t,this.hasGraphics3DResources=!1,this.visible=!1,this.textureAtlasHandles=[],this.textInitialized=!1,this.textRenderers=new Array,this.textLabelPlacements=new Array}}class P{constructor(e,t,s,a,i){this.labelClass=e,this.graphics3DSymbol=t,this.graphics3DCalloutSymbolLayer=s,this.textRenderParameters=a,this.labelFunction=i,this.calloutSymbolLayerIndex=0,this.graphics=new Map,this.scaleVisibility=null}}class R{constructor(e,t,s,a,i,l,r,o){this.layer=t,this.graphics3DCore=s,this.scaleVisibility=a,this.emptySymbolLabelSupported=i,this.elevationInfoOverride=l,this.disablePlacement=r,this.active=o,this.labelClassAbortController=new AbortController,this._labelClassContexts=new Array,this.graphics=new Map,this.labelsToInitialize=new Map,this.stageLayer=new A.WebGLLayer(e,{pickable:!0},s.owner.layerViewUid)}destroy(){this.stageLayer.destroy()}get labelClassContexts(){return this._labelClassContexts}setLabelClassContext(e,t){this._labelClassContexts[e]=t}resetLabelClassContext(){this._labelClassContexts.length=0}}function V(e,t){e.geometries[0].setAttributeData("size",[t.displayWidth,t.displayHeight]),e.geometryVertexAttributeUpdated(e.geometries[0],"size")}function O(e){return!!e.labelClassPromise&&!!e.labelClassAbortController}function F(e){return!e||0===e.length}function z(e){return"label-3d"===e.symbol?.type?e.symbol:null}function E(e){return!!e.labelsVisible&&!!e.labelingInfo?.some(e=>!!e.symbol)}e.Labeler=class extends s{constructor(e){super(e),this._hudMaterials=new Map,this._calloutMaterials=new Map,this._dirty=!1,this._labels=new Map,this._labelingContexts=new Array}setup(){this.dispose(),this.addHandles([n.watch(()=>this.view.state?.camera,()=>this.setDirty()),n.watch(()=>this.view.state?.rasterPixelRatio,()=>this._resetAllLabels()),n.watch(()=>this.view.focusAreasView?.polygons,()=>this._updateFocus()),this.view.resourceController.scheduler.registerTask(T.TaskPriority.LABELER,this)]),D.hasLayerBasedScaleVisibility()&&this.addHandles(n.watch(()=>this.view.scale,()=>this._updateScaleVisibility())),this._textTextureAtlas=new G.TextTextureAtlas({view:this.view})}dispose(){this.removeAllHandles(),this._textTextureAtlas=r.disposeMaybe(this._textTextureAtlas),this._hudMaterials.clear(),this._calloutMaterials.clear(),this._labelingContexts.length=0,this._labels.clear()}destroy(){this.dispose(),M.graphic=null,M.renderingInfo=null,M.layer=null}_updateFocus(){this._labelingContexts.forEach(e=>{e.graphics.forEach(t=>{if(0===t.labelLayers.length)return;const s=L.placePointOnGeometry(t.graphic.geometry);if(null==s)return;const a=this.view.focusAreasView?.containsGeometry(s)??!0;t.labelLayers.forEach(s=>{s.stageObject.geometries.some(e=>e.material.parameters.isFocused!==a)&&(this._removeGraphic(e,t),this._addGraphic(e,t),this.setDirty())})})})}_activateLabelingContext(e){e.graphics.forEach((t,s)=>{const a=new S(e,t);this._labels.set(s,a),e.labelsToInitialize.set(s,a),t.setVisibilityFlag(16,1,!0)}),e.active=!0}_deactivateLabelingContext(e){e.graphics.forEach((e,t)=>{e.setVisibilityFlag(16,1,!1),this.setLabelGraphicVisibility(e,!1),e.clearLabelGraphics(),this._labels.delete(t)}),e.active=!1}_addLabelTextureToAtlas(e){if(this._textTextureAtlas)for(const t of e.graphics3DGraphic.labelLayers){if(!t.labelClass)continue;const s=e.textRenderers[t.labelClassContextIndex];s&&(e.textureAtlasHandles.push(this._textTextureAtlas.addText(s,e=>{return a=e,(s=t.stageObject).geometries[0].setAttributeData("uvi",a),void s.geometryVertexAttributeUpdated(s.geometries[0],"uvi",!0);var s,a})),V(t.stageObject,s))}}_removeLabelTextureFromAtlas(e){e.textureAtlasHandles.forEach(e=>e.remove()),e.textureAtlasHandles.length=0}get readyToRun(){return this.view.ready&&(this._dirty||this.deconflictor.readyToRun)}runTask(e){return this._updateLabels(e),!this._dirty&&this.deconflictor.readyToRun&&this.deconflictor.runTask(e),I.Yield}_updateLabels(e){if(this._dirty){this._dirty=!1;for(const t of this._labelingContexts)if(t.active)if(O(t))this._dirty=!0;else if(F(t.labelClassContexts)){if(null===t.labelClassContexts){this._deactivateLabelingContext(t);continue}this._createLabelClassContext(t),this._dirty=!0}else for(const[s,a]of t.labelsToInitialize)if(this._ensureGraphics3DResources(a)&&(this._labels.set(s,a),this.deconflictor.setDirty(),e.madeProgress()),(a.visible&&a.textInitialized||!a.visible&&a.hasGraphics3DResources)&&(t.labelsToInitialize.delete(s),e.madeProgress()),e.done){this._dirty=!0;break}this._dirty||this.notifyChange("updating")}}async _createLabelClassContextAsync(e){const t=e.labelClassAbortController?.signal;e.layer.when&&await e.layer.when(),o.throwIfAborted(t),e.scaleVisibility?.updateScaleRangeActive();const s=e.graphics3DCore,i=s.layer,r=i.labelingInfo?.filter(e=>!!e.symbol);if(!r||0===r.length)return;let n=!1;await a.forEach(r,async(i,r)=>{const c=i.symbol,h=f.getGraphics3DSymbol(s.getOrCreateGraphics3DSymbol(c));if(null==h)return void l.getLogger(this).error("Failed to create Graphics3DSymbol for label");await h.load(),o.throwIfAborted(t);let b=null;p.hasCalloutSupport(c)&&c.hasVisibleCallout()&&(b=g.make(c,s.symbolCreationContext),await b.load(),o.throwIfAborted(t));const u=await a.result(y.createLabelFunction(i,e.layer.fieldsIndex,this.view.spatialReference));if(o.throwIfAborted(t),!0===u.ok){const s=await this._createTextRenderParameters(h.symbol);o.throwIfAborted(t);const a=new P(i,h,b,s,u.value);this._updateLabelClassContextVisibility(a),e.setLabelClassContext(r,a)}else l.getLogger(this).error(`Label expression failed to evaluate: ${u.error}`),n=!0}),o.throwIfAborted(t)}async _createLabelClassContext(e){return null==e.labelClassPromise&&(e.labelClassPromise=this._createLabelClassContextAsync(e).catch(t=>{if(o.isAbortError(t))throw t;e.resetLabelClassContext()}).then(()=>{e.labelClassAbortController=null,this.notifyChange("updating")}).catch(()=>{}),this.notifyChange("updating")),e.labelClassPromise}async _createTextRenderParameters(e){const t=e.symbolLayers.at(0);return"text"!==t?.type?null:w.TextRenderParameters.fromSymbol(t,this.view.state.rasterPixelRatio)}_destroyLabelClassContext(e){for(const t of e.labelClassContexts)--t.graphics3DSymbol.referenced;const t=e.labelClassAbortController;e.labelClassAbortController=new AbortController,r.abortMaybe(t),e.resetLabelClassContext(),e.labelClassPromise=null,this.notifyChange("updating")}_createTextSymbolGraphic(e,t,s,a,i,l){if(!this._textTextureAtlas)return null;const r=new _.LabelParameters(s,m.horizontalPlacementFromAnchor(s.anchor),m.verticalPlacementFromAnchor(s.anchor),e.text,u.fromValues(e.displayWidth,e.displayHeight));return M.graphic=t,M.layer=a,M.renderingInfo=null,i.createLabel(M,r,this._hudMaterials,this._textTextureAtlas,()=>l.placement?.elevationOffset??null)}_createLineCalloutGraphic(e,t,s,a,i){M.graphic=e,M.layer=i;const l=a.screenOffset[0];return M.renderingInfo=new x.LineCalloutSymbolLayerRenderingInfo(null,t,a.translation,a.centerOffset,l,a.centerOffsetUnits,a.elevationOffset),s.createGraphics3DGraphic(M,this._calloutMaterials)}_ensureGraphics3DResources(e){if(e.hasGraphics3DResources)return!1;const t=e.graphics3DGraphic;if(t.destroyed)return!1;this._ensureTextTextureResources(e);const s=e.labelingContext,a=s.labelClassContexts;if(F(a)||!s.emptySymbolLabelSupported&&0===t.layers.length)return!1;let i=!1;const l=t.graphic,r=s.layer,o=E(s.layer);for(let n=0;n<a.length;n++){const c=e.textRenderers[n],h=e.textLabelPlacements[n];if(null==c||null==h)continue;const b=a[n],u=b.graphics3DSymbol,d=z(u),y=u.symbolLayers[0];if(!y)continue;y.setElevationInfoOverride(s.elevationInfoOverride);const p=new C.LabelInfo(t,d,b.labelClass),g=this._createTextSymbolGraphic(c,l,h,r,y,p);if(null==g)return!1;g.labelClass=b.labelClass,g.labelClassContextIndex=n,t.addLabelGraphic(g,s.stageLayer),this.deconflictor.setPriority(t,b.textRenderParameters?.definition.size??0),t.setVisibilityFlag(16,1,o),t.setVisibilityFlag(16,2,b.scaleVisibility??!0),t.setVisibilityFlag(16,8,!1),D.hasLayerBasedScaleVisibility()&&b.graphics.set(l.uid,t),i=!0;const x=b.graphics3DCalloutSymbolLayer;if(x&&h.hasLabelVerticalOffset){x.setElevationInfoOverride(s.elevationInfoOverride);const e=this._createLineCalloutGraphic(l,d,x,h,r);null!=e&&(b.calloutSymbolLayerIndex=t.labelLayers.length,t.addLabelGraphic(e,s.stageLayer))}break}return i&&s.scaleVisibility?.updateGraphicLabelScaleVisibility(t),e.hasGraphics3DResources=!0,!0}_destroyGraphics3DResources(e){const t=e.labelingContext.labelClassContexts;for(const s of e.graphics3DGraphic.labelLayers){if(null==s.labelClass)continue;const e=t[s.labelClassContextIndex].graphics3DSymbol.symbolLayers[0];e?.onRemoveGraphic(s)}e.graphics3DGraphic.clearLabelGraphics(),e.hasGraphics3DResources=!1}_ensureTextTextureResources(e){if(e.textInitialized)return;const t=e.labelingContext,s=t.labelClassContexts;if(F(s))return;const a=e.graphics3DGraphic.graphic;for(let i=0;i<s.length;i++){const l=s[i];if(e.textRenderers[i]=null,e.textLabelPlacements[i]=null,null==l?.textRenderParameters)continue;const r=l.labelFunction;let o;if("arcade"===r.type)try{const e=r.needsHydrationToEvaluate()?d.hydrateGraphic(a,t.layer):a;o=r.evaluate(e)}catch(e){o=null}else o=r.evaluate(a);if(null==o||""===o||/^\s+$/.test(o))continue;const n=l.graphics3DSymbol;if(!n.symbolLayers[0])continue;const c=e.graphics3DGraphic,h="label-3d"===n.symbol?.type?n.symbol:null,b=l.labelClass,u=t.disablePlacement,y=new C.LabelInfo(c,h,b,u).placement;if(null==y)continue;const p=m.horizontalPlacementFromAnchor(y.anchor),g=m.textRenderAlignmentFromHorizontalPlacement(p);e.textRenderers[i]=new v.TextRenderer(o,g,l.textRenderParameters,G.TextTextureAtlas.maxSize),e.textLabelPlacements[i]=y}e.textInitialized=!0}_destroyTextTextureResources(e){e.textInitialized=!1,e.textRenderers.length=0,e.textLabelPlacements.length=0}_addGraphic(e,t){const s=t.graphic.uid;if(e.graphics.set(s,t),e.active){const a=new S(e,t);this._labels.set(s,a),e.labelsToInitialize.set(s,a)}this.setDirty(),this.deconflictor.setDirty()}_updateGraphicGeometry(e,t){const s=t.graphic.uid,a=this._labels.get(s);if(!a)return!0;for(const s of a.graphics3DGraphic.labelLayers)if(null!=s.labelClass&&!e.labelClassContexts[s.labelClassContextIndex].graphics3DSymbol.symbolLayers[0].updateGeometry(s,t.graphic.geometry))return!1;return this.setDirty(),this.deconflictor.setDirty(),!0}_removeGraphic(e,t){const s=t.graphic.uid,a=this._labels.get(s);e.graphics.delete(s),e.labelClassContexts.forEach(e=>e.graphics.delete(s)),a&&(this._destroyGraphic(a,s),e.labelsToInitialize.delete(s),this.setDirty(),this.deconflictor.setDirty())}_destroyGraphic(e,t){this._labels.delete(t),e.textureAtlasHandles.length&&this._removeLabelTextureFromAtlas(e),this._destroyTextTextureResources(e),e.hasGraphics3DResources&&this._destroyGraphics3DResources(e)}async _labelingInfoChange(e,t){if(!t)return this._visibilityInfoChange(e),this._resetLabels(e),this._createLabelClassContext(e);for(const s of t){const t=e.graphics.get(s);t&&(this._removeGraphic(e,t),this._addGraphic(e,t))}}_globalPropertyChanged(e,t){for(const s of t.labelClassContexts){const a=new Map;t.graphics.forEach(e=>a.set(e.graphic.uid,e));const i=e=>e.labelLayers[0];if(s.graphics3DSymbol.symbolLayers[0].globalPropertyChanged(e,a,i),s.graphics3DCalloutSymbolLayer){const t=e=>e.labelLayers[s.calloutSymbolLayerIndex];s.graphics3DCalloutSymbolLayer.globalPropertyChanged(e,a,t)}}}_visibilityInfoChange(e){const t=E(e.layer);t&&!e.active&&this._activateLabelingContext(e),!t&&e.active&&this._deactivateLabelingContext(e),this.setDirty()}_resetAllLabels(){for(const e of this._labelingContexts)this._resetLabels(e)}_resetLabels(e){e.graphics.forEach((t,s)=>{const a=this._labels.get(s);a&&(this._destroyGraphic(a,s),a.visible=!1,e.labelsToInitialize.set(s,a))}),this._destroyLabelClassContext(e),this.setDirty(),this.deconflictor.setDirty()}_findLabelingContext(e){for(const t of this._labelingContexts)if(t.graphics3DCore===e)return t;return null}addGraphicsOwner(e,t,s){const a=s?.emptySymbolLabelSupported||!1,i=s?.elevationInfoOverride||null,l=s?.disablePlacement||null;if(this._findLabelingContext(e))return;const r=e.layer,o=new R(this.view.stage,r,e,t,a,i,l,E(r));return this._labelingContexts.push(o),this.setDirty(),{addGraphic:e=>this._addGraphic(o,e),removeGraphic:e=>this._removeGraphic(o,e),updateGraphicGeometry:e=>this._updateGraphicGeometry(o,e),layerLabelsEnabled:()=>E(o.layer),labelingInfoChange:e=>this._labelingInfoChange(o,e),elevationInfoChange:()=>this._globalPropertyChanged("elevationInfo",o),slicePlaneEnabledChange:()=>this._globalPropertyChanged("slicePlaneEnabled",o),visibilityInfoChange:()=>this._visibilityInfoChange(o),reset:()=>this._resetLabels(o),remove:()=>this._removeGraphicsOwner(e),setDirty:()=>this.setDirty()}}_removeGraphicsOwner(e){const t=this._findLabelingContext(e);if(!t)return;const s=this._labelingContexts.indexOf(t);this._labelingContexts.splice(s,1),t.graphics.forEach(e=>this._removeGraphic(t,e)),t.destroy(),this.setDirty()}_updateScaleVisibility(){for(const e of this._labelingContexts)if(e.active&&!O(e))for(const t of e.labelClassContexts)this._updateLabelClassContextVisibility(t)}_updateLabelClassContextVisibility(e){if(!D.hasLayerBasedScaleVisibility())return;const{labelClass:t,graphics:s}=e,a={minScale:t.minScale,maxScale:t.maxScale},i=D.isInEffectiveScaleRange(a,this.view.scale),l=null==e.scaleVisibility||e.scaleVisibility!==i;e.scaleVisibility=i,l&&s.size&&(s.forEach(e=>e.setVisibilityFlag(16,2,i)),this.deconflictor.setDirty(),this.setDirty())}setLabelGraphicVisibility(e,t){const s=e.graphic.uid,a=this._labels.get(s);a&&a.visible!==t&&(t&&!a.textureAtlasHandles.length?(this._addLabelTextureToAtlas(a),a.textInitialized||a.labelingContext.labelsToInitialize.set(s,a)):!t&&a.textureAtlasHandles.length&&this._removeLabelTextureFromAtlas(a),a.visible=t,this.setDirty())}setDirty(){!this._dirty&&this._labelingContexts.length>0&&(this._dirty=!0,this.notifyChange("updating"))}get updating(){return this._dirty||this._textTextureAtlas?.updating||this.deconflictor.updating||this._labelingContexts.some(e=>O(e))}get updatingProgress(){if(!this.updating||!this._textTextureAtlas)return 1;const e=this._labelingContexts.length>0?this._labelingContexts.reduce((e,t)=>e+(O(t)?0:1),0)/this._labelingContexts.length:1;return(this._dirty?0:.3)+(this._textTextureAtlas.updating?0:.1)+.1*e+.5*this.deconflictor.updatingProgress}get usedMemory(){return this._textTextureAtlas?.usedMemory??0}get test(){}},t.__decorate([c.property({constructOnly:!0})],e.Labeler.prototype,"view",void 0),t.__decorate([c.property({constructOnly:!0})],e.Labeler.prototype,"deconflictor",void 0),t.__decorate([c.property()],e.Labeler.prototype,"_textTextureAtlas",void 0),t.__decorate([c.property({type:Boolean,readOnly:!0})],e.Labeler.prototype,"updating",null),e.Labeler=t.__decorate([b.subclass("esri.views.3d.layers.graphics.Labeler")],e.Labeler);const M=new x.LineCalloutCreationContext(null,null,null);e.areLabelsVisible=E,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});