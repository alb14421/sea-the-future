// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/mathUtils","../../../../core/maybe","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../chunks/vec42","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../core/support/UpdatingHandles","../../../../geometry/ellipsoidUtils","../../../../geometry/support/aaBoundingRect","../../../../chunks/boundedPlane","../../../../geometry/support/ray","../../../../chunks/sphere","./DeconflictAABR","./deconflictorDebug","../../webgl/RenderCamera","../../webgl-engine/lib/GPUPointOcclusionQuery","../../webgl-engine/lib/screenSizePerspectiveUtils","../../webgl-engine/materials/HUDMaterial","../../webgl-engine/materials/ScaleInfo","../../../support/Yield"],function(i,t,e,s,c,r,o,n,a,l,h,u,d,p,_,y,f,g,v,b,m,O,w,D,G,I,k,S,P,C,Q){"use strict";const x=_.create(),A=_.create(),M=f.create(),T=f.create(),U=_.create(),V=u.create(),R=w.create(),H=O.create(),N=_.create(),E=b.create();class F{constructor(i){this.id=i,this.aabr=b.create(),this.altitude=0,this.distance=0,this.distanceToOccluder=0,this.culled=!1,this.visible=!1,this.priority=0}}function j(i,t){const e=0!==i.distanceToOccluder&&i.distance>i.distanceToOccluder,s=0!==t.distanceToOccluder&&t.distance>t.distanceToOccluder;return e!==s?+e-+s:i.priority!==t.priority?t.priority-i.priority:i.distance!==t.distance?i.distance-t.distance:i.visible!==t.visible?+t.visible-+i.visible:i.id-t.id}class B{constructor(){this.camera=new I,this.slicePlane=m.create(),this.slicePlaneEnabled=!1}copyFrom(i){this.camera.copyFrom(i.camera),m.copy(i.slicePlane,this.slicePlane),this.slicePlaneEnabled=i.slicePlaneEnabled}}i.Deconflictor=class extends e{get dirty(){return this._dirty}get state(){return this._state}constructor(i){super(i),this._dirty=!1,this._viewState=new B,this._state=0,this._checkOcclusion=new Map,this._active=new Map,this._checkOcclusionIterator=null,this._activeIterator=null,this._occlusionQueryUids=new Array,this._updatingHandles=new g.UpdatingHandles,this._deconflictor=new D.DeconflictAABR((i,t)=>{i.visible=t,this._setGraphicVisibility(this._active.get(i.id),t)},(i,t)=>i.id!==t.id,j),this._baseOccludedVisibility=10,this._altitudeFactor=2,this._minAltitudeDifference=100}initialize(){this._updatingHandles.add(()=>(this.view?.map?.ground?.opacity??0)>0,()=>this.setDirty()),this._updatingHandles.add(()=>this.view.ready,()=>this._occlusionQuery=null)}destroy(){this._occlusionQuery=null,this._updatingHandles.destroy(),this._deconflictor.destroy(),this._checkOcclusion.clear(),this._active.clear()}setDirty(){!this._dirty&&(this._active.size>0||this._checkOcclusion.size>0)&&(this._dirty=!0,this.notifyChange("updating"))}setPriority(i,t){const e=this._active.get(i.graphic.uid)?.getInfo(this.visibilityGroup);e&&(e.priority=t)}get updating(){return 0!==this._state||this._dirty||this._updatingHandles.updating}get updatingProgress(){if(!this.updating)return 1;const i=this._state/5;return this._dirty?.5*i:i}get readyToRun(){return this.view.ready&&null!=this.view.state&&this.updating}runTask(i){switch(this._state){case 0:this._startUpdate(),i.madeProgress();case 1:if(this._state=1,!this._processCheckOcclusion(i))return;case 2:if(this._state=2,this._occlusionQuery&&!this._occlusionQuery.done)return Q.Yield;this._readOcclusionQueryResult(),i.madeProgress();case 3:if(this._state=3,!this._collectActiveGraphics(i))return;case 4:if(this._state=4,this._deconflictor.run(i),!this._deconflictor.done)return;default:this._state=0,this.notifyChange("updating")}}setGraphicsActive(i,t){t?i.forEach(i=>this.addToActiveGraphics(i)):i.forEach(i=>this.removeFromActiveGraphics(i))}layerSupportsDeconfliction(i){if(null==i||"object3d"!==i.type)return!1;const t=i.stageObject;if(1!==(t?.geometries.length??0))return!1;const e=t?.geometries[0],s=e?.material;return s instanceof P.HUDMaterial}_startUpdate(){G.prepare(this.view),this._dirty=!1,this._viewState.copyFrom(this.viewState);const{fullWidth:i,fullHeight:t}=this._viewState.camera;this._deconflictor.reset(i,t),this._resetIterators(),this._occlusionQueryUids.length=0,this._checkOcclusion.size||(this._occlusionQuery=c.destroyMaybe(this._occlusionQuery))}addToActiveGraphics(i){i.ensureInfo(this.visibilityGroup),this._active.set(i.graphics3DGraphic.graphic.uid,i),this.setDirty()}removeFromActiveGraphics(i){!function(i,t){const e=i.graphics3DGraphic;e.destroyed||e.setVisibilityFlag(t,8,!0)}(i,this.visibilityGroup),i.removeInfo(this.visibilityGroup),this._active.delete(i.graphics3DGraphic.graphic.uid),this.setDirty()}addToCheckOcclusion(i){this._checkOcclusion.set(i.graphics3DGraphic.graphic.uid,i),this.setDirty()}removeFromCheckOcclusion(i){this._checkOcclusion.delete(i.graphics3DGraphic.graphic.uid)}_processCheckOcclusion(i){if(0===this._checkOcclusion.size)return!0;const t=this._ensureCheckOcclusionIterator(),e=this._viewState.camera,s=h.transpose(V,e.viewInverseTransposeMatrix),r=this.view.map.ground.opacity>0,o="global"===this.view.viewingMode&&r&&e.relativeElevation>0?R:null;let n=0;null!=o&&(p.transformMat4(w.getCenter(o),_.ZEROS,e.viewMatrix),o[3]=v.getReferenceEllipsoid(this.view.spatialReference).radius,n=w.distanceToSilhouette(o,_.ZEROS));const a=b.create();for(;;){if(i.done)return!1;i.madeProgress();const c=t.next();if(!0===c.done)break;const r=c.value,l=r.graphics3DGraphic;if(l.destroyed)continue;if(!l.isVisible(1,8))continue;const h=L(l,this.visibilityGroup);let u=null,d=!0;for(const i of h){if(!this.layerSupportsDeconfliction(i))continue;u=Y,this._projectHudLayer(i,e,u),b.empty(a);const t=i.stageObject.geometries[0].material;if(this._expandBoundingRect(a,e,i,t,u),u.isOutsideScreen){d=!1;break}if(this._isCulledBySlice(r,u.positionView)){d=!1;break}if(null!=o&&z(u,o,n)){d=!1;break}p.transformMat4(A,u.positionView,s),u.altitude=this.view.renderCoordsHelper.getAltitude(A);const c=r.ensureInfo(this.visibilityGroup);if(c.altitude=u.altitude,c.distance=u.distance,c.distanceToOccluder=u.distanceToOccluder,c.culled=!1,b.copy(c.aabr,a),t.parameters.occlusionTest)break;this._ensureOcclusionQuery().addPosition(A)===this._occlusionQueryUids.length&&this._occlusionQueryUids.push(l.graphic.uid);break}if(this._active.has(l.graphic.uid)&&(!d||!u)){const i=r.ensureInfo(this.visibilityGroup);i.visible=!u,i.culled=!0}}return this._checkOcclusionIterator=null,this._occlusionQueryUids.length||(this._occlusionQuery=c.destroyMaybe(this._occlusionQuery)),this._occlusionQuery?.start(),!0}_readOcclusionQueryResult(){if(!this._occlusionQuery||!this._occlusionQueryUids.length)return;const i=this._viewState.camera,t=this.view.renderCoordsHelper.getAltitude(i.eye);for(let i=0;i<this._occlusionQueryUids.length;i++){const e=this._occlusionQueryUids[i],s=this._checkOcclusion.get(e);if(!s)continue;const c=this._occlusionQuery.getOcclusion(i)??-1,r=s.getInfo(this.visibilityGroup);r&&(r.distanceToOccluder=c>0?r.distance-c:0);const o=c<=0||this._occludedVisibility(r?.distanceToOccluder??0,r?.distance??c,r?.altitude??0,t);this._active.has(e)?r&&(r.culled=!o,r.visible=o):this._setGraphicVisibility(s,o)}this._occlusionQueryUids.length=0}_collectActiveGraphics(i){const t=this._ensureActiveGraphicsIterator(),e=16===this.visibilityGroup;for(;!i.done;){i.madeProgress();const s=t.next();if(!0===s.done)return this._activeIterator=null,!0;const c=s.value,r=c.getInfo(this.visibilityGroup);r&&(e&&!c.graphics3DGraphic.isVisible()||r.culled?(G.drawPoly(r.aabr,!1,!0),this._setGraphicVisibility(c,r.visible)):this._deconflictor.add(r))}return!1}_occludedVisibility(i,t,e,s){const c=Math.max(this._minAltitudeDifference,Math.abs(e-s))-this._minAltitudeDifference;return 0===i||t-i<=this._baseOccludedVisibility+this._altitudeFactor*c}_resetIterators(){this._checkOcclusionIterator=null,this._activeIterator=null}_ensureCheckOcclusionIterator(){return this._checkOcclusionIterator??=this._checkOcclusion.values(),this._checkOcclusionIterator}_ensureActiveGraphicsIterator(){return this._activeIterator??=this._active.values(),this._activeIterator}_ensureOcclusionQuery(){return this._occlusionQuery??=new k.GPUPointOcclusionQuery({view:this.view}),this._occlusionQueryUids.length||this._occlusionQuery.init(this._checkOcclusion.size,this._viewState.camera.eye),this._occlusionQuery}_projectHudLayer(i,t,e){const s=i.stageObject,c=s.geometries[0],r=c.material,o=w.getCenter(s.boundingVolumeWorldSpace.bounds);p.transformMat4(x,o,t.viewMatrix);const n=c.attributes,a=n.get("normal").data,l=n.get("centerOffsetAndDistance").data;r.applyShaderOffsetsView(x,a,s.transformation,l,t,e.scaleInfo,x),y.set(M,x[0],x[1],x[2],1),y.transformMat4(T,M,t.projectionMatrix),p.scale(e.positionNDC,T,1/T[3]),r.applyShaderOffsetsNDC(e.positionNDC,l,t,e.positionNDC,U),e.distanceWithoutPolygonOffset=t.depthNDCToWorld(U[2]),e.distance=U[2]===e.positionNDC[2]?e.distanceWithoutPolygonOffset:t.depthNDCToWorld(e.positionNDC[2]),y.set(T,e.positionNDC[0],e.positionNDC[1],e.positionNDC[2],1),y.transformMat4(M,T,t.inverseProjectionMatrix),y.scale(M,M,1/M[3]),p.set(e.positionView,x[0],x[1],x[2])}_isCulledBySlice(i,t){return i.slicePlaneEnabled&&this._viewState.slicePlaneEnabled&&m.extrusionContainsPoint(this._viewState.slicePlane,t)}_expandBoundingRect(i,t,e,c,{positionNDC:r,scaleInfo:o}){const n=e.getScreenSize(W);S.applyPrecomputedScaleFactor(n,o.factor,n),n[0]*=t.pixelRatio,n[1]*=t.pixelRatio;const a=b.offset(c.calculateRelativeScreenBounds(n,o.factorAlignment.scale*t.pixelRatio,E),s.lerp(0,t.fullWidth,.5+.5*r[0]),s.lerp(0,t.fullHeight,.5+.5*r[1])),l=this.marginFactor;if(0!==l){const i=l*Math.min(b.width(a),b.height(a));a[0]-=i,a[1]-=i,a[2]+=i,a[3]+=i}b.expand(i,a,i)}_setGraphicVisibility(i,t){const e=i?.graphics3DGraphic;e&&!e.destroyed&&(e.setVisibilityFlag(this.visibilityGroup,8,t),16===this.visibilityGroup&&this.view.labeler.setLabelGraphicVisibility(e,t))}},t.__decorate([r.property({constructOnly:!0})],i.Deconflictor.prototype,"view",void 0),t.__decorate([r.property({type:Boolean,readOnly:!0})],i.Deconflictor.prototype,"updating",null),t.__decorate([r.property({readOnly:!0})],i.Deconflictor.prototype,"_updatingHandles",void 0),i.Deconflictor=t.__decorate([l.subclass("esri.views.3d.layers.graphics.Deconflictor")],i.Deconflictor);const W=d.create();function z(i,t,e){return p.copy(H.direction,i.positionView),p.set(H.origin,0,0,0),!!w.intersectRay(t,H,N)&&i.distanceWithoutPolygonOffset>e}function L(i,t){return 16===t?i.labelLayers:i.layers}const Y=new class{constructor(){this.positionView=_.create(),this.positionNDC=_.create(),this.altitude=0,this.distance=0,this.distanceToOccluder=0,this.distanceWithoutPolygonOffset=0,this.scaleInfo=new C.ScaleInfo}get isOutsideScreen(){const i=this.positionNDC;return i[0]<-1||i[1]<-1||i[2]<-1||i[0]>=1||i[1]>=1||i[2]>=1}};i.DeconflictorGraphic=class{constructor(i,t){this.graphics3DGraphic=i,this.slicePlaneEnabled=t,this._info=null,this._labelInfo=null}ensureInfo(i){let t=this.getInfo(i);return t||(t=new F(this.graphics3DGraphic.graphic.uid),this._setInfo(i,t)),t}getInfo(i){return 16===i?this._labelInfo:this._info}removeInfo(i){this._setInfo(i,null)}_setInfo(i,t){16===i?this._labelInfo=t:this._info=t}},i.DeconflictorViewState=B,Object.defineProperty(i,Symbol.toStringTag,{value:"Module"})});