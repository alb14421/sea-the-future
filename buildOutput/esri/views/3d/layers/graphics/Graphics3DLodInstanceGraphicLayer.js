// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/support/aaBoundingBox","./elevationAlignmentUtils","./featureExpressionInfoUtils","./graphicUtils","../../webgl-engine/lib/Object3DStateID"],function(t,e,i,n,a,s,h,o,r){"use strict";const l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],g=n.create(),c=n.create(),d=[[0,1,2],[3,1,2],[0,4,2],[3,4,2],[0,1,5],[3,1,5],[0,4,5],[3,4,5]],u=e.create();t.Graphics3DLodInstanceGraphicLayer=class{constructor(t,e,i,n,a){this.graphics3DSymbolLayer=t,this.instanceIndex=e,this.elevationAligner=i,this.elevationContext=n,this._highlightOrderMap=a,this.type="lod-instance",this._highlights=new Set,this.alignedSampledElevation=0,this.isElevationSource=!1,this.needsElevationUpdates=!1,this._highlightName=null}initialize(){}setVisibility(t){const{instanceData:e}=this;t!==e.getVisible(this.instanceIndex)&&e.setVisible(this.instanceIndex,t)}destroy(){null!=this.instanceIndex&&(this.instanceData.removeInstance(this.instanceIndex),this.graphics3DSymbolLayer.notifyDestroyGraphicLayer(this))}get usedMemory(){return this.graphics3DSymbolLayer.usedMemory}alignWithElevation(t,e,i){if(this.elevationAligner){h.setContextFeature(this.elevationContext.featureExpressionInfoContext,i);const n=(i,n)=>s.evaluateElevationInfoAtPoint(i,t,this.elevationContext,e,n),a=this.elevationAligner(this,this.elevationContext,t.spatialReference,n,e);null!=a&&(this.alignedSampledElevation=a)}}getCenterObjectSpace(t=n.create()){return this.instanceData.getCombinedLocalTransform(this.instanceIndex,u),i.transformMat4(t,this._lodRenderer.baseBoundingSphere.center,u)}getBoundingBoxObjectSpace(t=a.create()){this.instanceData.getCombinedLocalTransform(this.instanceIndex,u);const e=this._lodRenderer.baseBoundingBox;a.empty(t);for(let n=0;n<8;++n)i.set(g,1&n?e[3]:e[0],2&n?e[4]:e[1],4&n?e[5]:e[2]),i.transformMat4(g,g,u),a.expandWithVec3(t,g);return t}computeAttachmentOrigin(t){this.instanceData.getGlobalTransform(this.instanceIndex,u),t.render.origin[0]+=u[12],t.render.origin[1]+=u[13],t.render.origin[2]+=u[14],t.render.num++}async getProjectedBoundingBox(t,e,n,s,h){const r=this.getBoundingBoxObjectSpace(h),p=d,m=a.isPoint(r)?1:p.length;this.instanceData.getGlobalTransform(this.instanceIndex,u);for(let t=0;t<m;t++){const e=p[t];g[0]=r[e[0]],g[1]=r[e[1]],g[2]=r[e[2]],i.transformMat4(g,g,u),l[3*t]=g[0],l[3*t+1]=g[1],l[3*t+2]=g[2]}if(!t(l,0,m))return null;a.empty(r);let f=null;this.calculateRelativeScreenBounds&&(f=this.calculateRelativeScreenBounds());for(let t=0;t<3*m;t+=3){for(let e=0;e<3;e++)r[e]=Math.min(r[e],l[t+e]),r[e+3]=Math.max(r[e+3],l[t+e]);f&&n.push({location:l.slice(t,t+3),screenSpaceBoundingRect:f})}if(e&&(a.center(r,c),"absolute-height"!==this.elevationContext.mode)){let t;const i=o.demResolutionForBoundingBox(r,e.service.spatialReference,e);try{t=await e.service.queryElevation(c[0],c[1],s,i,"ground")}catch(t){}null!=t&&a.offset(r,0,0,-this.alignedSampledElevation+t)}return r}addObjectState(t){0===t.stateType&&this.addObjectHighlightState(t)}addObjectHighlightState(t){const e=new r.Object3DHighlightStateID(t.highlightName);this._addHighlightId(e),t.addExternal(t=>{this._removeHighlightId(t)},e)}removeObjectState(t){this._highlights.forEach(e=>t.remove(e))}updateHighlights(t){this._highlightOrderMap=t,this._updateHighlightOptions()}_calculateHighlightOptions(){let t=-1,e=null;return this._highlights.forEach(({highlightName:i})=>{const n=this._highlightOrderMap.get(i);void 0!==n&&n>t&&(t=n,e=i)}),e}_addHighlightId(t){this._highlights.add(t),this._updateHighlightOptions()}_removeHighlightId(t){this._highlights.delete(t),this._updateHighlightOptions()}_updateHighlightOptions(){const t=this._calculateHighlightOptions();t!==this._highlightName&&(this._highlightName=t,this.instanceData.setHighlight(this.instanceIndex,t))}get _lodRenderer(){return this.graphics3DSymbolLayer.lodRenderer}get instanceData(){return this._lodRenderer.instanceData}},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});