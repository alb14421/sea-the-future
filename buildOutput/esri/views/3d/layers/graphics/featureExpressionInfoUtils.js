// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/Logger","../../../../core/promiseUtils","../../../../layers/graphics/hydratedFeatures","../../../../support/loadArcade"],function(e,t,r,n,c){"use strict";function o(e){return null!=e.cachedResult}function a(e){return"0"===e?0:null}e.clone=function(e){return{cachedResult:e.cachedResult,arcade:e.arcade?{func:e.arcade.func,context:e.arcade.modules.arcadeUtils.createExecContext(null,{sr:e.arcade.context.spatialReference}),modules:e.arcade.modules}:null}},e.createContext=async function(e,t,n,o){const u=e?.expression;if("string"!=typeof u)return null;const s=a(u);if(null!=s)return{cachedResult:s};const l=await c.loadArcade();r.throwIfAborted(n);const i=l.arcadeUtils,d=i.createSyntaxTree(u);return i.dependsOnView(d)?(null!=o&&o.error("Expressions containing '$view' are not supported on ElevationInfo"),{cachedResult:0}):{arcade:{func:i.createFunction(d),context:i.createExecContext(null,{sr:t}),modules:l}}},e.createContextWithoutExpressionSupport=function(e){const t=e?.expression;if("string"==typeof t){const e=a(t);if(null!=e)return{cachedResult:e}}return null},e.createFeature=function(e,t,r){return e.arcadeUtils.createFeature(t.attributes,t.geometry,r)},e.execute=function(e){if(null!=e){if(o(e))return e.cachedResult;const t=e.arcade;let r=t?.modules.arcadeUtils.executeFunction(t.func,t.context);return"number"!=typeof r&&(e.cachedResult=0,r=0),r}return 0},e.extractExpressionInfo=function(e,t=!1){let r=e?.featureExpressionInfo;const n=r?.expression;return t||"0"===n||(r=null),r??null},e.setContextFeature=function(e,r){if(null!=e&&!o(e)){if(!r||!e.arcade)return void t.getLogger("esri.views.3d.layers.graphics.featureExpressionInfoUtils").errorOncePerTick("Arcade support required but not provided");const c=r;c._geometry&&(c._geometry=n.hydrateGeometry(c._geometry)),e.arcade.modules.arcadeUtils.updateExecContext(e.arcade.context,r)}},e.zeroContext={cachedResult:0},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});