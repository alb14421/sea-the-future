// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/Error","../../../../core/maybe","../../../../core/Promise","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../core/support/UpdatingHandles","../../../../layers/graphics/controllers/FeatureTileController3D","../../../../symbols/support/utils","./elevationAlignPointsInFeatures","./Graphics3DFeatureProcessor","./QueryEngine","./QueryEngineContext","./queryForSymbologySnapping","../support/HeatmapFeatureProcessor","../support/LayerViewPerformanceInfo","../../../support/layerViewUtils","../../../support/Scheduler"],function(e,r,t,i,s,a,o,p,n,l,c,h,d,u,y,g,_,G,P,m,w,f,D){"use strict";e.Graphics3DGraphicsPipeline=class extends s.EsriPromise{constructor(e){super(e),this._dataUpdatingState=0,this.graphicsQuery={queryForSymbologySnapping:async(e,r)=>this.symbologySnappingSupported?P.queryForSymbologySnapping(this.graphics3DProcessor,e,r):{candidates:[],sourceCandidateIndices:[]},executeQuery:(e,r)=>this.queryEngine.executeQuery(e,r),executeQueryForIds:(e,r)=>this.queryEngine.executeQueryForIds(e,r),executeQueryForCount:(e,r)=>this.queryEngine.executeQueryForCount(e,r),executeQueryForExtent:(e,r)=>this.queryEngine.executeQueryForExtent(e,r),executeQueryForLatestObservations:(e,r)=>this.queryEngine.executeQueryForLatestObservations(e,r)},this.controller=null,this.updatingHandles=new h.UpdatingHandles,this._controllerCreated=!1,this._pendingController=null}initialize(){this.addResolvingPromise(this._initializeController()),this.updatingHandles.add(()=>this.layer.renderer,e=>this._recreateProcessor(e),a.initial),this.updatingHandles.add(()=>this.updatePolicy,e=>this.processor.preferredUpdatePolicy=e);const{layer:e,view:r,hasM:t,hasZ:i}=this,{spatialReference:s,resourceController:o}=r,p=new G.QueryEngineContext(s,e,o,()=>this.processor.featureStore,i,t);this.queryEngine=new _.QueryEngine({context:p,priority:D.TaskPriority.FEATURE_QUERY_ENGINE})}destroy(){this.removeAllHandles(),this.updatingHandles.destroy(),this._destroyPendingController(),this.controller=i.destroyMaybe(this.controller),this.processor=i.destroyMaybe(this.processor),this.queryEngine=i.destroyMaybe(this.queryEngine),this.loadedGraphics=null}_destroyPendingController(){this._pendingController=i.destroyMaybe(this._pendingController)}get updating(){return this.updatingHandles.updating||!this._controllerCreated||this.controller?.updating||this.processor?.updating}get legendEnabled(){return this.processor.legendEnabled}get layer(){return this.layerView.layer}get layerViewUid(){return this.layerView.uid}get view(){return this.layerView.view}get hasZ(){return this.layerView.hasZ}get hasM(){return this.layerView.hasM}get fullOpacity(){return this.layerView.fullOpacity}get suspended(){return this.layerView.suspended}get filter(){return"filter"in this.layerView?this.layerView.filter:null}get effectiveDisplayFilterClause(){return"effectiveDisplayFilterClause"in this.layerView?this.layerView.effectiveDisplayFilterClause:null}get slicePlaneEnabled(){return this.layerView.slicePlaneEnabled}get featureSpatialReference(){return"featureSpatialReference"in this.layerView?this.layerView.featureSpatialReference:null}get graphics3DProcessor(){return"graphics-3d"===this.processor?.type?this.processor:null}get heatmapProcessor(){return"heatmap"===this.processor?.type?this.processor:null}get hasAllFeatures(){return!(!this.controller||!("hasAllFeatures"in this.controller))&&this.controller.hasAllFeatures}get hasAllFeaturesInView(){return!(!this.controller||!("hasAllFeaturesInView"in this.controller))&&this.controller.hasAllFeaturesInView}get hasFullGeometries(){return!(!this.controller||!("hasFullGeometries"in this.controller))&&this.controller.hasFullGeometries}get symbologySnappingSupported(){return this.layer?.renderer?.symbols?.some(u.symbolHasExtrudeSymbolLayer)??!1}get updatePolicy(){return 1}get scaleVisibilitySuspended(){return this.processor?.scaleVisibilitySuspended}get timeExtent(){return"timeExtent"in this.layerView?this.layerView.timeExtent:null}get dataUpdating(){return 0!==this._dataUpdatingState}get suspendInfo(){return this.processor?.suspendInfo??{}}forEachGraphic(e){this.loadedGraphics.forEach(e)}findGraphic(e){return this.loadedGraphics.find(e)}queryObjectIds(e,r){return this.layerView.queryObjectIds(e,r)}whenGraphicBounds(e,r){return this.processor?.whenGraphicBounds(e,r)}computeAttachmentOrigin(e,r){return this.processor?.computeAttachmentOrigin(e,r)}async elevationAlignPointsInFeatures(e,r){const i=this.graphics3DProcessor;if(null==i)throw new t("featurelayerview3d:missing-processor","A Graphics3D processor is needed to resolve graphics elevation.");return y.elevationAlignPointsInFeatures(this.view,this.layer,e=>i.getGraphics3DGraphicByObjectId(e),e,r)}highlightByGraphics(e,r){return this.processor.highlightByGraphics(e,r)}highlightByObjectIds(e,r){return this.processor.highlightByObjectIds(e,this.layer.objectIdField,r)}maskOccludee(e){return this.processor.maskOccludee(e)}notifyContentGeometryUpdate(){this.layerView.emit("visible-geometry-changed")}async _initializeController(){const e=this.createController();this._pendingController=e,this._setupDataUpdating(e),await e.when(),this._setControllerWhenInitialized(e)}_setupDataUpdating(e){"dataUpdating"in e&&this.addHandles([a.watch(()=>e.dataUpdating,e=>{e&&0===this._dataUpdatingState?this._dataUpdatingState=1:e||1!==this._dataUpdatingState||(this._dataUpdatingState=0)},a.sync),a.watch(()=>!!this.graphics3DProcessor?.dataUpdating,r=>{r&&1===this._dataUpdatingState?this._dataUpdatingState=2:r||2!==this._dataUpdatingState||(this._dataUpdatingState=e.dataUpdating?1:0)},a.sync)])}async _setControllerWhenInitialized(e){try{await this.when()}catch(e){}this._controllerCreated=!0,this.isResolved()&&!this.destroyed?(await a.whenOnce(()=>this.view?.basemapTerrain?.ready),this.beforeSetController(e),this._pendingController=null,this.controller=e,this.loadedGraphics=e.graphics):this._destroyPendingController()}_recreateProcessor(e){const r="heatmap"===e?.type,t="heatmap"===this.processor?.type,i=this.processor;if(i&&r===t)return;const s=r?new m.HeatmapFeatureProcessor({owner:this}):new g.Graphics3DFeatureProcessor({owner:this,frustumVisibilityEnabled:!0,scaleVisibilityEnabled:!f.hasLayerBasedScaleVisibility(),filterVisibilityEnabled:!0,timeExtentEnabled:!0,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!0,preferredUpdatePolicy:this.updatePolicy,updateClippingExtent:e=>this._updateClippingExtent(e)});this.processor=s,i?.destroy(),this.queryEngine?.clear(),this.addResolvingPromise(s.when())}_updateClippingExtent(e){if(this.clippingExtent=e,!this.controller)return!1;switch(this.controller.type){case"stream":return!1;case"feature-tile-3d":return this.controller.extent=e,!0}}get usedMemory(){return this.processor?.usedMemory??0}get performanceInfo(){const e=this.controller instanceof d.FeatureTileController3D?this.controller:null;return new w.LayerViewPerformanceInfo(this.usedMemory,this.loadedGraphics?.length,e?.serviceDataCount??-1,e?.maximumNumberOfFeatures??-1,0,this.processor.performanceInfo)}},r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"updating",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"legendEnabled",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"layerView",void 0),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"layer",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"layerViewUid",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"view",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"hasZ",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"hasM",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"fullOpacity",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"suspended",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"filter",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"effectiveDisplayFilterClause",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"slicePlaneEnabled",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"featureSpatialReference",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"loadedGraphics",void 0),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"graphics3DProcessor",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"heatmapProcessor",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"hasAllFeatures",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"hasAllFeaturesInView",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"hasFullGeometries",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"symbologySnappingSupported",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"updatePolicy",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"scaleVisibilitySuspended",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"timeExtent",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"_dataUpdatingState",void 0),r.__decorate([o.property({readOnly:!0})],e.Graphics3DGraphicsPipeline.prototype,"dataUpdating",null),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"controller",void 0),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"processor",void 0),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"updatingHandles",void 0),r.__decorate([o.property()],e.Graphics3DGraphicsPipeline.prototype,"_controllerCreated",void 0),e.Graphics3DGraphicsPipeline=r.__decorate([c.subclass("esri.views.3d.layers.graphics.Graphics3DGraphicsPipeline")],e.Graphics3DGraphicsPipeline),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});