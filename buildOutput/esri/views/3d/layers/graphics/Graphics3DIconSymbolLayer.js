// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../Color","../../../../core/asyncUtils","../../../../core/Error","../../../../core/has","../../../../core/lang","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/screenUtils","../../../../core/string","../../../../core/urlUtils","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/projection/projectPointToVector","../../../../geometry/support/aaBoundingBox","../../../../layers/support/FieldsIndex","../../../../support/ArcadeExpression","../../../../symbols/cim/CIMSymbolHelper","../../../../symbols/cim/utils","../../../../symbols/support/cimSymbolUtils","../../../../symbols/support/IconSymbol3DLayerResource","../../../../symbols/support/Symbol3DAnchorPosition2D","../../../../symbols/support/utils","./constants","./ElevationAligners","./elevationAlignmentUtils","./focusAreaStyle","./Graphics3DDrapedGraphicLayer","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolLayer","./graphicUtils","./placementUtils","./pointUtils","../support/FastSymbolUpdates","../../support/engineContent/sdfPrimitives","../../terrain/OverlayRenderer","../../webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/lib/Texture","../../webgl-engine/materials/HUDMaterial"],function(e,t,r,i,s,a,o,n,l,c,h,u,d,m,p,_,y,f,g,b,x,S,v,P,w,C,z,M,O,R,I,T,D,U,E,F,G,V,A,H,L,j,k){"use strict";const B=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),$=m.fromValues(0,0,1),q=[G.defaultTexSize*G.defaultSymbolSizeRatio,G.defaultTexSize*G.defaultSymbolSizeRatio];class N extends T.Graphics3DSymbolLayer{static{this.PRIMITIVE_SIZE=q}getCachedSize(){return{size:this._getIconSize()}}static{this.elevationModeChangeTypes={definedChanged:1,staysOnTheGround:0,onTheGroundChanged:2}}constructor(e,t,r,i){super(e,t,r,i,function(e){return 1===(e.material?.color?.a??0)&&null!=Q(e)}(t)),this._cimData=null,this._overrideHelperClass=null,this._arcadeInfo=null,this._cimSymbolMaterials=new Map,this._cimSymbolTextures=new Map,this._cimMaterialParametersInfo=null,this._cimScaleFactorOrFunction=null,this._size=null,this._symbolTextureRatio=1,this._outlineSize=0,this._textureHandle=null,this._patchTask=null,this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!0}}async doLoad(e){this._validateOrThrow();const t=this._prepareMaterialParameters(),r=this._getPrimitive();if(null!=r)this._prepareResourcesPrimitive(t,r);else{const r=w.getIconHref(this.symbolLayer),i=J(r);null!=i?await this._prepareResourcesCIM(t,JSON.parse(i),e):await this._prepareResourcesHref(t,r,e)}}_validateOrThrow(){if(this._drivenProperties.size)return;const e=D.validateSymbolLayerSize(this._getIconSize());if(e)throw new s("graphics3diconsymbollayer:invalid-size",e)}_getIconSize(){const e=this.symbolLayer,t=Math.round(null!=e.size?c.pt2px(e.size):16);return this._drivenProperties.size?Math.max(t,64):t}_generateTextureCIM(e,t){const r=this._overrideHelperClass;let i=this._cimData;if(r&&i&&i.symbol||this.logger.error("Can't create texture, CIM data is undefined"),i.primitiveOverrides){i=o.clone(i);const s=i.primitiveOverrides;r.evaluateOverrides(s,e,this._arcadeInfo.geometryType,null,null,t.layer.fieldsIndex),r.applyOverrides(i.symbol,s)}const s=h.numericHash(JSON.stringify(i));let a=this._cimSymbolTextures.get(s);if(a)return a;const n=this._context.sharedResources.cimSymbolRasterizer,l=this._context.renderer&&"dictionary"===this._context.renderer.type?this._context.renderer.fieldMap:null;l&&r.applyDictionaryTextOverrides(i.symbol,e,l,null);const c=null!=this._cimScaleFactorOrFunction?x.evaluateValueOrFunction(this._cimScaleFactorOrFunction,e):1;1!==c&&i.symbol&&S.scaleCIMSymbol(i.symbol,c,!0);const u=b.CIMSymbolHelper.getEnvelope(i,null,n.resourceManager);if(u?.width&&u.height){const e=u.x+u.width/2,t=u.y+u.height/2,r=n.rasterize({type:"cim",data:i},u.width,u.height,e,t,1,"esriGeometryPoint",0,null,this._context.graphicsCoreOwner.view.state.rasterPixelRatio),s=new P.Symbol3DAnchorPosition2D({x:-u.x/u.width-.5,y:(u.height+u.y)/u.height-.5});this._cimMaterialParametersInfo.anchorPosition=W("relative",s),a=new j.Texture(r,{width:r?.width??1,height:r?.height??1,reloadable:!0})}else a=new j.Texture(new ImageData(1,1),{width:1,height:1,reloadable:!0});return this._cimSymbolTextures.set(s,a),this._context.stage.addTexture(a),a}_prepareMaterialParameters(){const e={anchorPosition:W(this.symbolLayer.anchor,this.symbolLayer.anchorPosition),rotation:this.symbolLayer.angle},t=this.symbol;(function(e){return e&&"point-3d"===e.type&&e.hasVisibleVerticalOffset()})(t)&&(e.verticalOffset=new A.VerticalOffsetParameters(t.verticalOffset)),this._context.screenSizePerspectiveEnabled&&(e.screenSizePerspective=this._context.sharedResources.screenSizePerspectiveSettings),(0!==e.rotation||this._drivenProperties.rotation)&&(e.hasRotation=!0);const r=!a("disable-feature:non-occluded-hud");return e.occlusionTest=!r,e.occludedFragmentFade=r,e.horizonCullingEnabled=r&&this._context.spherical,e.hasSlicePlane=this._context.slicePlaneEnabled,e}_prepareResourcesPrimitive(e,t){const r=this._getOutlineSize();if(Z(t)&&0===r)throw new Error("Nothing to render");if(this._outlineSize=r,e.color=this._getFillColor(),e.outlineColor=this._getOutlineColor(),e.outlineSize=this._outlineSize,null!=this._context.sharedResources.textures){const r=this._context.sharedResources.textures.fromData(`${t}-icon`,()=>G.createTexture(t));this._textureHandle=r,e.textureId=r.texture.id}e.textureIsSignedDistanceField=!0,e.sampleSignedDistanceFieldTexelCenter=G.requiresHalfTexelOffset(t),e.distanceFieldBoundingBox=G.defaultBoundingBox;const i=this._getIconSize();this._size=[i,i],this._symbolTextureRatio=1/G.defaultSymbolSizeRatio,this._createMaterial(e)}async _prepareResourcesHref(e,t,r){this._outlineSize=this._getOutlineSize(),e.color=this._getFillColor(),e.outlineColor=this._getOutlineColor(),e.outlineSize=this._outlineSize,e.textureIsSignedDistanceField=!1;const a=this._getIconSize(),o=a*this._context.graphicsCoreOwner.view.state.rasterPixelRatio;if(null!=this._context.sharedResources.textures){const n=await i.result(this._context.sharedResources.textures.fromUrl(t,o,{signal:r}));if(!1===n.ok)throw l.throwIfAbortError(n.error),new s("graphics3diconsymbollayer:request-failed",`Failed to load (Request for icon resource failed: ${t})`);this._textureHandle=n.value;const c=n.value.texture;this._size=K(c,a),e.textureId=c.id}this._createMaterial(e)}async _prepareResourcesCIM(t,r,i){const{OverrideHelper:s}=await new Promise((t,r)=>e(["../../../../symbols/cim/OverrideHelper"],t,r));if(this._overrideHelperClass=s,this._cimData=r,!this._context.sharedResources.cimSymbolRasterizer){const t=(await new Promise((t,r)=>e(["../../../../symbols/cim/CIMSymbolRasterizer"],t,r))).CIMSymbolRasterizer;l.throwIfAborted(i),this._context.sharedResources.cimSymbolRasterizer||(this._context.sharedResources.cimSymbolRasterizer=new t(this._context.renderCoordsHelper.spatialReference))}const a=this._context.sharedResources.cimSymbolRasterizer,o=[],n=r,c=n?.symbol;b.CIMSymbolHelper.fetchResources(c,a.resourceManager,o,i),b.CIMSymbolHelper.fetchFonts(c,a.resourceManager,o);const h=this._context.layer.fields?this._context.layer.fields.map(e=>e.toJSON()):[],u=this._context.renderCoordsHelper.spatialReference;if(this._arcadeInfo={spatialReference:u,fields:h,geometryType:"esriGeometryPoint"},n?.primitiveOverrides&&o.push(s.createRenderExpressions(n.primitiveOverrides,this._arcadeInfo)),o.length>0&&(await Promise.all(o),l.throwIfAborted(i)),this._context.renderer&&"dictionary"===this._context.renderer.type&&this._context.renderer.scaleExpression){const t=this._context.renderer;if(t.scaleExpression){const r=t.scaleExpression,i=await g.createRendererExpression(r,this._context.layer.spatialReference),{default:s}=await new Promise((t,r)=>e(["../../../2d/arcade/callExpressionWithFeature"],e=>t(B(e)),r)),a=new f(h);this._cimScaleFactorOrFunction=(e,t,r)=>{const o=s(i,e,{$view:r},"esriGeometryPoint",a,t);return null!==o?o:1}}}l.throwIfAborted(i),this._cimMaterialParametersInfo=t,this._cimMaterialParametersInfo.color=this._getFillColor(),this._cimMaterialParametersInfo.outlineColor=[0,0,0,0],this._cimMaterialParametersInfo.outlineSize=0,this._cimMaterialParametersInfo.textureIsSignedDistanceField=!1}_getPrimitive(){return Q(this.symbolLayer)}_getOutlineSize(){let e=0;const t=this.symbolLayer;return null!=t.outline?.size?Math.max(c.pt2px(t.outline.size),0):(e=Z(this._getPrimitive())?1.5:0,Math.max(e,0))}_getOutlineColor(){const e=this._getLayerOpacity(),t=this.symbolLayer,i=t?.outline?.color;if(null!=i){const t=r.toUnitRGB(i),s=i.a*e;return[t[0],t[1],t[2],s]}return[0,0,0,0]}_getFillColor(){if(Z(this._getPrimitive()))return C.transparentUnit;const e=null==this._getPrimitive(),t=this._materialColor;return this._getCombinedOpacityAndColor(t,{hasIntrinsicColor:e})}get _materialColor(){return this.symbolLayer.material?.color}get _fastVisualVariableFallbackColor(){const e=this._materialColor;return null==e?null==this._getPrimitive()?p.ONES:p.ZEROS:r.toUnitRGBA(e)}_getFallbackSize(){const e=this._getIconSize(),{symbolLayer:{size:t}}=this;return(null!=t?Math.round(c.pt2px(t)):16)/e}_createMaterial(e){const t=this._context.spherical;if(this._cimData){this._fastUpdates=null;let r=e.textureId?this._cimSymbolMaterials.get(e.textureId):null;return r||(r=new k.HUDMaterial(e,t),this._cimSymbolMaterials.set(e.textureId??0,r)),r}this._fastUpdates=F.initFastSymbolUpdatesState(this._context.renderer,this._fastVisualVariableConvertOptions()),this._fastUpdates&&(e={...e,...this._fastUpdates.materialParameters}),this._materials[0]=new k.HUDMaterial(e,t),e.isFocused=!1;const r=this.view.map?.focusAreas.style;return e.color=O.focusAreaHUDColor(e.color,r),e.outlineColor=O.focusAreaHUDColor(e.outlineColor,r),this._materials[1]=new k.HUDMaterial(e,t),this._materials[0]}_setDrapingDependentMaterialParameters(){this.draped&&(this._forEachMaterial(e=>{e.setParameters({verticalOffset:null,screenSizePerspective:null,occlusionTest:!1,hasSlicePlane:!1,shaderPolygonOffset:0,draped:this.draped})}),this.layerOpacityChanged())}destroy(){super.destroy(),this._patchTask=n.abortMaybe(this._patchTask),this._materials.length=0,this._cimSymbolMaterials.clear(),this._cimSymbolTextures.forEach(e=>this._context.stage.removeTexture(e)),this._cimSymbolTextures.clear(),this._textureHandle=n.releaseMaybe(this._textureHandle)}_getScaleFactor({size:e},t){if(!this._drivenProperties.size)return 1;if(null==e)return this._getFallbackSize();const[r,i,s]=e;return"symbol-value"===r?1:"number"==typeof r&&isFinite(r)?c.pt2px(r)/t:"number"==typeof s&&isFinite(s)?c.pt2px(s)/t:1}_getDrivenRotation(e){return this._drivenProperties.rotation?e.heading??0:0}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry))return null;const r=E.placePointOnGeometry(t.geometry);if(null==r)return this.logger.warn(`unsupported geometry type for text symbol: ${t.geometry.type}`),null;let i,s=[0,0];const a=this.view.focusAreasView?.containsGeometry(r)??!0;if(this._cimData){if(!this._cimData.symbol)return null;const r=this._generateTextureCIM(t,e),o={textureId:r.id,isFocused:a,...this._cimMaterialParametersInfo};i=this._createMaterial(o);const n=this._context.graphicsCoreOwner.view.state.rasterPixelRatio;s=[r.parameters.width/n,r.parameters.height/n]}else s=this._size,i=a?this._materials[0]:this._materials[1];if(null==r)return this.logger.warn(`unsupported geometry type for icon symbol: ${t.geometry.type}`),null;const o=e.renderingInfo,n=this._getDrivenUInt8Color(o,this._materialColor,null==this._getPrimitive()),l=this._getDrivenRotation(o);let c=1;if(!this._fastUpdates?.visualVariables.size){const e=s[0]>s[1]?s[0]:s[1];c=this._getScaleFactor(o,e)}c*=this._symbolTextureRatio;const h=d.fromValues(s[0]*c,s[1]*c),u=this.setGraphicElevationContext(t);return this.ensureDrapedStatus("on-the-ground"===u.mode)&&this._setDrapingDependentMaterialParameters(),this.draped?this._createAsOverlay(t,r,i,n,l,h):this._createAs3DShape(t,r,i,n,l,h,u,t.uid)}layerOpacityChanged(){const e=this._getFillColor(),t=this._getOutlineColor();this._forEachMaterial(r=>{r.setParameters({color:e}),r.setParameters({outlineColor:t})})}updateGeometry(e,t){if(this.draped||!this._validateGeometry(t))return!1;const{elevationContext:r,stageObject:i}=e;if(r.mode!==this.getGeometryElevationMode(t))return!1;const s=E.placePointOnGeometry(t);if(!s)return!1;const a=E.updateStageObjectGeometry(i,this._context,s,r);if(null==a)return!1;const o=E.getLocalOriginForPoint(this._context,s);return i.geometries[0].localOrigin===o&&(e.alignedSampledElevation=a,E.extendPointGraphicElevationContext(e,s,this._context.elevationProvider),!0)}layerElevationInfoChanged(e,t,r){const i=this._elevationContext.mode,s=M.elevationModeChangeUpdateType(N.elevationModeChangeTypes,r,i);if(1!==s)return s;const a=M.needsElevationUpdates2D(i)||"absolute-height"===i;return this.updateGraphics3DGraphicElevationInfo(e,t,()=>a)}slicePlaneEnabledChanged(){return this.draped||this._forEachMaterial(e=>{e.setParameters({hasSlicePlane:this._context.slicePlaneEnabled})}),!0}physicalBasedRenderingChanged(){return!0}get pixelRatioChanged(){return null!=this._getPrimitive()}applyRendererDiff(e,t){for(const r in e.diff){if("visualVariables"!==r)return 0;if(!F.updateFastSymbolUpdatesState(this._fastUpdates,t,this._fastVisualVariableConvertOptions()))return 0;this._materials[0]?.setParameters(this._fastUpdates.materialParameters)}return 2}updateFocus(e,t){t.forEach(t=>{const r=E.placePointOnGeometry(t.graphic.geometry);if(null==r)return void this.logger.warn(`unsupported geometry type for text symbol: ${t.graphic.geometry.type}`);const i=this.view.focusAreasView?.containsGeometry(r)??!0;t.layers.forEach(r=>{r?.graphics3DSymbolLayer===this&&r.stageObject&&r.stageObject.geometries.some(e=>e.material.parameters.isFocused!==i)&&e(t)})})}prepareSymbolLayerPatch(e){if(this._patchTask?.abort(),"partial"!==e.diff.type)return;const t=e.diff.diff;this._preparePatchResource(e,t),this._preparePatchRotation(e,t)}_preparePatchResource(e,t){if(!t.resource||"partial"!==t.resource.type)return;const r=t.resource.diff;if("complete"!==r?.href?.type)return;const a=r.href.newValue,{textures:o}=this._context.sharedResources;if(null==a||null==o||null!=J(a))return;const c=this._getIconSize(),h=c*this._context.graphicsCoreOwner.view.state.pixelRatio;e.symbolLayerStatePatches.push(()=>{this._patchTask=n.abortMaybe(this._patchTask),this._patchTask=i.createTask(e=>this._context.schedule(async(e,t)=>{const r=await i.result(o.fromUrl(a,h,{signal:t}));l.throwIfAborted(t);const u=!r.ok;if(u&&l.throwIfAbortError(r.error),this._textureHandle=n.releaseMaybe(this._textureHandle),this._patchTask=null,u){this._forEachMaterial(e=>{e.visible=!1,e.setParameters({textureId:null})});const e=`Failed to load (Request for icon resource failed: ${a})`;return void this.logger.error(new s("graphics3diconsymbollayer:request-failed",e))}this._textureHandle=r.value;const d=r.value.texture;this._size=K(d,c),this._forEachMaterial(e=>{e.setParameters({textureId:d.id}),e.visible=!0})},e))}),delete r.href}_preparePatchRotation(e,t){if(!t.angle||"complete"!==t.angle.type)return;const r=t.angle.newValue??0,i=0!==r||this._drivenProperties.rotation;e.symbolLayerStatePatches.push(()=>{this._forEachMaterial(e=>e.setParameters({rotation:r,hasRotation:i}))}),delete t.angle}_defaultElevationInfoNoZ(){return X}_createAs3DShape(e,t,r,i,s,a,o,n){const l=this.getFastUpdateAttrValues(e),c=this._context.layerViewUid,h=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:n,layerViewUid:c}),u=H.createPointGeometry(r,{normal:$,color:i,rotation:s,size:a,centerOffsetAndDistance:Y,featureAttribute:l,olidColor:h}),d=E.createStageObject(this._context,t,u,o,n);if(null==d)return null;const m=new I.Graphics3DObject3DGraphicLayer(this,d.object,null,z.perObjectElevationAligner,o);return m.alignedSampledElevation=d.sampledElevation,m.needsElevationUpdates=M.needsElevationUpdates2D(o.mode)||"absolute-height"===o.mode,m.getScreenSize=this._createScreenSizeGetter(a,l),m.calculateRelativeScreenBounds=e=>r.calculateRelativeScreenBounds(m.getScreenSize(),1,e),E.extendPointGraphicElevationContext(m,t,this._context.elevationProvider),m}_createAsOverlay(e,t,r,i,s,a){r.renderPriority=this._renderPriority;const o=m.create();_.projectPointToVector(t,o,this._context.overlaySR),o[2]=V.drapedZ;const n=this._context.clippingExtent;if(null!=n&&!y.containsPoint(n,o))return null;const l=this.getFastUpdateAttrValues(e),c=e.uid,h=this._context.layerViewUid,u=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:c,layerViewUid:h}),d=H.createPointGeometry(r,{normal:$,position:o,color:i,rotation:s,size:a,featureAttribute:l,olidColor:u}),p=new L.RenderGeometry(d,{layerViewUid:h,graphicUid:c}),f=new R.Graphics3DDrapedGraphicLayer(this,[p],null,this._context.drapeSourceRenderer);return f.getScreenSize=this._createScreenSizeGetter(a,l),f.calculateRelativeScreenBounds=e=>r.calculateRelativeScreenBounds(f.getScreenSize(),1,e),f}_createScreenSizeGetter(e,t){const r=this._outlineSize+2;if(this._fastUpdates&&t){const i=e[0]/this._symbolTextureRatio,s=e[1]/this._symbolTextureRatio;return(e=d.create())=>{const[a,o]=F.evaluateModelTransformScale(ee,this._fastUpdates.materialParameters,t);return e[0]=a*i+r,e[1]=o*s+r,e}}const i=e[0]/this._symbolTextureRatio+r,s=e[1]/this._symbolTextureRatio+r;return(e=d.create())=>(e[0]=i,e[1]=s,e)}_fastVisualVariableConvertOptions(){const e=Math.max(this._size[0],this._size[1]),t=m.fromValues(e,e,e),r=c.px2pt(1),i=e*r,s=m.fromValues(i,i,i),a=this._getFallbackSize();return new F.ConvertOptions({supports:{size:!0,color:!0,rotation:!0,opacity:!1},modelSize:t,symbolSize:s,unitInMeters:r,fallbackColor:this._fastVisualVariableFallbackColor,fallbackSize:m.fromValues(a,a,a)})}_forEachMaterial(e){this._materials.forEach(e),this._cimSymbolMaterials.forEach(e)}test(){return{...super.test(),material:this._materials[0]}}}function Z(e){return null!=e&&("cross"===e||"x"===e)}function J(e){const t=u.dataComponents(e);return"application/json"===t?.mediaType?t.data:void 0}function W(e,t){return"relative"===e?d.fromValues((t.x||0)+.5,.5-(t.y||0)):e in U.namedAnchorToHUDMaterialAnchorPos?U.namedAnchorToHUDMaterialAnchorPos[e]:U.namedAnchorToHUDMaterialAnchorPos.center}function K({parameters:e},t){const r=(e.width??1)/(e.height??1);return r>1?[t,Math.round(t/r)]:[Math.round(t*r),t]}function Q(e){return e.resource?.href?null:e.resource?.primitive??v.defaultPrimitive}const X={mode:"relative-to-ground",offset:0},Y=p.fromValues(0,0,0,1),ee=m.create();t.Graphics3DIconSymbolLayer=N,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});