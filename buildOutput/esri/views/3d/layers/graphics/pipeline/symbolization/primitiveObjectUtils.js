// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../core/has","./symbolizationUtils","../../../../webgl-engine/lib/AttributeArray","../../../../webgl-engine/lib/GeometryUtil"],function(e,t,n,i,a){"use strict";function s(e,t){let n=e.get(t);return n&&!n.exclusive&&(n={...n,exclusive:!0,data:i.cloneAttributeData(n.data)},e.set(t,n)),n}const r=[{tesselation:6,minScreenSpaceRadius:0},{tesselation:18,minScreenSpaceRadius:7},{tesselation:64,minScreenSpaceRadius:65}];e.createPrimitiveGeometry=function(e,t){const i=(e,i,a=!1)=>({levels:e.map(e=>{const r=n.inputAttributesToAttributesMap(i(e.tesselation));return a&&function(e){const t=e,n=t.get("position").data,i=t.get("normal").data;if(i){const t=s(e,"normal").data;for(let e=0;e<i.length;e+=3){const n=i[e+1];t[e+1]=-i[e+2],t[e+2]=n}}if(n){const t=s(e,"position").data;for(let e=0;e<n.length;e+=3){const i=n[e+1];t[e+1]=-n[e+2],t[e+2]=i}}}(r),{components:[{attributes:r,olidColor:void 0,transformation:null,materialId:t,visibilities:new Uint8Array([1]),objectIds:new Uint32Array([-1])}],minScreenSpaceRadius:e.minScreenSpaceRadius}})});switch(e){case"cone":return i(r,e=>a.createConeGeometryData(1,.5,e,!1),!0);case"sphere":return i([{tesselation:0,minScreenSpaceRadius:0},{tesselation:1,minScreenSpaceRadius:8},{tesselation:2,minScreenSpaceRadius:16},{tesselation:3,minScreenSpaceRadius:50},{tesselation:4,minScreenSpaceRadius:250}],e=>a.createPolySphereData(.5,e,!0));case"cube":case"inverted-cone":case"cylinder":case"tetrahedron":case"diamond":throw new Error("not implemented");default:return}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});