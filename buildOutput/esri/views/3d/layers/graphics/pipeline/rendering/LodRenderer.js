// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../chunks/tslib.es6","../../../../../../core/promiseUtils","../../../../../../core/Logger","../../../../../../core/has","../../../../../../core/RandomLCG","../../../../../../core/Error","../../../../../../core/accessorSupport/decorators/subclass","../../../../webgl-engine/lib/lodRendering/LodRenderer","../../../../webgl-engine/lib/lodRendering/LodResources"],function(e,r,s,n,t,o,i,a,d,l){"use strict";function c(e){return null!=e&&"materialType"in e&&"default"===e.materialType}e.LodRenderer=class{constructor(e){this._instanceGroupToIndices=new Map,this._instanceIndexToFeatureId=new Map,this._disposeResourceHandles=new Array,this._lodRendererResources=null,this._numFeatures=0,this.layerViewUid=e.layerViewUid,this.view=e.view,this.sharedResources=this.view.sharedSymbolResources,this.scheduler=this.view.resourceController.scheduler}get numFeatures(){return this._numFeatures}get usedMemory(){const e=this._lodRendererResources?.lodRenderer,r=e?.symbol;return(r?.computeUsedMemory()??0)+16*this._instanceIndexToFeatureId.size}destroy(){this._disposeResourceHandles.forEach(e=>e())}async doLoad(e,r,n){const t=function(e,r){const s=r.levels.map(r=>{const s=r.components.map(r=>{const s=e(r.materialId);if(!c(s))throw new Error("LodRenderer only supports DefaultMaterial");const n=new l.LodComponentRenderGeometry(s,r.renderGeometryBuffer.data,r.renderGeometryBuffer.elementCount,r.boundingInfo);return new l.LodComponentResources(n)});return new l.LodLevelResources(s,r.minScreenSpaceRadius)});return new l.LodResources(s)}(e=>r(e),e),o=this.view.stage,i=t.getMaterials(),a=t.getTextures();o.addTextures(a),this._addDisposeResource(()=>{a.forEach(e=>e.unload()),o.removeTextures(a)}),await Promise.all(a.map(e=>this.view.stage.schedule(()=>e.load(o.renderView.renderingContext),n))),s.throwIfAborted(n);const d=await this._createLodRenderer(t,n);this._lodRendererResources={lodRenderer:d,materials:i,textures:a}}addInstances(e,r){const s=this._lodRendererResources;if(null==s)return;const n=s.lodRenderer;if(null==n)return;const{featureIds:t,localTransforms:o,globalTransforms:i,visibility:a}=r,d=new Array,l=n.instanceData,c=t.length,u=this._instanceIndexToFeatureId;for(let e=0;e<c;++e){const r=t[e],s=l.addInstance(),n=l.view,c=16*e;n.localTransform.copyFromTypedBuffer(s,o,c),n.globalTransform.copyFromTypedBuffer(s,i,c),l.updateModelTransform(s),l.setVisible(s,Boolean(a[e])),d.push(s),u.set(s,r)}this._instanceGroupToIndices.set(e,d),this._numFeatures+=c}removeInstances(e){const r=this._instanceGroupToIndices.get(e);if(null==r)return;const s=this._lodRendererResources;if(null==s)return;const n=s.lodRenderer.instanceData,t=this._instanceIndexToFeatureId;for(const e of r)n.removeInstance(e),t.delete(e);this._numFeatures-=r.length,this._instanceGroupToIndices.delete(e)}updateVisibility(e,r){const s=this._instanceGroupToIndices.get(e);if(null==s)return;const n=this._lodRendererResources;if(null==n)return;const t=s.length;if(t!==r.length)throw new Error("Unexpected mismatch instance count and visibility flag buffer length.");const o=n.lodRenderer.instanceData;for(let e=0;e<t;++e)o.setVisible(s[e],Boolean(r[e]))}updateGlobalTransforms(e,r){const s=this._instanceGroupToIndices.get(e);if(null==s)return;const n=this._lodRendererResources;if(null==n)return;const t=s.length;if(16*t!==r.length)throw new Error("Unexpected mismatch instance count and visibility flag buffer length.");const o=n.lodRenderer.instanceData,i=o.view;for(let e=0;e<t;++e){const n=s[e],t=16*e;i.globalTransform.copyFromTypedBuffer(n,r,t),o.updateModelTransform(n)}}_addDisposeResource(e){this._disposeResourceHandles.push(e)}async _createLodRenderer(e,r){const s=this.view.stage,n={layerViewUid:this.layerViewUid,graphicUid:e=>this._instanceIndexToFeatureId.get(e)??-1,notifyGraphicGeometryChanged:e=>1,notifyGraphicVisibilityChanged:e=>1},t=new d.LodRenderer({symbol:e,metadata:n,shaderTransformation:null},this.scheduler);return t.slicePlaneEnabled=!1,this._addDisposeResource(()=>{s.removeRenderPlugin(t),t.destroy()}),await s.addRenderPlugin(t,r),t}},e.LodRenderer=r.__decorate([a.subclass("esri.views.3d.layers.graphics.pipeline.rendering.LodRenderer")],e.LodRenderer),e.isDefaultMaterial=c,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});