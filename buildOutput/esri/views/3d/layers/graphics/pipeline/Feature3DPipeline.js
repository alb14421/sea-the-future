// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/Error","../../../../../core/handleUtils","../../../../../core/maybe","../../../../../core/Promise","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/has","../../../../../core/Logger","../../../../../core/RandomLCG","../../../../../core/accessorSupport/decorators/subclass","../../FeatureLayerViewPerformanceInfo","./Feature3DPipelineWorkerHandle","./rendering/FeaturePipelineRenderManager","../../support/highlightUtils","../../support/LayerViewPerformanceInfo"],function(e,r,t,n,a,i,o,s,u,l,d,p,y,c,h,g,w){"use strict";e.Feature3DPipeline=class extends i.EsriPromise{constructor(e){super(e),this._renderer=null,this.graphicsQuery={queryForSymbologySnapping:(e,r)=>{throw new t("featurelayer:unsupported-symbology-snapping","Symbology snapping not supported")},executeQuery:async(e,r)=>await this._workerHandle.executeQuery(e,r),executeQueryForIds:async(e,r)=>await this._workerHandle.executeQueryForIds(e,r),executeQueryForCount:async(e,r)=>await this._workerHandle.executeQueryForCount(e,r),executeQueryForExtent:async(e,r)=>await this._workerHandle.executeQueryForExtent(e,r),executeQueryForLatestObservations:async(e,r)=>await this._workerHandle.executeQueryForLatestObservations(e,r)},this.maximumNumberOfFeatures=1e3}initialize(){if("point"!==this.layerView.layer.geometryType)throw new t("featurelayer:unsupported-geometry-type",`${this.layerView.layer.geometryType} is not supported`);this.addResolvingPromise(this.setup())}destroy(){this.removeAllHandles(),this._workerHandle.destroy(),a.destroyMaybe(this._renderer)}async setup(){const e=this.layerView,{layer:r,view:n,uid:a}=e,{spatialReference:i,renderSpatialReference:s,resourceController:u,renderCoordsHelper:l,elevationProvider:d}=n,p=n.state.viewingMode;if(this._renderer=new h.FeaturePipelineRenderManager({view:n,layerViewUid:a}),"feature"!==r.type)throw new t("featurelayer:unsupported-layertype","Only FeatureLayer is supported");const y=new c.Feature3DPipelineWorkerHandle({schedule:e=>u.immediate.schedule(e),layer:r,layerView:e,viewSpatialReference:i,renderSpatialReference:s,viewingMode:p,renderer:this._renderer,elevationProvider:d,renderCoordsHelper:l});this._workerHandle=await y.when(),this.addHandles([this.layerView.view.enableFeatureTiles(),o.on(()=>this.layerView.view.featureTiles?.tiles,"change",e=>{this._workerHandle.onTileTreeChange(e.target)},{onListenerAdd:e=>this._workerHandle.onTileTreeChange(e),onListenerRemove:e=>this._workerHandle.onTileTreeChange(e)}),n.elevationProvider.on("elevation-change",e=>this._workerHandle.onElevationChange(e)),o.watch(()=>this.layerView.fullOpacity,e=>this._workerHandle.onLayerViewOpacityChange(e),{sync:!1}),o.watch(()=>r.renderer,e=>this._workerHandle.onRendererChange(e),{sync:!1})])}get legendEnabled(){return!1}get hasAllFeatures(){return!1}get hasAllFeaturesInView(){return!1}get hasFullGeometries(){return!1}get symbologySnappingSupported(){return!1}get scaleVisibilitySuspended(){return!1}get suspendInfo(){return{}}get updating(){return this._workerHandle.updating}get dataUpdating(){return!1}get updatePolicy(){return 0}get maximumNumberOfFeaturesExceeded(){return!1}get updatingProgressValue(){return 1}get usedMemory(){return this._renderer?.usedMemory??0}get unloadedMemory(){return 0}get ignoresMemoryFactor(){return!0}get totalFeatures(){return this._renderer?.totalFeatures??0}get performanceInfo(){const e=this.totalFeatures;return new y.FeatureLayerViewPerformanceInfo(new w.LayerViewPerformanceInfo(this.usedMemory,e,e,this.maximumNumberOfFeatures,0,null),e,e,this.maximumNumberOfFeaturesExceeded,"tiles","n/a")}get suspendResumeExtentMode(){return"computed"}forEachGraphic(e){}findGraphic(e){return null}highlightByObjectIds(e,r){return g.emptyHighlightHandle}highlightByGraphics(e,r){return g.emptyHighlightHandle}maskOccludee(e){return n.makeHandle()}async whenGraphicBounds(e,r){return null}computeAttachmentOrigin(e,r){return null}elevationAlignPointsInFeatures(e,r){throw new t("featurelayer:unsupported-elevation-alignment","Elevation alignment not supported")}async doRefresh(e){}setVisibility(e,r){}getMissingAttributesForFeature(e){return null}getHydratedGeometry(e){return null}},r.__decorate([s.property()],e.Feature3DPipeline.prototype,"layerView",void 0),r.__decorate([s.property()],e.Feature3DPipeline.prototype,"updating",null),r.__decorate([s.property()],e.Feature3DPipeline.prototype,"totalFeatures",null),e.Feature3DPipeline=r.__decorate([p.subclass("esri.views.3d.layers.graphics.pipeline.Feature3DPipeline")],e.Feature3DPipeline),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});