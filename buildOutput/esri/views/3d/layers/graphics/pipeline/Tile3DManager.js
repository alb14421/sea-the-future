// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/Accessor","../../../../../core/arrayUtils","../../../../../core/asyncUtils","../../../../../core/has","../../../../../core/promiseUtils","../../../../../core/ReactiveMap","../../../../../core/reactiveUtils","../../../../../core/scheduling","../../../../../core/accessorSupport/decorators/property","../../../../../core/Logger","../../../../../core/accessorSupport/decorators/subclass","../../../../../geometry/support/aaBoundingRect","./PipelineCommand","./featureData/FeatureData"],function(e,t,a,o,s,r,i,n,l,c,d,u,h,p,f,_){"use strict";function y({lij:[e,t,a]},{lij:[o,s,r]}){const i=o-e;return i>=0&&t===s>>i&&a===r>>i}e.Tile3DManager=class extends a{constructor(e){super(e),this.extent=null,this._tileHandles=new n,this._wanted=new n,this._updateRequested=!1,this._synchronizationTask=null,this._requestedTiles=new Array}destroy(){this._tileHandles.clear(),this._wanted.clear()}get updating(){return this._updateRequested||!(this._synchronizationTask?.finished??1)}get _boundingRect(){const{extent:e}=this;return null==e?null:p.fromExtent(e)}get _missingTiles(){const e=new Array,t=this._wanted,a=this._tileHandles;for(const o of t.values())null==a.get(o.id)?.featureData&&e.push(o);return e}onTileTreeChange({tiles:e}){this._requestedTiles=e,this._scheduleTilesSync()}_scheduleTilesSync(){if(this._updateRequested)return;this._updateRequested=!0;const e=this._synchronizationTask,t=s.createTask(async()=>{try{await l.whenOnce(()=>e?.finished??!0),await c.waitTick(),this._updateRequested=!1,await this._synchronizeTiles()}finally{this._synchronizationTask===t&&(this._synchronizationTask=null)}});this._synchronizationTask=t}async _synchronizeTiles(){const e=this._requestedTiles,t=this._tileHandles,a=new Array;for(const o of e)t.has(o.id)||a.push(o);const o=new Array;for(const a of t.values()){const{id:t}=a;e.every(e=>e.id!==t)&&o.push(a.descriptor)}const s=this._tileHandles,{_boundingRect:r}=this,i=null!=r?a.filter(e=>!e.extent||p.intersects(r,e.extent)):a,n=this._wanted,l=new Array;for(const{id:e}of o)n.delete(e);for(const e of i)n.set(e.id,e);const c=this._missingTiles;for(const e of o){const{id:t}=e;if(c.some(t=>y(t,e)||y(e,t)))continue;const a=s.get(t);null!=a&&l.push(this._removeTile(a))}for(const e of i)l.push(this._addTile(e));const d=await Promise.allSettled(l);for(const e of d)"rejected"===e.status&&console.error(e.reason)}forEachTile(e){for(const t of this._tileHandles.values()){const a=t.featureData;null!=a&&e(a)}}*loadedTiles(){for(const e of this._tileHandles.values()){const t=e.featureData;null!=t&&(yield t)}}async _removeTile(e){e.loadTask.abort(),this._tileHandles.delete(e.id),this._validate();const{featureData:a}=e;if(null!=a){const e={stack:[],error:void 0,hasError:!1};try{t.__addDisposableResource(e,await this.tileLocks.lock([a.tileId]),!1);const o=await this.createRemoveCommand(a.id);await(o?.execute())}catch(t){e.error=t,e.hasError=!0}finally{t.__disposeResources(e)}}}async _addTile(e){const{_tileHandles:t}=this,a=t.get(e.id);if(null!=a){if(!m(a)||a.featureData.isFullyEnabled)return;return a.featureData.enableAll(),void await this._onTileLoad(a)}const o=new T(e,s.createTask(async t=>{const a=await this.loadTile(e,t);return i.throwIfAborted(t),new _.FeatureData(a)}));this._tileHandles.set(o.id,o);try{await o.loadTask.promise}catch(e){return void i.throwIfNotAbortError(e)}!function(e){if(!m(e))throw new Error}(o),await this._onTileLoad(o)}async _onTileLoad(e){const a={stack:[],error:void 0,hasError:!1};try{const{_wanted:s,_tileHandles:r,_missingTiles:i}=this,n=e.descriptor,l=new Array,c=new Array,d=new Array,u=new Set;for(const t of r.values()){if(t===e)continue;const{descriptor:a,id:o}=t;if(!s.has(o)&&!i.some(e=>y(e,a)||y(a,e))){r.delete(o),t.loadTask.abort();const{featureData:e}=t;null!=e&&l.push(e);continue}if(m(t)){if(y(n,a)){const e=t.featureData;for(const t of e.objectIds())u.add(t)}if(y(a,n)){const{featureData:e}=t;c.push(e)}}}u.size>0&&(e.featureData.disableObjectIds(u),this._validateRemoval(e.featureData,u)),this._validate(),d.push(e.featureData);const h=[...d,...l,...c].map(e=>e.tileId);if(t.__addDisposableResource(a,await this.tileLocks.lock(h),!1),0!==c.length){const t=e.featureData,a=new Set(t.objectIds());for(const e of c)e.disableObjectIds(a),this._validateRemoval(e,a)}const p=l.map(e=>this.createRemoveCommand(e.id)),_=d.map(e=>this.createAddCommand(e)),T=c.map(e=>this.createUpdateCommand(e)),w=await Promise.all([...p,..._,...T]),g=f.joinCommands(w.filter(o.isSome));await(g?.execute())}catch(e){a.error=e,a.hasError=!0}finally{t.__disposeResources(a)}}_validate(){if(!r("feature-pipeline-3d-test-validation"))return;const e=new Array;for(const t of this._tileHandles.values()){if(!m(t))continue;const{featureData:a}=t;e.push({featureData:a,objectIds:new Set(a.enabledObjectIds())})}for(let t=0;t<e.length;++t){const{featureData:a,objectIds:o}=e[t];for(let s=t+1;s<e.length;++s){const{featureData:t,objectIds:r}=e[s];for(const e of r)if(o.has(e))throw new Error(`${a.id} and ${t.id} both contain ${e}.`)}}}_validateRemoval(e,t){if(r("feature-pipeline-3d-test-validation"))for(const a of e.enabledObjectIds())if(t.has(a))throw new Error(`Failed to remove ${a} from ${e.id}!`)}},t.__decorate([d.property()],e.Tile3DManager.prototype,"updating",null),t.__decorate([d.property({constructOnly:!0})],e.Tile3DManager.prototype,"loadTile",void 0),t.__decorate([d.property({constructOnly:!0})],e.Tile3DManager.prototype,"createAddCommand",void 0),t.__decorate([d.property({constructOnly:!0})],e.Tile3DManager.prototype,"createRemoveCommand",void 0),t.__decorate([d.property({constructOnly:!0})],e.Tile3DManager.prototype,"createUpdateCommand",void 0),t.__decorate([d.property({constructOnly:!0})],e.Tile3DManager.prototype,"tileLocks",void 0),t.__decorate([d.property()],e.Tile3DManager.prototype,"extent",void 0),t.__decorate([d.property()],e.Tile3DManager.prototype,"_boundingRect",null),t.__decorate([d.property()],e.Tile3DManager.prototype,"_missingTiles",null),t.__decorate([d.property()],e.Tile3DManager.prototype,"_updateRequested",void 0),t.__decorate([d.property()],e.Tile3DManager.prototype,"_synchronizationTask",void 0),e.Tile3DManager=t.__decorate([h.subclass("esri.views.3d.layers.graphics.pipeline.Tile3DManager")],e.Tile3DManager);class T{constructor(e,t){this.descriptor=e,this.loadTask=t}get id(){return this.descriptor.id}get featureData(){return this.loadTask.value}}function m(e){return null!=e.featureData}Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});