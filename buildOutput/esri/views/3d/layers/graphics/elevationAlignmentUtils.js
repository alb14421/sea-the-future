// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/projection/computeTranslationToOriginAndRotation","../../../../geometry/projection/projectBuffer","../../../../layers/graphics/dehydratedFeatureUtils","../../support/ElevationProvider"],function(e,t,n,o,r,i,a,l){"use strict";function s(e,t,n,o,r){const i=(a.isDehydratedPoint(e)?e.z:l.isSamplePosition(e)?e.array[e.offset+2]:e[2])||0;switch(n.mode){case"on-the-ground":{const n=l.getElevationAtPoint(t,e,"ground")??0;return r.verticalDistanceToGround=0,r.sampledElevation=n,void(r.z=n)}case"relative-to-ground":{const a=l.getElevationAtPoint(t,e,"ground")??0,s=n.geometryZWithOffset(i,o);return r.verticalDistanceToGround=s,r.sampledElevation=a,void(r.z=s+a)}case"relative-to-scene":{const a=l.getElevationAtPoint(t,e,"scene")??0,s=n.geometryZWithOffset(i,o);return r.verticalDistanceToGround=s,r.sampledElevation=a,void(r.z=s+a)}case"absolute-height":{const a=n.geometryZWithOffset(i,o),s=l.getElevationAtPoint(t,e,"ground")??0;return r.verticalDistanceToGround=a-s,r.sampledElevation=s,void(r.z=a)}default:return void(r.z=0)}}function c(e,t){for(let n=0;n<e.geometries.length;++n){const o=e.geometries[n].getMutableAttribute("centerOffsetAndDistance");o&&o.data[3]!==t&&(o.data[3]=t,e.geometryVertexAttributeUpdated(e.geometries[n],"centerOffsetAndDistance"))}}class u{constructor(){this.verticalDistanceToGround=0,this.sampledElevation=0,this.z=0}}const f={"absolute-height":{applyElevationAlignmentBuffer:function(e,t,n,o,r,i,a,l){const s=l.calculateOffsetRenderUnits(a),c=l.featureExpressionInfoContext;t*=3,o*=3;for(let i=0;i<r;++i){const r=e[t],i=e[t+1],a=e[t+2];n[o]=r,n[o+1]=i,n[o+2]=null==c?a+s:s,t+=3,o+=3}return 0},requiresAlignment:function(e){const t=e.meterUnitOffset,n=e.featureExpressionInfoContext;return 0!==t||null!=n}},"on-the-ground":{applyElevationAlignmentBuffer:function(e,t,n,o,r,i){let a=0;const l=i.spatialReference;t*=3,o*=3;for(let s=0;s<r;++s){const r=e[t],s=e[t+1],c=e[t+2],u=i.getElevation(r,s,c,l,"ground")??0;a+=u,n[o]=r,n[o+1]=s,n[o+2]=u,t+=3,o+=3}return a/r},requiresAlignment:()=>!0},"relative-to-ground":{applyElevationAlignmentBuffer:function(e,t,n,o,r,i,a,l){let s=0;const c=l.calculateOffsetRenderUnits(a),u=l.featureExpressionInfoContext,f=i.spatialReference;t*=3,o*=3;for(let a=0;a<r;++a){const r=e[t],a=e[t+1],l=e[t+2],d=i.getElevation(r,a,l,f,"ground")??0;s+=d,n[o]=r,n[o+1]=a,n[o+2]=null==u?l+d+c:d+c,t+=3,o+=3}return s/r},requiresAlignment:()=>!0},"relative-to-scene":{applyElevationAlignmentBuffer:function(e,t,n,o,r,i,a,l){let s=0;const c=l.calculateOffsetRenderUnits(a),u=l.featureExpressionInfoContext,f=i.spatialReference;t*=3,o*=3;for(let a=0;a<r;++a){const r=e[t],a=e[t+1],l=e[t+2],d=i.getElevation(r,a,l,f,"scene")??0;s+=d,n[o]=r,n[o+1]=a,n[o+2]=null==u?l+d+c:d+c,t+=3,o+=3}return s/r},requiresAlignment:()=>!0}},d=n.create(),g=new u,p=o.create();e.SampleElevationInfo=u,e.applyElevationAlignmentForHUD=function(e,n,o,i,a){s(n,o,a,i,g),c(e,g.verticalDistanceToGround);const l=g.sampledElevation,u=t.copy(d,e.transformation);return p[0]=n.x,p[1]=n.y,p[2]=g.z,r.computeTranslationToOriginAndRotation(n.spatialReference,p,u,i.spatialReference)?e.transformation=u:console.warn("Could not locate symbol object properly, it might be misplaced"),l},e.applyPerVertexElevationAlignment=function(e,t,n,o,r,a,l,s,c,u,d){const g=f[d.mode];let p,v,m=0;if(i.projectBuffer(e,t,n,o,c.spatialReference,r,s))return g?.requiresAlignment(d)?(m=g.applyElevationAlignmentBuffer(o,r,a,l,s,c,u,d),p=a,v=l):(p=o,v=r),i.projectBuffer(p,c.spatialReference,v,a,u.spatialReference,l,s)?m:void 0},e.elevationModeChangeUpdateType=function(e,t,n){return"on-the-ground"===t&&"on-the-ground"===n?e.staysOnTheGround:t===n||"on-the-ground"!==t&&"on-the-ground"!==n?null==t||null==n?e.definedChanged:1:e.onTheGroundChanged},e.evaluateElevationAlignmentAtPoint=function(e,t,n,o){return s(e,t,n,o,g),g.z},e.evaluateElevationInfoAtPoint=s,e.needsElevationUpdates2D=function(e){return"relative-to-ground"===e||"relative-to-scene"===e},e.needsElevationUpdates3D=function(e){return"absolute-height"!==e},e.updateVertexPointGroundDistance=c,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});