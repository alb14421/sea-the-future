// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../core/maybe","../../../../core/promiseUtils","../../glTF/DefaultLoadingContext","./wosrLoader"],function(e,t,o,r,s,a){"use strict";async function n(e,t,s,a,n){r.throwIfAborted(n);const l=r.onAbort(n,()=>function(e,t){const o=e.get(t);null!=o&&--o.refCount>0||(e.delete(t),null!=o&&o.abortController.abort())}(e,s));let i=e.get(s);if(i)i.refCount++;else{const t=new AbortController;i={refCount:1,abortController:t,promise:a({...n,signal:t.signal})},e.set(s,i)}try{const o=await i.promise;return t.put(s,o),e.delete(s),r.throwIfAborted(n),o}finally{o.removeMaybe(l)}}t.ObjectResourceCache=class{constructor(e){this._gltfLoading=new Map,this._wosrLoading=new Map,this._gltfMemCache=e("gltf-resources",()=>{}),this._wosrMemCache=e("wosr-resources",()=>{})}destroy(){this._gltfLoading.forEach(e=>e.abortController.abort()),this._wosrLoading.forEach(e=>e.abortController.abort()),this._gltfMemCache.destroy(),this._wosrMemCache.destroy()}loadGLTF(t,o,r){const a=r?`gltfPBR:${t}`:`gltf:${t}`,l=this._gltfMemCache.get(a);return null!=l?Promise.resolve(l):n(this._gltfLoading,this._gltfMemCache,a,async o=>{const{loadGLTF:a}=await new Promise((t,o)=>e(["../../glTF/loader"],t,o));return a(new s.DefaultLoadingContext(o.streamDataRequester),t,o,r)},o)}loadWOSR(e,t){const o=`wosr:${e}:${t.disableTextures}`,r=this._wosrMemCache.get(o);return null!=r?Promise.resolve(r):n(this._wosrLoading,this._wosrMemCache,o,t=>a.load(e,t),t)}},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});