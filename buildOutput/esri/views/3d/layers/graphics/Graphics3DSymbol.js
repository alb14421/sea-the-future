// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../core/arrayUtils","../../../../core/asyncUtils","../../../../core/has","../../../../core/promiseUtils","./defaultSymbolComplexity","./Graphics3DGraphic","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolCreationContext","./Loadable","./symbolMemory"],function(e,t,r,s,a,o,i,n,l,y,h,c){"use strict";class m extends h.Loadable{set symbol(e){this._symbol=e,e.symbolLayers.forEach((t,r)=>{const s=this.symbolLayers[r];null!=s&&(s.symbol=e,s.symbolLayer=t)})}get symbol(){return this._symbol}constructor(e,t,r){super(t.schedule),this._symbol=e,this._context=t,this._backgroundLayers=r,this._destroyed=!1,this.symbolLayers=new Array,this.referenced=0,this._extentPadding=0}async doLoad(t){let r=this._symbol.symbolLayers;this._extentPadding=0,this._backgroundLayers&&(r=this._backgroundLayers.concat(r));const a=r.length;for(;this.symbolLayers.length<r.length;)this.symbolLayers.push(null);this.symbolLayers.length=r.length;const i=[];if(!u){const{make:t}=await new Promise((t,r)=>e(["./Graphics3DSymbolLayerFactory"],t,r));u=t}for(let e=0;e<a;e++){const s=r.at(e);if(!1===s.enabled)continue;p.renderPriority=1-(1+e)/a,p.renderPriorityStep=1/a,p.ignoreDrivers=s.ignoreDrivers;const n=u(this.symbol,s,this._context,p),l=o.onAbortOrThrow(t,()=>{this.symbolLayers[e]=null,n.destroy()});l&&i.push(l),this.symbolLayers[e]=n}if(await s.forEach(this.symbolLayers,async(e,t)=>{if(null!=e)try{await e.load(),this._extentPadding+=Math.max(this._extentPadding,e.extentPadding)}catch{this.symbolLayers[t]=null}}),i.forEach(e=>e.remove()),o.throwIfAborted(t),this.symbolLayers.length&&!this.symbolLayers.some(e=>!!e))throw new Error}getSymbolLayerSize(e){const t=this.symbolLayers[e];return null!=t?t.getCachedSize():null}get extentPadding(){return this._extentPadding}get symbologySnappingSupported(){return this.symbolLayers.some(e=>e?.queryForSnapping)}updateFocus(e,t){this.symbolLayers.forEach(r=>r?.updateFocus(e,t))}createGraphics3DGraphic(e,t){const{graphic:r}=e,s=this.symbolLayers.map(t=>t?.createGraphics3DGraphic(e)??null),a=this._context.arcade||this._context.featureExpressionInfoContext?.arcade?.modules||null;return new n.Graphics3DGraphic(r,t||this,s,e.layer,a)}get complexity(){return i.totalSymbolComplexities(this.symbolLayers.map(e=>e?.complexity))}globalPropertyChanged(e,t){const r=this.symbolLayers.length;for(let s=0;s<r;s++){const r=this.symbolLayers[s],a=e=>{const t=e.layers[s];return t instanceof l.Graphics3DObject3DGraphicLayer?t:null};if(null!=r&&!r.globalPropertyChanged(e,t,a))return!1}return!0}applyRendererDiff(e,t){return 1!==this.loadStatus?0:this.symbolLayers.reduce((r,s)=>0!==r&&null!=s?Math.min(r,s.applyRendererDiff(e,t)):r,2)}prepareSymbolPatch(e){if(2===this.loadStatus)return;if("partial"!==e.diff.type)return;const t=e.diff.diff;if(!t.symbolLayers||"partial"!==t.symbolLayers.type)return;const r=t.symbolLayers.diff;this.symbolLayers.forEach((t,s)=>{if(null==t)return;const a=r[s];if(a){const r={diff:a,graphics3DGraphicPatches:[],symbolLayerStatePatches:[]};t.prepareSymbolLayerPatch(r),e.symbolStatePatches.push(...r.symbolLayerStatePatches),r.graphics3DGraphicPatches.length&&e.graphics3DGraphicPatches.push((e,t)=>{const a=e.layers[s];null!=a&&r.graphics3DGraphicPatches.forEach(e=>e(a,t))})}})}updateGeometry(e,t){return this._updateGeometryOrTransform(e,(e,r)=>e.updateGeometry(r,t))}updateTransform(e,t,r,s){return this._updateGeometryOrTransform(e,(e,a)=>e.updateTransform(a,t,r,s))}_updateGeometryOrTransform(e,t){for(let r=0;r<this.symbolLayers.length;r++){const s=this.symbolLayers[r];if(null==s)continue;const a=e.layers[r];if(!a||!t(s,a))return!1}return!0}onRemoveGraphic(e){for(let t=0;t<this.symbolLayers.length;t++){const r=this.symbolLayers[t];if(null==r)continue;const s=e.layers[t];null!=s&&r.onRemoveGraphic(s)}}getFastUpdateStatus(){let e=!1,t=!1;for(const r of this.symbolLayers)if(null!=r){if(0===r.loadStatus)return 3;r.isFastUpdatesEnabled()?t=!0:e=!0}return t?e?2:1:e?0:4}async queryForSnapping(e,t,s,a){const i=this.symbolLayers.filter(r.isSome).filter(e=>null!=e.queryForSnapping).map(r=>r.queryForSnapping(e,t,s,a)),n=await Promise.all(i);return o.throwIfAborted(a),n.flat()}destroy(){if(!this.destroyed){super.destroy();for(const e of this.symbolLayers)null!=e&&e.destroy();this.symbolLayers.length=0,this._destroyed=!0}}get destroyed(){return this._destroyed}get cachedMemory(){return c.getSymbolMemorySize(this)}}let u=null;const p=new y.Graphics3DSymbolLayerCreationContext;t.Graphics3DSymbol=m,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});