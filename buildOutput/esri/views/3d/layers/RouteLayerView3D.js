// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Collection","../../../core/CollectionFlattener","../../../core/maybe","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../rest/support/DirectionLine","../../../rest/support/DirectionPoint","../../../rest/support/PointBarrier","../../../rest/support/PolygonBarrier","../../../rest/support/PolylineBarrier","../../../rest/support/RouteInfo","../../../rest/support/Stop","./LayerView3D","./graphics/GraphicsProcessor","./support/LayerViewPerformanceInfo","../support/EventedSet","../../layers/LayerView","../../support/highlightOptionsUtils","../../support/layerViewUtils","../../support/projectionUtils"],function(e,t,r,s,i,o,a,n,l,c,p,h,d,u,y,g,f,m,b,_,w,v,I,S,V){"use strict";let C=class extends(m.LayerView3D(v)){constructor(){super(...arguments),this.type="route-3d",this.loadedGraphics=new w.EventedSet,this._byObjectID=new Map,this.slicePlaneEnabled=!1,this.fullExtentInLocalViewSpatialReference=null}initialize(){this._set("processor",new b.GraphicsProcessor({owner:this,scaleVisibilityEnabled:!0,frustumVisibilityEnabled:!0})),this.addResolvingPromise(this.processor.initializePromise),this._updatingHandles.addOnCollectionChange(()=>this._routeItems,e=>this._routeItemsChanged(e),i.initial),"local"===this.view.viewingMode&&this.addResolvingPromise((async()=>this.fullExtentInLocalViewSpatialReference=await V.projectWithZConversionSilent(this.layer.fullExtent,this.view.spatialReference))()),this.addHandles(i.when(()=>this.view?.basemapTerrain?.ready,()=>()=>this.notifyChange("updating"),{once:!0}))}destroy(){this._updatingHandles.removeAll(),this._set("processor",s.destroyMaybe(this.processor)),this._get("_routeItems")?.destroy()}get _routeItems(){return new r({getCollections:()=>[this.layer.pointBarriers,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.stops,this.layer.directionLines,this.layer.directionPoints,null!=this.layer.routeInfo?new t([this.layer.routeInfo]):null]})}_routeItemsChanged(e){if(e.removed.length){this.loadedGraphics.removeMany(e.removed.map(e=>{const t=this._byObjectID.get(e);return this._byObjectID.delete(e),t}));for(const t of e.removed)this.removeHandles(t)}if(e.added.length){this.loadedGraphics.addMany(e.added.map(e=>{const t=e.toGraphic();return this._byObjectID.set(e,t),t}));for(const t of e.added)this.addHandles([i.watch(()=>t.geometry,(e,r)=>{this._updateGraphic(t,"geometry",e,r)}),i.watch(()=>t.symbol,(e,r)=>{this._updateGraphic(t,"symbol",e,r)})],t)}}get legendEnabled(){return this.canResume()&&!this.processor?.frustumVisibilitySuspended}get visibleAtCurrentScale(){return S.hasLayerBasedScaleVisibility()?S.isInEffectiveScaleRange(this.layer.effectiveScaleRange,this.view.scale):!this.processor?.scaleVisibilitySuspended}getSuspendInfo(){const e=super.getSuspendInfo();return e.outsideOfView=this.processor?.frustumVisibilitySuspended??!1,e}getHit(e){return this.processor.getHit(e)}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor?.computeAttachmentOrigin(e,t)}getSymbolLayerSize(e,t){return this.processor.getSymbolLayerSize(e,t)}async queryGraphics(){return new t(this.loadedGraphics.toArray())}maskOccludee(e){return this.processor.maskOccludee(e)}highlight(e,t){var r;return((r=e)instanceof p||r instanceof h||r instanceof d||r instanceof u||r instanceof y||r instanceof g||r instanceof f)&&(e=this._byObjectID.get(e)),this.processor.highlight(e,I.getHighlightName(t))}notifyContentGeometryUpdate(){this.emit("visible-geometry-changed")}get updatePolicy(){return this.processor?.graphicsCore.effectiveUpdatePolicy||1}isUpdating(){return!(!this.processor?.updating&&this.view?.basemapTerrain?.ready)}get performanceInfo(){return new _.LayerViewPerformanceInfo(this.processor?.graphicsCore.usedMemory??0,this.loadedGraphics.length,-1,-1,0,this.processor?.graphicsCore.performanceInfo??null)}_updateGraphic(e,t,r,s){const i=this._byObjectID.get(e);i[t]=r,G.graphic=i,G.property=t,G.oldValue=s,G.newValue=r,this.processor?.graphicsCore.graphicUpdateHandler(G),G.graphic=null}};e.__decorate([o.property()],C.prototype,"_routeItems",null),e.__decorate([o.property()],C.prototype,"loadedGraphics",void 0),e.__decorate([o.property({readOnly:!0})],C.prototype,"legendEnabled",null),e.__decorate([o.property({readOnly:!0})],C.prototype,"visibleAtCurrentScale",null),e.__decorate([o.property()],C.prototype,"layer",void 0),e.__decorate([o.property({readOnly:!0})],C.prototype,"processor",void 0),e.__decorate([o.property({type:Boolean})],C.prototype,"slicePlaneEnabled",void 0),C=e.__decorate([c.subclass("esri.views.3d.layers.RouteLayerView3D")],C);const G={graphic:null,property:null,oldValue:null,newValue:null};return C});