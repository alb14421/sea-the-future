// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Error","../../../core/handleUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../geometry/projectionUtils","./LayerView3D","./TiledLayerView3D","./support/fetchTile","./support/SublayerPopupHighlightHelper3D","../../layers/LayerView","../../layers/RefreshableLayerView","../../layers/support/MapServiceLayerViewHelper"],function(e,t,r,i,a,s,l,o,n,p,h,c,u,y,d,f){"use strict";let g=class extends(d.RefreshableLayerView(h.TiledLayerView3D(p.LayerView3D(y)))){constructor(){super(...arguments),this.type="tile-3d"}get imageFormatIsOpaque(){return"jpg"===this.layer.tileInfo.format}get hasMixedImageFormats(){return"mixed"===this.layer.tileInfo.format}get tileInfo(){return this.layer.tileInfo}initialize(){if("web-tile"===this.layer.type){const e=this.layer.fullExtent?.spatialReference,r=this.layer.tileInfo?.spatialReference;if(null==e||null==r||!n.canProjectWithoutEngine(e,r)){const e="defaults"===this.layer.originOf("fullExtent")||null==this.layer.fullExtent?"SceneView requires fullExtent to be specified by the user on WebTileLayer":"SceneView requires fullExtent to be specified in the same spatial reference as tileInfo on WebTileLayer";this.addResolvingPromise(Promise.reject(new t("layerview:incompatible-fullextent",e)))}}if(f.isMapServiceLayerView(this,this.layer)){const e=new u.SublayerPopupHighlightHelper3D({view:this.view,layerView:this,updatingHandles:this._updatingHandles});this._popupHighlightHelper=e,this.addHandles(r.destroyHandle(e))}this._addTilingSchemeMatchPromise()}async fetchTile(e,t){return c.fetchTile(this,e,t)}async fetchPopupFeaturesAtLocation(e,t){return this._popupHighlightHelper?.fetchPopupFeaturesAtLocation(e,t)??[]}highlight(e,t){return this._popupHighlightHelper?.highlight(e,t)??r.makeHandle()}async doRefresh(){this.suspended||this.emit("data-changed")}};return e.__decorate([i.property()],g.prototype,"imageFormatIsOpaque",null),e.__decorate([i.property()],g.prototype,"hasMixedImageFormats",null),e.__decorate([i.property()],g.prototype,"layer",void 0),e.__decorate([i.property()],g.prototype,"tileInfo",null),g=e.__decorate([o.subclass("esri.views.3d.layers.TileLayerView3D")],g),g});