// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../Color","../../../../Graphic","../../../../core/Collection","../../../../core/Handles","../../../../core/reactiveUtils","../../../../geometry/Polygon","../../../../symbols/FillSymbol3DLayer","../../../../symbols/PointSymbol3D","../../../../symbols/PolygonSymbol3D","../../../../symbols/TextSymbol3DLayer","../../../../symbols/callouts/LineCallout3D","../../../../symbols/callouts/LineCallout3DBorder","../../../../symbols/support/Symbol3DVerticalOffset","../../terrain/TilingScheme"],function(e,t,i,s,a,l,o,n,r,h,c,d,m,y,_){"use strict";const p=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];e.FeatureTileFetcher3DDebugger=class{constructor(e,t,i){this._tileFetcher=e,this._view=i,this._handles=new a,this._loadingGraphics=new Map,this._loadingSymbols=[new h({symbolLayers:new s([new n({material:{color:[200,200,200,.4]},outline:{color:[30,30,30],size:1}})])})],this._loadedGraphics=new Map,this._loadedSymbols=p.map(e=>new h({symbolLayers:new s([new n({material:{color:[e[0],e[1],e[2],.6]},outline:{color:"black",size:1}})])})),this._pendingGraphics=new Map,this._pendingSymbols=[new h({symbolLayers:new s([new n({material:{color:[100,100,100,.4]},outline:{color:[30,30,30],size:1}})])})],this._dataExtentGraphic=null,this._dataExtentSymbol=new h({symbolLayers:new s([new n({material:{color:[0,0,0,0]},outline:{color:"green",size:4}})])}),this._enabled=!0,this._tilingScheme=new _.TilingScheme(t),this.update()}destroy(){this.enabled=!1,this._handles.destroy()}get enabled(){return this._enabled}set enabled(e){this._enabled=e,this.update()}update(){this._enabled?(this._synchronizeMaps(this._loadingGraphics,{filter:({isFetching:e})=>e,symbols:this._loadingSymbols}),this._synchronizeMaps(this._loadedGraphics,{filter:e=>!e.isFetching,symbols:this._loadedSymbols}),this._synchronizeMaps(this._pendingGraphics,{filter:({isFetching:e})=>!e,symbols:this._pendingSymbols}),this.showDataExtent(this._tileFetcher.filterExtent)):(this._loadingGraphics.forEach(e=>this._view.graphics.removeMany(e)),this._loadingGraphics.clear(),this._loadedGraphics.forEach(e=>this._view.graphics.removeMany(e)),this._loadedGraphics.clear(),this._pendingGraphics.forEach(e=>this._view.graphics.removeMany(e)),this._pendingGraphics.clear(),this._dataExtentGraphic&&(this._view.graphics.remove(this._dataExtentGraphic),this._dataExtentGraphic=null))}showDataExtent(e){if(this._dataExtentGraphic&&(this._view.graphics.remove(this._dataExtentGraphic),this._dataExtentGraphic=null),null==e)return;const t=o.fromExtent(e);this._dataExtentGraphic=new i({geometry:t,symbol:this._dataExtentSymbol}),this._view.graphics.add(this._dataExtentGraphic)}_synchronizeMaps(e,t){const i=this._tileFetcher.featureTiles;e.forEach((s,a)=>{const l=i.get(a);l&&t.filter(l)||(this._view.graphics.removeMany(s),e.delete(a))}),this._handles.removeAll(),i.forEach(i=>{t.filter(i)&&!e.has(i.id)&&this._handles.add(l.watch(()=>i.fetchInformation,()=>this._showTile(i,e,t),l.initial))})}_showTile(e,a,l){const[o,n,h]=e.descriptor.lij,{numFeatures:_,featureLimit:p,features:g}=e;this._tilingScheme.ensureMaxLod(o);const b=this._tilingScheme.getExtentGeometry(o,n,h),w=new i({geometry:b,symbol:l.symbols[o%l.symbols.length]}),u=`Tile ${e.id}\nloaded/limit/total\n${g?.length}/${p}/${_}\nres ${Math.round(e.displayingResolution)} ${e.featuresMissing?"some":"all"}\n${e.fetchInformation.value}`,f=new i({geometry:b.center,symbol:new r({verticalOffset:new y({screenLength:40/.75}),callout:new d({color:new t("white"),border:new m({color:new t("black")})}),symbolLayers:new s([new c({text:u,halo:{color:"white",size:1/.75},material:{color:"black"},size:16})])})}),G=a.get(e.id);G&&this._view.graphics.removeMany(G);const v=[w,f];a.set(e.id,v),this._view.graphics.addMany(v)}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});