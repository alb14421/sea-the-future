// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/has","../../../../core/mathUtils","../../../../core/libs/gl-matrix-2/math/mat3","../../../../core/libs/gl-matrix-2/factories/mat3f64","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../chunks/vec42","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../renderers/support/lengthUtils","../../../../support/guards","../../support/debugFlags","../../webgl-engine/effects/geometry/olidUtils","../../../webgl/NoParameters"],function(t,e,o,i,s,n,r,l,a,u,c,f,p,d,m,z){"use strict";class v{constructor(t){this.field=t}}class h extends v{constructor(t){super(t),this.minSize=[0,0,0],this.maxSize=[0,0,0],this.offset=[0,0,0],this.factor=[0,0,0],this.type=[0,0,0],this.fallback=[0,0,0]}}class y extends v{constructor(t){super(t),this.colors=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.values=[0,0,0,0,0,0,0,0],this.fallback=[0,0,0,0]}}class S extends v{constructor(t,e=0){super(t),this.fallback=e,this.values=[0,0,0,0,0,0,0,0],this.opacityValues=[0,0,0,0,0,0,0,0]}}class b{}function g(t){return null!=t}function x(t,e){t&&t.push(e)}function C(t,e,o,i,s){const n=t.minSize,r=t.maxSize;if(t.useSymbolValue){const t=i.symbolSize[o];return e.minSize[o]=t,e.maxSize[o]=t,e.offset[o]=e.minSize[o],e.factor[o]=0,e.type[o]=1,!0}if(g(t.field))return g(t.stops)?2===t.stops.length&&p.isNumber(t.stops[0].size)&&p.isNumber(t.stops[1].size)?(V(t.stops[0].size,t.stops[1].size,t.stops[0].value,t.stops[1].value,e,o),e.type[o]=1,!0):(x(s,"Could not convert size info: stops only supported with 2 elements"),!1):p.isNumber(n)&&p.isNumber(r)&&g(t.minDataValue)&&g(t.maxDataValue)?(V(n,r,t.minDataValue,t.maxDataValue,e,o),e.type[o]=1,!0):"unknown"===t.valueUnit?(x(s,"Could not convert size info: proportional size not supported"),!1):null!=f.meterIn[t.valueUnit]?(e.minSize[o]=-1/0,e.maxSize[o]=1/0,e.offset[o]=0,e.factor[o]=1/f.meterIn[t.valueUnit],e.type[o]=1,!0):(x(s,"Could not convert size info: scale-dependent size not supported"),!1);if(!g(t.field)){if(t.stops?.[0]&&p.isNumber(t.stops[0].size))return e.minSize[o]=t.stops[0].size,e.maxSize[o]=t.stops[0].size,e.offset[o]=e.minSize[o],e.factor[o]=0,e.type[o]=1,!0;if(p.isNumber(n))return e.minSize[o]=n,e.maxSize[o]=n,e.offset[o]=n,e.factor[o]=0,e.type[o]=1,!0}return x(s,"Could not convert size info: unsupported variant of sizeInfo"),!1}function V(t,e,o,i,s,n){const r=Math.abs(i-o)>0?(e-t)/(i-o):0;s.minSize[n]=r>0?t:e,s.maxSize[n]=r>0?e:t,s.offset[n]=t-o*r,s.factor[n]=r}function k(t,e,o){t[4*e]=o.r/255,t[4*e+1]=o.g/255,t[4*e+2]=o.b/255,t[4*e+3]=o.a}function w(t,e,o){const i=2===o&&"arithmetic"===t.rotationType;e.offset[o]=i?90:0,e.factor[o]=i?-1:1,e.type[o]=1}function M(t,e,o){if(!t)return null;const i=t.reduce((t,i)=>{if(!t)return t;if(i.valueExpression)return x(o,"Could not convert visual variables: arcade expressions not supported"),null;switch(i.type){case"size":return e.supports.size?function(t,e,o,i){if(t.normalizationField||t.valueRepresentation)return x(i,"Could not convert size info: unsupported property"),null;if(!p.isStringOrNull(t.field))return x(i,"Could not convert size info: field is not a string"),null;if(e.size){if(t.field)if(e.size.field){if(t.field!==e.size.field)return x(i,"Could not convert size info: multiple fields in use"),null}else e.size.field=t.field}else e.size=new h(t.field),l.copy(e.size.fallback,o.fallbackSize);let s;switch(t.axis){case"width":return s=C(t,e.size,0,o,i),s?e:null;case"height":return s=C(t,e.size,2,o,i),s?e:null;case"depth":return s=C(t,e.size,1,o,i),s?e:null;case"width-and-depth":return s=C(t,e.size,0,o,i),s&&C(t,e.size,1,o,i),s?e:null;case null:case void 0:case"all":return s=C(t,e.size,0,o,i),s=s&&C(t,e.size,1,o,i),s=s&&C(t,e.size,2,o,i),s?e:null;default:return x(i,`Could not convert size info: unknown axis "${t.axis}""`),null}}(i,t,e,o):t;case"color":return e.supports.color?function(t,e,o,i){if(t.normalizationField)return x(i,"Could not convert color info: unsupported property"),null;if(p.isString(t.field)){if(!t.stops)return x(i,"Could not convert color info: missing stops or colors"),null;{if(t.stops.length>8)return x(i,"Could not convert color info: too many color stops"),null;e.color=new y(t.field);const s=t.stops;for(let t=0;t<8;++t){const o=s[Math.min(t,s.length-1)];e.color.values[t]=o.value,k(e.color.colors,t,o.color)}u.copy(e.color.fallback,o.fallbackColor)}}else{if(!(t.stops&&t.stops.length>=0))return x(i,"Could not convert color info: no field and no colors/stops"),null;{const i=t.stops&&t.stops.length>=0&&t.stops[0].color;e.color=new y(null);for(let t=0;t<8;t++)e.color.values[t]=1/0,k(e.color.colors,t,i);u.copy(e.color.fallback,o.fallbackColor)}}return e}(i,t,e,o):t;case"opacity":return e.supports.opacity?function(t,e,o,i){if(t.normalizationField)return x(i,"Could not convert opacity info: unsupported property"),null;if(p.isString(t.field)){if(!t.stops)return x(i,"Could not convert opacity info: missing stops or opacities"),null;{if(t.stops.length>8)return x(i,"Could not convert opacity info: too many opacity stops"),null;e.opacity=new S(t.field,o.fallbackColor[3]);const s=t.stops;for(let t=0;t<8;++t){const o=s[Math.min(t,s.length-1)];e.opacity.values[t]=o.value,e.opacity.opacityValues[t]=o.opacity}}}else{if(!(t.stops&&t.stops.length>=0))return x(i,"Could not convert opacity info: no field and no opacities/stops"),null;{const i=t.stops&&t.stops.length>=0?t.stops[0].opacity:0;e.opacity={field:null,values:[0,0,0,0,0,0,0,0],opacityValues:[0,0,0,0,0,0,0,0],fallback:o.fallbackColor[3]};for(let t=0;t<8;t++)e.opacity.values[t]=1/0,e.opacity.opacityValues[t]=i}}return e}(i,t,e,o):null;case"rotation":return e.supports.rotation?function(t,e,o){if(!p.isString(t.field))return x(o,"Could not convert rotation info: field is not a string"),null;if(e.rotation){if(t.field)if(e.rotation.field){if(t.field!==e.rotation.field)return x(o,"Could not convert rotation info: multiple fields in use"),null}else e.rotation.field=t.field}else e.rotation={field:t.field,offset:[0,0,0],factor:[1,1,1],type:[0,0,0]};switch(t.axis){case"tilt":return w(t,e.rotation,0),e;case"roll":return w(t,e.rotation,1),e;case null:case void 0:case"heading":return w(t,e.rotation,2),e;default:return x(o,`Could not convert rotation info: unknown axis "${t.axis}""`),null}}(i,t,o):t;default:return null}},new b);return!(t.length>0&&i)||i.size||i.color||i.opacity||i.rotation?i?.size&&!function(t,e,o){for(let o=0;o<3;++o){let i=e.unitInMeters;1===t.type[o]&&(i*=e.modelSize[o],t.type[o]=2),t.minSize[o]=t.minSize[o]/i,t.maxSize[o]=t.maxSize[o]/i,t.offset[o]=t.offset[o]/i,t.factor[o]=t.factor[o]/i}let i;if(0!==t.type[0])i=0;else if(0!==t.type[1])i=1;else{if(0===t.type[2])return x(o,"No size axis contains a valid size or scale"),!1;i=2}for(let e=0;e<3;++e)0===t.type[e]&&(t.minSize[e]=t.minSize[i],t.maxSize[e]=t.maxSize[i],t.offset[e]=t.offset[i],t.factor[e]=t.factor[i],t.type[e]=t.type[i]);return!0}(i.size,e,o)?null:i:null}class F{constructor(t,e,o){this.visualVariables=t,this.materialParameters=e,this.requiresShaderTransformation=o}}function N(t,e,o){if(!!t!=!!e)return!1;if(t&&t.field!==e?.field)return!1;if(t&&"rotation"===o){const o=t,i=e;for(let t=0;t<3;t++)if(o.type[t]!==i.type[t]||o.offset[t]!==i.offset[t]||o.factor[t]!==i.factor[t])return!1}return!0}class I extends z.NoParameters{constructor(t){super(),this.vvSize=t?.size??null,this.vvColor=t?.color??null,this.vvOpacity=t?.opacity??null}get hasVVSize(){return!!this.vvSize}get hasVVColor(){return!!this.vvColor}get hasVVOpacity(){return!!this.vvOpacity}}function P(t,e){const o=new I(t);return o.vvSize&&(o.vvSymbolAnchor=e.anchor,n.identity(A),function(t,e,o,i=r.create()){const s=t||0,l=e||0,a=o||0;0!==s&&n.rotateZ(i,i,-s/180*Math.PI),0!==l&&n.rotateX(i,i,l/180*Math.PI),0!==a&&n.rotateY(i,i,a/180*Math.PI)}(e.rotation[2],e.rotation[0],e.rotation[1],A),o.vvSymbolRotationMatrix=o.vvSymbolRotationMatrix||s.create(),i.fromMat4(o.vvSymbolRotationMatrix,A)),o}function T(t,e,i){if(!e.vvSize)return l.set(t,1,1,1),t;if(Number.isNaN(i[0]))return l.copy(t,e.vvSize.fallback);for(let s=0;s<3;++s){const n=e.vvSize.offset[s]+i[0]*e.vvSize.factor[s];t[s]=o.clamp(n,e.vvSize.minSize[s],e.vvSize.maxSize[s])}return t}const U=r.create(),O=a.create(),A=r.create();t.ConvertOptions=class{constructor({supports:t,modelSize:e,symbolSize:o,unitInMeters:i,anchor:s,scale:n,rotation:r,fallbackColor:l,fallbackSize:u}){this.supports=t,this.modelSize=e??a.ones(),this.symbolSize=o??a.ones(),this.unitInMeters=i??1,this.anchor=s??a.zeros(),this.scale=n??a.ones(),this.rotation=r??a.zeros(),this.fallbackColor=l??c.ones(),this.fallbackSize=u??a.ones()}},t.FastColorInfo=y,t.FastOpacityInfo=S,t.FastRotationInfo=class extends v{constructor(t){super(t),this.offset=[0,0,0],this.factor=[1,1,1],this.type=[0,0,0]}},t.FastSizeInfo=h,t.FastSymbolUpdatesState=F,t.FastVisualVariables=b,t.VisualVariablesParameters=I,t.convertVisualVariables=M,t.evaluateModelTransform=function(t,e,o){if(!t.vvSize)return o;n.copy(U,o);const i=t.vvSymbolRotationMatrix;return n.set(A,i[0],i[1],i[2],0,i[3],i[4],i[5],0,i[6],i[7],i[8],0,0,0,0,1),n.multiply(U,U,A),T(O,t,e),n.scale(U,U,O),n.translate(U,U,t.vvSymbolAnchor),U},t.evaluateModelTransformScale=T,t.getAttributeValue=function(t,e){const o=null==t?0:e.attributes[t];return"number"==typeof o&&isFinite(o)?o:NaN},t.getMaterialParameters=P,t.initFastSymbolUpdatesState=function(t,e){if(!t)return null;if(m.olidEnabled())return null;if(d.debugFlags.TESTS_DISABLE_FAST_UPDATES)return null;const o=M(t.visualVariables,e);return o?new F(o,P(o,e),!!o.size):null},t.updateFastSymbolUpdatesState=function(t,e,o){if(!e||!t)return!1;const i=t.visualVariables,s=M(e.visualVariables,o);return!!s&&!!(N(i.size,s.size,"size")&&N(i.color,s.color,"color")&&N(i.rotation,s.rotation,"rotation")&&N(i.opacity,s.opacity,"opacity"))&&(t.visualVariables=s,t.materialParameters=P(s,o),t.requiresShaderTransformation=!!s.size,!0)},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});