// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Error","../../../core/maybe","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","./LayerView3D","./graphics/elevationAlignPointsInFeatures","./graphics/GraphicsProcessor","./graphics/queryForSymbologySnapping","./support/LayerViewPerformanceInfo","../../layers/LayerView","../../support/highlightOptionsUtils","../../support/layerViewUtils","../../support/projectionUtils"],function(e,r,s,t,i,o,a,n,l,p,c,h,d,u,y,g,m,b){"use strict";let f=class extends(p.LayerView3D(y)){constructor(){super(...arguments),this.type="graphics-3d",this.symbologySnappingSupported=!0,this._slicePlaneEnabled=!1,this.fullExtentInLocalViewSpatialReference=null,this.ignoresMemoryFactor=!0}get highlightOptions(){return null}initialize(){this._set("processor",new h.GraphicsProcessor({owner:this,scaleVisibilityEnabled:!0,frustumVisibilityEnabled:!0})),this.addResolvingPromise(this.processor.initializePromise),this.addHandles(this.layer.on("graphic-update",e=>this.processor.graphicsCore.graphicUpdateHandler(e))),this.layer.internal?this.notifyChange("updating"):("local"===this.view.viewingMode&&this.addResolvingPromise((async()=>this.fullExtentInLocalViewSpatialReference=await b.projectWithZConversionSilent(this.layer.fullExtent,this.view.spatialReference))()),this.addHandles(t.when(()=>this.view?.basemapTerrain?.ready,()=>()=>this.notifyChange("updating"),{once:!0})))}destroy(){this._updatingHandles.removeAll(),this._set("processor",s.destroyMaybe(this.processor))}get loadedGraphics(){return this.layer.graphics}get legendEnabled(){return this.canResume()&&!this.processor?.frustumVisibilitySuspended}get visibleAtCurrentScale(){return m.hasLayerBasedScaleVisibility()?m.isInEffectiveScaleRange(this.layer.effectiveScaleRange,this.view.scale):!this.processor?.scaleVisibilitySuspended}get slicePlaneEnabled(){const e=this.layer.internal;return this._slicePlaneEnabled&&!e}set slicePlaneEnabled(e){this._slicePlaneEnabled=e}getSuspendInfo(){const e=super.getSuspendInfo();return e.outsideOfView=this.processor?.frustumVisibilitySuspended??!1,e}getHit(e){return this.processor.getHit(e)}whenGraphicBounds(e,r){return this.processor.whenGraphicBounds(e,r)}computeAttachmentOrigin(e,r){return this.processor?.computeAttachmentOrigin(e,r)}getSymbolLayerSize(e,r){return this.processor.getSymbolLayerSize(e,r)}queryGraphics(){return Promise.resolve(this.loadedGraphics)}maskOccludee(e){return this.processor.maskOccludee(e)}highlight(e,r){return this.processor.highlight(e,g.getHighlightName(r))}notifyContentGeometryUpdate(){this.emit("visible-geometry-changed")}async elevationAlignPointsInFeatures(e,s){const{processor:t}=this;if(null==t?.graphics3DGraphics)throw new r("graphicslayerview3d:missing-processor","A Graphics3D processor is needed to resolve graphics elevation.");const{graphics3DGraphics:i}=t;return c.elevationAlignPointsInFeatures(this.view,this.layer,e=>"number"==typeof e?i.get(e):void 0,e,s)}async queryForSymbologySnapping(e,r){return d.queryForSymbologySnapping(this.processor,e,r)}get updatePolicy(){return this.processor?.graphicsCore.effectiveUpdatePolicy||1}isUpdating(){return this.view&&this.layer&&!(!this.processor?.updating&&(this.layer.internal||this.view.basemapTerrain?.ready))}get performanceInfo(){return new u.LayerViewPerformanceInfo(this.usedMemory,this.loadedGraphics.length,-1,-1)}get usedMemory(){return this.processor?.graphicsCore?.usedMemory??0}get unloadedMemory(){return this.processor?.graphicsCore?.unprocessedMemoryEstimate}get test(){return{graphics3DProcessor:this.processor,loadedGraphics:this.loadedGraphics}}};return e.__decorate([i.property()],f.prototype,"highlightOptions",null),e.__decorate([i.property()],f.prototype,"loadedGraphics",null),e.__decorate([i.property({readOnly:!0})],f.prototype,"legendEnabled",null),e.__decorate([i.property()],f.prototype,"layer",void 0),e.__decorate([i.property({readOnly:!0})],f.prototype,"processor",void 0),e.__decorate([i.property({readOnly:!0})],f.prototype,"visibleAtCurrentScale",null),e.__decorate([i.property()],f.prototype,"_slicePlaneEnabled",void 0),e.__decorate([i.property({type:Boolean})],f.prototype,"slicePlaneEnabled",null),f=e.__decorate([l.subclass("esri.views.3d.layers.GraphicsLayerView3D")],f),f});