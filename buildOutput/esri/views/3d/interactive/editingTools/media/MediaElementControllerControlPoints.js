// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/Accessor","../../../../../core/arrayUtils","../../../../../core/handleUtils","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/has","../../../../../core/Logger","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/support/UpdatingHandles","../../../../../geometry/Point","../../../../../geometry/Polygon","../../../../../geometry/projectionUtils","./ControlPointOperations","../../../../interactive/editGeometry/EditGeometry"],function(e,t,o,n,r,i,s,l,a,p,c,d,m,h,y,g){"use strict";e.MediaElementControllerControlPoints=class extends o{get operations(){return this._operations}get updating(){return this._updatingHandles.updating}constructor(e){super(e),this._updatingHandles=new c.UpdatingHandles}initialize(){this.addHandles([r.destroyHandle(this._updatingHandles),this._updatingHandles.add(()=>{const e=this.element.georeference;return"control-points"===e?.type?e.controlPoints:null},e=>this._elementControlPointsChanged(e),i.initial)])}_elementControlPointsChanged(e){const t=e?.map(({mapPoint:e})=>e).filter(n.isSome),o=this.view.spatialReference;this._updatingHandles.addPromise(this._whenProjected(t,o,e=>{if(!e)return void this._replaceOperations(null);const{_operations:t}=this,n=e.map(({x:e,y:t})=>[e,t]);n.push(n[0].slice());const r=new m({rings:[n],spatialReference:o});if(t?.trySetGeometry(r))return void this.onModifiedExternally();const i=this.view.state.viewingMode;this._replaceOperations(new y.ControlPointOperations(g.EditGeometry.fromGeometry(r,i),i,e=>this._operationsGeometryChanged(e)))}))}_operationsGeometryChanged(e){const{element:{georeference:t},_operations:o}=this;if(!o||!t||"control-points"!==t.type||!t.controlPoints)return;const r=o.data.geometry,i=t.controlPoints.map(({mapPoint:e})=>e).filter(n.isSome),s=o.data.parts[0].isClosed()?1:0;if(r.rings[0]?.length-s!==i.length)return;const l=r.rings[0].map(([e,t])=>new d({x:e,y:t,spatialReference:r.spatialReference}));l.length-=s;const a=i.map(({spatialReference:e})=>e);this._updatingHandles.addPromise(this._whenProjected(l,a,t=>this._updateElementControlPoints(t,e)))}_updateElementControlPoints(e,t){const{georeference:o}=this.element;if(!o||!e||"control-points"!==o.type||o.controlPoints?.length!==e?.length)return;const n=o.controlPoints;if(n?.length===e.length)for(let r=0;r<n.length;r++)t&&(n[r].sourcePoint=o.toSource(e[r])),n[r].mapPoint=e[r]}async _whenProjected(e,t,o){if(!e)return void o(e);const{_operations:n,element:{georeference:r}}=this,i=e.map(({spatialReference:e})=>e),s=Array.isArray(t)?t:new Array(i.length).fill(t);await h.initializeProjection(Array.from(i).map((e,t)=>({source:e,dest:s[t]})));const l=e.map((e,t)=>h.project(e,s[t]));n===this._operations&&r===this.element.georeference&&o(l)}_replaceOperations(e){this._operations&&(this.removeHandles(this._operations),this._operations.destroy()),this._operations=e}},t.__decorate([s.property({constructOnly:!0})],e.MediaElementControllerControlPoints.prototype,"view",void 0),t.__decorate([s.property({constructOnly:!0})],e.MediaElementControllerControlPoints.prototype,"layer",void 0),t.__decorate([s.property({constructOnly:!0})],e.MediaElementControllerControlPoints.prototype,"element",void 0),t.__decorate([s.property({constructOnly:!0})],e.MediaElementControllerControlPoints.prototype,"onModifiedExternally",void 0),t.__decorate([s.property()],e.MediaElementControllerControlPoints.prototype,"_operations",void 0),t.__decorate([s.property()],e.MediaElementControllerControlPoints.prototype,"operations",null),t.__decorate([s.property()],e.MediaElementControllerControlPoints.prototype,"updating",null),e.MediaElementControllerControlPoints=t.__decorate([p.subclass("esri.views.3d.interactive.editingTools.media.MediaElementControllerControlPoints")],e.MediaElementControllerControlPoints),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});