// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../Color","../../../../../core/Handles","../../../../../core/handleUtils","../../../../../core/has","../../../../../core/maybe","../../../../../core/reactiveUtils","../../../../../core/libs/gl-matrix-2/math/mat4","../../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../geometry/support/vectorStacks","../../Manipulator3D","../../RenderObject","../dragEventPipeline3D","./config","./Manipulation","./moveUtils","../snapping/SnapToScene","../../../webgl-engine/lib/GeometryUtil","../../../webgl-engine/materials/ColorMaterial","../../../../interactive/dragEventPipeline"],function(e,t,a,i,r,s,n,o,l,c,d,u,p,h,_,m,g,M,S,f,v,T){"use strict";class y extends g.Manipulation{constructor(e){super(),this._handles=new a,this._snapToScene=new S.SnapToScene,this._scale=1,this._radius=m.discRadius,this._view=e.view,this._tool=e.tool,this._discMaterial=this._createMaterial(),this._discMaterialTransparent=this._createMaterial(.5),null!=e.snapToScene&&(this.snapToScene=e.snapToScene),null!=e.radius&&(this._radius=e.radius),this._createManipulator(),this.forEachManipulator(e=>this._tool.manipulators.add(e))}destroy(){this._handles=s.destroyMaybe(this._handles),this.forEachManipulator(e=>{this._tool.manipulators.remove(e),e.destroy()}),this._tool=null,this._view=null,this._manipulator=null}forEachManipulator(e){e(this._manipulator,1)}get displayScale(){return this._scale}set displayScale(e){this._scale=e,this._updateManipulatorTransform()}get snapToScene(){return this._snapToScene.enabled}set snapToScene(e){this._snapToScene.enabled=e}get radius(){return this._radius}set radius(e){e!==this._radius&&(this._radius=e,this._updateManipulator())}get discManipulator(){return this._manipulator}createManipulatedObjectDragPipeline(e,t,a){if(!t.operations)return i.makeHandle();const r=t.graphic,s=t.elevationInfo,n=t.operations.data.spatialReference;return M.createManipulatedMoveDragPipeline(t,a,t=>this.createDragPipeline((a,i,r,s,n)=>(({steps:i,cancel:r}=e(a,i,r,s,n)),t(a,i,r)),s,n,r))}createDragPipeline(e,t,a,i){const r=this._view;return T.createManipulatorDragEventPipeline(this._manipulator,(s,n,o,l,c)=>{const d=n.next(T.dragAtLocation(r,s.elevationAlignedLocation)).next(_.screenToMapXYAtLocation(r,s.elevationAlignedLocation,t,a,i)).next(...this._snapToScene.createDragEventPipelineStep(r,t)).next(e=>({...e,manipulatorType:1})).next(T.addScreenDelta());e(s,d,o,l,c)})}_updateManipulatorTransform(){const e=o.fromScaling(u.sm4d.get(),c.set(u.sv3d.get(),this.displayScale,this.displayScale,this.displayScale));this._manipulator.modelTransform=e}_createManipulator(){const e=this._view;this._manipulator=new p.Manipulator3D({view:e,worldSized:!1,autoScaleRenderObjects:!1,focusMultiplier:1,touchMultiplier:1,collisionType:{type:"disc",direction:d.fromValues(0,0,1)},worldOriented:!0}),this._updateManipulator()}_updateManipulator(){const e=f.createCylinderGeometry(this._discMaterial,m.discHeight,1,m.geometrySegments,d.fromValues(0,0,1),d.fromValues(0,0,0));e.transformation=o.fromScaling(l.create(),d.fromValues(this._radius,this._radius,this._radius)),this._manipulator.renderObjects=[new h.RenderObject(e,2),new h.RenderObject(e.instantiate({material:this._discMaterialTransparent}),1)],this._manipulator.radius=m.discCollisionRadius*(this._radius/m.discRadius)}_createMaterial(e=1){const a=new v.ColorMaterial({cullFace:2,renderOccluded:2,isDecoration:!0});return this._handles.add(n.watch(()=>t.toUnitRGBA(this._view.effectiveTheme.accentColor),t=>{t[3]*=e,a.setParameters({color:t})},n.initial)),a}get test(){}}e.MoveXYDiscManipulation=y,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});