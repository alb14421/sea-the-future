// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/screenUtils","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/Point","../../../../geometry/projectionUtils","../../../../geometry/support/plane","../../../../geometry/support/ray","../../../../geometry/support/vector","../../../../geometry/support/vectorStacks","../../../../support/elevationInfoUtils","../../support/geometryUtils/ray","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/verticalOffsetUtils","../../../interactive/dragEventPipeline"],function(e,n,r,t,o,c,l,a,s,i,u,d,p,f,m,y){"use strict";function g(e,n){return S(e,()=>n)}function S(e,r){const t=o.create(),c=o.create();let l=!1;return o=>{const s=r(o);if("start"===o.action){const r=n.screenPointObjectToArray(o.screenStart,n.castScreenPointArray(u.sv2d.get())),c=p.fromScreen(e.state.camera,r,A);null!=c&&(l=a.intersectRay(s,c,t))}if(!l)return null;const i=n.screenPointObjectToArray(o.screenEnd,n.castScreenPointArray(u.sv2d.get())),d=p.fromScreen(e.state.camera,i,A);return null==d?null:a.intersectRay(s,d,c)?{...o,renderStart:t,renderEnd:c,plane:s,ray:d}:null}}function P(e,r,t,o=null,c=null){return function(e,r,t=0,o=null,c=null){let a=null;return s=>{if("start"===s.action&&(a=e.sceneIntersectionHelper.intersectElevationFromScreen(n.createScreenPointArray(s.screenStart.x,s.screenStart.y),r,t,c),null!=a&&null!=o&&!l.projectPoint(a,a,o)))return null;if(null==a)return null;const i=e.sceneIntersectionHelper.intersectElevationFromScreen(n.createScreenPointArray(s.screenEnd.x,s.screenEnd.y),r,t,c);return null==i||null!=o&&!l.projectPoint(i,i,o)?null:{...s,mapStart:a,mapEnd:i}}}(e,t,d.getZForElevationMode(r,e,t),o,c)}function v(e,n){const r=o.create(),c=t.length(n);e.renderCoordsHelper.worldUpAtPosition(n,r);const l=o.create(),a=o.create(),s=o=>(t.subtract(o,o,n),i.projectPoint(r,o,o),"global"===e.viewingMode&&t.length(o)*Math.sign(t.dot(r,o))<.001-c&&t.subtract(o,t.scale(o,r,.001),n),t.add(o,o,n),o);return e=>(e.renderStart=s(t.copy(l,e.renderStart)),e.renderEnd=s(t.copy(a,e.renderEnd)),e)}function b(e,n){const r=e.renderCoordsHelper;return e=>{const t=r.fromRenderCoords(e.renderStart,new c({spatialReference:n})),o=r.fromRenderCoords(e.renderEnd,new c({spatialReference:n}));return null!=t&&null!=o?{...e,mapStart:t,mapEnd:o}:null}}const E=r.create(),T=o.create(),x=o.create(),A=s.create();e.convertToMapCoordinates=b,e.hideManipulatorWhileDragging=function(e){let n=null;return r=>{switch(r.action){case"start":n=e.disableDisplay();break;case"end":case"cancel":null!=n&&(n.remove(),n=null)}return r}},e.projectToWorldUp=v,e.screenToMap3D=function(e,r=null){const t=new f.Intersector(e.state.viewingMode);t.options.selectionMode=!0,t.options.store=0,t.options.hud=!1;const l=n.createScreenPointArray(),a={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},s=o.create(),i=r??e.spatialReference,u=r=>{e.map.ground&&e.map.ground.opacity<1?a.exclude.add(m.terrainId):a.exclude.delete(m.terrainId),e.sceneIntersectionHelper.intersectIntersectorScreen(n.screenPointObjectToArray(r,l),t,a);const o=t.results.min;let u;if(o.getIntersectionPoint(s))u=2===o.intersector?0:1;else{if(!t.results.ground.getIntersectionPoint(s))return null;u=0}return{location:e.renderCoordsHelper.fromRenderCoords(s,new c({spatialReference:i})),surfaceType:u}};let d;return e=>{if("start"===e.action){const n=u(e.screenStart);d=null!=n?n.location:null}if(null==d)return null;const n=u(e.screenEnd);return null!=n?.location?{...e,mapStart:d,mapEnd:n.location,surfaceType:n.surfaceType}:null}},e.screenToMapXYAtLocation=P,e.screenToMapXYForManipulatedObject=function(e,n,r,t){const o=r.toMap(e.screenStart);return null!=o?P(n,o,r.elevationInfo,t):null},e.screenToRenderPlane=g,e.screenToRenderPlaneFromEvent=function(e){return S(e,e=>e.plane)},e.screenToRenderRay=function(e,r){const t=t=>{const o=n.screenPointObjectToArray(t,n.castScreenPointArray(E)),c=p.fromScreen(e.state.camera,o,A);if(null==c)return null;const l=s.closestPoints(r,c,T,x);return l?.[0]};return e=>{const n=t(e.screenStart);if(null==n)return null;const r=t(e.screenEnd);return null==r?null:{...e,renderStart:n,renderEnd:r}}},e.screenToZConstrained=function(e,n,r){let o=null;const c=new y.EventPipeline;return c.next(g(e,function(e,n){const r=T,o=x,c=a.create();e.renderCoordsHelper.worldUpAtPosition(n,r);const l=t.cross(a.getNormal(c),r,t.subtract(o,n,e.state.camera.eye));return t.cross(l,l,r),a.fromPositionAndNormal(n,l,c)}(e,n))).next(v(e,n)).next(b(e,r)).next(e=>{e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,o=e}),e=>(o=null,c.execute(e),o)},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});