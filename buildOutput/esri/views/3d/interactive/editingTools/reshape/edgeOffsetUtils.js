// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/quantityUtils","../../../../../core/screenUtils","../../../../../core/unitUtils","../../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../geometry/projectionUtils","../../../../../geometry/projection/projectVectorToVector","../../../../../geometry/support/geodesicUtils","../../../../../geometry/support/plane","../../../../../layers/graphics/dehydratedPoint","../../../../../support/elevationInfoUtils","../../../../interactive/editGeometry/operations/OffsetEdgeVertex"],function(e,t,r,o,n,c,i,a,s,l,d,u,f,p){"use strict";function g(e,t,r){const o=u.makeDehydratedPoint(t.x+r[0],t.y+r[1],t.z+r[2],t.spatialReference),n=i.create(),a=i.create();return e.renderCoordsHelper.toRenderCoords(t,n)&&e.renderCoordsHelper.toRenderCoords(o,a)?c.direction(a,n,a):null}e.createEdgeOffsetIntersectionPlane=function(e,t,r){const o=i.create();if(!e.renderCoordsHelper.toRenderCoords(t,o))return null;const n=g(e,t,d.getNormal(r.plane)),a=g(e,t,r.edgeDirection);if(null==n||null==a)return null;const s=c.cross(i.create(),n,a);return d.fromPositionAndNormal(o,s,d.create())},e.createEdgeOffsetOperation=function(e,t,r){const o="on-the-ground"===r.mode?1:0;return new p.OffsetEdgeVertex(e,o,t,0)},e.edgeOffsetRotationMatrix=function(e,t,r){const o=d.getNormal(e),a=c.direction(i.create(),t,r),s=c.cross(i.create(),a,o),l=c.cross(i.create(),a,s);return n.fromValues(a[0],a[1],a[2],0,s[0],s[1],s[2],0,l[0],l[1],l[2],0,0,0,0,1)},e.getDistanceInGeometrySR=function(e,r,n,{data:{coordinateHelper:a,spatialReference:u}}){const f=t.valueInUnit(e,"meters"),p=o.getMetersPerUnitForSR(u),g=Math.sign(f*n.selectedArrow),m=l.geodesicCompatibleSpatialReference(u),y=d.getNormal(n.plane),v=a.pointToXYZ(r),R=i.create();c.scaleAndAdd(R,v,y,g*(10/p));const S=f*n.selectedArrow/p;if(!m||!s.projectVectorToVector(v,u,v,m)||!s.projectVectorToVector(R,u,R,m))return S;const h=new l.InverseGeodeticSolverResult;if(l.inverseGeodeticSolver(h,v,R,m),l.directGeodeticSolver(R,v,h.azimuth,f,m),!s.projectVectorToVector(R,m,R,u))return S;const P=R[0]-r.x,V=R[1]-r.y,j=Math.sqrt(P*P+V*V)*g,[A,x]=y,E=Math.sqrt(A*A+x*x);return 0===E?0:j/E},e.getMapPointAtEdgeOffsetManipulatorElevation=function(e,t,o,n){const{elevationInfo:c,operations:i}=o;if(!i||!e)return null;const s=n.manipulator.elevationAlignedLocation,l=f.getZForElevationMode(s,t,c),d=t.sceneIntersectionHelper.intersectElevationFromScreen(r.createScreenPointArray(e.x,e.y),c,l);return d&&a.projectPoint(d,d,i.data.spatialReference)?d:null},e.screenEdgeLengthSquared=function(e,t,o){const n=o.projectToRenderScreen(e,r.createRenderScreenPointArray3()),i=o.projectToRenderScreen(t,r.createRenderScreenPointArray3());return null!=n&&null!=i?c.squaredLength(c.subtract(n,n,i)):0},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});