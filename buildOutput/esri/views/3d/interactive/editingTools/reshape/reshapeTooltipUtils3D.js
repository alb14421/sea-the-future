// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/handleUtils","../../../../../core/quantityUtils","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/ensureType","../../../../../geometry/Point","../manipulatedObjectUtils","../tooltipUtils3D","../manipulations/moveUtils","../../../../interactive/tooltip/tooltipCommonUtils","../../../../interactive/tooltip/infos/MovePointTooltipInfo","../../../../interactive/tooltip/infos/ReshapeEdgeOffsetTooltipInfo","../../../../interactive/tooltip/infos/SelectedVertexTooltipInfo","../../../../interactive/tooltip/infos/TranslateTooltipInfo","../../../../interactive/tooltip/infos/TranslateXYTooltipInfo","../../../../interactive/tooltip/infos/TranslateZTooltipInfo","../../../../support/euclideanLengthMeasurementUtils"],function(e,t,o,n,a,i,s,l,c,r,p,u,f,d,m,y,T){"use strict";function h(e,{activeTooltipInfo:t,selectedVertexManipulatorInfo:o,callbacks:n}){if(!t)return;n.onBeforeReshape();const a=s.manipulatedObjectGeometry(e);switch(a?.type){case"mesh":"move-point"===t.type&&l.updateXYZFromTooltipInfo(t,a.origin,e,n);break;case"point":"move-point"===t.type&&l.updateXYZFromTooltipInfo(t,a,e,n);break;case"polyline":case"polygon":"selected-vertex"===t.type&&function(e,t,o,n){if(!t)return;const{dx:a,dy:i,dz:s}=r.getXYZDeltasFromTooltipInfo(e,t.manipulator.location);0===a&&0===i&&0===s||(n.onReshapeStart(),o.operations?.moveVertices([t.handle],a,i,s,0),n.onReshape(),n.onReshapeStop())}(t,o,e,n)}}const v=a.ensureType(i);function g(e,t,n){if(null!=t&&"end"!==t.action){const{mapStart:a,mapEnd:i}=t,s=n(a,i);e.distance=null!=s?s:o.zeroMeters}else e.distance=o.zeroMeters}e.connectTooltipToManipulatedObject=function(e,o,a){function i(){const e=a(),t=e.sketchOptions.tooltips.effectiveEnabled?e.activeTooltipInfo:null;return{...e,activeTooltipInfo:t}}let c=!1;function p(e){c||(c=!0,e(),c=!1)}function u(t){p(()=>{!function(e,t){const{activeTooltipInfo:o,selectedVertexManipulatorInfo:n,sketchOptions:a}=t;if(o)switch(o.sketchOptions=a,o?.type){case"move-point":l.updateTooltipInfoFromManipulatedObject(o,e);break;case"selected-vertex":!function(e,t,o,{automaticAreaMeasurementUtils:n,automaticLengthMeasurementUtils:a}){if(!e||"selected-vertex"!==e.type)return;const i=t?.manipulator.location;e.setLocationFromPoint(i),l.updateElevationFromPoint(e,i,o);const s=o.operations?.data.geometry;switch(s?.type){case"polygon":e.geometryType="polygon",e.totalLength.visible=!1,e.area.actual=n.autoArea2D(s);break;case"polyline":e.geometryType="polyline",e.totalLength.actual=a.autoLength2D(s),e.area.visible=!1}}(o,n,e,t)}}(o,t),e.info=t.activeTooltipInfo})}return t.handlesGroup([n.watch(i,u,n.syncAndInitial),n.watch(()=>{const e=i(),{activeTooltipInfo:t}=e;if(t&&"key"in t)return{context:e,activeTooltipInfo:t,key:t.key,geometry:s.manipulatedObjectGeometry(o)}},(e,t)=>{e&&t&&t.key!==e.key&&p(()=>h(o,e.context))},n.sync),o.on("committed",()=>u(i())),r.connectPasteEvent(e,{onBeforePaste:()=>{c=!0},onAfterPaste:()=>{h(o,i()),c=!1}})])},e.createTooltipInfos=function(e,t){const o=t?.type;return{edgeOffset:new u.ReshapeEdgeOffsetTooltipInfo({sketchOptions:e,viewType:o}),movePoint:new p.MovePointTooltipInfo({sketchOptions:e,viewType:o}),selectedVertex:new f.SelectedVertexTooltipInfo({sketchOptions:e,viewType:o}),translate:new d.TranslateTooltipInfo({sketchOptions:e,viewType:o}),translateXY:new m.TranslateXYTooltipInfo({sketchOptions:e,viewType:o}),translateZ:new y.TranslateZTooltipInfo({sketchOptions:e,viewType:o})}},e.getUpdatedEdgeOffsetTooltipInfo=function({operations:e},t,{sketchOptions:n,tooltipInfos:a,automaticAreaMeasurementUtils:i,automaticLengthMeasurementUtils:s}){const l=a.edgeOffset;if(l.distance.committed=null,null!=t&&null!=t.signedDistance&&"end"!==t.action&&null!=e){const n=e.data.coordinateHelper,{start:a,end:i}=t.operation.clampedStartAndEnd(t.mapEnd),c=s.autoDistance2D(a,i,n.spatialReference),r=Math.sign(t.signedDistance*t.operation.selectedArrow);l.distance.actual=null!=c?o.scale(c,r):null}else l.distance.actual=o.zeroMeters;const c=e?.data.geometry;switch(l.area.actual=null,l.area.visible=!1,l.totalLength.actual=null,l.totalLength.visible=!1,c?.type){case"polygon":l.area.actual=i.autoArea2D(c),l.area.visible=!0;break;case"polyline":l.totalLength.actual=s.autoLength2D(c),l.totalLength.visible=!0}return l.sketchOptions=n,l},e.getUpdatedTranslateObjectTooltipInfo=function(e,t,{sketchOptions:n,tooltipInfos:a,automaticLengthMeasurementUtils:i}){let s=null;switch(e){case 0:s=a.translate,g(s,t,(e,t)=>i.autoDistanceBetweenPoints2D(v(e),v(t)));break;case 1:s=a.translateXY,g(s,t,(e,n)=>o.scale(i.autoDistanceBetweenPoints2D(v(e),v(n)),c.axisConstrainedDragSign(t)));break;case 2:s=a.translateZ,g(s,t,T.verticalSignedDistanceBetweenPoints)}return s.sketchOptions=n,s},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});