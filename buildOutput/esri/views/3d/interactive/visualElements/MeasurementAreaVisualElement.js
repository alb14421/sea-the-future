// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/math/vec2","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../chunks/vec42","../../../../core/libs/gl-matrix-2/factories/vec4f64","./Object3DVisualElement","../../webgl-engine/lib/Attribute","../../webgl-engine/lib/Geometry","../../webgl-engine/materials/CheckerBoardMaterial"],function(e,t,r,i,s,o,c,a,l,n,h,u){"use strict";class d extends l.Object3DVisualElement{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=4,this._geometry=null,this._size=i.fromValues(1,1),this._color1=a.fromValues(1,.5,0,.5),this._color2=a.fromValues(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){r.copy(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){c.exactEquals(e,this._color1)||(c.copy(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){c.exactEquals(e,this._color2)||(c.copy(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial?.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new u.CheckerBoardMaterial({size:this._size,color1:this._color1,color2:this._color2,writeDepth:!1,polygonOffset:!0,renderOccluded:4,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachMaterial(e){e(this._checkerBoardMaterial)}createGeometries(e){if(null==this._geometry||null==this._checkerBoardMaterial)return;const r=_;t.getTranslation(r,this.transform);const i=this._geometry,c=[],a=o.create();i.position.forEach(e=>{s.subtract(a,e,r),c.push(a[0],a[1],a[2])});const l=[];i.uv.forEach(e=>{l.push(e[0],e[1])});const u=new h.Geometry(this._checkerBoardMaterial,[["position",new n.Attribute(c,i.triangleIndices,3,!0)],["uv0",new n.Attribute(l,i.triangleIndices,2,!0)]]);e.addGeometry(u)}}const _=o.create();e.MeasurementAreaVisualElement=d,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});