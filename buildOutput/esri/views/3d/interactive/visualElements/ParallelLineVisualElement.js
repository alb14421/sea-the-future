// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/reactiveUtils","../../../../core/screenUtils","../../../../core/libs/gl-matrix-2/math/vec2","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../chunks/vec42","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../layers/graphics/dehydratedPoint","./EngineVisualElement","../../terrain/OverlayRenderer","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/materials/RibbonLineMaterial"],function(e,t,r,i,a,s,o,c,n,d,l,h,u,m,_){"use strict";class p extends l.EngineVisualElement{constructor(e){super(e),this._location=o.create(),this._direction=o.fromValues(1,0,0),this._width=1,this._offset=1,this._length=18,this._color=n.fromValues(1,0,1,1),this._renderOccluded=4,this.applyProperties(e)}createObject3DResourceFactory(e){return{view:e,createResources:e=>this._createObject3DResources(e),destroyResources:g,recreateGeometry:(e,t)=>this._recreateObject3DGeometry(e,t),cameraChanged:()=>this._updateGeometry(),forEachMaterial:(e,t)=>t(e.material)}}createDrapedResourceFactory(e){return{view:e,createResources:()=>this._createDrapedResources(),destroyResources:f,recreateGeometry:e=>this._recreateDrapedGeometry(e),forEachMaterial:(e,t)=>t(e.material)}}get location(){return this._location}set location(e){s.exactEquals(this._location,e)||(s.copy(this._location,e),this._updateGeometry())}get direction(){return this._direction}set direction(e){s.exactEquals(this._direction,e)||(s.copy(this._direction,e),this._updateGeometry())}setDirectionFromPoints(e,t){s.normalize(this._direction,s.subtract(this._direction,t,e)),this._updateGeometry()}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this._updateMaterial())}get offset(){return this._offset}set offset(e){e!==this._offset&&(this._offset=e,this._updateGeometry())}get length(){return this._length}set length(e){e!==this._length&&(this._length=e,this._updateGeometry())}get color(){return this._color}set color(e){c.exactEquals(e,this._color)||(c.copy(this._color,e),this._updateMaterial())}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get isDecoration(){return this._isDecoration}set isDecoration(e){this._isDecoration=e,this._updateMaterial()}_createObject3DResources(e){const t=new _.RibbonLineMaterial(this.materialParameters),r=new Array;return this._createObject3DGeometry(t,e,r),{material:t,geometries:r}}_recreateObject3DGeometry(e,t){e.geometries.length=0,this._createObject3DGeometry(e.material,t,e.geometries)}_createObject3DGeometry(e,t,r){const[i,a]=y(e);t.addGeometry(i),t.addGeometry(a),r.push(i),r.push(a),this._updateVerticesObject3D(t)}_createDrapedResources(){const e=new _.RibbonLineMaterial(this.materialParameters),r=t.watch(()=>this.view.state.contentPixelRatio,()=>this.drapedResources.recreateGeometry());return{material:e,geometries:this._createDrapedGeometry(e),pixelRatioHandle:r}}_recreateDrapedGeometry(e){e.geometries=this._createDrapedGeometry(e.material)}_createDrapedGeometry(e){const t=y(e);return this._updateVerticesDraped(t),t.map(e=>new m.RenderGeometry(e))}_updateMaterial(){const{materialParameters:e}=this;this.object3dResources.resources?.material.setParameters(e),this.drapedResources.resources?.material.setParameters(e)}get materialParameters(){return{width:this._width,color:this._color,renderOccluded:this._renderOccluded,isDecoration:this.isDecoration}}_updateGeometry(){if(this.isDraped)this.drapedResources.recreateGeometry();else{const e=this.object3dResources.object;e&&this._updateVerticesObject3D(e)}}_updateVerticesObject3D(e){const t=this.view.state.camera;t.projectToScreen(this.location,O),s.add(D,this.location,this.direction),t.projectToScreen(D,j),i.normalize(j,i.subtract(j,j,O)),this._updateVertexAttributesObject3D(t,e,0,O,j,1),this._updateVertexAttributesObject3D(t,e,1,O,j,-1)}_updateVertexAttributesObject3D(e,t,i,a,s,o){const c=t.geometries[i],n=c.getMutableAttribute("position")?.data;if(!n)return;const{start:d,end:l}=b(s,a,o,this.offset,this.width,this.length);e.unprojectFromScreen(r.castScreenPointArray(d),D),n[0]=D[0],n[1]=D[1],n[2]=D[2],e.unprojectFromScreen(r.castScreenPointArray(l),D),n[3]=D[0],n[4]=D[1],n[5]=D[2],t.geometryVertexAttributeUpdated(c,"position")}_updateVerticesDraped(e){const{view:{basemapTerrain:{overlayManager:t},state:{contentPixelRatio:r}}}=this,{location:i,width:a,length:s,offset:o}=this,c=x;c.spatialReference=t.renderer.spatialReference,c.x=i[0],c.y=i[1];const n=this.view.overlayPixelSizeInMapUnits(c)*r,d=a*n,l=s*n,h=o*n;this._updateVertexAttributesDraped(e[0],d,l,h,-1),this._updateVertexAttributesDraped(e[1],d,l,h,1)}_updateVertexAttributesDraped(e,t,r,i,a){const s=e.getMutableAttribute("position")?.data;if(!s)return;const{location:o,direction:c}=this,{start:n,end:d}=b(c,o,a,i,t,r);s[0]=n[0],s[1]=n[1],s[2]=h.drapedZ,s[3]=d[0],s[4]=d[1],s[5]=h.drapedZ,e.invalidateBoundingInfo()}}function y(e){return[u.createPolylineGeometry(e,[o.create(),o.create()]),u.createPolylineGeometry(e,[o.create(),o.create()])]}function b(e,t,r,a,s,o){const c=i.scale(G,i.set(G,e[1]*r,e[0]*-r),a+s/2),n=i.add(R,i.add(R,i.add(R,t,i.scale(R,e,o/2)),c),c);return{start:n,end:i.add(w,n,i.scale(w,e,-o))}}function g(e){e.geometries.length=0}function f(e){e.pixelRatioHandle.remove(),e.geometries=[]}const D=o.create(),G=a.create(),R=a.create(),w=a.create(),O=r.createScreenPointArray(),j=r.createScreenPointArray(),x=d.makeDehydratedPoint(0,0,void 0,null);e.ParallelLineVisualElement=p,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});