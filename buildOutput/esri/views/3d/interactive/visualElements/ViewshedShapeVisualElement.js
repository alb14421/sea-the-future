// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/mathUtils","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../analysis/Viewshed/ViewshedConfiguration","../../analysis/Viewshed/viewshedToolUtils","./Object3DVisualElement","../../webgl-engine/lib/Attribute","../../webgl-engine/lib/Geometry","../../webgl-engine/materials/ColorMaterial"],function(e,t,a,r,o,i,s,n,l,c,d,m){"use strict";class u extends l.Object3DVisualElement{constructor(e){super(e),this._material=null,this._viewshedComputedData=null,this._material=new m.ColorMaterial({...s.viewshedVisualizationConfiguration.shapeMaterialParameters,isDecoration:this.isDecoration,writeDepth:!1}),this.applyProperties(e)}get viewshedComputedData(){return this._viewshedComputedData}set viewshedComputedData(e){this._viewshedComputedData=e,this.updateTransform()}updateTransform(){const e=this._viewshedComputedData;if(null==e)return;const t=r.create(),o=e.farDistanceRenderSpace;a.fromScaling(t,i.fromValues(o,o,o)),n.getViewshedRotationMatrix(e,b),a.mul(t,b,t),a.fromTranslation(b,this._viewshedComputedData.observerRenderSpace),a.mul(t,b,t),this.transform=t}createExternalResources(){}destroyExternalResources(){}forEachMaterial(e){e(this._material)}createGeometries(e){const{_material:r,viewshedComputedData:i}=this;if(null==i||null==r||!i.valid)return;const l=function(e,r){const{horizontalFieldOfView:i,verticalFieldOfView:l}=r,m=o.set(f,0,0,1),u=o.set(p,0,1,0),y=o.set(w,1,0,0);n.rotateBy(m,m,t.deg2rad(l/2),u),n.rotateBy(m,m,t.deg2rad(i/2),y);const D=e=>Math.ceil(Math.abs(e)/s.arcAnglePerSegment)+1,C=t.deg2rad(i),M=o.copy(g,y),V=D(C),_=h(-C/(V-1)),x=a.fromRotation(b,_,M),R=t.deg2rad(-l),E=D(R),S=h(R/(E-1)),O=o.copy(p,u),T=a.fromRotation(v,t.deg2rad(i)/2,y);o.transformMat4(O,O,T);const G=v,P=[],j=o.copy(w,m);for(let e=0;e<V;e++){a.fromRotation(G,S,O);for(let t=0;t<E;t++){const a=3*(t*V+e);P[a]=j[0],P[a+1]=j[1],P[a+2]=j[2],o.transformMat4(j,j,G)}o.transformMat4(O,O,x),o.transformMat4(m,m,x),o.copy(j,m)}const A=V*E;P[3*A]=0,P[3*A+1]=0,P[3*A+2]=0;const z=[];for(let e=0;e<V-1;e++)for(let t=0;t<E-1;t++){const a=6*(t*(V-1)+e);z[a]=t*V+e,z[a+1]=(t+1)*V+e,z[a+2]=t*V+e+1,z[a+3]=t*V+e+1,z[a+4]=(t+1)*V+e,z[a+5]=(t+1)*V+e+1}const B=[z];if(360!==i&&0!==l){const e=[],t=[];for(let a=0;a<E-1;a++){const r=3*a;e[r]=A,e[r+1]=(a+1)*V,e[r+2]=a*V,t[r]=A,t[r+1]=a*V+V-1,t[r+2]=(a+1)*V+V-1}B.push(e,t)}if(180!==l&&0!==i){const e=[],t=[];for(let a=0;a<V-1;a++){const r=3*a;e[r]=A,e[r+1]=a,e[r+2]=a+1,t[r]=A,t[r+1]=a+(E-1)*V+1,t[r+2]=a+(E-1)*V}B.push(e,t)}return B.map(t=>{const a=[["position",new c.Attribute(P,t,3,!0)]];return new d.Geometry(e,a)})}(r,i);l.forEach(t=>e.addGeometry(t))}}function h(e){return isNaN(e)?1:e}const f=i.create(),p=i.create(),w=i.create(),g=i.create(),b=r.create(),v=r.create();e.ViewshedShapeVisualElement=u,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});