// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../geometry/projectionUtils","../../../../../geometry/spatialReferenceEllipsoidUtils","../../../../../geometry/projection/projectVectorToVector","../../../../../geometry/support/vectorStacks","../../../support/mathUtils"],function(e,t,r,s,c,i,o,n){"use strict";class a{constructor(e=r.create(),t=r.create()){this.startRenderSpace=e,this.endRenderSpace=t,this.type="euclidean"}eval(e,r,s){return t.lerp(r,this.startRenderSpace,this.endRenderSpace,e),s&&(t.subtract(s,this.endRenderSpace,this.startRenderSpace),t.normalize(s,s)),r}createRenderGeometry(e,r){const s=[],c=[],i=(r,i)=>{const o=h;t.subtract(o,r,e),s.push([o[0],o[1],o[2]]),c.push([i[0],i[1],i[2]])},n=r.worldUpAtPosition(this.eval(.5,p),o.sv3d.get());return i(this.startRenderSpace,n),i(this.endRenderSpace,n),{points:s,normals:c}}static fromPositionAndVector(e,s,c=1){return t.scale(p,s,c),t.add(p,e,p),new a(r.clone(e),r.clone(p))}}const p=r.create(),h=r.create(),d=r.create();e.EuclideanSegment=a,e.GeodesicSegment=class{_projectIn(e,r){this._project?i.projectVectorToVector(e,this.renderSpatialReference,r,this._pcpf):t.copy(r,e)}constructor(e,t,i){this.startRenderSpace=e,this.endRenderSpace=t,this.renderSpatialReference=i,this.type="geodesic",this._start=r.create(),this._end=r.create(),this._pcpf=c.getSphericalPCPF(i),this._project=s.canProjectWithoutEngine(i,this._pcpf),this._projectIn(e,this._start),this._projectIn(t,this._end)}eval(e,r,s){if(this._project)if(s){const c=h;n.slerpTangent(this._start,this._end,e,r,c),t.add(d,r,c),i.projectVectorToVector(r,this._pcpf,r,this.renderSpatialReference),i.projectVectorToVector(d,this._pcpf,d,this.renderSpatialReference),t.subtract(s,d,r),t.normalize(s,s)}else n.slerp(this._start,this._end,e,r),i.projectVectorToVector(r,this._pcpf,r,this.renderSpatialReference);else t.lerp(r,this._start,this._end,e),s&&(t.subtract(s,this._end,this._start),t.normalize(s,s));return r}createRenderGeometry(e,r){const s=[],c=[],i=(r,i)=>{const o=d;t.subtract(o,r,e),s.push([o[0],o[1],o[2]]),c.push([i[0],i[1],i[2]])};for(let e=0;e<128;++e){const t=e/127,s=p,c=h;this.eval(t,s),r.worldUpAtPosition(s,c),i(s,c)}return{points:s,normals:c}}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});