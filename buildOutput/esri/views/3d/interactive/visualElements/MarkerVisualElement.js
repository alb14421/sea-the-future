// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../core/libs/gl-matrix-2/factories/vec4f32","./Object3DVisualElement","../../support/engineContent/line","../../webgl-engine/materials/LineMarkerMaterial"],function(e,t,r,i,a,s,l){"use strict";class m extends a.Object3DVisualElement{constructor(e,t){super(e),this._hasExternalMaterial=!1,this._renderOccluded=4,this._width=1,this._color=i.fromValues(1,0,1,1),this._placement="end",this._markerPrimitive="arrow",this._material=t,this._hasExternalMaterial=null!=t,this.applyProperties(e)}setGeometryFromSegment(e,r){const i=e.endRenderSpace;this.transform=t.fromTranslation(o,i),this._normal=r;const{points:a}=e.createRenderGeometry(i,this.view.renderCoordsHelper);this.geometry=[a]}get renderOccluded(){return this._material?.parameters.renderOccluded??this._renderOccluded}set renderOccluded(e){this._renderOccluded=e,this._material?.setParameters({renderOccluded:e})}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get normal(){return this._normal}set normal(e){this._normal=e,this.recreateGeometry()}get width(){return this._material?.parameters.width??this._width}set width(e){this._width=e,this._material?.setParameters({width:e})}get color(){return this._material?.parameters.color??this._color}set color(e){this._color=i.clone(e),this._material?.setParameters({color:this._color})}get placement(){return this._material?.parameters.placement??this._placement}set placement(e){this._placement=e,this._material?.setParameters({placement:this._placement})}get markerPrimitive(){return this._material?.parameters.markerPrimitive??this._markerPrimitive}set markerPrimitive(e){this._markerPrimitive=e,this._material?.setParameters({markerPrimitive:e})}createExternalResources(){this._hasExternalMaterial||(this._material=new l.LineMarkerMaterial({width:this._width,color:this._color,placement:this._placement,renderOccluded:this._renderOccluded,markerPrimitive:this._markerPrimitive,isDecoration:this.isDecoration}))}destroyExternalResources(){this._hasExternalMaterial||(this._material=null)}createGeometries(e){for(const t of s.lineStripsToParameters(this.geometry,this.normal)){const r=s.createGeometry(this._material,t);e.addGeometry(r)}}forEachMaterial(e){this._hasExternalMaterial||e(this._material)}}const o=r.create();e.MarkerVisualElement=m,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});