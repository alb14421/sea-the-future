// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/has","../../../../../core/maybe","../../../../../core/memoize","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/Logger","../../../../../core/RandomLCG","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/support/UpdatingHandles","../../../../../geometry/Point","../../../../../layers/graphics/hydratedFeatures","../../../analysis/support/measurementUtils","../../SnappingVisualizer3D","../../editingTools/dragEventPipeline3D","./DirectLineMeasurement3DView","../../../support/ElevationProvider","../../../../interactive/AnalysisToolBase","../../../../interactive/coordinateHelper","../../../../interactive/dragEventPipeline","../../../../interactive/editGeometry/EditGeometry","../../../../interactive/editGeometry/EditGeometryOperations","../../../../interactive/snapping/SnappingContext","../../../../interactive/snapping/SnappingDragPipelineStep","../../../../interactive/snapping/SnappingManagerPool","../../../../interactive/snapping/snappingUtils","../../../../support/screenUtils"],function(t,e,i,n,a,r,s,o,l,u,p,c,d,h,g,m,v,y,P,_,f,w,S,M,D,b,L,x){"use strict";function E(t,e,i){return t.events.emit("drag",{action:"start",pointerType:e,start:i,screenPoint:i}),{update:e=>t.events.emit("drag",{action:"update",start:e,screenPoint:e}),end:e=>t.events.emit("drag",{action:"end",start:e,screenPoint:e}),cancel:()=>t.events.emit("drag",{action:"cancel"})}}return t.default=class extends P.AnalysisToolBase{constructor(t){super(t),this._updatingHandles=new p.UpdatingHandles,this._emulatedDrag=null,this.lineState="initial",this.removeIncompleteOnCancel=!1,this.startPointSurfaceLocation=null,this.endPointSurfaceLocation=null,this.cursorPointSurfaceLocation=null,this.startManipulator=null,this.endManipulator=null,this.cursorManipulator=null,this._getSnappingContext=a.memoize(t=>new M.SnappingContext({elevationInfo:{mode:"absolute-height",offset:0},pointer:t,editGeometryOperations:new S.EditGeometryOperations(new w.EditGeometry("point",_.createCoordinateHelper(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new g.SnappingVisualizer3D}))}initialize(){const{view:t,analysis:e,analysisViewData:i,visible:n}=this;this.measurementView=new v.DirectLineMeasurement3DView({toolState:this,view:t,analysis:e,analysisViewData:i,visible:n});const a=b.acquire(t);this._snappingManagerResult=a,this.addHandles(a);const{start:s,end:o,cursor:l}=this.measurementView.createManipulators(),u=(t,e,i)=>{const n=f.createManipulatorDragEventPipeline(t,(t,n,a,r)=>{const s=m.hideManipulatorWhileDragging(t),o=this._snappingManager,l=this._getSnappingContext(r),u=this._updatingHandles,{lineState:p}=this;a=a.next(s).next(f.resetProperties(this,[i,e])).next(i=>{if("cursorPoint"!==e){const i=this.analysis[e];null!=i&&(t.location=i)}return i});const h=m.screenToMap3D(this.view);let g=n.next(s).next(t=>{const n=h(t);return n||"drawing"!==this.lineState&&"initial"!==this.lineState||(this[e]=null,this[i]=null),n});if("touch"!==r||"editing"===p){const{snappingStep:t,cancelSnapping:e}=D.createSnapDragEventPipelineStep({snappingManager:o,snappingContext:l,updatingHandles:u});a=a.next(e),g=g.next(...t)}g.next(t=>"start"!==t.action?t:null).next(n=>{const a=d.clonePoint(n.mapEnd,new c);this[e]=a,t.location=a,this[i]=this._surfaceLocation(a,n.surfaceType)})});return"cursorPoint"===e?[n]:[n,t.events.on("grab-changed",()=>{const t=s.grabbing||o.grabbing;this.lineState=t?"editing":"measured"}),r.watch(()=>this.analysis[e],e=>{e&&(t.location=e)})]};this.startManipulator=s,this.endManipulator=o,this.cursorManipulator=l,this.manipulators.add(s),this.manipulators.add(o),this.manipulators.add(l),this.addHandles([...u(s,"startPoint","startPointSurfaceLocation"),...u(o,"endPoint","endPointSurfaceLocation"),...u(l,"cursorPoint","cursorPointSurfaceLocation"),r.when(()=>"measured"===this.state,()=>{this.finishToolCreation(),this.active&&(this.view.activeTool=null)},r.syncAndInitial),r.watch(()=>({startPointAvailable:null!=this.startPoint,endPointAvailable:null!=this.endPoint}),({startPointAvailable:t,endPointAvailable:e})=>{this.startManipulator.available=t,this.endManipulator.available=e},r.syncAndInitial)]),L.setupSnappingToggleHandles(this)}destroy(){this._updatingHandles=n.destroyMaybe(this._updatingHandles),this.measurementView=n.destroyMaybe(this.measurementView)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){const{analysis:t}=this;if(null==t.startPoint&&null==t.endPoint)return"ready";const{lineState:e}=this;return this.validMeasurement&&"editing"!==e&&"drawing"!==e?"measured":"measuring"}get cursor(){return!this.active||"ready"!==this.state&&"measured"===this.lineState?null:"crosshair"}get startPoint(){return this.analysis.startPoint}set startPoint(t){this.analysis.startPoint=t}get endPoint(){return this.analysis.endPoint}set endPoint(t){this.analysis.endPoint=t}get cursorPoint(){return this.measurementView.cursorPoint}set cursorPoint(t){this.measurementView.cursorPoint=t}get snappingOptions(){return this._snappingManager.options}get validMeasurement(){return null!=this.analysis.startPoint&&null!=this.analysis.endPoint}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}resetCreated(){super.resetCreated(),this.lineState="initial",this.cursorPoint=null,"measured"===this.state&&this.finishToolCreation()}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onDeactivate(){this._emulatedDrag?.cancel(),this._emulatedDrag=null}onInputEvent(t){switch(t.type){case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t)}}_handlePointerMove(t){if(!this.active||this.view.navigating)return;const{pointerType:e}=t;if("mouse"!==e)return;const i=x.createScreenPointFromEvent(t),{lineState:n,cursorManipulator:a,endManipulator:r}=this;let s=!1;null==this.cursorPoint&&(this._emulatedDrag?.cancel(),this._emulatedDrag=E(a,e,i),s=!0),"initial"===n&&(this._emulatedDrag?.update(i),s=!0),"drawing"===n&&(r.events.emit("drag",{action:"update",start:i,screenPoint:i}),s=!0),s&&t.stopPropagation()}_handleImmediateClick(t){if(!this.active||!h.isPrimaryPointerAction(t))return;const e=x.createScreenPointFromEvent(t),{pointerType:i}=t,{cursorManipulator:n,startManipulator:a,endManipulator:r,lineState:s}=this;let o=!1;switch(null==this.cursorPoint&&(this._emulatedDrag?.cancel(),this._emulatedDrag=E(n,i,e)),s){case"initial":if(this._emulatedDrag?.update(e),null!=this.cursorPoint){this._emulatedDrag?.end(e),this._emulatedDrag=null,this.endPoint=null;const{cursorPoint:t}=this;this.startPoint=t,this.startPointSurfaceLocation=this.cursorPointSurfaceLocation,a.location=t,a.interactive=!1,r.interactive=!1,this.lineState="drawing",this._emulatedDrag=E(r,i,e),o=!0}break;case"drawing":this._emulatedDrag?.update(e),null!=this.endPoint&&(this._emulatedDrag?.end(e),this._emulatedDrag=null,a.interactive=!0,r.interactive=!0,this.lineState="measured",o=!0)}o&&t.stopPropagation()}_surfaceLocation(t,e){return 0===e?"on-the-surface":(t.z??0)>=this._getElevation(t)?"above-the-surface":"below-the-surface"}_getElevation(t){return this.view.basemapTerrain.ready?y.getElevationAtPoint(this.view.elevationProvider,t)??0:0}get test(){}},e.__decorate([s.property({readOnly:!0})],t.default.prototype,"state",null),e.__decorate([s.property()],t.default.prototype,"lineState",void 0),e.__decorate([s.property({readOnly:!0})],t.default.prototype,"cursor",null),e.__decorate([s.property()],t.default.prototype,"startPoint",null),e.__decorate([s.property()],t.default.prototype,"endPoint",null),e.__decorate([s.property()],t.default.prototype,"cursorPoint",null),e.__decorate([s.property({constructOnly:!0})],t.default.prototype,"analysis",void 0),e.__decorate([s.property({constructOnly:!0})],t.default.prototype,"analysisViewData",void 0),e.__decorate([s.property()],t.default.prototype,"measurementView",void 0),e.__decorate([s.property()],t.default.prototype,"removeIncompleteOnCancel",void 0),e.__decorate([s.property({constructOnly:!0})],t.default.prototype,"view",void 0),e.__decorate([s.property({readOnly:!0})],t.default.prototype,"validMeasurement",null),e.__decorate([s.property({value:null})],t.default.prototype,"startPointSurfaceLocation",void 0),e.__decorate([s.property({value:null})],t.default.prototype,"endPointSurfaceLocation",void 0),e.__decorate([s.property({value:null})],t.default.prototype,"cursorPointSurfaceLocation",void 0),e.__decorate([s.property()],t.default.prototype,"updating",null),t.default=e.__decorate([u.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],t.default),t.default});