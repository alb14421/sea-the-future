// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../../../Color","../../../../../core/colorUtils","../../../../../core/Handles","../../../../../core/has","../../../../../core/maybe","../../../../../core/reactiveUtils","../../../../../core/screenUtils","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../geometry/Point","../../Manipulator3D","../../manipulatorUtils","../../RenderObject","../support/PickRequest","../../visualElements/LaserlineVisualElement","../../../webgl-engine/lib/GeometryUtil","../../../../interactive/ManipulatorCollection","../../../../interactive/ToolIntersector"],function(t,e,i,s,a,r,n,l,o,h,u,c,_,d,p,w,y){"use strict";return class{constructor(t){this.vertexManipulators=[],this._destroyed=!1,this._isManipulatorsOwner=!0,this._visible=!0,this._listenerHandles=null,this._tempHandlePosition=l.create();const{analysisViewData:e,manipulators:i,toolState:s,view:a,visible:r}=t;this._analysisViewData=e,this._toolState=s,null!=i?(this._manipulators=i,this._isManipulatorsOwner=!1):this._manipulators=new w.ManipulatorCollection,this._view=a,this._intersector=y.newToolIntersector(a.state.viewingMode);const n=u.createManipulatorMaterial(this._handleColor),o=[new c.RenderObject(p.createSphereGeometry(n,1,32,32))],_=new h.Manipulator3D({view:a,renderObjects:o});_.available=!1,_.radius=5,_.interactive=!1,this._manipulators.add(_),this._cursorManipulator=_,this._cursorManipulatorMaterial=n,this._laserLine=new d.LaserlineVisualElement({view:a,attached:!0,style:{glowWidth:8,glowFalloff:8,innerWidth:1},isDecoration:!0}),this._updateVisibility(r??!0)}destroy(){this._listenerHandles=a.destroyMaybe(this._listenerHandles),this._isManipulatorsOwner?this._manipulators=a.destroyMaybe(this._manipulators):this._manipulators=null,this._laserLine=a.destroyMaybe(this._laserLine),this._destroyed=!0}get destroyed(){return this._destroyed}get visible(){return this._visible}set visible(t){t?this.show():this.hide()}get testData(){}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(t){this._destroyed||this._visible===t||this._updateVisibility(t)}_updateVisibility(t){this._visible=t,this._laserLine.visible=t,t?(this._initializeListeners(),this._updateAll()):(this._destroyListeners(),this.vertexManipulators.forEach(({manipulator:t})=>this._removeVertexManipulator(t)),this.vertexManipulators=[])}vertexHandleAt(t,e){const i=this._manipulators.intersect(t,e);return i?.metadata}pick(t){const e=this._view.spatialReference,i=n.screenPointObjectToArray(t.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(i,this._intersector);const s=this._intersector.results.min,a=l.create();if(!s.getIntersectionPoint(a))return null;const r=this._view.renderCoordsHelper.fromRenderCoords(a,new o({spatialReference:e}));return null==r?null:new _.PickResult(a,r)}_updateAll(){this._visible&&(this._updateVertexManipulators(),this._updateLaserLine())}_createVertexManipulator(){const t=u.createManipulatorMaterial(this._handleColor),e=[new c.RenderObject(p.createSphereGeometry(t,1,32,32))],i=new h.Manipulator3D({view:this._view,renderObjects:e});return i.radius=5,this._manipulators.add(i),{manipulator:i,material:t}}_removeVertexManipulator(t){this._manipulators.remove(t)}_updateVertexManipulators(){const{viewData:t}=this._analysisViewData,e=this._analysisViewData.path?this._analysisViewData.path.vertices:[],i=this.vertexManipulators;!function(t,e,i,s){for(;t.length<e;)t.push(i());if(s)for(;t.length>e;)s(t.pop());else t.length=e}(i,e.length,()=>this._createVertexManipulator(),({manipulator:t})=>this._removeVertexManipulator(t)),i.forEach(({manipulator:i},s)=>{i.metadata=e[s],i.renderLocation=t.positionsRender[s],i.cursor=0===s&&"drawing"===this._toolState.polygonState?"crosshair":null}),"drawing"===this._toolState.polygonState&&null!=this._analysisViewData.stagedPoint?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._analysisViewData.stagedPoint):this._cursorManipulator.available=!1}get _handleColor(){return e.multiplyOpacityToUnitRGBA(this._view.effectiveTheme.accentColor,.5)}_getFocusPoint(){const{lastDraggedVertex:t}=this._analysisViewData;switch(this._toolState.polygonState){case"drawing":return null!=this._analysisViewData.stagedPoint?this._analysisViewData.stagedPoint:null!=t?this._analysisViewData.path.getVertexPositionAsPoint(t):this._analysisViewData.path.lastPoint;case"editing":return null!=t?this._analysisViewData.path.getVertexPositionAsPoint(t):null;default:return this._analysisViewData.stagedPoint}}_updateLaserLine(){const t="measured"!==this._toolState.polygonState&&this._toolState.active,e=this._getFocusPoint();if(t&&null!=e){const t=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(e,t),this._laserLine.heightManifoldTarget=t}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new i,this._listenerHandles.add([r.watch(()=>this._toolState.polygonState,()=>this._updateLaserLine()),r.watch(()=>this._analysisViewData.viewData,()=>this._updateAll(),r.sync),r.watch(()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.stagedPoint}),()=>this._updateLaserLine()),r.watch(()=>this._toolState.active,()=>this._updateAll()),r.watch(()=>this._view.effectiveTheme.accentColor,i=>{const s=e.multiplyOpacityToUnitRGBA(i,.5);for(const{material:t}of this.vertexManipulators)t.setParameters({color:s});this._cursorManipulatorMaterial.setParameters({color:s});const a=t.toUnitRGB(i),r=t.toUnitRGB(e.getContrast(i)),n=.75*i.a,l=this._laserLine,o=l.style;l.style={...o,glowColor:a,innerColor:r,globalAlpha:n}},{initial:!0,equals:e.colorEquals})])}_destroyListeners(){this._listenerHandles=a.destroyMaybe(this._listenerHandles)}}});