// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Logger","../../../core/object","../../../core/libs/gl-matrix-2/factories/mat4f64","./LoaderResult","./internal/Resource","../../webgl/enums"],function(e,t,o,r,s,a,i){"use strict";let n=0;function l(e){const t=e.json;let o=null;return t.nodes.forEach(e=>{const t=e.extras;null!=t&&(t.ESRI_proxyEllipsoid||t.ESRI_lod)&&(o=t)}),o}function u(e){return e.extensions?.MSFT_lod&&Array.isArray(e.extensions.MSFT_lod.ids)}function c(e,t,o){const r=t=>{const r=`${o}_tex_${t&&t.id}${t?.name?"_"+t.name:""}`;if(t&&!e.textures.has(r)){const o=s.makeTextureSource(t.data,{wrap:{s:t.wrapS,t:t.wrapT},mipmap:m.has(t.minFilter),noUnpackFlip:!0});e.textures.set(r,o)}return r},a=`${o}_mat_${t.id}_${t.name}`;if(!e.materials.has(a)){const o=s.makeMaterialParameters({color:[t.color[0],t.color[1],t.color[2]],opacity:t.color[3],alphaMode:t.alphaMode,alphaCutoff:t.alphaCutoff,doubleSided:t.doubleSided,colorMixMode:t.ESRI_externalColorMixMode,colorTexture:t.colorTexture?r(t.colorTexture):void 0,normalTexture:t.normalTexture?r(t.normalTexture):void 0,occlusionTexture:t.occlusionTexture?r(t.occlusionTexture):void 0,emissiveTexture:t.emissiveTexture?r(t.emissiveTexture):void 0,metallicRoughnessTexture:t.metallicRoughnessTexture?r(t.metallicRoughnessTexture):void 0,emissiveFactor:[t.emissiveFactor[0],t.emissiveFactor[1],t.emissiveFactor[2]],colorTextureTransform:t.colorTextureTransform,normalTextureTransform:t.normalTextureTransform,occlusionTextureTransform:t.occlusionTextureTransform,emissiveTextureTransform:t.emissiveTextureTransform,metallicRoughnessTextureTransform:t.metallicRoughnessTextureTransform,metallicFactor:t.metallicFactor,roughnessFactor:t.roughnessFactor,receiveShadows:t.receiveShadows,receiveAmbientOcclusion:t.receiveAmbientOcclusion});e.materials.set(a,o)}return a}const m=new Set([9987,9985]);e.loadGLTF=async function(e,s,m={},d=!0){const T=await a.GLTFResource.load(e,s,m),p="gltf_"+n++,x={lods:[],materials:new Map,textures:new Map,meta:l(T)},f=!(!T.json.asset.extras||"symbolResource"!==T.json.asset.extras.ESRI_type),g=T.json.asset.extras?.ESRI_webstyleSymbol?.webstyle,h=new Map;await async function(e,o){const r=e.json,s=r.scenes[r.scene||0].nodes,a=s.length>1,i=[];for(const e of s){const t=r.nodes[e];i.push(n(e,0)),u(t)&&!a&&t.extensions.MSFT_lod.ids.forEach((e,t)=>n(e,t+1))}async function n(s,a){const l=r.nodes[s],u=e.getNodeTransform(s);if(null!=l.weights&&t.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] Morph targets are not supported."),null!=l.mesh){const e=r.meshes[l.mesh];for(const t of e.primitives)i.push(o(t,u,a,e.name))}for(const e of l.children||[])i.push(n(e,a))}await Promise.all(i)}(T,async(e,s,a,n)=>{const l=h.get(a)??0;h.set(a,l+1);const u=void 0!==e.mode?e.mode:i.PrimitiveType.TRIANGLES,f=u===i.PrimitiveType.TRIANGLES||u===i.PrimitiveType.TRIANGLE_STRIP||u===i.PrimitiveType.TRIANGLE_FAN?u:null;if(null==f)return void t.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] Unsupported primitive mode ("+o.getKey(i.PrimitiveType,u)+"). Skipping primitive.");if(!T.hasPositions(e))return void t.getLogger("esri.views.3d.glTF").warn("Skipping primitive without POSITION vertex attribute.");const g=T.getPositionData(e,m),v=T.getMaterial(e,m,d),w=T.hasNormals(e)?T.getNormalData(e,m):null,S=T.hasTangents(e)?T.getTangentData(e,m):null,y=T.hasTextureCoordinates(e)?T.getTextureCoordinates(e,m):null,R=T.hasVertexColors(e)?T.getVertexColors(e,m):null,F=T.getIndexData(e,m),_={name:n,transform:r.clone(s),attributes:{position:await g,normal:w?await w:null,texCoord0:y?await y:null,color:R?await R:null,tangent:S?await S:null},indices:await F,primitiveType:f,material:c(x,await v,p)};let M=null;null!=x.meta?.ESRI_lod&&"screenSpaceRadius"===x.meta.ESRI_lod.metric&&(M=x.meta.ESRI_lod.thresholds[a]),x.lods[a]=x.lods[a]||{parts:[],name:n,lodThreshold:M},x.lods[a].parts[l]=_});for(const e of x.lods)e.parts=e.parts.filter(e=>!!e);const v=await T.getLoadedBuffersSize();return{model:x,meta:{isEsriSymbolResource:f,uri:T.uri,ESRI_webstyle:g},customMeta:{},cachedMemory:v}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});