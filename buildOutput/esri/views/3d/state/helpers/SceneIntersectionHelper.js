// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/has","../../../../core/PooledArray","../../../../core/screenUtils","../../../../core/unitUtils","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/ray","../../../../geometry/support/vectorStacks","../../../../support/elevationInfoUtils","../../support/hitTest","../../support/geometryUtils/ray","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/IntersectorResult","../../webgl-engine/lib/intersectorUtils","../../webgl-engine/materials/HUDMaterial"],function(e,t,n,r,i,s,o,l,a,c,u,d,h,p,y,g,f){"use strict";const m=(()=>{const e=[];for(let t=-1;t<=1;t++)for(let n=-1;n<=1;n++)e.push([n+1,t+1]);return e})();class _{constructor(e){this.result=e,this.screenPoint=r.createRenderScreenPointArray3()}}let v;function R(e){return v&&v.viewingMode===e||(v=new p.Intersector(e)),v}class w{constructor(e,t){this.layers=new Array,this.sliceableLayers=new Array,this.include=e?.include,this.exclude=e?.exclude,t(e=>{e.pickable&&this.filterLayerViewUid(e.apiLayerViewUid)&&(e.sliceable?this.sliceableLayers:this.layers).push(e)})}filterLayerViewUid(e,t){const{include:n,exclude:r}=this;if(null==e)return null==n&&null==r;const i=n instanceof Map?n.get(e)??!1:n?.has(e),s=r instanceof Map?r.get(e)??!1:r?.has(e);return(null==i||("boolean"==typeof i?i:null!=t&&i.has(t)))&&(null==s||!("boolean"==typeof s?s:null!=t&&s.has(t)))}filterRenderGeometry(e){return this.filterLayerViewUid(e.layerViewUid)}}const b=o.create(),P=o.create(),I=r.createRenderScreenPointArray3();e.SceneIntersectionHelper=class{constructor(e,t,r){this.viewingMode=e,this._forEachLayer=t,this._view=r,this._externalIntersectionHandlers=new n,this._tolerance=p.defaultTolerance,this._tmpRay=a.create(),this._tmpRegion=l.create(),this._validateHUDIntersector=new p.Intersector(this.viewingMode),this._validateHUDIntersector.options.hud=!1}destroy(){this._externalIntersectionHandlers.prune()}intersectScreen(e,t,n){return this.intersectRay(this._getPickRay(e,this._tmpRay),R(this.viewingMode),t,n)}intersectScreenFreePointFallback(e,t,n){return this.intersectRayFreePointFallback(this._getPickRay(e,this._tmpRay),t,n)}intersectRayFreePointFallback(e,t,n){return this.intersectRay(e,R(this.viewingMode),t,n)||this._intersectRayFreePointLocal(e,t)}intersectRay(e,t,n,r){return t.options.selectionMode=!1,t.options.store=0,this.computeIntersection(e,t,!1,r),!!t.results.min&&t.results.min.getIntersectionPoint(n)}getCenterRayWithSubpixelOffset(e,t,n=.5,r=.5){return e.getRenderCenter(I,n,r),I[0]+=.0466,I[1]-=.0123,h.fromRenderAtEye(e,I,t)}intersectIntersectorScreen(e,t,n){this.computeIntersection(this._getPickRay(e,this._tmpRay),t,!1,n)}intersectToolIntersectorScreen(e,t,n){const r=this._getPickRay(e,this._tmpRay);this.intersectToolIntersectorRay(r,t,n)}intersectToolIntersectorRay(e,t,n){t.options.selectionMode=!0,this.computeIntersection(e,t,!1,n);const r=t.results.min;this._view.basemapTerrain&&this._view.basemapTerrain.opaque||y.isValidIntersectorResult(r)&&2!==r.intersector||(t.options.selectionMode=!1,this.computeIntersection(e,t,!1,n))}setTolerance(e=p.defaultTolerance){this._tolerance=e}addIntersectionHandler(e){this._externalIntersectionHandlers.push(e),this._externalIntersectionHandlers.sort((e,t)=>2===e.type?1:2===t.type?-1:0)}removeIntersectionHandler(e){null!=this._externalIntersectionHandlers.removeUnordered(e)&&this._externalIntersectionHandlers.sort((e,t)=>2===e.type?1:2===t.type?-1:0)}_getPickRay(e,t){const n=this._view.state.camera;return h.fromScreen(n,e,t)}_intersectRayFreePointLocal(e,t){return 2!==this.viewingMode||null==e||s.add(t,e.origin,s.normalize(c.sv3d.get(),e.direction)),!1}intersectElevationFromScreen(e,t,n=0,r=null){return this._intersectElevation(this._getPickRay(e,this._tmpRay),t,n,r)}_intersectElevation(e,t,n=0,o=null){if(null==e)return null;const l=this._view,{renderCoordsHelper:a}=l,h=i.getMetersPerVerticalUnitForSR(l.spatialReference),y=null!=t?t.mode:"absolute-height",f=u.getElevationOffsetInMeters(t)/h,m=("on-the-ground"!==y?f+n:0)*h/a.unitInMeters,{camera:_}=l.state;if("absolute-height"===y){const t=a?.getAltitude(_.eye),n=s.dot(s.normalize(b,e.direction),a.worldUpAtPosition(_.eye,P));if(t<m&&n<0||t>=m&&n>0)return null;if(a.intersectInfiniteManifold(e,m,b)){const e=d.computeMapPointFromVec3d(l,b);return e.z??=0,e.z-=f,e}return null}const v=r.castRenderScreenPointArray3(c.sv3d.get());_.projectToRenderScreen(e.origin,v);const R=new w(null,this._forEachLayer),{slice:{plane:I}}=l,M=null!=I?g.sliceFilterPredicate(I):null,U=new p.Intersector(this.viewingMode);U.options.store=0,U.options.verticalOffset=m,U.options.normalRequired=!1;const x=e.origin,H=s.add(c.sv3d.get(),x,e.direction);U.reset(x,H,_),U.point=v;let S=null;if(o&&"type"in o&&"graphics"===o.type){const e=l.allLayerViews.find(e=>e.layer===o)?.uid;S=e?t=>t.layerViewUid===e:null}else o&&(S=e=>e.graphicUid!==o.uid);switch(y){case"relative-to-scene":{const e=e=>(!S||S(e))&&!!e.lastValidElevationBB;U.intersect(R.layers,v,this._tolerance,null,e),this._externalIntersectionHandlers.forAll(e=>{if(4===e.type||2===e.type||8===e.type){const t=e.slicePlaneEnabled?M:null;e.intersect(U,t,U.rayBegin,U.rayEnd,v,!1)}});break}case"on-the-ground":case"relative-to-ground":this._externalIntersectionHandlers.forAll(e=>{if(e.isGround){const t=e.slicePlaneEnabled?M:null;e.intersect(U,t,U.rayBegin,U.rayEnd,v,!1)}})}if(U.results.min.getIntersectionPoint(b)){const e=d.computeMapPointFromVec3d(l,b);return e.z=n,e}return null}computeIntersection(e,t,n,i){if(null==e)return;const o=this._view.state.camera,l=r.castRenderScreenPointArray3(c.sv3d.get());o.projectToRenderScreen(e.origin,l);const a=new w(i,this._forEachLayer);t.options.selectOpaqueTerrainOnly=!i||!("include"in i||"exclude"in i);const u=e.origin,d=s.add(c.sv3d.get(),e.origin,e.direction);t.reset(u,d,o),t.intersect(a.layers,l,this._tolerance);const h=this._view.slice.plane,p=null!=h?g.sliceFilterPredicate(h):null;t.intersect(a.sliceableLayers,l,this._tolerance,p);const y=i&&(i.requiresGroundFeedback||i.enableDraped);this._externalIntersectionHandlers.forAll(e=>{const r=e.layerViewUid,i=e.sublayerId,s=Array.isArray(r),o=s?r:[r];s&&(t.options.filteredLayerViewUids=[]);let c=!1;for(const e of o)a.filterLayerViewUid(e,i)?c=!0:s&&t.options.filteredLayerViewUids.push(e);if(t.options.isFiltered=!c,e.isGround&&y||!t.options.isFiltered){const r=e.slicePlaneEnabled?p:null;e.intersect(t,r,u,d,l,n)}});const f=c.sv3d.get(),m=this._view.basemapTerrain;if(i&&i.enableDraped&&null!=m.spatialReference&&t.results.ground.getIntersectionPoint(f)){const e=m.overlayManager.renderer,n=this._view.renderCoordsHelper.spatialReference,r=c.sv3d.get();this._view.renderCoordsHelper.fromRenderCoords(f,r,m.spatialReference),r[2]=this._view.elevationProvider?.getElevation(f[0],f[1],f[2],n,"ground")??0,e.intersect(t,r,t.results.ground,e=>a.filterRenderGeometry(e))}t.sortResults(),this._processHUDResults(t)}_processHUDResults(e){const t=e.results.hud;l.copy(this._tmpRegion,l.negativeInfinity);const n=this._view.state.camera,r=[],i=this._tmpRegion,s=e=>{const t=new _(e),s=t.result.target.object.geometries.every(e=>e.material instanceof f.HUDMaterial&&e.material.parameters.occlusionTest);r.push({item:t,occlusionTest:s}),s&&(n.projectToRenderScreen(e.target.center,t.screenPoint),t.screenPoint[0]=Math.floor(t.screenPoint[0]),t.screenPoint[1]=Math.floor(t.screenPoint[1]),l.expandPointInPlace(i,t.screenPoint))};e.sortResults(t.all),null!=t.min.distance&&s(t.min);for(const e of t.all)t.min.target.object!==e.target.object&&t.max.target.object!==e.target.object&&s(e);if(null!=t.max.distance&&t.max.target.object!==t.min.target.object&&s(t.max),!r.length)return;i[0]===i[2]&&(i[2]+=1),i[1]===i[3]&&(i[3]+=1);const o=n.fullWidth,a=n.fullHeight,c=Math.max(0,i[0]-1),u=Math.max(0,i[1]-1),d=Math.min(l.width(i)+2,o-c),h=Math.min(l.height(i)+2,a-u),p=d>0&&h>0?new Uint8Array(d*h*4):null;p&&this._view.stage.renderer.readHUDVisibility(c,u,d,h,p);let y=!0;const g=null==e.results.max.distance;let v=0;for(const{item:t,occlusionTest:n}of r){let r=!n;if(n&&p)for(const e of m){const n=4*(Math.min(t.screenPoint[0]+e[0],o)-i[0]+(Math.min(t.screenPoint[1]+e[1],a)-i[1])*d);if(n>=0&&n<p.length&&p[n]){r=!0;break}}r&&(y&&(e.results.min.copy(t.result),y=!1),g&&e.results.max.copy(t.result),2===e.options.store&&e.results.all.splice(v++,0,t.result))}}},e.isIntersectionHandler=function(e){return"object"==typeof e&&"intersect"in e},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});