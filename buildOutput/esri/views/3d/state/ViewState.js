// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Accessor","../../../core/Evented","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/accessorSupport/watch","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../geometry/ellipsoidUtils","../../ViewAnimation","../../ViewingMode","./Constraints","./controllers/AnimationController","../webgl/RenderCamera","../webgl-engine/lib/DepthRange","../../support/HighlightDefaults","../../support/PropertiesPool"],function(e,t,r,o,a,i,n,s,l,p,c,h,d,m,u,_,g,y,C,w){"use strict";let v=class extends t{constructor(e){super(e),this._propertiesPool=new w.PropertiesPool({camera:g},this),this._lastSeenCameraProjectionValues=new g,this.mode=0,this._cssCamera=new g,this._camera=new g,this.rasterPixelRatio=1,this.contentPixelRatio=1,this.constraints=new u.Constraints({state:this}),this.events=new r.EventEmitter,this._cameraChanged=!1,this._updateQueue=new Array,this._processingUpdates=!1}reset(){this.cameraController=null,this._propertiesPool.destroy(),this._propertiesPool=new w.PropertiesPool({camera:g},this)}destroy(){this.cameraController=null,this._propertiesPool?.destroy(),this._propertiesPool=null}createInitialCamera(){if(1===this.viewingMode){const e=h.getReferenceEllipsoid(this.spatialReference).radius;this.camera=new g({eye:c.fromValues(4*e,0,0),center:c.fromValues(e,0,0),up:c.fromValues(0,0,1)})}else this.camera=new g({eye:c.fromValues(0,0,100),center:c.fromValues(0,0,0),up:c.fromValues(0,1,0)})}get animation(){return this.cameraController instanceof _.AnimationController&&null!=this.cameraController.viewAnimation?this.cameraController.viewAnimation:null}get cssCamera(){const e=this._cssCamera.copyFrom(this.camera),{height:t,width:r,pixelRatio:o}=this.camera;return e.pixelRatio=1,e.height=Math.round(t/o),e.width=Math.round(r/o),e}get camera(){return this._camera}set camera(e){e!==P&&P.copyFrom(e),P.computeUp(this.viewingMode),this.events.emit("before-camera-change",{camera:P});const t=this._camera;if(r=this._lastSeenCameraProjectionValues,o=P,(r.fov!==o.fov||r.fullViewport[0]!==o.fullViewport[0]||r.fullViewport[1]!==o.fullViewport[1]||r.fullViewport[2]!==o.fullViewport[2]||r.fullViewport[3]!==o.fullViewport[3]||r.padding[0]!==o.padding[0]||r.padding[1]!==o.padding[1]||r.padding[2]!==o.padding[2]||r.padding[3]!==o.padding[3])&&(this._lastSeenCameraProjectionValues.copyFrom(P),this.events.emit("camera-projection-changed",this._lastSeenCameraProjectionValues)),!t.equals(P)&&(this._camera=this._propertiesPool.get("camera").copyFrom(P),this._cameraChanged=!t.almostEquals(P),this._cameraChanged)){const e=p.afterDispatch(()=>{this._cameraChanged=!1,e.remove()})}var r,o}get pixelRatio(){return this.camera.pixelRatio}get alignPixelEnabled(){return this.pixelRatio===this.rasterPixelRatio&&2===this.mode}get updating(){return 2!==this.mode}get contentCamera(){return this._contentCamera??this.camera}set contentCamera(e){if(null==e)return void(this._contentCamera=null);const t=e.clone();this.events.emit("before-camera-change",{camera:t,sceneDepthRange:y.DepthRange.infinite}),this._contentCamera=t}get fixedContentCamera(){return null!=this._contentCamera}get isGlobal(){return 1===this.viewingMode}get isLocal(){return 2===this.viewingMode}get viewingMode(){return m.viewingModeFromString(this.view.viewingMode)}get spatialReference(){return this.view.spatialReference}get highlights(){const e=this.view.highlights.items.slice(0,C.maximumHighlights);for(let t=0;t<e.length;){const r=e[t],o=e.findIndex(e=>e.name===r.name);o>=0&&t>o?e.splice(t,1):++t}return e}get highlightOrderMap(){const e=new Map;return this.highlights.forEach((t,r)=>e.set(t.name,r)),e}get navigating(){return!!this.cameraController?.isInteractive}get stationary(){return!this._cameraChanged&&!this.navigating}get cameraController(){return this._get("cameraController")}set cameraController(e){this.stopActiveCameraController()?(this.cameraController?.destroy(),e&&(this.removeHandles(V),this.addHandles(o.when(()=>4===e.state||3===e.state,()=>{this._set("cameraController",null),this.updateCamera(t=>e.onControllerEnd(t))},{sync:!0,once:!0}),V),e.onControllerStart(this.camera)),this._set("cameraController",e)):e&&(e.state=1)}switchCameraController(e){this.cameraController=e}stopActiveCameraController(){return!this.cameraController||this.cameraController.stopController()}updateCamera(e){this._updateQueue.push(e),this._processUpdateQueue()}_processUpdateQueue(){if(0===this._updateQueue.length||this._processingUpdates)return;this._processingUpdates=!0;const e=this._updateQueue.shift();P.copyFrom(this._get("camera")),e(P),this.camera=P,this._processingUpdates=!1,this._processUpdateQueue()}static cleanupViewstate(){P=new g}};e.__decorate([a.property({constructOnly:!0})],v.prototype,"view",void 0),e.__decorate([a.property()],v.prototype,"mode",void 0),e.__decorate([a.property({readOnly:!0,type:d})],v.prototype,"animation",null),e.__decorate([a.property({type:g})],v.prototype,"cssCamera",null),e.__decorate([a.property()],v.prototype,"_cssCamera",void 0),e.__decorate([a.property({type:g})],v.prototype,"camera",null),e.__decorate([a.property()],v.prototype,"_camera",void 0),e.__decorate([a.property({readOnly:!0})],v.prototype,"pixelRatio",null),e.__decorate([a.property()],v.prototype,"rasterPixelRatio",void 0),e.__decorate([a.property()],v.prototype,"contentPixelRatio",void 0),e.__decorate([a.property({readOnly:!0})],v.prototype,"alignPixelEnabled",null),e.__decorate([a.property({readOnly:!0})],v.prototype,"updating",null),e.__decorate([a.property({})],v.prototype,"_contentCamera",void 0),e.__decorate([a.property({type:g})],v.prototype,"contentCamera",null),e.__decorate([a.property({readOnly:!0})],v.prototype,"fixedContentCamera",null),e.__decorate([a.property({readOnly:!0})],v.prototype,"events",void 0),e.__decorate([a.property({readOnly:!0})],v.prototype,"isGlobal",null),e.__decorate([a.property({readOnly:!0})],v.prototype,"isLocal",null),e.__decorate([a.property({readOnly:!0})],v.prototype,"viewingMode",null),e.__decorate([a.property({readOnly:!0})],v.prototype,"highlights",null),e.__decorate([a.property({readOnly:!0})],v.prototype,"highlightOrderMap",null),e.__decorate([a.property({readOnly:!0})],v.prototype,"navigating",null),e.__decorate([a.property({readOnly:!0})],v.prototype,"stationary",null),e.__decorate([a.property()],v.prototype,"_cameraChanged",void 0),e.__decorate([a.property()],v.prototype,"cameraController",null),v=e.__decorate([l.subclass("esri.views.3d.state.ViewState")],v);const f=v;let P=new g;const V="ViewStateHandles";return f});