// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../Camera","../../../../core/mathUtils","../../../../core/maybe","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../camera/constraintUtils","../../camera/constraintUtils/ConstraintOptions","./InteractiveController","../utils/navigationUtils","../../../ui/Component","../../../../widgets/FovOverlay"],function(t,e,r,i,s,a,o,n,l,h,c,v,_,u,d,p,m,y){"use strict";t.FovController=class extends d.InteractiveController{constructor(t){super(t),this.onStop=null,this._timeOutId=void 0,this._onReset=()=>{this._startSize=this._lastDrag=null,this._setFov(w),this.updateTimeout()},this._center=v.create(),this._viewForward=v.create(),this._constraints=new u.ConstraintOptions(15,1)}begin(t){!function(t){return!Array.isArray(t)}(t)?(this._lastDrag=t[1],this._startSize=null,this._ensureStartSize(this.view.state.camera)):this._showOverlay().fov=t.fov}updateTimeout(){clearTimeout(this._timeOutId),this._timeOutId=setTimeout(this.onStop,1500)}update(t){if(null==this._lastDrag)return this._lastDrag=t[1],this._startSize=null,void this._ensureStartSize(this.view.state.camera);const e=-(this._lastDrag-t[1])/2;this._lastDrag=t[1],this.step(e)}step(t){if(!this.running)return void(this._startSize=this._lastDrag=null);const e=this.view.state,r=this.currentCamera.copyFrom(e.camera),s=i.rad2deg(r.fov)+t,a=i.deg2rad(i.clamp(s,g,S));a!==r.fov?this._setFov(a):this._showOverlay().fov=r.fov}finish(){this.running&&(this._startSize=this._lastDrag=null,this.finishController())}destroy(){this.hideOverlay()}onControllerEnd(t){super.onControllerEnd(t),this._startSize=this._lastDrag=null,this.hideOverlay()}_showOverlay(){return this._overlay||(this._overlay=new m({id:"esri.FovOverlay",node:new y.FovOverlay({onReset:this._onReset})}),this.view.ui.add(this._overlay)),this._overlay.widget}hideOverlay(){this._overlay&&(this.view.ui.remove(this._overlay),this._overlay=s.destroyMaybe(this._overlay))}_setFov(t){const e=this.view.state,r=this.currentCamera.copyFrom(e.camera),i=this._ensureStartSize(r)/Math.tan(t/2),s=c.add(f,this._center,c.scale(f,this._viewForward,-i));r.eye=s,r.fov=t,this._constraints.interactionStartCamera=e.camera,this._constraints.interactionFactor=_.pixelDistanceToInteractionFactor(this.currentCamera.height-e.camera.height),_.applyAll(this.view,this.currentCamera,this._constraints),this.begin(r),this.commitCamera()}_ensureStartSize(t){if(null==this._startSize){c.copy(this._viewForward,t.viewForward);const e=this.view.stage.renderView.getMinimalDepthForArea(null,t.fullWidth/t.pixelRatio*.5,t.fullHeight/t.pixelRatio*.5,t,p.pivotSearchAreaSize),r=c.distance(t.eye,this.view.pointsOfInterest.centerOnContent.renderLocation),i=e??r;c.add(this._center,t.eye,c.scale(f,this._viewForward,i)),this._startSize=i*Math.tan(t.fov/2)}return this._startSize}},e.__decorate([a.property()],t.FovController.prototype,"onStop",void 0),t.FovController=e.__decorate([h.subclass("esri.views.3d.state.controllers.FovController")],t.FovController);const w=i.deg2rad((new r).fov),g=10,S=150,f=v.create();Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});