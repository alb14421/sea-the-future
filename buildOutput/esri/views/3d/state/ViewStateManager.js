// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../Camera","../../../Viewpoint","../../../core/Accessor","../../../core/Logger","../../../core/maybe","../../../core/reactiveUtils","../../../core/scheduling","../../../core/screenUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../chunks/vec42","../../../core/libs/gl-matrix-2/factories/vec4f64","../../../geometry/Extent","../../../geometry/Point","../../../geometry/Polygon","../../../geometry/projectionUtils","../webgl","../camera/constraintUtils","../camera/intersectionUtils","./ConstraintsManager","./Frustum","./GoToOperation","./controllers/SurfaceCollisionCorrectionController","../support/cameraUtils","../support/viewpointUtils","../webgl/RenderCamera","../../support/PropertiesPool","../../webgl/FramebufferObject"],function(e,t,i,a,r,n,s,o,h,l,c,p,d,m,v,w,u,g,_,y,C,f,S,x,R,P,O,M,b,T,V,z,L,I){"use strict";e.ViewStateManager=class extends r{constructor(e){super(e),this.ready=!1,this._windowDevicePixelRatio=1,this._devicePixelRatioOverride=null,this._idleTimeout=N,this.test={viewStateManager:this,contentCameraResetState:new Map,setDevicePixelRatio:e=>this._devicePixelRatioOverride=e,renderState:null,get maximumPixelRatio(){return this.viewStateManager.view.qualitySettings.maximumPixelRatio},get updatingIgnoreRenderState(){return null!=this.renderState},get idleTimeoutEnabled(){return this.viewStateManager._idleTimeout>0},set idleTimeoutEnabled(e){this.viewStateManager._idleTimeout=e?N:0}},this._propertiesPool=new L.PropertiesPool({frustum:O.Frustum},this),this._cameraSetByUser=!1,this._gotoOperation=null,this._cameraChangeTime=0,this._tmpCanvasSize=new E}initialize(){this._cameraChangeTime=performance.now(),this.addHandles([o.on(()=>this.view.state.events,"before-camera-change",({camera:e})=>e&&this._updateElevation(e)),o.watch(()=>this.view.state?.camera,(e,t)=>this._cameraChangedHandler(e,t),o.sync)]),o.when(()=>this.view.state?.camera,e=>this._updateElevation(e),{once:!0,sync:!0}),this.addHandles([h.addFrameTask({prepare:()=>this._prepareFrame()}),o.watch(()=>this.view.state.cameraController,()=>{this._cameraSetByUser=!0,this.removeHandles(U)}),o.on(()=>this.view.state.events,"camera-projection-changed",()=>this.notifyChange("scale"))])}destroy(){this.exit(),this._propertiesPool=s.destroyMaybe(this._propertiesPool)}get camera(){const e=this._get("camera");if(!this.ready)return e;const t=S.fromRenderCamera(this.view,this.view.state.camera,B);return t&&e&&t.equals(e)?e:t.clone()}set camera(e){this._updatePropertyBeforeReady("camera",e)||(this.view.elevationProvider?.enableCache(!0),this.setStateCamera(S.toRenderCamera(this.view,e),{applyConstraints:!1})||n.getLogger(this).error("#camera=","Invalid camera",e),this.view.elevationProvider?.enableCache(!1))}get contentCamera(){const e=this._get("contentCamera");if(!this.ready)return e;const t=S.fromRenderCamera(this.view,this.view.state.contentCamera,B);return t&&e&&t.equals(e)?e:t.clone()}set contentCamera(e){if(this._updatePropertyBeforeReady("contentCamera",e))return;const t=S.toRenderCamera(this.view,e);this.view.state.contentCamera=null!=t?t:null}installContentCameraReset(e){if(this.removeHandles(G),this.test.contentCameraResetState.clear(),!this.view.state.fixedContentCamera)return!1;const t=this.zoom,i=this.view.state.camera.distance**2,a=w.fromArray(this.view.state.camera.center),r=e.sticky?this.contentCamera.clone():null;return this.addHandles([o.watch(()=>this.contentCamera,()=>{e.sticky||(this.removeHandles(G),this.test.contentCameraResetState.clear())}),o.watch(()=>this.zoom,e=>{void 0!==e&&void 0!==t&&(this.test.contentCameraResetState.set("view.zoom",Math.abs(e-t)/2),Math.abs(e-t)>2?this.contentCamera=null:this.view.state.fixedContentCamera||(this.contentCamera=r))}),o.watch(()=>this.view.state.camera,e=>{const t=v.squaredDistance(a,e.center);this.test.contentCameraResetState.set("camera.center",t/i),t>i?this.contentCamera=null:this.view.state.fixedContentCamera||(this.contentCamera=r)})],G),!0}get center(){return this.ready?this.view.pointsOfInterest.centerOnContent.location:this._get("center")}set center(e){this._updatePropertyBeforeReady("center",e)||(e?this.isCompatible(e)?this.setStateCamera(this._centerToCamera(e),{applyConstraints:!0})?this.view.pointsOfInterest.centerOnContent.runTask():n.getLogger(this).error("#center=","Invalid center",e):n.getLogger(this).error("#center=","Center has an incompatible spatial reference (center: "+(e.spatialReference?e.spatialReference.wkid:"none")+", view: "+this.view.spatialReference?.wkid+")",e):n.getLogger(this).error("#center=","Center may not be null or undefined"))}get visibleArea(){if(!this.ready){const e=this._get("extent");return e?C.fromExtent(e):null}return T.toArea(this.view,this.view.pointsOfInterest.focus.renderLocation)}get extent(){if(!this.ready)return this._get("extent");const e=this.view,t=T.toExtent(e,e.state.camera,e.pointsOfInterest.centerOnContent.renderLocation);return null!=t?t:this._get("extent")}set extent(e){this._updatePropertyBeforeReady("extent",e)||(e?this.isCompatible(e)?this.setStateCamera(this._extentToCamera(e),{applyConstraints:!0})||n.getLogger(this).error("#extent=","Invalid extent",e):n.getLogger(this).error("#extent=","Extent has an incompatible spatial reference (extent: "+(e.spatialReference?e.spatialReference.wkid:"none")+", view: "+this.view.spatialReference?.wkid+")",e):n.getLogger(this).error("#extent=","Extent may not be null or undefined"))}get frustum(){const e=this._propertiesPool.get("frustum");return e.renderCoordsHelper=this.view.renderCoordsHelper,e.update(this.view.state.camera),e}get constraintsManager(){return this._constraintsManager}get _initialViewpoint(){const e=this.view.map;return e&&"initialViewProperties"in e?e.initialViewProperties?.viewpoint:void 0}get hasInitialView(){return!!this._initialViewpoint}get scale(){if(!this.ready)return this._get("scale");const e=this.view.basemapTerrain.tilingScheme,t=this.view.pointsOfInterest.cameraOnSurface.scale;return e&&t?T.applyTiltAdjustToScale(this.view,t,this.view.state.contentCamera,e):this._get("scale")}set scale(e){this._updatePropertyBeforeReady("scale",e)||this.setStateCamera(this._scaleToCamera(e),{applyConstraints:!0})||n.getLogger(this).error("#scale=","Invalid scale",e)}get padding(){if(!this.ready)return this._get("padding");const e=this.view.state.camera,t=e.padding,i=e.pixelRatio,a=this._get("padding"),r=Math.round(t[0]/i),n=Math.round(t[1]/i),s=Math.round(t[2]/i),o=Math.round(t[3]/i);return null!=a&&a.top===r&&a.right===n&&a.bottom===s&&a.left===o?a:{top:r,right:n,bottom:s,left:o}}set padding(e){this._updatePropertyBeforeReady("padding",e)||(this._paddingToArray(e,this.view.state.camera.pixelRatio,k),this.view.state.updateCamera(e=>e.padding=k))}_paddingToArray(e,t,i){e?u.set(i,e.top||0,e.right||0,e.bottom||0,e.left||0):u.set(i,0,0,0,0);for(let e=0;e<4;e++)i[e]=Math.round(i[e]*t)}get screenCenter(){const e=this.padding;return l.createScreenPoint((this.view.width-(e.left+e.right))/2+e.left,(this.view.height-(e.top+e.bottom))/2+e.top)}get viewpoint(){return this.ready?V.fromCamera(this.view,this.camera):this._get("viewpoint")}set viewpoint(e){if(!this._updatePropertyBeforeReady("viewpoint",e))if(e){if(!this.isCompatible(e)){const t=null!=e.camera?e.camera.position:e.targetGeometry,i=null!=t&&t.spatialReference;return void n.getLogger(this).error("#viewpoint=","Viewpoint has an incompatible spatial reference (viewpoint: "+(i?i.wkid:"none")+", view: "+this.view.spatialReference?.wkid+")",e)}this.setStateCamera(this._viewpointToCamera(e),{applyConstraints:!e.camera})||n.getLogger(this).error("#viewpoint=","Invalid viewpoint",e)}else n.getLogger(this).error("#viewpoint=","Viewpoint may not be null or undefined")}get zoom(){return this.ready?T.scaleToZoom(this.view,this.scale):this._get("zoom")}set zoom(e){this._updatePropertyBeforeReady("zoom",e)||void 0===e||this.setStateCamera(this._zoomToCamera(e),{applyConstraints:!0})||n.getLogger(this).error("#zoom=","Invalid zoom",e)}_computeCanvasSize(){if(this._devicePixelRatioOverride)return this.view.state.contentPixelRatio=this._devicePixelRatioOverride,this._tmpCanvasSize.width=Math.round(this.view.surface.clientWidth*this._devicePixelRatioOverride),this._tmpCanvasSize.height=Math.round(this.view.surface.clientHeight*this._devicePixelRatioOverride),this._tmpCanvasSize.pixelRatio=this._devicePixelRatioOverride,this._tmpCanvasSize;const e=Math.min(this._windowDevicePixelRatio,this.view.qualitySettings.maximumPixelRatio),t=(this._usePhysicalPixelRendering?this._windowDevicePixelRatio:e)*this.view.resolutionScale;this._tmpCanvasSize.width=Math.round(this.view.surface.clientWidth*t),this._tmpCanvasSize.height=Math.round(this.view.surface.clientHeight*t);const i=this.view.stage.renderView.renderingContext?.parameters.maxTextureSize;return i&&I.ensureAttachmentMaxSize(this._tmpCanvasSize,i),this._tmpCanvasSize.pixelRatio=this._tmpCanvasSize.width>0?this._tmpCanvasSize.width/this.view.surface.clientWidth*.5+this._tmpCanvasSize.height/this.view.surface.clientHeight*.5:t,this.view.state&&(this.view.state.contentPixelRatio=Math.min(this._windowDevicePixelRatio,this.view.qualitySettings.maximumPixelRatio)),this._tmpCanvasSize}get _rasterPixelRatio(){return null!=this._devicePixelRatioOverride?this._devicePixelRatioOverride:this._usePhysicalPixelRenderingAny?this._windowDevicePixelRatio:Math.min(this._windowDevicePixelRatio,this.view.qualitySettings.maximumPixelRatio)}get _usePhysicalPixelRendering(){return this.view?.stage?.renderer.isFeatureEnabled(8)??!1}get _usePhysicalPixelRenderingAny(){const e=this.view?.stage?.renderer;return e&&(e.isFeatureEnabled(8,2)||e.isFeatureEnabled(8,1)||e.isFeatureEnabled(8,0))}preinit(e){return!(this._isOverridden("center")&&!f.isLoadedOrLoadFor(this.center.spatialReference,e)||this._isOverridden("camera")&&!f.isLoadedOrLoadFor(this.camera.position.spatialReference,e)||this._isOverridden("extent")&&!f.isLoadedOrLoadFor(this.extent.spatialReference,e)||!(!this._isOverridden("viewpoint")||f.isLoadedOrLoadFor(this.viewpoint.targetGeometry?.spatialReference,e)&&f.isLoadedOrLoadFor(this.viewpoint.camera?.position?.spatialReference,e)))}init(){this._constraintsManager=new P.ConstraintsManager({view:this.view}),this._prepareFrame();const e=this._getInitialProperties();this._cameraSetByUser=!1,this._set("ready",!0);for(const t of e)this.set(t.name,t.value);if(!this._cameraSetByUser){const e=this._initialViewpoint||this.view.initialExtent;e&&this.isCompatible(e)?this._setInitialView(e):2===this.view.state.viewingMode&&this.addHandles(o.when(()=>this.view.basemapTerrain.ready,()=>{this.removeHandles(U),this._setInitialView(this.view.dataExtent)},{once:!0,initial:!0}),U)}}exit(){this._cancelGoToOperation(),this.ready&&(this._override("padding",this.padding),this._set("ready",!1),this._clearOverride("hasInitialView"),this._cameraSetByUser=!1,this.removeHandles(U),this._constraintsManager=s.destroyMaybe(this._constraintsManager))}async goTo(e,t){return t={animate:!0,...t},null!=this._gotoOperation&&this._gotoOperation.abort(t.animate),this._gotoOperation=new M.GoToOperation(e,t,this.view),this.view.resourceController.scheduler.stopFrame(),this._gotoOperation.promise}debugSetCameraOnContent(){this.setStateCamera(R.cameraOnContentAlongViewDirection(this.view),{applyConstraints:!1})}step(e){const t=this.view.state,i=t?.cameraController;i&&(t.updateCamera(t=>i.stepController(e,t)),i.steppingFinished&&i.finishController())}_cancelGoToOperation(){null!=this._gotoOperation&&(this._gotoOperation.abort(),this._gotoOperation=null)}_getInitialProperties(){const e=new Set,t=[];for(const{propertyName:i,overrides:a}of F){const r=e.has(i),n=this._isOverridden(i);!r&&n&&t.push({name:i,value:this._get(i)}),this._clearOverride(i),(r||n)&&a.forEach(t=>e.add(t))}return t}_setInitialView(e){if(null==e||this._cameraSetByUser)return;if(e instanceof i)return void this.setStateCamera(S.toRenderCamera(this.view,e),{applyConstraints:!1});if(e instanceof a){if(e.targetGeometry instanceof _){const t=T.fromExtentSync(this.view,e.targetGeometry,0,.5,0);return void(null!=t&&this.setStateCamera(S.toRenderCamera(this.view,t),{applyConstraints:!0}))}const t={applyConstraints:!e.camera},i=this._viewpointToCamera(e);return void this.setStateCamera(i,t)}const t=T.fromExtentSync(this.view,e,0,.5,0);null!=t&&this.setStateCamera(S.toRenderCamera(this.view,t),{applyConstraints:!0})}_updatePropertyBeforeReady(e,t){return!this.ready&&(this._override(e,t),t&&A.has(e)&&this._override("hasInitialView",!0),!0)}isCompatible(e){return null!=e&&(e instanceof a?e.camera?this.isCompatible(e.camera):this.isCompatible(e.targetGeometry):e instanceof i?this.isCompatible(e.position):e.spatialReference&&!f.requiresLoad(e.spatialReference,this.view.spatialReference))}_getPreservingHeadingTilt(e=H){return this._cameraSetByUser?(e.heading=this.camera.heading,e.tilt=this.camera.tilt):(e.heading=0,e.tilt=.5),e}_centerPointAtDistanceToCamera(e,t,i=D){const{heading:a,tilt:r}=this._getPreservingHeadingTilt(),n=T.getObserverForPointAtDistanceSync(this.view,a,r,e,t,1);return null==n?null:(i.copyFrom(this.view.state.camera),i.eye=n.eye,i.center=n.center,i.up=n.up,i)}_centerToCamera(e){let t;if(e.hasZ)t=this.view.state.camera.distance;else{const{centerOnContent:e}=this.view.pointsOfInterest;e.runTask(),t=e.distance}return this._centerPointAtDistanceToCamera(e,t)}_extentToCamera(e){const{heading:t,tilt:i}=this._getPreservingHeadingTilt(),a=T.fromExtentSync(this.view,e,t,i,1,B);return a?S.toRenderCamera(this.view,a):null}_scaleToCamera(e){if(null==e)return null;const t=this.view,i=t.pointsOfInterest.centerOnContent;i.runTask();const a=i.renderLocation,r=t.pointsOfInterest.cameraOnSurface.renderLocation,n=T.viewScaleToCameraDistance(t,e,t.state.contentCamera,a,r);return this._centerPointAtDistanceToCamera(a,n)}_zoomToCamera(e){return this._scaleToCamera(T.zoomToScale(this.view,e))}_viewpointToCamera(e){return S.toRenderCamera(this.view,V.toCameraSync(this.view,e))}setStateCamera(e,t){return!(null==e||!this.view.state.stopActiveCameraController()||(this._cameraSetByUser=!0,t.doNotCancelGoToOperation||this._cancelGoToOperation(),this.view.state.updateCamera(i=>{t.positionAndOrientationOnly?(i.eye=e.eye,i.center=e.center,i.up=e.up,i.fov=e.fov):i.copyFrom(e),t.applyConstraints&&x.applyAll(this.view,i)}),t.applyConstraints||(this.view.state.cameraController=new b.SurfaceCollisionCorrectionController({view:this.view,desiredCamera:e})),0))}_prepareFrame(){const{surface:e,canvas:t}=this.view;if(!e||!t)return;this._windowDevicePixelRatio=window.devicePixelRatio;const i=this._computeCanvasSize();if(0!==i.width&&0!==i.height&&(t.width===i.width&&t.height===i.height||(t.width=i.width,t.height=i.height),this.view.state)){const e=this.view.state.camera;e.fullWidth===i.width&&e.fullHeight===i.height&&e.pixelRatio===i.pixelRatio||(D.copyFrom(e),D.pixelRatio!==i.pixelRatio&&(this._paddingToArray(this.padding,i.pixelRatio,k),D.padding=k),D.fullWidth=i.width,D.fullHeight=i.height,D.pixelRatio=i.pixelRatio,this.view.state.camera=D),this._updateViewState()}}_updateElevation(e){const t=this.view.basemapTerrain?.spatialReference,i=this.view.renderCoordsHelper?.getAltitude(e.eye)??0,a=t?R.surfaceElevationBelowRenderLocation(this.view,e.eye):0;e.relativeElevation=i-a}_updateViewState(){null!=this.test.renderState?this.view.state.mode=this.test.renderState:this.view.animation?this.view.state.mode=0:this.view.interacting?this.view.state.mode=1:(0===this.view.state.mode&&(this._cameraChangeTime=0),performance.now()-this._cameraChangeTime<this._idleTimeout?this.view.state.mode=1:this.view.state.mode=2),this.view.state.rasterPixelRatio=this._rasterPixelRatio}_cameraChangedHandler(e,t){e&&t&&e.almostEquals(t)||(this._cameraChangeTime=performance.now(),this._updateViewState())}},t.__decorate([c.property({type:i,dependsOn:["view.state.camera","ready"]})],e.ViewStateManager.prototype,"camera",null),t.__decorate([c.property({type:i,dependsOn:["view.state.contentCamera","ready"]})],e.ViewStateManager.prototype,"contentCamera",null),t.__decorate([c.property({type:y})],e.ViewStateManager.prototype,"center",null),t.__decorate([c.property()],e.ViewStateManager.prototype,"visibleArea",null),t.__decorate([c.property({type:_})],e.ViewStateManager.prototype,"extent",null),t.__decorate([c.property({readOnly:!0})],e.ViewStateManager.prototype,"frustum",null),t.__decorate([c.property()],e.ViewStateManager.prototype,"_constraintsManager",void 0),t.__decorate([c.property({readOnly:!0})],e.ViewStateManager.prototype,"constraintsManager",null),t.__decorate([c.property()],e.ViewStateManager.prototype,"_initialViewpoint",null),t.__decorate([c.property({readOnly:!0})],e.ViewStateManager.prototype,"hasInitialView",null),t.__decorate([c.property({readOnly:!0,type:Boolean})],e.ViewStateManager.prototype,"ready",void 0),t.__decorate([c.property({type:Number})],e.ViewStateManager.prototype,"scale",null),t.__decorate([c.property()],e.ViewStateManager.prototype,"padding",null),t.__decorate([c.property({readOnly:!0})],e.ViewStateManager.prototype,"screenCenter",null),t.__decorate([c.property({constructOnly:!0})],e.ViewStateManager.prototype,"view",void 0),t.__decorate([c.property({type:a})],e.ViewStateManager.prototype,"viewpoint",null),t.__decorate([c.property({type:Number})],e.ViewStateManager.prototype,"zoom",null),t.__decorate([c.property({readOnly:!0})],e.ViewStateManager.prototype,"_rasterPixelRatio",null),t.__decorate([c.property({readOnly:!0})],e.ViewStateManager.prototype,"_usePhysicalPixelRendering",null),t.__decorate([c.property({readOnly:!0})],e.ViewStateManager.prototype,"_usePhysicalPixelRenderingAny",null),t.__decorate([c.property()],e.ViewStateManager.prototype,"_windowDevicePixelRatio",void 0),t.__decorate([c.property()],e.ViewStateManager.prototype,"_devicePixelRatioOverride",void 0),e.ViewStateManager=t.__decorate([m.subclass("esri.views.3d.state.ViewStateManager")],e.ViewStateManager);class E{constructor(){this.width=0,this.height=0,this.pixelRatio=1}}const A=new Set(["camera","viewpoint","extent","scale","center","zoom"]),F=[{propertyName:"camera",overrides:["viewpoint"]},{propertyName:"viewpoint",overrides:["extent"]},{propertyName:"extent",overrides:["center","scale"]},{propertyName:"center",overrides:[]},{propertyName:"scale",overrides:["zoom"]},{propertyName:"zoom",overrides:[]},{propertyName:"padding",overrides:[]}],H={heading:0,tilt:0};let B=new i,D=new z;const k=g.create(),U="pending-initial-view",G="content-camera-reset",N=300;e.cleanupViewStateManager=function(){B=new i,D=new z},e.interactingTimeout=100,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});