// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Accessor","../../../core/Logger","../../../core/mathUtils","../../../core/screenUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/math/mat4","../../../core/libs/gl-matrix-2/factories/mat4f64","../../../core/libs/gl-matrix-2/math/vec2","../../../core/libs/gl-matrix-2/factories/vec2f64","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../chunks/vec42","../../../core/libs/gl-matrix-2/factories/vec4f64","../../../geometry/support/frustum","../../../geometry/support/ray","../../../geometry/support/vector","../webgl-engine/lib/fov"],function(t,e,i,r,s,o,n,a,h,p,_,c,u,l,d,y,v,w,g,f,x){"use strict";var m;let M=m=class extends e{constructor(t){super(t),this._ray=g.create(),this._viewport=v.fromValues(0,0,1,1),this._padding=v.fromValues(0,0,0,0),this._fov=55/180*Math.PI,this._nearFar=u.fromValues(1,1e3),this._viewDirty=!0,this._viewMatrix=_.create(),this._viewProjectionDirty=!0,this._viewProjectionMatrix=_.create(),this._viewInverseTransposeMatrixDirty=!0,this._viewInverseTransposeMatrix=_.create(),this._frustumDirty=!0,this._frustum=w.create(),this._fullViewport=v.create(),this._pixelRatio=1,this.row=0,this.column=0,this._rows=1,this._columns=1,this._center=d.create(),this._up=d.create(),this.relativeElevation=0}get pixelRatio(){return this._pixelRatio}set pixelRatio(t){this._pixelRatio=t>0?t:1}get rows(){return this._rows}set rows(t){this._rows=Math.max(1,t)}get columns(){return this._columns}set columns(t){this._columns=Math.max(1,t)}get eye(){return this._ray.origin}set eye(t){this._compareAndSetView(t,this._ray.origin)}get center(){return this._center}set center(t){this._compareAndSetView(t,this._center,"_center")}get ray(){return l.subtract(this._ray.direction,this.center,this.eye),this._ray}get up(){return this._up}set up(t){this._compareAndSetView(t,this._up,"_up")}get viewMatrix(){return this._ensureViewClean(),this._viewMatrix}set viewMatrix(t){p.copy(this._viewMatrix,t),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get viewForward(){return this._ensureViewClean(),l.set(d.create(),-this._viewMatrix[2],-this._viewMatrix[6],-this._viewMatrix[10])}get viewUp(){return this._ensureViewClean(),l.set(d.create(),this._viewMatrix[1],this._viewMatrix[5],this._viewMatrix[9])}get viewRight(){return this._ensureViewClean(),l.set(d.create(),this._viewMatrix[0],this._viewMatrix[4],this._viewMatrix[8])}get nearFar(){return this._nearFar}get near(){return this._nearFar[0]}set near(t){this._nearFar[0]!==t&&(this._nearFar[0]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get far(){return this._nearFar[1]}set far(t){this._nearFar[1]!==t&&(this._nearFar[1]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get viewport(){return this._viewport}set viewport(t){this.x=t[0],this.y=t[1],this.width=t[2],this.height=t[3]}get screenViewport(){if(1===this.pixelRatio)return this._viewport;const t=y.scale(v.create(),this._viewport,1/this.pixelRatio),e=this._get("screenViewport");return e&&y.equals(t,e)?e:t}get screenPadding(){if(1===this.pixelRatio)return this._padding;const t=y.scale(v.create(),this._padding,1/this.pixelRatio),e=this._get("screenPadding");return e&&y.equals(t,e)?e:t}get x(){return this._viewport[0]}set x(t){t+=this._padding[3],this._viewport[0]!==t&&(this._viewport[0]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get y(){return this._viewport[1]}set y(t){t+=this._padding[2],this._viewport[1]!==t&&(this._viewport[1]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get width(){return this._viewport[2]}set width(t){this._viewport[2]!==t&&(this._viewport[2]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get height(){return this._viewport[3]}set height(t){this._viewport[3]!==t&&(this._viewport[3]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get fullWidth(){return this._viewport[2]+this._padding[1]+this._padding[3]}set fullWidth(t){this.width=t-(this._padding[1]+this._padding[3])}get fullHeight(){return this._viewport[3]+this._padding[0]+this._padding[2]}set fullHeight(t){this.height=t-(this._padding[0]+this._padding[2])}get fullViewport(){return this._fullViewport[0]=this._viewport[0]-this._padding[3],this._fullViewport[1]=this._viewport[1]-this._padding[2],this._fullViewport[2]=this.fullWidth,this._fullViewport[3]=this.fullHeight,this._fullViewport}get _aspect(){return this.width/this.height}get padding(){return this._padding}set padding(t){y.exactEquals(this._padding,t)||(this._viewport[0]+=t[3]-this._padding[3],this._viewport[1]+=t[2]-this._padding[2],this._viewport[2]-=t[1]+t[3]-(this._padding[1]+this._padding[3]),this._viewport[3]-=t[0]+t[2]-(this._padding[0]+this._padding[2]),y.copy(this._padding,t),this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_padding"),this.notifyChange("_viewport"))}get viewProjectionMatrix(){return this._viewProjectionDirty&&(p.multiply(this._viewProjectionMatrix,this.projectionMatrix,this.viewMatrix),this._viewProjectionDirty=!1),this._viewProjectionMatrix}get projectionMatrix(){return this._projectionMatrixInternal}get inverseProjectionMatrix(){return p.invert(_.create(),this.projectionMatrix)||this._get("inverseProjectionMatrix")||_.create()}get fov(){return this._fov}set fov(t){this._fov=t,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovX(){return x.fovd2fovx(this._fov,this.width,this.height)}set fovX(t){this._fov=x.fovx2fovd(t,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovY(){return x.fovd2fovy(this._fov,this.width,this.height)}set fovY(t){this._fov=x.fovy2fovd(t,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get distance(){return l.distance(this.center,this.eye)}get frustum(){return this._recomputeFrustum(),this._frustum}get viewInverseTransposeMatrix(){return(this._viewInverseTransposeMatrixDirty||this._viewDirty)&&(p.invert(this._viewInverseTransposeMatrix,this.viewMatrix),p.transpose(this._viewInverseTransposeMatrix,this._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),this._viewInverseTransposeMatrix}depthNDCToWorld(t){const{near:e,far:i}=this;return 2*e*i/(i+e-t*(i-e))}get perRenderPixelRatio(){return Math.tan(this.fovX/2)/(this.width/2)}get perScreenPixelRatio(){return this.perRenderPixelRatio*this.pixelRatio}get aboveGround(){return null!=this.relativeElevation&&this.relativeElevation>=0}get _projectionMatrixInternal(){const t=this.width,e=this.height,i=this.near*Math.tan(this.fovY/2)*2,r=i*this._aspect,s=i/this.rows,o=r/this.columns,n=-r/2+this.column*o,a=n+o,h=-i/2+this.row*s,c=h+s,u=p.frustum(_.create(),n*(1+2*this._padding[3]/t),a*(1+2*this._padding[1]/t),h*(1+2*this._padding[2]/e),c*(1+2*this._padding[0]/e),this.near,this.far),l=this._get("projectionMatrix");return l&&p.equals(l,u)?l:u}copyFrom(t){l.copy(this._ray.origin,t.eye),this.center=t.center,this.up=t.up,y.copy(this._viewport,t.viewport),this.notifyChange("_viewport"),y.copy(this._padding,t.padding),this.notifyChange("_padding"),c.copy(this._nearFar,t.nearFar),this.notifyChange("_nearFar"),this._fov=t.fov,this.row=t.row,this.column=t.column,this.rows=t.rows,this.columns=t.columns,this.relativeElevation=t.relativeElevation;const e=t;return this._viewDirty=e._viewDirty,this._viewDirty||(p.copy(this._viewMatrix,t.viewMatrix),this.notifyChange("_viewMatrix")),this._viewProjectionDirty=!0,this._frustumDirty=e._frustumDirty,this._frustumDirty||(w.copy(this._frustum,t.frustum),this._frustumDirty=!1),e._viewInverseTransposeMatrixDirty?this._viewInverseTransposeMatrixDirty=!0:(p.copy(this._viewInverseTransposeMatrix,t.viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),y.copy(this._fullViewport,t.fullViewport),this.pixelRatio=t.pixelRatio,this}copyViewFrom(t){this.eye=t.eye,this.center=t.center,this.up=t.up,this.fov=t.fov}clone(){return(new m).copyFrom(this)}equals(t){return l.exactEquals(this.eye,t.eye)&&l.exactEquals(this.center,t.center)&&l.exactEquals(this.up,t.up)&&y.exactEquals(this._viewport,t.viewport)&&y.exactEquals(this._padding,t.padding)&&c.exactEquals(this.nearFar,t.nearFar)&&this._fov===t.fov&&this.pixelRatio===t.pixelRatio&&this.relativeElevation===t.relativeElevation&&this.row===t.row&&this.column===t.column&&this.rows===t.rows&&this.columns===t.columns}almostEquals(t){const e=Math.max(1,1/this.pixelRatio,1/t.pixelRatio);if(Math.abs(t.fov-this._fov)>=.001||y.squaredDistance(t.screenPadding,this.screenPadding)>=e||y.squaredDistance(this.screenViewport,t.screenViewport)>=e||this.row!==t.row||this.column!==t.column||this.rows!==t.rows||this.columns!==t.columns)return!1;l.sub(j,t.eye,t.center),l.sub(V,this.eye,this.center);const i=l.dot(j,V),r=l.sqrLen(j),s=l.sqrLen(V),o=5e-4;return i*i>=(1-1e-10)*r*s&&l.sqrDist(t.eye,this.eye)<Math.max(r,s)*o*o}computeRenderPixelSizeAt(t){return this.computeRenderPixelSizeAtDist(this._viewDirectionDistance(t))}computeRenderPixelSizeAtDist(t){return t*this.perRenderPixelRatio}computeScreenPixelSizeAt(t){return this.computeScreenPixelSizeAtDist(this._viewDirectionDistance(t))}_viewDirectionDistance(t){return Math.abs(f.projectPointSignedLength(this.viewForward,l.subtract(j,t,this.eye)))}computeScreenPixelSizeAtDist(t){return t*this.perScreenPixelRatio}computeDistanceFromRadius(t,e){return t/Math.tan(Math.min(this.fovX,this.fovY)/(2*(e||1)))}getScreenCenter(t=s.createScreenPointArray()){return t[0]=(this.padding[3]+this.width/2)/this.pixelRatio,t[1]=(this.padding[0]+this.height/2)/this.pixelRatio,t}getRenderCenter(t,e=.5,i=.5){return t[0]=this.padding[3]+this.width*e,t[1]=this.padding[2]+this.height*i,t[2]=.5,t}setGLViewport(t){const e=this.viewport,i=this.padding;t.setViewport(e[0]-i[3],e[1]-i[2],e[2]+i[1]+i[3],e[3]+i[0]+i[2])}applyProjection(t,e){t!==R&&l.copy(R,t),R[3]=1,y.transformMat4(R,R,this.projectionMatrix);const i=Math.abs(R[3]);l.scale(R,R,1/i);const s=this.fullViewport;e[0]=r.lerp(0,s[0]+s[2],.5+.5*R[0]),e[1]=r.lerp(0,s[1]+s[3],.5+.5*R[1]),e[2]=.5*(R[2]+1),e[3]=i}unapplyProjection(t,e){const i=this.fullViewport;R[0]=(t[0]/(i[0]+i[2])*2-1)*t[3],R[1]=(t[1]/(i[1]+i[3])*2-1)*t[3],R[2]=(2*t[2]-1)*t[3],R[3]=t[3],null!=this.inverseProjectionMatrix&&(y.transformMat4(R,R,this.inverseProjectionMatrix),e[0]=R[0],e[1]=R[1],e[2]=R[2])}projectToScreen(t,e){return this.projectToRenderScreen(t,F),this.renderToScreen(F,e),e}projectToRenderScreen(t,e){if(R[0]=t[0],R[1]=t[1],R[2]=t[2],R[3]=1,y.transformMat4(R,R,this.viewProjectionMatrix),0===R[3])return null;const i=R;l.scale(i,i,1/Math.abs(R[3]));const s=this.fullViewport,o=r.lerp(0,s[0]+s[2],.5+.5*i[0]),n=r.lerp(0,s[1]+s[3],.5+.5*i[1]);return"x"in e?(e.x=o,e.y=n):(e[0]=o,e[1]=n,e.length>2&&(e[2]=.5*(i[2]+1))),e}unprojectFromScreen(t,e){return this.unprojectFromRenderScreen(this.screenToRender(t,F),e)}unprojectFromRenderScreen(t,e){if(p.multiply(P,this.projectionMatrix,this.viewMatrix),!p.invert(P,P))return null;const i=this.fullViewport;return R[0]=2*(t[0]-i[0])/i[2]-1,R[1]=2*(t[1]-i[1])/i[3]-1,R[2]=2*t[2]-1,R[3]=1,y.transformMat4(R,R,P),0===R[3]?null:(e[0]=R[0]/R[3],e[1]=R[1]/R[3],e[2]=R[2]/R[3],e)}constrainWindowSize(t,e,i,r){const s=t*this.pixelRatio,o=e*this.pixelRatio,n=Math.max(s-i/2,0),a=Math.max(this.fullHeight-o-r/2,0),h=-Math.min(s-i/2,0),p=-Math.min(this.fullHeight-o-r/2,0),_=i-h- -Math.min(this.fullWidth-s-i/2,0),c=r-p- -Math.min(o-r/2,0);return[Math.round(n),Math.round(a),Math.round(_),Math.round(c)]}computeUp(t){1===t?this._computeUpGlobal():this._computeUpLocal()}screenToRender(t,e){const i=t[0]*this.pixelRatio,r=this.fullHeight-t[1]*this.pixelRatio;return e[0]=i,e[1]=r,e}renderToScreen(t,e){const i=t[0]/this.pixelRatio,r=(this.fullHeight-t[1])/this.pixelRatio;e[0]=i,e[1]=r}_computeUpGlobal(){l.subtract(j,this.center,this.eye);const t=l.length(this.center);t<1?(l.set(this._up,0,0,1),this._markViewDirty(),this.notifyChange("_up")):Math.abs(l.dot(j,this.center))>.9999*l.length(j)*t||(l.cross(this._up,j,this.center),l.cross(this._up,this._up,j),l.normalize(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_computeUpLocal(){l.direction(j,this.eye,this.center),Math.abs(j[2])<=.9999&&(l.scale(j,j,j[2]),l.set(this._up,-j[0],-j[1],1-j[2]),l.normalize(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_compareAndSetView(t,e,r=""){"number"==typeof t[0]&&isFinite(t[0])&&"number"==typeof t[1]&&isFinite(t[1])&&"number"==typeof t[2]&&isFinite(t[2])?l.exactEquals(t,e)||(l.copy(e,t),this._markViewDirty(),r.length&&this.notifyChange(r)):i.getLogger("esri.views.3d.webgl-engine.lib.RenderCamera").warn("RenderCamera vector contains invalid number, ignoring value")}_markViewDirty(){this._viewDirty=!0,this._frustumDirty=!0,this._viewProjectionDirty=!0}_recomputeFrustum(){this._frustumDirty&&(w.fromMatrix(this.viewMatrix,this.projectionMatrix,this._frustum),this._frustumDirty=!1)}_ensureViewClean(){this._viewDirty&&(p.lookAt(this._viewMatrix,this.eye,this.center,this.up),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0)}};t.__decorate([o.property()],M.prototype,"_viewport",void 0),t.__decorate([o.property()],M.prototype,"_padding",void 0),t.__decorate([o.property()],M.prototype,"_fov",void 0),t.__decorate([o.property()],M.prototype,"_nearFar",void 0),t.__decorate([o.property()],M.prototype,"_viewDirty",void 0),t.__decorate([o.property()],M.prototype,"_viewMatrix",void 0),t.__decorate([o.property()],M.prototype,"_pixelRatio",void 0),t.__decorate([o.property()],M.prototype,"pixelRatio",null),t.__decorate([o.property()],M.prototype,"row",void 0),t.__decorate([o.property()],M.prototype,"column",void 0),t.__decorate([o.property()],M.prototype,"_rows",void 0),t.__decorate([o.property()],M.prototype,"rows",null),t.__decorate([o.property()],M.prototype,"_columns",void 0),t.__decorate([o.property()],M.prototype,"columns",null),t.__decorate([o.property()],M.prototype,"eye",null),t.__decorate([o.property()],M.prototype,"center",null),t.__decorate([o.property()],M.prototype,"_center",void 0),t.__decorate([o.property()],M.prototype,"up",null),t.__decorate([o.property()],M.prototype,"_up",void 0),t.__decorate([o.property()],M.prototype,"viewMatrix",null),t.__decorate([o.property({readOnly:!0})],M.prototype,"viewForward",null),t.__decorate([o.property({readOnly:!0})],M.prototype,"viewUp",null),t.__decorate([o.property({readOnly:!0})],M.prototype,"viewRight",null),t.__decorate([o.property({readOnly:!0})],M.prototype,"nearFar",null),t.__decorate([o.property()],M.prototype,"near",null),t.__decorate([o.property()],M.prototype,"far",null),t.__decorate([o.property()],M.prototype,"viewport",null),t.__decorate([o.property({readOnly:!0})],M.prototype,"screenViewport",null),t.__decorate([o.property({readOnly:!0})],M.prototype,"screenPadding",null),t.__decorate([o.property()],M.prototype,"x",null),t.__decorate([o.property()],M.prototype,"y",null),t.__decorate([o.property()],M.prototype,"width",null),t.__decorate([o.property()],M.prototype,"height",null),t.__decorate([o.property()],M.prototype,"fullWidth",null),t.__decorate([o.property()],M.prototype,"fullHeight",null),t.__decorate([o.property({readOnly:!0})],M.prototype,"_aspect",null),t.__decorate([o.property()],M.prototype,"padding",null),t.__decorate([o.property({readOnly:!0})],M.prototype,"projectionMatrix",null),t.__decorate([o.property({readOnly:!0})],M.prototype,"inverseProjectionMatrix",null),t.__decorate([o.property()],M.prototype,"fov",null),t.__decorate([o.property()],M.prototype,"fovX",null),t.__decorate([o.property()],M.prototype,"fovY",null),t.__decorate([o.property()],M.prototype,"viewInverseTransposeMatrix",null),t.__decorate([o.property({readOnly:!0})],M.prototype,"_projectionMatrixInternal",null),t.__decorate([o.property()],M.prototype,"relativeElevation",void 0),M=m=t.__decorate([h.subclass("esri.views.3d.webgl.RenderCamera")],M);const D=M,R=v.create(),P=_.create(),j=d.create(),V=d.create(),F=s.createRenderScreenPointArray3();return D});