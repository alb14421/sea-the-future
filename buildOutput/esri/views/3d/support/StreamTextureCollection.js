// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/promiseUtils","../../../core/urlUtils","./TextureCollection","../webgl-engine/lib/Texture"],function(e,t,r,i,s){"use strict";class n extends i.TextureCollection{constructor(e,t,r){super(t,r),this._streamDataRequester=e}async fromUrl(e,r,s){t.throwIfAborted(s);const n=s?.signal,l=this.makeUid(e,r);let o=this._textureRequests.get(l);if(!o){const t=new AbortController,s=this._streamDataRequester.request(e,2,{uid:l,signal:t.signal});o=new i.TextureRequest,o.abortController=t;const n=o;this._textureRequests.set(l,o),o.textureAsync=s.then(async t=>{const s=this._createTexture(e,t,r);return n.texture=s,n.abortController=null,await s.load(this._stage.renderView.renderingContext),this._stage.addTexture(s),new i.TextureHandle(l,s,()=>this._release(l))},e=>{throw n.abortController=null,e})}o.referenceCount++;try{return await t.whenOrAbort(o.textureAsync,n)}catch(e){throw this._release(l),e}}_createTexture(e,t,i){const n={width:t.width,height:t.height,wrap:{s:33071,t:33071},preMultiplyAlpha:!0,reloadable:!0};if(r.isSVG(e)){if(i||0===t.width&&0===t.height){const e=t.width?t.height/t.width:1;i=i||64,e>1?(t.width=Math.round(i/e),t.height=i):(t.width=i,t.height=Math.round(i*e))}this._stage.renderView?.renderingContext.driverTest.svgPremultipliesAlpha.result&&(n.preMultiplyAlpha=!1)}return new s.Texture(t,n)}}e.StreamTextureCollection=n,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});