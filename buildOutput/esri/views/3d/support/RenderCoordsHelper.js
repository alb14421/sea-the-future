// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/mathUtils","../../../core/unitUtils","../../../core/libs/gl-matrix-2/math/mat4","../../../chunks/vec32","../../../geometry/ellipsoidUtils","../../../geometry/spatialReferenceEllipsoidUtils","../../../geometry/projection/projectPointToVector","../../../geometry/projection/projectVectorToPoint","../../../geometry/projection/projectVectorToVector","../../../geometry/support/aaBoundingRect","../../../geometry/support/coordinateSystem","../../../geometry/support/plane","../../../geometry/support/vector","../../../geometry/support/vectorStacks","../../../layers/graphics/dehydratedFeatureUtils"],function(t,e,o,r,i,s,n,a,c,l,d,p,h,u,m,y){"use strict";class g{constructor(t,e,o,r){this.viewingMode=t,this.spatialReference=e,this.unitInMeters=o,this._coordinateSystem=r,this._tmpCoordinateSystem=p.create(r),this.referenceEllipsoid=s.getReferenceEllipsoid(e),this.sphericalPCPF=n.getSphericalPCPF(e)}set extent(t){t&&p.setExtent(this._coordinateSystem,t,this._coordinateSystem)}get extent(){return p.getExtent(this._coordinateSystem,d.create())}getAltitude(t){return p.altitudeAt(this._coordinateSystem,t)}setAltitude(t,e,o=t){return p.setAltitudeAt(this._coordinateSystem,o,e,t)}setAltitudeOfTransformation(t,e){p.setAltitudeOfTransformation(this._coordinateSystem,e,t,e)}worldUpAtPosition(t,e){return p.normalAt(this._coordinateSystem,t,e)}worldBasisAtPosition(t,e,o){return p.axisAt(this._coordinateSystem,t,e,o)}basisMatrixAtPosition(t,e){const o=this.worldBasisAtPosition(t,0,m.sv3d.get()),i=this.worldBasisAtPosition(t,1,m.sv3d.get()),s=this.worldBasisAtPosition(t,2,m.sv3d.get());return r.set(e,o[0],o[1],o[2],0,i[0],i[1],i[2],0,s[0],s[1],s[2],0,0,0,0,1),e}headingAtPosition(t,o){const r=this.worldUpAtPosition(t,m.sv3d.get()),i=this.worldBasisAtPosition(t,1,m.sv3d.get()),s=u.angleAroundAxis(o,i,r);return e.rad2deg(s)}intersectManifoldClosestSilhouette(t,e,o){return p.elevate(this._coordinateSystem,e,this._tmpCoordinateSystem),p.intersectRayClosestSilhouette(this._tmpCoordinateSystem,t,o),o}intersectManifold(t,e,o){p.elevate(this._coordinateSystem,e,this._tmpCoordinateSystem);const r=m.sv3d.get();return p.intersectRay(this._tmpCoordinateSystem,t,r)?i.copy(o,r):null}intersectInfiniteManifold(t,e,o){if(1===this.viewingMode)return this.intersectManifold(t,e,o);p.elevate(this._coordinateSystem,e,this._tmpCoordinateSystem);const r=this._tmpCoordinateSystem.value,s=m.sv3d.get();return h.intersectRay(r.plane,t,s)?i.copy(o,s):null}toRenderCoords(t,e,o){return y.isDehydratedPoint(t)?a.projectPointToVector(t,e,this.spatialReference):l.projectVectorToVector(t,e,o,this.spatialReference)}fromRenderCoords(t,e,o=null){return y.isDehydratedPoint(e)?(null!=o&&(e.spatialReference=o),c.projectVectorToPoint(t,this.spatialReference,e)?e:null):l.projectVectorToVector(t,this.spatialReference,e,o)?e:null}static create(t,e){switch(t){case 2:return new g(2,e,o.getMetersPerUnitForSR(e),p.createLocal());case 1:return new g(1,e,1,p.createGlobal(e))}}static renderUnitScaleFactor(t,e){return o.getMetersPerCartesianUnitForSR(t)/o.getMetersPerCartesianUnitForSR(e)}}t.RenderCoordsHelper=g,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});