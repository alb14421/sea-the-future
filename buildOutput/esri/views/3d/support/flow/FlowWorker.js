// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../../chunks/tslib.es6","../../../../core/Logger","../../../../core/has","../../../../core/RandomLCG","../../../../core/Error","../../../../core/accessorSupport/decorators/subclass","../../../2d/engine/flow/dataUtils","./loadUtils"],function(e,t,s,a,r,l,i,o){"use strict";let n=class{constructor(){this._tileData=new Map}async generateStreamlines(e){const{flowData:t,simulationSettings:s,size:a}=e,r=c(i.createFlowFieldFromData(s,t),s,a);return{result:{streamlines:r},transferList:r?.map(e=>e.buffer)}}async generateTiledStreamlines(e){const{simulationSettings:t,size:s,reset:a,flowDataTiles:r,extent:l,pixelSize:i}=e;this._updateTileData(r,a);const n=c(o.createFlowFieldFromDataTiled(t,this._tileData,s,l,i),t,s);return{result:{streamlines:n},transferList:n?.map(e=>e.buffer)??[]}}_updateTileData(e,t){t&&this._tileData.forEach((t,s)=>{null==e.get(s)&&this._tileData.delete(s)}),e.forEach((e,t)=>{"delete"===e?this._tileData.delete(t):"on-worker"!==e&&this._tileData.set(t,e)})}};function c(e,t,s){if(null==e)return;const a=i.getStreamlines(t,e,s[0],s[1]),r=[];for(const e of a){const t=new Float32Array(3*e.length);for(let s=0;s<e.length;s++)t[3*s]=e[s].x,t[3*s+1]=e[s].y,t[3*s+2]=e[s].t;r.push(t)}return r}return n=e.__decorate([l.subclass("esri.views.3d.support.flow.FlowWorker")],n),n});