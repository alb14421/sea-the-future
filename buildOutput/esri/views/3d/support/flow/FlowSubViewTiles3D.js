// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/Logger","../../../../core/has","../../../../core/RandomLCG","../../../../core/Error","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/support/aaBoundingRect","../../../2d/engine/flow/dataUtils","../../layers/FlowSubView3D","./loadUtils","../../terrain/TerrainData"],function(e,t,a,s,i,l,r,n,o,d,u,c){"use strict";function h(){return new Map}return e.default=class extends d{constructor(e){super(e),this._flowDataTiles=h(),this._resetTileData=!0}initialize(){this.addHandles([this.surface.on("tile-data-changed",({tile:e,layerIndex:t,layerClass:a})=>{const{renderedTiles:s}=this;null!=s&&t===this._layerIndex&&1===a&&this._updateFlowDataTile(e)})]),this.updatingHandles.add(()=>this.renderedTiles,e=>{const t=h();e?.forEach(e=>{const a=this._flowDataTiles.get(u.tileToKey(e))??this._getFlowDataCopy(e);null!=a&&t.set(u.tileToKey(e),a)}),this._flowDataTiles=t,this._resetTileData=!0,this.triggerLoad()})}get _layerIndex(){return this.surface.getLayerIndexByUID(1,this.layerView.uid)}async fetchDataAndGenerateStreamlines(e,t){const{simulationSettings:a,_flowDataTiles:s,workerHandle:i}=this,{size:l}=e;if(null==a||null==i)return;const r=n.fromExtent(e.extent),o=this._resetTileData;this._resetTileData=!1;const d=h();s.forEach((e,t)=>{"delete"===e?(d.set(t,"delete"),s.delete(t)):(o||"on-worker"!==e)&&(d.set(t,e),s.set(t,"on-worker"))});const u={simulationSettings:a,size:l,flowDataTiles:d,reset:o,extent:r,pixelSize:this.surface.tilingScheme.pixelSize},{streamlines:c}=await i.generateTiledStreamlines(u,t);return c}_getFlowDataCopy(e){const{_layerIndex:t}=this;if(null==t)return null;const a=e.getLayerInfo(t,1);if(a.dataMissing||!e.hasLayerData(t,1))return null;const{data:s}=a;if(!c.isRasterTile(s))return null;const i=o.toFlowData(this.layer.serviceRasterInfo.dataType,s.source),l=new Uint8Array(i.width*i.height);for(let e=0;e<l.length;e++)l[e]=i.mask[e];return new u.FlowDataTile(i.data,l,i.width,i.height,e.lij,n.clone(e.extent))}async _updateFlowDataTile(e){if(this.renderedTiles?.has(e)){const t=this._getFlowDataCopy(e)??"delete";this._setTileData(e,t)}else this._setTileData(e,"delete");await this.triggerLoad()}_setTileData(e,t){this._flowDataTiles.set(u.tileToKey(e),t)}},e.default=t.__decorate([r.subclass("esri.views.3d.support.flow.FlowSubViewTiles3D")],e.default),e.default});