// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/arrayUtils","../../../core/Handles","../../../core/handleUtils","../../../core/has","../../../core/maybe","../../../core/reactiveUtils","../../../geometry/ellipsoidUtils","../layers/graphics/ObjectResourceCache","./StreamTextureCollection","../webgl-engine/lib/screenSizePerspectiveUtils"],function(e,t,s,r,i,n,c,a,o,l,h){"use strict";const d={distance:0,fovY:0};e.SharedSymbolResources=class{constructor(e){this.streamDataRequester=null,this._graphicsOwners=[],this._screenSizePerspectiveHandles=null,this.cimSymbolRasterizer=null,this._viewState=e.viewState,this._view=e.view,this._pointsOfInterest=e.pointsOfInterest,this.streamDataRequester=e.resourceController.createStreamDataRequester(4),this.objectResourceCache=new o.ObjectResourceCache((t,s)=>e.resourceController.memoryController.newCache(t,s)),this.textures=new l.StreamTextureCollection(this.streamDataRequester,e.view.stage,e.resourceController.scheduler);const t=a.getReferenceEllipsoid(this._view.spatialReference).radius;this.screenSizePerspectiveSettings=h.getSettings(e.viewingMode,t),this.screenSizePerspectiveSettingsLabels=h.getLabelSettings(e.viewingMode,t)}destroy(){this.textures.destroy(),this.streamDataRequester=null}addGraphicsOwner(e){if(!e)return r.makeHandle();this._graphicsOwners.push(e);const s=c.watch(()=>e.layer?.screenSizePerspectiveEnabled,()=>this._updateScreenSizePerspectiveEnabled());return this._updateScreenSizePerspectiveEnabled(),r.makeHandle(()=>{s.remove(),t.removeUnordered(this._graphicsOwners,e),this._updateScreenSizePerspectiveEnabled()})}_updateScreenSizePerspectiveEnabled(){const e=this._graphicsOwners.some(e=>!0===e.layer?.screenSizePerspectiveEnabled);if(e&&!this._screenSizePerspectiveHandles){this._screenSizePerspectiveHandles=new s;const e=()=>this._updateScreenSizePerspectiveSettings();this._screenSizePerspectiveHandles.add([c.watch(()=>this._pointsOfInterest.centerOnSurfaceInfrequent.distance,e,c.sync),this._viewState.events.on("camera-projection-changed",e)]),this._updateScreenSizePerspectiveSettings()}else e||(this._screenSizePerspectiveHandles=n.destroyMaybe(this._screenSizePerspectiveHandles))}_updateScreenSizePerspectiveSettings(){const e=this._pointsOfInterest;d.distance=e.centerOnSurfaceInfrequent.distance,d.fovY=this._viewState.camera.fovY,this.screenSizePerspectiveSettings.update(d),this.screenSizePerspectiveSettingsLabels.update(d),this._view.stage.renderView.requestRender()}get test(){}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});