// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../request","../../../core/Accessor","../../../core/arrayUtils","../../../core/Error","../../../core/has","../../../core/lang","../../../core/maybe","../../../core/promiseUtils","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/accessorSupport/decorators/subclass","./AsyncWorkerQueue","./ImageWithType","../terrain/TerrainData","../webgl-engine/lib/Util","../../support/Scheduler"],function(e,t,s,r,a,o,n,i,u,l,h,d,c,_,g,p,k,b){"use strict";e.StreamDataLoader=class extends r{constructor(){super(...arguments),this._tasks=new Map,this._onLoadQueue=new Array,this._doneQueue=new Array,this.updating=!1}setup(e,t,s){this._loadQueue=new _.AsyncWorkerQueue((e,t)=>this._startLoading(e,t),(e,t)=>this._doneLoadingCB(e,t),e,t),s&&(this._frameTask=s.registerTask(b.TaskPriority.STREAM_DATA_LOADER,this))}destroy(){this._frameTask=u.removeMaybe(this._frameTask),this._tasks.forEach(e=>u.abortMaybe(e.abortController)),this._loadQueue=u.destroyMaybe(this._loadQueue),this._onLoadQueue.length=0,this._onLoadQueue=null,this._doneQueue.length=0,this._doneQueue=null,this._tasks.forEach(e=>e.destroy()),this._tasks.clear(),this._tasks=null}hasDownloadSlots(e){return this._loadQueue.hasQuota(e)}request(e,t,s,r={}){const a=l.createResolver();return a.__signal=null!=r?r.signal:null,this._createOrUpdateTask(e,t,s,r,a),a.promise}_createTask(e,t,s,r,a,o){const n=new y(e,t,s,r,a);return this._updateTask(n,o),this._tasks.set(a,n),1===this._tasks.size&&this._set("updating",!0),this._loadQueue.push(n),n}_cancelRequest(e,t){const s=this._tasks.get(e);s&&(a.removeUnordered(s.resolvers,t),t.reject(l.createAbortError()),0===s.resolvers.length&&(2===s.status&&this._loadQueue.cancel(s),s.status=4,this._removeTask(s)))}_updateTask(e,t){e.resolvers.push(t)}_createOrUpdateTask(e,t,s,r,a){const o=function(e,t,s){return`${e}:${t}:${s}`}(r?.uid||e,t,s);let n=this._tasks.get(o);n?this._updateTask(n,a):(n=this._createTask(e,r,t,s,o,a),n.abortHandle=l.onAbort(r,()=>this._cancelRequest(o,a)))}_doneLoadingCB(e,t){this._loadQueue&&(k.assert(2===e.status),e.status=3,this._frameTask?this._doneQueue.push({task:e,err:t}):this._doneLoading(e,t))}get readyToRun(){return this._doneQueue.length>0||this._onLoadQueue.length>0}runTask(e){for(;!e.done&&this._onLoadQueue.length>0;){const t=this._onLoadQueue.shift();l.throwIfAborted(t.task.abortController),t.task.abortController=null,t.callback(t.task),e.madeProgress()}for(;!e.done&&this._doneQueue.length>0;){const t=this._doneQueue.shift();3!==t.task.status&&(t.err=t.err||l.createAbortError()),this._doneLoading(t.task,t.err),e.madeProgress()}}_doneLoading(e,t){if(t&&!l.isAbortError(t)&&e.numRetries>0)return--e.numRetries,void this._loadQueue.push(e);let s=p.isImageWithType(e.result)||e.result instanceof HTMLImageElement?0:e.resolvers.length;for(const r of e.resolvers)if(t)l.isAbortError(t)?r.reject(t):r.reject(new o("stream-data-loader:request-error",`Failed to request resource at '${e.url}'. ${t}`,{url:e.url,error:t}));else{--s;const t=s>0?i.clone(e.result):e.result;r.resolve(t)}this._removeTask(e)}_removeTask(e){this._tasks.delete(e.key),e.destroy(),0===this._tasks.size&&this._set("updating",!1)}_startLoading(e,t){if(4===e.status)return!1;let r,a;switch(e.startTime=performance.now(),e.status=2,e.docType){case 1:a="array-buffer",r=0;break;case 2:a="image";break;case 3:a="array-buffer";break;default:a="json"}e.abortController=new AbortController;const o=e.abortController.signal;e.request=s(e.url,{...e.options,responseType:a,timeout:r,signal:o});const n=s=>{e.duration=performance.now()-e.startTime,e.size=s instanceof ArrayBuffer?s.byteLength:e.size||0,e.result=s,this._frameTask?this._onLoadQueue.push({callback:t,task:e}):(e.abortController=null,t(e))},i=s=>{2===e.status&&t(e,s)};return 3!==e.docType?(e.request.then(e=>n(e.data),i),!0):(e.request.then(t=>{const u=t.data,l=function(e){if(e.byteLength<2)return"unknown";const t=new Uint8Array(e,0,e.byteLength);return 137===t[0]&&80===t[1]?"image/png":71===t[0]&&73===t[1]?"image/gif":66===t[0]&&77===t[1]?"image/bmp":255===t[0]&&216===t[1]?"image/jpeg":"unknown"}(u);if(a="image",e.size=u.byteLength,"unknown"===l)return e.request=s(e.url,{responseType:a,timeout:r,signal:o}),void e.request.then(e=>n(e.data),i);const h=new Blob([u],{type:l}),d=window.URL.createObjectURL(h);e.request=s(d,{responseType:a,timeout:r,signal:o}),e.request.then(e=>n(new g.ImageWithType(e.data,l)),i).finally(()=>window.URL.revokeObjectURL(d))},i),!0)}get test(){}},t.__decorate([h.property({readOnly:!0})],e.StreamDataLoader.prototype,"updating",void 0),e.StreamDataLoader=t.__decorate([c.subclass("esri.views.3d.support.StreamDataLoader")],e.StreamDataLoader);const m={numRetries:0};class y extends _.BaseTask{constructor(e,t,s,r,a){super(r),this.url=e,this.options=t,this.docType=s,this.key=a,this.abortHandle=null,this.result=null,this.status=1,this.request=null,this.abortController=null,this.resolvers=new Array,this.startTime=0,this.numRetries=m.numRetries}destroy(){this.result=null,this.request=null,this.abortController?.abort(),this.abortController=null,this.resolvers.length=0,this.options=null,this.abortHandle=u.removeMaybe(this.abortHandle)}}e.test=m,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});