// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Logger","../../../core/mathUtils","../../../core/libs/gl-matrix-2/math/mat4","../../../core/libs/gl-matrix-2/factories/mat4f64","../../../core/libs/gl-matrix-2/math/vec2","../../../core/libs/gl-matrix-2/factories/vec2f64","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../chunks/SunCalc","./mathUtils"],function(t,e,i,o,n,a,l,r,c,s,u){"use strict";const m={local:{altitude:1500,ambientAtNight:.1,ambientAtNoon:.45,ambientAtTwilight:.2,directAtNoon:.65,directAtTwilight:.7},global:{altitude:8e5,ambient:.015,direct:.75},planarDirection:{localAltitude:1e4,globalAltitude:1e6,globalAngles:{azimuth:1.3*Math.PI,altitude:.6*Math.PI}}};class f{constructor(t,e){this.direct=t,this.ambient=e}}function d(t,e,i){1===e?r.normalize(G,t.eye):r.set(G,0,0,1),r.scale(_,t.viewForward,-1);const n=u.angle(_,G),a=Math.max(n-2*X,0),l=.85*a/(a+1),c=Math.max(X,n-X-l);o.fromRotation(U,-c,t.viewRight),r.transformMat4(i,_,U),r.add(i,i,r.scale(k,t.viewRight,$)),r.normalize(i,i)}function g(t,e,n,a){const l=b,c=o.identity(h);if(1===n)s.SunCalc.getPosition(t,0,0,l),r.set(a,0,0,-1),o.rotateX(c,c,-l.azimuth),o.rotateY(c,c,-l.altitude),r.transformMat4(a,a,c);else{const n=m.planarDirection,u=n.globalAngles,f=e[2];let d=(Math.abs(f)-n.localAltitude)/(n.globalAltitude-n.localAltitude);d=i.clamp(d,0,1),d<1?(s.SunCalc.getPosition(t,e[1],e[0],l),l.azimuth=(1-d)*l.azimuth+d*u.azimuth,l.altitude=(1-d)*l.altitude+d*u.altitude):(l.azimuth=u.azimuth,l.altitude=u.altitude),r.set(a,0,-1,0),o.rotateZ(c,c,-l.azimuth),o.rotateX(c,c,-l.altitude),r.transformMat4(a,a,c)}}const p=c.fromValues(.5773502691896258,-.5773502691896258,.5773502691896258),h=n.create(),b={azimuth:0,altitude:0};function y(t){switch(t){case"disabled":case"sunny":case"cloudy":return new f(1,1);case"rainy":return new f(.4,1.2);case"snowy":return new f(.5,1.3);case"foggy":return new f(.2,1.6)}}function A(t,e){const i=(t[0]+t[1]+t[2])/3;t[0]+=(i-t[0])*e,t[1]+=(i-t[1])*e,t[2]+=(i-t[2])*e}const w=c.fromValues(.01,.01,.01),v=c.fromValues(1,.6,.5),M=c.fromValues(1,.98,.98),S=c.fromValues(1,1,1),x=c.fromValues(.8,.8,1),T=c.fromValues(.8,.8,1),V=c.fromValues(.98,.98,1),N=c.fromValues(1,1,1),O=l.fromValues(.01,m.local.ambientAtNight),z=l.fromValues(m.local.directAtTwilight,m.local.ambientAtTwilight),D=l.fromValues(.9*m.local.directAtNoon,m.local.ambientAtNoon),P=l.fromValues(m.local.directAtNoon,m.local.ambientAtNoon),C=D,I=M,E=V,L=z,H=v,R=T,F=new Date(0),U=n.create(),G=c.create(),_=c.create(),k=c.create(),X=.25,$=.2;t.ColorAndIntensity=class{constructor(){this.ambient={color:c.fromValues(1,1,1),intensity:.55},this.direct={color:c.fromValues(1,1,1),intensity:.55,directionToLightSource:c.clone(p)},this.noonFactor=.5,this.globalFactor=0,this.specularStrength=1,this.environmentStrength=1}},t.computeColorAndIntensity=function(t,e,o,n,u,f){r.set(f.ambient.color,1,1,1),f.ambient.intensity=m.global.ambient,r.set(f.direct.color,1,1,1),f.direct.intensity=m.global.direct;const p=e[2],h=i.clamp((Math.abs(p)-m.local.altitude)/(m.global.altitude-m.local.altitude),0,1);let b;if(f.globalFactor=h,null!=t&&(b=s.SunCalc.getTimes(t,e[1],e[0])),h<1){let e;if(null!=t)e=function(t,e,i){const o=t.valueOf();let n,u;e.polarException===s.SunCalc.PolarException.MIDNIGHT_SUN?(n=o-60*(t.getHours()+48)*60*1e3-60*t.getMinutes()*1e3,u=n+432e6):e.polarException===s.SunCalc.PolarException.POLAR_NIGHT?(n=o-2,u=o-1):(n=e.sunrise.valueOf(),u=e.sunset.valueOf());const m=u-n,f=n+m/2,d=m/4,g=f-d,p=f+d,h=.06*m,b=n-h/2,F=n+h/2,U=u-h/2,G=u+h/2,_=l.create(),k=c.create(),X=c.create();let $="";if(o<b||o>G)a.copy(_,O),r.copy(k,w),r.copy(X,x),$="night";else if(o<F){const t=(o-b)/(F-b);a.lerp(_,O,z,t),r.lerp(k,w,v,t),r.lerp(X,x,T,t),$="sun rising"}else if(o<g){const t=(o-F)/(g-F);a.lerp(_,z,D,t),r.lerp(k,v,M,t),r.lerp(X,T,V,t),$="early morning"}else if(o<f){const t=(o-g)/(f-g);a.lerp(_,D,P,t),r.lerp(k,M,S,t),r.lerp(X,V,N,t),$="late morning"}else if(o<p){const t=(o-f)/(p-f);a.lerp(_,P,C,t),r.lerp(k,S,I,t),r.lerp(X,N,E,t),$="early afternoon"}else if(o<U){const t=(o-p)/(U-p);a.lerp(_,C,L,t),r.lerp(k,I,H,t),r.lerp(X,E,R,t),$="late afternoon"}else if(o<G){const t=(o-U)/(G-U);a.lerp(_,L,O,t),r.lerp(k,H,w,t),r.lerp(X,R,x,t),$="sun setting"}let j=0;switch(i){case"rainy":case"foggy":j=.8;break;case"snowy":j=.5}j>0&&(A(k,j),A(X,j));const q=y(i);return{direct:{intensity:_[0]*q.direct,color:k},ambient:{intensity:_[1]*q.ambient,color:X},timeOfDay:$}}(t,b,n);else{const t=y(n);e={direct:{intensity:m.local.directAtNoon*t.direct,color:c.fromValues(1,1,1)},ambient:{intensity:m.local.ambientAtNoon*t.ambient,color:c.fromValues(1,1,1)},timeOfDay:"early afternoon"}}r.lerp(f.ambient.color,e.ambient.color,f.ambient.color,h),f.ambient.intensity=i.lerp(e.ambient.intensity,f.ambient.intensity,h),r.lerp(f.direct.color,e.direct.color,f.direct.color,h),f.direct.intensity=i.lerp(e.direct.intensity,f.direct.intensity,h),f.specularStrength="rainy"===n||"snowy"===n||"foggy"===n?0:1,f.environmentStrength="rainy"===n?.7:"snowy"===n||"foggy"===n?.75:1}f.noonFactor=null!=t?function(t,e){const o=t.valueOf();let n,a;e.polarException===s.SunCalc.PolarException.MIDNIGHT_SUN?(n=o-60*(t.getHours()+48)*60*1e3-60*t.getMinutes()*1e3,a=n+432e6):e.polarException===s.SunCalc.PolarException.POLAR_NIGHT?(n=o-2,a=o-1):(n=e.sunrise.valueOf(),a=e.sunset.valueOf());const l=n+(a-n)/2;return 1-i.clamp(Math.abs(o-l)/432e5,0,1)}(t,b):1,null!=t?g(t,e,o,f.direct.directionToLightSource):d(u,o,f.direct.directionToLightSource)},t.computeDirectionsOverTime=function(t,i,o,n,a,l){const r=t.getTime(),s=Math.max(0,i.getTime()-r),u=Math.floor(s/o)+1,m=Math.min(l,u),f=new Array(m),d=1===m?0:s/(m-1);u>m&&e.getLogger("esri.views.3d.support.sunUtils").warnOnce("computeDirectionsOverTime",`Requested interval ${o} exceeds maximum supported interval of ${Math.floor(d)} based on the provided time range.`);for(let t=0;t<m;++t)F.setTime(r+d*t),f[t]=c.create(),g(F,n,a,f[t]);return f},t.computeShadowsEnabled=function(t,e){if(1===e)return!0;const i=m.planarDirection;return Math.abs(t)<i.localAltitude},t.computeVirtualLightDirection=d,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});