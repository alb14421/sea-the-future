// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../geometry/support/float16","../../../../geometry/support/buffer/BufferView","../../../../geometry/support/buffer/types","./glUtil","../../webgl-engine/lib/Util","../../../webgl/VertexAttributeLocations"],function(e,t,i,r,f,s,u){"use strict";class n{constructor(e,t){this.layout=e,this.buffer="number"==typeof t?new ArrayBuffer(t*e.stride):t;for(const t of e.fields.keys()){const i=e.fields.get(t);this[t]=new i.constructor(this.buffer,i.offset,this.stride)}}get stride(){return this.layout.stride}get count(){return this.buffer.byteLength/this.stride}get byteLength(){return this.buffer.byteLength}getField(e,t){const i=this[e];return i&&i.elementCount===t.ElementCount&&i.elementType===t.ElementType?i:null}slice(e,t){return new n(this.layout,this.buffer.slice(e*this.stride,t*this.stride))}copyFrom(e,t=0,i=0,r=e.count){const f=this.stride;if(f%4==0){const s=new Uint32Array(e.buffer,t*f,r*f/4);new Uint32Array(this.buffer,i*f,r*f/4).set(s)}else{const s=new Uint8Array(e.buffer,t*f,r*f);new Uint8Array(this.buffer,i*f,r*f).set(s)}return this}get cachedMemory(){return this.byteLength}dispose(){}}class c{constructor(e){this._stride=0,this._fields=new Map,e&&(this._stride=e.stride,e.fields.forEach(e=>{return this._fields.set(e[0],{...e[1],constructor:(t=e[1].constructor,V.get(t))});var t}))}freeze(){return this}get locations(){return u.fromLayout(f.glLayout(this))}vec2f16(e,r){return this._appendField(e,t.hasNativeFloat16Array?i.BufferViewVec2f16:i.BufferViewVec2f,r),this}vec2f(e,t){return this._appendField(e,i.BufferViewVec2f,t),this}vec2f64(e,t){return this._appendField(e,i.BufferViewVec2f64,t),this}vec3f16(e,r){return this._appendField(e,t.hasNativeFloat16Array?i.BufferViewVec3f16:i.BufferViewVec3f,r),this}vec3f(e,t){return this._appendField(e,i.BufferViewVec3f,t),this}vec3f64(e,t){return this._appendField(e,i.BufferViewVec3f64,t),this}vec4f16(e,r){return this._appendField(e,t.hasNativeFloat16Array?i.BufferViewVec4f16:i.BufferViewVec4f,r),this}vec4f(e,t){return this._appendField(e,i.BufferViewVec4f,t),this}vec4f64(e,t){return this._appendField(e,i.BufferViewVec4f64,t),this}mat3f(e,t){return this._appendField(e,i.BufferViewMat3f,t),this}mat3f64(e,t){return this._appendField(e,i.BufferViewMat3f64,t),this}mat4f(e,t){return this._appendField(e,i.BufferViewMat4f,t),this}mat4f64(e,t){return this._appendField(e,i.BufferViewMat4f64,t),this}vec4u8(e,t){return this._appendField(e,i.BufferViewVec4u8,t),this}f16(e,r){return this._appendField(e,t.hasNativeFloat16Array?i.BufferViewFloat16:i.BufferViewFloat,r),this}f32(e,t){return this._appendField(e,i.BufferViewFloat,t),this}f64(e,t){return this._appendField(e,i.BufferViewFloat64,t),this}u8(e,t){return this._appendField(e,i.BufferViewUint8,t),this}u16(e,t){return this._appendField(e,i.BufferViewUint16,t),this}i8(e,t){return this._appendField(e,i.BufferViewInt8,t),this}vec2i8(e,t){return this._appendField(e,i.BufferViewVec2i8,t),this}vec2i16(e,t){return this._appendField(e,i.BufferViewVec2i16,t),this}vec2u8(e,t){return this._appendField(e,i.BufferViewVec2u8,t),this}vec2u16(e,t){return this._appendField(e,i.BufferViewVec2u16,t),this}vec4u16(e,t){return this._appendField(e,i.BufferViewVec4u16,t),this}u32(e,t){return this._appendField(e,i.BufferViewUint32,t),this}_appendField(e,t,i){this._fields.has(e)&&s.assert(!1,`${e} already added to vertex buffer layout`);const f=t.ElementCount*r.elementTypeSize(t.ElementType),u=this._stride;this._fields.set(e,{constructor:t,size:f,offset:u,optional:i}),this._alignFields()}_alignFields(){let e=0,t=1;this._fields.forEach(i=>{const f=r.elementTypeSize(i.constructor.ElementType);e=Math.floor((e+f-1)/f)*f,i.offset=e,e+=i.size,t=Math.max(t,f)}),e=Math.floor((e+t-1)/t)*t,this._stride=e}createBuffer(e){return new n(this,e)}createView(e){return new n(this,e)}clone(){const e=new c;return e._stride=this._stride,e._fields=new Map,this._fields.forEach((t,i)=>e._fields.set(i,t)),e.BufferType=this.BufferType,e}get stride(){return this._stride}get fields(){return this._fields}}const h=[i.BufferViewFloat,i.BufferViewVec2f,i.BufferViewVec3f,i.BufferViewVec4f,i.BufferViewMat3f,i.BufferViewMat4f,i.BufferViewFloat64,i.BufferViewVec2f64,i.BufferViewVec3f64,i.BufferViewVec4f64,i.BufferViewMat3f64,i.BufferViewMat4f64,i.BufferViewUint8,i.BufferViewVec2u8,i.BufferViewVec3u8,i.BufferViewVec4u8,i.BufferViewUint16,i.BufferViewVec2u16,i.BufferViewVec3u16,i.BufferViewVec4u16,i.BufferViewUint32,i.BufferViewVec2u32,i.BufferViewVec3u32,i.BufferViewVec4u32,i.BufferViewInt8,i.BufferViewVec2i8,i.BufferViewVec3i8,i.BufferViewVec4i8,i.BufferViewInt16,i.BufferViewVec2i16,i.BufferViewVec3i16,i.BufferViewVec4i16,i.BufferViewInt32,i.BufferViewVec2i32,i.BufferViewVec3i32,i.BufferViewVec4i32];function a(e){return`${e.ElementType}_${e.ElementCount}`}const V=new Map;h.forEach(e=>V.set(a(e),e)),e.InterleavedBuffer=n,e.InterleavedLayout=c,e.PackedLayout=class{constructor(e){this.fields=new Array,e.fields.forEach((e,t)=>{const i={...e,constructor:a(e.constructor)};this.fields.push([t,i])}),this.stride=e.stride}},e.newLayout=function(){return new c},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});