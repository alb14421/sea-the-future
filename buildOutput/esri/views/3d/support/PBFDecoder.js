// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/uid","../../../core/workers/WorkerHandle","../../../geometry/SpatialReference","../../../layers/support/Field"],function(e,r,s,t,o){"use strict";function a(e){switch(e.type){case"polyline":e.paths=e.hasZ&&e.hasM?e.paths.map(e=>e.map(e=>[e[0],e[1],e[2],e[3]])):e.hasZ||e.hasM?e.paths.map(e=>e.map(e=>[e[0],e[1],e[2]])):e.paths.map(e=>e.map(e=>[e[0],e[1]]));break;case"polygon":e.rings=e.hasZ&&e.hasM?e.rings.map(e=>e.map(e=>[e[0],e[1],e[2],e[3]])):e.hasZ||e.hasM?e.rings.map(e=>e.map(e=>[e[0],e[1],e[2]])):e.rings.map(e=>e.map(e=>[e[0],e[1]]))}}class n extends s.WorkerHandle{constructor(e){super("PBFDecoderWorker","_parseFeatureQuery",{_parseFeatureQuery:e=>[e.buffer]},e)}}e.PBFDecoder=class{constructor(e){this._controller=e,this._handle=new n(r=>e.schedule(r))}destroy(){this._handle.destroy()}invoke(e,s){return e.buffer&&0!==e.buffer.byteLength?(e.options.sourceSpatialReference&&e.options.sourceSpatialReference instanceof t&&(e.options={...e.options,sourceSpatialReference:e.options.sourceSpatialReference.toJSON()}),this._handle.invoke(e,s).then(e=>{let s=0,n=0;const c=t.fromJSON(e.spatialReference);e.spatialReference=c;const l=async t=>{const i=e.fields;if(i)for(;s<i.length;)if(i[s]=o.fromJSON(i[s]),s++,t.madeProgress())return this._controller.reschedule(e=>l(e));const p=e.features;for(;n<p.length;){const e=p[n];++n,e.uid=r.generateUID();const s=e.geometry;if(null!=s&&(s.spatialReference=c,a(s),t.madeProgress()))return this._controller.reschedule(e=>l(e))}return e};return this._controller.schedule(e=>l(e))})):Promise.resolve(null)}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});