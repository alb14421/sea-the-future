// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/Evented","../../../core/has","../../../core/MapUtils","../../../core/maybe","../../../core/PooledArray","../../../core/reactiveUtils","../../../core/SetUtils","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/math/mat4","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../support/debugFlags","./Overlay","./OverlayRenderTargets","../webgl/RenderCamera","../../../chunks/TextureOnly.glsl","../webgl-engine/effects/RenderPlugin","../webgl-engine/effects/highlight/Highlight","../webgl-engine/lib/GLMaterialRepository","../webgl-engine/lib/GridLocalOriginFactory","../webgl-engine/lib/RenderContext","../webgl-engine/lib/ShadowMap","../webgl-engine/lib/TextureTechnique","../webgl-engine/lib/TextureTechniqueConfiguration","../webgl-engine/lighting/Lightsources","../../../chunks/OverlayCompositing.glsl","../webgl-engine/shaders/OverlayCompositingTechnique","../../support/Scheduler","../../webgl/Texture","../../webgl/TextureDescriptor"],function(e,r,t,s,i,n,a,o,h,d,l,c,u,g,_,p,y,m,R,f,v,T,O,x,w,S,b,C,D,P,M,E,F,q,W){"use strict";e.OverlayRenderer=class extends T.SyncRenderPlugin{constructor(e){super(e),this._overlays=null,this._renderTargets=null,this._overlayParameters=new M.OverlayCompositingPassParameters,this.hasHighlights=!1,this.renderOccludedFlags=1,this._hasWater=!1,this._renderers=new Map,this._sortedDrapeSourceRenderersDirty=!1,this._sortedRenderers=new a,this._passParameters=new v.TextureOnlyPassParameters,this._screenToWorldRatio=1,this._localOriginFactory=null,this.unloadedMemory=0,this.ignoresMemoryFactor=!1,this._camera=new f,this.events=new t.EventEmitter,this.longitudeCyclical=null,this.produces=new Map([[18,e=>8!==e||this.hasHighlights],[19,()=>this._hasWater]]),this._hasTargetWithoutRasterImage=!1,this._hasDrapedFeatureSource=!1,this._hasDrapedRasterSource=!1,this._hasDrapedFlowSource=!1}initialize(){const e=this._view,r=e.stage,t=r.renderer.fboCache,{waterTextures:s,techniques:i}=r.renderView;this._renderContext=new S.RenderContext(this._rctx,new b.ShadowMap(t,e.state.viewingMode),i),this.addHandles([o.watch(()=>s.updating,()=>this.events.emit("content-changed"),o.syncAndInitial),o.watch(()=>this.spatialReference,e=>this._localOriginFactory=new w.GridLocalOriginFactory(e),o.syncAndInitial),o.on(()=>e.allLayerViews,"after-changes",()=>this._sortedDrapeSourceRenderersDirty=!0),o.watch(()=>O.trackHighlightOptions(e.state.highlights),()=>this._sortedDrapeSourceRenderersDirty=!0,o.initial),o.watch(()=>e.state.highlights,r=>{this._bindParameters.highlights=r,this._bindParameters.highlightOrderMap=e.state.highlightOrderMap},o.initial),e.resourceController.scheduler.registerTask(F.TaskPriority.OVERLAY_RENDERER,this)]);const{_bindParameters:n,_camera:a}=this;a.near=1,a.far=1e4,a.relativeElevation=null,n.slot=18,n.mainDepth=null,n.camera=a,n.oitPass=0,n.updateLighting([new P.AmbientLight(p.ones())],0,0,0)}destroy(){this._renderers.forEach(e=>e.destroy()),this._renderers.clear(),this._passParameters.texture=n.disposeMaybe(this._passParameters.texture),this.disposeOverlays(),this._renderContext=null,this._sortedRenderers.prune()}get _bindParameters(){return this._renderContext.bind}get _rctx(){return this._stage.renderView.renderingContext}get _view(){return this.parent.view}get _stage(){return this.parent.view.stage}get spatialReference(){return this.parent.spatialReference}get _techniques(){return this._stage.renderView.techniques}get rctx(){return this._rctx}get materials(){return this._pluginContext.materials}get screenToWorldRatio(){return this._screenToWorldRatio}get localOriginFactory(){return this._localOriginFactory}get pluginContext(){return this._pluginContext}initializeRenderContext(e){const r=new x.GLMaterialRepository(this._view.stage.renderView.textures,this._techniques,()=>{this._onMaterialOrContentChanged(),this.events.emit("content-changed"),this.notifyChange("updating"),this.notifyChange("isEmpty")},()=>this.events.emit("content-changed"));this._pluginContext={...e,materials:r},this._techniques.precompile(E.OverlayCompositingTechnique)}uninitializeRenderContext(){}acquireTechniques(){return[]}render(){}get updating(){return this._sortedDrapeSourceRenderersDirty||i.someMap(this._renderers,e=>e.updating||e.canCompact)}get hasOverlays(){return null!=this._overlays&&null!=this._renderTargets}getMaterialRenderer(e){for(const r of this._renderers.values()){const t=r.getMaterialRenderer(e);if(t)return t}return null}get layers(){return this._sortedDrapeSourceRenderersDirty&&this._updateSortedDrapeSourceRenderers(),this._sortedRenderers.map(e=>e.drapeSource.layer).filter(e=>!!e)}registerDrapeSource(e,r){const t=this._renderers.get(e);null!=t&&t.destroy(),this._renderers.set(e,r),this._sortedDrapeSourceRenderersDirty=!0,"fullOpacity"in e&&this.addHandles(o.watch(()=>e.fullOpacity,()=>this.events.emit("content-changed")),e)}removeDrapeSourceRenderer(e){if(null==e)return;const r=this._renderers.get(e);null!=r&&(this._sortedDrapeSourceRenderersDirty=!0,this._renderers.delete(e),this.removeHandles(e),r.destroy())}computeValidity(){return this._renderTargets?.computeValidity()??0}releaseRenderTargets(e){this._renderTargets?.dispose(e)}get overlays(){return this._overlays??[]}ensureDrapeTargets(e){this._hasTargetWithoutRasterImage=!!this._overlays&&h.someSet(e,e=>1===e.drapeTargetType)}ensureDrapeSources(e){this._overlays?(this._hasDrapedFeatureSource=h.someSet(e,e=>1===e.drapeSourceType),this._hasDrapedRasterSource=h.someSet(e,e=>0===e.drapeSourceType),this._hasDrapedFlowSource=h.someSet(e,e=>2===e.drapeSourceType)):this._hasDrapedFeatureSource=this._hasDrapedRasterSource=this._hasDrapedFlowSource=!1}get _needsColorWithoutRasterImage(){return this._hasDrapedRasterSource&&this._hasDrapedFeatureSource&&this._hasTargetWithoutRasterImage}ensureOverlays(e,r,t=this._bindParameters.overlayStretch){null==this._overlays&&(this._renderTargets=new R.OverlayRenderTargets(this._stage.renderer.fboCache),this._overlays=[new m.Overlay,new m.Overlay]),this.ensureDrapeTargets(e),this.ensureDrapeSources(r),this._bindParameters.overlayStretch=t}disposeOverlays(){this._overlays=null,this._renderTargets?.dispose(1),this._renderTargets=null,this.events.emit("textures-disposed")}_useOverlayColorInsteadOfColorNoRasterImage(e){return 1===e&&!this._needsColorWithoutRasterImage&&this._hasDrapedFeatureSource}getTexture(e){return this._useOverlayColorInsteadOfColorNoRasterImage(e)?this._renderTargets?.getTexture(0):this._renderTargets?.getTexture(e)}get readyToRun(){return this.updating}runTask(e){this._processDrapeSources(e,()=>!0)}_onMaterialOrContentChanged(){this.renderOccludedFlags=i.someMap(this._renderers,e=>e.hasOccluders)?k:1}_processDrapeSources(e,r){let t=!1;for(const[s,i]of this._renderers){if(e.done)break;(s.destroyed||r(s))&&i.commitChanges()&&(t=!0,e.madeProgress())}this._sortedDrapeSourceRenderersDirty&&(this._sortedDrapeSourceRenderersDirty=!1,t=!0,this._updateSortedDrapeSourceRenderers(),e.madeProgress()),this.compact(e),t&&(null!=this._overlays&&0===this._renderers.size&&this.disposeOverlays(),this.notifyChange("updating"),this.notifyChange("isEmpty"),this._onMaterialOrContentChanged(),this.hasHighlights=i.someMap(this._renderers,e=>e.hasHighlights),this.events.emit("content-changed"))}compact(e){let r=!1;for(const t of this._renderers.values()){if(e.done)break;r=t.compact(e)||r}return r&&this.notifyChange("updating"),r}hasHighlight(e){return i.someMap(this._renderers,r=>r.hasHighlight(e))}processSyncDrapeSources(){this._processDrapeSources(F.noBudget,e=>1===e.updatePolicy)}get isEmpty(){return!y.debugFlags.OVERLAY_DRAW_DEBUG_TEXTURE&&i.everyMap(this._renderers,e=>e.isEmpty)}get hasWater(){const e=i.someMap(this._renderers,({hasWater:e})=>e);return e!==this._hasWater&&(this._hasWater=e,this.events.emit("has-water")),this._hasWater}renders(e){if(y.debugFlags.OVERLAY_DRAW_DEBUG_TEXTURE&&4!==e&&2!==e)return!0;if(!this._overlays)return!1;const r=this._overlays[0];for(const e of this._overlays)e.setupGeometryViews(this.longitudeCyclical);if(!r.hasSomeSizedView())return!1;const t=this._renderContext.output;this._renderContext.output=this._renderTargets?.targets.find(r=>r.content===e)?.output??0,++this._techniques.precompiling;const s=this._sortedRenderers.some(({renderer:e})=>e.precompile(this._renderContext));return--this._techniques.precompiling,this._renderContext.output=t,s}get mode(){return this.isEmpty?0:this.hasWater&&this.renders(3)?2:this._renderTargets?.getTexture(0)?1:0}updateAnimation(e){let r=!1;return this._renderers.forEach(t=>r=t.updateAnimation(e)||r),r&&this.parent.requestRender(0),r}updateDrapeSourceOrder(){this._sortedDrapeSourceRenderersDirty=!0}precompileShaders(e){if(!this._overlays||!this._renderTargets)return!1;const r=this._bindParameters;r.alignPixelEnabled=e.alignPixelEnabled,++this._techniques.precompiling;for(const e of this._renderTargets.targets){if(1===e.content&&!this._needsColorWithoutRasterImage)continue;const t=e.output;this._renderContext.output=t,r.slot=3===t?19:18,8===t&&(r.highlightMixTexture=r.highlights.length>1?this._rctx.emptyTexture:null);const s=this._renderContext.renderOccludedMask;4===e.content&&(this._renderContext.renderOccludedMask=k),this._sortedRenderers.forAll(({drapeSource:r,renderer:t})=>{1===e.content&&0===r.drapeSourceType||4===e.content&&t.hasOnlyOccluders||t.precompile(this._renderContext)}),this._renderContext.renderOccludedMask=s,r.highlightMixTexture=null}return--this._techniques.precompiling,!0}drawOverlays(e,r){if(!this._overlays||!this._renderTargets)return;for(const e of this._overlays)e.setupGeometryViews(this.longitudeCyclical);this._bindParameters.alignPixelEnabled=e.alignPixelEnabled;const t=this.allSourcesOccluders;for(const e of this._renderTargets.targets){if((0!==e.content||!this._hasDrapedFlowSource)&&!e.handleRenderRequest(r)||1===e.content&&!this._needsColorWithoutRasterImage||4===e.content&&t)continue;const s=this._drawTarget(0,e),i=this._drawTarget(1,e);(s||i)&&e.fbo.generateMipMap()}}_drawTarget(e,r){const t=this._overlays[e],s=t.canvasGeometries;if(0===s.numViews)return!1;const i=this._view.state.contentPixelRatio;this._screenToWorldRatio=i*t.mapUnitsPerPixel/this._bindParameters.overlayStretch;const{output:n}=r;if(this.isEmpty||3===n&&!this.hasWater||!t.hasSomeSizedView())return!1;const{_rctx:a,_camera:o,_renderContext:h,_bindParameters:d}=this;if(o.pixelRatio=t.pixelRatio*i,h.output=n,d.screenToWorldRatio=this._screenToWorldRatio,d.screenToPCSRatio=this._screenToWorldRatio*this.parent.worldToPCSRatio,d.slot=3===n?19:18,4===r.content&&(h.renderOccludedMask=k),!this.renders(r.content))return h.renderOccludedMask=S.defaultRenderOccludedMask,!1;const{resolution:l}=t,c=0===e,u=c?0:l;if(a.setViewport(u,0,l,l),this._bindTargetFBO(r),c)if(8!==r.output)a.setClearColor(0,0,0,0),a.clear(16384);else{const{gl:e}=a;e.clearBufferuiv(e.COLOR,0,[0,0,0,0])}if(y.debugFlags.OVERLAY_DRAW_DEBUG_TEXTURE&&4!==r.content&&2!==r.content){this._techniques.precompile(C.TextureTechnique,G);const r=this._techniques.get(C.TextureTechnique,G);for(let i=0;i<s.numViews;i++)this._setViewParameters(s.extents[i],t),this._ensureDebugPatternResources(t.resolution,A[e]),a.bindTechnique(r,d,this._passParameters),a.screen.draw()}if(8===r.output){const{fboCache:t}=this._stage.renderer,s=this._resolution;this._bindTargetFBO(r),O.renderHighlightBuffer(a,t,{width:s,height:s},d,()=>this._renderAllGeometry(e,r),u)}else this._renderAllGeometry(e,r);return a.bindFramebuffer(null),h.renderOccludedMask=S.defaultRenderOccludedMask,!0}get allSourcesOccluders(){return i.everyMap(this._renderers,e=>e.hasOnlyOccluders)}_renderAllGeometry(e,r){const t=this._overlays[e],s=t.canvasGeometries;this._sortedRenderers.forAll(({drapeSource:i,renderer:n})=>{if(1===r.content&&0===i.drapeSourceType)return;const{fullOpacity:a}=i,o=null!=a&&a<1&&0===r.output&&this._bindTemporaryFBO();for(let e=0;e<s.numViews;e++)this._setViewParameters(s.extents[e],t),n.render(this._renderContext);if(o){this._bindTargetFBO(r),this._overlayParameters.texture=o.getTexture(),this._overlayParameters.opacity=a,this._overlayParameters.overlayIndex=e;const t=this._techniques.get(E.OverlayCompositingTechnique);this._rctx.bindTechnique(t,this._bindParameters,this._overlayParameters),this._rctx.screen.draw(),o.release()}})}_bindTargetFBO(e){const r=this._resolution,t=2*r;e.fbo.ensureFramebuffer(t,r),e.fbo.bind(this._rctx)}_bindTemporaryFBO(){const e=this._resolution,r=2*e,t=this._stage.renderer.fboCache,s=t.acquire(r,e,"overlay tmp");return t.rctx.bindFramebuffer(s.fbo),t.rctx.clear(16384),s}get _resolution(){return this._overlays?.[0].resolution??0}notifyContentChanged(){this.events.emit("content-changed")}intersect(e,r,t,s){this._sortedDrapeSourceRenderersDirty&&this._updateSortedDrapeSourceRenderers();let i=0;for(const{renderer:n}of this._sortedRenderers)i=n.intersect?.(e,r,t,s,i)??i}_updateSortedDrapeSourceRenderers(){if(this._sortedRenderers.clear(),0===this._renderers.size)return;const e=this._view.map.allLayers,r=e.length;this._renderers.forEach((t,s)=>{const i=e.indexOf(s.layer),n=i>=0,a=s.renderGroup??(n?0:1),o=s.drapeSourcePriorityOffset??0,h=r*a+(n?i:0)+o;this._sortedRenderers.push(new V(s,t,h))}),this._sortedRenderers.sort((e,r)=>e.index-r.index)}_setViewParameters(e,r){const t=this._camera;t.viewport=[0,0,r.resolution,r.resolution],g.ortho(t.projectionMatrix,0,e[2]-e[0],0,e[3]-e[1],t.near,t.far),g.fromTranslation(t.viewMatrix,[-e[0],-e[1],0])}_ensureDebugPatternResources(e,r){if(_.set(this._passParameters.color,r[0],r[1],r[2]),this._passParameters.texture)return;const t=new Uint8Array(e*e*4);let s=0;for(let r=0;r<e;r++)for(let i=0;i<e;i++){const n=Math.floor(i/10),a=Math.floor(r/10);n<2||a<2||10*n>e-20||10*a>e-20?(t[s++]=255,t[s++]=255,t[s++]=255,t[s++]=255):(t[s++]=255,t[s++]=255,t[s++]=255,t[s++]=1&n&&1&a?1&i^1&r?0:255:1&n^1&a?0:128)}const i=new W.TextureDescriptor(e);i.samplingMode=9728,this._passParameters.texture=new q.Texture(this._rctx,i,t)}get test(){}},r.__decorate([d.property()],e.OverlayRenderer.prototype,"hasHighlights",void 0),r.__decorate([d.property()],e.OverlayRenderer.prototype,"renderOccludedFlags",void 0),r.__decorate([d.property()],e.OverlayRenderer.prototype,"_sortedDrapeSourceRenderersDirty",void 0),r.__decorate([d.property({constructOnly:!0})],e.OverlayRenderer.prototype,"parent",void 0),r.__decorate([d.property({readOnly:!0})],e.OverlayRenderer.prototype,"_techniques",null),r.__decorate([d.property({type:Boolean,readOnly:!0})],e.OverlayRenderer.prototype,"updating",null),r.__decorate([d.property()],e.OverlayRenderer.prototype,"isEmpty",null),e.OverlayRenderer=r.__decorate([u.subclass("esri.views.3d.terrain.OverlayRenderer")],e.OverlayRenderer);class V{constructor(e,r,t){this.drapeSource=e,this.renderer=r,this.index=t}}const A=[[1,.5,.5],[.5,.5,1]],k=4,G=new D.TextureTechniqueConfiguration;G.hasAlpha=!0,e.drapedZ=-2,e.overlayRenderOccludedFlag=k,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});