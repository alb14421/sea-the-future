// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/Cyclical","../../../core/has","../../../core/mathUtils","../../../core/maybe","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/math/vec2","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../chunks/vec42","../../../core/libs/gl-matrix-2/factories/vec4f64","../../../geometry/ellipsoidUtils","../../../geometry/projection/projectVectorToVector","../../../geometry/support/aaBoundingRect","../../../geometry/support/ray","../../../chunks/sphere","../../../geometry/support/vector","../../../geometry/support/webMercatorUtils","../state/utils/viewUtils","../support/debugFlags","../support/debugUtils","./OverlayRenderer","../webgl-engine/lib/Intersector","../webgl-engine/lib/LocalOriginFactory","../webgl-engine/lib/SortedRenderGeometryRenderer","../webgl-engine/lib/textureUtils","../webgl-engine/parts/renderUtils","../../support/Scheduler","../../support/Yield"],function(e,t,r,s,i,a,n,o,l,c,h,d,u,p,y,g,_,v,m,f,R,w,x,O,S,P,T,M,D,b,I,C,E,U,A){"use strict";const V=[[-.1,-2,3.9,2],[-.1,-3.9,3.9,.1],[-2,-3.9,2,.1],[-3.9,-3.9,.1,.1],[-3.9,-2,.1,2],[-3.9,-.1,.1,3.9],[-2,-.1,2,3.9],[-.1,-.1,3.9,3.9]];let q;e.OverlayManager=class extends r{constructor(e){super(e),this._renderSR=null,this._overlaySREqualsRenderSR=!0,this._drapeSources=new Set,this._drapeTargets=new Set,this._placementDirty=!1,this._contentUpdated=!1,this._drawTexturesDirty=!1,this._drawTexturesAnimateDirty=!1,this._latestOriginId=0}initialize(){const e=this.view;this.renderer=new M.OverlayRenderer({parent:this}),e.stage.renderer.plugins.add(this.renderer);const t=()=>this.requestRender();this._groundIntersector=new D.Intersector(this.view.state.viewingMode),this._groundIntersector.options.backfacesTerrain=!0,this._groundIntersector.options.invisibleTerrain=!0,this._groundIntersector.options.hud=!1,this.addHandles([o.watch(()=>this.renderer.hasHighlights,t),this.renderer.events.on("has-water",()=>e.stage?.renderer.updateHasFlags()),this.renderer.events.on("content-changed",t),o.watch(()=>e.state.camera.pixelRatio,t),o.watch(()=>e.state.alignPixelEnabled,t),this.renderer.events.on("textures-disposed",()=>this.surface.requestRender()),o.watch(()=>[e.pointsOfInterest?.renderPointOfView,e.pointsOfInterest?.centerOnSurfaceFrequent?.location],()=>this.setPlacementDirty()),o.watch(()=>[e.state?.pixelRatio,e.state?.contentPixelRatio],()=>this.setPlacementDirty(),o.sync),this.surface.on("elevation-change",()=>this.setPlacementDirty()),e.on("resize",()=>this.setPlacementDirty()),e.resourceController.scheduler.registerTask(U.TaskPriority.OVERLAY,this)]),e.stage.renderer.overlay=this}destroy(){this.view?.stage&&(this.view.stage.renderer.plugins.remove(this.renderer),this.view.stage.renderer.overlay=null,n.destroyMaybe(this.renderer)),q&&(q.hide(),q=null),this.renderer=null}get spatialReference(){return this._spatialReference}set spatialReference(e){this._spatialReference=e,this.renderer.longitudeCyclical=null;const t=this.view.renderSpatialReference;null!=e&&null!=t?(this._renderSR=t,this._overlaySREqualsRenderSR=e.equals(this._renderSR),this._isSpherical&&(this.renderer.longitudeCyclical=e.isWebMercator?new s.Cyclical(-20037508.342787,20037508.342787):new s.Cyclical(-180,180))):this.renderer.disposeOverlays()}get readyToRun(){return this._placementDirty&&(this._drapeSources.size>0||this.view.graphics.length>0||P.debugFlags.OVERLAY_DRAW_DEBUG_TEXTURE)&&!!this._spatialReference&&!this.suspended&&this.surface.ready}get _isSpherical(){return this.view.state.isGlobal}get worldToPCSRatio(){return null!=this._spatialReference&&this._spatialReference.isGeographic&&!this.view.state.isLocal?v.getReferenceEllipsoid(this._spatialReference).metersPerDegree:1}get _overlayStretch(){return 1.3/this.view.resolutionScale}get _longitudeCyclical(){return this.renderer.longitudeCyclical}get suspended(){return this.surface.suspended}get updating(){return this.readyToRun||!!this.renderer?.updating||this._contentUpdated}render(){return this._contentUpdated=!1,this.renderer.processSyncDrapeSources(),this.renderer.precompileShaders(this.view.state)?this._drawOverlays():null}get hasOverlays(){return this.renderer.hasOverlays}registerDrapeSource(e,t){this._drapeSources.add(e),this.renderer.ensureOverlays(this._drapeTargets,this._drapeSources),this.renderer.registerDrapeSource(e,t),this._updateDrapeSourceExtent(e),this._setContentDirty(),this.notifyChange("readyToRun")}registerGeometryDrapeSource(e){const t=new I.SortedRenderGeometryRenderer({stage:this.view.stage,drapeSource:e,rendererContext:this.renderer});return this.registerDrapeSource(e,t),t}_updateDrapeSourceExtent(e){2===this.renderer.overlays.length&&null!=e.setDrapingExtent&&null!=this._spatialReference&&e.setDrapingExtent(this.renderer.overlays,this._spatialReference)}unregisterDrapeSource(e){this._drapeSources.has(e)&&(this._drapeSources.delete(e),this.renderer.removeDrapeSourceRenderer(e),this.renderer.ensureDrapeSources(this._drapeSources),this._setContentDirty(),this.notifyChange("readyToRun"))}registerDrapeTarget(e){this._drapeTargets.add(e),this.renderer.ensureOverlays(this._drapeTargets,this._drapeSources)}unregisterDrapeTarget(e){this._drapeTargets.delete(e),this.renderer.ensureDrapeTargets(this._drapeTargets)}_setContentDirty(){this.setPlacementDirty(),this.requestRender()}setPlacementDirty(){this._placementDirty=!0}runTask(e){return this.updateOverlays(e,this.view.state.contentCamera,1)}updateOverlays(e,t,r){if(!this._spatialReference)return A.Yield;const s=this._computeOverlayHeight(t);this._computeOverlayExtents(t,s,H),this.renderer.ensureOverlays(this._drapeTargets,this._drapeSources,H.stretch);const i=this._updateOverlay(0,H.inner,s,1*H.pixelRatioAdjustment,H.mapUnitsPerPixel),a=f.width(H.inner)/f.width(H.outer),n=this._updateOverlay(1,H.outer,s,a*H.pixelRatioAdjustment,H.mapUnitsPerPixel);1!==i&&1!==n||(this._drapeSources.forEach(e=>this._updateDrapeSourceExtent(e)),this.updateOverlayParameters(r)),0===i&&0===n||this.requestRender(),this._placementDirty=!1,e.madeProgress()}_computeOverlayHeight(e){const t=this.view.state.contentPixelRatio*this.view.resolutionScale,r=e.fullWidth/e.pixelRatio*t,s=e.fullHeight/e.pixelRatio*t,i=Math.ceil(1.5*Math.max(r,s)),{maxPreferredTexturePixels:a,maxTextureSize:n}=this.view.stage.renderView.renderingContext.parameters,o=.5*n;return C.applyTextureResizeModulo(C.ensureTextureSize({width:i,height:i},{maxPreferredTexturePixels:2*a,maxTextureSize:o})[1],o)}_updateOverlay(e,t,r,s,i){if(0===this.renderer.overlays.length)return 0;const a=this.renderer.overlays[e],n=a.mapUnitsPerPixel;if(a.mapUnitsPerPixel=i,a.pixelRatio=s,function(e,t){const r=P.debugFlags.TESTS_DISABLE_OPTIMIZATIONS?0:1e-5*Math.max(e[2]-e[0],e[3]-e[1],t[2]-t[0],t[3]-t[1]);return Math.abs(t[0]-e[0])<=r&&Math.abs(t[1]-e[1])<=r&&Math.abs(t[2]-e[2])<=r&&Math.abs(t[3]-e[3])<=r}(t,a.extent)&&r===a.resolution)return n===i?0:2;f.copy(a.extent,t),a.resolution=r;const o=f.center(a.extent);return a.renderLocalOrigin=b.fromValues(o[0],o[1],0,"OV_"+this._latestOriginId++),1}updateOverlayParameters(e){this.surface.allTiles.forAll(e=>this.updateTileOverlayParameters(e)),this.surface.requestRender(e)}updateTileOverlayParameters(e){if(!e.renderData)return;const t=e.renderData.overlay;if(0===this.renderer.overlays.length)this._clearTileOverlayData(0,t),this._clearTileOverlayData(1,t);else{const[r,s]=this.renderer.overlays,i=e.extent;this._rectInsideRect(r.extent,i)||this._rectanglesOverlap(i,r.extent)||this._rectanglesOverlap(i,s.extent)?(this._setTileOverlayData(i,0,t),this._setTileOverlayData(i,1,t)):(this._clearTileOverlayData(0,t),this._clearTileOverlayData(1,t))}}overlayPixelSizeInMapUnits(e,t){if(0===this.renderer.overlays.length)return t();const r=this.renderer.overlays[0],s=this.renderer.overlays[1],i=this._pointIsInExtent(e,r.extent)?r:s;return(i.extent[2]-i.extent[0])/i.resolution}_setTileOverlayData(e,t,r){if(0===this.renderer.overlays.length)return;const s=this.renderer.overlays[t].extent,i=f.width(s),a=f.height(s);let n=e[0];if(this._longitudeCyclical){n=this._longitudeCyclical.minimalMonotonic(s[0],n);const t=this._longitudeCyclical.minimalMonotonic(s[0],e[2]);n>t&&(n=t-(e[2]-e[0]))}r.setScale(t,f.width(e)/i,f.height(e)/a),r.setOffset(t,(n-s[0])/i,(e[1]-s[1])/a)}_clearTileOverlayData(e,t){t.setScale(e,-1,-1),t.setOffset(e,-1,-1)}reloadShaders(){E.removeLoadedShaderModules(),this.requestRender(),this.runTask(U.noBudget)}requestRender(e=1){this.renderer.hasOverlays?(1===e?(this._contentUpdated=!0,this._drawTexturesDirty=!0):this._drawTexturesAnimateDirty=!0,this.view.stage.renderView.requestRender(e)):this.setPlacementDirty()}_intersectGroundFromView(e,t,r,s,i){const a=this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(e,j,t,r);if(null==a)return!1;const n=a.origin,o=p.add(G,a.origin,a.direction);this._groundIntersector.reset(n,o,e),this._groundIntersector.intersect([]),this.view.basemapTerrain.intersect(this._groundIntersector,null,n,o);const l=this._groundIntersector.results.min;return l.getIntersectionPoint(i)&&l.withinDistance(s)}_findHorizonBasedPointOfInterest(e,t){let r=.5;const i=.55,n=this.view.renderCoordsHelper.getAltitude(e.eye),o=this.view.pointsOfInterest.centerOnSurfaceFrequent,l=1e-5,c=a.clamp(o.estimatedSurfaceAltitude,e.aboveGround?-1/0:n+l,e.aboveGround?n-l:1/0),h=e.aboveGround;if("global"===this.view.viewingMode){const t=G;w.closestPointOnSilhouette(w.fromRadius(w.tmpSphere,v.getReferenceEllipsoid(this.view.spatialReference).radius+c),R.wrap(e.eye,e.viewForward),t),p.subtract(t,t,e.eye);const a=s.cyclicalPI.normalize(x.angleAroundAxis(e.viewForward,t,e.viewRight))/e.fovY+.5,n=a<=0||a>=1?.5:i;r=h?n*a:a+n*(1-a)}else{const t=.5*Math.PI-Math.acos(-e.viewForward[2]),s=Math.tan(t),n=_.fromValues(0,s,1,0),o=g.transformMat4(n,n,e.projectionMatrix)[1],l=a.clamp(.5+.5*o,0,1);r=1===l||0===l?.5:h?l*i:1-(1-l)*i}return this._intersectGroundFromView(e,.5,r,o.distance,t)}_computeOverlayExtents(e,t,r){const s=this.view.pointsOfInterest.centerOnSurfaceFrequent.renderLocation,i=y.create();this._findHorizonBasedPointOfInterest(e,i)||p.copy(i,s),P.debugFlags.OVERLAY_SHOW_CENTER?(null==q&&(q=new T.DebugPoint(this.view.graphics,"red")),q.show(i,this._renderSR)):null!=q&&q.hide();const n=Math.max(.1,p.distance(e.eye,i)),o=S.viewAngle(this.view.renderCoordsHelper,s,e.eye);this._overlaySREqualsRenderSR||m.projectVectorToVector(i,this._renderSR,i,this._spatialReference);const l=this.surface.extent,c=!this._isSpherical&&this._spatialReference?.isGeographic,h=c&&this._spatialReference?1/v.getReferenceEllipsoid(this._spatialReference).metersPerDegree:1,d=this.view.state.contentPixelRatio,_=e.perScreenPixelRatio/d*n*h;r.mapUnitsPerPixel=_/this.worldToPCSRatio,r.stretch=this._overlayStretch;let R=t*_/2*r.stretch,w=!1,x=c?90:1/0;this._isSpherical&&l&&this._spatialReference&&(this._spatialReference.isWebMercator?(R/=Math.cos(O.y2lat(i[1])),x=l[3]):(w=!0,R/=v.getReferenceEllipsoid(this._spatialReference).metersPerDegree,x=90),R>=x&&(R=x,i[1]=0,this._spatialReference.isWebMercator&&(i[0]=0)));let M=1;w&&(M=1/Math.max(.2,Math.cos(Math.abs(a.deg2rad(i[1])))),R*M>180&&(M=180/R),r.mapUnitsPerPixel*=M);const D=Math.log(2)/12;R=Math.exp(Math.round(Math.log(R)/D)*D);const b=R*M,I=.5*t/(32*b),C=.5*t/(32*R);i[0]=Math.round(i[0]*I)/I,i[1]=Math.round(i[1]*C)/C;const E=r.inner;E[0]=i[0]-b,E[1]=i[1]-R,E[2]=i[0]+b,E[3]=i[1]+R,this._isSpherical&&this._shiftExtentToFitBounds(E,1/0,x);const U=r.outer;if(6*b>f.width(l))f.copy(U,l);else if(Math.PI/2-Math.abs(o-Math.PI/2)<=.25*Math.PI)U[0]=E[0]-b,U[1]=E[1]-R,U[2]=E[2]+b,U[3]=E[3]+R;else{m.projectVectorToVector(e.eye,this._renderSR,G,this._spatialReference),u.subtract(F,i,G);let t=-Math.atan2(F[1],F[0])+.125*Math.PI;t<0&&(t+=2*Math.PI);const r=Math.floor(t/(.25*Math.PI));g.scale(F,V[r],2*R),F[0]*=M,F[2]*=M,g.add(U,E,F)}if(this._isSpherical)U[0]=this._longitudeCyclical.clamp(U[0]),U[2]=this._longitudeCyclical.clamp(U[2]),U[1]=Math.max(U[1],-x),U[3]=Math.min(U[3],x);else{const e=f.intersection(E,l,z),t=f.intersection(U,l,L);f.contains(e,t)&&(U[2]=U[0],U[3]=U[1])}const A=Math.abs(E[2]-E[0])/t;r.mapUnitsPerPixel=Math.max(r.mapUnitsPerPixel,A),r.pixelRatioAdjustment=r.mapUnitsPerPixel/A}_drawOverlays(e=this.view.state){if(!this._drawTexturesDirty&&!this._drawTexturesAnimateDirty)return this.renderer;const t=!this._drawTexturesDirty&&this._drawTexturesAnimateDirty?0:1;this._drawTexturesDirty=this._drawTexturesAnimateDirty=!1;const r=this.renderer.computeValidity();return this.renderer.releaseRenderTargets(t),this.renderer.drawOverlays(e,t),r!==this.renderer.computeValidity()&&this.updateOverlayParameters(1),this.surface.requestRender(t),1===t&&this.surface.requestUpdate(),this.renderer}_rectanglesOverlap(e,t){return null!=e&&(this._longitudeCyclical?(this._longitudeCyclical.contains(t[0],t[2],e[0])||this._longitudeCyclical.contains(t[0],t[2],e[2])||this._longitudeCyclical.contains(e[0],e[2],t[0]))&&!(e[1]>t[3]||e[3]<t[1]):f.intersects(e,t))}_rectInsideRect(e,t){return null!=t&&(this._longitudeCyclical?this._longitudeCyclical.contains(e[0],e[2],t[0])&&this._longitudeCyclical.contains(e[0],e[2],t[2])&&t[1]>e[1]&&t[3]<e[3]:f.contains(e,t))}_pointIsInExtent(e,t){if(this._longitudeCyclical)return this._longitudeCyclical.contains(t[0],t[2],e.x)&&e.y>=t[1]&&e.y<=t[3];const r=e.x,s=e.y;return r>t[0]&&r<t[2]&&s>t[1]&&s<t[3]}_shiftExtentToFitBounds(e,t,r){let s=0,i=0;e[0]<-t?s=e[0]+t:e[2]>t&&(s=t-e[2]),e[1]<-r?i=e[1]+r:e[3]>r&&(i=r-e[3]),f.offset(e,s,i)}get test(){}},t.__decorate([l.property()],e.OverlayManager.prototype,"_spatialReference",void 0),t.__decorate([l.property({readOnly:!0})],e.OverlayManager.prototype,"readyToRun",null),t.__decorate([l.property()],e.OverlayManager.prototype,"_placementDirty",void 0),t.__decorate([l.property()],e.OverlayManager.prototype,"_contentUpdated",void 0),t.__decorate([l.property()],e.OverlayManager.prototype,"_isSpherical",null),t.__decorate([l.property()],e.OverlayManager.prototype,"worldToPCSRatio",null),t.__decorate([l.property()],e.OverlayManager.prototype,"renderer",void 0),t.__decorate([l.property({constructOnly:!0})],e.OverlayManager.prototype,"view",void 0),t.__decorate([l.property({constructOnly:!0})],e.OverlayManager.prototype,"surface",void 0),t.__decorate([l.property()],e.OverlayManager.prototype,"suspended",null),t.__decorate([l.property()],e.OverlayManager.prototype,"updating",null),e.OverlayManager=t.__decorate([d.subclass("esri.views.3d.terrain.OverlayManager")],e.OverlayManager);const F=_.create(),G=y.create(),H=new class{constructor(){this.inner=f.create(),this.outer=f.create(),this.mapUnitsPerPixel=0,this.pixelRatioAdjustment=1,this.stretch=1.3}},z=f.create(),L=f.create(),j=R.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});