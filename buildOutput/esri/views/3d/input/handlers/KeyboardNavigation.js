// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../state/controllers/GamepadKeyboardController","../../../input/InputHandler","../../../input/VisibilityChange"],function(t,i,e,n){"use strict";class o extends e.InputHandler{constructor(t,i){super(!0),this._view=t,this._keyToDirection=new Map,this._keyToAction=new Map,this._disableMovements={pan:!0,zoom:!1,ascend:!0,rotate:!1,mode:2},this._stickyKeyTimeoutHandle=void 0,this._stickyKeyDuration=200,this._addKeysMapping(i),this.registerIncoming("key-down",null,t=>this._handleKeyDown(t)),this.registerIncoming("key-up",null,t=>this._handleKeyUp(t)),this.registerIncoming("blur",null,()=>this._handleStop()),this._visibilityHandle=n.onVisibilityChange(t=>t?null:this._handleStop())}onUninstall(){this._visibilityHandle?.remove(),this._handleStop()}setStickyKeyDuration(t){this._stickyKeyDuration=t}_addKeysMapping(t){this._addKeyMapping(t.pan.left,0),this._addKeyMapping(t.pan.right,1),this._addKeyMapping(t.pan.forward,2),this._addKeyMapping(t.pan.backward,3),this._addKeyMapping(t.pan.up,4),this._addKeyMapping(t.pan.down,5),this._addKeyMapping(t.lookAround.headingLeft,6),this._addKeyMapping(t.lookAround.headingRight,7),this._addKeyMapping(t.lookAround.tiltUp,8),this._addKeyMapping(t.lookAround.tiltDown,9),this._addKeyMapping(t.zoom.zoomIn,10),this._addKeyMapping(t.zoom.zoomOut,11),this._addKeyAction(t.reset.heading,()=>this._resetHeading()),this._addKeyAction(t.reset.tilt,()=>this._resetTilt())}_addKeyMapping(t,i){for(const e of this._eachKey(t))this._keyToDirection.set(e,i)}*_eachKey(t){"string"==typeof t?yield t:yield*t}_addKeyAction(t,i){for(const e of this._eachKey(t))this._keyToAction.set(e,i)}_handleKeyDown(t){if(t.data.native.ctrlKey||t.data.native.metaKey)return;const e=this._keyToAction.get(t.data.key);if(null!=e)return t.stopPropagation(),void e();const n=this._keyToDirection.get(t.data.key);if(null!=n&&(this._cameraControllerKeyboard&&this._cameraControllerKeyboard.running||(this._cameraControllerKeyboard=new i.GamepadKeyboardController({view:this._view,disableMovements:this._disableMovements}),this._view.state.switchCameraController(this._cameraControllerKeyboard)),this._cameraControllerKeyboard.running)){if(t.stopPropagation(),this._cameraControllerKeyboard.directionActive(n))return;if(this._cameraControllerKeyboard.activateDirection(n),this._cameraControllerKeyboard.countActiveDirections()>1||!this._isPanning(n))return;this._stickyKeyDuration>0&&(this._stickyKeyTimeoutHandle=setTimeout(()=>{this._stickyKeyTimeoutHandle=void 0,null!=this._stickyDirection&&void 0!==this._stickyDirection&&(this._cameraControllerKeyboard?.deactivateDirection(this._stickyDirection),this._stickyDirection=void 0)},this._stickyKeyDuration))}}_handleStop(){this._cameraControllerKeyboard?.running&&(this._cameraControllerKeyboard.finishController(),this._cameraControllerKeyboard=null)}_handleKeyUp(t){if(t.data.native.ctrlKey||t.data.native.metaKey||!this._cameraControllerKeyboard?.running)return;const i=this._keyToDirection.get(t.data.key);if(null==i)return;t.stopPropagation();const e=void 0===this._stickyKeyTimeoutHandle;void 0===this._stickyKeyTimeoutHandle||1!==this._cameraControllerKeyboard?.countActiveDirections()?(this._cameraControllerKeyboard?.deactivateDirection(i),e&&(this._stickyDirection=void 0)):this._stickyDirection=i}_isPanning(t){return t<=3}_resetHeading(){this._view.goTo({heading:0}).catch(()=>{})}_resetTilt(){this._view.goTo({tilt:0}).catch(()=>{})}}t.KeyboardNavigation=o,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});