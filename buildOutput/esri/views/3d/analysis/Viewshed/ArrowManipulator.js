// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../Color","../../../../core/Handles","../../../../core/reactiveUtils","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../Slice/sliceToolConfig","./ViewshedConfiguration","../../interactive/Manipulator3D","../../interactive/RenderObject","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/materials/ColorMaterial"],function(e,t,r,i,o,a,n,l,s,c,u,d,h,m){"use strict";class f extends u.Manipulator3D{constructor(e,t){super({view:e,autoScaleRenderObjects:!1,worldSized:!1,radius:c.viewshedToolManipulatorConfiguration.collisionRadius}),this._handles=new r,this._setupManipulatorVisual(t)}destroy(){this._handles.remove(),super.destroy()}_setupManipulatorVisual(e){const t=this._createMaterial(),r=[l.fromValues(0,0,0),l.fromValues(0,0,1)],i=h.createTubeGeometry(t,r,e,16,!1),u=h.createTubeGeometry(t,r,e*s.displayFocusMultiplier,16,!1),m=p(!1,t,e),f=p(!0,t,e),w=a.create();o.fromTranslation(w,r[r.length-1]),o.mul(w,w,o.fromXRotation(g,Math.PI/2)),o.mul(w,w,o.fromYRotation(g,Math.PI/2)),m.transformation=w,f.transformation=w,this.renderObjects=[new d.RenderObject(i,1),new d.RenderObject(u,2),new d.RenderObject(m,1),new d.RenderObject(f,2)];const M=l.fromValues(0,c.viewshedToolManipulatorConfiguration.getScaleOrientArrowTipLength(!0),0),b=n.transformMat4(M,M,w),v=[...r,b];this.collisionType={type:"line",paths:[v]}}_createMaterial(){const e=new m.ColorMaterial({cullFace:2,renderOccluded:4,isDecoration:!0});return this._handles.add(i.watch(()=>t.toUnitRGBA(this.view.effectiveTheme.accentColor),t=>e.setParameters({color:t}),i.initial)),e}}function p(e,t,r){const i=c.viewshedToolManipulatorConfiguration.getScaleOrientArrowTipLength(e);let o=2*r;e&&(o*=s.displayFocusMultiplier);const a=i/2;return h.createExtrudedTriangle(t,i,a,a,o,0)}const g=a.create();e.ArrowManipulator=f,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});