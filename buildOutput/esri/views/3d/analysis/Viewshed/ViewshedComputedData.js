// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/mathUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/Point","./viewshedToolUtils"],function(e,t,r,o,a,i,p,s,d,n,c,h,l,u){"use strict";var y;e.ViewshedComputedData=y=class extends r{constructor(e){super(e),this.observerRenderSpaceOverride=null,this.needUpdateByFeature=!1}get observer(){return this.viewshed.observer??new l}get effectiveObserverRenderSpace(){return this.observerRenderSpaceOverride??this.observerRenderSpace}get effectiveObserver(){return this.renderSpaceToPoint(this.effectiveObserverRenderSpace,this.observer.spatialReference)}get effectiveTargetRenderSpace(){return this._computeTargetRenderSpace(this.effectiveObserverRenderSpace)}get farDistance(){return this.viewshed.farDistance}get farDistanceRenderSpace(){return this.farDistance/this.metersPerUnit}get heading(){return this.viewshed.heading}get tilt(){return this.viewshed.tilt}get feature(){return this.viewshed.feature}get tiltParallelToSurface(){return this.tilt-90}get horizontalFieldOfView(){return this.viewshed.horizontalFieldOfView}get verticalFieldOfView(){return this.viewshed.verticalFieldOfView}get observerRenderSpace(){return this._pointToRenderSpace(this.observer,h.create())}get target(){const e=this.targetRenderSpace;return this.renderSpaceToPoint(e,this.observer.spatialReference)}get targetRenderSpace(){return this._computeTargetRenderSpace(this.observerRenderSpace)}get targetDirection(){const e=c.sub(h.create(),this.targetRenderSpace,this.observerRenderSpace);return c.normalize(e,e)}get tiltedUpVector(){const e=u.rotateBy(h.create(),this.upVector,-o.deg2rad(this.tiltParallelToSurface),this.leftVector);return c.normalize(e,e)}get _basis(){return this.renderCoordsHelper.basisMatrixAtPosition(this.observerRenderSpace,n.create())}get upVector(){const e=this._basis;return h.fromValues(e[8],e[9],e[10])}get northVector(){const e=this._basis;return h.fromValues(e[4],e[5],e[6])}get leftVector(){const e=this.upVector,t=u.rotateBy(h.create(),this.northVector,-o.deg2rad(this.heading),e);return c.cross(t,e,t)}get rightVector(){return c.negate(h.create(),this.leftVector)}clone(){return new y({renderCoordsHelper:this.renderCoordsHelper,viewshed:this.viewshed.clone()})}get valid(){return this.viewshed.valid}get metersPerUnit(){return this.renderCoordsHelper.spatialReference.metersPerUnit}pointOnSphere(e,t,r){const{observerRenderSpace:a,targetRenderSpace:i}=this,p=c.sub(V,i,a);return u.rotateBy(p,p,-o.deg2rad(t),this.leftVector),u.rotateBy(p,p,-o.deg2rad(e),this.tiltedUpVector),c.add(r,p,a)}cornerPoints(e){const t=this.horizontalFieldOfView/2,r=this.verticalFieldOfView/2;this.pointOnSphere(-t,r,e.topLeft),this.pointOnSphere(t,r,e.topRight),this.pointOnSphere(-t,-r,e.bottomLeft),this.pointOnSphere(t,-r,e.bottomRight)}arcCentersPoints(e){const t=this.horizontalFieldOfView/2,r=this.verticalFieldOfView/2;this.pointOnSphere(0,r,e.top),this.pointOnSphere(0,-r,e.bottom),this.pointOnSphere(-t,0,e.left),this.pointOnSphere(t,0,e.right)}parallelCenterPoints(e){const t=this.observerRenderSpace,r=this.farDistanceRenderSpace*Math.sin(o.deg2rad(this.verticalFieldOfView/2)),a=c.scale(V,this.tiltedUpVector,r);c.add(e.top,t,a),c.sub(e.bottom,t,a)}renderSpaceToPoint(e,t){const r=V;return this.renderCoordsHelper.fromRenderCoords(e,r,t),new l(r[0],r[1],r[2],t)}_pointToRenderSpace(e,t){const r=h.fromArray(e.toArray());return this.renderCoordsHelper.toRenderCoords(r,e.spatialReference,t),t}_computeTargetRenderSpace(e){const{leftVector:t,northVector:r,upVector:a}=this,i=this.farDistanceRenderSpace,p=h.create();return c.scale(p,r,i),u.rotateBy(p,p,-o.deg2rad(this.heading),a),u.rotateBy(p,p,-o.deg2rad(this.tiltParallelToSurface),t),c.add(p,e,p),p}},t.__decorate([a.property()],e.ViewshedComputedData.prototype,"renderCoordsHelper",void 0),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"viewshed",void 0),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"observerRenderSpaceOverride",void 0),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"needUpdateByFeature",void 0),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"observer",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"effectiveObserverRenderSpace",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"effectiveObserver",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"effectiveTargetRenderSpace",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"farDistance",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"farDistanceRenderSpace",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"heading",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"tilt",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"feature",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"tiltParallelToSurface",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"horizontalFieldOfView",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"verticalFieldOfView",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"observerRenderSpace",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"target",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"targetRenderSpace",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"targetDirection",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"tiltedUpVector",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"_basis",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"upVector",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"northVector",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"leftVector",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"rightVector",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"valid",null),t.__decorate([a.property()],e.ViewshedComputedData.prototype,"metersPerUnit",null),e.ViewshedComputedData=y=t.__decorate([d.subclass("esri.views.3d.analysis.Viewshed.ViewshedComputedData")],e.ViewshedComputedData);const V=h.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});