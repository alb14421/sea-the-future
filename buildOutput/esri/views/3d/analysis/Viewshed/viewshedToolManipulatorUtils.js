// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../Color","../../../../core/Handles","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/Warning","../../../../core/Error","./ViewshedConfiguration","../../interactive/Manipulator3D","../../interactive/manipulatorUtils","../../interactive/RenderObject","../../webgl-engine/lib/GeometryUtil"],function(e,r,t,o,i,a,n,s,c,l,d,u,p,h,v,b){"use strict";class g extends p.Manipulator3D{constructor(e,r){super({view:e,autoScaleRenderObjects:!1,worldSized:!1,radius:u.viewshedToolManipulatorConfiguration.observerSize,interactive:!1}),this._handles=new o;const t=h.createManipulatorMaterial(this._color);this.renderObjects=[new v.RenderObject(b.createSphereGeometry(t,u.viewshedToolManipulatorConfiguration.observerSize,32,32))],r.manipulators.add(this),this._handles.add([i.watch(()=>this._color,e=>{t.setParameters({color:e})},i.initial)])}destroy(){this._handles.remove(),super.destroy()}get _color(){return t.toUnitRGBA(this.view.effectiveTheme.accentColor)}}r.__decorate([a.property()],g.prototype,"_color",null),e.ViewshedObserverManipulator=g,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});