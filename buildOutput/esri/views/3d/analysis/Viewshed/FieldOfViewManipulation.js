// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../Color","../../../../core/Handles","../../../../core/handleUtils","../../../../core/mathUtils","../../../../core/maybe","../../../../core/reactiveUtils","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../chunks/boundedPlane","./ViewshedConfiguration","./viewshedToolUtils","../../interactive/Manipulator3D","../../interactive/RenderObject","../../interactive/editingTools/manipulations/InteractiveManipulation","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/Util","../../webgl-engine/materials/RibbonLineMaterial","../../../interactive/dragEventPipeline"],function(t,e,a,i,r,o,n,l,s,c,u,d,h,p,f,m,g,M,_,b,v){"use strict";class w extends g.InteractiveManipulation{constructor(t){super(),this._handles=new a,this._tool=t.tool,this._view=t.view,this._focusedArcMaterial=this._createArcMaterial(!0),this._unfocusedArcMaterial=this._createArcMaterial(!1),this._createManipulators(),this.forEachManipulator(t=>this._tool.manipulators.add(t))}destroy(){this._handles=o.destroyMaybe(this._handles),this.forEachManipulator(t=>{this._tool.manipulators.remove(t),t.destroy()}),this._tool=null,this._view=null,this._manipulators=null}createDragPipeline(t,e){const a=Object.values(this._manipulators);return i.handlesGroup(a.map(({manipulator:a,side:i})=>v.createManipulatorDragEventPipeline(a,(a,r,o,n,l)=>{const s=function(t,{observerRenderSpace:e,targetRenderSpace:a,tiltedUpVector:i,rightVector:r,farDistanceRenderSpace:o}){const n=c.sub(T,a,e),l=R(t)?r:i,s=c.scale(E,l,o);return d.fromValues(e,n,s)}(i,e),u=r.next(t=>({...t,manipulatorType:2,side:i})),h=p.screenToCircleAngle(u,this._view,s,e);t(a,h,o)})))}updateManipulatorsTransform(t){t.arcCentersPoints(P),this._forEachManipulatorInfo(e=>this._updateArcManipulatorTransform(e,t,P[e.side]))}updateManipulatorVisuals(t){this._forEachManipulatorInfo(e=>this._updateArcManipulatorVisuals(e,t))}_updateArcManipulatorVisuals({manipulator:t,side:e},a){const i=[];if(null!=a){const[o,n]=function(t,e,a){const{horizontalFieldOfView:i,verticalFieldOfView:o}=e,n=R(t),l=(n?o:i)/2,s=r.deg2rad(r.clamp(l,0,15)),c=A(-s/2,s/2,n?1:Math.max(Math.sin(r.deg2rad(90-o/2)),.1));return[M.createPolylineGeometry(a,c),c]}(e,a,this._unfocusedArcMaterial);i.push(new m.RenderObject(o,1),new m.RenderObject(o.instantiate({material:this._focusedArcMaterial}),2)),t.collisionType={type:"line",paths:[n]}}t.renderObjects=i,t.radius=h.viewshedToolManipulatorConfiguration.collisionRadius}_updateArcManipulatorTransform({manipulator:t,side:e},a,i){const o=a.horizontalFieldOfView,n=r.deg2rad(a.verticalFieldOfView/2),u=r.deg2rad(o/2),d=R(e);t.renderLocation=i;const h=s.create(),f=t=>{l.multiply(h,t,h)};f(l.fromYRotation(O,r.deg2rad(-90))),d||f(l.fromXRotation(O,n));const m=a.farDistanceRenderSpace;let g,M;f(l.fromScaling(O,c.set(T,m,m,m))),f(l.fromZRotation(O,V(e))),f(p.getViewshedRotationMatrix(a,O)),d?(g=u,M=a.tiltedUpVector):(M=a.rightVector,g=n),g*="right"===e||"bottom"===e?-1:1;const _=l.fromRotation(O,g,M);null!=_&&f(_),t.modelTransform=h}_createManipulators(){const t=this._createArcManipulator("left"),e=this._createArcManipulator("right"),a=this._createArcManipulator("top"),i=this._createArcManipulator("bottom");this._manipulators={left:t,right:e,top:a,bottom:i},[[i.manipulator,a.manipulator],[t.manipulator,e.manipulator]].forEach(([t,e])=>{t.metadata={pairedManipulator:e},e.metadata={pairedManipulator:t}})}_createArcManipulator(t){const e=new f.Manipulator3D({view:this._view,autoScaleRenderObjects:!1,worldSized:!0}),a={manipulator:e,side:t};return this._updateArcManipulatorVisuals(a),this._handles.add(e.events.on("focus-changed",t=>{const a=e.metadata?.pairedManipulator;null!=a&&(a.hovering!==e.hovering&&(a.hovering=e.hovering),a.grabbing!==e.grabbing&&(a.grabbing=e.grabbing))})),a}_createArcMaterial(t){const a=h.viewshedToolManipulatorConfiguration.getFovArcWidth(t),i=new b.RibbonLineMaterial({renderOccluded:4,isDecoration:!0,width:a});return this._handles.add(n.watch(()=>e.toUnitRGBA(this._view.effectiveTheme.accentColor),t=>i.setParameters({color:t}),n.initial)),i}forEachManipulator(t){Object.values(this._manipulators).forEach(({manipulator:e})=>t(e,2))}_forEachManipulatorInfo(t){Object.values(this._manipulators).forEach(e=>t(e))}get test(){return{manipulators:this._manipulators}}}function A(t,e,a,i=10){_.assert(i>1,"createArcPolylineGeometry() needs at least 2 for numVertices");const r=e-t;if(r<=0||a<=0){const t=.01;return[u.fromValues(0,0,t),u.fromValues(0,0,-t)]}const o=[],n=r/i;for(let r=0;r<i;r++){let l=t+r*n;r===i-1&&(l=e);const s=Math.cos(l)*a,c=Math.sin(l)*a,d=u.fromValues(s-a,0,c);o.push(d)}return o}function V(t){return function(t){switch(t){case"left":return 0;case"bottom":return 1;case"right":return 2;case"top":return 3}}(t)*y}function R(t){return"left"===t||"right"===t}const y=Math.PI/2,O=s.create(),T=u.create(),E=u.create(),P={top:u.create(),bottom:u.create(),left:u.create(),right:u.create()};t.FieldOfViewManipulation=w,t.createArcPolylineVertices=A,t.flipSide=function(t){return"left"===t?"right":"right"===t?"left":"top"===t?"bottom":"top"},t.isSideHorizontal=R,t.sideToRad=V,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});