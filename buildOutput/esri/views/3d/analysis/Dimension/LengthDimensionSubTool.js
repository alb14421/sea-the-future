// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../Color","../../../../analysis/LengthDimension","../../../../core/Accessor","../../../../core/Handles","../../../../core/handleUtils","../../../../core/has","../../../../core/lang","../../../../core/mapCollectionUtils","../../../../core/maybe","../../../../core/memoize","../../../../core/promiseUtils","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/Logger","../../../../core/accessorSupport/decorators/subclass","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../core/support/UpdatingHandles","../../../../geometry/Point","../../../../layers/graphics/hydratedFeatures","./lengthDimensionConstraintUtils","./lengthDimensionManipulatorUtils","./lengthDimensionUtils","./settings","../images/Factory","../../interactive/SnappingVisualizer3D","../../interactive/visualElements/LineVisualElement","../../interactive/visualElements/VerticesVisualElement","../../webgl-engine/materials/ImageMaterial","../../webgl-engine/materials/lineStippleUtils","../../webgl-engine/materials/RibbonLineMaterial","../../../interactive/coordinateHelper","../../../interactive/editGeometry/EditGeometry","../../../interactive/editGeometry/EditGeometryOperations","../../../interactive/snapping/SnappingContext","../../../interactive/snapping/SnappingDragPipelineStep","../../../interactive/snapping/SnappingManagerPool","../../../interactive/snapping/SnappingOperation","../../../interactive/snapping/snappingUtils"],function(t,e,n,i,a,o,s,r,l,p,u,d,c,h,g,m,_,f,M,y,v,S,C,b,w,P,D,T,O,H,x,G,L,z,V,I,U,A,R,E){"use strict";t.LengthDimensionSubTool=class extends a{constructor(t){super(t),this._stagedDimension=null,this._computationManipulators=new Map,this._computationHandles=new o,this._updatingHandles=new M.UpdatingHandles,this._getSnappingContext=d.memoize(t=>new I.SnappingContext({elevationInfo:{mode:"absolute-height",offset:0},pointer:t,editGeometryOperations:new V.EditGeometryOperations(new z.EditGeometry("point",L.createCoordinateHelper(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new D.SnappingVisualizer3D}));const{view:e}=t;this._snappingManagerResult=A.acquire(e),this.addHandles(this._snappingManagerResult),this._unfocusedOffsetManipulatorMaterial=this._createOffsetManipulatorMaterial(),this._focusedOffsetManipulatorMaterial=this._createOffsetManipulatorMaterial(),this._thinOffsetManipulatorMaterial=this._createOffsetManipulatorMaterial(),this._thinOffsetManipulatorMaterial.setParameters({stipplePattern:x.createStipplePatternSimple(2)}),this._constraintSnappingIndicator=new T.LineVisualElement({view:e,attached:!0,width:1,renderOccluded:4,stipplePattern:x.createStipplePatternSimple(5),isDecoration:!0});const i=n.toUnitRGBA(w.disabledPointColor);this._stagedStartIndicator=new O.VerticesVisualElement({view:e,attached:!1,elevationInfo:{mode:"absolute-height",offset:0},spatialReference:t.view.renderCoordsHelper.spatialReference,color:i,size:2*w.pointRadius,outlineSize:0,renderOccluded:4,isDecoration:!0})}initialize(){const{view:t}=this;this._snappingOperation=new R.SnappingOperation({view:t});const e=w.getTransparentAccentColor(t.effectiveTheme),i=w.getContrastColor(t.effectiveTheme),a=!t.stage?.renderView.renderingContext.driverTest.svgPremultipliesAlpha.result;this._textureHandle=P.getRotateHeadingTexture(t.stage.textures,{accentColor:e,contrastColor:i,preMultiplyAlpha:a}),this._orientationManipulatorMaterial=new H.ImageMaterial({draped:!1,texture:this._textureHandle.texture,writeDepth:!1,renderOccluded:16,isDecoration:!0});const o=p.mapCollection(()=>this.analysisViewData.computations,({computation:t})=>this._createManipulators(t));this.addHandles([h.watch(()=>({accentColor:w.getTransparentAccentColor(t.effectiveTheme),contrastColor:w.getContrastColor(t.effectiveTheme)}),({accentColor:e,contrastColor:i})=>{const o=this._textureHandle;this._textureHandle=P.getRotateHeadingTexture(t.stage.textures,{accentColor:e,contrastColor:i,preMultiplyAlpha:a}),this._orientationManipulatorMaterial.setParameters({texture:this._textureHandle.texture}),o?.release();const s=n.toUnitRGBA(e);this._unfocusedOffsetManipulatorMaterial.setParameters({color:s}),this._focusedOffsetManipulatorMaterial.setParameters({color:s}),this._thinOffsetManipulatorMaterial.setParameters({color:s}),this._constraintSnappingIndicator.color=s},h.initial),s.destroyHandle(o),h.watch(()=>({stagedPoint:this._snappingOperation.stagedPoint,stagedComputation:this._stagedComputation}),({stagedPoint:t,stagedComputation:e})=>{if(null==e||null==t)return;const n=v.clonePoint(t,new y);this._applyPointUpdate(e,{endPoint:n})},h.sync),h.watch(()=>({stagedDimension:this._stagedDimension,selectedComputation:this.analysisViewData.selectedComputation,firstGrabbedManipulator:this.firstGrabbedManipulator}),(t,e)=>{const{stagedDimension:n,selectedComputation:i,firstGrabbedManipulator:a}=t;if(n===e?.stagedDimension&&a===e?.firstGrabbedManipulator){for(const n of[i,e?.selectedComputation])if(null!=n){const e=this._computationManipulators.get(n);null!=e&&this._updateManipulators(n,e,t)}}else for(const[e,n]of this._computationManipulators)this._updateManipulators(e,n,t)},h.syncAndInitial),h.watch(()=>this.analysis.style.lineSize,t=>this._updateManipulatorStyle(t),h.initial),h.watch(()=>this.view.state.camera,()=>{null!=this._stagedComputation&&this._updateStagedDimensionOffset(this._stagedComputation)}),h.watch(()=>{const t=this._stagedComputation;if(!t)return null;const e=t.elevationAlignedStartPoint,n=f.create();return null!=e&&this.view.renderCoordsHelper.toRenderCoords(e,n)?n:null},t=>{null!=t?(this._stagedStartIndicator.vertices=[t],this._stagedStartIndicator.attached=!0):this._stagedStartIndicator.attached=!1})]),this.addHandles(this._constraintHandles),this.addHandles(this._snappingIndicatorHandles),E.setupSnappingToggleHandles(this,()=>{const t=this._activeComputation,e=this._stagedComputation;if(null==t||null!=e){const t=this.view.inputManager.latestPointerType??"mouse",e=this._getSnappingContext(t);this._updatingHandles.addPromise(c.ignoreAbortErrors(this._snappingOperation.snapAgainNearPreviousMapPoint(this._snappingManager,e)))}if(null!=t){const{start:e,end:n}=this._computationManipulators.get(t);if(e.grabbing||n.grabbing){const n=e.grabbing?"start":"end",i=this._computeConstraint(t);S.reapplyConstraint(t,n,{constraint:i,view:this.view})}}})}destroy(){this._textureHandle=u.releaseMaybe(this._textureHandle),this._snappingOperation=u.destroyMaybe(this._snappingOperation),this._computationHandles.destroy(),this._constraintSnappingIndicator.destroy(),this._stagedStartIndicator.destroy(),this._orientationManipulatorMaterial.dispose()}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}get firstGrabbedManipulator(){return this.parentTool.firstGrabbedManipulator}get hasGrabbedManipulators(){return this.parentTool.hasGrabbedManipulators}get snappingOptions(){return this._snappingManager.options}get _snappingManager(){return this._snappingManagerResult.snappingManager}get _activeComputation(){if(null!=this._stagedComputation)return this._stagedComputation;const{selectedComputation:t}=this.analysisViewData;return this.hasGrabbedManipulators&&null!=t?t:null}get _stagedComputation(){const t=this._stagedDimension,e=this.analysisViewData.computations.at(-1)?.computation;return null==t||null==e||e.dimension!==t?null:e}get _constraintHandles(){return[h.when(()=>this.analysisViewData.selectedComputation,t=>{t.previousConstraint=this._computeConstraint(t)},{...h.syncAndInitial,equals:l.equals}),h.watch(()=>{const t=this._activeComputation;if(null==t)return null;const{measureType:e,orientation:n}=t.dimension;return{measureType:e,orientation:n,computation:t}},(t,e)=>{if(null!=t&&null==e){const{measureType:e,orientation:n,computation:i}=t;switch(i.previousConstraint){case 0:i.preConstraintProperties={measureType:"horizontal",orientation:0};break;case 1:i.preConstraintProperties={measureType:"vertical",orientation:0};break;case 2:i.preConstraintProperties={measureType:"direct",orientation:n};break;default:i.preConstraintProperties={measureType:e,orientation:n}}}null==t&&null!=e&&(e.computation.preConstraintProperties=null)},h.sync)]}get _snappingIndicatorHandles(){const t="snapping-indicator-event-handles";return[h.watch(()=>({stagedComputation:this._stagedComputation,activeComputation:this._activeComputation}),({stagedComputation:e,activeComputation:n})=>{const i=this._constraintSnappingIndicator;if(this.removeHandles(t),null!=n)if(n===e)i.attached=!0;else{const{start:e,end:a}=this._computationManipulators.get(n),o=()=>{i.attached=e.grabbing||a.grabbing};o(),this.addHandles([e.events.on("grab-changed",o),a.events.on("grab-changed",o)],t)}else i.attached=!1}),h.watch(()=>{const t=this._activeComputation;return null!=t?{geometry:t.geometry,constraint:t.previousConstraint}:{}},({geometry:t,constraint:e})=>{const n=this._constraintSnappingIndicator;null!=t&&null!=e&&2!==e?(n.visible=!0,n.setGeometryFromSegment(t.directSegment)):n.visible=!1})]}removeStaged(){return null!=this._stagedDimension&&(this.analysis.dimensions.remove(this._stagedDimension),this._stagedDimension=null,!0)}onDeactivate(){this.removeStaged(),this._resetSnappingState()}onClick(t){const{_stagedDimension:e}=this;if(null==e){const e=this._onUnstagedClick(t);return this.analysis.dimensions.add(e),null}return this._onStagedClick(t),e}onPointerMove({mapPoint:t,pointerType:e}){if("touch"===e)return;const n=this._getSnappingContext(e);this._updatingHandles.addPromise(c.ignoreAbortErrors(this._snappingOperation.snap({point:t},this._snappingManager,n)))}onManipulatorSelectionChanged(){null!=this.analysisViewData.selectedComputation&&(this._computationManipulators.get(this.analysisViewData.selectedComputation).offset.selected||(this.analysisViewData.selectedDimension=null))}_onUnstagedClick({mapPoint:t,pointerType:e}){let n=t;if("mouse"===e){const i=this._getSnappingContext(e);n=this._snappingManager.update({point:t,context:i})}const a=new i({startPoint:v.clonePoint(n,new y),endPoint:null,measureType:"horizontal"});return this._stagedDimension=a,this._resetSnappingState(),a}_onStagedClick({mapPoint:t,pointerType:e}){const n=this._stagedComputation;if(null==n)return;let i=t;if("mouse"===e){const n=this._getSnappingContext(e);i=this._snappingManager.update({point:t,context:n})}const a=v.clonePoint(i,new y);this._applyPointUpdate(n,{endPoint:a}),this._stagedDimension=null,this._resetSnappingState()}_resetSnappingState(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null}_createManipulators(t){const e=this._setupPointManipulator(t,{isStart:!0}),n=this._setupPointManipulator(t,{isStart:!1}),i=this._setupOffsetManipulator(t),a=this._setupHeadingManipulator(t),o=this._setupRotationManipulator(t),r=this._setupMeasureTypeManipulator(t,"direct"),l=this._setupMeasureTypeManipulator(t,"horizontal"),p=this._setupMeasureTypeManipulator(t,"vertical"),u=new C.LengthDimensionManipulators({start:e,end:n,offset:i,heading:a,rotation:o,direct:r,horizontal:l,vertical:p});this._setupComputationToManipulatorsSync(t,u),this._computationManipulators.set(t,u),this.manipulators.addMany(u.values());const d=s.handlesGroup(u.values().map(t=>t.events.on("focus-changed",()=>{u.values().some(t=>t.focused)&&this._resetSnappingState()})));return{manipulators:u,remove:()=>{d.remove(),this._computationHandles.remove(t),this._computationManipulators.delete(t);for(const t of u.values())this.manipulators.remove(t)}}}_setupComputationToManipulatorsSync(t,e){this._computationHandles.add([h.watch(()=>t.geometry,()=>this._updateManipulators(t,e),{...h.syncAndInitial,equals:l.equals})],t)}_setupPointManipulator(t,e){const{view:n}=this,{dimension:i}=t,a=new C.LengthDimensionPointManipulator(n,{metadata:i}),o=C.pointManipulatorHandles(a,{isStart:e.isStart,createSnappingPipelineStep:t=>U.createSnapDragEventPipelineStep({snappingContext:this._getSnappingContext(t),snappingManager:this._snappingManager,updatingHandles:this._updatingHandles}),dimension:i,onUpdate:e=>this._applyPointUpdate(t,e),view:n});return this._computationHandles.add(o,t),a}_setupOffsetManipulator(t){const{view:e}=this,n=C.createOffsetManipulator(e,{lineSizePt:this.analysis.style.lineSize,unfocusedMaterial:this._unfocusedOffsetManipulatorMaterial,focusedMaterial:this._focusedOffsetManipulatorMaterial,metadata:t.dimension}),i=C.offsetManipulatorHandles(n,{computation:t,view:e});return this._computationHandles.add(i,t),n}_setupHeadingManipulator(t){const{view:e}=this,n=new C.LineOfSightOrientationManipulator(e,{lineSizePt:this.analysis.style.lineSize,material:this._orientationManipulatorMaterial,metadata:t.dimension}),i=C.headingManipulatorHandles(n,{computation:t,view:e});return this._computationHandles.add(i,t),n}_setupRotationManipulator(t){const{view:e}=this,n=new C.LineOfSightOrientationManipulator(e,{lineSizePt:this.analysis.style.lineSize,material:this._orientationManipulatorMaterial,metadata:t.dimension}),i=C.rotationManipulatorHandles(n,{computation:t,view:e});return this._computationHandles.add(i,t),n}_setupMeasureTypeManipulator(t,e){const{view:n}=this,i=C.createMeasureTypeManipulator(n,{lineSizePt:this.analysis.style.lineSize,unfocusedMaterial:this._unfocusedOffsetManipulatorMaterial,focusedMaterial:this._focusedOffsetManipulatorMaterial,thinOffsetManipulatorMaterial:this._thinOffsetManipulatorMaterial,metadata:t.dimension}),a=C.measureTypeManipulatorHandles(i,{computation:t,manipulatorMeasureType:e,view:n});return this._computationHandles.add(a,t),i}_updateManipulators(t,e,n={stagedDimension:this._stagedDimension,selectedComputation:this.analysisViewData.selectedComputation,firstGrabbedManipulator:this.firstGrabbedManipulator}){const{stagedDimension:i,selectedComputation:a,firstGrabbedManipulator:o}=n,{start:s,end:r,offset:l,heading:p,rotation:u}=e,d=a===t,c=b.isValidComputation(t),{dimension:h}=t;for(const t of e.values()){const e=c&&null==i&&(null==o||t===o);t===l?(t.available=e,t.selected=d):t.available=e&&d}if(!c)return;null!=this._computeConstraint(t)?e.forEachMeasureTypeManipulator(t=>t.available=!1):e.manipulatorForMeasureType(h.measureType).available=!1;for(const t of[p,u])"direct"===h.measureType&&0!==h.offset||(t.available=!1);b.arePointsVerticallyAligned(t)?u.available=!1:p.available=!1;const{geometry:g}=t;s.renderLocation=g.directSegment.startRenderSpace,r.renderLocation=g.directSegment.endRenderSpace;const{renderCoordsHelper:m}=this.view;C.updateOffsetManipulatorTransform(l,g,m),p.available&&C.updateHeadingManipulatorTransform(p,t,m),u.available&&C.updateRotationManipulatorTransform(u,t,m),e.forEachMeasureTypeManipulator((e,n)=>{e.available&&C.updateMeasureTypeManipulatorTransform(e,t,n,m)})}_updateManipulatorStyle(t){const e=C.unfocusedOffsetWidth(t),n=C.focusedOffsetWidth(t),i={lineSizePt:t,material:this._orientationManipulatorMaterial};for(const{offset:t,heading:e,rotation:a}of this._computationManipulators.values())t.radius=n/2,e.update(i),a.update(i);this._unfocusedOffsetManipulatorMaterial.setParameters({width:e}),this._focusedOffsetManipulatorMaterial.setParameters({width:n})}_applyPointUpdate(t,e){const{view:n}=this,i=b.computationToGeometryDependencies(t);"startPoint"in e&&(i.elevationAlignedStartPoint=e.startPoint),"endPoint"in e&&(i.elevationAlignedEndPoint=e.endPoint);const a=b.computeGeometryFromDimension(i,n.renderCoordsHelper);if(null==a)return;const o=this._computeConstraint({...i,geometry:a});S.applyConstraint(t,e,{...i,constraint:o,unconstrainedGeometry:a,view:n}),t===this._stagedComputation&&this._updateStagedDimensionOffset(t)}_updateStagedDimensionOffset(t){if(null==t.geometry)return;t.geometry.directSegment.eval(.5,k);const{state:e,renderCoordsHelper:n}=this.view,i=e.camera.computeScreenPixelSizeAt(k);t.dimension.offset=w.initialOffsetPx*i*n.unitInMeters}_computeConstraint(t){return S.computeConstraint(S.constraintDependencies(t,this._snappingManager.options),this.view)}_createOffsetManipulatorMaterial(){return new G.RibbonLineMaterial({width:1,renderOccluded:4,writeDepth:!1,hasPolygonOffset:!0,isDecoration:!0})}get test(){}},e.__decorate([g.property({constructOnly:!0})],t.LengthDimensionSubTool.prototype,"analysis",void 0),e.__decorate([g.property({constructOnly:!0})],t.LengthDimensionSubTool.prototype,"analysisViewData",void 0),e.__decorate([g.property({constructOnly:!0})],t.LengthDimensionSubTool.prototype,"manipulators",void 0),e.__decorate([g.property({constructOnly:!0})],t.LengthDimensionSubTool.prototype,"parentTool",void 0),e.__decorate([g.property({constructOnly:!0,nonNullable:!0})],t.LengthDimensionSubTool.prototype,"view",void 0),e.__decorate([g.property({readOnly:!0})],t.LengthDimensionSubTool.prototype,"updating",null),e.__decorate([g.property()],t.LengthDimensionSubTool.prototype,"firstGrabbedManipulator",null),e.__decorate([g.property()],t.LengthDimensionSubTool.prototype,"hasGrabbedManipulators",null),e.__decorate([g.property()],t.LengthDimensionSubTool.prototype,"snappingOptions",null),e.__decorate([g.property()],t.LengthDimensionSubTool.prototype,"_stagedDimension",void 0),e.__decorate([g.property()],t.LengthDimensionSubTool.prototype,"_activeComputation",null),e.__decorate([g.property()],t.LengthDimensionSubTool.prototype,"_stagedComputation",null),t.LengthDimensionSubTool=e.__decorate([_.subclass("esri.views.3d.analysis.Dimension.LengthDimensionSubTool")],t.LengthDimensionSubTool);const k=f.create();Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});