// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/Evented","../../../../../core/Logger","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/has","../../../../../core/RandomLCG","../../../../../core/accessorSupport/decorators/subclass","../../../../../geometry/Point","../../../../../geometry/projectionUtils","../../../../../geometry/support/aaBoundingRect","../../support/projectionUtils","../../../../interactive/coordinateHelper","../../../../interactive/editGeometry/EditGeometry","../../../../interactive/editGeometry/EditGeometryOperations"],function(e,t,r,i,o,s,n,a,l,c,h,u,p,d,m,y){"use strict";e.AreaMeasurement3DPathHelper=class extends r.EventedAccessor{constructor(e={}){super(e),this._version=0,this._internalGeometryChange=!1,this._extent=u.empty()}set areaMeasurement(e){this._set("areaMeasurement",e),null!=e&&null!=this.view&&this._initialize(e,this.view)}set view(e){this._set("view",e),null!=e&&null!=this.areaMeasurement&&this._initialize(this.areaMeasurement,e)}get constructed(){return null!=this.areaMeasurement&&null!=this.view}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||0===this._editGeometry.parts.length}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.parts[0]?.vertices.length){const e=u.empty(this._extent);return this.forEachVertex(t=>{u.expandPointInPlace(e,t.pos)}),e}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(e,t){this.removeAllHandles(),this.addHandles(o.watch(()=>e.geometry,()=>{this._updateEditGeometryFromModelGeometry(e,t)},o.syncAndInitial)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,t){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let r=e.geometry;if(null!=r){const o=h.tryProjectWithZConversion(r,t.spatialReference);null==o&&p.logFailedGeometryProjectionError(e,r.spatialReference,i.getLogger(this)),r=o}this._editGeometryOperations=null!=r?y.EditGeometryOperations.fromGeometry(r,t.state.viewingMode):new y.EditGeometryOperations(new m.EditGeometry("polygon",d.createCoordinateHelper(!0,!1,t.spatialReference)),t.state.viewingMode),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",t=>{this._makeDirty(null!=t.addedVertices||null!=t.removedVertices),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex(t=>{e.push(t)}),e}get numVertices(){return this.constructed?this._editGeometry.parts[0]?.vertices.length??0:0}get polygonIsClosed(){return this._editGeometry.parts[0]?.isClosed()??!1}get firstPoint(){if(this.constructed){const{coordinateHelper:e,parts:t}=this._editGeometry,r=t[0]?.getFirstVertex();if(null!=r)return e.vectorToPoint(r.pos)}return null}get lastPoint(){if(this.constructed){const{coordinateHelper:e,parts:t}=this._editGeometry,r=t[0]?.getLastVertex();if(null!=r)return e.vectorToPoint(r.pos)}return null}getVertex(e){if(!this.constructed||!this._editGeometry.parts[0]?.vertices.length)return null;const t=this._editGeometry.parts[0].vertices[0];let r=t;do{if(r.index===e)return r;r=r.rightSegment.rightVertex}while(r!==t&&null!=r);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){if(this.constructed&&this._editGeometry.parts.length>0)for(const t of this._editGeometry.parts[0].iterateVertices())e(t,t.index)}forEachVertexPosition(e){const t=this._editGeometry.coordinateHelper;this.forEachVertex((r,i)=>{t.vectorToPoint(r.pos,g),e(g,i)})}clear(){null!=this.areaMeasurement&&(this.areaMeasurement.geometry=null)}add(e){if(!this.constructed)return null;if(0===this._editGeometry.parts.length){const e=this.view;this._editGeometry.parts.push(new m.Part(e.spatialReference,e.state.viewingMode))}const t=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),t}close(){if(!this.constructed||0===this._editGeometry.parts.length)return null;const e=this._editGeometryOperations.closePart(this._editGeometry.parts[0]);return this.emit("change"),e}ensureContains(e,t=""){let r=!1;if(this._editGeometry.parts.forEach(t=>{for(const i of t.iterateVertices())i===e&&(r=!0)}),!r)throw new Error(`vertex doesn't exist ${t}`);return r}setVertexPosition(e,t){if(!this.constructed)return null;const r=this._editGeometryOperations.setVertexPosition(e,this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),r}equals(e){if(this.numVertices!==e.numVertices)return!1;let t=!0;return this.forEachVertexPosition((r,i)=>{const o=e.getVertexPositionAsPointFromIndex(i);r.equals(o)||(t=!1)}),!!t}},t.__decorate([s.property({value:null})],e.AreaMeasurement3DPathHelper.prototype,"areaMeasurement",null),t.__decorate([s.property({value:null})],e.AreaMeasurement3DPathHelper.prototype,"view",null),t.__decorate([s.property()],e.AreaMeasurement3DPathHelper.prototype,"isEmptyPolygon",null),t.__decorate([s.property()],e.AreaMeasurement3DPathHelper.prototype,"isValidPolygon",null),t.__decorate([s.property()],e.AreaMeasurement3DPathHelper.prototype,"extent",null),t.__decorate([s.property()],e.AreaMeasurement3DPathHelper.prototype,"spatialReference",null),t.__decorate([s.property()],e.AreaMeasurement3DPathHelper.prototype,"numVertices",null),t.__decorate([s.property()],e.AreaMeasurement3DPathHelper.prototype,"polygonIsClosed",null),e.AreaMeasurement3DPathHelper=t.__decorate([l.subclass("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementPathHelper")],e.AreaMeasurement3DPathHelper);const g=new c;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});