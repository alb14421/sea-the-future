// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../analysis/SlicePlane","../../../../core/Accessor","../../../../core/Logger","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/boundedPlane","../../../../layers/Layer","../../../../layers/buildingSublayers/BuildingComponentSublayer","./sliceToolUtils","../support/projectionUtils","../../terrain/isTerrainSurfaceLayer"],function(e,i,a,t,l,s,n,r,o,c,h,u,d,p,y,w){"use strict";e.SliceController=class extends t{constructor(e){super(e),this._internalChange=!1,this._currentSlicePlane=null}initialize(){var e;this.addHandles(this.analysis.excludedLayers.on("before-add",e=>{const i=e.item;null!=i&&(i instanceof u||i instanceof d)?i instanceof u&&w.isTerrainSurfaceLayer(i)?(l.getLogger(this).error("excludedLayers",`Layer '${i.title}, id:${i.id}' of type '${i.type}' can not be individually excluded from slicing. Use 'excludeGroundSurface' instead.`),e.preventDefault()):this.analysis.excludedLayers.includes(i)&&e.preventDefault():(l.getLogger(this).error("excludedLayers","Invalid layer type, layer must derive from Layer or BuildingComponentSublayer"),e.preventDefault())})),e=this.view,v.has(e)||v.set(e,{all:[],activeController:null}),v.get(e)?.all.push(this),this.addHandles([s.watch(()=>this.analysisViewData.plane,()=>{this._internalChange||this._updateSlicePlaneFromBoundedPlane(),this._updateLayerViews()},s.sync),s.watch(()=>this.analysis.excludeGroundSurface,()=>this._updateLayerViews(),s.sync),this.analysis.excludedLayers.on("change",()=>this._updateLayerViews()),s.watch(()=>[this.analysisViewData.active,this.analysisViewData.visible],()=>{this._updateActiveController(),this._updateViewSlicePlane(),this._updateViewSlicePlaneDecoration()},s.sync),s.watch(()=>this._allLayerAndSubLayerViews,()=>this._updateLayerViews())]),this.addHandles([s.watch(()=>this.analysis.shape,()=>{this._internalChange||(this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane())},s.sync),s.watch(()=>"web-scene"!==this.analysis.origin?.type,()=>this._updateViewSlicePlaneDecoration(),s.sync)],"analysis"),this._updateActiveController(),this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane(),this._updateViewSlicePlaneDecoration()}destroy(){this.analysisViewData.active&&(this.analysisViewData.active=!1,this.view.slice.plane=null,this._updateActiveController(),this._updateViewSlicePlane()),function(e,i){if(!v.has(e))throw new Error("view expected in global slice register");const a=v.get(e),t=a?.all.lastIndexOf(i)??-1;if(!a||-1===t)throw new Error("controller expected in global slice register");a.all.splice(t,1),0===a.all.length&&v.delete(e)}(this.view,this),this.set("view",null)}get _allLayerAndSubLayerViews(){const e=this.view.allLayerViews.items;return e.concat(e.filter(p.isBuildingSceneLayerView3D).flatMap(({sublayerViews:e})=>e.items))}_updateBoundedPlaneFromSlicePlane(){const e=this.analysis.shape,i=this._currentSlicePlane;if(null==i&&null==e||null!=i&&null!=e&&e.equals(i))return;let t=null,s=null;if(null!=e?.position){const i=e.position.spatialReference,n=p.projectAndElevationAlignShape(e,this.view);null==n&&y.logFailedGeometryProjectionError(this.analysis,i,l.getLogger(this)),t=p.projectedShapeToPlane(n,this.view,{tiltEnabled:this.analysis.tiltEnabled},h.create()),null!=t&&(s=new a({heading:e.heading,tilt:e.tilt,position:e.position,width:e.width,height:e.height}))}this._currentSlicePlane=s,this._internalChange=!0,this.analysisViewData.plane=t,this._internalChange=!1}_updateSlicePlaneFromBoundedPlane(){const e=this.analysisViewData.plane,i=p.planeToShape(e,this.view,this.view.spatialReference,new a);let t=null;null!=i&&(t=new a({heading:i.heading,tilt:i.tilt,position:i.position,width:i.width,height:i.height})),this._currentSlicePlane=t,this._internalChange=!0,this.analysis.shape=i,this._internalChange=!1,this._updateViewSlicePlane()}_updateActiveController(){if(_)return;const e=S(this.view);if(e)if(this.analysisViewData.active)null!=e.activeController&&e.activeController!==this?(_=!0,e.activeController.analysisViewData.active=!1,_=!1):null!=e.activeController&&e.activeController,this._updateLayerViews(),e.activeController=this;else{if(null!=e.activeController&&e.activeController!==this)return;null!=e.activeController&&e.activeController===this&&(e.activeController=null,this._updateLayerViews())}}_updateViewSlicePlane(){!function(e){const i=S(e),a=i?.activeController;null!=a?.analysisViewData.plane&&a.analysisViewData.visible?e.slice.plane=a.analysisViewData.plane:e.slice.plane=null}(this.view)}_updateViewSlicePlaneDecoration(){!function(e){const i=S(e),a=i?.activeController;e.slice.isDecoration="web-scene"!==a?.analysis.origin?.type}(this.view)}_updateLayerViews(){const e=null!=this.analysisViewData.plane&&this.analysisViewData.visible&&this.analysisViewData.active,i=[],a=e=>{"layers"in e?e.layers.forEach(a):i.push(e)};this.analysis.excludedLayers.forEach(a),this.view.allLayerViews.forEach(a=>{a.destroyed||("slicePlaneEnabled"in a&&(a.slicePlaneEnabled=e&&!i.includes(a.layer)),"sublayerViews"in a&&a.sublayerViews.forEach(a=>{a.slicePlaneEnabled=e&&!i.includes(a.sublayer)}))}),null!=this.view.basemapTerrain&&(this.view.basemapTerrain.slicePlaneEnabled=e&&!this.analysis.excludeGroundSurface)}},i.__decorate([n.property()],e.SliceController.prototype,"view",void 0),i.__decorate([n.property()],e.SliceController.prototype,"analysis",void 0),i.__decorate([n.property()],e.SliceController.prototype,"analysisViewData",void 0),i.__decorate([n.property()],e.SliceController.prototype,"_allLayerAndSubLayerViews",null),e.SliceController=i.__decorate([c.subclass("esri.views.3d.analysis.Slice.SliceController")],e.SliceController);const v=new Map;let _=!1;function S(e){return v.get(e)}Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});