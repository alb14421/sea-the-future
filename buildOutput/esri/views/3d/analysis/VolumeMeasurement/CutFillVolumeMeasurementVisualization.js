// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../Color","../../../../core/Accessor","../../../../core/maybe","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","./VolumeMeasurementConfiguration","../../interactive/visualElements/LineVisualElement","../../interactive/visualElements/OutlineVisualElement","../../interactive/visualElements/support/Segment","../../webgl-engine/materials/lineStippleUtils"],function(e,t,i,o,s,n,r,l,a,c,u,m,y,d,h,p,g,v){"use strict";e.CutFillVolumeMeasurementVisualization=class extends o{get visible(){return this.analysisViewData.visible&&null!=this.analysisViewData.elevationAlignedGeometry&&null!=this.analysisViewData.targetGeometry}constructor(e){super(e)}initialize(){const{accentColor:e}=this.view.effectiveTheme,t={view:this.view,isDecoration:!0},o=d.cutFillConfiguration,s={...t,width:o.geometryOutlineWidth},r=i.toUnitRGBA(e),l=i.toUnitRGBA(o.targetGeometryOutlineColor);this._elevationAlignedGeometry=new p.OutlineVisualElement({...s,isDraped:!0,color:r}),this._targetGeometry=new p.OutlineVisualElement({...s,color:l});const a={...t,attached:!0,width:o.projectionLineWidth,stipplePattern:v.createStipplePatternSimple(o.projectionLineStippleSize),renderOccluded:4},c=i.toUnitRGBA(o.cutProjectionLineColor),u=i.toUnitRGBA(o.fillProjectionLineColor);this._cutProjectionLines=new h.LineVisualElement({...a,color:c}),this._fillProjectionLines=new h.LineVisualElement({...a,color:u}),this.addHandles([n.watch(()=>[this.analysisViewData.elevationAlignedGeometry,this.analysisViewData.targetGeometry,this.visible],()=>this._updateVisualElements()),n.watch(()=>this.view.effectiveTheme.accentColor,e=>{this._elevationAlignedGeometry.color=i.toUnitRGBA(e)})])}destroy(){this._elevationAlignedGeometry=s.destroyMaybe(this._elevationAlignedGeometry),this._targetGeometry=s.destroyMaybe(this._targetGeometry),this._cutProjectionLines=s.destroyMaybe(this._cutProjectionLines),this._fillProjectionLines=s.destroyMaybe(this._fillProjectionLines)}_updateVisualElements(){this._updateGeometries(),this._updateProjectionLines()}_updateGeometries(){const e=this.visible,{elevationAlignedGeometry:t,targetGeometry:i}=this.analysisViewData;this._elevationAlignedGeometry.geometry=t,this._elevationAlignedGeometry.visible=e,this._targetGeometry.geometry=i,this._targetGeometry.visible=e}_updateProjectionLines(){const e=this.visible,{elevationAlignedGeometry:t,targetGeometry:i}=this.analysisViewData;if(this._cutProjectionLines.visible=e,this._fillProjectionLines.visible=e,!t||!i)return;const{renderCoordsHelper:o}=this.view,s=o.spatialReference,n=[],r=[],l=t.spatialReference;for(let e=0;e<t.rings[0].length;++e){const a=t.rings[0][e],c=m.set(_,a[0],a[1],a[2]);o.toRenderCoords(c,l,c);const u=i.rings[0][e],y=m.set(V,u[0],u[1],u[2]);o.toRenderCoords(y,l,y);const d=new g.GeodesicSegment(c,y,s);c[2]>y[2]?n.push(d):r.push(d)}this._cutProjectionLines.setGeometryFromSegments(n),this._fillProjectionLines.setGeometryFromSegments(r)}},t.__decorate([r.property({constructOnly:!0})],e.CutFillVolumeMeasurementVisualization.prototype,"view",void 0),t.__decorate([r.property({constructOnly:!0})],e.CutFillVolumeMeasurementVisualization.prototype,"analysisViewData",void 0),t.__decorate([r.property({readOnly:!0})],e.CutFillVolumeMeasurementVisualization.prototype,"visible",null),e.CutFillVolumeMeasurementVisualization=t.__decorate([u.subclass("esri.views.3d.analysis.VolumeMeasurement.CutFillVolumeMeasurementVisualization")],e.CutFillVolumeMeasurementVisualization);const _=y.create(),V=y.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});