// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Collection","../../../core/Evented","../../../core/has","../../../core/maybe","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/factories/vec3f64","./AnalysisView3D","./LineOfSight/LineOfSightController","./LineOfSight/LineOfSightTool","./LineOfSight/LineOfSightVisualization","../../analysis/analysisViewUtils"],function(t,e,i,r,o,s,a,n,l,p,y,c,u,d,h){"use strict";let _=class extends(y.AnalysisView3D(i.EventedAccessor)){constructor(t){super(t),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new e,this.cursorTarget=null,this.editable=!0,this.elevationAlignedObserver=null,this.observerEngineLocation=p.create(),this.userOperation=null}initialize(){const t=this.view,e=this.analysis;this._analysisController=new c.LineOfSightController({analysis:e,analysisViewData:this,view:t}),this._analysisVisualization=new d.LineOfSightVisualization({analysis:e,analysisViewData:this,view:t,isDecoration:!this.parent}),this.addHandles([this._analysisController.on("result-changed",t=>{t.target!==this.cursorTarget&&this.emit("result-changed",t)}),h.connectAnalysisViewToTool(this,u.LineOfSightTool)])}destroy(){h.removeAnalysisViewTool(this),this.userOperation=o.abortMaybe(this.userOperation),this._analysisController=o.destroyMaybe(this._analysisController),this._analysisVisualization=o.destroyMaybe(this._analysisVisualization)}get visible(){return super.visible}set visible(t){super.visible=t}get interactive(){return super.interactive}set interactive(t){super.interactive=t}get results(){return this.computations.map(t=>t.result)}get priority(){return this._analysisController.priority}set priority(t){this._analysisController.priority=t}get updating(){return null!=this._analysisController&&this._analysisController.updating||null!=this._analysisVisualization&&this._analysisVisualization.updating}place(t){return h.startPlaceOperation(this,{placementOptions:t})}getResultForTarget(t){return this.computations.find(e=>e.target===t)?.result}get testInfo(){}};return t.__decorate([s.property({readOnly:!0})],_.prototype,"type",void 0),t.__decorate([s.property({constructOnly:!0,nonNullable:!0})],_.prototype,"analysis",void 0),t.__decorate([s.property()],_.prototype,"tool",void 0),t.__decorate([s.property({readOnly:!0})],_.prototype,"results",null),t.__decorate([s.property()],_.prototype,"priority",null),t.__decorate([s.property()],_.prototype,"computations",void 0),t.__decorate([s.property()],_.prototype,"cursorTarget",void 0),t.__decorate([s.property()],_.prototype,"editable",void 0),t.__decorate([s.property()],_.prototype,"elevationAlignedObserver",void 0),t.__decorate([s.property()],_.prototype,"observerEngineLocation",void 0),t.__decorate([s.property()],_.prototype,"updating",null),t.__decorate([s.property()],_.prototype,"userOperation",void 0),t.__decorate([s.property()],_.prototype,"_analysisController",void 0),t.__decorate([s.property()],_.prototype,"_analysisVisualization",void 0),_=t.__decorate([l.subclass("esri.views.3d.analysis.LineOfSightAnalysisView3D")],_),_});