// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/time","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","./Camera","../../../animation/pointToPoint/Animation"],function(t,i,e,n,r,s){"use strict";const a=n.create();t.Animation=class{get finished(){return this.currentTime>=this._animation.time}get time(){return this._animation.time}constructor(t){this.currentTime=i.Milliseconds(0),this._animation=new s.Animation(()=>new r.Camera(t)),this._current=new r.Camera(t)}update(t,n,r){const{source:s,target:c}=this._animation.definition,o=e.subtract(a,n.center,t.center),m=e.length(o);m>=1e-5?(o[0]/=m,o[1]/=m,o[2]/=m):(o[0]=0,o[1]=1,o[0]=0),e.copy(s.direction,o),e.copy(c.direction,o),s.copyFromRenderCamera(t),c.copyFromRenderCamera(n),this._current.copyFrom(s),this._animation.update(s,c,r),this.currentTime=i.Milliseconds(0),t.almostEquals(n)&&(this.currentTime=this._animation.time)}cameraAt(t,i){this._animation.cameraAt(t,this._current),this._current.copyToRenderCamera(i)}step(t,e){this.finished||(this.currentTime=i.Milliseconds(this.currentTime+i.millisecondsFromSeconds(t)),this.currentTime>=this.time&&(this.currentTime=this.time)),this.cameraAt(this.currentTime/this.time,e)}},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});