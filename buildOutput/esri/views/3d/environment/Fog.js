// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/mathUtils","../../../core/reactiveUtils","../../../core/Logger","../../../core/has","../../../core/RandomLCG","../../../core/Error","../../../core/accessorSupport/decorators/subclass","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../geometry/ellipsoidUtils","../webgl","../../../chunks/Fog.glsl","./FogTechnique","./weather","../webgl-engine/effects/TransparentEnvironment","../../webgl/enums"],function(e,t,s,r,a,i,n,o,h,c,m,l,p,d,g,u,_,w){"use strict";e.Fog=class extends _.TransparentEnvironment{constructor(e){super(e),this.requireGeometryDepth=!0,this._newParameters=new y,this._oldParameters=new y,this._fadedParameters=new y,this._parameters=this._newParameters,this._passParameters=new d.FogPassParameters;const t=l.getReferenceEllipsoid(e.view.spatialReference);this._planetRadius=t.radius,this._atmosphereRadius=t.radius+t.atmosphereHeight,e.view.stage?.renderView.techniques.precompile(g.FogTechnique)}toogle(){this.view.environment.atmosphereEnabled&&this.view.environment.weather?this._enable():this._disable()}initialize(){this.addHandles([r.watch(()=>this.view.environment.atmosphereEnabled,()=>this.toogle(),r.syncAndInitial),r.watch(()=>this.view.environment.weather,()=>this.toogle(),r.syncAndInitial),r.watch(()=>this._updateFogParameters(),()=>{},r.syncAndInitial)]),this.addHandles(r.watch(()=>this._fadeFactor,e=>this._fade(e),r.syncAndInitial))}get _fadeFactor(){return this.view.stage?.renderer.renderContext.bind.clouds.fadeFactor??1}_fade(e){const{_newParameters:t,_oldParameters:s}=this;e>=1?(this._parameters=t,this._oldParameters.copyFrom(this._newParameters)):e<=0?this._parameters=s:(this._fadedParameters.lerp(s,t,e),this._parameters=this._fadedParameters)}_updateFogParameters(){const e=this.view.environment.weather,t="foggy"===e.type||"snowy"===e.type||"rainy"===e.type;this._newParameters.strength="foggy"===e.type?s.lerp(3e-5,.005,e.fogStrength**3):"snowy"===e.type||"rainy"===e.type?s.lerp(4e-6,2e-4,(e.precipitation??0)**3):0,this._newParameters.amount=t?1:0,"foggy"!==e.type&&"snowy"!==e.type||c.copy(this._newParameters.color,v),"rainy"===e.type&&c.copy(this._newParameters.color,b),this._fadeFactor>=1&&this._oldParameters.copyFrom(this._newParameters),this.requestRender(1)}render(e){const t=e.find(({name:e})=>e===p.InternalRenderCategory.TRANSPARENT_ENVIRONMENT);if(0===this._parameters.amount)return t;if(this._update(),this._passParameters.amount<=0)return t;const s=this.techniques.get(g.FogTechnique);if(!s.compiled)return this.requestRender(1),t;const r=this.renderingContext,a=t.getAttachment(w.DepthStencilAttachment);return t.attachDepth(null),r.bindFramebuffer(t.fbo),r.bindTechnique(s,this.bindParameters,this._passParameters),r.screen.draw(),t.attachDepth(a),t}_update(){const e=this.bindParameters.camera;c.normalize(P,e.eye);const t=Math.max(0,c.dot(P,this.bindParameters.lighting.mainLight.direction)),r=this._parameters.color;c.scale(f,r,.1),c.lerp(this._passParameters.color,f,r,t);const a=c.length(e.eye);this._passParameters.atmosphereC=a**2-this._atmosphereRadius**2,this._passParameters.amount=(1-s.smoothstep(.95*u.heightLimit,1*u.heightLimit,Math.abs(a-this._planetRadius)))*this._parameters.amount,this._passParameters.strength=this._parameters.strength}},e.Fog=t.__decorate([h.subclass("esri.views.3d.environment.Fog")],e.Fog);class y{constructor(){this.color=m.create(),this.strength=0,this.amount=0}copyFrom(e){this.amount=e.amount,this.strength=e.strength,c.copy(this.color,e.color)}lerp(e,t,r){this.amount=s.lerp(e.amount,t.amount,r),this.strength=s.lerp(e.strength,t.strength,r),c.lerp(this.color,e.color,t.color,r)}}const P=m.create(),f=m.create(),b=m.fromValues(.5,.5,.5),v=m.fromValues(1.5,1.5,1.5);e.FogParameters=y,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});