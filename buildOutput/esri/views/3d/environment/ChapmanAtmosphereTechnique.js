// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../core/libs/gl-matrix-2/factories/vec3f64","./ChapmanApproximation.glsl","../../../chunks/ChapmanAtmosphere.glsl","../webgl-engine/core/shaderTechnique/ReloadableShaderModule","../webgl-engine/core/shaderTechnique/ShaderTechnique","../webgl-engine/lib/DefaultVertexBufferLayouts","../../webgl/renderState","../../webgl/VertexAttributeLocations"],function(e,r,a,t,n,i,o,s,l,c){"use strict";class u extends t.ChapmanApproximationParameters{constructor(){super(...arguments),this.innerFadeDistance=0,this.altitudeFade=0,this.backgroundColor=a.create()}}class d extends o.ShaderTechnique{constructor(r,a){super(r,a,new i.ReloadableShaderModule(n.ChapmanAtmosphere,()=>new Promise((r,a)=>e(["./ChapmanAtmosphere.glsl"],r,a))),c.fromLayout(s.Pos2TexF16))}initializePipeline(e){return l.makePipelineState({blending:e.reduced?l.copySource:l.simpleBlendingParams(770,771),depthTest:{func:e.reduced?519:515},colorWrite:l.defaultColorWrite})}}r.ChapmanAtmospherePassParameters=u,r.ChapmanAtmosphereTechnique=d,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});