// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../chunks/SimpleAtmosphere.glsl","../support/buffer/InterleavedLayout","../webgl-engine/core/shaderTechnique/ReloadableShaderModule","../webgl-engine/core/shaderTechnique/ShaderTechnique","../../webgl/renderState"],function(e,l,i,r,t,n,o){"use strict";class a extends n.ShaderTechnique{constructor(l,r){super(l,r,new t.ReloadableShaderModule(i.SimpleAtmosphere,()=>new Promise((l,i)=>e(["./SimpleAtmosphere.glsl"],l,i))),u.locations)}initializePipeline(e){const l=1===e.geometry;return o.makePipelineState({blending:o.unpremultipliedAlphaToPremultipliedAlpha,culling:l?o.backFaceCullingParams:void 0,depthTest:{func:515},colorWrite:o.defaultColorWrite})}}const u=r.newLayout().vec3f("position").freeze();l.SimpleAtmosphereTechnique=a,l.layout=u,Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});