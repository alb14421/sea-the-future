// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/mathUtils","../../../core/maybe","../../../core/reactiveUtils","../../../core/Logger","../../../core/has","../../../core/RandomLCG","../../../core/Error","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/math/mat4","../../../core/libs/gl-matrix-2/factories/mat4f64","../../../core/libs/gl-matrix-2/math/vec2","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../geometry/ellipsoidUtils","../../../geometry/support/FloatArray","../webgl","./atmosphereUtils","../../../chunks/SimpleAtmosphere.glsl","./SimpleAtmosphereTechnique","./SimpleAtmosphereTechniqueConfiguration","./resources/MarsAtmosphereTexture","../support/mathUtils","../support/buffer/glUtil","../webgl-engine/effects/OpaqueEnvironment","../webgl-engine/lib/glUtil3D","../webgl-engine/lib/Util","../webgl-engine/lib/VertexArrayObject","../../webgl/enums","../../webgl/Texture","../../webgl/TextureDescriptor","../../webgl/VertexBuffer"],function(e,t,s,r,i,a,o,n,h,c,l,m,u,p,d,_,g,f,b,x,A,y,V,P,v,w,R,S,T,q,M,F,E){"use strict";const O=-b.innerAtmosphereDepth,U=P.makePiecewiseLinearFunction([[50,.1015625],[500,.21875],[5e3,1-250/512],[5e4,.4140625]]);function j(e,t,s,r,i){const a=p.length(e),o=r*Math.sqrt(a*a-r*r)/a,n=Math.sqrt(r*r-o*o),h=i.v1,c=i.v2;return p.scale(i.center,e,n/a),p.cross(h,e,t),p.squaredLength(h)<1&&p.cross(h,e,s),p.scale(h,h,o/p.length(h)),p.cross(c,h,e),p.scale(c,c,o/p.length(c)),o}e.MarsAtmosphere=class extends w.OpaqueEnvironment{constructor(e){super(e),this._passParameters=new x.SimpleAtmospherePassParameters,this._configuration=new y.SimpleAtmosphereTechniqueConfiguration,this._vao=null,this._fadeVao=null,this._texV1=1;const t=e.view,s=_.getReferenceEllipsoid(t.spatialReference),{outerAtmosphereRimWidth:r,radius:i}=s;this._planetRadius=i,this._innerRimFactor=1+O/i,this._middleRimFactor=1+0/i,this._outerRimFactor=1+r/i,this._texV0=0/r,this._texVScale=this._texV1-this._texV0;const a=t.stage.renderView.techniques;a.precompile(A.SimpleAtmosphereTechnique,this._configuration),this._configuration.geometry=2,a.precompile(A.SimpleAtmosphereTechnique,this._configuration)}initialize(){this.addHandles(i.watch(()=>this.view.environment.atmosphereEnabled,e=>e?this._enable():this._disable(),i.initial))}destroy(){this._passParameters.texture=r.disposeMaybe(this._passParameters.texture),this._fadeVao=r.disposeMaybe(this._fadeVao),this._vao=r.disposeMaybe(this._vao)}render(e){const t=e.find(({name:e})=>e===f.InternalRenderCategory.OPAQUE_ENVIRONMENT);this._update();const s=this.renderingContext;if(!this._passParameters.texture){const e=new F.TextureDescriptor(1,512);e.wrapMode=33071,e.flipped=!0,this._passParameters.texture=new M.Texture(s,e,V.marsAtmosphereTextureSimple)}if(this._passParameters.undergroundFadeAlpha<1){this._vao??=this._createRibbon(s),this._configuration.geometry=0;const e=this.techniques.get(A.SimpleAtmosphereTechnique,this._configuration);if(!e.compiled)return this.requestRender(1),t;s.bindTechnique(e,this.bindParameters,this._passParameters),s.bindVAO(this._vao),s.drawArrays(q.PrimitiveType.TRIANGLES,0,this._vao.vertexCount("geometry"))}if(this._passParameters.undergroundFadeAlpha>0){this._fadeVao??=R.createQuadVAO(s),this._configuration.geometry=2;const e=this.techniques.get(A.SimpleAtmosphereTechnique,this._configuration);if(!e.compiled)return this.requestRender(1),t;s.bindTechnique(e,this.bindParameters,this._passParameters),s.bindVAO(this._fadeVao),s.drawArrays(q.PrimitiveType.TRIANGLE_STRIP,0,this._fadeVao.vertexCount("geometry"))}return t}_update(){const e=this.bindParameters.camera,t=d.create(),r=this._planetRadius,i=p.length(e.eye),a=i-r;if(a<0){const e=Math.min(-a/5e3,1);this._passParameters.undergroundFadeAlpha=e}else this._passParameters.undergroundFadeAlpha=0;const o=Math.max(50,a),n=r+O;var h,c,l;this._passParameters.innerScale=(c=r,l=n,(h=r+o)*h/(Math.sqrt(h*h-c*c)*Math.sqrt(h*h-l*l)+c*l)-1),this._passParameters.altitudeFade=b.computeInnerAltitudeFade(a),p.scale(t,e.eye,(r+50)/i),j(t,e.center,e.up,r,this._passParameters.silhouette);const m=this._computeScreenRimWidth(e,t,e.up,this._passParameters.silhouette),_=1-511/512,g=U(a);let f=this._texV0+_*this._texVScale,x=this._texV0+m*g*this._texVScale;if(a>50){j(e.eye,e.center,e.up,r,this._passParameters.silhouette);const t=this._computeScreenRimWidth(e,e.eye,e.up,this._passParameters.silhouette),i=s.clamp((t-1.5)/(m-1.5),0,1);f=this._texV0+i*_*this._texVScale,x=this._texV0+s.lerp(this._texV1,m*g,i)*this._texVScale}u.set(this._passParameters.texV,f,x)}_createRibbon(e){const t=g.newFloatArray(1155),s=new Uint32Array(1920);t[0]=0,t[1]=0,t[2]=-1;for(let e=0;e<128;e++){const r=9*e+3;t[r]=e,t[r+1]=this._innerRimFactor,t[r+2]=-1,t[r+3]=e,t[r+4]=this._middleRimFactor,t[r+5]=0,t[r+6]=e,t[r+7]=this._outerRimFactor,t[r+8]=1;const i=3*e+1,a=127===e?1:i+3,o=15*e;s[o]=i,s[o+1]=i+1,s[o+2]=a+1,s[o+3]=a+1,s[o+4]=a,s[o+5]=i,s[o+6]=i+1,s[o+7]=i+2,s[o+8]=a+2,s[o+9]=a+2,s[o+10]=a+1,s[o+11]=i+1,s[o+12]=i,s[o+13]=a,s[o+14]=0}const r=A.layout.createBuffer(s.length),i=r.position;for(let e=0;e<s.length;++e){const r=3*s[e];i.set(e,0,t[r]),i.set(e,1,t[r+1]),i.set(e,2,t[r+2])}return new T.VertexArrayObject(e,new E.VertexBuffer(e,v.glLayout(A.layout),r.buffer))}_computeScreenRimWidth(e,t,s,r){return p.add(L,r.center,r.v2),p.scale(I,L,this._outerRimFactor),l.lookAt(C,t,L,s),S.project(L,C,e.projectionMatrix,e.viewport,L),S.project(I,C,e.projectionMatrix,e.viewport,I),p.distance(L,I)/e.height}},e.MarsAtmosphere=t.__decorate([c.subclass("esri.views.3d.environment.MarsAtmosphere")],e.MarsAtmosphere);const C=m.create(),L=d.create(),I=d.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});