// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/Evented","../../../core/has","../../../core/maybe","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../geometry/projectionUtils","../../../geometry/SpatialReference","../../../geometry/projection/projectPointToVector","../../../geometry/support/planetGCSUtils","../../../geometry/support/spatialReferenceUtils","./EnvironmentRenderer","../support/earthUtils","../support/sunUtils","../webgl-engine/lighting/Lightsources"],function(e,t,i,n,r,a,o,s,h,c,l,g,d,p,_,u,m,v,w,y,f){"use strict";e.EnvironmentManager=class extends i.EventedAccessor{constructor(){super(),this._tmpLightParameters=new y.ColorAndIntensity,this._defaultLightParameters=new y.ColorAndIntensity,this._tmpDate=new Date,this._tmpTz={hours:0,minutes:0,seconds:0},this._viewHandlesKey="viewHandles",this._trackingEnabled=!1,this._mainLight=new f.MainLight,this._ambientLight=new f.AmbientLight,this._moonLight=new f.FillLight,this._disableWeather=!1,this._renderer=null,this._resetReferencePosition()}destroy(){this.disconnectView()}get _view(){return this._renderer?.view}get updating(){return!!this._renderer?.updating||!this._canProjectCameraPosition}get weatherEnabled(){return this._view?.environment.atmosphereEnabled&&!this._disableWeather&&1===this._view?.state?.viewingMode&&m.isEarth(this._view.spatialReference)}get _weatherAvailable(){return this.weatherEnabled&&this._renderer?.weatherAvailable}get referencePositionGeographic(){return this._referencePositionGeographic}get _canProjectCameraPosition(){const e=this._view?.stateManager?.camera?.position?.spatialReference??p.WGS84,t=u.getGCSForPlanet(e);return d.isLoadedOrLoadFor(e,t)}connectView(e){if(this._renderer)return;this._renderer=new v.EnvironmentRenderer({view:e});const t=()=>this._updateRenderParameters(),i=()=>this._cameraHandler();this.addHandles([a.watch(()=>e.environment.lighting,e=>this._updateLightingHandler(e),a.sync),a.watch(()=>"virtual"!==e.environment.lighting.type?e.environment.lighting.date:null,e=>this._lightingDateHandler(e),a.sync),a.watch(()=>e.environment.lighting.directShadowsEnabled,t,a.sync),a.watch(()=>e.qualitySettings.ambientOcclusion,t,a.sync),a.watch(()=>e.qualitySettings.reflections,t,a.sync),a.watch(()=>e.spatialReference,()=>this._resetReferencePosition(!0),a.sync),a.watch(()=>[e.environment.weather.type,this.weatherEnabled],()=>this._updateLighting(null,1),a.sync),a.watch(()=>"snowy"===e.environment.weather.type&&e.environment.weather.snowCover,t,a.sync),a.watch(()=>e.environment,e=>e.setComputeWeatherAvailable(()=>this._weatherAvailable),a.syncAndInitial),a.watch(()=>e.viewingMode,()=>this._resetReferencePosition(!0),a.syncAndInitial),a.watch(()=>"virtual"!==e.environment.lighting.type&&e.environment.lighting.cameraTrackingEnabled,e=>this._updateCameraTracking(e),a.syncAndInitial),a.watch(()=>e.state.camera,i,a.syncAndInitial),a.when(()=>this._canProjectCameraPosition,i,a.sync)],this._viewHandlesKey),this._updateRenderParameters(),this._updateLighting(),this._cameraHandler(),this.notifyChange("updating")}disconnectView(){this.removeHandles(this._viewHandlesKey),this._resetReferencePosition(),this._renderer=r.destroyMaybe(this._renderer)}_updateLightingHandler(e){this._updateCameraTracking("virtual"!==e.type&&e.cameraTrackingEnabled),this._lightingDateHandler("virtual"!==e.type?e.date:null),this._updateRenderParameters()}_updateCameraTracking(e){if(this._trackingEnabled=e,e)this._cameraHandler();else{const e=this._view.environment.lighting;"virtual"!==e?.type&&(e.positionTimezoneInfo.autoUpdated=!1)}}_lightingDateHandler(e){const t=this._view.environment.lighting;if("virtual"!==t?.type){if(e){if(!t.positionTimezoneInfo.autoUpdated&&(this._preupdateTracking(e),null!=this._referencePositionGeographic)){const e=w.positionToTimezoneInfo(this._referencePositionGeographic,this._tmpTz);null!=e&&(t.autoUpdate(null,e),this._trackingEnabled&&(t.positionTimezoneInfo.autoUpdated=!0))}this._updateLighting(e)}}else this._updateLighting()}_preupdateTracking(e){!this._trackingEnabled&&"virtual"!==this._view.environment.lighting.type&&this._view.environment.lighting.cameraTrackingEnabled&&this._cameraHandler(e)}_cameraHandler(e=null){const t=this._view;if(!t.ready)return;const i=t.stateManager.camera;if(!i)return;const{position:n}=i,r=n.spatialReference??p.WGS84,a=u.getGCSForPlanet(r);if(!_.projectPointToVector(n,T,a)){if(null==this._referencePositionGeographic)return;return this._referencePositionGeographic=null,void this._updateLighting()}this._referencePositionGeographic?l.equals(this._referencePositionGeographic,T)||(l.copy(this._referencePositionGeographic,T),this.notifyChange("referencePositionGeographic")):this._referencePositionGeographic=g.clone(T),this._autoUpdateTimezone(this._referencePositionGeographic,e)||this._updateLighting(e)}_updateLighting(e,t=0){const i=this._view,{lighting:n}=i.environment,r="virtual"===n.type,a=this._referencePositionGeographic,o=null!=a?this._tmpLightParameters:this._defaultLightParameters;if(a){e??=r?null:n.date;const t=this._weatherAvailable?i.environment.weather.type:"disabled";y.computeColorAndIntensity(e,a,i.state.viewingMode,t,i.state.camera,o)}else r&&y.computeVirtualLightDirection(i.state.camera,i.state.viewingMode,o.direct.directionToLightSource);const s=this._mainLight,h=o.direct;l.scale(s.intensity,h.color,h.intensity*Math.PI),l.copy(s.direction,h.directionToLightSource),s.specularStrength=o.specularStrength,s.environmentStrength=o.environmentStrength;const c=this._ambientLight;l.scale(c.intensity,o.ambient.color,o.ambient.intensity);const g=this._moonLight;l.lerp(g.intensity,b,P,o.globalFactor);const d=(1-.5*o.globalFactor)*(1-.4*o.noonFactor*(1-o.globalFactor));l.scale(g.intensity,g.intensity,d),l.copy(g.direction,h.directionToLightSource),this._view.stage?.renderer.updateLighting([s,c,g],o.noonFactor,o.globalFactor,this._weatherAvailable?t:0),this._updateRenderParameters()}_autoUpdateTimezone(e,t=null){if("virtual"===this._view.environment.lighting.type||!this._view.environment.lighting.cameraTrackingEnabled||null==e)return!1;const i=this._tmpDate;i.setTime((t||this._view.environment.lighting.date).getTime());const n=w.positionToTimezoneInfo(e,this._tmpTz);if(null==n)return!1;let r=this._view.environment.lighting.positionTimezoneInfo;if(r.autoUpdated){if(r.hours===n.hours&&r.minutes===n.minutes&&r.seconds===n.seconds)return!1}else r=n;const a=i.getUTCHours()-(n.hours-r.hours),o=i.getUTCMinutes()-(n.minutes-r.minutes),s=i.getUTCSeconds()-(n.seconds-r.seconds);return i.setUTCHours(a),i.setUTCMinutes(o),i.setUTCSeconds(s),!t&&this._view.environment.lighting.autoUpdate(i,n)}_updateRenderParameters(){const e=this._view.stage;if(!e)return;const t=null==this._referencePositionGeographic||y.computeShadowsEnabled(this._referencePositionGeographic[2],this._view.state.viewingMode);e.renderer.setParameters({shadowMap:this._view.environment.lighting.directShadowsEnabled&&t,environment:this._view.environment,weatherVisible:this._weatherAvailable,qualitySettings:this._view.qualitySettings})}_resetReferencePosition(e=!1){this._referencePositionGeographic=null,e&&this._cameraHandler()}get test(){}},t.__decorate([o.property({type:Boolean,readOnly:!0})],e.EnvironmentManager.prototype,"updating",null),t.__decorate([o.property()],e.EnvironmentManager.prototype,"_disableWeather",void 0),t.__decorate([o.property()],e.EnvironmentManager.prototype,"weatherEnabled",null),t.__decorate([o.property()],e.EnvironmentManager.prototype,"_weatherAvailable",null),t.__decorate([o.property()],e.EnvironmentManager.prototype,"referencePositionGeographic",null),t.__decorate([o.property()],e.EnvironmentManager.prototype,"_referencePositionGeographic",void 0),t.__decorate([o.property()],e.EnvironmentManager.prototype,"_renderer",void 0),t.__decorate([o.property()],e.EnvironmentManager.prototype,"_canProjectCameraPosition",null),e.EnvironmentManager=t.__decorate([c.subclass("esri.views.3d.environment.EnvironmentManager")],e.EnvironmentManager);const b=g.fromValues(.22,.22,.33),P=g.fromValues(.22,.22,.22),T=g.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});