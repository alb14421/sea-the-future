// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/maybe","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/math/vec2","../../../chunks/NoiseTextureAtlas.glsl","./NoiseTextureAtlasConfiguration","./NoiseTextureAtlasDimensions","./NoiseTextureAtlasTechnique","../../webgl/FramebufferObject","../../webgl/TextureDescriptor"],function(e,t,s,r,i,o,n,a,c,u,h,l,x,d,p,T){"use strict";e.NoiseTextureAtlas=class extends s{constructor(e){super(e),this._needsRender=!0,this._passParameters=new h.NoiseTextureAtlasPassParameters,this._configuration=new l.NoiseTextureAtlasTechniqueConfiguration,this._fbo=new p.FramebufferObject(e.context.renderContext.rctx,new T.TextureDescriptor(x.atlasSize)),e.context.techniques.precompile(d.NoiseTextureAtlasTechnique,new l.NoiseTextureAtlasTechniqueConfiguration);const t=new l.NoiseTextureAtlasTechniqueConfiguration;t.mode=1,e.context.techniques.precompile(d.NoiseTextureAtlasTechnique,t)}get textureAtlas(){if(this._texture&&!this._needsRender)return this._texture;this._configuration.mode=this._texture?1:0;const e=this.context.techniques.get(d.NoiseTextureAtlasTechnique,this._configuration);return e.compiled&&(this._texture=this._render(e)),this._texture}updateWeatherMap(e){u.equals(this._passParameters.weatherTile,e)||(u.copy(this._passParameters.weatherTile,e),this._needsRender=!0)}destroy(){this._fbo=r.disposeMaybe(this._fbo)}_render(e){if(!this._fbo)return null;const t=this.context.renderContext.rctx,s=t.getViewport();return t.setViewport(0,0,x.atlasSize,x.atlasSize),t.bindFramebuffer(this._fbo),t.bindTechnique(e,this.context.renderContext.bind,this._passParameters),t.screen.draw(),t.setViewport(s.x,s.y,s.width,s.height),this._needsRender=!1,this._fbo.colorTexture}},t.__decorate([i.property({constructOnly:!0})],e.NoiseTextureAtlas.prototype,"context",void 0),e.NoiseTextureAtlas=t.__decorate([c.subclass("esri.views.3d.environment.NoiseTextureAtlas")],e.NoiseTextureAtlas),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});