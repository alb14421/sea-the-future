// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../../../core/promiseUtils","../utils","../../../../webgl/BufferObject","../../../../webgl/enums","../../../../webgl/VertexArrayObject","../../../../webgl/VertexAttributeLocations","../../../../webgl/VertexBuffer","../../../../webgl/VertexElementDescriptor"],function(e,t,a,r,s,i,n,o){"use strict";class m{constructor(e){this._params=e}get animated(){return this._params.flowSpeed>0}isCompatible(e){return e instanceof m&&t.areStreamlinesCompatible(this._params,e._params)}async load(t,a){const{extent:r,size:s}=t;e.throwIfAborted(a);const i=await this._params.loadImagery(r,s[0],s[1],this._params.timeExtent,a),{vertexData:n,indexData:o}=await this._params.createFlowMesh("Streamlines",this._params.simulationSettings,i,a);return new f(n,o,{color:this._params.color,opacity:this._params.opacity,size:this._params.size})}render(e,a,s){const{context:i}=e,{program:n}=s;i.setFaceCullingEnabled(!1),i.setBlendingEnabled(!0),i.setBlendFunction(1,771),i.useProgram(n),n.setUniform1f("u_time",a.time),n.setUniform1f("u_trailLength",this._params.trailLength),n.setUniform1f("u_flowSpeed",this._params.flowSpeed),n.setUniform1f("u_featheringSize",this._params.featheringSize),n.setUniform1f("u_featheringOffset",this._params.featheringOffset),n.setUniform1f("u_introFade",this._params.introFade?1:0),n.setUniform1f("u_fadeToZero",this._params.fadeToZero?1:0),n.setUniform1f("u_decayRate",this._params.decayRate),n.setUniformMatrix3fv("u_dvsMat3",a.dvsMat3),n.setUniformMatrix3fv("u_displayViewMat3",a.displayViewMat3),t.setUniforms(n,"color","vec4",this._params.color),t.setUniforms(n,"opacity","float",this._params.opacity),t.setUniforms(n,"size","float",this._params.size),i.bindVAO(s.vertexArray),i.drawElements(r.PrimitiveType.TRIANGLES,s.indexCount,r.DataType.UNSIGNED_INT,0)}}const l=[new o.VertexElementDescriptor("a_positionAndSide",3,r.DataType.FLOAT,0,40),new o.VertexElementDescriptor("a_timeInfo",3,r.DataType.FLOAT,12,40),new o.VertexElementDescriptor("a_extrude",2,r.DataType.FLOAT,24,40),new o.VertexElementDescriptor("a_speed",1,r.DataType.FLOAT,32,40),new o.VertexElementDescriptor("a_colorTime",1,r.DataType.FLOAT,36,40)],p={vsPath:"raster/flow/streamlines",fsPath:"raster/flow/streamlines",locations:i.fromLayout(l)};class f{constructor(e,t,a){this._vertexData=e,this._indexData=t,this._values=a}attach(e){const{context:t}=e,r=new n.VertexBuffer(t,l,this._vertexData),i=a.BufferObject.createIndex(t,35044,this._indexData),o=new s.VertexArrayObject(t,r,i),m=[];"ramp"===this._values.color.kind&&m.push("vvColor"),"ramp"===this._values.opacity.kind&&m.push("vvOpacity"),"ramp"===this._values.size.kind&&m.push("vvSize");const f=e.getProgram(p,m);this.vertexArray=o,this.program=f,this.indexCount=this._indexData.length,this._vertexData=null,this._indexData=null}detach(){this.vertexArray.dispose()}get ready(){return this.program.compiled}}return m});