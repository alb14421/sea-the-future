// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/promiseUtils","../utils","../../../../webgl/enums","../../../../webgl/Texture","../../../../webgl/TextureDescriptor","../../../../webgl/VertexArrayObject","../../../../webgl/VertexAttributeLocations","../../../../webgl/VertexBuffer","../../../../webgl/VertexElementDescriptor"],function(t,e,a,r,s,i,o,n,l,m){"use strict";class c{constructor(t){this._params=t,this.animated=!1}isCompatible(t){if(!(t instanceof c))return!1;if(!a.timeExtentsEqual(this._params.timeExtent,t._params.timeExtent))return!1;let e=!0;return e=e&&this._params.loadImagery===t._params.loadImagery,e=e&&this._params.color.kind===t._params.color.kind,e=e&&this._params.opacity.kind===t._params.opacity.kind,e}async load(t,a){const{extent:r,size:s}=t;e.throwIfAborted(a);const i=await this._params.loadImagery(r,s[0],s[1],this._params.timeExtent,a);return new f(i,{color:this._params.color,opacity:this._params.opacity})}render(t,e,s){const{context:i}=t,{program:o}=s;i.setFaceCullingEnabled(!1),i.setBlendingEnabled(!0),i.setBlendFunction(1,771),i.useProgram(o),o.setUniformMatrix3fv("u_dvsMat3",e.dvsMat3),i.bindTexture(s.texture,0),o.setUniform1i("u_texture",0),o.setUniform1f("u_Min",s.min),o.setUniform1f("u_Max",s.max),a.setUniforms(o,"color","vec4",this._params.color),a.setUniforms(o,"opacity","float",this._params.opacity),i.bindVAO(s.vertexArray),i.drawArrays(r.PrimitiveType.TRIANGLE_STRIP,0,4)}}const p=[new m.VertexElementDescriptor("a_position",2,r.DataType.UNSIGNED_SHORT,0,8),new m.VertexElementDescriptor("a_texcoord",2,r.DataType.UNSIGNED_SHORT,4,8)],h={vsPath:"raster/flow/imagery",fsPath:"raster/flow/imagery",locations:n.fromLayout(p)};class f{constructor(t,e){this._flowData=t,this._values=e}attach(t){const{context:e}=t,{width:a,height:r}=this._flowData,n=new l.VertexBuffer(e,p,new Uint16Array([0,0,0,1,a,0,1,1,0,r,0,0,a,r,1,0])),m=new o.VertexArrayObject(e,n),c=[];"ramp"===this._values.color.kind&&c.push("vvColor"),"ramp"===this._values.opacity.kind&&c.push("vvOpacity");const f=t.getProgram(h,c);let u=1e6,d=-1e6;for(let t=0;t<r;t++)for(let e=0;e<a;e++)if(0!==this._flowData.mask[t*a+e]){const r=this._flowData.data[2*(t*a+e)],s=this._flowData.data[2*(t*a+e)+1],i=Math.sqrt(r*r+s*s);u=Math.min(u,i),d=Math.max(d,i)}const _=new Uint8Array(4*a*r);for(let t=0;t<r;t++)for(let e=0;e<a;e++)if(0!==this._flowData.mask[t*a+e]){const r=this._flowData.data[2*(t*a+e)],s=this._flowData.data[2*(t*a+e)+1],i=(Math.sqrt(r*r+s*s)-u)/(d-u);_[4*(t*a+e)]=255*i,_[4*(t*a+e)+1]=0,_[4*(t*a+e)+2]=0,_[4*(t*a+e)+3]=255}else _[4*(t*a+e)]=0,_[4*(t*a+e)+1]=0,_[4*(t*a+e)+2]=0,_[4*(t*a+e)+3]=0;const x=new i.TextureDescriptor(a,r);x.internalFormat=6408,x.wrapMode=33071,x.flipped=!0;const w=new s.Texture(e,x,_);this.vertexArray=m,this.program=f,this.texture=w,this.min=u,this.max=d,this._flowData=null}detach(){this.vertexArray.dispose(),this.texture.dispose()}get ready(){return this.program.compiled}}t.Imagery=c,t.ImageryResources=f,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});