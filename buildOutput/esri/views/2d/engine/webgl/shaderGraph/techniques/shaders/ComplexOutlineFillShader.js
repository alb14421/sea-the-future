// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../chunks/tslib.es6","../../GraphShaderModule","../../graph/glsl","./AFeatureShader","./ComplexFillShader","./constants","./hittestUtils","./LineShader","./LocalTileOffset","./MosaicInfo","./OutlineFillShader","./PatternOutlineFillShader"],function(t,e,o,a,l,i,r,n,s,c,p,u,d){"use strict";const h=1/r.packPrecision;class _ extends l.FeatureVertexInput{}e.__decorate([o.location(3,a.Vec4)],_.prototype,"color",void 0),e.__decorate([o.location(4,a.Vec4)],_.prototype,"tlbr",void 0),e.__decorate([o.location(5,a.Float)],_.prototype,"angle",void 0),e.__decorate([o.location(6,a.Float)],_.prototype,"aux1",void 0),e.__decorate([o.location(7,a.Float)],_.prototype,"aux2",void 0),e.__decorate([o.location(8,a.Vec2)],_.prototype,"aux3",void 0),e.__decorate([o.location(9,a.Vec2)],_.prototype,"aux4",void 0),e.__decorate([o.location(10,a.Vec2)],_.prototype,"zoomRange",void 0);class f extends d.PatternOutlineFillFragmentInput{}class x extends u.AOutlineFillShader{constructor(){super(...arguments),this.type="ComplexOutlineFillShader"}vertex(t,e){const{aux1:o,aux2:l,aux3:n,aux4:s}=t,c={...t,width:o,height:l,offset:n,scale:s.multiply(h)},p={...t,halfWidth:o,referenceHalfWidth:l,offset:n,normal:s.subtract(r.signedToUnsignedByte).multiply(h)},d=u.getOutlineFillVertexData(this,p),_=i.getComplexFillVertexData(this,c),f=a.greaterThan(d.isOutline,new a.Float(.5));return{...d,..._,...Object.assign({},this.maybeRunHittest(t,e,f))}}fragment(t){const{isOutline:e}=t,o=a.greaterThan(e,new a.Float(.5)),l=s.getLineFragmentColor(t,this.antialiasingControls.blur),r=i.getComplexFillFragmentColor(this,t),n=a.ifElse(o,l,r),c=a.ifElse(o,new a.Float(1/255),new a.Float(0));return this.getFragmentOutput(n,t,c)}hittest(t,e,o){return a.ifElse(o,n.failHittest(this.hittestRequest),n.hittestFill(this,t,e))}}e.__decorate([o.uniform(p.MosaicInfo)],x.prototype,"mosaicInfo",void 0),e.__decorate([o.uniform(c.LocalTileOffset)],x.prototype,"localTileOffset",void 0),e.__decorate([e.__param(0,o.input(_)),e.__param(1,o.input(l.BaseHittestVertexInput))],x.prototype,"vertex",null),e.__decorate([e.__param(0,o.input(f))],x.prototype,"fragment",null),t.ComplexOutlineFillShader=x,t.ComplexOutlineFillVertexInput=_,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});