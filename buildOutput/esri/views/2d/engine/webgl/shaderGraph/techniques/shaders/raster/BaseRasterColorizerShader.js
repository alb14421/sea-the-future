// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../../chunks/tslib.es6","../../../../../../../../layers/support/rasterFunctions/pixelUtils","../../../GraphShaderModule","../../../graph/glsl","./projection","./processor/math"],function(e,o,t,i,r,n,p){"use strict";class a extends i.VertexInput{}o.__decorate([i.location(0,r.Vec2)],a.prototype,"position",void 0);class s extends i.FragmentInput{}class l extends i.UniformGroup{}o.__decorate([i.uniform(r.Sampler2D)],l.prototype,"texture",void 0),o.__decorate([i.uniform(r.Mat3)],l.prototype,"dvsMat3",void 0),o.__decorate([i.uniform(r.Vec2)],l.prototype,"coordScale",void 0),o.__decorate([i.uniform(r.Vec2)],l.prototype,"srcImageSize",void 0),o.__decorate([i.uniform(r.Float)],l.prototype,"opacity",void 0);class c extends i.UniformGroup{}o.__decorate([i.uniform(r.Sampler2D)],c.prototype,"maskTexture",void 0);class d extends i.UniformGroup{}o.__decorate([i.uniform(r.FixedArray.ofType(r.Float,2*t.maxMapSizeGpu))],d.prototype,"ranges",void 0),o.__decorate([i.uniform(r.Mat3)],d.prototype,"bandSwap",void 0),o.__decorate([i.uniform(r.Vec4)],d.prototype,"color",void 0);class u extends i.GraphShaderModule{constructor(){super(...arguments),this.applyProjection=!0,this.lookupProjection=!1,this.bilinear=!1,this.bicubic=!1,this.nearestOnEdge=!1,this.applyPixelMask=!1,this.applyPixelHighlights=!1}vertex(e){const o=e.position,{dvsMat3:t,coordScale:i}=this.config,n=t.multiply(new r.Vec3(o.multiply(i),1));return{uv:o,glPosition:new r.Vec4(n,1)}}fragment(e){const o=new i.FragmentOutput,t=n.getPixelLocation(e.uv,this.applyProjection?this.projectionConfig:void 0,this.lookupProjection);let p=this._colorize(t);this.applyPixelHighlights&&(p=this._highlightPixels(t,p));const a=r.ifElse(n.isOutside(t),new r.Vec4(0),p);let s=a.a.multiply(this.config.opacity);if(this.applyPixelMask){const o=this._getPixelMask(e.uv);s=s.multiply(o)}return o.fragColor=new r.Vec4(a.rgb,1).multiply(s),o}_getPixel(e){const{config:o,bicubic:t,bilinear:i,nearestOnEdge:r}=this;return n.getPixel(e,o,{bicubic:t,bilinear:i,nearestOnEdge:r})}_getPixelMask(e){const{maskTexture:o}=this.pixelMaskConfig,t=r.texture2D(o,e);return r.sign(t.a)}_highlightPixels(e,o){const t=this._getPixel(e),{ranges:i,color:n,bandSwap:a}=this.highlightConfig,s=a.multiply(t.rgb).x,l=p.computeSingleBandRangeFactor(s,i).multiply(t.a);return r.mix(o,n,l)}}o.__decorate([i.define],u.prototype,"applyProjection",void 0),o.__decorate([i.define],u.prototype,"lookupProjection",void 0),o.__decorate([i.define],u.prototype,"bilinear",void 0),o.__decorate([i.define],u.prototype,"bicubic",void 0),o.__decorate([i.define],u.prototype,"nearestOnEdge",void 0),o.__decorate([i.define],u.prototype,"applyPixelMask",void 0),o.__decorate([i.define],u.prototype,"applyPixelHighlights",void 0),o.__decorate([i.uniform(l)],u.prototype,"config",void 0),o.__decorate([i.option(n.ProjectionConfig)],u.prototype,"projectionConfig",void 0),o.__decorate([i.option(c)],u.prototype,"pixelMaskConfig",void 0),o.__decorate([i.option(d)],u.prototype,"highlightConfig",void 0),o.__decorate([o.__param(0,i.input(a))],u.prototype,"vertex",null),o.__decorate([o.__param(0,i.input(s))],u.prototype,"fragment",null),e.BaseRasterColorizerShader=u,e.HighlightConfig=d,e.PixelMaskConfig=c,e.RasterColorizerFragmentInput=s,e.RasterConfig=l,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});