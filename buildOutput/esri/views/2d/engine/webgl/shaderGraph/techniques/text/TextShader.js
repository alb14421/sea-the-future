// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../chunks/tslib.es6","../../../definitions","../../GraphShaderModule","../../graph/glsl","../shaders/AFeatureShader","../shaders/constants","../shaders/hittestUtils","../shaders/MosaicInfo","../shaders/utils","../shaders/VisualVariableColor","../shaders/VisualVariableOpacity","../shaders/VisualVariableRotation","../shaders/VisualVariableSizeMinMaxValue","../shaders/VisualVariableSizeScaleStops","../shaders/VisualVariableSizeStops","../shaders/VisualVariableSizeUnitValue","../shaders/vvUtils"],function(e,t,i,o,a,l,s,r,n,d,c,p,u,V,y,h,f,b){"use strict";const x=360/254;class v extends l.FeatureVertexInput{}t.__decorate([o.location(3,a.Vec4)],v.prototype,"color",void 0),t.__decorate([o.location(4,a.Vec2)],v.prototype,"offset",void 0),t.__decorate([o.location(5,a.Vec2)],v.prototype,"textureUV",void 0),t.__decorate([o.location(6,a.Vec2)],v.prototype,"fontAndReferenceSize",void 0),t.__decorate([o.location(7,a.Vec4)],v.prototype,"outlineColor",void 0),t.__decorate([o.location(8,a.Vec4)],v.prototype,"haloColor",void 0),t.__decorate([o.location(9,a.Vec2)],v.prototype,"outlineAndHaloSize",void 0),t.__decorate([o.location(10,a.Vec2)],v.prototype,"zoomRange",void 0),t.__decorate([o.location(11,a.Float)],v.prototype,"clipAngle",void 0),t.__decorate([o.location(12,a.Vec4)],v.prototype,"referenceSymbol",void 0),t.__decorate([o.location(15,a.Float)],v.prototype,"visibility",void 0);class m extends o.ComputeVertexInput{}t.__decorate([o.location(13,a.Vec2)],m.prototype,"offsetNextVertex1",void 0),t.__decorate([o.location(14,a.Vec2)],m.prototype,"offsetNextVertex2",void 0);class _ extends l.FeatureFragmentInput{}class w extends l.AFeatureShader{constructor(){super(...arguments),this.type="TextShader",this.computeAttributes={offset:["offsetNextVertex1","offsetNextVertex2"]},this.textRenderPassType=0,this.isBackgroundPass=!1,this.isLabel=!1}clipLabel(e,t){const{clipAngle:o,zoomRange:l,visibility:s}=e,r=o.multiply(x),n=a.abs(this.view.rotation.subtract(r)),d=a.min(new a.Float(360).subtract(n),n);let c=new a.Float(0);const p=a.floor(this.view.currentZoom.multiply(i.minMaxZoomPrecisionFactor)).divide(i.minMaxZoomPrecisionFactor),u=l.x,V=l.y,y=new a.Float(1).subtract(a.step(u,p)).multiply(2),h=a.step(new a.Float(90),d).multiply(2),f=new a.Float(2).multiply(new a.Float(1).subtract(a.step(p,V)));return c=c.add(t.multiply(y)),c=c.add(t.multiply(h)),c=c.add(f),s&&(c=c.add(s)),c}vertex(e,t){const o=d.getBit(e.bitset,s.bitsetTextIsBackground),l=new a.Float(1).subtract(o);let r=e.fontAndReferenceSize[0];const n=e.fontAndReferenceSize[1];let c=r.divide(s.sdfFontSize);const p=1===this.textRenderPassType?e.outlineColor:2===this.textRenderPassType?e.haloColor:this._getVertexColor(e),u=this.view.displayViewScreenMat3.multiply(new a.Vec3(e.pos,1));let V=e.offset,y=new a.Float(1),h=a.Mat3.identity(),f=new a.Vec2(0);if(this.isLabel){if(!e.referenceSymbol)throw new Error("InternalError: Optional attribute 'referenceSymbol' expected for labels");const t=e.referenceSymbol,o=t.xy,a=t.z,l=this._unpackDirection(t.w),s=b.getVisualVariableSize(this,e.id,a).divide(2),r=l.multiply(s.add(i.labelPlacementOffsetPadding));f=o.add(r),V=V.add(f)}else y=b.getVisualVariableSize(this,e.id,n).divide(n),r=r.multiply(y),c=c.multiply(y),V=V.multiply(y),h=b.getVisualVariableRotation(this,e.id),V=h.multiply(new a.Vec3(V,0)).xy;const x=d.getBit(e.bitset,s.bitsetTextIsMapAligned),v=this._getViewRotationMatrix(x).multiply(new a.Vec3(V,0));let m=this.isLabel?this.clipLabel(e,x):this.clip(e.id,e.zoomRange);m=this.isBackgroundPass?m.add(l.multiply(2)):m.add(o.multiply(2));let _=new a.Float(0);if(1===this.textRenderPassType&&(m=m.add(a.ifElse(a.equal(e.outlineAndHaloSize.x,new a.Float(0)),new a.Float(2),new a.Float(0))),_=new a.Float(e.outlineAndHaloSize.x).divide(c).divide(s.maxSdfDistance)),2===this.textRenderPassType){const t=e.outlineAndHaloSize.x,i=new a.Float(e.outlineAndHaloSize.y);m=m.add(a.ifElse(a.equal(i,new a.Float(0)),new a.Float(2),new a.Float(0))),_=i.add(t).divide(c).divide(s.maxSdfDistance)}const w=this.isLabel?a.greaterThan(m,new a.Float(1)):new a.Bool(!1);return{glPosition:new a.Vec4(u.xy.add(v.xy),m,1),color:p,size:c,textureUV:e.textureUV.divide(this.mosaicInfo.size),antialiasingWidth:new a.Float(.105*s.sdfFontSize).divide(r).divide(this.view.pixelRatio),outlineDistanceOffset:_,...this.maybeRunHittest(e,t,{vvSizeAdjustment:y,vvRotation:h,labelOffset:f,labelClipped:w})}}_getViewRotationMatrix(e){const t=this.view.displayViewMat3,i=this.view.displayMat3,o=new a.Float(1).subtract(e);return t.multiply(e).add(i.multiply(o))}fragment(e){const t=new a.Float(2/8),i=new a.Float(1).subtract(t),o=a.texture2D(this.mosaicInfo.texture,e.textureUV).a;let l=i.subtract(e.outlineDistanceOffset);this.highlight&&(l=l.divide(2));const s=e.antialiasingWidth,r=a.smoothstep(l.subtract(s),l.add(s),o);return this.getFragmentOutput(e.color.multiply(r),e)}hittest(e,t,{vvSizeAdjustment:i,vvRotation:o,labelOffset:l,labelClipped:s}){let n,d,c;this.isLabel?(n=new a.Vec3(e.offset.add(l),0),d=new a.Vec3(t.offsetNextVertex1.add(l),0),c=new a.Vec3(t.offsetNextVertex2.add(l),0)):(n=o.multiply(new a.Vec3(e.offset.multiply(i),0)),d=o.multiply(new a.Vec3(t.offsetNextVertex1.multiply(i),0)),c=o.multiply(new a.Vec3(t.offsetNextVertex2.multiply(i),0)));const{viewMat3:p,tileMat3:u}=this.view,V=p.multiply(u).multiply(new a.Vec3(e.pos,1)),y=V.add(u.multiply(n)).xy,h=V.add(u.multiply(d)).xy,f=V.add(u.multiply(c)).xy,b=r.distPointTriangle(this.hittestRequest.position,y.xy,h.xy,f.xy);return this.isLabel?a.ifElse(s,r.failHittest(this.hittestRequest),b):b}_unpackDirection(e){const t=new a.Int(e),i=a.bitRShift(t,new a.Int(2)),o=a.bitAnd(t,new a.Int(3));return new a.Vec2(new a.Float(i).subtract(1),new a.Float(o).subtract(1))}_getVertexColor(e){let t=e.color;if(this.visualVariableColor){const i=this.storage.getColorValue(e.id);t=this.visualVariableColor.getColor(i,e.color,new a.Bool(!1))}if(this.visualVariableOpacity){const i=this.storage.getOpacityValue(e.id),o=this.visualVariableOpacity.getOpacity(i);t=t.multiply(o)}return t}}t.__decorate([o.option(c.VisualVariableColor)],w.prototype,"visualVariableColor",void 0),t.__decorate([o.option(p.VisualVariableOpacity)],w.prototype,"visualVariableOpacity",void 0),t.__decorate([o.option(u.VisualVariableRotation)],w.prototype,"visualVariableRotation",void 0),t.__decorate([o.option(V.VisualVariableSizeMinMaxValue)],w.prototype,"visualVariableSizeMinMaxValue",void 0),t.__decorate([o.option(y.VisualVariableSizeScaleStops)],w.prototype,"visualVariableSizeScaleStops",void 0),t.__decorate([o.option(h.VisualVariableSizeStops)],w.prototype,"visualVariableSizeStops",void 0),t.__decorate([o.option(f.VisualVariableSizeUnitValue)],w.prototype,"visualVariableSizeUnitValue",void 0),t.__decorate([o.uniform(n.MosaicInfo)],w.prototype,"mosaicInfo",void 0),t.__decorate([o.define],w.prototype,"textRenderPassType",void 0),t.__decorate([o.define],w.prototype,"isBackgroundPass",void 0),t.__decorate([o.define],w.prototype,"isLabel",void 0),t.__decorate([t.__param(0,o.input(v)),t.__param(1,o.input(m))],w.prototype,"vertex",null),t.__decorate([t.__param(0,o.input(_))],w.prototype,"fragment",null),e.TextFragmentInput=_,e.TextShader=w,e.TextVertexInput=v,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});