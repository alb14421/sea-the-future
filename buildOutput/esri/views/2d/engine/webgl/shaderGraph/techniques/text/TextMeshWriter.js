// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../core/mathUtils","../../../../../../../core/screenUtils","../../../../../../../geometry/GeometryCursor","../../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper","../../../alignmentUtils","../../../definitions","../../../mesh/templates/shapingUtils","../fill/meshWriterUtils","../mesh/MeshWriter","../shaders/constants","./TextParams","../../../../../../webgl/enums"],function(t,e,o,r,i,s,n,a,p,c,l,h,u){"use strict";const d=[4,4],f=[16,4],m={topLeft:f,topRight:f,bottomLeft:f,bottomRight:f},x=[4,2],g=[4,6],y={topLeft:x,topRight:x,bottomLeft:g,bottomRight:g},T={topLeft:x,topRight:g,bottomLeft:x,bottomRight:g},S={topLeft:g,topRight:g,bottomLeft:d,bottomRight:d},b={topLeft:d,topRight:d,bottomLeft:g,bottomRight:g},P={topLeft:g,topRight:d,bottomLeft:g,bottomRight:d},_={topLeft:d,topRight:g,bottomLeft:d,bottomRight:g},M={createComputedParams:t=>t,optionalAttributes:{zoomRange:{type:u.DataType.UNSIGNED_SHORT,count:2,packPrecisionFactor:n.minMaxZoomPrecisionFactor,packTessellation:({minZoom:t,maxZoom:e})=>[t||0,e||28]},clipAngle:{type:u.DataType.UNSIGNED_BYTE,count:1,packTessellation:({clipAngle:t})=>k(t||0)},referenceSymbol:{type:u.DataType.BYTE,count:4,packPrecisionFactor:1,packTessellation:(t,e)=>{const r=t.isLineLabel||!t.referenceBounds,i=s.getXDirection(r?"center":e.horizontalAlignment),n=s.getYDirection(r?"middle":e.verticalAlignment),{offsetX:a,offsetY:p,size:c}=r?{offsetX:0,offsetY:0,size:0}:t.referenceBounds;return[o.pt2px(a),-o.pt2px(p),Math.round(o.pt2px(c)),i+1<<2|n+1]}},visibility:{type:u.DataType.FLOAT,count:1,otherSource:!0}},attributes:{pos:{type:u.DataType.SHORT,count:2,pack:"position",packPrecisionFactor:10},id:{type:u.DataType.UNSIGNED_BYTE,count:3,pack:"id"},bitset:{type:u.DataType.UNSIGNED_BYTE,count:1,packTessellation:({isBackground:t,mapAligned:e})=>p.packBitset([[l.bitsetTextIsBackground,t],[l.bitsetTextIsMapAligned,!!e]])},offset:{type:u.DataType.SHORT,count:2,packPrecisionFactor:8,packAlternating:{count:4,packTessellation:({offsets:t})=>{const{bottomLeft:e,bottomRight:o,topLeft:r,topRight:i}=t;return[r,i,e,o]}}},textureUV:{type:u.DataType.SHORT,count:2,packPrecisionFactor:4,packAlternating:{count:4,packTessellation:({texcoords:t})=>{const{bottomLeft:e,bottomRight:o,topLeft:r,topRight:i}=t;return[r,i,e,o]}}},color:{type:u.DataType.UNSIGNED_BYTE,count:4,normalized:!0,packTessellation:({color:t})=>t},fontAndReferenceSize:{type:u.DataType.UNSIGNED_SHORT,count:2,packPrecisionFactor:4,packTessellation:({fontSize:t},{referenceSize:e})=>[Math.round(o.pt2px(t)),Math.round(o.pt2px(e??t))]},outlineColor:{type:u.DataType.UNSIGNED_BYTE,count:4,normalized:!0,pack:({outlineColor:t})=>p.processColorInput(t)},haloColor:{type:u.DataType.UNSIGNED_BYTE,count:4,normalized:!0,pack:({haloColor:t})=>p.processColorInput(t)},outlineAndHaloSize:{type:u.DataType.UNSIGNED_SHORT,count:2,packPrecisionFactor:4,packTessellation:({outlineSize:t,haloSize:e})=>[Math.round(o.pt2px(t)),Math.round(o.pt2px(e))]}}};class I extends c.MeshWriter{constructor(){super(...arguments),this.vertexSpec=M,this._textMeshParamsPropsInitialized=!1}ensurePacked(t,e,o){super.ensurePacked(t,e,o),this._textMeshParamsPropsInitialized&&!this._evaluator.hasDynamicProperties||(this._textMeshTransformProps=new h.TextMeshTransformProps(this.evaluatedMeshParams),this._textMeshParamsPropsInitialized=!0)}_write(t,e,o){const r=this._getShaping();if(!r)return;const i=e.getDisplayId();if(null!=this.evaluatedMeshParams.placement)return this._writePlacedTextMarkers(t,e,r,o);if(o?.nextPath())return o.nextPoint(),this._writeGlyphs(t,i,o.x,o.y,r,0);if("esriGeometryPolygon"===e.geometryType){const o=e.readCentroidForDisplay();if(!o)return;const[s,n]=o.coords;return this._writeGlyphs(t,i,s,n,r,0)}if("esriGeometryMultipoint"===e.geometryType){const o=e.readGeometryForDisplay();return void o?.forEachVertex((e,o)=>this._writeGlyphs(t,i,e,o,r,0))}const s=e.readXForDisplay(),n=e.readYForDisplay();return this._writeGlyphs(t,i,s,n,r,0)}_writePlacedTextMarkers(t,e,s,n){const a=n??r.GeometryCursor.fromFeatureSetReaderCIM(e);if(!a)return;const p=i.CIMMarkerPlacementHelper.getPlacement(a,-1,this.evaluatedMeshParams.placement,o.pt2px(1),t.id);if(!p)return;const c=e.getDisplayId();let l=p.next();for(;null!=l;){const e=l.tx,o=-l.ty,r=-l.getAngle();this._writeGlyphs(t,c,e,o,s,r),l=p.next()}}_getShaping(t){const r=this._textMeshTransformProps,i=this.evaluatedMeshParams;if(!i.glyphs?.glyphs.length)return null;const s=o.pt2px(r.fontSize),p=o.pt2px(r.offsetX),c=o.pt2px(r.offsetY),l=e.clamp(o.pt2px(i.lineWidth),n.minTextLineWidth,n.maxTextLineWidth),h=n.magicLabelLineHeight*e.clamp(i.lineHeightRatio,.25,4);return a.shapeGlyphs(i.glyphs,{scale:s/n.glyphSize,angle:r.postAngle,xOffset:p,yOffset:c,horizontalAlignment:i.horizontalAlignment,verticalAlignment:t||i.verticalAlignment,maxLineWidth:l,lineHeight:h,decoration:i.decoration,borderLineSizePx:o.pt2px(i.boxBorderLineSize),hasBackground:!!i.boxBackgroundColor,useCIMAngleBehavior:i.useCIMAngleBehavior})}_writeGlyphs(t,e,r,i,s,n,a,c,l=!0){const h=this.evaluatedMeshParams,u=this._textMeshTransformProps,d=o.pt2px(u.fontSize),f=u.haloSize,m=u.outlineSize,x=o.pt2px(u.offsetX),g=o.pt2px(u.offsetY),[y,T]=p.getMinMaxZoom(h.scaleInfo,this.getTileInfo());0!==n&&s.setRotation(n);const S=s.bounds,b=r+S.x+x,P=i+S.y-g,_=2*(h.minPixelBuffer?h.minPixelBuffer/d:1),M=Math.max(S.width,S.height)*_;s.textBox&&(t.recordStart(this.instanceId,this.attributeLayout,s.glyphs[0].textureBinding),l&&t.recordBounds(b,P,M,M),this._writeTextBox(t,e,r,i,s.textBox,a,c),t.recordEnd());for(const o of s.glyphs){t.recordStart(this.instanceId,this.attributeLayout,o.textureBinding),l&&t.recordBounds(b,P,M,M);const{texcoords:s,offsets:n}=o;this._writeQuad(t,e,r,i,{texcoords:s,offsets:n,fontSize:d,haloSize:f,outlineSize:m,color:p.processColorInput(h.color),isBackground:!1,referenceBounds:a,minZoom:y,maxZoom:T,...c}),t.recordEnd()}0!==n&&s.setRotation(-n)}_writeTextBox(t,e,o,r,i,s,n){const a=this.evaluatedMeshParams,{fontSize:c,haloSize:l,outlineSize:h}=this._textMeshTransformProps,{boxBackgroundColor:u,boxBorderLineColor:d}=a,f={isBackground:!0,fontSize:c,haloSize:l,outlineSize:h,referenceBounds:s,...n};u&&(this._writeQuad(t,e,o,r,{texcoords:m,offsets:i.main,color:p.processColorInput(u),...f}),d||(this._writeQuad(t,e,o,r,{texcoords:S,offsets:i.top,color:p.processColorInput(u),...f}),this._writeQuad(t,e,o,r,{texcoords:b,offsets:i.bot,color:p.processColorInput(u),...f}),this._writeQuad(t,e,o,r,{texcoords:P,offsets:i.left,color:p.processColorInput(u),...f}),this._writeQuad(t,e,o,r,{texcoords:_,offsets:i.right,color:p.processColorInput(u),...f}))),d&&(this._writeQuad(t,e,o,r,{texcoords:y,offsets:i.top,color:p.processColorInput(d),...f}),this._writeQuad(t,e,o,r,{texcoords:y,offsets:i.bot,color:p.processColorInput(d),...f}),this._writeQuad(t,e,o,r,{texcoords:T,offsets:i.left,color:p.processColorInput(d),...f}),this._writeQuad(t,e,o,r,{texcoords:T,offsets:i.right,color:p.processColorInput(d),...f}))}_writeQuad(t,e,o,r,i){const s=t.vertexCount();this._writeVertex(t,e,o,r,i),t.indexWrite(s+0),t.indexWrite(s+1),t.indexWrite(s+2),t.indexWrite(s+1),t.indexWrite(s+3),t.indexWrite(s+2)}}const k=t=>Math.round(t*(254/360));t.TextMeshWriter=I,t.TextVertexSpec=M,t.maxLabelZoom=28,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});