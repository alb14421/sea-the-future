// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../../../chunks/tslib.es6","../../../../../../../../../layers/support/rasterFunctions/pixelUtils","../../../../GraphShaderModule","../../../../graph/glsl","../../utils","./BaseRasterProcessorShader","./math"],function(e,a,t,o,r,p,s,n){"use strict";class i extends o.UniformGroup{}a.__decorate([o.uniform(r.FixedArray.ofType(r.Float,3*t.maxMapSizeGpu))],i.prototype,"rangeMaps",void 0),a.__decorate([o.uniform(r.FixedArray.ofType(r.Float,2*t.maxMapSizeGpu))],i.prototype,"noDataRanges",void 0),a.__decorate([o.uniform(r.Float)],i.prototype,"unmatchMask",void 0),a.__decorate([o.uniform(r.Float)],i.prototype,"replacementValue",void 0),a.__decorate([o.uniform(r.Vec2)],i.prototype,"clampRange",void 0);class c extends s.BaseRasterProcessorShader{constructor(){super(...arguments),this.type="RemapShader"}_process(e){const a=this._getPixel(e),{rangeMaps:o,unmatchMask:p,clampRange:s,replacementValue:i}=this.remapConfig,{mapValue:c,includeMask:l}=n.computeMapValue(a.r,o,t.maxMapSizeGpu),u=this.replaceUnmatched?i:p.multiply(a.r),m=r.mix(u,c,l),d=r.clamp(m,s.x,s.y),y=this._computeNoDataFactor(a.rrr).multiply(r.max(p,l));return new r.Vec4(d,d,d,a.a).multiply(y)}_computeNoDataFactor(e){const{noDataRanges:a}=this.remapConfig;let o=new r.Vec3(0,0,0);for(let p=0;p<t.maxMapSizeGpu/3;p++){const t=6*p,s=new r.Vec3(a[t],a[t+2],a[t+4]),n=new r.Vec3(a[t+1],a[t+3],a[t+5]);o=o.add(r.step(s,e).multiply(r.step(e,n)))}return p.oneMinus(r.sign(r.dot(o,new r.Vec3(1,1,1))))}}a.__decorate([o.uniform(i)],c.prototype,"remapConfig",void 0),a.__decorate([o.define],c.prototype,"replaceUnmatched",void 0),e.RemapShader=c,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});