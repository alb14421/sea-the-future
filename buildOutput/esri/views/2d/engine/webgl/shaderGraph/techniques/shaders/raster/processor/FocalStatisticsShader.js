// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../../../chunks/tslib.es6","../../../../GraphShaderModule","../../../../graph/glsl","../surface","./BaseRasterProcessorShader","./math"],function(t,e,r,a,s,o,n){"use strict";class i extends r.UniformGroup{}e.__decorate([r.uniform(a.Vec2)],i.prototype,"clampRange",void 0);class c extends o.BaseRasterProcessorShader{constructor(){super(...arguments),this.type="FocalStatisticsShader",this.rows=3,this.cols=3,this.fill=!1}_process(t){const e=this._process1(t),r=a.step(new a.Float(1),e.a);if(!this.fill)return this._clamp(e.rgb,r);const s=this._getPixel(t),o=a.mix(e.rgb,s.rgb,s.a);return this._clamp(o,r)}_clamp(t,e){const{clampRange:r}=this.focalStatisticsConfig;return new a.Vec4(a.clamp(t,r.x,r.y),1).multiply(e)}_process1(t){const{texture:e,srcImageSize:r}=this.config,{rows:o,cols:i}=this,c=new a.Vec2(Math.floor(o/2),Math.floor(i/2)),l=new a.Float(1).divide(r),u=this._getPixel(t),{statisticsType:d}=this,m="min"===d||"max"===d?new a.Vec4(u.rgb,0):new a.Vec4(0,0,0,0);switch(d){case"min":return this._stat(o,i,m,(r,o,n)=>{const i=new a.Vec2(new a.Float(o),new a.Float(n)).subtract(c).multiply(l),u=a.texture2D(e,s.mirror(t.add(i))),d=a.min(r.rgb,u.rgb);return new a.Vec4(d,r.a.add(u.a))});case"max":return this._stat(o,i,m,(r,o,n)=>{const i=new a.Vec2(new a.Float(o),new a.Float(n)).subtract(c).multiply(l),u=a.texture2D(e,s.mirror(t.add(i))),d=a.max(r.rgb,u.rgb);return new a.Vec4(d,r.a.add(u.a))});case"mean":{const r=this._stat(o,i,m,(r,o,n)=>{const i=new a.Vec2(new a.Float(o),new a.Float(n)).subtract(c).multiply(l),u=a.texture2D(e,s.mirror(t.add(i))),d=r.rgb.add(u.rgb.multiply(u.a));return new a.Vec4(d,r.a.add(u.a))}),u=r.rgb.multiply(n.invertValue(r.a));return new a.Vec4(u,r.a)}case"stddev":{const r=this._stat(o,i,m,(r,o,n)=>{const i=new a.Vec2(new a.Float(o),new a.Float(n)).subtract(c).multiply(l),u=a.texture2D(e,s.mirror(t.add(i))),d=r.rgb.add(u.rgb.multiply(u.a));return new a.Vec4(d,r.a.add(u.a))}),u=this._stat(o,i,m,(r,o,n)=>{const i=new a.Vec2(new a.Float(o),new a.Float(n)).subtract(c).multiply(l),u=a.texture2D(e,s.mirror(t.add(i))),d=r.rgb.add(u.a.multiply(u.rgb).multiply(u.rgb));return new a.Vec4(d,r.a.add(u.a))}),d=n.invertValue(u.a),p=a.sqrt(u.subtract(r.multiply(r).multiply(d)).multiply(d));return new a.Vec4(p.rgb,r.a)}default:return u}}_stat(t=3,e=3,r,s){const o=new a.Int(0).setMutable().setDebugName("StatColIterator"),n=new a.Int(0).setMutable().setDebugName("StatRowIterator"),i=r.setMutable().setDebugName("StatAccumulator"),c=s(i,o,n).setDebugName("StatPredicate"),l=a.block({iterX:o,iterY:n,accumulator:i},a.Vec4,c,({out:r,iterX:a,iterY:s,accumulator:o,subgraph:n})=>`\n  for (${s} = 0; ${s} < ${t}; ${s}++) {\n    for (${a} = 0; ${a} < ${e}; ${a}++) {\n  \n    ${n.body}\n  \n    ${o} = ${n.varName};\n    }\n  }\n  ${r} = ${o};\n  `).setDebugName("statBody");return l}}e.__decorate([r.define],c.prototype,"rows",void 0),e.__decorate([r.define],c.prototype,"cols",void 0),e.__decorate([r.define],c.prototype,"statisticsType",void 0),e.__decorate([r.define],c.prototype,"fill",void 0),e.__decorate([r.uniform(i)],c.prototype,"focalStatisticsConfig",void 0),t.FocalStatisticsShader=c,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});