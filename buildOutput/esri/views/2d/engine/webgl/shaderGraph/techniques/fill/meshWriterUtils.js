// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../Color","../../../../../../../core/Error","../../../../../../../core/Logger"],function(e,r,t,n){"use strict";e.getBitMask=function(e){return 1<<e},e.getMinMaxZoom=function(e,r){return[!!e?.minScale&&r.scaleToZoom(e.minScale)||0,!!e?.maxScale&&r.scaleToZoom(e.maxScale)||100]},e.packBitset=function(e){let r=0;for(const[t,n]of e)n&&(r|=1<<t);return r},e.packByteSqrt=function(e,r){return Math.round(Math.min(Math.sqrt(e*r),255))},e.packRounded=function(e,r){return Math.round(e*r)/r},e.processColorInput=function(e){let o;if(!e)return[0,0,0,0];if("string"==typeof e){const c=r.fromString(e);if(!c)return n.getLogger("esri.views.2d.engine.webgl.shaderGraph.techniques.meshWriterUtils").errorOnce(new t("mapview:mesh-processing","Unable to parse string into color",{color:e})),[0,0,0,0];o=c.toArray()}else o=e;const[c,s,i,u]=o;return[c*(u/255),s*(u/255),i*(u/255),u]},e.processLineCapInput=function(e){switch(e){case"butt":case"Butt":return 0;case"round":case"Round":return 1;case"square":case"Square":return 2}},e.processLineJoinInput=function(e){switch(e){case"bevel":case"Bevel":return 0;case"miter":case"Miter":return 2;case"round":case"Round":return 1}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});