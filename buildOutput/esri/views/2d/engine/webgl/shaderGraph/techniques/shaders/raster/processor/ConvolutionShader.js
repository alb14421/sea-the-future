// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../../../chunks/tslib.es6","../../../../GraphShaderModule","../../../../graph/glsl","../surface","./BaseRasterProcessorShader"],function(e,o,t,r,n,a){"use strict";class i extends t.UniformGroup{}o.__decorate([t.uniform(r.FixedArray2D.ofType(r.Float,5,5,!0))],i.prototype,"kernel",void 0),o.__decorate([t.uniform(r.Vec2)],i.prototype,"clampRange",void 0);class s extends a.BaseRasterProcessorShader{constructor(){super(...arguments),this.type="ConvolutionShader",this.rows=3,this.cols=3}_process(e){const{rows:o,cols:t}=this,a=new r.Vec2(Math.floor(o/2),Math.floor(t/2)),{texture:i,srcImageSize:s}=this.config,c=new r.Float(1).divide(s),{kernel:l}=this.convolutionConfig,d=r.reduce2D(l,{initialValue:new r.Vec4(0,0,0,1),xRange:[0,o],yRange:[0,t],callback:(o,t,s,l)=>{const d=new r.Vec2(new r.Float(s),new r.Float(l)).subtract(a).multiply(c),u=r.texture2D(i,n.mirror(e.add(d))),p=u.rgb.multiply(t).add(o.rgb),f=u.a.multiply(o.a);return new r.Vec4(p,f)}}),{clampRange:u}=this.convolutionConfig;return new r.Vec4(r.clamp(d.rgb,u.x,u.y),1).multiply(d.a)}}o.__decorate([t.define],s.prototype,"rows",void 0),o.__decorate([t.define],s.prototype,"cols",void 0),o.__decorate([t.uniform(i)],s.prototype,"convolutionConfig",void 0),e.ConvolutionShader=s,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});