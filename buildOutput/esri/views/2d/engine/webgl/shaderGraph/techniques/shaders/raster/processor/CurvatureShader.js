// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../../../chunks/tslib.es6","../../../../GraphShaderModule","../../../../graph/glsl","../surface","./BaseRasterProcessorShader"],function(e,t,r,a,s,o){"use strict";class u extends r.UniformGroup{}t.__decorate([r.uniform(a.Float)],u.prototype,"zlFactor",void 0);class i extends o.BaseRasterProcessorShader{constructor(){super(...arguments),this.type="CurvatureShader"}_process(e){const{texture:t}=this.config,r=s.getSurfaceValues(t,e,this.config.srcImageSize),o=r[3].add(r[5]).multiply(.5).subtract(r[4]),u=r[1].add(r[7]).multiply(.5).subtract(r[4]),{zlFactor:i}=this.curvatureConfig,{curvatureType:d}=this;let c;if("standard"===d)c=a.negate(i).multiply(o.add(u));else{const e=r[2].subtract(r[0]).add(r[6]).subtract(r[8]).divide(4),t=r[5].subtract(r[3]).divide(2),s=r[1].subtract(r[7]).divide(2),l=t.multiply(t),n=s.multiply(s),p=t.multiply(s),y=i.divide(l.add(n));c="profile"===d?a.dot(new a.Vec3(o,u,e),new a.Vec3(l,n,p)).multiply(y):a.dot(new a.Vec3(o,u,a.negate(e)),new a.Vec3(n,l,p)).multiply(a.negate(y))}return new a.Vec4(c,c,c,r[9])}}t.__decorate([r.define],i.prototype,"curvatureType",void 0),t.__decorate([r.uniform(u)],i.prototype,"curvatureConfig",void 0),e.CurvatureShader=i,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});