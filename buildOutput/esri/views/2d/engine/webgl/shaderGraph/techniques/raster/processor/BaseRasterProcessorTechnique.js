// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../../core/maybe","../../../../definitions","../../Technique","./textureUtils","../../../../../../../webgl/rasterUtils"],function(e,t,r,n,s,a){"use strict";class o extends n.Technique{shutdown(e){super.shutdown(e),this._fbo?.dispose(),this._fbo=void 0}render(e,n){const{rasterFunction:o}=e;if(!o)return;const{context:i}=e,u="indexedColormap"in o.parameters?a.createColormapTexture(i,o.parameters.indexedColormap):void 0,c="Reproject"===o.name,d=i.getBoundFramebufferObject(),l=i.getViewport();for(const a of n.bitmaps){const d=c?!(a.rasterTexture&&a.projected):!a.processed;if(!a.source||!d||a.suspended)continue;e.timeline.begin(this.name);const{painter:l}=e;l.setPipelineState({depth:!1,stencil:{test:!1,write:!1},color:{write:[!0,!0,!0,!0],blendMode:"custom",blendParameters:{srcRGB:1,dstRGB:0,srcAlpha:1,dstAlpha:0}}}),c||(a.processedTexture=t.disposeMaybe(a.processedTexture)),a.updateTexture(e);const[p,g]=a.getRasterTextureSize(c),m=p===r.tileSize&&g===r.tileSize,h=m?n.processorFbo:s.createNewFBO(i,p,g);i.bindFramebuffer(h),i.setViewport(0,0,h.width,h.height),this._process(e,a,u);const f=s.createProcessedTexture(e.context,p,g);if(h.copyToTexture(0,0,p,g,0,0,f),c)a.rasterTexture=f;else{const t=e.hasBranches?o.id:0;a.functionTextures[t]=f}m||h.dispose(),e.timeline.end(this.name)}u?.dispose(),i.bindFramebuffer(d),i.setViewport(l.x,l.y,l.width,l.height)}_getCommonConfig(e,t){const{rasterFunction:r,hasBranches:n}=e,{raster:s,rasters:a}=r.parameters,o=n?s?.id??a?.filter(e=>"Constant"!==e.name)?.[0]?.id??-1:0,i=t.functionTextures[o]??t.rasterTexture,u="Reproject"===r.name;return{texture:{texture:i,unit:0},srcImageSize:t.getRasterTextureSize(u)}}_getMultipleInputConfig(e,t){return t?.length?2===t.length?{twoRasterConfig:this._getTwoInputConfig(t,e)}:3===t.length?{threeRasterConfig:this._getThreeInputConfig(t,e)}:{}:{}}_getConstantCount(e){return e?.filter(e=>"Constant"===e.name).length??0}_getTextures(e,t){return e.filter(e=>"Constant"!==e.name).map(e=>null!=e.id&&"Identity"!==e.name?t.functionTextures[e.id]:t.rasterTexture)}_getTwoInputConfig(e,t){const r=this._getTextures(e,t),n=r[1]?{texture:r[1],unit:1}:void 0,s=e.findIndex(e=>"Constant"===e.name),a=0===s?new Float32Array([0,1,0,1,0,0,0,0,0]):new Float32Array([1,0,0,0,1,0,0,0,0]);return{image1:n,image1Const:s>-1?e[s].parameters.value:0,imageSwap:a}}_getThreeInputConfig(e,t){const r=this._getTextures(e,t);let n=0,s=0,a=new Float32Array([1,0,0,0,1,0,0,0,1]);const o=r[1]?{texture:r[1],unit:1}:void 0,i=r[2]?{texture:r[2],unit:2}:void 0,u=[];if(e.forEach((e,t)=>"Constant"===e.name&&u.push(t)),1===u.length)n=e[u[0]].parameters.value,a=0===u[0]?new Float32Array([0,1,0,0,0,1,1,0,0]):1===u[0]?new Float32Array([1,0,0,0,0,1,0,1,0]):new Float32Array([1,0,0,0,1,0,0,0,1]);else if(2===u.length){n=e[u[0]].parameters.value,s=e[u[1]].parameters.value;const t=e.findIndex(e=>"Constant"!==e.name);a=0===t?new Float32Array([1,0,0,0,1,0,0,0,1]):1===t?new Float32Array([0,1,0,1,0,0,0,0,1]):new Float32Array([0,0,1,1,0,0,0,1,0])}return{image1:o,image2:i,image1Const:n,image2Const:s,imageSwap:a}}}e.BaseRasterProcessorTechnique=o,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});