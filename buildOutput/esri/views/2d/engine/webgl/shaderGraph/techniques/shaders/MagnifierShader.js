// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../chunks/tslib.es6","../../GraphShaderModule","../../graph/glsl","./constants"],function(e,t,o,r,a){"use strict";class n extends o.VertexInput{}t.__decorate([o.location(0,r.Vec2)],n.prototype,"position",void 0);class i extends o.FragmentInput{}class l extends o.UniformGroup{}t.__decorate([o.uniform(r.Sampler2D)],l.prototype,"readbackTexture",void 0),t.__decorate([o.uniform(r.Sampler2D)],l.prototype,"maskTexture",void 0),t.__decorate([o.uniform(r.Sampler2D)],l.prototype,"overlayTexture",void 0),t.__decorate([o.uniform(r.Vec4)],l.prototype,"background",void 0),t.__decorate([o.uniform(r.Vec4)],l.prototype,"drawPos",void 0),t.__decorate([o.uniform(r.Float)],l.prototype,"maskEnabled",void 0),t.__decorate([o.uniform(r.Float)],l.prototype,"overlayEnabled",void 0);class c extends o.GraphShaderModule{constructor(){super(...arguments),this.type="MagnifierShader"}vertex(e){const t=e.position,o=e.position.subtract(new r.Vec2(.5)).multiply(this.config.drawPos.zw),a=this.config.drawPos.xy.add(o);return{glPosition:new r.Vec4(a,0,1),texCoord:t}}fragment(e){let t=r.texture2D(this.config.readbackTexture,function(e){const t=e.multiply(new r.Vec2(2)).subtract(1);return r.ifElse(r.equal(t.x,new r.Float(0)).and(r.equal(t.y,new r.Float(0))),new r.Vec2(.5),()=>{const e=r.atan(t.y,t.x),o=r.pow(r.length(t),new r.Float(a.magnifierBarrelFactor)),n=new r.Vec2(r.cos(e),r.sin(e));return o.multiply(n).multiply(new r.Vec2(.5)).add(new r.Float(.5))})}(e.texCoord));t=t.add(new r.Float(1).subtract(t.a)).multiply(this.config.background);const n=r.ifElse(r.equal(this.config.maskEnabled,new r.Float(1)),r.texture2D(this.config.maskTexture,e.texCoord).a,new r.Float(1));t=t.multiply(n);const i=r.ifElse(r.equal(this.config.overlayEnabled,new r.Float(1)),r.texture2D(this.config.overlayTexture,e.texCoord),new r.Vec4(0)),l=new o.FragmentOutput;return l.fragColor=i.add(new r.Float(1).subtract(i.a).multiply(t)),l}}t.__decorate([o.uniform(l)],c.prototype,"config",void 0),t.__decorate([t.__param(0,o.input(n))],c.prototype,"vertex",null),t.__decorate([t.__param(0,o.input(i))],c.prototype,"fragment",null),e.MagnifierShader=c,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});