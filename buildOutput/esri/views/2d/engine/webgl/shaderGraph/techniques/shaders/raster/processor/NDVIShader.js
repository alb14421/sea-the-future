// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../../../chunks/tslib.es6","../../../../GraphShaderModule","../../../../graph/glsl","./BaseRasterProcessorShader","./math"],function(e,t,r,o,s,a){"use strict";class d extends r.UniformGroup{}t.__decorate([r.uniform(o.Mat3)],d.prototype,"bandIndexMat3",void 0);class i extends s.BaseRasterProcessorShader{constructor(){super(...arguments),this.type="NDVIShader",this.scaled=!0}_process(e){const t=this._getPixel(e),{r,g:s}=this.ndviConfig.bandIndexMat3.multiply(t.rgb),d=r.subtract(s),i=r.add(s),n=d.multiply(a.invertValue(i));if(!this.scaled)return new o.Vec4(n,n,n,t.a);const c=o.floor(n.multiply(100).add(100.5));return new o.Vec4(c,c,c,t.a)}}t.__decorate([r.define],i.prototype,"scaled",void 0),t.__decorate([r.uniform(d)],i.prototype,"ndviConfig",void 0),e.NDVIShader=i,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});