// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../chunks/tslib.es6","../../../../../../../symbols/cim/animationDebugFlags","../../GraphShaderModule","../../graph/glsl","./AAnimatedShader","../markers/markerConstants","../shaders/hittestUtils","../shaders/utils","../shaders/vvUtils"],function(e,t,i,a,o,s,l,n,r,d){"use strict";class c extends s.AAnimatedVertexInput{}t.__decorate([a.location(9,o.Vec2)],c.prototype,"uv",void 0),t.__decorate([a.location(10,o.Float)],c.prototype,"angle",void 0);class u extends a.ComputeVertexInput{}t.__decorate([a.location(11,o.Vec2)],u.prototype,"offsetNextVertex1",void 0),t.__decorate([a.location(12,o.Vec2)],u.prototype,"offsetNextVertex2",void 0),t.__decorate([a.location(13,o.Vec2)],u.prototype,"textureUVNextVertex1",void 0),t.__decorate([a.location(14,o.Vec2)],u.prototype,"textureUVNextVertex2",void 0);class p extends s.AAnimatedFragmentInput{}function m(e,t,i,a){return t.multiply(e.x).add(i.multiply(e.y)).add(a.multiply(e.z))}class h extends s.AAnimatedShader{constructor(){super(...arguments),this.type="AnimatedMarkerShader",this.computeAttributes={offset:["offsetNextVertex1","offsetNextVertex2"],uv:["textureUVNextVertex1","textureUVNextVertex2"]}}vertex(e,t){const i=e.uv.divide(this.mosaicInfo.size),{position:a,animationPointer:n,evalParams:c,isOutline:u,unscaledDistanceToPx:p,vvScale:m,strokeWidth:h,scaleSymbolsProportionally:x,scale:y,isSDF:g,baseSize:V,clip:_}=this._vertexPreamble(e,e.angle,e.lineLength||new o.Float(0)),v=this._toNdc(a);let w=s.getValue(n,1,c);w=new o.Vec4(w.rgb.multiply(w.a),w.a);let f=s.getValue(n,2,c);f=new o.Vec4(f.rgb.multiply(f.a),f.a);let T=s.getValue(n,3,c);T=new o.Vec4(T.rgb.multiply(T.a),T.a);const S=s.getValue(n,4,c).a,b=s.getValue(n,5,c).a,F=d.getVisualVariableColor(this,e.id,w,o.or(r.getBitBool(e.bitset,l.MarkerConstants.bitset.colorLocked),new o.Bool(u))),C=o.mix(F,f,T),M=d.getVisualVariableOpacity(this,e.id),P=o.mix(M,S,b),k=C.multiply(P),z=this.clip(e.id,e.zoomRange).add(_.multiply(2)),A=p.multiply(m);return{glPosition:new o.Vec4(v,z,1),uv:i,color:k.multiply(new o.Float(1).subtract(u)),outlineColor:k.multiply(u),distanceToPx:A,strokeWidth:h.multiply(o.mix(new o.Float(1),y,x)),isOutline:u,isSDF:g,...this.maybeRunHittest(e,t,{pos:e.pos,size:V,sizeCorrection:new o.Float(1),isMapAligned:new o.Float(1),vvRotationMat3:new o.Mat3(1,0,0,0,1,0,0,0,1),placementMat3:new o.Mat3(1,0,0,0,1,0,0,0,1),outlineSize:new o.Float(1),distanceToPx:A,isSDF:g})}}fragment(e){let t=this._getColor(e.uv,{color:e.color,distanceToPx:e.distanceToPx,isSDF:e.isSDF,outlineColor:e.outlineColor,outlineSize:e.strokeWidth});return i.animationDebugFlags.spotlightAnimatedSymbols&&(t=t.add(new o.Vec4(0,.3,0,.3))),this.getFragmentOutput(t,e)}hittest(e,t,i){return o.ifElse(o.lessThan(i.size,this.hittestRequest.smallSymbolSizeThreshold),this._hittestSmallMarker(e,t,i),this._hittestMarker(e,t,i))}_hittestSmallMarker(e,t,i){const{position:a,distance:s,smallSymbolDistance:l}=this.hittestRequest,n=s.subtract(l),{viewMat3:r,tileMat3:d}=this.view,c=r.multiply(d).multiply(new o.Vec3(i.pos,1)).xy,u=i.size.multiply(.5);return o.distance(c,a).subtract(u).add(n)}_hittestMarker(e,t,i){const a=this._vertexPreamble({...e},e.angle,new o.Float(0)).position,s=this._vertexPreamble({...e,offset:t.offsetNextVertex1},e.angle,new o.Float(0)).position,l=this._vertexPreamble({...e,offset:t.offsetNextVertex2},e.angle,new o.Float(0)).position,r=this.hittestRequest.position,d=this.hittestRequest.distance,c=n.distPointTriangle(r,a,s,l);return o.ifElse(o.greaterThan(c,d),c,this._hittestSamples(a,s,l,e,t,i))}_hittestSamples(e,t,i,a,s,l){const{outlineSize:r,isSDF:d,distanceToPx:c}=l,u=this.hittestRequest.position,p=this.hittestRequest.distance,h=n.xyToBarycentric(u.add(new o.Vec2(o.negate(p),o.negate(p))),e,t,i),x=n.xyToBarycentric(u.add(new o.Vec2(0,o.negate(p))),e,t,i),y=n.xyToBarycentric(u.add(new o.Vec2(p,o.negate(p))),e,t,i),g=n.xyToBarycentric(u.add(new o.Vec2(o.negate(p),0)),e,t,i),V=n.xyToBarycentric(u,e,t,i),_=n.xyToBarycentric(u.add(new o.Vec2(p,0)),e,t,i),v=n.xyToBarycentric(u.add(new o.Vec2(o.negate(p),p)),e,t,i),w=n.xyToBarycentric(u.add(new o.Vec2(0,p)),e,t,i),f=n.xyToBarycentric(u.add(new o.Vec2(p,p)),e,t,i),T=a.uv.divide(this.mosaicInfo.size),S=s.textureUVNextVertex1.divide(this.mosaicInfo.size),b=s.textureUVNextVertex2.divide(this.mosaicInfo.size),F={color:new o.Vec4(1,1,1,1),outlineSize:r,outlineColor:new o.Vec4(1,1,1,1),isSDF:d,distanceToPx:c};let C=new o.Float(0);return C=C.add(n.inTriangle(h).multiply(this._getColor(m(h,T,S,b),F).a)),C=C.add(n.inTriangle(x).multiply(this._getColor(m(x,T,S,b),F).a)),C=C.add(n.inTriangle(y).multiply(this._getColor(m(y,T,S,b),F).a)),C=C.add(n.inTriangle(g).multiply(this._getColor(m(g,T,S,b),F).a)),C=C.add(n.inTriangle(V).multiply(this._getColor(m(V,T,S,b),F).a)),C=C.add(n.inTriangle(_).multiply(this._getColor(m(_,T,S,b),F).a)),C=C.add(n.inTriangle(v).multiply(this._getColor(m(v,T,S,b),F).a)),C=C.add(n.inTriangle(w).multiply(this._getColor(m(w,T,S,b),F).a)),C=C.add(n.inTriangle(f).multiply(this._getColor(m(f,T,S,b),F).a)),o.step(C,new o.Float(.05)).multiply(n.failHittest(this.hittestRequest))}}t.__decorate([t.__param(0,a.input(c)),t.__param(1,a.input(u))],h.prototype,"vertex",null),t.__decorate([t.__param(0,a.input(p))],h.prototype,"fragment",null),e.AnimatedMarkerFragmentInput=p,e.AnimatedMarkerShader=h,e.AnimatedMarkerVertexInput=c,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});