// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../core/libs/gl-matrix-2/math/mat3","../../../../../../../core/libs/gl-matrix-2/factories/mat3f32","../../../../../../../symbols/cim/animationDebugFlags","../FeatureTechnique","../featureTechniqueUtils"],function(e,t,i,a,n,r){"use strict";class o extends n.FeatureTechnique{render(e,n){const{context:o,painter:s}=e,{target:u}=n,{freezeGlobalTime:m}=a.animationDebugFlags,l=s.textureManager.animationStore.getTexture(o,0),c=[2/e.state.size[0],0,0,0,-2/e.state.size[1],0,-1,1,1],g=Array.from(t.invert(i.create(),c)),f=Array.from(t.multiply(i.create(),g,u.transforms.displayViewScreenMat3)),d=n.instance.getInput(),p=s.textureManager.getMosaicInfo(o,n.textureKey,!1),{optionalAttributes:x}=d,b=x.zoomRange,h=x.value1Position2Value2,T="accumulatedDistance"in x&&x.accumulatedDistance,D="segmentDirection"in x&&x.segmentDirection,y="normal"in x&&x.normal;s.setShader({shader:this.shaders.geometry,uniforms:{...r.resolveDynamicUniforms(e,n.target,d.uniforms),...r.getFeatureUniforms(e,n.target),mosaicInfo:p,animationInfo:{globalTime:!1===m?e.time/1e3:m,animationTextureSize:[l.descriptor.width,l.descriptor.height],animationTexture:{unit:6,texture:l},toScreen:f,toNdc:c,mapRotation:e.state.rotation,pixelRatio:e.state.pixelRatio},localTileOffset:r.getLocalTileOffset(n.target)},defines:{...r.getSelectionDefines(e)},optionalAttributes:{zoomRange:b,value1Position2Value2:h,accumulatedDistance:T,segmentDirection:D,normal:y},useComputeBuffer:!0}),s.setPipelineState({...r.getFeaturePipelineState(e)}),s.submitDraw(e,n),!1===m&&u.requestRender()}}e.AnimatedTechnique=o,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});