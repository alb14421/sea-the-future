// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../core/screenUtils","../../../../../../../geometry/GeometryCursor","../../../TurboLine","../../../mesh/templates/templateUtils","./AnimatedMeshWriter","./attributes","./ComputedAnimatedParams","../fill/meshWriterUtils","../line/LineMeshWriter"],function(e,t,i,s,r,n,a,o,l,h){"use strict";class u extends n.AAnimatedMeshWriter{_write(e,t,s){const r=s??i.GeometryCursor.fromFeatureSetReaderCIM(t);if(!r)return;const n=this.evaluatedMeshParams.sprite,{textureBinding:a}=n;e.recordStart(this.instanceId,this.attributeLayout,a);const o=t.getDisplayId();this._writePoly(e,o,r.asOptimized()),e.recordEnd()}}class d{constructor(){this.id=0,this.bitset=0,this.indexCount=0,this.vertexCount=0,this.vertexFrom=0,this.vertexBounds=0,this.pathLength=0}}e.AAnimatedPolyMeshWriter=u,e.AnimatedFillMeshWriter=class extends u{constructor(){super(...arguments),this.vertexSpec={createComputedParams:o.createComputedAnimatedMeshParams,attributes:{id:a.id,bitset:a.bitset,pos:a.pos,offset:a.offset.fill,tlbr:a.tlbr,animationPointerAndBaseSizeAndReferenceSize:a.animationPointerAndBaseSizeAndReferenceSize,sizing:a.sizing},optionalAttributes:{zoomRange:a.zoomRange,value1Position2Value2:a.noTiming,lineLength:a.noLineLength}}}_writePoly(e,t,i){const s=[];if(!r.triangulate(s,i))return;const n=e.vertexCount();i.forEachVertex((i,s)=>{this._writeVertex(e,t,i,s)}),e.indexEnsureSize(s.length);for(const t of s)e.indexWrite(n+t)}},e.AnimatedLineMeshWriter=class extends u{constructor(){super(...arguments),this.vertexSpec={createComputedParams:o.createComputedAnimatedMeshParams,attributes:{id:a.id,bitset:a.bitset,pos:a.pos,offset:a.offset.line,tlbr:a.tlbr,animationPointerAndBaseSizeAndReferenceSize:a.animationPointerAndBaseSizeAndReferenceSize,sizing:a.sizing,accumulatedDistance:a.accumulatedDistance,normal:a.normal,segmentDirection:a.segmentDirection},optionalAttributes:{zoomRange:a.zoomRange,value1Position2Value2:a.noTiming,lineLength:a.lineLength}},this._tessParams=new h.LineTessellationParams,this._currentWrite=new d,this._tessellationOptions={halfWidth:0,pixelCoordRatio:1,offset:0,wrapDistance:65535,textured:!1},this._lineLength=0,this._lineTessellator=new s.LineTessellation((e,t,i,s,r,n,a,o,l,h,u)=>this._writeTesselatedVertex(e,t,i,s,r,n,a,o,l,h,u,this._lineLength),this._writeTriangle.bind(this),!1)}_writePoly(e,s,n){const a=r.clipLinesMarshall(i.GeometryCursor.fromOptimized(n,"esriGeometryPolyline"),64);if(null==a)return;const{_currentWrite:o,_tessellationOptions:h}=this,{baseSize:u,capType:d,joinType:m,miterLimit:c}=this.evaluatedMeshParams,p=t.pt2px(.5*u);h.halfWidth=p,h.capType=l.processLineCapInput(d||"Round"),h.joinType=l.processLineJoinInput(m||"Round"),h.miterLimit=c||2,o.out=e,o.id=s,o.vertexCount=0,o.indexCount=0,o.vertexFrom=e.vertexCount(),o.vertexBounds=1;for(const{line:e,start:t,pathLength:i}of a){h.initialDistance=t%65535,o.pathLength=i,this._lineLength=0;for(let t=1;t<e.length;t++){const i=e[t].x-e[t-1].x,s=e[t].y-e[t-1].y;this._lineLength+=Math.sqrt(i*i+s*s)}this._lineTessellator.tessellate(e,h,!1)}}_writeTesselatedVertex(e,t,i,s,r,n,a,o,l,h,u,d){const{out:m,id:c,vertexBounds:p,pathLength:x}=this._currentWrite;return this.hasEffects&&m.recordBounds(e,t,p,p),this._tessParams.extrusionOffsetX=a,this._tessParams.extrusionOffsetY=o,this._tessParams.normalX=l,this._tessParams.normalY=h,this._tessParams.directionX=r,this._tessParams.directionY=n,this._tessParams.distance=u,this._tessParams.pathLength=x,this._tessParams.lineLength=d,this._writeVertex(m,c,e,t,this._tessParams),this._currentWrite.vertexFrom+this._currentWrite.vertexCount++}_writeTriangle(e,t,i){const{out:s}=this._currentWrite;s.indexEnsureSize(3),s.indexWrite(e),s.indexWrite(t),s.indexWrite(i),this._currentWrite.indexCount+=3}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});