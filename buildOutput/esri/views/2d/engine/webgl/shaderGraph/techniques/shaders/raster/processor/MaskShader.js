// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../../../chunks/tslib.es6","../../../../../../../../../layers/support/rasterFunctions/pixelUtils","../../../../GraphShaderModule","../../../../graph/glsl","./BaseRasterProcessorShader"],function(t,e,o,a,s,r){"use strict";class i extends a.UniformGroup{}e.__decorate([a.uniform(s.FixedArray.ofType(s.Float,6))],i.prototype,"includedRanges",void 0),e.__decorate([a.uniform(s.FixedArray.ofType(s.Float,o.maxMapSizeGpu))],i.prototype,"noDataValues",void 0);class l extends r.BaseRasterProcessorShader{constructor(){super(...arguments),this.type="MaskShader",this.isMultiband=!0}_process(t){const e=this._getPixel(t),o=this._computeNoDataFactor(e.r),a=this._computeRangeFactor(e.rgb);let r;if(this.isMultiband){const t=this._computeNoDataFactor(e.g),i=this._computeNoDataFactor(e.b),l=new s.Vec3(o,t,i).multiply(a);r=l.x.multiply(l.y).multiply(l.z)}else r=o.multiply(a.x);return e.multiply(r)}_computeNoDataFactor(t){const{noDataValues:e}=this.maskConfig;let a=new s.Vec3(1);for(let r=0;r<o.maxMapSizeGpu/3;r++){const o=3*r,i=new s.Vec3(e[o+0],e[o+1],e[o+2]),l=s.abs(s.sign(i.subtract(t)));a=a.multiply(l)}return a.x.multiply(a.y).multiply(a.z)}_computeRangeFactor(t){const{includedRanges:e}=this.maskConfig,o=new s.Vec3(e[0],e[2],e[4]),a=new s.Vec3(e[1],e[3],e[5]);return s.step(o,t).multiply(s.step(t,a))}}e.__decorate([a.define],l.prototype,"isMultiband",void 0),e.__decorate([a.uniform(i)],l.prototype,"maskConfig",void 0),t.MaskShader=l,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});