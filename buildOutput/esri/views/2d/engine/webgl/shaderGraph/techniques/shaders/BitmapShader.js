// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../chunks/tslib.es6","../../GraphShaderModule","../../graph/glsl","./bitmapUtils"],function(t,e,o,r,i){"use strict";class c extends o.VertexInput{}e.__decorate([o.location(0,r.Vec2)],c.prototype,"position",void 0);class n extends o.FragmentInput{}class p extends o.UniformGroup{}e.__decorate([o.uniform(r.Sampler2D)],p.prototype,"texture",void 0),e.__decorate([o.uniform(r.Mat3)],p.prototype,"dvsMat3",void 0),e.__decorate([o.uniform(r.Vec2)],p.prototype,"coordScale",void 0),e.__decorate([o.uniform(r.Float)],p.prototype,"opacity",void 0);class a extends o.GraphShaderModule{constructor(){super(...arguments),this.type="BitmapShader"}vertex(t){const e=this.config.dvsMat3.multiply(new r.Vec3(t.position.multiply(this.config.coordScale),1));return{glPosition:new r.Vec4(e,1),texcoord:t.position}}fragment(t){const e=new o.FragmentOutput;let c;return c=this.bicubic?i.sampleBicubicBSpline(this.config.texture,t.texcoord,this.config.coordScale):r.texture2D(this.config.texture,t.texcoord),e.fragColor=new r.Vec4(c.rgb.multiply(this.config.opacity),c.a.multiply(this.config.opacity)),e}}e.__decorate([o.uniform(p)],a.prototype,"config",void 0),e.__decorate([o.define],a.prototype,"bicubic",void 0),e.__decorate([e.__param(0,o.input(c))],a.prototype,"vertex",null),e.__decorate([e.__param(0,o.input(n))],a.prototype,"fragment",null),t.BitmapShader=a,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});