// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../core/MapUtils","../../../../../../../core/screenUtils","../../../../../../../core/string","../../../../../../../core/libs/gl-matrix-2/math/mat2d","../../../../../../../core/libs/gl-matrix-2/factories/mat2df32","../../../../../../../core/libs/gl-matrix-2/math/vec2","../../../../../../../core/libs/gl-matrix-2/factories/vec2f32","../../../../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../../../../geometry/GeometryCursor","../../../../../../../layers/graphics/featureConversionUtils","../../../../../../../layers/graphics/OptimizedGeometry","../../../definitions","../../../collisions/BoundingBox","../../../collisions/LabelMetric","../../../mesh/templates/segmentUtils","../fill/meshWriterUtils","../text/TextMeshWriter"],function(e,t,i,r,s,a,o,n,l,c,h,m,u,d,g,f,_,p){"use strict";function b(e,t){return r.numericHash(`${e}${t}`)}function x(e,t,i){return r.numericHash(`${e}${t}${i}`)}function M(e,t,i,s){const a=i*2**(p.maxLabelZoom-s);return r.numericHash(`${e}${t}${a}`)}function v(e,t,i,s,a){const o=i*2**(p.maxLabelZoom-s);return r.numericHash(`${e}${a}${t}${o}`)}const y=t.memoize(e=>{let t=0;if(0===e)return 1/0;for(;!(e%2);)t++,e/=2;return t});class P extends p.TextMeshWriter{constructor(){super(...arguments),this._zoomLevel=0}_write(e,t,i,r){if(this._zoomLevel=r||0,null!=i)throw new Error("InternalError: EffectGeometry not support for LabelMeshWriter");switch(t.geometryType){case"esriGeometryPoint":{const i=t.readXForDisplay(),r=t.readYForDisplay();this._writePoint(e,i,r,0,t);break}case"esriGeometryEnvelope":case"esriGeometryPolygon":{const i=t.readCentroidForDisplay();if(!i)return;const[r,s]=i.coords;this._writePoint(e,r,s,0,t);break}case"esriGeometryMultipoint":{let i=0;const r=c.GeometryCursor.fromFeatureSetReader(t);if(r?.nextPath())for(;r.nextPoint();)this._writePoint(e,r.x,r.y,i++,t);break}case"esriGeometryPolyline":this._writeLines(e,t)}}_getMetricDir(){const{horizontalAlignment:e,verticalAlignment:t}=this.evaluatedMeshParams;return["center"===e?0:"right"===e?-1:1,"middle"===t?0:"bottom"===t?-1:1]}_createLineLabelMetric(e,t,i,r,s,a){const[o,n]=this._getMetricDir(),l=this.evaluatedMeshParams.scaleInfo?.maxScale??0,c=this.evaluatedMeshParams.scaleInfo?.minScale??0,h=this.evaluatedMeshParams.labelClassId;return new g.LabelMetric(e,h,t,i,r,s,o,n,l,c,a)}_writePoint(e,t,i,r,s){if(t<0||t>u.tileSize||i<0||i>u.tileSize)return;const a=this._getShaping();if(!a)return;const o=s.getDisplayId(),n=this.evaluatedMeshParams.labelClassId,l=b(s.getObjectId(),r),c=x(s.getObjectId(),n,r),[h,m]=this._getMetricDir(),d=this.evaluatedMeshParams.scaleInfo?.maxScale??0,f=this.evaluatedMeshParams.scaleInfo?.minScale??0,_=this._getPointReferenceBounds()||{offsetX:0,offsetY:0,size:0};e.metricStart(new g.LabelMetric(o,n,l,c,t,i,h,m,d,f,_)),this._writeGlyphs(e,o,t,i,a,0,_,void 0,!1),e.metricBoxWrite(a.boundsT),e.metricEnd()}_getPointReferenceBounds(){if(!this._references)return null;for(const e of this._references){const t=e.getBoundsInfo();if(t)return t}return null}_writeLines(e,t){const{scaleInfo:i,verticalAlignment:r}=this.evaluatedMeshParams,s=this.evaluatedMeshParams.repeatLabelDistance||128,a=this._getShaping("middle");if(!a)return;const o=(e,t,i,r)=>this._placeSubdivGlyphs(e,t,i,r),n=(a.bounds.width+s)/2;this._current={out:e,id:t.getDisplayId(),objId:t.getObjectId(),shaping:a,zoomRange:_.getMinMaxZoom(i,this.getTileInfo()),referenceBounds:this._getPointReferenceBounds()||{offsetX:0,offsetY:0,size:0},offsetDirection:null,pathIndex:0},this._verticalPlacement="bottom"===r?"above":"top"===r?"below":null,this._verticalPlacement?this._writeAboveAndBelowAlong(t,o,n):this._writeCenterAlong(t,o,n)}_writeAboveAndBelowAlong(e,t,i){const{repeatLabel:r}=this.evaluatedMeshParams,{shaping:s}=this._current,a=s.bounds.halfHeight,o=e.readGeometryForDisplay();if(!o)return;const n=new m;h.generalizeOptimizedGeometry(n,o,!1,!1,"esriGeometryPolyline",1);const l=L(new m,n,a),c=L(new m,n,-a),u=h.convertToGeometry(c,"esriGeometryPolyline",!1,!1),d=h.convertToGeometry(l,"esriGeometryPolyline",!1,!1),g=f.smoothPaths(d.paths,s.bounds.width),_=f.smoothPaths(u.paths,s.bounds.width);this._current.offsetDirection="above";for(let e=0;e<g.length;e++)this._current.pathIndex=e,f.pathDivide(g[e],i,t,!!r);this._current.offsetDirection="below";for(let e=0;e<_.length;e++)this._current.pathIndex=e,f.pathDivide(_[e],i,t,!!r)}_writeCenterAlong(e,t,i){const{repeatLabel:r}=this.evaluatedMeshParams,{shaping:s}=this._current,a=f.smoothPaths(e.readLegacyGeometryForDisplay().paths,s.bounds.width);for(let e=0;e<a.length;e++)this._current.pathIndex=e,f.pathDivide(a[e],i,t,!!r)}_placeSubdivGlyphs(e,t,i,r){const{allowOverrun:s,labelPosition:a,repeatLabelDistance:o}=this.evaluatedMeshParams,n=this._current.zoomRange[0],l=y(t),c=this._current.shaping.bounds.width/2,h=Math.sqrt(o||128)/2,m=Math.min(i,r-i),u=this._current.shaping.isMultiline?p.maxLabelZoom:Math.log2(m/(h+c/2)),d=0===t?u:Math.min(l,u),g=Math.max(n,this._zoomLevel+1-d),f=this._zoomLevel-g,_=this._current.shaping.bounds.width/2*2**f,b=M(this._current.objId,this._current.pathIndex,t,this._zoomLevel),x=v(this._current.objId,this._current.pathIndex,t,this._zoomLevel,this.evaluatedMeshParams.labelClassId);this._current.shaping.isMultiline?0===t&&this._placeStraight(e,g,b,x):s&&f<0?this._placeStraightAlong(e,n,b,x):"parallel"===a?this._placeStraightAlong(e,g,b,x):"curved"===a&&this._placeCurved(e,g,_,b,x)}_placeStraight(e,t,i,r){const{out:s,id:a,shaping:o,referenceBounds:n}=this._current,{x:l,y:c}=e;s.metricStart(this._createLineLabelMetric(a,i,r,l,c)),s.metricBoxWrite(o.boundsT);const h=e.angle*(180/Math.PI)%360,m=(e.angle*(180/Math.PI)+180)%360,u={clipAngle:h,mapAligned:!0,isLineLabel:!0,minZoom:t};this._writeGlyphs(s,a,l,c,o,0,n,u,!1);const d={clipAngle:m,mapAligned:!0,isLineLabel:!0,minZoom:t};this._writeGlyphs(s,a,l,c,o,0,n,d,!1),s.metricEnd()}_placeCurved(e,t,i,r,s){const{out:a,id:o}=this._current;a.metricStart(this._createLineLabelMetric(o,r,s,e.x,e.y));const n=e.clone(),l=e.angle*(180/Math.PI)%360,c=(e.angle*(180/Math.PI)+180)%360;this._verticalPlacement&&this._verticalPlacement!==this._current.offsetDirection||(this._placeFirst(n,t,1,l),this._placeBack(e,n,t,i,1,l),this._placeForward(e,n,t,i,1,l)),this._verticalPlacement&&this._verticalPlacement===this._current.offsetDirection||(this._placeFirst(n,t,0,c),this._placeBack(e,n,t,i,0,c),this._placeForward(e,n,t,i,0,c)),a.metricEnd()}_placeStraightAlong(e,t,r,o){const{out:l,id:c,shaping:h,zoomRange:m,referenceBounds:u}=this._current,{boxBorderLineColor:d,boxBackgroundColor:g}=this.evaluatedMeshParams,f=e.clone(),_=e.angle*(180/Math.PI)%360,b=(e.angle*(180/Math.PI)+180)%360,x=h.glyphs.length>0&&!(!d&&!g);if(l.metricStart(this._createLineLabelMetric(c,r,o,e.x,e.y)),x){const r=Math.max(t,m[0],0),o=Math.min(p.maxLabelZoom,m[1]),d=s.fromRotation(a.create(),-e.angle),g={minZoom:r,maxZoom:o,clipAngle:_,mapAligned:!0,isLineLabel:!0},f=i.pt2px(this.evaluatedMeshParams.offsetX),x=i.pt2px(this.evaluatedMeshParams.offsetY);if(!this._verticalPlacement||this._verticalPlacement===this._current.offsetDirection){const t=n.fromValues(f,-1*x),[i,r]=h.shapeBackground(s.translate(a.create(),d,t));l.recordStart(this.instanceId,this.attributeLayout,h.glyphs[0].textureBinding),this._writeTextBox(l,c,e.x,e.y,r,u,g),l.recordEnd()}if(!this._verticalPlacement||this._verticalPlacement!==this._current.offsetDirection){const t=n.fromValues(f,x),[i,r]=h.shapeBackground(s.translate(a.create(),d,t));g.clipAngle=b,l.recordStart(this.instanceId,this.attributeLayout,h.glyphs[0].textureBinding),this._writeTextBox(l,c,e.x,e.y,r,u,g),l.recordEnd()}}this._verticalPlacement&&this._verticalPlacement!==this._current.offsetDirection||this._placeFirst(f,t,1,_,!0),this._verticalPlacement&&this._verticalPlacement===this._current.offsetDirection||this._placeFirst(f,t,0,b,!0),l.metricEnd()}_placeBack(e,t,i,r,s,a){const o=e.clone();let n=e.backwardLength+0;for(;o.prev()&&!(n>=r);)this._placeOnSegment(o,t,n,i,-1,s,a),n+=o.length+0}_placeForward(e,t,i,r,s,a){const o=e.clone();let n=e.remainingLength+0;for(;o.next()&&!(n>=r);)this._placeOnSegment(o,t,n,i,1,s,a),n+=o.length+0}_placeFirst(e,t,r,l,c=!1){const{out:h,id:m,shaping:u,zoomRange:g,referenceBounds:f}=this._current,_=u.glyphs,b=i.pt2px(this.evaluatedMeshParams.offsetX),x=i.pt2px(this.evaluatedMeshParams.offsetY),M=n.fromValues(b,x),v=s.fromRotation(a.create(),-e.angle);o.transformMat2d(M,M,v);for(const i of _){const s=i.x>u.bounds.x?r:1-r,a=s*e.remainingLength+(1-s)*e.backwardLength,o=Math.abs(i.x+i.width/2-u.bounds.x),n=Math.max(0,this._zoomLevel+Math.log2(o/(a+0))),_=Math.max(t,c?0:n);if(i.maxZoom=Math.min(g[1],p.maxLabelZoom),i.angle=e.angle+(1-r)*Math.PI,i.minZoom=Math.max(g[0],_),this._writeLineGlyph(h,m,e.x,e.y,i,l,f,!0),(r||this._current.offsetDirection)&&this._isVisible(i.minZoom,i.maxZoom)){const e=new d(i.bounds.x+M[0],i.bounds.y+M[1],i.bounds.width,i.bounds.height);h.metricBoxWrite(e)}}}_placeOnSegment(e,t,r,l,c,h,m){const{out:u,id:g,shaping:f,referenceBounds:_}=this._current,p=f.glyphs,b=e.dx/e.length,x=e.dy/e.length,M={x:e.x+r*-c*b,y:e.y+r*-c*x},v=i.pt2px(this.evaluatedMeshParams.offsetX),y=i.pt2px(this.evaluatedMeshParams.offsetY),P=n.fromValues(v,y),L=s.fromRotation(a.create(),-e.angle);o.transformMat2d(P,P,L);for(const t of p){const i=t.x>f.bounds.x?h:1-h;if(!(i&&1===c||!i&&-1===c))continue;const s=Math.abs(t.x+t.width/2-f.bounds.x),a=Math.max(0,this._zoomLevel+Math.log2(s/r)-.1),o=Math.max(l,this._zoomLevel+Math.log2(s/(r+e.length+0)));if(0!==a&&(t.angle=e.angle+(1-h)*Math.PI,t.minZoom=o,t.maxZoom=a,this._writeLineGlyph(u,g,M.x,M.y,t,m,_,!0),(h||this._current.offsetDirection)&&this._isVisible(t.minZoom,t.maxZoom))){const e=new d(t.bounds.x+P[0],t.bounds.y+P[1],t.bounds.width,t.bounds.height);u.metricBoxWrite(e)}}}_writeLineGlyph(e,t,i,r,s,a,o,n){if(i<0||i>u.tileSize||r<0||r>u.tileSize)return;e.recordStart(this.instanceId,this.attributeLayout,s.textureBinding);const{texcoords:l,offsets:c}=s,{fontSize:h,haloSize:m,outlineSize:d}=this._textMeshTransformProps;this._writeQuad(e,t,i,r,{texcoords:l,offsets:c,fontSize:h,haloSize:m,outlineSize:d,color:_.processColorInput(this.evaluatedMeshParams.color),isBackground:!1,referenceBounds:o,minZoom:Math.max(this._current.zoomRange[0],s.minZoom),maxZoom:Math.min(this._current.zoomRange[1],s.maxZoom),clipAngle:a,mapAligned:n,isLineLabel:!0}),e.recordEnd()}_packedZoom(e){return Math.floor(e*u.minMaxZoomPrecisionFactor)/u.minMaxZoomPrecisionFactor}_isVisible(e,t){let i=Math.max(this._current.zoomRange[0],e),r=Math.min(this._current.zoomRange[1],t);i=this._packedZoom(i),r=this._packedZoom(r);const s=this._packedZoom(this._zoomLevel);return i<=s&&s<=r}}function L(e,t,i){const{coords:r,lengths:s}=t,a=l.create(),n=l.create(),c=l.create(),h=l.create(),m=l.create(),u=l.create();let d=0;for(let t=0;t<s.length;t++){const l=s[t];for(let t=0;t<l;t++){const s=2*(t+d-1),g=2*(t+d),f=2*(t+d+1);t>0?o.set(a,r[s],r[s+1]):o.set(a,0,0),o.set(n,r[g],r[g+1]),t<l-1?o.set(c,r[f],r[f+1]):o.set(c,0,0),0===t?o.set(h,0,0):(o.sub(h,n,a),o.normalize(h,h),o.set(h,h[1],-h[0])),t===l-1?o.set(m,0,0):(o.sub(m,c,n),o.normalize(m,m),o.set(m,m[1],-m[0])),o.add(u,h,m),o.normalize(u,u);const _=u[0]*m[0]+u[1]*m[1];0!==_&&o.scale(u,u,_),o.scale(u,u,i),e.coords.push(n[0]+u[0],n[1]+u[1])}e.lengths.push(l),d+=l}return e}e.LabelMeshWriter=P,e.labelIdHash=b,e.labelMetricHash=x,e.lineLabelIdHash=M,e.lineLabelMetricHash=v,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});