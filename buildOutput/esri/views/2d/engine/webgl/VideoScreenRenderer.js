// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../../core/maybe","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../core/libs/gl-matrix-2/factories/vec4f32","../../../../geometry/Point","../../../../geometry/operators/projectOperator","../DisplayObject","./shaderGraph/techniques/videoScreenRenderer/VideoScreenTechnique","../../../webgl/enums","../../../webgl/FramebufferObject","../../../webgl/Texture","../../../webgl/TextureDescriptor"],function(e,t,r,s,o,i,a,n,c,d,h){"use strict";class u extends i.DisplayObject{constructor(e,t){super(),this._controlPointsOwner=t,this.readbackScreenCoords=r.create(),this.videoTextureCoords=new Array(36),this.overlayTextureCoords=new Array(36),this._prevFBO=null,this._acquiredFBO=null,this._isBound=!1,this._hasCoordinates=!1,this._geIsLoaded=!1,this._ndcRect=[0,0,2,2],this._technique=new a.VideoScreenTechnique,this.visible=!1,this.stage=e;for(let e=0;e<6;e++){const t=e/5;for(let r=0;r<6;r++){const s=r/5;this.videoTextureCoords[6*e+r]={u:s,v:t}}}}getMesh(e){throw new Error("Method not implemented.")}destroy(){super.destroy(),e.disposeMaybe(this._readbackTexture)}bind(e){const{context:t,pixelRatio:r,state:s}=e;if(this._update(e),!this.ready||0===this.readbackScreenCoords[2]||0===this.readbackScreenCoords[3])return this.requestRender(),!1;const{size:o}=s,i=Math.round(r*o[0]),a=Math.round(r*o[1]),n=new h.TextureDescriptor(i,a);return n.samplingMode=9729,n.wrapMode=33071,this._acquiredFBO||(this._acquiredFBO=new c.FramebufferObject(t,n)),this._acquiredFBO.resize(i,a),t.bindFramebuffer(this._acquiredFBO),this._isBound=!0,!0}unbind(e){if(!this._isBound)return;const{context:t,pixelRatio:r,state:s}=e,{size:o}=s,i=this._acquiredFBO;if(!i.getColorTexture(n.ColorAttachment0))throw new Error("Failed to get color texture from FBO.");const a=this._getReadbackTexture(e),c=this.readbackScreenCoords,d=Math.round(r*c[0]),h=Math.round(r*(o[1]-c[1]))-a.descriptor.height,u=d+a.descriptor.width,l=h+a.descriptor.height,b=Math.max(d,0),x=Math.max(h,0),_=Math.min(u,i.width)-b,f=Math.min(l,i.height)-x;_>0&&f>0&&i.copyToTexture(b,x,_,f,b-d,x-h,a),t.bindFramebuffer(this._prevFBO)}_update(e){const{state:r}=e,i=this._controlPointsOwner,a=i.groundControlPoints(),n=i.getSize(),c=r.size,d=a?.length;if(!d)return;if(o.load().then(()=>{this._geIsLoaded=!0}),!this._geIsLoaded)return void this.requestRender();const h=n[0],u=n[1],l=c[0],b=u/c[1],x=h/l;if(b>x){const e=x/b*2,t=(2-e)/2;this._ndcRect[0]=-1+t,this._ndcRect[1]=1,this._ndcRect[2]=e,this._ndcRect[3]=2}else{const e=b/x*2,t=(2-e)/2;this._ndcRect[0]=-1,this._ndcRect[1]=1-t,this._ndcRect[2]=2,this._ndcRect[3]=e}const _=new Array(d),f=r.spatialReference;for(let e=0;e<d;e++){const{lat:t,lon:r}=a[e],i=new s(r,t);_[e]=o.execute(i,f)}const p=[];let m=1/0,M=1/0,g=-1/0,T=-1/0;for(const e of _){const s=t.create();r.toScreen(s,e.x,e.y),p.push({x:s[0],y:s[1]}),m=Math.min(m,s[0]),M=Math.min(M,s[1]),g=Math.max(g,s[0]),T=Math.max(T,s[1])}const C=[m,T],w=[g,M];this.readbackScreenCoords[0]=Math.max(Math.floor(C[0]),0),this.readbackScreenCoords[1]=Math.max(Math.floor(w[1]),0),this.readbackScreenCoords[2]=Math.ceil(w[0]),this.readbackScreenCoords[3]=Math.ceil(C[1]);for(let e=0;e<p.length;e++){const t=p[e],r=(t.x-m)/(g-m),s=(T-t.y)/(T-M);this.overlayTextureCoords[e]={u:r,v:s}}this._hasCoordinates=!0}_createTransforms(){return null}doRender(e){this._readbackTexture&&this._hasCoordinates?this._technique.render(e,{texture:this._readbackTexture,textureCoords:this.overlayTextureCoords,opacity:1,ndcRect:this._ndcRect}):this.requestRender()}_getReadbackTexture(e){const{context:t,pixelRatio:r}=e,s=Math.round(r*Math.abs(this.readbackScreenCoords[2]-this.readbackScreenCoords[0])),o=Math.round(r*Math.abs(this.readbackScreenCoords[3]-this.readbackScreenCoords[1]));if(this._readbackTexture)this._readbackTexture.resize(s,o);else{const e=new h.TextureDescriptor(s,o);e.wrapMode=33071,e.internalFormat=n.SizedPixelFormat.RGBA8,this._readbackTexture=new d.Texture(t,e)}return this._readbackTexture}}return u});