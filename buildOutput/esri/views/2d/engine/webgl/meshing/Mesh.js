// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/compilerUtils","../../../../webgl/BufferObject","../../../../webgl/FramebufferObject","../../../../webgl/Program","../../../../../core/has","../../../../webgl/Renderbuffer","../../../../webgl/Texture","../../../../webgl/VertexArrayObject","./definitions","../../../../webgl/VertexBuffer"],function(e,r,t,s,n,i,o,f,a,u,h){"use strict";e.Mesh=class{constructor(e,r){this._boundPart=null,this.vertexBuffers=new Map,this.indexBuffers=new Map,this.groups=[];for(const t in r.vertex){const{data:s,layout:n}=r.vertex[t],i=new h.VertexBuffer(e,n,s);this.vertexBuffers.set(t,i)}for(const s in r.index){const{data:n}=r.index[s],i=t.BufferObject.createIndex(e,35044,n);this.indexBuffers.set(s,i)}for(const e of r.groups)this.groups.push({...e,vertexArrays:new Map});this.parts=r.parts}bind(e,t,s){this._boundPart=s;const{group:n}=this.parts[this._boundPart],i=this.groups[n];if(!i)throw new Error(`Missing group ${n}.`);let o=i.vertexArrays.get(t.stringHash);if(!o){const s=r.toConst(new Set(t.locations.keys())),n=i.index?this.indexBuffers.get(i.index):null,f=new Map;for(const[e,r]of this.vertexBuffers)r.layout.filter(e=>s.has(e.name)).length>0&&f.set(e,r);o=new a.VertexArrayObject(e,f,n),i.vertexArrays.set(t.stringHash,o)}e.bindVAO(o)}draw(e){if(null==this._boundPart)throw new Error("Mesh.bind() has not been called.");const{start:r,count:t}=this.parts[this._boundPart],{group:s}=this.parts[this._boundPart],{primitive:n,index:i}=this.groups[s];if(i){const s=this.indexBuffers.get(i);if(!s)throw new Error(`Missing index buffer "${i}".`);const{indexType:o}=s;if(!o)throw new Error("Buffer type error.");e.drawElements(n,t,o,r*u.dataSizeInBytes[o])}else e.drawArrays(n,r,t)}unbind(e){this._boundPart=null,e.bindVAO(null)}destroy(){this.groups.forEach(({vertexArrays:e})=>e.forEach(e=>e.disposeVAOOnly())),this.vertexBuffers.forEach(e=>e.dispose()),this.indexBuffers.forEach(e=>e.dispose())}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});