// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/has","../../../../core/promiseUtils","./definitions"],function(e,t,s,o){"use strict";e.TextureUploadManager=class{constructor(e){this._queue=[],this._refreshable=e}destroy(){this._queue=[]}enqueueTextureUpdate(e,t){const r=s.createResolver(),u=e,n=o.textureUploadManagerChunkSize,a=Math.ceil(u.height/n);s.throwIfAborted(t);for(let s=0;s<a;s++){const o=s*n,h=s===a-1,i=h?u.height-n*s:n;this._queue.push({type:"chunk",request:e,resolver:r,chunk:s,chunkOffset:o,destHeight:i,chunkIsLast:h,options:t})}return s.onAbortOrThrow(t,e=>r.reject(e)),r.promise}upload(){const e=performance.now();let t=0;for(;this._queue.length;){const s=this._queue.shift();if(s){if(null!=s.options.signal&&s.options.signal.aborted)continue;switch(s.type){case"chunk":this._uploadChunk(s);break;case"no-chunk":this._uploadNoChunk(s)}++t;const r=performance.now()-e;if(r+r/t>=o.textureUploadManagerBudget)break}}this._queue.length&&this._refreshable.requestRender()}_uploadChunk(e){const{request:t,resolver:s,chunkOffset:o,chunkIsLast:r,destHeight:u}=e,{data:n,texture:a,width:h}=t;null!=n&&(a.updateData(0,0,o,h,u,n,o),r&&s.resolve())}_uploadNoChunk(e){const{request:t,resolver:s}=e,{data:o,texture:r}=t;r.setData(o),s.resolve()}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});