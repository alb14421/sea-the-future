// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./Matcher"],function(e,t){"use strict";class s extends t.FeatureMatcher{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const r=await e.storage.createComputedField(t),a=new s(r,t.isMaxInclusive);await Promise.all(t.intervals.map(async t=>{const s=await e.createMeshWriters(t.meshes);a.add(t,s)}));const i=await e.createMeshWriters(t.defaultSymbol);a.setDefault(i);const n=await e.createMeshWriters(t.backgroundFill);return a.setBackgroundFill(n),a}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((e,t)=>e.interval.min-t.interval.min)}size(){return super.size()+this._intervals.length}hasArcadeDependency(e){return this._field?.hasArcadeDependency(e)||this._intervals.some(t=>t.result.some(t=>t.hasArcadeDependency(e)))}doMatch(e,t){const s=this._field?.read(e,t);if(null==s||isNaN(s)||s===1/0||s===-1/0)return null;for(let e=0;e<this._intervals.length;e++){const{interval:t,result:r}=this._intervals[e],a=s>=t.min,i=this._isMaxInclusive?s<=t.max:s<t.max;if(a&&i)return r}return null}}e.IntervalMatcher=s,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});