// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../../core/libs/gl-matrix-2/math/common","../../../../core/libs/gl-matrix-2/math/mat3","../../../../core/libs/gl-matrix-2/factories/mat3f32","../../../../core/libs/gl-matrix-2/factories/vec2f32","../../../../core/libs/gl-matrix-2/factories/vec3f32","../../../../geometry/support/normalizeUtils","../../../../geometry/support/spatialReferenceUtils","../../viewpointUtils","./WGLContainer","./shaderGraph/techniques/overlay/OverlayTechnique"],function(t,e,i,a,r,s,o,n,l,c){"use strict";return class extends l{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=i.create(),this._overlayTechnique=new c.OverlayTechnique}get dvsMat3(){return this._dvsMat3}beforeRender(t){this._updateMatrices(t),this._updateOverlays(t,this.children);for(const e of this.children)e.beforeRender(t)}doRender(t){if(1!==t.drawPhase||!this.visible)return;super.doRender(t);const e=this._overlayTechnique;for(const i of this.children)i.draw(t,e)}onDetach(){this._overlayTechnique.shutdown()}_updateMatrices(i){const{state:o}=i,{id:n,size:l,pixelRatio:c,resolution:h,rotation:d,viewpoint:u,displayMat3:f}=o;if(this._viewStateId===n)return;const p=t.toRadian(d),v=c*l[0],m=c*l[1];this._localOrigin=u.targetGeometry.clone();const{x:y,y:_}=this._localOrigin,g=s.normalizeMapX(y,o.spatialReference);this._localOrigin.x=g,this._localOrigin.y=_;const M=h*v,w=h*m,b=e.identity(this._dvsMat3);e.multiply(b,b,f),e.translate(b,b,a.fromValues(v/2,m/2)),e.scale(b,b,r.fromValues(v/M,-m/w,1)),e.rotate(b,b,-p),this._viewStateId=n}_updateOverlays(e,i){const{state:a}=e,{rotation:r,spatialReference:s,worldScreenWidth:l,size:c,viewpoint:h}=a,d=this._localOrigin;let u,f=0;const p=o.getInfo(s);if(p&&s.isWrappable){const e=c[0],i=c[1],o=t.toRadian(r),d=Math.abs(Math.cos(o)),v=Math.abs(Math.sin(o)),m=Math.round(e*d+i*v),[y,_]=p.valid,g=n.getWorldWidth(s),{x:M,y:w}=h.targetGeometry,b=[M,w],x=[0,0];a.toScreen(x,b);const R=[0,0];let O;O=m>l?.5*l:.5*m;const q=Math.floor((M+.5*g)/g),W=y+q*g,S=_+q*g,T=[x[0]+O,0];a.toMap(R,T),R[0]>S&&(f=g),T[0]=x[0]-O,a.toMap(R,T),R[0]<W&&(f=-g),u={worldWidth:g,xBounds:[y,_]}}for(const t of i)t.updateDrawCoords(d,f,a,u)}}});