// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["./RectangleBinPack","../webgl/Rect","../../../webgl/Texture","../../../webgl/TextureDescriptor"],function(t,e,s,i){"use strict";return class{constructor(e,s,i){this.width=0,this.height=0,this._dirties=[],this._glyphData=[],this._currentPage=0,this._glyphIndex={},this._textures=[],this._rangePromises=new Map,this.width=e,this.height=s,this._glyphSource=i,this._binPack=new t(e-4,s-4),this._glyphData.push(new Uint8Array(e*s)),this._dirties.push(!0),this._textures.push(void 0)}getGlyphItems(s,i){const h=[],r=this._glyphSource,n=new Set,a=1/256;for(const t of i){const e=Math.floor(t*a);n.add(e)}const o=[];return n.forEach(t=>{const e=s+t;if(this._rangePromises.has(e))o.push(this._rangePromises.get(e));else{const i=r.getRange(s,t).then(()=>{this._rangePromises.delete(e)},()=>{this._rangePromises.delete(e)});this._rangePromises.set(e,i),o.push(i)}}),Promise.all(o).then(()=>{let n=this._glyphIndex[s];n||(n={},this._glyphIndex[s]=n);for(const a of i){const i=n[a];if(i){h[a]={sdf:!0,rect:i.rect,metrics:i.metrics,page:i.page,code:a};continue}const o=r.getGlyph(s,a);if(!o?.metrics)continue;const c=o.metrics;let l;if(0===c.width)l=new e(0,0,0,0);else{const e=3,s=c.width+2*e,i=c.height+2*e;let h=s%4?4-s%4:4,r=i%4?4-i%4:4;1===h&&(h=5),1===r&&(r=5),l=this._binPack.allocate(s+h,i+r),l.isEmpty&&(this._dirties[this._currentPage]||(this._glyphData[this._currentPage]=null),this._currentPage=this._glyphData.length,this._glyphData.push(new Uint8Array(this.width*this.height)),this._dirties.push(!0),this._textures.push(void 0),this._binPack=new t(this.width-4,this.height-4),l=this._binPack.allocate(s+h,i+r));const n=this._glyphData[this._currentPage],a=o.bitmap;let g,_;if(a)for(let t=0;t<i;t++){g=s*t,_=this.width*(l.y+t+1)+l.x;for(let t=0;t<s;t++)n[_+t+1]=a.at(g+t)}}n[a]={rect:l,metrics:c,tileIDs:null,page:this._currentPage},h[a]={sdf:!0,rect:l,metrics:c,page:this._currentPage,code:a},this._dirties[this._currentPage]=!0}return h})}removeGlyphs(t){for(const e in this._glyphIndex){const s=this._glyphIndex[e];if(!s)continue;let i;for(const e in s)if(i=s[e],i.tileIDs.delete(t),0===i.tileIDs.size){const t=this._glyphData[i.page],h=i.rect;let r,n;for(let e=0;e<h.height;e++)for(r=this.width*(h.y+e)+h.x,n=0;n<h.width;n++)t[r+n]=0;delete s[e],this._dirties[i.page]=!0}}}bind(t,e,h,r=0){if(!this._textures[h]){const e=new i.TextureDescriptor(this.width,this.height);e.pixelFormat=6406,e.wrapMode=33071,this._textures[h]=new s.Texture(t,e,new Uint8Array(this.width*this.height))}const n=this._textures[h];n.setSamplingMode(e),this._dirties[h]&&n.setData(this._glyphData[h]),t.bindTexture(n,r),this._dirties[h]=!1}destroy(){this.dispose()}dispose(){this._glyphData.length=0,this._binPack=null;for(const t of this._textures)t&&t.dispose();this._textures.length=0}}});