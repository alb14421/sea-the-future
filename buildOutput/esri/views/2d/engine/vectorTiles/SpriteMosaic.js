// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../../core/has","../../../../symbols/cim/rasterizingUtils","./RectangleBinPack","../webgl/Rect","../../../webgl/Texture","../../../webgl/TextureDescriptor"],function(t,i,e,s,h,a){"use strict";class r{constructor(t,i,s=0){this._size=[],this._mosaicsData=[],this._textures=[],this._dirties=[],this._maxItemSize=0,this._currentPage=0,this._pageWidth=0,this._pageHeight=0,this._mosaicRects={},this.pixelRatio=1,i<=0&&console.error("Sprites mosaic defaultWidth and defaultHeight must be greater than zero!"),this._pageWidth=t,this._pageHeight=i,s>0&&(this._maxItemSize=s),this._binPack=new e(t-4,i-4)}destroy(){this.dispose()}dispose(){this._binPack=null,this._mosaicsData.length=0,this._mosaicRects={};for(const t of this._textures)t&&t.dispose();this._textures.length=0}getWidth(t){return t>=this._size.length?-1:this._size[t][0]}getHeight(t){return t>=this._size.length?-1:this._size[t][1]}getPageSize(t){return t>=this._size.length?null:this._size[t]}setSpriteSource(t){if(this.dispose(),this.pixelRatio=t.devicePixelRatio,0===this._mosaicsData.length){this._binPack=new e(this._pageWidth-4,this._pageHeight-4);const t=Math.floor(this._pageWidth),i=Math.floor(this._pageHeight),s=new Uint32Array(t*i);this._mosaicsData[0]=s,this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0)}this._sprites=t}getSpriteItem(t,i=!1){let e,s,h=this._mosaicRects[t];if(h)return h;if(!this._sprites||"loaded"!==this._sprites.loadStatus)return null;if(t&&t.startsWith("dasharray-")?([e,s]=this._rasterizeDash(t),i=!0):e=this._sprites.getSpriteInfo(t),!e?.width||!e.height||e.width<0||e.height<0)return null;const a=e.width,r=e.height,[n,_,o]=this._allocateImage(a,r);return n.width<=0?null:(this._copy(n,e,_,o,i,s),h={type:"sprite",rect:n,width:a,height:r,sdf:e.sdf,simplePattern:!1,rasterizationScale:e.pixelRatio??1,samplingMode:"Linear",page:_},this._mosaicRects[t]=h,h)}getSpriteItems(t){const i={};for(const e of t)i[e.name]=this.getSpriteItem(e.name,e.repeat);return i}getMosaicItemPosition(t,i){const e=this.getSpriteItem(t,i),s=e?.rect;if(!s)return null;s.width=e.width,s.height=e.height;const h=e.width,a=e.height;return{tl:[s.x+2,s.y+2],br:[s.x+2+h,s.y+2+a],page:e.page}}bind(t,i,e=0,s=0){if(e>=this._size.length||e>=this._mosaicsData.length)return;if(!this._textures[e]){const i=new a.TextureDescriptor(this._size[e][0],this._size[e][1]);i.wrapMode=33071,this._textures[e]=new h.Texture(t,i,new Uint8Array(this._mosaicsData[e].buffer))}const r=this._textures[e];r.setSamplingMode(i),this._dirties[e]&&r.setData(new Uint8Array(this._mosaicsData[e].buffer)),t.bindTexture(r,s),this._dirties[e]=!1}static _copyBits(t,i,e,s,h,a,r,n,_,o,g){let c=s*i+e,l=n*a+r;if(g){l-=a;for(let r=-1;r<=o;r++,c=((r+o)%o+s)*i+e,l+=a)for(let i=-1;i<=_;i++)h[l+i]=t[c+(i+_)%_]}else for(let e=0;e<o;e++){for(let i=0;i<_;i++)h[l+i]=t[c+i];c+=i,l+=a}}_copy(t,i,e,s,h,a){if(!this._sprites||"loaded"!==this._sprites.loadStatus||e>=this._mosaicsData.length)return;const n=new Uint32Array(a?a.buffer:this._sprites.image.buffer),_=this._mosaicsData[e],o=a?i.width:this._sprites.width;r._copyBits(n,o,i.x,i.y,_,s[0],t.x+2,t.y+2,i.width,i.height,h),this._dirties[e]=!0}_allocateImage(t,i){t+=2,i+=2;const h=Math.max(t,i);if(this._maxItemSize&&this._maxItemSize<h){const e=new s(0,0,t,i);return this._mosaicsData.push(new Uint32Array(t*i)),this._dirties.push(!0),this._size.push([t,i]),this._textures.push(void 0),[e,this._mosaicsData.length-1,[t,i]]}let a=t%4?4-t%4:4,r=i%4?4-i%4:4;1===a&&(a=5),1===r&&(r=5);const n=this._binPack.allocate(t+a,i+r);return n.width<=0?(this._dirties[this._currentPage]||(this._mosaicsData[this._currentPage]=null),this._currentPage=this._mosaicsData.length,this._mosaicsData.push(new Uint32Array(this._pageWidth*this._pageHeight)),this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0),this._binPack=new e(this._pageWidth-4,this._pageHeight-4),this._allocateImage(t,i)):[n,this._currentPage,[this._pageWidth,this._pageHeight]]}_rasterizeDash(t){const e=t.match(/\[(.*?)\]/);if(!e)return null;const s=e[1].split(",").map(Number),h=t.slice(t.lastIndexOf("-")+1),[a,r,n]=i.rasterizeDash(s,h);return[{x:0,y:0,width:r,height:n,sdf:!0,pixelRatio:1},new Uint8Array(a.buffer)]}}return r});