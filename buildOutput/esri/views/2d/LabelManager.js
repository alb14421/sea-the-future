// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/Accessor","../../core/has","../../core/accessorSupport/decorators/property","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","./engine/vectorTiles/decluttering/SymbolFader","./engine/webgl/definitions"],function(e,t,s,a,r,o,l,i,n,c){"use strict";class d{constructor(){this.styles=new Map,this.layerContexts=new Map}get cachedStyles(){return this.styles}setLabelClassStyle(e,t,s){this.layerContexts.set(e,t),this.styles.set(e,s)}}function p(e){const t="esriGeometryPolyline"===e.geometryType?0:1,s="esriGeometryPolyline"===e.geometryType?0:1;return{geometryType:e.geometryType,iconAllowOverlap:!e.deconflictionEnabled,iconIgnorePlacement:!1,textAllowOverlap:!e.deconflictionEnabled,textIgnorePlacement:!1,iconRotationAlignment:t,textRotationAlignment:t,iconTranslateAnchor:s,iconTranslate:[0,0],textTranslateAnchor:s,textTranslate:[0,0]}}e.LabelManager=class extends s{constructor(e){super(e),this._faderWorkingSet=[],this._styleRepository=new d,this.lastUpdateId=-1,this.updateRequested=!1,this.view=null,this.symbolFader=new n.SymbolFader("feature-tile",this._styleRepository,(e,t)=>{e.updateLabelVisibility(),e.requestRender(),e.isReady&&(e.decluttered=!0)},this._faderWorkingSet,c.tileSize,7e6)}get updating(){return a("esri-2d-log-updating")&&console.log(`Updating LabelManager ${this.updateRequested}:\n-> updateRequested: ${this.updateRequested}`),this.updateRequested}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view?.requestUpdate())}processUpdate(e){this.doUpdate(e)?this.updateRequested=!1:(this.updateRequested=!0,this.view?.requestUpdate())}setLabelSchemaStyles(e,t){let s;switch(e.type){case"label":s=e.classes;break;case"subtype":s=Array.from(Object.values(e.renderers).flatMap(e=>e.classes));break;case"cluster":s=[...e.cluster.classes,...e.feature.classes];break;case"track":s=[...e.latestObservation.classes,...e.previousObservation.classes,...e.trackLine.classes]}for(const e of s){const s=p(e);this._styleRepository.setLabelClassStyle(e.labelClassId,t,s)}}doUpdate(e){const t=this.view;if(!t)return!1;const s=t.allLayerViews.map(e=>e.featureContainer).filter(e=>!!e&&e?.hasLabels);if(s.length>0){this._faderWorkingSet.length=0;for(const t of s)for(const s of t.tiles||[])s.setTransform(e.state),this._faderWorkingSet.push(s);const a=e.state.scale,r=t.featuresTilingScheme.scaleToZoom(a);return this.symbolFader.update(r,e.state)}return!0}},t.__decorate([r.property()],e.LabelManager.prototype,"updateRequested",void 0),t.__decorate([r.property()],e.LabelManager.prototype,"updating",null),t.__decorate([r.property()],e.LabelManager.prototype,"view",void 0),e.LabelManager=t.__decorate([i.subclass("esri.views.2d.LabelManager")],e.LabelManager),e.LabelClassStyleRepository=d,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});