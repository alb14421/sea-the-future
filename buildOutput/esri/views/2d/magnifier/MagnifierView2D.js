// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../request","../../../core/asyncUtils","../../../core/Handles","../../../core/maybe","../../../core/reactiveUtils","../../../core/libs/gl-matrix-2/factories/mat3f32","../../../core/support/UpdatingHandles","../engine/DisplayObject","../engine/webgl/shaderGraph/techniques/magnifier/MagnifierTechnique","../../magnifier/resources"],function(e,s,i,r,a,n,t,l,o,h){"use strict";class u extends l.DisplayObject{constructor(){super(),this._handles=new i,this._magnifierTechnique=new o.MagnifierTechnique,this.updatingHandles=new t.UpdatingHandles,this.visible=!1}destroy(){super.destroy(),this._handles=r.destroyMaybe(this._handles),this._magnifierTechnique.shutdown(),this._resourcesTask=r.abortMaybe(this._resourcesTask)}get backgroundColor(){return this._backgroundColor}set backgroundColor(e){this._backgroundColor=e,this.requestRender()}get magnifier(){return this._magnifier}set magnifier(e){this._magnifier=e,this._handles.removeAll(),this._handles.add([a.watch(()=>e.version,()=>{this.visible=e.visible&&null!=e.position&&e.size>0,this.requestRender()},a.initial),a.watch(()=>[e.maskUrl,e.overlayUrl],()=>this._reloadResources()),a.watch(()=>e.size,()=>{this._magnifierTechnique.shutdown(),this.requestRender()})])}_createTransforms(){return{displayViewScreenMat3:n.create()}}doRender(e){if(!this._resourcesTask)return void this._reloadResources();if(1!==e.drawPhase||!this._canRender())return;const s=this._magnifier;if(null==s.position)return;this._magnifierTechnique.updateResources(e,this._mask,this._overlay,s);const i=this.backgroundColor,r=i?[i.a*i.r/255,i.a*i.g/255,i.a*i.b/255,i.a]:[1,1,1,1];this._magnifierTechnique.render(e,{background:r,maskEnabled:s.maskEnabled?1:0,overlayEnabled:s.overlayEnabled?1:0})}_canRender(){return this._mask&&this._overlay&&null!=this._magnifier}_reloadResources(){this._resourcesTask&&this._resourcesTask.abort();const i=null!=this._magnifier?this._magnifier.maskUrl:null,r=null!=this._magnifier?this._magnifier.overlayUrl:null;this._resourcesTask=s.createTask(async s=>{const a=null==i||null==r?h.loadMagnifierResources(s):null,n=null!=i?e(i,{responseType:"image",signal:s}).then(e=>e.data):a.then(e=>e.mask),t=null!=r?e(r,{responseType:"image",signal:s}).then(e=>e.data):a.then(e=>e.overlay),[l,o]=await Promise.all([n,t]);this._mask=l,this._overlay=o,this._magnifierTechnique.shutdown(),this.requestRender()}),this.updatingHandles.addPromise(this._resourcesTask.promise)}}return u});