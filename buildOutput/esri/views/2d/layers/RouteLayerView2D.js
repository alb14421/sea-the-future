// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","../../../chunks/tslib.es6","../../../core/arrayUtils","../../../core/Collection","../../../core/CollectionFlattener","../../../core/handleUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/accessorSupport/decorators/subclass","../../../rest/support/DirectionLine","../../../rest/support/DirectionPoint","../../../rest/support/PointBarrier","../../../rest/support/PolygonBarrier","../../../rest/support/PolylineBarrier","../../../rest/support/RouteInfo","../../../rest/support/Stop","./LayerView2D","./graphics/GraphicContainer","./graphics/GraphicsView2D","../../layers/LayerView"],function(e,t,i,r,s,a,o,n,h,c,p,l,d,u,g,_,w,y,m,f,k,v){"use strict";const I=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],M={graphic:null,property:null,oldValue:null,newValue:null};function F(e){return e instanceof l||e instanceof d||e instanceof u||e instanceof g||e instanceof _||e instanceof w||e instanceof y}const V=new Set(["default"]);let G=class extends(m.LayerView2DMixin(v)){constructor(){super(...arguments),this._graphics=new r,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map,this._interaction=null,this._loadInteractionPromise=null,this.interactive=!1}get _routeItems(){return new s({getCollections:()=>null==this.layer||this.destroyed?[]:[null!=this.layer.routeInfo?new r([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this.addHandles(o.watch(()=>{const{interactive:e,suspended:t}=this;return{interactive:e,suspended:t}},({interactive:e,suspended:t})=>{const i=e&&!t;i&&this._getInteractionLoadPromise().then(e=>{e.enabled=this.interactive&&!this.suspended}),this._interaction&&(this._interaction.enabled=i)},o.syncAndInitial)),this._updatingHandles.addOnCollectionChange(()=>this._routeItems,e=>this._routeItemsChanged(e),o.initial)}destroy(){this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),this._get("_routeItems")?.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView(),this._interaction?.enabled&&(this._interaction.enabled=!1)}get selectedNetworkFeatures(){return this._interaction?.selectedNetworkFeatures??null}async create(e){if(this.interactive)return(await this._getInteractionLoadPromise()).create(e)}async fetchPopupFeaturesAtLocation(e,t){return this._graphicsView.hitTest(e).filter(({popupTemplate:e})=>!!e)}highlight(e){let t;var s;F(e)?t=[this._getNetworkFeatureUid(e)]:(s=e,t=Array.isArray(s)&&s.length>0&&F(s[0])?e.map(e=>this._getNetworkFeatureUid(e)):function(e){return r.isCollection(e)&&e.length&&F(e.at(0))}(e)?e.map(e=>this._getNetworkFeatureUid(e)).toArray():[e.uid]);const o=t.filter(i.isSome);return o.length?(this._addHighlight(o),a.makeHandle(()=>this._removeHighlight(o))):a.makeHandle()}async hitTest(e,t){if(this.suspended)return null;const r=this._graphicsView.hitTest(e).filter(i.isSome).map(e=>this._networkGraphicMap.get(e));if(!r.length)return null;const{layer:s}=this;return r.reverse().map(t=>({type:"route",layer:s,mapPoint:e,networkFeature:t}))}isUpdating(){return this._graphicsView.updating}moveEnd(){}remove(e){this._interaction?.remove(e)}update(e){this._graphicsView.processUpdate(e)}viewChange(){this._graphicsView.viewChange()}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_createGraphic(e){const t=e.toGraphic();return t.layer=this.layer,t.sourceLayer=this.layer,t}_createGraphicsView(){const e=this.view,t=new f(e.featuresTilingScheme);this._graphicsView=new k({container:t,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate(),view:e}),this.container.addChild(t),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(e){const t=this._networkGraphicMap.get(e);return I.indexOf(t.type)}_getInteractionLoadPromise(){return this._loadInteractionPromise||(this._loadInteractionPromise=this._loadInteraction(),this._updatingHandles.addPromise(this._loadInteractionPromise)),this._loadInteractionPromise}_getNetworkFeatureUid(e){return this._networkFeatureMap.has(e)?this._networkFeatureMap.get(e).uid:null}async _loadInteraction(){const{layer:t,view:i}=this,{RouteLayerInteraction:r}=await new Promise((t,i)=>e(["./support/RouteLayerInteraction"],t,i));return this._interaction=new r({view:i,layer:t}),this._interaction}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_routeItemsChanged(e){if(e.removed.length){this._graphics.removeMany(e.removed.map(e=>{const t=this._networkFeatureMap.get(e);return this._networkFeatureMap.delete(e),this._networkGraphicMap.delete(t),t}));for(const t of e.removed)this.removeHandles(t)}if(e.added.length){this._graphics.addMany(e.added.map(e=>{const t=this._createGraphic(e);return null==t.symbol?null:(this._networkFeatureMap.set(e,t),this._networkGraphicMap.set(t,e),t)}).filter(i.isSome));for(const t of e.added)this.addHandles([o.watch(()=>t.geometry,(e,i)=>{this._updateGraphic(t,"geometry",e,i)}),o.watch(()=>t.symbol,(e,i)=>{this._updateGraphic(t,"symbol",e,i)}),o.watch(()=>t.popupTemplate,e=>{this._networkFeatureMap.has(t)&&(this._networkFeatureMap.get(t).popupTemplate=e)}),o.watch(()=>t.toGraphic().attributes,e=>{this._networkFeatureMap.has(t)&&(this._networkFeatureMap.get(t).attributes=e)})],t);this._graphics.sort((e,t)=>this._getDrawOrder(e)-this._getDrawOrder(t))}}_updateGraphic(e,t,i,r){if(!this._networkFeatureMap.has(e)){const t=this._createGraphic(e);return this._networkFeatureMap.set(e,t),this._networkGraphicMap.set(t,e),void this._graphics.add(t)}const s=this._networkFeatureMap.get(e);s[t]=i,M.graphic=s,M.property=t,M.oldValue=r,M.newValue=i,this._graphicsView.graphicUpdateHandler(M)}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=this._getHighlightBits(V.values());this._graphicsView.setHighlight(e.map(e=>({objectId:e,highlightFlags:t})))}};return t.__decorate([n.property()],G.prototype,"_graphics",void 0),t.__decorate([n.property()],G.prototype,"_routeItems",null),t.__decorate([n.property()],G.prototype,"_interaction",void 0),t.__decorate([n.property()],G.prototype,"interactive",void 0),t.__decorate([n.property({readOnly:!0})],G.prototype,"selectedNetworkFeatures",null),G=t.__decorate([p.subclass("esri.views.2d.layers.RouteLayerView2D")],G),G});