// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../core/Evented","../../../../../../core/handleUtils","../../../../../../core/has","../../../../../../core/maybe","../../../../../../layers/graphics/data/StreamFeatureManager","../../../../../../layers/graphics/sources/connections/createConnection","../../../../../../layers/support/streamLayerUtils","../StreamConnectionState","../StreamFeatureStore","./ALoadStrategy","./chunks/StreamSourceChunk"],function(e,t,n,s,i,r,o,a,c,h,d,u){"use strict";class l extends d.ALoadStrategy{constructor(e,n,s,i,o){super(s),this._service=e,this._dataFilter=n,this._streamOptions=i,this._metadata=o,this._connectionState=new c.StreamConnectionState,this._forceRefresh=!1,this.events=new t.EventEmitter;const{timeInfo:d}=this._metadata,{purgeOptions:u}=n;this._stagingStore=new h.StreamFeatureStore(this._metadata.weakCloneWithAdditionalFields([{name:a.internalTimeReceivedField,alias:"timeReceived",type:"esriFieldTypeDate"}]),e=>this.events.emit("features-updated",e)),this._manager=new r.StreamFeatureManager(this._stagingStore,o.featureIdInfo,d,u),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){const e=null!=this._chunk;return this._manager.checkForUpdates()||!e||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new u.StreamSourceChunk(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick"),!0):(this.events.emit("tick"),!1)}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){this._connection=i.destroyMaybe(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(null!=this._connection)return;const{geometryType:e,spatialReference:t}=this._metadata,{maxReconnectionAttempts:s,maxReconnectionInterval:i,geometryDefinition:r,definitionExpression:a,customParameters:c}=this._dataFilter;this._connection=o.createConnection(this._service.source,t,this._streamOptions.outSR,e,a,r,s,i,c),this._handlesGroup=n.handlesGroup([this._connection.on("data-received",e=>this._onFeature(e)),this._connection.on("message-received",e=>this._onWebSocketMessage(e))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){this._connection?.updateCustomParameters(e)}sendMessageToSocket(e){this._connection?.sendMessageToSocket(e)}sendMessageToClient(e){this._connection?.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch(e){}}}e.StreamLoadStrategy=l,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});