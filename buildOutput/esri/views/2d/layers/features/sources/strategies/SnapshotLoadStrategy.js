// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../core/Error","../../../../../../core/has","../../../../../../core/promiseUtils","../../../../../../rest/support/QuantizationParameters","./AFetchLoadStrategy","./chunks/FeatureSnapshotSourceChunk","../../support/FeatureSetReaderJSON"],function(e,t,r,o,a,n,s,i){"use strict";class h extends n.AFetchLoadStrategy{constructor(e,t,r,o,a,n){super(e,t,r,a,n),this._snapshotInfo=o}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return null==this._promise&&(this._promise=this._download()),this._promise}unload(e){}async _download(){const e=this._snapshotInfo.initialTolerance,t=e?new a({mode:"view",originPosition:"upper-left",tolerance:e}):null;await this._downloadStreaming(t),null!=t&&await this._downloadRefresh()}async _downloadStreaming(e){try{for await(const t of this._fetchPages(e))this._store.insert(t)}catch(e){throw new t("featurelayer-query","Encountered error when downloading data",{error:e})}}async _downloadRefresh(){try{const e=[];for await(const t of this._fetchPages(null))e.push(t);this._store.clear();for(const t of e)this._store.insert(t);this._store.refresh()}catch(e){throw new t("featurelayer-query","Encountered error when downloading data",{error:e})}}async*_fetchPages(e){let t;try{for await(const t of this._concurrentPageStream(e))0!==t.size()&&(yield t)}catch(e){t=e}if(t&&o.isAbortError(t)||(yield new s.FeatureSnapshotSourceChunk(i.FeatureSetReaderJSON.empty(this._metadata),null,-1,!0)),t)throw t}async*_concurrentPageStream(e){const t=r("featurelayer-snapshot-concurrency"),o=this._pageStreamAll(e),a=[];let n=!1,s=1;for(;!n;){const e=[];for(;!n&&a.length<s;){const t=o.next();if(!t.value){n=!0;break}const r=t.value;r.then(e=>{e.reader.exceededTransferLimit||(n=!0)}).catch(e=>{n=!0}).finally(()=>{a.splice(a.indexOf(r),1)}),a.push(r),e.push(r)}for(const t of e)yield t;a.length&&await Promise.race(a),s<t&&(s+=1)}}*_pageStreamAll(e){const t=Math.ceil(this._snapshotInfo.maxFeatureCount/this._queryInfo.pageSize);for(let r=0;r<t;r++)yield this._downloadPage(r,e)}async _downloadPage(e,t){o.throwIfAborted(this._options);const r=this._queryInfo.createPagedQuery(e,t),a=await this._fetch(r,this._options,{chunkId:e.toString()}),n=new s.FeatureSnapshotSourceChunk(a,r.inner.toJSON(),e,!1);return o.throwIfAborted(this._options),n}}e.SnapshotLoadStrategy=h,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});