// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../core/has","../FeatureCache","./AFetchLoadStrategy"],function(e,t,s,h){"use strict";class a extends h.AFetchLoadStrategy{constructor(e,t,h,a,d){super(e,t,h,a,d),this._chunksById=new Map,this._featureCache=new s.FeatureCache(h,t,this._options,this._fetch.bind(this))}prepareCacheUpdate(e,t){return this._featureCache.prepareCacheUpdate(e,t)}applyCacheUpdate(){return this._featureCache.applyCacheUpdate()}unload(e){this._removeChunks(e.tile)}_addChunk(e){const s=e.tile.id;this._chunksById.has(s)||this._chunksById.set(s,[]);const h=e.size();(h||e.first||e.end)&&(t("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${h}]`),this._chunksById.get(s).push(e),this._store.insert(e))}_removeChunks(e){const s=this._chunksById.get(e.key.id)??[];for(const h of s)t("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${h.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(h);this._chunksById.delete(e.key.id)}}e.ATileLoadStrategy=a,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});