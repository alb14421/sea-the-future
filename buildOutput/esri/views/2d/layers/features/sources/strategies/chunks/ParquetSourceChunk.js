// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./ASourceChunk","../../../support/FeatureSetReaderIndirect","../../../support/FeatureSetReaderJSON"],function(e,t,r,i){"use strict";class s extends t.ASourceChunk{constructor(e,t,r,i,s){super(),this._metadata=e,this._reader=t,this._tile=r,this._page=i,this._end=s,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get reader(){return this._reader??i.FeatureSetReaderJSON.empty(this._metadata)}get first(){return 0===this._page}get end(){return this._end}get tile(){return this.tile}get queryInfo(){return{type:"parquet",chunkId:this.chunkId,queryJSON:null,page:this._page,size:this.size(),tileId:this._tile.id,end:this.end}}get isTiled(){return!0}getTileReader(e){if(this._tile.key.id===e.key.id){const t=[];for(let e=0;e<this.reader.getSize();e++)t.push(e);const i=r.FeatureSetReaderIndirect.from(this.reader,t);return i.setTransformForDisplay(e.transform),i}return null}}e.ParquetSourceChunk=s,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});