// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/has","../../../../../core/sql","../../../../../geometry/SpatialReference","../../../../../layers/support/arcgisLayerUrl","../../../../../layers/support/displayFilterUtils","../../../../../rest/support/Query","../../../../../chunks/TimeExtent"],function(e,t,r,a,i,s,o,n){"use strict";class u{static fromSchema(e,t,r){const s="feature"===t.type?t.mutable.dataFilter.queryScaleRanges:[],o=t.mutable.displayFilterInfo;return new u(function(e,t,r){const s=function(e){switch(e.type){case"object-id":case"unique-id-simple":return`${e.fieldName} ASC`;case"unique-id-composite":return`${e.fieldNames.join(",")} ASC`}}(r.featureIdInfo),o=e.source,u={returnCentroid:!(null!==o&&"object"==typeof o&&"path"in o&&i.isHostedAgolService(o.path))&&"esriGeometryPolygon"===r.serviceGeometryType,returnGeometry:!0,timeReferenceUnknownClient:r.timeReferenceUnknownClient??void 0,outSpatialReference:a.fromJSON(e.outSpatialReference),orderByFields:"memory"===e.type?[]:[s],where:t.mutable.dataFilter.definitionExpression??"1=1",outFields:t.mutable.availableFields,multipatchOption:"esriGeometryMultiPatch"===r.serviceGeometryType?"xyFootprint":null};if("feature"===t.type){const{gdbVersion:e,historicMoment:r,timeExtent:a}=t.mutable.dataFilter;return{...u,gdbVersion:e,historicMoment:r?new Date(r):null,timeExtent:a?n.TimeExtent.fromJSON(a):null,outFields:t.mutable.availableFields}}return u}(e,t,r),o,s,r.subtypeField,t.mutable.dataFilter.customParameters,r.geometryType,e.queryMetadata)}constructor(e,t,r,a,i,s,o){this._queryParams=e,this._displayFilter=t,this._queryScaleRanges=r,this._subtypeField=a,this._customParameters=i,this._geometryType=s,this._queryMetadata=o}get pageSize(){if(null==this._queryMetadata)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?4:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}get objectIdsQueryPageSize(){return this._queryMetadata?.maxRecordCount??2e3}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,r,a){if(!r.getSize())return null;const i=e.clone();if("*"===this._queryParams.outFields[0]){if("*"===(i.outFields??[])[0])return null;i.outFields=this._queryParams.outFields}else{const e=new Set(this._queryParams.outFields),t=[];for(const a of e)r.hasField(a)||t.push(a);if(0===t.length)return null;i.outFields=t}i.returnGeometry=!1,i.returnCentroid=!1,i.quantizationParameters=null,i.cacheHint=!0;const s={inner:i,customParameters:this._customParameters};if(t("esri-tiles-debug")&&null!=a){const e=a.chunkId.toString().replaceAll("/",".");s.customParameters=s.customParameters?{...s.customParameters,chunkId:e}:{chunkId:e}}return s}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new o({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,a){if(null==this._queryMetadata)throw new Error("InternalError: Service does not support tile queries");const i=this.createQuery(a),o=i.inner;if(this._queryScaleRanges.length){const t=this._queryScaleRanges.filter(t=>(!t.minScale||t.minScale>=e.maxScale)&&(!t.maxScale||t.maxScale<=e.minScale)).map(e=>e.subtypeCode);if(t.length){const e=`${this._subtypeField} IN (${t})`;o.where=r.sqlAnd(o.where,e)}}if(this._displayFilter&&(o.where=r.sqlAnd(o.where,s.getClauseForScaleRange(this._displayFilter,e.minScale,e.maxScale))),o.quantizationParameters=a.quantizationParameters??e.getQuantizationParameters(),o.resultType="tile",o.geometry=e.extent,this._queryMetadata.supportsQuantization?"esriGeometryPolyline"===this._geometryType&&(o.maxAllowableOffset=e.resolution*t("feature-polyline-generalization-factor")):"esriGeometryPolyline"!==this._geometryType&&"esriGeometryPolygon"!==this._geometryType||(o.maxAllowableOffset=e.resolution,"esriGeometryPolyline"===this._geometryType&&(o.maxAllowableOffset*=t("feature-polyline-generalization-factor"))),o.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,o.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(o.maxRecordCountFactor=4),t("esri-tiles-debug")){const t=e.id.replaceAll("/",".");i.customParameters=i.customParameters?{...i.customParameters,tileId:t}:{tileId:t}}return i}createPagedTileQuery(e,t){const r=this.pageSize;return this.createTileQuery(e,{start:r*t,num:r,returnExceededLimitFeatures:!0})}createPagedQuery(e,t){const r=this.pageSize;return this.createQuery({start:r*e,num:r,returnExceededLimitFeatures:!0,maxRecordCountFactor:4,quantizationParameters:t,cacheHint:!0})}createObjectIdsQuery(e){return this.createQuery({objectIds:e,outFields:["*"]})}}e.FeatureSourceQueryInfo=u,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});