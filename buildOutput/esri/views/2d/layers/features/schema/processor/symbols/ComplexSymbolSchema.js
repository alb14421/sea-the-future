// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../symbols/cim/CIMSymbolHelper","../../../../../../../symbols/cim/defaultCIMValues","../../../../../engine/webgl/shaderGraph/techniques/TechniqueRegistry","../VisualVariablesSchema","./utils"],function(e,a,i,l,n,t){"use strict";function o(e){return e.minScale||e.maxScale?{minScale:e.minScale??0,maxScale:e.maxScale??0}:null}function s(e){if(null==e)return null;if(Array.isArray(e)){const[a,i,l,n]=e;return[a,i,l,255*n]}return"string"==typeof e?e:{...e,defaultValue:s(e?.defaultValue)}}function r(e,a,i){const{uniforms:t,schemaOptions:o}=a,{store:s}=o,r=e.isOutline?{...n.noVisualVariables,visualVariableSizeScaleStops:t.visualVariableSizeOutlineScaleStops}:{visualVariableColor:t.visualVariableColor,visualVariableOpacity:t.visualVariableOpacity,visualVariableSizeMinMaxValue:t.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:t.visualVariableSizeScaleStops,visualVariableSizeStops:t.visualVariableSizeStops,visualVariableSizeUnitValue:t.visualVariableSizeUnitValue,visualVariableRotation:t.visualVariableRotation};if(e.animationParams){const{hasShiftAnimation:a}=e.animationParams.params,t=a?l.Techniques.animatedMarkerShift:l.Techniques.animatedMarker;return c(s.ensureInstance(t,{uniforms:r,optionalAttributes:{zoomRange:!0,value1Position2Value2:e.animationParams.params.hasShiftAnimation,lineLength:a}}),e,n.noVisualVariables,i)}return f(s.ensureInstance(l.Techniques.marker,{uniforms:r,optionalAttributes:{zoomRange:!!i.scaleInfo}}),e,t,i)}function c(e,a,i,l){return a.animationParams?[e.createMeshInfo({pixelDimensions:a.pixelDimensions,texelDimensions:a.texelDimensions,effects:a.effects?{type:"cim-effect-infos",effectInfos:a.effects}:null,sprite:t.getAnimatedTechniqueSprite(a),animations:a.animationParams,scaleInfo:l.scaleInfo,scaleSymbolsProportionally:a.scaleSymbolsProportionally,strokeWidth:a.outlineWidth,isMapAligned:1===a.alignment,colorLocked:a.colorLocked,isStroke:a.isStroke,baseSize:a.baseSize,placement:a.markerPlacement,referenceSize:a.referenceSize,angleToLine:!!a.markerPlacement&&a.markerPlacement.placement&&"angleToLine"in a.markerPlacement.placement&&a.markerPlacement.placement.angleToLine,sizeRatio:a.sizeRatio,patternHeight:null})]:[]}function u(e,a,i,l){return a.animationParams?[e.createMeshInfo({effects:a.effects?{type:"cim-effect-infos",effectInfos:a.effects}:null,sprite:t.getAnimatedTechniqueSprite(a),animations:a.animationParams,scaleInfo:l.scaleInfo,scaleSymbolsProportionally:!1,strokeWidth:1,isMapAligned:!0,colorLocked:a.colorLocked||!1,isStroke:!1,baseSize:"width"in a?a.width:-1,placement:null,referenceSize:2,angleToLine:!1,sizeRatio:1,patternHeight:"fill"===a.type&&a.spriteRasterizationParam?a.height:null,joinType:"join"in a?a.join:"round",capType:"cap"in a?a.cap:"round",miterLimit:"miterLimit"in a&&a.miterLimit||2})]:[]}function f(e,a,l,{scaleInfo:o,scaleExpression:r}){const c=t.hasSizeVVUniform(l);return[e.createMeshInfo({size:a.size,scaleX:a.scaleX,anchorX:a.anchorPoint.x,anchorY:a.anchorPoint.y,angle:a.rotation,color:s(a.color)??[0,0,0,0],colorLocked:a.colorLocked,frameHeight:a.frameHeight,widthRatio:a.widthRatio,scaleInfo:o,offsetX:a.offsetX,offsetY:a.offsetY,outlineColor:s(a.outlineColor)??[0,0,0,0],outlineSize:a.outlineWidth,referenceSize:a.referenceSize||i.defaultCIMValues.CIMVectorMarker.size,rotateClockwise:a.rotateClockwise,scaleFactor:r??1,sizeRatio:a.sizeRatio,alignment:a.alignment,isAbsoluteAnchorPoint:a.isAbsoluteAnchorPoint,scaleSymbolsProportionally:a.scaleSymbolsProportionally,sprite:a.spriteRasterizationParam,hasSizeVV:c,placement:a.markerPlacement,effects:a.effects?{type:"cim-effect-infos",effectInfos:a.effects}:null,transforms:a.transform,minPixelBuffer:n.getMaxSizeVVSize(l)})]}function m(e,a,i){const{uniforms:n,schemaOptions:t}=a,{store:o}=t;return p(o.ensureInstance(l.Techniques.outlineFill,{uniforms:{visualVariableColor:e.colorLocked?null:n.visualVariableColor,visualVariableOpacity:n.visualVariableOpacity,visualVariableSizeMinMaxValue:null,visualVariableSizeScaleStops:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!!i.scaleInfo}}),e,i)}function p(e,a,i){const l=s(a.color)??[0,0,0,0],n=s(a.outlineColor)??[0,0,0,0];return[e.createMeshInfo({color:l,outlineColor:n,width:a.outlineWidth,referenceWidth:a.referenceWidth,capType:a.cap,joinType:a.join,miterLimit:a.miterLimit,outlineUsesColorVV:!a.outlineColorLocked,hasSizeVV:!1,scaleInfo:i.scaleInfo,effects:a.effects?{type:"cim-effect-infos",effectInfos:a.effects}:null,outlineEffects:a.outlineEffects?{type:"cim-effect-infos",effectInfos:a.outlineEffects}:null})]}function S(e,a,{scaleInfo:i}){return[e.createMeshInfo({color:s(a.color)??[0,0,0,0],scaleInfo:i,effects:a.effects?{type:"cim-effect-infos",effectInfos:a.effects}:null})]}function b(e,a,i){if(!e.spriteRasterizationParam)return function(e,a,i){const{uniforms:t,schemaOptions:o}=a,{store:s}=o,r={visualVariableColor:e.colorLocked?null:t.visualVariableColor,visualVariableOpacity:t.visualVariableOpacity};if(e.animationParams){const a=l.Techniques.animatedFill;return u(s.ensureInstance(a,{uniforms:{...r,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null,visualVariableSizeScaleStops:null,visualVariableRotation:null},optionalAttributes:{zoomRange:!0,value1Position2Value2:!1,lineLength:!1}}),e,n.noVisualVariables,i)}return S(s.ensureInstance(l.Techniques.fill,{uniforms:r,optionalAttributes:{zoomRange:!!i.scaleInfo}}),e,i)}(e,a,i);const{uniforms:t,schemaOptions:o}=a,{store:s}=o,r={visualVariableColor:e.colorLocked?null:t.visualVariableColor,visualVariableOpacity:t.visualVariableOpacity};if(e.animationParams){const a=l.Techniques.animatedFill;return u(s.ensureInstance(a,{uniforms:{...r,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null,visualVariableSizeScaleStops:null,visualVariableRotation:null},optionalAttributes:{zoomRange:!0,value1Position2Value2:!1,lineLength:!1}}),e,n.noVisualVariables,i)}return V(s.ensureInstance(l.Techniques.complexFill,{uniforms:r,optionalAttributes:{zoomRange:!!i.scaleInfo}}),e,null!=t.visualVariableColor,i)}function V(e,a,i,{scaleInfo:l}){if(!a.spriteRasterizationParam)throw new Error("InternalError: Sprite should always be defined");const n=!!a.hasUnresolvedReplacementColor&&(!i||a.colorLocked),t=a.sampleAlphaOnly&&!n,o=a.spriteRasterizationParam;return[e.createMeshInfo({color:s(a.color)??[0,0,0,0],height:a.height,aspectRatio:a.scaleX,offsetX:a.offsetX,offsetY:a.offsetY,scaleX:1,scaleY:1,angle:a.angle,applyRandomOffset:a.applyRandomOffset,sampleAlphaOnly:t,scaleProportionally:"CIMHatchFill"===o.resource.type,sprite:o,scaleInfo:l,effects:a.effects?{type:"cim-effect-infos",effectInfos:a.effects}:null})]}function h(e,a,i){const{uniforms:n,schemaOptions:t}=a,{store:o}=t;return z(o.ensureInstance(l.Techniques.gradientFill,{uniforms:{visualVariableColor:null,visualVariableOpacity:n.visualVariableOpacity},optionalAttributes:{zoomRange:!!i.scaleInfo}}),e,i)}function z(e,a,{scaleInfo:i}){if(!a.spriteRasterizationParam)throw new Error("InternalError: Sprite should always be defined");const l=a.spriteRasterizationParam;return[e.createMeshInfo({color:s(a.color)??[0,0,0,0],angle:a.angle,gradientMethod:a.gradientMethod,gradientSize:a.gradientSize,gradientSizeUnits:a.gradientSizeUnits,gradientType:a.gradientType,sprite:l,scaleInfo:i,effects:a.effects?{type:"cim-effect-infos",effectInfos:a.effects}:null})]}function d(e,a,i){const{uniforms:t,schemaOptions:o}=a,{store:s}=o,r=e.isOutline?{...n.noVisualVariables,visualVariableSizeScaleStops:t.visualVariableSizeOutlineScaleStops}:{visualVariableColor:e.colorLocked?null:t.visualVariableColor,visualVariableOpacity:t.visualVariableOpacity,visualVariableSizeMinMaxValue:t.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:t.visualVariableSizeScaleStops,visualVariableSizeStops:t.visualVariableSizeStops,visualVariableSizeUnitValue:t.visualVariableSizeUnitValue};if(e.animationParams){const{hasShiftAnimation:a}=e.animationParams.params,t=l.Techniques.animatedLine;return u(s.ensureInstance(t,{uniforms:{...r,visualVariableRotation:null},optionalAttributes:{zoomRange:!0,value1Position2Value2:!1,accumulatedDistance:!0,segmentDirection:!0,normal:!0,lineLength:a}}),e,n.noVisualVariables,i)}const c={uniforms:r,optionalAttributes:{zoomRange:!!i.scaleInfo}},f=!!(r.visualVariableSizeMinMaxValue||r.visualVariableSizeScaleStops||r.visualVariableSizeStops||r.visualVariableSizeUnitValue);return e.spriteRasterizationParam?g(s.ensureInstance(l.Techniques.texturedLine,c),e,f,i):I(s.ensureInstance(l.Techniques.line,c),e,f,i)}function v(e,a,{scaleInfo:i}){return{color:s(e.color)??[0,0,0,0],width:e.width,referenceWidth:e.referenceWidth,capType:e.cap,joinType:e.join,miterLimit:e.miterLimit,scaleInfo:i,hasSizeVV:a,effects:e.effects?{type:"cim-effect-infos",effectInfos:e.effects}:null}}function I(e,a,i,l){if(a.spriteRasterizationParam)throw new Error("InternalError: Sprite should not be defined");const n=v(a,i,l);return[e.createMeshInfo(n)]}function g(e,a,i,l){const{spriteRasterizationParam:n,scaleDash:t,sampleAlphaOnly:o}=a;if(!n)throw new Error("InternalError: Sprite should be defined");return[e.createMeshInfo({...v(a,i,l),offsetAlongLine:a.offsetAlongLine??0,shouldScaleDash:t??!1,shouldSampleAlphaOnly:o,isSDF:"CIMPictureStroke"!==n.resource.type&&"CIMGradientStroke"!==n.resource.type,sprite:n})]}function y(e,a,i){const{uniforms:t,schemaOptions:o}=a,{store:s}=o;return M(s.ensureInstance(l.Techniques.gradientStroke,{uniforms:e.isOutline?{...n.noVisualVariables,visualVariableSizeScaleStops:t.visualVariableSizeOutlineScaleStops}:{visualVariableColor:null,visualVariableOpacity:t.visualVariableOpacity,visualVariableSizeMinMaxValue:t.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:t.visualVariableSizeScaleStops,visualVariableSizeStops:t.visualVariableSizeStops,visualVariableSizeUnitValue:t.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!!i.scaleInfo}}),e,i)}function M(e,a,i){if(!a.spriteRasterizationParam)throw new Error("InternalError: Sprite should always be defined");const l=a.spriteRasterizationParam;return[e.createMeshInfo({...v(a,!1,i),gradientMethod:a.gradientMethod,gradientSize:a.gradientSize,gradientSizeUnits:a.gradientSizeUnits,gradientType:a.gradientType,sprite:l,effects:a.effects?{type:"cim-effect-infos",effectInfos:a.effects}:null})]}function P(e,a,i){const{uniforms:n,schemaOptions:t}=a,{store:o}=t;return C(o.ensureInstance(l.Techniques.text,{uniforms:{visualVariableColor:e.colorLocked?null:n.visualVariableColor,visualVariableOpacity:n.visualVariableOpacity,visualVariableRotation:n.visualVariableRotation,visualVariableSizeMinMaxValue:n.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:n.visualVariableSizeScaleStops,visualVariableSizeStops:n.visualVariableSizeStops,visualVariableSizeUnitValue:n.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!!i.scaleInfo,referenceSymbol:!1,clipAngle:!1,visibility:!1}}),e,n,i)}function C(e,a,i,{scaleInfo:l,scaleExpression:t}){return[e.createMeshInfo({boxBackgroundColor:s(a.backgroundColor),boxBorderLineColor:s(a.borderLineColor),boxBorderLineSize:a.borderLineWidth??0,color:s(a.color)??[0,0,0,0],offsetX:a.offsetX,offsetY:a.offsetY,postAngle:a.angle,fontSize:a.size,referenceSize:a.referenceSize,decoration:a.decoration,haloColor:s(a.haloColor)??[0,0,0,0],haloSize:a.haloSize??0,outlineColor:s(a.outlineColor)??[0,0,0,0],outlineSize:a.outlineSize,lineWidth:a.lineWidth||512,lineHeightRatio:1,horizontalAlignment:a.horizontalAlignment??"center",verticalAlignment:a.verticalAlignment??"baseline",useCIMAngleBehavior:!1,glyphs:a.textRasterizationParam,scaleInfo:l,effects:a.effects?{type:"cim-effect-infos",effectInfos:a.effects}:null,placement:a.markerPlacement,transforms:a.transform,scaleFactor:t??1,minPixelBuffer:n.getMaxSizeVVSize(i),repeatLabel:null,repeatLabelDistance:null,allowOverrun:null,labelPosition:null,labelClassId:-1})]}e.createAnimatedMarkerMeshInfos=c,e.createAnimatedPolyMeshInfos=u,e.createComplexFillMeshInfos=V,e.createComplexMarkerMeshInfos=f,e.createComplexSimpleFillMeshInfos=S,e.createComplexSimpleLineMeshInfos=I,e.createComplexSimpleOutlineFillMeshInfos=p,e.createComplexSymbolInstances=async function(e,i){const{cimResourceManager:l,cimAnalyzer:n,scaleExpression:t}=i.schemaOptions;await Promise.all(a.CIMSymbolHelper.fetchResources(e.symbol,l,[]));const s=n.analyzeSymbolReference(e,!1),c={scaleInfo:o(e),scaleExpression:t},u=[];for(const e of s)switch(e.type){case"marker":u.push(...r(e,i,c));break;case"fill":u.push(...b(e,i,c));break;case"outlineFill":u.push(...m(e,i,c));break;case"gradientFill":u.push(...h(e,i,c));break;case"line":u.push(...d(e,i,c));break;case"gradientStroke":u.push(...y(e,i,c));break;case"text":u.push(...P(e,i,c))}return u},e.createComplexTextMeshInfos=C,e.createComplexTexturedLineMeshInfos=g,e.createGradientFillMeshInfos=z,e.createGradientStrokeMeshInfos=M,e.getScaleInfo=o,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});