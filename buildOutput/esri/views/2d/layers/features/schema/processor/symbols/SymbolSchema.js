// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../core/Logger","../../../../../../../core/screenUtils","../../../../../../../renderers/support/heatmapUtils","../../../../../../../symbols/SimpleFillSymbol","../../../../../../../symbols/SimpleLineSymbol","../../../../../../../symbols/SimpleMarkerSymbol","../../../../../../../symbols/cim/CIMSymbolHelper","../../../../../../../symbols/cim/SDFHelper","../../../../../engine/webgl/alignmentUtils","../../../../../engine/webgl/color","../../../../../engine/webgl/definitions","../../../../../engine/webgl/shaderGraph/techniques/TechniqueRegistry","../schemaUtils","../VisualVariablesSchema","./ComplexSymbolSchema","./utils"],function(e,i,a,l,t,r,o,s,n,u,c,p,b,f,S,m,V){"use strict";async function y(e,l){if(!e)return[];switch(e.type){case"simple-fill":return d(e,l);case"picture-fill":return function(e,i){const{outline:a}=e,{uniforms:l,schemaOptions:t}=i,{store:r}=t,o=[],n=s.CIMSymbolHelper.createPictureFillRasterizationParam(e);if(!n)return[];const{width:u,height:c,xoffset:p,yoffset:f,xscale:S,yscale:m}=e,V={color:[255,255,255,255],sprite:n,height:c,aspectRatio:u/c,offsetX:p,offsetY:f,scaleX:S,scaleY:m,angle:0,applyRandomOffset:!1,sampleAlphaOnly:!1,scaleProportionally:!1,effects:null,scaleInfo:null};if("solid"===a?.style)return[r.ensureInstance(b.Techniques.complexOutlineFill,{uniforms:{visualVariableColor:l.visualVariableColor,visualVariableOpacity:l.visualVariableOpacity,visualVariableSizeScaleStops:l.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({...V,...z(a,!!l.visualVariableSizeOutlineScaleStops)})];const y=r.ensureInstance(b.Techniques.complexFill,{uniforms:{visualVariableColor:l.visualVariableColor,visualVariableOpacity:l.visualVariableOpacity},optionalAttributes:{zoomRange:!1}});return o.push(y.createMeshInfo(V)),a&&o.push(...g(a,i,!0)),o}(e,l);case"simple-marker":return v(e,l);case"picture-marker":return function(e,i){const{uniforms:a,schemaOptions:l}=i,{store:t}=l,r=t.ensureInstance(b.Techniques.marker,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity,visualVariableSizeMinMaxValue:a.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:a.visualVariableSizeScaleStops,visualVariableSizeStops:a.visualVariableSizeStops,visualVariableSizeUnitValue:a.visualVariableSizeUnitValue,visualVariableRotation:a.visualVariableRotation},optionalAttributes:{zoomRange:!1}}),o=s.CIMSymbolHelper.createPictureMarkerRasterizationParam(e);return o?[r.createMeshInfo({type:"picture",color:[255,255,255,255],height:e.height,width:e.width,offsetX:e.xoffset,offsetY:e.yoffset,angle:e.angle,alignment:V.hasRotationVVUniform(a)?1:0,outlineColor:null,outlineSize:0,referenceSize:e.height,sprite:o,overrideOutlineColor:!1,hasSizeVV:V.hasSizeVVUniform(a),placement:null,effects:null,transforms:null,scaleInfo:null,minPixelBuffer:S.getMaxSizeVVSize(a)})]:[]}(e,l);case"simple-line":return g(e,l,!1);case"text":return function(e,i){const{uniforms:a,schemaOptions:l}=i,{store:t}=l;return[t.ensureInstance(b.Techniques.text,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity,visualVariableRotation:a.visualVariableRotation,visualVariableSizeMinMaxValue:a.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:a.visualVariableSizeScaleStops,visualVariableSizeStops:a.visualVariableSizeStops,visualVariableSizeUnitValue:a.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!1,clipAngle:!1,referenceSymbol:!1,visibility:!1}}).createMeshInfo({boxBackgroundColor:e.backgroundColor?.toArray(),boxBorderLineColor:e.borderLineColor?.toArray(),boxBorderLineSize:e.borderLineSize??0,color:e.color?.toArray()??[0,0,0,0],offsetX:e.xoffset,offsetY:e.yoffset,postAngle:e.angle,fontSize:e.font.size,decoration:e.font.decoration,haloColor:e.haloColor?.toArray()??[0,0,0,0],haloSize:e.haloSize??0,outlineColor:[0,0,0,0],outlineSize:0,lineWidth:e.lineWidth,lineHeightRatio:e.lineHeight,horizontalAlignment:e.horizontalAlignment,verticalAlignment:e.verticalAlignment,useCIMAngleBehavior:!1,glyphs:{type:"text-rasterization-param",resource:{type:"text",font:e.font.toJSON(),textString:e.text,symbol:s.CIMSymbolHelper.createCIMTextSymbolfromTextSymbol(e)},overrides:[]},referenceSize:null,effects:null,placement:null,scaleInfo:null,transforms:null,scaleFactor:1,minPixelBuffer:S.getMaxSizeVVSize(a),repeatLabel:null,repeatLabelDistance:null,allowOverrun:null,labelPosition:null,labelClassId:-1})]}(e,l);case"label":return function(e,i){const{schemaOptions:l,uniforms:t}=i,{store:r}=l,o=e.symbol,{allowOverrun:n,repeatLabel:c,repeatLabelDistance:p}=e,f={maxScale:e.maxScale??0,minScale:e.minScale??0},m=r.ensureInstance(b.Techniques.label,{uniforms:{visualVariableColor:null,visualVariableOpacity:null,visualVariableRotation:t.visualVariableRotation,visualVariableSizeMinMaxValue:t.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:t.visualVariableSizeScaleStops,visualVariableSizeStops:t.visualVariableSizeStops,visualVariableSizeUnitValue:t.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!0,clipAngle:!0,referenceSymbol:!0,visibility:!0}}),V=e.labelPlacement,[y,h]=u.getAlignmentFromPlacement(V);return[m.createMeshInfo({boxBackgroundColor:o.backgroundColor?.toArray(),boxBorderLineColor:o.borderLineColor?.toArray(),boxBorderLineSize:o.borderLineSize??0,color:o.color?.toArray()??[0,0,0,0],offsetX:o.xoffset,offsetY:o.yoffset,postAngle:o.angle,fontSize:o.font.size,decoration:o.font.decoration,outlineColor:[0,0,0,0],outlineSize:0,haloColor:o.haloColor?.toArray()??[0,0,0,0],haloSize:o.haloSize??0,lineWidth:o.lineWidth,lineHeightRatio:o.lineHeight,horizontalAlignment:y,verticalAlignment:h,repeatLabel:c,repeatLabelDistance:a.pt2px(p),allowOverrun:n,labelPosition:e.labelPosition,scaleInfo:f,minPixelBuffer:S.getMaxSizeVVSize(t),useCIMAngleBehavior:!1,glyphs:{type:"text-rasterization-param",resource:{type:"text",font:o.font.toJSON(),textString:o.text,symbol:s.CIMSymbolHelper.createCIMTextSymbolfromTextSymbol(o),primitiveName:"label-override"},useLegacyLabelEvaluationRules:null==e.labelExpressionInfo?.expression,overrides:[{valueExpressionInfo:{type:"CIMExpressionInfo",expression:e.labelExpressionInfo?.expression??e.labelExpression,returnType:"String"},primitiveName:"label-override",propertyName:"textString",defaultValue:""}]},referenceSize:null,effects:null,placement:null,transforms:null,scaleFactor:1,labelClassId:i.labelClassId})]}(e,l);case"cim":return m.createComplexSymbolInstances(e.data,l);case"web-style":return y(await e.fetchSymbol({acceptedFormats:["cim","web"]}),l);case"line-3d":return i.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${e.type}" unsupported in MapView. Defaulting to simple-line`),g(new r,l,!1);case"point-3d":return i.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${e.type}" unsupported in MapView. Defaulting to simple-marker`),v(new o,l);case"polygon-3d":return i.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${e.type}" unsupported in MapView. Defaulting to simple-fill`),d(new t,l);case"mesh-3d":case"label-3d":return i.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${e.type}" unsupported in MapView. Ignoring`),[];case"CIMSymbolReference":throw new Error("InternalError: CIMSymbolReference should already be resolved")}}function h(e){if("path"===e.style){if(null==e.path)throw new Error("Symbol with a style of type path must define a path");return{type:"sprite-rasterization-param",overrides:[],resource:{type:"path",path:e.path,asFill:!0}}}const i=s.CIMSymbolHelper.fromSimpleMarker(e);if("outline"in e&&e.outline&&"none"!==e.outline.style&&"solid"!==e.outline.style){if(!i||!i.symbolLayers)throw new Error("Error handling marker! ");return{type:"sprite-rasterization-param",resource:i.symbolLayers[0],overrides:[]}}return{type:"sprite-rasterization-param",resource:n.getSDFInfo(i),overrides:[]}}async function v(e,i){const{uniforms:a,schemaOptions:l}=i,{store:t}=l;if("path"===e.style||e.outline&&"solid"!==e.outline.style&&"none"!==e.outline.style){const l=s.CIMSymbolHelper.fromSimpleMarker(e);if(!l||!l.symbolLayers)throw new Error("Error handling marker! ");if(a.visualVariableRotation&&(l.angleAlignment="Map"),"path"!==e.style){const e=l.symbolLayers[0];if(V.hasSizeVVUniform(i.uniforms)){const a=S.getMaxSizeVVSize(i.uniforms,0,1);if(a>e.size){const i=a/e.size;e.size=a;const l=e.markerGraphics?.[0].symbol;(l.symbolLayers&&l.symbolLayers[0]).width*=i}}}return m.createComplexSymbolInstances({type:"CIMSymbolReference",symbol:l},i)}const r=t.ensureInstance(b.Techniques.marker,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity,visualVariableSizeMinMaxValue:a.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:a.visualVariableSizeScaleStops,visualVariableSizeStops:a.visualVariableSizeStops,visualVariableSizeUnitValue:a.visualVariableSizeUnitValue,visualVariableRotation:a.visualVariableRotation},optionalAttributes:{zoomRange:!1}}),o=h(e);let n=e.color?.toArray()??[0,0,0,0];"CIMVectorMarker"===o.resource.type&&(n=[255,255,255,255]);const u="triangle"===e.style?124/116:1,c=e.size,p=c*u,f=null!=a.visualVariableColor&&("cross"===e.style||"x"===e.style);return[r.createMeshInfo({type:"simple",color:n,height:c,width:p,offsetX:e.xoffset,offsetY:e.yoffset,angle:e.angle,alignment:V.hasRotationVVUniform(a)?1:0,outlineColor:e.outline?.color?.toArray()??[0,0,0,0],outlineSize:e.outline?.width??1,referenceSize:c,sprite:o,overrideOutlineColor:f,hasSizeVV:V.hasSizeVVUniform(a),placement:null,effects:null,transforms:null,scaleInfo:null,minPixelBuffer:S.getMaxSizeVVSize(a)})]}function z(e,i){const a=e.width;return{outlineColor:e.color?.toArray()||[0,0,0,1],width:a,referenceWidth:a,capType:e.cap??"round",joinType:e.join??"round",miterLimit:e.miterLimit,hasSizeVV:i,outlineUsesColorVV:!1}}async function d(e,i){if("cim"===e.type)return m.createComplexSymbolInstances(e.data,i);const{style:a}=e;return a&&"none"!==a&&"solid"!==a?function(e,i){const{uniforms:a,schemaOptions:l}=i,{store:t}=l,r=e.color?.toArray()??[0,0,0,0],o={type:"sprite-rasterization-param",resource:{type:"fill-style",style:e.style},overrides:[]};if("solid"===e.outline?.style)return[t.ensureInstance(b.Techniques.patternOutlineFill,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity,visualVariableSizeScaleStops:a.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:r,...z(e.outline,!!a.visualVariableSizeOutlineScaleStops),sprite:o,scaleInfo:null,effects:null})];const s=[],n=t.ensureInstance(b.Techniques.patternFill,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:e.color?.toArray()??[0,0,0,0],sprite:o,scaleInfo:null,effects:null});return s.push(n),e.outline&&s.push(...g(e.outline,i,!0)),s}(e,i):function(e,i){const{uniforms:a,schemaOptions:l}=i,{store:t}=l,r=e.color?.toArray()??[0,0,0,0];if("none"!==e.style&&"solid"===e.outline?.style)return[t.ensureInstance(b.Techniques.outlineFill,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity,visualVariableSizeScaleStops:a.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:r,...z(e.outline,!!a.visualVariableSizeOutlineScaleStops),scaleInfo:null,effects:null})];const o=[];if("none"!==e.style){const e=t.ensureInstance(b.Techniques.fill,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:r,scaleInfo:null,effects:null});o.push(e)}return e.outline&&o.push(...g(e.outline,i,!0)),o}(e,i)}function g(e,i,a){const{color:l,style:t,width:r,cap:o,join:n}=e,{schemaOptions:u}=i,{store:c}=u,p=[],f=a?{...S.noVisualVariables,visualVariableSizeScaleStops:i.uniforms.visualVariableSizeOutlineScaleStops}:i.uniforms,m={uniforms:{visualVariableColor:f.visualVariableColor,visualVariableOpacity:f.visualVariableOpacity,visualVariableSizeMinMaxValue:f.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:f.visualVariableSizeScaleStops,visualVariableSizeStops:f.visualVariableSizeStops,visualVariableSizeUnitValue:f.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!1}},y={color:l?.toArray()??[0,0,0,0],width:r,referenceWidth:r,capType:o,joinType:n,miterLimit:e.miterLimit,hasSizeVV:V.hasSizeVVUniform(f),effects:null,scaleInfo:null};if(null==t||"solid"===t){const e=c.ensureInstance(b.Techniques.line,m).createMeshInfo(y);p.push(e)}else if("none"!==t){const e=c.ensureInstance(b.Techniques.texturedLine,m).createMeshInfo({...y,offsetAlongLine:0,shouldScaleDash:!0,shouldSampleAlphaOnly:!1,isSDF:!0,sprite:{type:"sprite-rasterization-param",resource:{type:"dash",dashTemplate:s.slsDashToTemplateArray(t,o)},overrides:[]}});p.push(e)}return null!=e.marker&&p.push(...function(e,i,a){const{uniforms:l,schemaOptions:t}=a,{store:r}=t,o=r.ensureInstance(b.Techniques.marker,{uniforms:{visualVariableColor:l.visualVariableColor,visualVariableOpacity:l.visualVariableOpacity,visualVariableSizeMinMaxValue:l.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:l.visualVariableSizeScaleStops,visualVariableSizeStops:l.visualVariableSizeStops,visualVariableSizeUnitValue:l.visualVariableSizeUnitValue,visualVariableRotation:l.visualVariableRotation},optionalAttributes:{zoomRange:!1}}),s=h(e),n=6*i.width,u=n,c=e.color?.toArray()??i.color?.toArray()??[0,0,0,0],p="cross"===e.style||"x"===e.style;let f;switch(e.placement){case"begin-end":f="Both";break;case"begin":f="JustBegin";break;case"end":f="JustEnd";break;default:f="None"}const m={type:"cim-marker-placement-param",placement:{type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,extremityPlacement:f,offsetAlongLine:0},overrides:[]};return[o.createMeshInfo({type:"simple",color:c,height:u,width:n,offsetX:0,offsetY:0,angle:0,alignment:V.hasRotationVVUniform(l)?1:0,outlineColor:c,outlineSize:p?i.width:0,referenceSize:u/6,sprite:s,overrideOutlineColor:p&&null!=l.visualVariableColor,hasSizeVV:V.hasSizeVVUniform(l),placement:m,transforms:null,effects:null,scaleInfo:null,minPixelBuffer:S.getMaxSizeVVSize(l)})]}(e.marker,e,i)),p}e.createDotDensityMeshSchemas=async function(e,i){const{schemaOptions:a}=i,{store:l}=a,r=new Array(p.dotDensityMaxFields),o=new Array(p.dotDensityMaxFields/4);for(let i=0;i<p.dotDensityMaxFields;i++){const a=i<e.attributes.length?e.attributes[i].color:null;r[i]=[0,0,0,0],c.writeColor(r[i],a)}for(let i=0;i<p.dotDensityMaxFields/4;i++)o[i]=[0,0,0,0],o[i][0]=4*i<e.attributes.length?1:0,o[i][1]=4*i+1<e.attributes.length?1:0,o[i][2]=4*i+2<e.attributes.length?1:0,o[i][3]=4*i+3<e.attributes.length?1:0;const s={uniforms:{isActive:o,colors:r,dotValue:e.dotValue,dotScale:e.referenceScale,blending:e.dotBlendingEnabled,dotSize:e.dotSize,seed:e.seed},optionalAttributes:{}},n=l.ensureInstance(b.Techniques.dotDensity,s).createMeshInfo({effects:null}),u=[],f=new t({color:e.backgroundColor??[0,0,0,0],outline:null}),S=await y(f,i);if(u.push(...S),u.push(n),e.outline){const a=g(e.outline,i,!0);u.push(...a)}return u},e.createHeatmapMeshSchemas=async function(e,i){const{store:t}=i,{radius:r,minDensity:o,maxDensity:s,referenceScale:n,field:u,valueExpression:c,colorStops:p}=e,f=l.generateGradient(p);return[t.ensureInstance(b.Techniques.heatmap,{uniforms:{radius:a.pt2px(r),minDensity:o,maxDensity:s,referenceScale:n,isFieldActive:!(!u&&!c),gradient:f,gradientHash:f.join(",")},optionalAttributes:{}}).createMeshInfo({effects:null})]},e.createLineInstance=g,e.createPieChartMeshSchemas=async function(e,i){const{store:l}=i,t=e.outline?.width||0,r=S.createVisualVariableUniforms(e),o=l.ensureInstance(b.Techniques.pieChart,{uniforms:{shader:{outlineWidth:Math.round(a.pt2px(t)),defaultColor:f.premultiplyColor(e.defaultColor),outlineColor:f.premultiplyColor(e.outline?.color),othersColor:f.premultiplyColor(e.othersCategory?.color),donutRatio:e.holePercentage,sectorThreshold:e.othersCategory?.threshold||0,colors:e.attributes.map(e=>f.premultiplyColor(e.color)),visualVariableOpacity:r.visualVariableOpacity,visualVariableSizeMinMaxValue:r.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:r.visualVariableSizeScaleStops,visualVariableSizeStops:r.visualVariableSizeStops,visualVariableSizeUnitValue:r.visualVariableSizeUnitValue,hittestUniforms:null,highlightUniforms:null},numberOfFields:e.attributes.length},optionalAttributes:{}}).createMeshInfo({size:e.size,outlineWidth:t,effects:null,scaleInfo:null,minPixelBuffer:S.getMaxSizeVVSize(r)});return[...e.backgroundFillSymbol?await d(e.backgroundFillSymbol,{schemaOptions:i,uniforms:S.noVisualVariables}):[],o]},e.createSymbolMeshSchemas=y,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});