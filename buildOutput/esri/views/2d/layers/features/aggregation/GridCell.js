// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../layers/graphics/featureConversionUtils","../../../../../layers/graphics/OptimizedGeometry","./AAggregateCell","./AccumulatedStatistics"],function(t,e,r,i,s){"use strict";class o extends i.AAggregateCell{static createId(t,e){return`${t}.${e}`}static create(t,e,r,i){return new o(t,e,s.AccumulatedStatistics.create(r),i)}constructor(t,e,r,i){super(r),this.gridX=t,this.gridY=e,this._worldUnitsPerCell=i,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return o.createId(this.gridX,this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const t=new o(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return t._count=this._count,t._xWorldTotal=this._xWorldTotal,t._yWorldTotal=this._yWorldTotal,t._firstFeatureAttributes=this._firstFeatureAttributes,t._objectIds=new Set(this._objectIds),t}insert(t,e,r,i){0===this._count?this._firstFeatureAttributes=t.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=r,this._yWorldTotal+=i,this._statistics.insert(t,e),this._objectIds.add(t.getObjectId())}merge(t){if(0!==t._count){this._count+=t._count,this._firstFeatureAttributes=t._firstFeatureAttributes,this._xWorldTotal+=t._xWorldTotal,this._yWorldTotal+=t._yWorldTotal,this._statistics.merge(t._statistics);for(const e of t._objectIds.values())this._objectIds.add(e)}}getCentroidX(t){return null==t?this.centroidXWorld:e.quantizeX(t,this.centroidXWorld)}getCentroidY(t){return null==t?this.centroidYWorld:e.quantizeY(t,this.centroidYWorld)}getGeometry(t,i){const s=this.gridX*this._worldUnitsPerCell,o=this.gridY*this._worldUnitsPerCell,l=new r([4],[s,o,s+this._worldUnitsPerCell,o,s+this._worldUnitsPerCell,o+this._worldUnitsPerCell,s,o+this._worldUnitsPerCell]);if(null!=i){const t=new r;return e.quantizeOptimizedGeometry(t,l,!1,!1,"esriGeometryPolygon",i)}return l}getCentroid(t){const i=new r([],[this.centroidXWorld,this.centroidYWorld]);if(null!=t){const s=new r;return e.quantizeOptimizedGeometry(s,i,!1,!1,"esriGeometryPoint",t)}return i}getGeometricCentroid(t,i){const s=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,o=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,l=new r([],[s,o]);if(null!=i){const t=new r;return e.quantizeOptimizedGeometry(t,l,!1,!1,"esriGeometryPoint",i)}return l}getAttributes(){const t={aggregateId:this.id};for(const e of this._statistics.values())t[e.field.name]=e.value;return null!=this._firstFeatureAttributes?{...t,...this._firstFeatureAttributes}:t}}t.GridCell=o,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});