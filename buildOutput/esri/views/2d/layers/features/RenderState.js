// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/CircularArray","../../../../core/Error","../../../../core/has","../../../../core/Logger","../../../../geometry/support/aaBoundingRect","../../tiling/TileInfoView","../../tiling/TileKey","../../tiling/TileQueue","../../tiling/TileStrategy","../../engine/webgl/FeatureTile"],function(e,t,i,s,n,o,r,d,l,a,u){"use strict";e.RenderState=class{constructor(e,i,s,n,o,r){this.getStage=e,this.getSubscriptionVersion=i,this.version=s,this._fader=n,this._container=o,this._tileInfoView=r,this._pendingUpdates=new t(1e3),this._locked=!1,this._tiles=new Map}destroy(){for(const e of this.tiles())e.destroy();this._pendingUpdates.clear(),this._tiles.clear()}tiles(){return this._tiles.values()}size(){return this._tiles.size}getTile(e){return this._tiles.get(e)}setTiles(e){this._tiles.clear();for(const t of e)this._tiles.set(t.key.id,t)}lockUploads(){this._locked=!0}unlockUploads(){this._locked=!1,this.flush()}enqueueUpdate(e){this._pendingUpdates.enqueue(e)}update(e){if(!this._locked)for(;this._pendingUpdates.size;){const t=this._pendingUpdates.peek();if(null==t||t.inner.attributeEpoch>e)break;this._updateTile(t),this._pendingUpdates.dequeue()}}removeTile(e){const t=this._tiles.get(e);s("esri-2d-update-debug")&&console.debug(`Tile[${e}] RenderState.removeTile`),t&&(this._fader.unregisterFeatureTile(t),t.destroy()),this._tiles.delete(e)}isTileDone(e){const t=this._tiles.get(e.id);return!!t&&t.isReady&&t.decluttered}flush(){for(;this._pendingUpdates.size;){const e=this._pendingUpdates.dequeue();null!=e&&this._updateTile(e)}for(const e of this._tiles.values())e.upload()}_updateTile(e){const{inner:t,objectIdMap:i}=e,n=this.getSubscriptionVersion(t.id);if(n!==t.subscriptionVesrion){if(s("esri-2d-update-debug")){const e=`${t.subscriptionVesrion} != ${n}`;console.debug(`Version[${e}] Tile[${t.id}] FeatureContainer - Dropping message, outdated version]`,t)}return}if(s("esri-2d-update-debug")){const e=t.debugInfo?.chunkId??"<EnsureEnd>";console.debug(`Version[${t.version}] Tile[${t.id}] Chunk[${e}] RenderState.updateTile [${t.type}]`,t)}const o=this._ensureTile(t.id);if("update"===t.type){const[e,...s]=t.modify;o.onMessage({type:"update",modify:e,remove:t.remove,end:t.end,attributeEpoch:t.attributeEpoch,objectIdMap:i});for(const e of s){const s=this._tiles.get(e.tileId);s&&s.onMessage({type:"update",modify:e,remove:t.remove,end:!1,isPixelBuffer:!0,attributeEpoch:null,objectIdMap:i})}return}if(null==t.append)return void o.onMessage({type:"append",clear:t.clear,debugInfo:t.debugInfo,end:t.end,attributeEpoch:t.attributeEpoch,objectIdMap:i});const[r,...d]=t.append;o.onMessage({type:"append",clear:t.clear,append:r,debugInfo:t.debugInfo,end:t.end,attributeEpoch:t.attributeEpoch,objectIdMap:i});for(const e of d){const t=this._tiles.get(e.tileId);t&&t.onMessage({type:"update",modify:e,remove:[],sort:!1,end:!1,isPixelBuffer:!0,attributeEpoch:null,objectIdMap:i})}}_ensureTile(e){if(!this._tiles.has(e)){const t=this._createTile(e);this._copyPixelBufferedEntitiesInto(t),this._tiles.set(e,t)}return this._tiles.get(e)}_createTile(e){s("esri-2d-update-debug")&&console.debug(`Version[${this.version}] Tile[${e}] RenderState.createTile`);const t=new d(e),r=this._tileInfoView.getTileBounds(o.create(),t),l=r[0],a=r[3],c=this._tileInfoView.getTileResolution(t.level),p=this._container.instanceStore.find(14)?.instanceId,g=new u.FeatureTile(t,c,l,a,this._fader,p,!0);if(this._fader.registerFeatureTile(g),g.stage=this.getStage(),!g.stage){const e=new i("featurelayerview:webgl","Cannot create tile with empty stage");n.getLogger("esri.views.2d.layers.features.RenderState").error(e)}return g}_copyPixelBufferedEntitiesInto(e){let t=7;const i=this._tileInfoView.getLODInfoAt(e.key);for(let s=-1;s<=1;s++)for(let n=-1;n<=1;n++){if(0===s&&0===n)continue;const o=e.key.getNormalizedNeighbor(n,s,i).id,r=this._tiles.get(o);if(null!=r){const i=1<<t;e.copyPixelBufferedEntitesFrom(r,i,n,s)}t--}}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});