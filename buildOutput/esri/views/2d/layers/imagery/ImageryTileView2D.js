// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../Color","../../../../core/has","../../../../core/mathUtils","../../../../core/accessorSupport/decorators/property","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../layers/support/rasterDatasets/datasetUtils","../../../../layers/support/rasterFormats/pixelRangeUtils","../../../../layers/support/rasterFunctions/clipUtils","../../../../layers/support/rasterFunctions/pixelUtils","../../engine/imagery/RasterTileContainer","./BaseImageryTileSubView2D","../support/util","../../../support/HighlightDefaults"],function(e,t,r,i,s,n,o,a,l,c,u,p,d,h,y,m,g){"use strict";return e.default=class extends y.BaseImageryTileSubView2D{constructor(){super(...arguments),this.type="raster"}get canUseWebGLForProcessing(){const{loaded:e,symbolizer:t}=this.layer;if(!e||!t)return!1;const r=t.lookup.colormapLut?.indexedColormap,s=r&&r.length>this._maxIndexedColormapSize,n=u.getBytesPerPixel(this.layer.serviceRasterInfo);return!(i("ios")&&n>4)&&this.useWebGLForProcessing&&t.canRenderInWebGL&&!s&&!("majority"===this.layer.interpolation&&m.canUseMajorityInterpolationOnDataSource(this.layer))}attach(){super.attach(),this.container=new h.RasterTileContainer(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}updateRasterFunctionParameters(){const{raster:e,type:t}=this.layer,{container:r}=this;if("Function"!==e.datasetFormat||"wcs"===t)return r.rasterFunctionChain=null,r.children.forEach(e=>{const{bitmap:t}=e;t&&(t.suspended=!0,t.processed=!1,t.projected&&(t.invalidateTexture(),t.rasterTexture=null))}),void(this._rasterFunctionState="na");const i=this._rasterFunctionState,{rasterFunction:s,primaryRasters:n}=e,o=s.supportsGPU&&(!n||n.rasters.length<=1),a=o?s.flatWebGLFunctionChain:null,{renderer:l}=this.layer,c=!o||!a?.functions.length||"raster-stretch"===l?.type&&l.dynamicRangeAdjustment||!this.canUseWebGLForProcessing;r.rasterFunctionChain=c?null:this._addProjection(a);const u=null==s?"na":r.rasterFunctionChain?"gpu":"cpu",p=i===u||"na"===i&&"cpu"===u&&0===a?.functions?.length;r.children.forEach(e=>{const{bitmap:t}=e;t&&(t.suspended=!p,t.processed=!1,t.processedTexture=null)}),this._rasterFunctionState=u}async updateTileSource(e,t){const r=this._getBandIds(),i=this._getLayerInterpolation(),{canUseWebGLForProcessing:s}=this,{source:n,globalSymbolizerParams:o,suspended:a,coords:l,resolution:u}=t,d=this.layerView.hasTilingEffects?o:t.symbolizerParams,{bitmap:h}=e;if([h.x,h.y]=l,h.resolution=u,null!=n?.pixelBlock){const e={extent:n.extent,pixelBlock:n.pixelBlock,srcPixelSize:n.srcTilePixelSize};if(h.rawPixelData=e,s)h.source=n.pixelBlock,h.isRendereredSource=!1;else{const t=await this.layer.applyRenderer(e,"stretch"===o?.type?o:void 0);h.source=t,h.isRendereredSource=!0}h.symbolizerParameters=s?d:null,h.transformGrid=s?n.transformGrid:null}else{const e=this.createEmptyTilePixelBlock();h.source=e,h.symbolizerParameters=s?d:null,h.transformGrid=null}h.bandIds=s?r:null,h.width=this._tileInfoView.tileInfo.size[0],h.height=this._tileInfoView.tileInfo.size[1],h.interpolation=i,h.suspended=a;const{raster:y}=this.layer;if(c.isFunctionRaster(y)){const t=y.getClippingGeometry(this.layerView.view.spatialReference);if(t){const r=y.getTileExtentFromTileInfo(e.key.level,e.key.row,e.key.col,this._tileInfoView.tileInfo);h.mask=p.convertGeometryToMask({srcExtent:r,geometry:t,size:[h.width,h.height]})}}h.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:r,global:i}=t,s=this._getBandIds(),n=this._getLayerInterpolation(),{canUseWebGLForProcessing:o}=this,{bitmap:a}=e,{rawPixelData:l}=a;o||null==l?(a.isRendereredSource&&null!=l&&(a.source=l.pixelBlock),a.isRendereredSource=!1):(a.source=await this.layer.applyRenderer(l,"stretch"===i?.type?i:void 0),a.isRendereredSource=!0),a.symbolizerParameters=o?this.layerView.hasTilingEffects?i:r:null,a.bandIds=o?s:null,a.interpolation=n,a.suspended=!1}updateHighlightOptions(e,t){if(e){const{ranges:i}=e,n=Array.from({length:2*d.maxMapSizeGpu},()=>0);for(let e=0;e<i.length;e++)n[2*e]=i[e][0],n[2*e+1]=i[e][1];for(let e=i.length;e<d.maxMapSizeGpu;e++)n[2*e]=s.numberMaxFloat32,n[2*e+1]=-s.numberMaxFloat32;const o=e.bandId??0,a=r.toUnitRGBA(t??g.defaultColor);this.container.pixelHighlightOptions={ranges:n,color:a,bandId:o}}else this.container.pixelHighlightOptions=void 0}_getLayerInterpolation(){const{interpolation:e,renderer:t}=this.layer;if(!t)return e;const r=t.type;return"raster-colormap"===r||"unique-value"===r?"nearest":"raster-stretch"===t.type&&null!=t.colorRamp?"bilinear"===e||"cubic"===e?"bilinear":"nearest":e}_addProjection(e){return e?.functions?.length&&!e.hasFocalFunction&&e.functions.unshift({name:"Reproject",parameters:{targetImageSize:this._tileInfoView.tileInfo.size,requireNNEdge:e.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1}),e}},t.__decorate([n.property()],e.default.prototype,"canUseWebGLForProcessing",null),t.__decorate([n.property()],e.default.prototype,"container",void 0),t.__decorate([n.property()],e.default.prototype,"layer",void 0),t.__decorate([n.property()],e.default.prototype,"type",void 0),e.default=t.__decorate([l.subclass("esri.views.2d.layers.imagery.ImageryTileView2D")],e.default),e.default});