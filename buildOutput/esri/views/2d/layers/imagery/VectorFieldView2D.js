// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../Graphic","../../../../request","../../../../core/Accessor","../../../../core/Logger","../../../../core/promiseUtils","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/Extent","../../../../geometry/support/spatialReferenceUtils","../../../../layers/support/rasterFunctions/rasterProjectionHelper","../../../../layers/support/rasterFunctions/vectorFieldUtils","../../engine/imagery/RasterVFContainer","./ImageryVFStrategy"],function(e,t,r,a,i,s,o,n,l,c,p,d,u,h,y,m,x,_){"use strict";return e.default=class extends i{constructor(){super(...arguments),this.attached=!1,this.container=new x.RasterVFContainer,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(e,t,r,a)=>{const i=await this._projectFullExtentPromise,{layer:s}=this,{symbolTileSize:o}=s.renderer,{extent:n,width:l,height:c}=m.snapImageToSymbolTile(e,t,r,o,i);if(null!=i&&!i.intersects(e))return{extent:n,pixelBlock:null};const p={bbox:`${n.xmin}, ${n.ymin}, ${n.xmax}, ${n.ymax}`,exportParametersVersion:s.exportImageServiceParameters.version,symbolTileSize:o,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(p)){const e=this.getPixelData();if(null!=e&&`${e.extent.xmin}, ${e.extent.ymin}, ${e.extent.xmax}, ${e.extent.ymax}`===p.bbox)return e}const{pixelBlock:d}=await s.fetchPixels(n,l,c,{timeExtent:this.timeExtent,interpolation:s.interpolation,signal:a});if(this._dataParameters=p,null==d)return{extent:n,pixelBlock:null};const{dataType:u}=s.rasterInfo;return{extent:n,pixelBlock:"vector-uv"===u&&d?await s.convertVectorFieldData(d,"vector-uv",{signal:a}):d}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new _({container:this.container,fetchPixels:this._fetchpixels}),this.addHandles(n.watch(()=>this.layer.renderer,e=>this._updateSymbolizerParams(e),n.syncAndInitial),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach(e=>e.destroy()),this.container.removeAllChildren(),this.removeHandles("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){const e=this.container.children[0]?.rawPixelData;if(this.updating||!e)return null;const{extent:t,pixelBlock:r}=e;return{extent:t,pixelBlock:r}}hitTest(e){return new r({attributes:{},geometry:e.clone(),layer:this.layer})}update(e){this._strategy.update(e,this._symbolizerParams).catch(e=>{o.isAbortError(e)||s.getLogger(this).error(e)})}redraw(){const{renderer:e}=this.layer;e&&(this._updateSymbolizerParams(e),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(e){const t=this._dataParameters.exportParametersVersion===e.exportParametersVersion,r=this._dataParameters.time===e.time,a=this._dataParameters.symbolTileSize===e.symbolTileSize,i=this._dataParameters.bbox===e.bbox;return t&&r&&a&&i}async _getProjectedFullExtent(e){try{return y.projectExtent(this.layer.fullExtent,e)}catch(t){try{const t=(await a(this.layer.url,{query:{option:"footprints",outSR:h.srToRESTValue(e),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return t?u.fromJSON(t):null}catch{return null}}}_updateSymbolizerParams(e){"vector-field"===e?.type&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}},t.__decorate([l.property()],e.default.prototype,"attached",void 0),t.__decorate([l.property()],e.default.prototype,"container",void 0),t.__decorate([l.property()],e.default.prototype,"layer",void 0),t.__decorate([l.property()],e.default.prototype,"timeExtent",void 0),t.__decorate([l.property()],e.default.prototype,"type",void 0),t.__decorate([l.property()],e.default.prototype,"view",void 0),t.__decorate([l.property()],e.default.prototype,"updating",null),e.default=t.__decorate([d.subclass("esri.views.2d.layers.imagery.VectorFieldView2D")],e.default),e.default});