// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/Error","../../../../core/has","../../../../core/Logger","../../../../core/MD5","../../../../layers/support/AggregateField","../../../../layers/support/ExpressionInfo","../../../../renderers/SimpleRenderer","../../../../renderers/support/AuthoringInfo","../../../../symbols/SimpleMarkerSymbol"],function(e,r,s,n,i,a,t,l,u,o){"use strict";s.add("esri-cluster-arcade-enabled",!0);const d=s("esri-cluster-arcade-enabled"),p=new Set(["simple-line","simple-fill","picture-fill"]),c=e=>{const s=s=>n.getLogger("esri.views.2d.layers.support.clusterUtils").error(new r("Unsupported-renderer",s,{renderer:e}));if(!e)return!1;switch(e.type){case"unique-value":if(e.field2||e.field3)return s("FeatureReductionCluster does not support multi-field UniqueValueRenderers"),!1;break;case"class-breaks":if(e.normalizationField){const r=e.normalizationType;if("field"!==r)return s(`FeatureReductionCluster does not support a normalizationType of ${r}`),!1}break;case"simple":case"pie-chart":break;default:return s(`FeatureReductionCluster does not support renderers of type ${e.type}`),!1}if(!d){if("valueExpression"in e&&e.valueExpression)return s("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"),!1;if(("visualVariables"in e&&e.visualVariables||[]).some(e=>!(!("valueExpression"in e)||!e.valueExpression)))return s("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"),!1}return!0};function f(e,r,s,n){const l=i.createMD5Hash(r),u="mode"===s?`cluster_type_${l}`:"sum"===s?`cluster_sum_${l}`:`cluster_avg_${l}`;return e.some(e=>e.name===u)||e.push(new a({name:u,isAutoGenerated:!0,onStatisticExpression:new t({expression:r,returnType:n}),statisticType:s})),u}function m(e,r,s,n,l){if("cluster_count"===r||e.some(e=>e.name===r))return r;const u=function(e,r,s){switch(e){case"sum":return`cluster_sum_${r}`;case"avg":case"avg_angle":return`cluster_avg_${r}`;case"mode":return`cluster_type_${r}`;case"avg_norm":{const e=s,n="field",a=r.toLowerCase()+",norm:"+n+","+e.toLowerCase();return"cluster_avg_"+i.createMD5Hash(a)}}}(s,r,l);return e.some(e=>e.name===u)||("avg_norm"===s?e.push(new a({name:u,isAutoGenerated:!0,onStatisticExpression:new t({expression:`$feature.${r} / $feature.${l}`,returnType:n}),statisticType:"avg"})):e.push(new a({name:u,isAutoGenerated:!0,onStatisticField:r,statisticType:s}))),u}e.createInferredClusterRenderer=function(e,r){let s=r.clone();if(!c(s))return s;if(r.symbols.some(e=>p.has(e.type))&&(s=new l({symbol:new o})),s.authoringInfo||(s.authoringInfo=new u),s.authoringInfo.isAutoGenerated=!0,"visualVariables"in s){const r=(s.visualVariables||[]).filter(e=>"$view.scale"!==e.valueExpression);r.forEach(r=>{"rotation"===r.type?r.field?r.field=m(e,r.field,"avg_angle","number"):r.valueExpression&&(r.field=f(e,r.valueExpression,"avg_angle","number"),r.valueExpression=null):r.normalizationField?(r.field=m(e,r.field,"avg_norm","number",r.normalizationField),r.normalizationField=null):r.field?r.field=m(e,r.field,"avg","number"):r.valueExpression&&(r.field=f(e,r.valueExpression,"avg","number"),r.valueExpression=null)}),s.visualVariables=r}switch(s.type){case"simple":break;case"pie-chart":for(const r of s.attributes)r.field?r.field=m(e,r.field,"sum","number"):r.valueExpression&&(r.field=f(e,r.valueExpression,"sum","number"),r.valueExpression=null);break;case"unique-value":s.field?s.field=m(e,s.field,"mode","string"):s.valueExpression&&(s.field=f(e,s.valueExpression,"mode","string"),s.valueExpression=null);break;case"class-breaks":s.normalizationField?(s.field=m(e,s.field,"avg_norm","number",s.normalizationField),s.normalizationField=null):s.field?s.field=m(e,s.field,"avg","number"):s.valueExpression&&(s.field=f(e,s.valueExpression,"avg","number"),s.valueExpression=null)}return s},e.isClusterCompatibleRenderer=c,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});