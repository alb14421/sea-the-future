// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../../core/maybe","../../../../core/libs/gl-matrix-2/math/mat3","../../../../core/libs/gl-matrix-2/factories/mat3f32","../../../webgl/BufferObject","../../../webgl/FramebufferObject","../../../webgl/Program","../../../../core/has","../../../webgl/Renderbuffer","../../../webgl/Texture","../../../webgl/VertexArrayObject","../../engine/DisplayObject","../../../webgl/enums","../../../webgl/VertexAttributeLocations","../../../webgl/VertexBuffer","../../../webgl/VertexElementDescriptor"],function(e,t,r,s,a,i,n,o,c,f,l,u,h,m,d){"use strict";const g=[new d.VertexElementDescriptor("a_PositionAndFlags",3,u.DataType.SHORT,0,6)],b={vsPath:"debug/overlay",fsPath:"debug/overlay",locations:h.fromLayout(g)};class _ extends l.DisplayObject{constructor(e){super(),this._conf=e}static makeFlags(e,t){return e|t<<2}_createTransforms(){return{displayViewScreenMat3:r.create()}}doRender(e){this._updateTransforms(e),this._ensureResources(e);const{context:t}=e;t.useProgram(this._program),this._program.setUniformMatrix3fv("u_dvsMat3",this.transforms.displayViewScreenMat3),this._program.setUniform4fv("u_colors",this._conf.getColors(e)),this._program.setUniform1fv("u_opacities",this._conf.getOpacities(e));const{vertexData:r,indexData:s}=this._conf.getMesh(e);this._vertexBuffer.setData(r),this._indexBuffer.setData(s),t.bindVAO(this._vertexArray),t.setBlendingEnabled(!0),t.setBlendFunction(1,771),t.setDepthTestEnabled(!1),t.setStencilTestEnabled(!1),t.setColorMask(!0,!0,!0,!0),t.drawElements(u.PrimitiveType.TRIANGLES,s.length,u.DataType.UNSIGNED_INT,0)}onDetach(){this._vertexArray=e.disposeMaybe(this._vertexArray)}_updateTransforms(e){t.identity(this.transforms.displayViewScreenMat3),t.translate(this.transforms.displayViewScreenMat3,this.transforms.displayViewScreenMat3,[-1,1]),t.scale(this.transforms.displayViewScreenMat3,this.transforms.displayViewScreenMat3,[2/e.state.size[0],-2/e.state.size[1],1])}_ensureResources(e){const{context:t}=e;this._program??=e.painter.materialManager.getProgram(b),this._vertexBuffer??=new m.VertexBuffer(t,g,null,35040),this._indexBuffer??=s.BufferObject.createIndex(t,35040),this._vertexArray??=new f.VertexArrayObject(t,this._vertexBuffer,this._indexBuffer)}}return _});