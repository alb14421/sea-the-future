// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../Viewpoint","../../core/Accessor","../../core/has","../../core/maybe","../../core/scheduling","../../core/screenUtils","../../core/time","../../core/accessorSupport/decorators/property","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/libs/gl-matrix-2/factories/vec2f64","../../geometry/Point","../ViewAnimation","./PaddedViewState","./viewpointUtils","./pointToPoint/Camera","../animation/easing","../animation/pointToPoint/Animation","../animation/pointToPoint/Settings"],function(t,i,e,n,a,s,o,r,c,h,u,p,m,d,_,w,l,v,g,y,f){"use strict";class T{constructor(t){this._view=t,this._animation=new y.Animation(()=>new v.Camera(this._view)),this._current=new v.Camera(this._view)}get _source(){return this._animation.definition.source}get _target(){return this._animation.definition.target}get duration(){return this._animation.time}get animation(){return this._animation}update(t,i,e={}){l.copy(this._current.viewpoint,t),l.copy(this._source.viewpoint,t),l.copy(this._target.viewpoint,i),this._animation.update(this._source,this._target,e)}applyRatio(t,i){this._animation.cameraAt(i,this._current),l.copy(t,this._current.viewpoint)}}let S=class extends e{constructor(t){super(t),this._animation=null,this._destinationViewState=new w,this.updateFunction=null,this.easing=g.EasingFunctions.ease,this.viewpoint=new i({targetGeometry:new d,scale:0,rotation:0}),this._updateTask=s.addFrameTask({postRender:this._postRender.bind(this)}),this._updateTask.pause(),this._transition=new T(t.view)}destroy(){this._updateTask=a.removeMaybe(this._updateTask)}get animation(){return this._animation}set animation(t){this._animation=t,this.view.animation=t}animate(t,i,e){this.stop();const n=this.viewpoint;l.copy(n,i);const a=t.target;this._transition.update(this.viewpoint,a,{apex:{maximumDistance:Math.min(64*Math.min(i.scale,a.scale),this.view.constraints.effectiveMinScale),desiredSlope:5e-8},duration:e?.duration,maxDuration:"auto"===e?.animationMode?r.Milliseconds(1/0):e?.maxDuration??f.defaultSettings2D.maxDuration,speedFactor:e?.speedFactor,easing:("string"==typeof e?.easing?g.EasingFunctions[e.easing]:e?.easing)||this.easing}),"auto"===e?.animationMode&&(this._destinationViewState.copy(this.view.state),this._destinationViewState.viewpoint=a,function(t,i,e,n){if(null!=i?.duration)return!0;const{time:a,isLinear:s}=t,r=i?.speedFactor||1;if(a>(i?.maxDuration??f.defaultSettings2D.maxDuration/r))return!1;if(s){const t=1.5,i=m.create(),s=o.createScreenPoint(...n.toScreen(i,...e.center)),c=o.createScreenPoint(...e.toScreen(i,...n.center)),h=null!=c&&c.x>-1*e.size[0]&&c.x<(t+.5)*e.size[0]&&c.y>-1*e.size[1]&&c.y<(t+.5)*e.size[1],u=null!=s&&s.x>-1*n.size[0]&&s.x<(t+.5)*n.size[0]&&s.y>-1*n.size[1]&&s.y<(t+.5)*n.size[1];if(a>2e3/r&&!h&&!u)return!1}return!0}(this._transition.animation,e,this.view.state,this._destinationViewState)||this._transition.update(this.viewpoint,a,{duration:r.Milliseconds(0)}));const s=()=>{this.animation===t&&this._updateTask&&("finished"===t.state&&(this._transition.applyRatio(this.viewpoint,1),this.view.state&&(this.view.state.viewpoint=this.viewpoint.clone())),this.animation=null,this.updateFunction=null)};return t.when(s,s),this._startTime=performance.now(),this._updateTask.resume(),this.animation=t,t}animateContinuous(t,i){this.stop(),this.updateFunction=i,this.viewpoint=t;const e=new _({target:t.clone()}),n=()=>{this.animation===e&&this._updateTask&&(this.animation=null,this.updateFunction=null)};return e.when(n,n),this._startTime=performance.now(),this._updateTask.resume(),this.animation=e,e}stop(){this.animation&&(this.animation.stop(),this.animation=null,this.updateFunction=null)}_postRender(t){const i=this.animation;if(i&&i.state!==_.state.STOPPED){if(this.updateFunction)this.updateFunction(this.viewpoint,t.deltaTime),this.animation?.update(this.viewpoint);else{const t=performance.now()-this._startTime,i=this._transition.duration,e=i>0?t/i:1,n=e>=1;this._transition.applyRatio(this.viewpoint,e),n&&this.animation?.finish()}this.view.state&&(this.view.state.viewpoint=this.viewpoint.clone())}else this._updateTask.pause()}};return t.__decorate([c.property()],S.prototype,"easing",void 0),t.__decorate([c.property()],S.prototype,"view",void 0),t.__decorate([c.property()],S.prototype,"viewpoint",void 0),S=t.__decorate([p.subclass("esri.views.2d.AnimationManager")],S),S});