// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../../geometry/support/spatialReferenceUtils","./TileKey"],function(t,r){"use strict";function i(t,r){return[t,r]}function o(t,r,i){return t[0]=r,t[1]=i,t}const e=new r("0/0/0/0");class s{static create(r,e,n=null){const l=t.getInfo(r.spatialReference),h=e.origin||i(r.origin.x,r.origin.y),a=i(r.size[0]*e.resolution,r.size[1]*e.resolution),u=i(-1/0,-1/0),c=i(1/0,1/0),g=i(1/0,1/0);null!=n&&(o(u,Math.max(0,Math.floor((n.xmin-h[0])/a[0])),Math.max(0,Math.floor((h[1]-n.ymax)/a[1]))),o(c,Math.max(0,Math.floor((n.xmax-h[0])/a[0])),Math.max(0,Math.floor((h[1]-n.ymin)/a[1]))),o(g,c[0]-u[0]+1,c[1]-u[1]+1));const{cols:w,rows:m}=e;let d,f,z,p;return!n&&w&&m&&(o(u,w[0],m[0]),o(c,w[1],m[1]),o(g,w[1]-w[0]+1,m[1]-m[0]+1)),r.isWrappable?(d=i(Math.ceil(Math.round((l.valid[1]-l.valid[0])/e.resolution)/r.size[0]),g[1]),f=!0,z=l.origin,p=l.valid):(d=g,f=!1),new s(e.level,e.resolution,e.scale,h,u,c,g,a,d,f,z,p)}constructor(t,r,i,o,e,s,n,l,h,a,u,c){this.level=t,this.resolution=r,this.scale=i,this.origin=o,this.first=e,this.last=s,this.size=n,this.norm=l,this.worldSize=h,this.wrap=a,this._spatialReferenceOrigin=u,this._spatialReferenceValid=c}normalizeCol(t){if(!this.wrap)return t;const r=this.worldSize[0];return t<0?r-1-Math.abs((t+1)%r):t%r}normalizeKey(t){if(!this.wrap)return;const r=this.worldSize[0],i=t.col;i<0?(t.col=i+r,t.world-=1):i>=r&&(t.col=i-r,t.world+=1)}denormalizeCol(t,r){return this.wrap?this.worldSize[0]*r+t:t}getWorldForColumn(t){return this.wrap?Math.floor(t/this.worldSize[0]):0}getFirstColumnForWorld(t){return t*this.worldSize[0]+this.first[0]}getLastColumnForWorld(t){return t*this.worldSize[0]+this.first[0]+this.size[0]-1}getColumnForX(t){return(t-this.origin[0])/this.norm[0]}getXForColumn(t){const r=this.origin[0]+t*this.norm[0],i=this._spatialReferenceOrigin,o=this._spatialReferenceValid;return this.wrap&&i&&o?r===i[0]?o[0]:this.origin[0]===i[0]&&t===this.worldSize[0]?o[1]:r:r}getRowForY(t){return(this.origin[1]-t)/this.norm[1]}getYForRow(t){return this.origin[1]-t*this.norm[1]}getTileBounds(t,r,i=!1){e.set(r);const o=i?e.col:this.denormalizeCol(e.col,e.world),s=e.row;return function(t,r,i,o,e){t[0]=r,t[1]=i,t[2]=o,t[3]=e}(t,this.getXForColumn(o),this.getYForRow(s+1),this.getXForColumn(o+1),this.getYForRow(s)),t}getTileCoords(t,r,i=!1){e.set(r);const s=i?e.col:this.denormalizeCol(e.col,e.world);return Array.isArray(t)?o(t,this.getXForColumn(s),this.getYForRow(e.row)):(t.x=this.getXForColumn(s),t.y=this.getYForRow(e.row)),t}}return s});