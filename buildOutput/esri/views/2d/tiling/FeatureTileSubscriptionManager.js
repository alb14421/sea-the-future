// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","./TileKey"],function(e,s){"use strict";function i(e,s){const i=new Set;for(const t of e instanceof Set?e.values():e.keys())s.has(t)||i.add(t);return i}class t{constructor(e,s,i){this.target=new Map,this.previous=new Map;const t=i?e.getTileCoverage(i,0,!0,"closest"):null,r=e.getTileCoverage(s,0,!0,"closest");if(this.target.clear(),this.previous.clear(),t)for(const e of t.keys())this.previous.set(e.id,e);if(r)for(const e of r.keys())this.target.set(e.id,e)}*values(){yield*this.target.values(),yield*this.previous.values()}*keys(){yield*this.target.keys(),yield*this.previous.keys()}}class r{constructor(e){this.version=e}}e.FeatureTileSubscriptionManager=class{constructor(e){this._subscriptions=new Map,this._visible=new Set,this._version=0,this._strategy="eager",this._config=e}destroy(){}get coverage(){return this._coverage}get subscriptions(){return new Set(this._subscriptions.keys())}setVisibilityStrategy(e){this._strategy=e}suspend(){this._suspendedCoverage=this._coverage,this._coverage=null,this._updateSubscriptions()}resume(){null==this._coverage&&(this._coverage=this._suspendedCoverage,this._suspendedCoverage=null,this._updateSubscriptions())}update(e,s){return this._version=(this._version+1)%Number.MAX_SAFE_INTEGER,this._coverage=new t(this._config.tileInfoView,e,s),this._updateSubscriptions(),new Set(this._visible)}updateVisibility(){const e=this._updateVisibility();return this._visible=e,this._visible}_updateSubscriptions(){if(!this._coverage)return;const e=this._updateVisibility(),s=new Set(this._coverage.keys()),t=i(this._subscriptions,e),o=i(s,this._subscriptions),n=i(t,s);this._visible=e;for(const e of o.values())this._subscriptions.set(e,new r(this._version));for(const e of n.values())this._subscriptions.delete(e);(o.size||n.size)&&this._sendUpdateSubscriptions(o,n)}_sendUpdateSubscriptions(e,s){const i=Array.from(e.values()).map(e=>({tileId:e,version:this._subscriptions.get(e).version}));this._config.updateSubscriptions({subscribe:i,unsubscribe:Array.from(s.values())})}_updateVisibility(){if(!this._coverage)return new Set;switch(this._strategy){case"eager":return this._updateVisibilityEager(this._coverage);case"target-defer":return this._updateVisibilityTargetDefer(this._coverage)}}_updateVisibilityEager(e){const s=new Set;for(const i of e.values())this._config.isDone(i)?s.add(i.id):this._addVisibleParent(s,i)||this._addVisibleChildren(s,i)||s.add(i.id);return s}_updateVisibilityTargetDefer(e){const s=new Set,i=Array.from(e.target.values());if(!i.some(e=>!this._config.isDone(e))){for(const e of i)s.add(e.id);return s}for(const i of e.values())this._addVisibleParent(s,i)||this._addVisibleChildren(s,i)||s.add(i.id);return s}_addVisibleParent(e,i){let t=!1;for(const r of this._visible.values())new s(r).containsChild(i)&&(e.add(r),t=!0);return t}_addVisibleChildren(e,i){let t=!1;for(const r of this._visible.values()){const o=new s(r);i.containsChild(o)&&(e.add(r),t=!0)}return t}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});