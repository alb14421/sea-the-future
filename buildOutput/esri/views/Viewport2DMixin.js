// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../chunks/tslib.es6","../core/accessorSupport/decorators/property","../core/has","../core/Logger","../core/RandomLCG","../core/accessorSupport/decorators/subclass","./2d/GoToManager","./2d/input/MapViewInputManager","./support/screenUtils"],function(e,t,r,o,n,a,i,s,p,c){"use strict";e.Viewport2DMixin=e=>{const o=e;let n=class extends o{constructor(...e){super(...e),this.goToManager=new s.GoToManager({view:this}),this.inputManager=new p({view:this}),this.addHandles([this.on("resize",e=>this.stateManager.resize(e.width,e.height))])}get interacting(){return this.navigating}get stationary(){return!this.animation&&!this.navigating&&!this.resizing&&this.stationaryManager.stationary}on(e,t,r,o){return this.viewEvents.on(e,t,r,o)||super.on(e,t)}hasEventListener(e){return super.hasEventListener(e)||this.viewEvents.hasHandler(e)}goTo(e,t){return this.goToManager.goTo(e,t)}toMap(e){if(!this.ready)return null;const t=c.isSupportedScreenPointEvent(e)?c.createScreenPointFromSupportedEvent(this,e):e;return this.stateManager.toMap(t)}};return t.__decorate([r.property()],n.prototype,"goToManager",void 0),t.__decorate([r.property({readOnly:!0})],n.prototype,"interacting",null),t.__decorate([r.property()],n.prototype,"stationary",null),t.__decorate([r.property({readOnly:!0})],n.prototype,"inputManager",void 0),n=t.__decorate([i.subclass("esri.views.Viewport2DMixin")],n),n},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});