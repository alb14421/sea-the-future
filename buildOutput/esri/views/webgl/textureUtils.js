// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../core/Error","../../core/Logger","../../core/object","./enums"],function(e,t,r,i,n){"use strict";const o=()=>r.getLogger("esri/views/webgl/textureUtils");function a(e){return i.hasValue(n.SizedDepthFormat,e)}function l(e){return i.hasValue(n.SizedDepthStencilFormat,e)}function u(e){return null!=e&&i.hasValue(n.CompressedTextureFormat,e)}function s(e){return null!=e&&"type"in e&&"compressed"===e.type}function c(e){return null!=e&&"byteLength"in e}e.calcMipmapLevels=function(e,t,r,i=1){let n=Math.max(t,r);return 32879===e&&(n=Math.max(n,i)),Math.floor(Math.log2(n))+1},e.deriveInternalFormat=function(e){if(null!=e.internalFormat)return e.internalFormat;switch(e.dataType){case n.PixelType.FLOAT:switch(e.pixelFormat){case 6408:return n.SizedPixelFormat.RGBA32F;case 6407:return n.SizedPixelFormat.RGB32F;default:throw new t("texture:unknown-format","Unable to derive format")}case n.PixelType.UNSIGNED_BYTE:switch(e.pixelFormat){case 6408:return n.SizedPixelFormat.RGBA8;case 6407:return n.SizedPixelFormat.RGB8}}const{pixelFormat:r}=e;return e.internalFormat=34041===r?n.SizedDepthStencilFormat.DEPTH24_STENCIL8:6402===r?n.SizedDepthFormat.DEPTH_COMPONENT24:r,e.internalFormat},e.getDimensions=function(e){let t="width"in e?e.width:e.codedWidth,r="height"in e?e.height:e.codedHeight;return e instanceof HTMLVideoElement&&(t=e.videoWidth,r=e.videoHeight),{width:t,height:r,depth:1}},e.is3DTarget=function(e){return 32879===e||35866===e},e.isArrayBufferView=c,e.isCompressedData=s,e.isCompressedFormat=u,e.isCompressedTexture=function(e){return u(e.descriptor.internalFormat)},e.isSizedDepthFormat=a,e.isSizedDepthStencilFormat=l,e.isSizedPixelFormat=function(e){return n.sizedPixelFormatValues.includes(e)},e.isTexImageSource=function(e){return null!=e&&!s(e)&&!c(e)},e.validateTexture=function(e){const{width:t,height:r,depth:i}=e;(null!=t&&t<0||null!=r&&r<0||null!=i&&i<0)&&o().error("Negative dimension parameters are not allowed!");const{internalFormat:n}=e;if(n&&(a(n)||l(n))){const{linearFilterDepth:t,compareEnabled:r,samplingMode:i,hasMipmap:n}=e;n&&o().error("Depth textures cannot have mipmaps"),t?9729!==i&&9728!==i&&o().error("Depth textures cannot sample mipmaps"):(9728!==i&&o().error("Depth textures without filtering must use NEAREST filtering"),r&&o().error("Depth textures without filtering cannot use compare function"))}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});