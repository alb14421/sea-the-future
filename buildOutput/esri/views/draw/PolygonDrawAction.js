// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["require","../../chunks/tslib.es6","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../geometry/Point","./DrawAction","./DrawingMode","./input/DrawEvents","../input/InputManager","../interactive/keybindings","../support/automaticLengthMeasurementUtils","../support/screenUtils"],function(e,t,i,o,r,s,n,a,d,h,p,l,c,v,_){"use strict";let u=class extends d{constructor(e){super(e),this._panEnabled=!1,this._popVertexOnPointerMove=!1,this._addVertexOnPointerUp=!1,this._drawTool=null,this.mode=h.defaultDrawingMode}initialize(){this._addViewHandles(),"3d"===this.view.type&&this.addResolvingPromise(this._addDrawTool())}destroy(){this._removeDrawTool(),this.emit("destroy")}get _dragEnabled(){return"freehand"===this.mode||"hybrid"===this.mode}get _clickEnabled(){return"click"===this.mode||"hybrid"===this.mode}undo(){this._drawTool?this._drawTool.undo():(super.undo(),this.notifyChange("vertices"))}redo(){this._drawTool?this._drawTool.redo():(super.redo(),this.notifyChange("vertices"))}canUndo(){return this._drawTool?.canUndo()??super.canUndo()}canRedo(){return this._drawTool?.canRedo()??super.canRedo()}complete(){this._completeDrawing()}_getGeometryZValue(){return this.hasZ&&this.vertices.length>0?this.vertices[0][2]:this.defaultZ}_addViewHandles(){this._addViewHandles2DOnly(),this.addHandles(this.view.on("key-down",e=>{const{key:t,repeat:i}=e;t!==c.sketchKeys.vertexAdd||i?t!==c.sketchKeys.complete||i?t!==c.sketchKeys.undo||this.interactiveUndoDisabled||i?t!==c.sketchKeys.redo||this.interactiveUndoDisabled||i||(e.stopPropagation(),this.redo()):(e.stopPropagation(),this.undo()):(e.stopPropagation(),this._drawCompleteHandler(e)):(e.stopPropagation(),this._handleVertexAddKey(e))},l.ViewEventPriorities.TOOL))}_addViewHandles2DOnly(){"2d"===this.view.type&&(this.addHandles([this.view.on("click",e=>{e.stopPropagation()},l.ViewEventPriorities.TOOL),this.view.on("pointer-down",e=>{this._shouldHandlePointerEvent(e)&&(this._abortSnapping(),this._activePointerId=e.pointerId,this._addVertexOnPointerUp=!0,this._cursorScreenPoint=_.createScreenPointFromEvent(e),"touch"===e.pointerType&&this._updateCursor())},l.ViewEventPriorities.TOOL),this.view.on("pointer-move",e=>{this._abortSnapping(),this._popVertexOnPointerMove&&(this.undo(),this._popVertexOnPointerMove=!1),this._cursorScreenPoint=_.createScreenPointFromEvent(e),"touch"!==e.pointerType&&this._updateCursor()},l.ViewEventPriorities.TOOL),this.view.on("pointer-drag",e=>{this._shouldHandlePointerEvent(e)&&(this._abortSnapping(),this._cursorScreenPoint=_.createScreenPointFromEvent(e),this._dragEnabled&&!this._panEnabled?this._vertexAddHandler(e):this._addVertexOnPointerUp=!1)},l.ViewEventPriorities.TOOL),this.view.on("pointer-up",e=>{if(this._shouldHandlePointerEvent(e)){if(this._abortSnapping(),this._activePointerId=null,!this._addVertexOnPointerUp){const t="touch"===e.pointerType;return void this._updateCursor(t)}if(!this._clickEnabled)return 1===this.vertices.length&&this.vertices.pop(),void this._drawCompleteHandler(e);this._vertexAddHandler(e)}},l.ViewEventPriorities.TOOL),this.view.on("drag",e=>{this._dragEnabled&&null!=this._activePointerId&&!this._panEnabled&&e.stopPropagation()},l.ViewEventPriorities.TOOL),this.view.on("drag",["Shift"],e=>{e.stopPropagation()},l.ViewEventPriorities.TOOL),this.view.on("double-click",e=>{e.stopPropagation(),this._drawCompleteHandler(e)},l.ViewEventPriorities.TOOL),this.view.on("double-click",["Control"],e=>{e.stopPropagation(),this._drawCompleteHandler(e)},l.ViewEventPriorities.TOOL),this.view.on("key-down",e=>{const{key:t,repeat:i}=e;t!==c.sketchKeys.pan||i||(e.stopPropagation(),this._panEnabled=!0)},l.ViewEventPriorities.TOOL),this.view.on("key-up",e=>{e.key===c.sketchKeys.pan&&(e.stopPropagation(),this._panEnabled=!1)},l.ViewEventPriorities.TOOL)]),this._addUndoRedoHandles())}_handleVertexAddKey(e){this._drawTool?this._drawTool.drawOperation.commitStagedVertex():this._cursorScreenPoint&&(this._abortSnapping(),this._vertexAddHandler(e))}_addUndoRedoHandles(){this.addHandles([this._editGeometryOperations.on("vertex-remove",e=>{if(this.notifyChange("vertices"),"undo"===e.operation){const t=[...this._committedVertices];null!=this._stagedVertex&&t.push(this._coordinateHelper.pointToArray(this._stagedVertex)),this.emit("undo",new p.VertexRemoveEvent(this.view,e.vertices[0].index,t))}}),this._editGeometryOperations.on("vertex-add",e=>{if(this.notifyChange("vertices"),"apply"===e.operation){const e=this._committedVertices.length-1,t=new p.VertexAddEvent(this.view,e,this.vertices);this.emit("vertex-add",t),t.defaultPrevented&&(this._popVertexOnPointerMove=!0)}else if("redo"===e.operation){const t=[...this._committedVertices];null!=this._stagedVertex&&t.push(this._coordinateHelper.pointToArray(this._stagedVertex)),this.emit("redo",new p.VertexAddEvent(this.view,e.vertices[0].index,t))}})])}async _addDrawTool(){const[{LegacyDrawTool:t},i]=await Promise.all([new Promise((t,i)=>e(["./LegacyDrawTool"],t,i)),v.loadAutomaticLengthMeasurementUtils()]),o=new t({view:this.view,elevationInfo:this.elevationInfo,hasZ:this.hasZ,geometryType:"polygon",mode:this.mode,automaticLengthMeasurementUtils:i});this.destroyed?o.destroy():(this._drawTool=o,this.view.addAndActivateTool(o),o.on("vertex-add",e=>{if(1===e.vertices.length){const{view:t}=this,i=e.vertices[0].vertexIndex,r=o.getVertexCoords();this.emit("vertex-add",new p.VertexAddEvent(t,i,r)),"undo"!==e.operation&&"redo"!==e.operation||this.emit(e.operation,new p.VertexAddEvent(t,i,r))}}),o.on("vertex-remove",e=>{if(1===e.vertices.length){const{view:t}=this,i=e.vertices[0].vertexIndex,r=o.getVertexCoords();this.emit("vertex-remove",new p.VertexRemoveEvent(t,i,r)),"undo"!==e.operation&&"redo"!==e.operation||this.emit(e.operation,new p.VertexRemoveEvent(t,i,r))}}),o.on("cursor-update",e=>{1===e.vertices.length&&this.emit("cursor-update",new p.CursorUpdateEvent(this.view,e.vertices[0].vertexIndex,o.getVertexCoords()))}),o.on("complete",e=>{this.emit("draw-complete",new p.DrawCompleteEvent(o.getVertexCoords())),this._removeDrawTool(),this.removeAllHandles()}))}_removeDrawTool(){this._drawTool&&(this.view.tools.remove(this._drawTool),this._drawTool=null)}_addVertex(e){const t=this._coordinateHelper.arrayToVector(e);this._isDuplicateOfLastVertex(t)||(this._lastVertexUnsnapped=this._stagedVertexUnsnapped,this._popCursorVertex(),this._editGeometryOperations.appendVertex(t))}_updateCursor(e=!1){if(this._popCursorVertex(),!this._cursorScreenPoint)return;const t=this.getCoordsAndPointFromScreenPoint(this._cursorScreenPoint);null==t||e||this._pushCursorVertex(t.vertex,()=>this.emit("cursor-update",new p.CursorUpdateEvent(this.view,this._activeComponent.vertices.length,this.vertices,null!=this._stagedVertex?new a(this._stagedVertex):null)))}_completeDrawing(){if(this._drawTool)return void this._drawTool.completeCreateOperation();if(this._activePointerId=null,this._popCursorVertex(),this._committedVertices.length<3)return;this._abortSnapping(),null!=this._snappingManager&&this._snappingManager.doneSnapping();const e=new p.DrawCompleteEvent(this.vertices);this.emit("draw-complete",e),e.defaultPrevented||this.removeAllHandles()}};return t.__decorate([i.property()],u.prototype,"_dragEnabled",null),t.__decorate([i.property()],u.prototype,"_clickEnabled",null),t.__decorate([i.property({type:h.drawingModes})],u.prototype,"mode",void 0),u=t.__decorate([n.subclass("esri.views.draw.PolygonDrawAction")],u),u});