// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/Evented","../../../core/lang","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/Logger","../../../core/accessorSupport/decorators/subclass","../../../layers/GraphicsLayer","../../../symbols/SimpleFillSymbol","../../../symbols/SimpleLineSymbol","../../../symbols/SimpleMarkerSymbol","./drawUtils","./HighlightHelper","./layerUtils","./input/GraphicMoverEvents","../../input/InputManager","../../interactive/GraphicManipulator","../../support/screenUtils"],function(i,t,e,r,s,a,h,o,c,n,l,p,d,v,_,g,y,u,f,G){"use strict";const w="indicator-symbols";function m(i){if(null==i.symbol)return null;switch(i.symbol.type){case"cim":return new d({style:"circle",size:12,color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}});case"picture-marker":{const{xoffset:t,yoffset:e,height:r,width:s}=i.symbol,a=r===s?s:Math.max(r,s);return new d({xoffset:t,yoffset:e,size:a,style:"square",color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}})}case"simple-marker":{const{xoffset:t,yoffset:e,size:r,style:s}=i.symbol;return new d({xoffset:t,yoffset:e,style:"circle"===s?"circle":"square",size:r+2,color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}})}case"simple-fill":return new l({color:[0,0,0,0],outline:{style:"dash",color:[255,127,0,1],width:1}});case"simple-line":return new p({color:[255,127,0,1],style:"dash",width:1});case"text":{const{xoffset:t,yoffset:e}=i.symbol;return new d({xoffset:t,yoffset:e,size:12,color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}})}default:return null}}return i.default=class extends e.EventedAccessor{constructor(i){super(i),this._activeGraphic=null,this._dragEvent=null,this._hoverGraphic=null,this._indicators=[],this._initialDragGeometry=null,this._manipulators=[],this._layerViews=null,this.type="graphic-mover",this.callbacks={onGraphicClick(){},onGraphicDoubleClick(){},onGraphicMoveStart(){},onGraphicMove(){},onGraphicMoveStop(){},onGraphicPointerOver(){},onGraphicPointerOut(){},onGraphicPointerDown(){},onGraphicPointerUp(){}},this.enableMoveAllGraphics=!1,this.graphics=[],this.highlightName=null,this.highlightsEnabled=!1,this.indicatorsEnabled=!1,this._defaultLayer=new n({listMode:"hide",internal:!0,title:"GraphicMover highlight layer"}),this.layer=this._defaultLayer,this.view=null}initialize(){g.addUniqueLayer(this.view,this.layer),this._highlightHelper=new _({view:this.view}),this.refresh(),this.addHandles([s.watch(()=>this.graphics.length,()=>this.refresh()),s.when(()=>this.view?.ready,()=>{this.addHandles([this.view.on("immediate-click",i=>this._clickHandler(i),u.ViewEventPriorities.TOOL),this.view.on("double-click",i=>this._doubleClickHandler(i),u.ViewEventPriorities.TOOL),this.view.on("pointer-down",i=>this._pointerDownHandler(i),u.ViewEventPriorities.TOOL),this.view.on("pointer-move",i=>this._pointerMoveHandler(i),u.ViewEventPriorities.TOOL),this.view.on("pointer-up",i=>this._pointerUpHandler(i),u.ViewEventPriorities.TOOL),this.view.on("drag",i=>this._dragHandler(i),u.ViewEventPriorities.TOOL),this.view.on("key-down",i=>this._keyDownHandler(i),u.ViewEventPriorities.TOOL)])},{once:!0,initial:!0}),s.watch(()=>this.view,i=>{this._highlightHelper.removeAll(),this._highlightHelper.view=i}),s.watch(()=>[this.highlightsEnabled,this.highlightName],()=>{this._highlightHelper?.removeAll(),this._setUpHighlights()})])}destroy(){this._removeIndicators(),this.view.map?.remove(this.layer),this._defaultLayer.destroy(),this.reset(),this._manipulators.forEach(i=>i.destroy()),this._manipulators=null}get state(){const i=this.view.ready,t=this.graphics.length>0,e=this._activeGraphic;return i&&t?e?"moving":"active":i?"ready":"disabled"}refresh(){this.reset(),this._setup()}reset(){this._activeGraphic=null,this._hoverGraphic=null,this._dragEvent=null,this._highlightHelper.removeAll()}updateGeometry(i,t){const e=this.graphics[i];e&&(e.set("geometry",t),this._setUpIndicators())}_setup(){this._setUpHighlights(),this._setUpIndicators(),this._setUpManipulators(),this._syncLayerViews()}_clickHandler(i){const t=this._findTargetGraphic(G.createScreenPointFromEvent(i));if(t){const e=new y.GraphicClickEvent(t,this.graphics.indexOf(t),i.x,i.y,i);this.emit("graphic-click",e),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(e)}}_doubleClickHandler(i){const t=this._findTargetGraphic(G.createScreenPointFromEvent(i));if(t){const e=new y.GraphicDoubleClickEvent(t,this.graphics.indexOf(t),i.x,i.y,i);this.emit("graphic-double-click",e),this.callbacks.onGraphicDoubleClick&&this.callbacks.onGraphicDoubleClick(e)}}_pointerDownHandler(i){const t=this._findTargetGraphic(G.createScreenPointFromEvent(i));if(t){this._activeGraphic=t;const{x:e,y:r}=i,s=new y.GraphicPointerDownEvent(t,this.graphics.indexOf(t),e,r,i);this.emit("graphic-pointer-down",s),this.callbacks.onGraphicPointerDown&&this.callbacks.onGraphicPointerDown(s)}else this._activeGraphic=null}_pointerUpHandler(i){if(this._activeGraphic){const{x:t,y:e}=i,r=this.graphics.indexOf(this._activeGraphic),s=new y.GraphicPointerUpEvent(this._activeGraphic,r,t,e,i);this.emit("graphic-pointer-up",s),this.callbacks.onGraphicPointerUp&&this.callbacks.onGraphicPointerUp(s)}}_pointerMoveHandler(i){if(this._dragEvent)return;const t=this._findTargetGraphic(G.createScreenPointFromEvent(i));if(t){const{x:e,y:r}=i;if(this._hoverGraphic){if(this._hoverGraphic===t)return;const s=this.graphics.indexOf(this._hoverGraphic),a=new y.GraphicPointerOutEvent(this.graphics[s],s,e,r,i);this._hoverGraphic=null,this.emit("graphic-pointer-out",a),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(a)}const s=this.graphics.indexOf(t),a=new y.GraphicPointerOverEvent(t,s,e,r,i);return this._hoverGraphic=t,this.emit("graphic-pointer-over",a),void(this.callbacks.onGraphicPointerOver&&this.callbacks.onGraphicPointerOver(a))}if(this._hoverGraphic){const{x:t,y:e}=i,r=this.graphics.indexOf(this._hoverGraphic),s=new y.GraphicPointerOutEvent(this.graphics[r],r,t,e,i);this._hoverGraphic=null,this.emit("graphic-pointer-out",s),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(s)}}_dragHandler(i){if("start"!==i.action&&!this._dragEvent||!this._activeGraphic?.geometry)return;"start"===i.action&&this._removeIndicators(),i.stopPropagation();const{action:t,x:e,y:s}=i,a=this.graphics.indexOf(this._activeGraphic),h=this._dragEvent?e-this._dragEvent.x:0,o=this._dragEvent?s-this._dragEvent.y:0,c=e-i.origin.x,n=s-i.origin.y,l="start"===t?this._activeGraphic.geometry:this._initialDragGeometry,p=v.cloneMove(l,c,n,this.view);if(this._activeGraphic.geometry=p,this.enableMoveAllGraphics&&this.graphics.forEach(i=>{i!==this._activeGraphic&&(i.geometry=v.cloneMove(i.geometry,h,o,this.view))}),this._dragEvent=i,"start"===t){this._initialDragGeometry=r.clone(l);const t=new y.GraphicMoveStartEvent(this._activeGraphic,this.graphics,a,e,s,h,o,c,n,i);this.emit("graphic-move-start",t),this.callbacks.onGraphicMoveStart&&this.callbacks.onGraphicMoveStart(t),t.defaultPrevented&&this._activeGraphic.set("geometry",l)}else if("update"===t){const t=new y.GraphicMoveEvent(this._activeGraphic,this.graphics,a,e,s,h,o,c,n,i);this.emit("graphic-move",t),this.callbacks.onGraphicMove&&this.callbacks.onGraphicMove(t),t.defaultPrevented&&(this._activeGraphic.geometry=l)}else{const t=new y.GraphicMoveStopEvent(this._activeGraphic,this.graphics,a,e,s,h,o,c,n,i);this._dragEvent=null,this._activeGraphic=null,this._setUpIndicators(),this.emit("graphic-move-stop",t),this.callbacks.onGraphicMoveStop&&this.callbacks.onGraphicMoveStop(t),t.defaultPrevented&&(this.graphics[a].set("geometry",this._initialDragGeometry),this._setUpIndicators()),this._initialDragGeometry=null}}_keyDownHandler(i){"a"!==i.key&&"d"!==i.key&&"n"!==i.key||"moving"!==this.state||i.stopPropagation()}_findTargetGraphic(i){const t=this.view.toMap(i),e=this.graphics;let r=null,s=Number.MAX_VALUE;this._syncLayerViews();const a=this._layerViews.flatMap(i=>"graphicsViews"in i?Array.from(i.graphicsViews(),i=>i.hitTest(t)).flat():i.graphicsView.hitTest(t)).filter(i=>e.includes(i)).sort((i,t)=>e.indexOf(i)-e.indexOf(t));return a.length?a[0]:(this._manipulators.forEach(t=>{const e=t.intersectionDistance(i);null!=e&&e<s&&(s=e,r=t.graphic)}),r)}_syncLayerViews(){this._layerViews=[];const i=new Set;for(const t of this.graphics){const e=g.findLayerView(this.view,t.layer);e&&i.add(e)}this._layerViews=[...i]}_setUpManipulators(){const{graphics:i,view:t}=this;this._manipulators.forEach(i=>i.destroy()),this._manipulators=i.length?i.map(i=>new f.GraphicManipulator({graphic:i,view:t})):[]}_setUpHighlights(){this.highlightsEnabled&&this.graphics.length&&this._highlightHelper.add(this.graphics,this.highlightName)}_setUpIndicators(){if(this._removeIndicators(),this.indicatorsEnabled){for(const i of this.graphics){const t=i.clone();t.symbol=m(i),this._indicators.push(t),this.addHandles(s.watch(()=>i.symbol,()=>this._setUpIndicators()),w)}this.layer.addMany(this._indicators)}}_removeIndicators(){this.removeHandles(w),this._indicators.length&&(this.layer.removeMany(this._indicators),this._indicators.forEach(i=>i.destroy()),this._indicators=[])}},t.__decorate([a.property()],i.default.prototype,"_activeGraphic",void 0),t.__decorate([a.property({readOnly:!0})],i.default.prototype,"type",void 0),t.__decorate([a.property()],i.default.prototype,"callbacks",void 0),t.__decorate([a.property()],i.default.prototype,"enableMoveAllGraphics",void 0),t.__decorate([a.property()],i.default.prototype,"graphics",void 0),t.__decorate([a.property()],i.default.prototype,"highlightName",void 0),t.__decorate([a.property()],i.default.prototype,"highlightsEnabled",void 0),t.__decorate([a.property()],i.default.prototype,"indicatorsEnabled",void 0),t.__decorate([a.property()],i.default.prototype,"_defaultLayer",void 0),t.__decorate([a.property()],i.default.prototype,"layer",void 0),t.__decorate([a.property({readOnly:!0})],i.default.prototype,"state",null),t.__decorate([a.property()],i.default.prototype,"view",void 0),i.default=t.__decorate([c.subclass("esri.views.draw.support.GraphicMover")],i.default),i.default});