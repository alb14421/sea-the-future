// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/asyncUtils","../../../core/handleUtils","../../../core/Logger","../../../core/MapUtils","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/SetUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/support/UpdatingHandles","../../../layers/GraphicsLayer","../../../layers/support/layerUtils","../../../symbols/support/symbolUtils","../../3d/layers/graphics/GraphicState"],function(e,i,t,a,r,s,n,o,d,c,p,h,l,u,y,g,_,v,f){"use strict";const w=Symbol();async function m(e,i,t){const n=e.sourceLayer,c=e.getObjectId();if(null==c)return s.getLogger("esri.views.draw.support.ConnectedReshapeManager").error("editing:cannot-hide-graphic","Unable to hide original graphic because it has no objectId."),r.makeHandle();let p=null;function h(e){p?.abort(),p=a.createTask(async i=>{const a=await L(t,n);o.throwIfAborted(i),a&&a.setVisibility?.(c,e)})}return await b(t,i),h(!1),r.handlesGroup([G(t,i,e=>h(!e)),r.makeHandle(async()=>{h(!0);const e=await L(t,n);await d.whenOnce(()=>!e?.updating)})])}function G(e,i,t){if("3d"===e.type){const a=new f.GraphicState({graphic:i});return r.handlesGroup([e.trackGraphicState(a),d.watch(()=>a.displaying,t)])}return d.watch(()=>i.visible,t)}async function b(e,i){if("3d"===e.type){const t=new f.GraphicState({graphic:i}),a=e.trackGraphicState(t);await d.whenOnce(()=>t.displaying||t.error),a.remove()}else await d.whenOnce(()=>i.visible)}async function L(e,i){const t=_.isSubtypeSublayer(i)||_.isKnowledgeGraphSublayer(i)?i.parent:i;return t?e.whenLayerView(t):null}function M(e){return isNaN(e)?0:e}e.ConnectedReshapeManager=class extends t{constructor(e){super(e),this.activeOperationType=null,this.providerFactories=[],this.view=null,this._activeProviders=new Set,this._graphics=new Map,this._modifiedFeatures=new Map,this._modifiedGraphicsLayer=new g({listMode:"hide",internal:!0,title:"Connected Reshape Modified Graphics (Internal)"}),this._pendingGraphicsLayer=new g({listMode:"hide",internal:!0,title:"Connected Reshape Pending Graphics (Internal)"}),this._pendingFeatures=new Map,this._updatingHandles=new y.UpdatingHandles}initialize(){this.view.map.addMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer])}destroy(){this.view.destroyed||this.view.map.removeMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer]),this._modifiedGraphicsLayer.destroy(),this._pendingGraphicsLayer.destroy(),this._updatingHandles.destroy()}get updating(){return this._updatingHandles.updating||Array.from(this._activeProviders).some(e=>e.updating)}startFeatureMove(e){this.activeOperationType=0,this._activeProviders.clear();for(const i of this.providerFactories)c.addMaybe(this._activeProviders,i.getFeatureReshapeProvider(e))}startVertexMove(e,i){this.activeOperationType=1,this._activeProviders.clear();for(const t of this.providerFactories)c.addMaybe(this._activeProviders,t.getVertexReshapeProvider(e,i))}finish(){this.activeOperationType=null,this._activeProviders.clear();for(const[e,i]of this._pendingFeatures){this._pendingFeatures.delete(e),this._modifiedFeatures.set(e,i);const t=this._graphics.get(e);t&&(this._modifiedGraphicsLayer.add(t),this._pendingGraphicsLayer.remove(t))}}translate(e,i,t=0){if(null===this.activeOperationType)return;const a=M(e),r=M(i),s=M(t);for(const e of this._activeProviders){const i=e.translate(a,r,s);this._update(i)}}async _initializeGraphic(e,i){e.symbol??=await this._updatingHandles.addPromise(v.getDisplayedSymbol(e,{scale:this.view.scale,useSourceLayer:!0})),this._pendingFeatures.has(i.uniqueId)?this._pendingGraphicsLayer.add(e):this._modifiedFeatures.has(i.uniqueId)&&this._modifiedGraphicsLayer.add(e),this.addHandles(await m(i.originalGraphic,e,this.view),w)}_update(e){for(const i of e){const e=this._modifiedFeatures.delete(i.uniqueId);this._pendingFeatures.set(i.uniqueId,i);const t=n.getOrCreateMapValue(this._graphics,i.uniqueId,()=>{const e=i.graphic.cloneShallow();return this._initializeGraphic(e,i),e});t.geometry=i.graphic.geometry,e&&(this._modifiedGraphicsLayer.remove(t),this._pendingGraphicsLayer.add(t))}}get test(){return{activeProviders:this._activeProviders,modifiedFeatures:this._modifiedFeatures,modifiedGraphicsLayer:this._modifiedGraphicsLayer,pendingFeatures:this._pendingFeatures,pendingGraphicsLayer:this._pendingGraphicsLayer}}},i.__decorate([p.property()],e.ConnectedReshapeManager.prototype,"activeOperationType",void 0),i.__decorate([p.property()],e.ConnectedReshapeManager.prototype,"providerFactories",void 0),i.__decorate([p.property()],e.ConnectedReshapeManager.prototype,"updating",null),i.__decorate([p.property({constructOnly:!0})],e.ConnectedReshapeManager.prototype,"view",void 0),e.ConnectedReshapeManager=i.__decorate([u.subclass("esri.views.draw.support.ConnectedReshapeManager")],e.ConnectedReshapeManager),e.swapForEditingSession=m,e.watchGraphicVisibility=G,e.whenGraphicDisplayed=b,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});