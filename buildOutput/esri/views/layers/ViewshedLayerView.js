// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.34/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../core/promiseUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass"],function(e,s,t,i,r,a,l){"use strict";return i=>{const r=i;let a=class extends r{constructor(...e){super(...e),this.layer=null}get interactive(){return null!=this.analysisView&&this.analysisView.interactive}set interactive(e){null!=this.analysisView&&(this.analysisView.interactive=e)}get selectedViewshed(){return null!=this.analysisView?this.analysisView.selectedViewshed:null}set selectedViewshed(e){null!=this.analysisView&&(this.analysisView.selectedViewshed=e)}async createViewsheds(e){await(this.analysisView?.createViewsheds(e))}place(e){if(null!=this.analysisView)return this.analysisView.place(e);throw s.createAbortError()}};return e.__decorate([t.property()],a.prototype,"layer",void 0),e.__decorate([t.property()],a.prototype,"interactive",null),e.__decorate([t.property()],a.prototype,"selectedViewshed",null),a=e.__decorate([l.subclass("esri.views.layers.ViewshedLayerView")],a),a}});