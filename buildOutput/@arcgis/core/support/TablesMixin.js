/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import t from"../core/Collection.js";import{r}from"../chunks/collectionUtils.js";import{L as e}from"../chunks/Logger.js";import{property as o}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";import"../chunks/watch.js";import"../chunks/ObjectPool.js";import"../chunks/handleUtils.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/promiseUtils.js";import"../core/Error.js";import"../chunks/object.js";import"../chunks/events.js";import"../chunks/maybe.js";import"../chunks/SetUtils.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/Lifecycle.js";import"../chunks/tracking.js";import"../chunks/SimpleTrackingTarget.js";import"../core/Evented.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/metadata.js";import"../chunks/ObservableBase.js";import"../config.js";import"../chunks/string.js";import"../chunks/ensureType.js";import"../chunks/MapUtils.js";import"../chunks/Warning.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../chunks/jsonUtils.js";const n=new Set(["feature","subtype-group"]);function c(s,t,r){if(s)for(let e=0,o=s.length;e<o;e++){const o=s.at(e);if(o[t]===r)return o;if("group"===o?.type){const s=c(o.tables,t,r);if(s)return s}}}const p=p=>{const a=p;let l=class extends a{constructor(...s){super(...s),this.tables=new t,this.addHandles([this.tables.on("after-add",s=>{const t=s.item;t.parent&&t.parent!==this&&"tables"in t.parent&&t.parent.tables.remove(t),t.parent=this,n.has(t.type)||e.getLogger(this).error(`Layer 'title:${t.title}, id:${t.id}' of type '${t.type}' is not supported as a table and will therefore be ignored.`)}),this.tables.on("after-remove",s=>{s.item.parent=null})])}destroy(){const s=this.tables.toArray();for(const t of s)t.destroy();this.tables.destroy()}set tables(s){this._set("tables",r(s,this._get("tables")))}findTableById(s){return c(this.tables,"id",s)}findTableByUid(s){return c(this.tables,"uid",s)}};return s([o()],l.prototype,"tables",null),l=s([i("esri.support.TablesMixin")],l),l};export{p as TablesMixin,n as allowedTableTypes};
