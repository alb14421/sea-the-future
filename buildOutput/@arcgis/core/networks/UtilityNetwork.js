/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import e from"../Graphic.js";import{g as s}from"../chunks/MapUtils.js";import{watch as r}from"../core/reactiveUtils.js";import{property as o}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"../chunks/Logger.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";import n from"../layers/FeatureLayer.js";import{q as a}from"../chunks/featureQueryAll.js";import p,{g as m,a as l,b as u,c,d}from"./Network.js";import y from"../request.js";import{JSONSupportMixin as j}from"../core/JSONSupport.js";import{Loadable as h}from"../core/Loadable.js";import{sqlIn as k,sqlAnd as f,sqlOr as b}from"../core/sql.js";import{d as g}from"../chunks/guards.js";import I from"./support/NamedTraceConfiguration.js";import{g as T}from"../chunks/networkFieldUtils.js";import S from"./support/NetworkSystemLayers.js";import w from"./support/TerminalConfiguration.js";import C from"./support/TraceJobInfo.js";import{A as L}from"../chunks/typeUtils4.js";import U from"../rest/support/Query.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/Lifecycle.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/promiseUtils.js";import"../core/Error.js";import"../chunks/object.js";import"../config.js";import"../chunks/string.js";import"../chunks/events.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/ensureType.js";import"../chunks/Warning.js";import"../core/Collection.js";import"../core/Evented.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../chunks/jsonUtils.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/reader.js";import"../chunks/writer.js";import"../layers/support/fieldUtils.js";import"../chunks/datetime.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/support/AttachmentsOrderByInfo.js";import"../chunks/jsonMap.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../chunks/enumeration.js";import"../popup/support/FieldInfoFormat.js";import"../chunks/date.js";import"../chunks/locale.js";import"../chunks/constants.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../Color.js";import"../chunks/colorUtils.js";import"../chunks/mathUtils.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../chunks/chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/content/UtilityNetworkAssociationsContent.js";import"../popup/support/UtilityNetworkAssociationType.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../geometry/support/jsonUtils.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"../chunks/unitUtils.js";import"../chunks/pe.js";import"../chunks/assets.js";import"../core/urlUtils.js";import"../kernel.js";import"../chunks/persistableUrlUtils.js";import"../geometry/Point.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/coordsUtils.js";import"../chunks/extentUtils.js";import"../chunks/boundsUtils.js";import"../chunks/aaBoundingRect.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../chunks/createFeatureId.js";import"../chunks/typeUtils2.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../portal/Portal.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../core/Promise.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils3.js";import"../symbols/edges/Edges3D.js";import"../chunks/screenUtils.js";import"../chunks/materialUtils.js";import"../chunks/opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/utils4.js";import"../chunks/colors.js";import"../chunks/symbolLayerUtils3D.js";import"../chunks/vec3f64.js";import"../chunks/aaBoundingBox.js";import"../chunks/DoubleArray.js";import"../symbols/IconSymbol3DLayer.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../chunks/lineMarkers.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/Font.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"../chunks/Thumbnail.js";import"../chunks/calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../chunks/urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/MarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../chunks/MultiOriginJSONSupport.js";import"../chunks/layerContainerType.js";import"../form/FormTemplate.js";import"../form/ExpressionInfo.js";import"../form/elements/GroupElement.js";import"../form/elements/Element.js";import"../chunks/formUtils.js";import"../form/elements/AttachmentElement.js";import"../form/elements/inputs/attachments/AttachmentInput.js";import"../chunks/Input.js";import"../form/elements/inputs/attachments/AudioInput.js";import"../chunks/utils2.js";import"../form/elements/inputs/attachments/DocumentInput.js";import"../form/elements/inputs/attachments/ImageInput.js";import"../form/elements/inputs/attachments/SignatureInput.js";import"../form/elements/inputs/attachments/VideoInput.js";import"../form/elements/FieldElement.js";import"../form/elements/inputs.js";import"../form/elements/inputs/BarcodeScannerInput.js";import"../form/elements/inputs/TextInput.js";import"../form/elements/inputs/Input.js";import"../form/elements/inputs/ComboBoxInput.js";import"../form/elements/inputs/DatePickerInput.js";import"../form/elements/inputs/DateTimeOffsetPickerInput.js";import"../form/elements/inputs/DateTimePickerInput.js";import"../form/elements/inputs/RadioButtonsInput.js";import"../form/elements/inputs/SwitchInput.js";import"../form/elements/inputs/TextAreaInput.js";import"../form/elements/inputs/TextBoxInput.js";import"../form/elements/inputs/TimePickerInput.js";import"../chunks/domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"../form/elements/RelationshipElement.js";import"../form/elements/TextElement.js";import"../form/elements/UtilityNetworkAssociationsElement.js";import"../graphic/FeatureGraphicOrigin.js";import"../graphic/GraphicOrigin.js";import"../chunks/isFeatureGraphicOrigin.js";import"../layers/Layer.js";import"../time/TimeExtent.js";import"../chunks/timeUtils.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"../chunks/Queue.js";import"../core/workers/RemoteClient.js";import"../intl.js";import"../chunks/number.js";import"../chunks/substitute.js";import"../chunks/messages.js";import"../chunks/editsZScale.js";import"../chunks/queryZScale.js";import"../chunks/zscale.js";import"../rest/support/FeatureSet.js";import"../layers/support/Field.js";import"../chunks/fieldType.js";import"../layers/mixins/APIKeyMixin.js";import"../chunks/ArcGISService.js";import"../layers/mixins/BlendLayer.js";import"../chunks/jsonUtils2.js";import"../chunks/parser.js";import"../chunks/utils5.js";import"../chunks/mat4.js";import"../chunks/common.js";import"../layers/mixins/CustomParametersMixin.js";import"../layers/mixins/DisplayFilteredLayer.js";import"../layers/support/DisplayFilterInfo.js";import"../chunks/scaleUtils.js";import"../layers/support/DisplayFilter.js";import"../chunks/uuid.js";import"../chunks/displayFilterUtils.js";import"../chunks/EditBusLayer.js";import"../layers/mixins/FeatureEffectLayer.js";import"../layers/support/FeatureEffect.js";import"../layers/support/FeatureFilter.js";import"../chunks/DataLayerSource.js";import"../chunks/FullTextSearch.js";import"../chunks/spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"../layers/mixins/FeatureLayerBase.js";import"../geometry/HeightModelInfo.js";import"../chunks/commonProperties.js";import"../symbols/support/ElevationInfo.js";import"../symbols/support/FeatureExpressionInfo.js";import"../chunks/unitConversionUtils.js";import"../chunks/lengthUtils.js";import"../tables/AttributeTableTemplate.js";import"../tables/elements/AttributeTableGroupElement.js";import"../tables/elements/AttributeTableAttachmentElement.js";import"../tables/elements/AttributeTableElement.js";import"../tables/elements/AttributeTableFieldElement.js";import"../tables/elements/AttributeTableRelationshipElement.js";import"../chunks/timeZoneUtils.js";import"../chunks/featureLayerUtils.js";import"../chunks/asyncUtils.js";import"../chunks/layerUtils.js";import"../layers/catalog/catalogUtils.js";import"../renderers/SimpleRenderer.js";import"../renderers/Renderer.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"../chunks/colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../renderers/mixins/VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"../chunks/visualVariableUtils.js";import"../chunks/commonProperties2.js";import"../symbols/support/jsonUtils.js";import"../chunks/defaults.js";import"../chunks/defaultsJSON.js";import"../renderers/UniqueValueRenderer.js";import"../chunks/diffUtils.js";import"../chunks/RendererLegendOptions.js";import"../renderers/support/UniqueValue.js";import"../renderers/support/UniqueValueClass.js";import"../renderers/support/UniqueValueGroup.js";import"../renderers/support/UniqueValueInfo.js";import"../chunks/styleUtils.js";import"../rest/support/AttachmentQuery.js";import"../rest/support/NormalizationBinParametersMixin.js";import"../rest/support/RelationshipQuery.js";import"../layers/support/GeometryFieldsInfo.js";import"../layers/support/LayerFloorInfo.js";import"../chunks/multiLayerServiceUtils.js";import"../layers/support/Relationship.js";import"../chunks/serviceCapabilitiesUtils.js";import"../chunks/infoFor3D.js";import"../layers/support/Subtype.js";import"../chunks/portalItemUtils.js";import"../chunks/projectionUtils.js";import"../chunks/projectBuffer.js";import"../chunks/geodesicConstants.js";import"../chunks/projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"../layers/mixins/FeatureReductionLayer.js";import"../layers/support/AggregateField.js";import"../layers/support/ExpressionInfo.js";import"../chunks/FeatureReduction.js";import"../layers/support/FeatureReductionBinning.js";import"../layers/support/LabelClass.js";import"../chunks/labelUtils.js";import"../renderers/support/jsonUtils.js";import"../chunks/typeUtils3.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/support/ClassBreakInfo.js";import"../renderers/DictionaryRenderer.js";import"../chunks/LRUCache.js";import"../chunks/MemCache.js";import"../chunks/DictionaryScriptEvaluator.js";import"../chunks/Version.js";import"../layers/support/FieldsIndex.js";import"../chunks/UnknownTimeZone.js";import"../chunks/ArcadeExpression.js";import"../chunks/TimeOnly.js";import"../chunks/enum.js";import"../chunks/utils6.js";import"../chunks/defaultCIMValues.js";import"../renderers/DotDensityRenderer.js";import"../renderers/support/AttributeColorInfo.js";import"../renderers/HeatmapRenderer.js";import"../renderers/support/HeatmapColorStop.js";import"../chunks/heatmapUtils.js";import"../chunks/vec4.js";import"../chunks/vec4f64.js";import"../renderers/PieChartRenderer.js";import"../layers/support/FeatureReductionCluster.js";import"../layers/support/FeatureReductionSelection.js";import"../chunks/clusterUtils.js";import"../chunks/MD5.js";import"../layers/mixins/OperationalLayer.js";import"../layers/mixins/OrderedLayer.js";import"../layers/support/OrderByInfo.js";import"../layers/mixins/PortalLayer.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../layers/mixins/PublishableLayer.js";import"../layers/support/PublishingInfo.js";import"../layers/mixins/RefreshableLayer.js";import"../layers/mixins/ScaleRangeLayer.js";import"../layers/mixins/TemporalLayer.js";import"../layers/support/TimeInfo.js";import"../time/TimeInterval.js";import"../layers/mixins/TrackableLayer.js";import"../layers/support/TrackInfo.js";import"../layers/support/TrackPartInfo.js";import"../layers/support/FeatureTemplate.js";import"../layers/support/FeatureType.js";import"../chunks/fieldProperties.js";import"../chunks/labelingInfo.js";import"../chunks/TitleCreator.js";import"../chunks/versionUtils.js";import"../chunks/styleUtils2.js";import"../support/popupUtils.js";import"./support/TopologyValidationJobInfo.js";import"../rest/networks/support/ValidateNetworkTopologyResult.js";import"./support/TraceConfiguration.js";import"./support/UNTraceConfiguration.js";import"./support/Terminal.js";import"../rest/networks/support/TraceResult.js";import"../rest/networks/support/AggregatedGeometry.js";import"../chunks/TelecomNetworkElement.js";import"../rest/networks/support/NetworkElement.js";import"../rest/networks/support/TraceLocation.js";import"../rest/networks/support/FunctionResult.js";let A=class extends(j(h)){constructor(t){super(t),this.rulesCategorized={attachment:[],containment:[],connectivity:[]},this.request=y}initialize(){}async load(t){const e=this.rulesLayer.load(t).then(()=>this._initializeRulesTable());return this.addResolvingPromise(e),this}getFeaturesCanAssociateWithClause(t,e,s){const r=new Map,[o,i]=m(t.sourceLayer);if(!o||!i)return"";const n=l(t),a=l(e);s.forEach(t=>{const{type:e,direction:s}=t;this._getRulesForAssociationType(e).forEach(t=>{u(t,n,s).filter(t=>t.networkSource?.layerId===a.layerId).forEach(t=>{const e=t.assetGroup?.assetGroupCode,s=t.assetType?.assetTypeCode;if(null!=e&&null!=s){const t=r.get(e)??new Set;t.add(s),r.set(e,t)}})})});let p=[];return this._mergeAssetCodes(r).forEach((t,e)=>{const s=`${o} IN (${e})`,r=k(i,[...t]);s&&r&&p.push(f(s,r))}),p.length>1&&(p=p.map(t=>`(${t})`)),p.join(" OR ")}getFeaturesCanAssociateWith(t,e,s){return null==c(t)?[]:e.filter(e=>this.canAssociateFeatures(t,e,s))}canAssociateFeatures(t,e,s){if(!this._canSupportAssociations([t,e]))return!1;const r=l(t),o=l(e);return s.some(t=>{const{type:e,direction:s}=t;return this._getRulesForAssociationType(e).some(t=>"to"===s?d(t,o,r):d(t,r,o))})}getLayersCanAssociateWith(t,e,s){return null==c(t)?[]:e.filter(e=>this.canAssociateFeatureToLayer(t,e,s))}canAssociateFeatureToLayer(t,e,s){if(!this._canSupportAssociations([t,e]))return!1;const r=l(t),o=l(e);return s.some(t=>{const{type:e,direction:s}=t;return this._getRulesForAssociationType(e).some(t=>"to"===s?d(t,o,r):d(t,r,o))})}getFeatureSQL(t,e){const s=t.layerId.toString(),r=t.fieldsIndex?.normalizeFieldName("assetGroup"),o=t.fieldsIndex?.normalizeFieldName("assetType"),i=r?e.attributes[r]:null,n=o?e.attributes[o]:null,a=this.rulesHash[s];if(a){const t=a.assetGroupHash[i];if(t)return t.assetTypeHash[n]||null}return null}_initializeRulesTable(){const t={},e=[{networkSourceId:"fromNetworkSource",assetGroupId:"fromAssetGroup",assetTypeId:"fromAssetType"},{networkSourceId:"toNetworkSource",assetGroupId:"toAssetGroup",assetTypeId:"toAssetType"},{networkSourceId:"viaNetworkSource",assetGroupId:"viaAssetGroup",assetTypeId:"viaAssetType"}];this.rulesCategorized={attachment:[],containment:[],connectivity:[]};for(const s of this.rules){if(3===s.ruleType){this.rulesCategorized.attachment.push(s);continue}if(2===s.ruleType){this.rulesCategorized.containment.push(s);continue}if(1===s.ruleType){this.rulesCategorized.connectivity.push(s);continue}this.rulesCategorized.connectivity.push(s);let r=[[0,1],[1,0]];5===s.ruleType&&(r=[[0,2],[2,0],[1,2],[2,1]]);for(const o of r){const r=o.shift(),i=o.shift();let n=!1;switch(s.ruleType){case 5:n=0===r||1===r;break;case 4:n=1===r}const a=e[r],p=s[a.networkSourceId]?.layerId.toString()??"",m=s[a.assetGroupId]?.assetGroupCode?.toString(),l=s[a.assetTypeId],u=l?.assetTypeCode?.toString(),c=e[i],d=s[c.networkSourceId]?.layerId.toString()??"",y=s[c.assetGroupId]?.assetGroupCode?.toString(),j=s[c.assetTypeId],h=j?.assetTypeCode?.toString(),k=t[p]??{assetGroupHash:{}};if(!(m&&u&&y&&h))continue;const g=k.assetGroupHash[m]??{assetTypeHash:{}},I=g.assetTypeHash[u]??{};if(I[d]=I[d]??{},n){I[p]=I[p]??{};const t=f(`assetgroup = ${m}`,`assettype = ${u}`);"esriNECPEndVertex"===j?.connectivityPolicy?I[p].endVertex=I[p]?.endVertex?`${I[p].endVertex}`:`(${t})`:I[p].anyVertex=I[p].anyVertex?`${I[p].anyVertex}`:`(${t})`}const T=f(`assetgroup = ${y}`,`assettype = ${h}`);"esriNECPEndVertex"===j?.connectivityPolicy?I[d].endVertex=I[d]?.endVertex?b(I[d].endVertex,T):`(${T})`:I[d].anyVertex=I[d]?.anyVertex?b(I[d].anyVertex,T):`(${T})`,g.assetTypeHash[u]=I,k.assetGroupHash[m]=g,t[p]=k}}this._set("rulesHash",t)}_getRulesForAssociationType(t){const{rulesCategorized:e}=this;switch(t){case"attachment":return e.attachment;case"containment":return e.containment;case"connectivity":case"junction-junction-connectivity":return e.connectivity.filter(t=>1===t.ruleType);case"junction-edge-from-connectivity":case"junction-edge-midspan-connectivity":case"junction-edge-to-connectivity":return e.connectivity.filter(t=>4===t.ruleType||5===t.ruleType);default:return[]}}_areSetsEqual(t,e){if(t.size!==e.size)return!1;for(const s of t)if(!e.has(s))return!1;return!0}_mergeAssetCodes(t){const e=new Map,s=new Set;for(const[r,o]of t){const i=new Set([r]);for(const[e,n]of t)r!==e&&!s.has(e)&&this._areSetsEqual(o,n)&&(i.add(e),s.add(e));const n=Array.from(i).sort().join(",");e.set(n,o)}return e}_canSupportAssociations(t){return t.every(t=>{const e=g(t)?t.sourceLayer:t,[s,r]=m(e);return null!=s&&null!=r})}};t([o({constructOnly:!0})],A.prototype,"rulesLayer",void 0),t([o({constructOnly:!0})],A.prototype,"rules",void 0),t([o({readOnly:!0})],A.prototype,"rulesHash",void 0),t([o()],A.prototype,"rulesCategorized",void 0),t([o({constructOnly:!0})],A.prototype,"request",void 0),A=t([i("esri.networks.RulesTable")],A);let N=class extends p{constructor(t){super(t),this.sharedNamedTraceConfigurations=[],this.type="utility",this._circuitManagerMap=new Map,this._terminalById=new Map,this._unitIdentifierManager=null}initialize(){this.addHandles(r(()=>[this.gdbVersion,this.historicMoment],()=>{this.networkSystemLayers.associationsTable&&(this.networkSystemLayers.associationsTable.gdbVersion!==this.gdbVersion&&(this.networkSystemLayers.associationsTable.gdbVersion=this.gdbVersion),this.networkSystemLayers.associationsTable.historicMoment!==this.historicMoment&&(this.networkSystemLayers.associationsTable.historicMoment=this.historicMoment))}))}get _rulesLayer(){const{gdbVersion:t,historicMoment:e}=this,s=this.networkSystemLayers.rulesTableUrl;return new n({url:s,gdbVersion:t,historicMoment:e})}get _utilityLayerList(){const t=new Set;return this.dataElement?.domainNetworks?.map(e=>{e?.edgeSources?.map(({layerId:e,sourceId:s})=>{this._layerIdBySourceId.set(s,e),this._sourceIdByLayerId.set(e,s),t.add(e)}),e?.junctionSources?.map(({layerId:e,sourceId:s})=>{this._layerIdBySourceId.set(s,e),this._sourceIdByLayerId.set(e,s),t.add(e)})}),t}get serviceTerritoryFeatureLayerId(){return this.dataElement?.serviceTerritoryFeatureLayerId??null}get networkSystemLayers(){return new S({rulesTableId:this.sourceJSON?.systemLayers.rulesTableId,rulesTableUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.rulesTableId}`:null,subnetworksTableId:this.sourceJSON?.systemLayers.subnetworksTableId,subnetworksTableUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.subnetworksTableId}`:null,dirtyAreasLayerId:this.sourceJSON?.systemLayers.dirtyAreasLayerId,dirtyAreasLayerUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.dirtyAreasLayerId}`:null,associationsTableId:this.sourceJSON?.systemLayers.associationsTableId,associationsTableUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.associationsTableId}`:null})}get terminalConfigurations(){return this.dataElement?.terminalConfigurations.map(t=>w.fromJSON(t))||[]}get domainNetworkNames(){return this.dataElement?.domainNetworks.map(t=>t.domainNetworkName)||[]}get hasTelecomNetwork(){return this.dataElement?.domainNetworks.some(t=>t.isTelecomNetwork)??!1}get associationsTable(){return this.networkSystemLayers.associationsTable}async load(t){return this.addResolvingPromise(this._load(t)),this}async _load(t){await super._load(t),await Promise.all([this._loadNamedTraceConfigurationsFromNetwork(t),this.networkSystemLayers.loadAssociationsTable(t)])}getTerminalConfiguration(t){let e=null,s=null;const r=t.sourceLayer;let o=null;if("feature"===r?.type){if(o=r.layerId,null===o)return null}else{if("subtype-sublayer"!==r?.type)return null;if(o=r?.parent?.layerId??null,null===o)return null}const i=t.attributes;if(null==i)return null;for(const r of Object.keys(i))"ASSETGROUP"===r.toUpperCase()&&(e=t.getAttribute(r)),"ASSETTYPE"===r.toUpperCase()&&(s=t.getAttribute(r));if(!this.dataElement)return null;let n=null;const a=this.dataElement.domainNetworks;for(const t of a){const r=t.junctionSources?.find(t=>t.layerId===o);if(r){const t=r.assetGroups?.find(t=>t.assetGroupCode===e);if(t){const e=t.assetTypes?.find(t=>t.assetTypeCode===s);if(e?.isTerminalConfigurationSupported){n=e.terminalConfigurationId;break}}}}if(null!=n){const t=this.dataElement.terminalConfigurations,e=t?.find(t=>t.terminalConfigurationId===n);return e?w.fromJSON(e):null}return null}getTierNames(t){const e=this.dataElement?.domainNetworks.find(e=>e.domainNetworkName===t);return e?.tiers?.map(t=>t.name)||[]}async getRulesTable(){const t=this._rulesLayer;t.loaded||await t.load();const e=this.dataElement?.domainNetworks;if(!e)return null;const s=e.flatMap(t=>[...t.edgeSources||[],...t.junctionSources||[]]),r=(await this._queryRulesTable(t)).map(e=>this._hydrateRuleInfo(t,s,e));return new A({rulesLayer:t,rules:r})}async getCircuitManager(t){if(!this.hasTelecomNetwork)return null;const e=this.dataElement?.domainNetworks.find(e=>e.domainNetworkName===t&&e.isTelecomNetwork);if(!e)return null;const{default:r}=await import("../chunks/CircuitManager.js");return s(this._circuitManagerMap,t,()=>new r({utilityNetwork:this,telecomDomainNetwork:e}))}async getUnitIdentifierManager(){if(!this.hasTelecomNetwork)return null;if(this._unitIdentifierManager)return this._unitIdentifierManager;const{default:t}=await import("../chunks/UnitIdentifierManager.js");return this._unitIdentifierManager=new t({utilityNetwork:this}),this._unitIdentifierManager}getTerminalById(t){if(!this.dataElement||null==t)return null;const e=this._terminalById.get(t);return null!=e?e:(this.terminalConfigurations.forEach(t=>{t.terminals.forEach(t=>{this._terminalById.set(t.id,t)})}),this._terminalById.get(t))}isUtilityLayer(t){return"layerId"in t?null!=t.layerId&&this._utilityLayerList.has(t.layerId)&&(t.url?.startsWith(this.featureServiceUrl)??!1):!("subtype-sublayer"!==t.type||!t.parent)&&this._utilityLayerList.has(t.parent.layerId)&&(t.parent.url?.startsWith(this.featureServiceUrl)??!1)}async queryAssociations(t,e){const[{queryAssociations:s},{default:r}]=await Promise.all([import("../rest/networks/queryAssociations.js"),import("../rest/networks/support/QueryAssociationsParameters.js")]),o=r.from(t);return o.gdbVersion=this.gdbVersion,o.moment=this.historicMoment,(await s(this.networkServiceUrl,o,e)).associations}async synthesizeAssociationGeometries(t){const[{synthesizeAssociationGeometries:e},{default:s}]=await Promise.all([import("../rest/networks/synthesizeAssociationGeometries.js"),import("../rest/networks/support/SynthesizeAssociationGeometriesParameters.js")]),r=s.from(t);return r.gdbVersion=this.gdbVersion,r.moment=this.historicMoment,e(this.networkServiceUrl,r)}async trace(t){const[{trace:e},{default:s}]=await Promise.all([import("../rest/networks/trace.js"),import("../rest/networks/support/TraceParameters.js")]),r=s.from(t);return r.gdbVersion=this.gdbVersion,r.moment=this.historicMoment,e(this.networkServiceUrl,r)}async submitTraceJob(t){const[{submitTraceJob:e},{default:s}]=await Promise.all([import("../rest/networks/trace.js"),import("../rest/networks/support/TraceParameters.js")]),r=s.from(t);r.gdbVersion=this.gdbVersion,r.moment=this.historicMoment;const o=await e(this.networkServiceUrl,r);return new C({statusUrl:o})}async canAddAssociation(t){const e=await this.getRulesTable();if(!e)return!1;const{fromNetworkElement:s,toNetworkElement:r}=t;if(!s||!r)return!1;await e.load();let o=null;switch(t.associationType){case"containment":o=e.rulesCategorized.containment;break;case"attachment":o=e.rulesCategorized.attachment;break;default:o=e.rulesCategorized.connectivity}return o.some(t=>d(t,s,r))}generateAddAssociations(t){const{associationsTable:s}=this.networkSystemLayers,{fromNetworkSourceId:r,fromGlobalId:o,fromTerminalId:i,toNetworkSourceId:n,toGlobalId:a,toTerminalId:p,associationType:m,isContentVisible:l,percentAlong:u,globalId:c}=T(s);return{addFeatures:t.map(t=>new e({attributes:{[r]:t.fromNetworkElement?.networkSourceId,[o]:t.fromNetworkElement?.globalId,[i]:t.fromNetworkElement?.terminalId,[n]:t.toNetworkElement?.networkSourceId,[a]:t.toNetworkElement?.globalId,[p]:t.toNetworkElement?.terminalId,[m]:L[t.associationType],[l]:null==t.isContentVisible?void 0:t.isContentVisible?1:0,[u]:t.percentAlong,[c]:t.globalId}})),id:this.networkSystemLayers.associationsTableId,identifierFields:{globalIdField:s?.globalIdField??"globalid",objectIdField:s?.objectIdField??"objectid"}}}generateDeleteAssociations(t){const{associationsTable:e,associationsTableId:s}=this.networkSystemLayers;return{deleteFeatures:t.map(t=>({globalId:t.globalId})),id:s,identifierFields:{globalIdField:e?.globalIdField??"globalid",objectIdField:e?.objectIdField??"objectid"}}}async loadAssociationsTable(){return this.networkSystemLayers.loadAssociationsTable()}async _loadNamedTraceConfigurationsFromNetwork(t){if(0===this.sharedNamedTraceConfigurations?.length)return;const e=this.sharedNamedTraceConfigurations.map(t=>t.globalId),s=await this.queryNamedTraceConfigurations({globalIds:e},t);for(const t of this.sharedNamedTraceConfigurations){const e=s?.find(e=>e.globalId===t.globalId);if(e){const s=e.write({},{origin:"service"});t.read(s,{origin:"service"})}}}_hydrateRuleInfo(t,e,s){const r=t.fieldsIndex,o=r.get("RULETYPE"),i=r.get("CREATIONDATE"),n=r.get("FROMNETWORKSOURCEID"),a=r.get("FROMASSETGROUP"),p=r.get("FROMASSETTYPE"),m=r.get("FROMTERMINALID"),l=r.get("TONETWORKSOURCEID"),u=r.get("TOASSETGROUP"),c=r.get("TOASSETTYPE"),d=r.get("TOTERMINALID"),y=r.get("VIANETWORKSOURCEID"),j=r.get("VIAASSETGROUP"),h=r.get("VIAASSETTYPE"),k=r.get("VIATERMINALID"),f=s.attributes[o.name],b=new Date(s.attributes[i.name]),g=[{networkSourceId:s.attributes[n.name],assetGroupId:s.attributes[a.name],assetTypeId:s.attributes[p.name],terminalId:s.attributes[m.name]},{networkSourceId:s.attributes[l.name],assetGroupId:s.attributes[u.name],assetTypeId:s.attributes[c.name],terminalId:s.attributes[d.name]},{networkSourceId:s.attributes[y.name],assetGroupId:s.attributes[j.name],assetTypeId:s.attributes[h.name],terminalId:s.attributes[k.name]}],I={ruleType:f,creationDate:b};for(const t of[0,1,2]){if(5!==f&&2===t)continue;const s=g[t],r=e.find(t=>t.sourceId===s.networkSourceId),o=r?.assetGroups.find(t=>t.assetGroupCode===s.assetGroupId),i=o?.assetTypes.find(t=>t.assetTypeCode===s.assetTypeId),n=this._getTerminal(i,s);let a="";switch(t){case 0:a="from";break;case 1:a="to";break;case 2:a="via"}I[`${a}NetworkSource`]=r,I[`${a}AssetGroup`]=o,I[`${a}AssetType`]=i,I[`${a}Terminal`]=n?.toJSON()}return I}_getTerminal(t,e){const s=t?.terminalConfigurationId,r=this.terminalConfigurations?.find(t=>t.id===s);return r?.terminals?.find(t=>t.id===e.terminalId)??null}async _queryRulesTable(t){const{gdbVersion:e,historicMoment:s}=this,r=new U({where:"1=1",outFields:["*"],gdbVersion:e,historicMoment:s});return(await a(t,r)).features}};t([o({readOnly:!0})],N.prototype,"_rulesLayer",null),t([o({type:[I],json:{origins:{"web-map":{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}},service:{read:{source:"traceConfigurations"}}},read:!1}})],N.prototype,"sharedNamedTraceConfigurations",void 0),t([o({type:["utility"],readOnly:!0,json:{read:!1,write:!1}})],N.prototype,"type",void 0),t([o({readOnly:!0})],N.prototype,"serviceTerritoryFeatureLayerId",null),t([o({readOnly:!0})],N.prototype,"networkSystemLayers",null),t([o({readOnly:!0})],N.prototype,"terminalConfigurations",null),t([o({readOnly:!0})],N.prototype,"domainNetworkNames",null),t([o({readOnly:!0})],N.prototype,"hasTelecomNetwork",null),t([o({readOnly:!0,json:{read:!1}})],N.prototype,"associationsTable",null),N=t([i("esri.networks.UtilityNetwork")],N);const E=N;export{E as default};
