/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{a as e,b as t}from"./tslib.es6.js";import{t as r}from"../core/lang.js";import s from"../core/Error.js";import{b as o}from"./maybe.js";import{QueueProcessor as i}from"./QueueProcessor.js";import a from"../geometry/SpatialReference.js";import{s as n,c as m,q as u,b as p,n as l,g as c}from"./aaBoundingBox.js";import{b as d,Q as f,a as j}from"./QueryEngine.js";import h from"../layers/support/FieldsIndex.js";import{collectSQLFieldNames as y}from"../layers/support/fieldUtils.js";import{c as g,r as _}from"./parquet.js";import{F as x,a as w}from"./FeatureMetadata.js";import{F as b,a as F,b as C}from"./SourceChunkStore.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"../core/promiseUtils.js";import"./handleUtils.js";import"./events.js";import"./Queue.js";import"./tracking.js";import"./utils.js";import"./SimpleObservable.js";import"./ObservableBase.js";import"./ReactiveMap.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./signal.js";import"../core/Accessor.js";import"../core/Handles.js";import"../core/accessorSupport/decorators/subclass.js";import"./Lifecycle.js";import"./metadata.js";import"./ensureType.js";import"./MapUtils.js";import"./Warning.js";import"./get.js";import"./ObjectPool.js";import"../core/accessorSupport/decorators/property.js";import"./watch.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"../core/JSONSupport.js";import"./unitUtils.js";import"./jsonMap.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./jsonUtils.js";import"./persistableUrlUtils.js";import"./writer.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"./reader.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./DoubleArray.js";import"./projectionUtils.js";import"./vec3f64.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./extentUtils.js";import"./boundsUtils.js";import"../geometry/Polyline.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"./projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../geometry/support/jsonUtils.js";import"./featureConversionUtils.js";import"./OptimizedFeature.js";import"./memoryEstimations.js";import"./OptimizedGeometry.js";import"./OptimizedFeatureSet.js";import"./createFeatureId.js";import"./WhereClauseCache.js";import"./LRUCache.js";import"./MemCache.js";import"../core/sql/WhereClause.js";import"./TimeOnly.js";import"./enum.js";import"./UnknownTimeZone.js";import"./datetime.js";import"./locale.js";import"./guards.js";import"./fieldType.js";import"./timeSupport.js";import"./projectionSupport.js";import"./json.js";import"./QueryEngineCapabilities.js";import"./quantizationUtils.js";import"./utils14.js";import"./screenUtils.js";import"./timeUtils.js";import"./date.js";import"./constants.js";import"./heatmapUtils.js";import"./vec4.js";import"./common.js";import"./vec4f64.js";import"./utils7.js";import"./basemapUtils.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./utils5.js";import"./colorUtils.js";import"./mat4.js";import"./basemapDefinitions.js";import"./messages.js";import"./timeZoneUtils.js";import"./utils13.js";import"./generateRendererUtils.js";import"./enumeration.js";import"./queryUtils.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"./utils9.js";import"./utils10.js";import"./SnappingCandidate.js";import"../rest/support/AutoIntervalBinParameters.js";import"../rest/support/BinParametersBase.js";import"../core/Clonable.js";import"../rest/support/AttributeBinsGrouping.js";import"../rest/support/NormalizationBinParametersMixin.js";import"../rest/support/DateBinParameters.js";import"../rest/support/DateBinTimeInterval.js";import"../rest/support/FixedBoundariesBinParameters.js";import"../rest/support/FixedIntervalBinParameters.js";import"./Scheduler.js";import"../core/reactiveUtils.js";import"./debugFlags.js";import"../core/sql.js";import"./labelPoint.js";import"./rbush.js";import"./quickselect.js";import"./definitions.js";import"./arcadeUtils.js";const I=new w,R=8e3;class U{constructor(){this._files=[],this._queue=new i({concurrency:1,process:(e,t)=>this._executeQuery(e,t)})}async load(r){this.setCustomParameters(r.customParameters),this._files=await Promise.all(r.urls.map(e=>g(e,{geometryInfo:r.geometryInfo,outSpatialReference:null,getCustomParameters:()=>this._customParameters}))),this._metadata=x.createFeature(r.metadata),this._queryEngineParams={fieldsIndex:this._metadata.fieldsIndex,geometryType:r.geometryInfo?.geometryType??"esriGeometryPoint",featureIdInfo:{type:"object-id",fieldName:"rowId"},hasM:!1,hasZ:!1,spatialReference:a.fromJSON(r.geometryInfo?.spatialReference),aggregateAdapter:null,timeInfo:null,definitionExpression:null};const s=this._files[0];if(!s)return{extent:null};const{fields:o,timeZoneByFieldName:i}=r.metadata.fieldsIndex,c=o.map(e=>({...e,column:s.columnForFieldName(e.name)})),d=h.fromJSON({fields:c,timeZoneByFieldName:i});if(this._fieldsIndex=d,r.metadata.spatialReference&&(this._fullExtent=function(e,t){const r=n(m(),l);for(const t of e){const e=_(t);if(!e)return null;const s=e.columns[e.primary_column];if(!s.bbox)return null;const o=O(s.bbox);p(r,o)}return{xmin:r[0],ymin:r[1],xmax:r[3],ymax:r[4],spatialReference:t}}(this._files,r.metadata.spatialReference)),null==this._fullExtent&&"location"===r.geometryInfo?.encoding.type){const{latitudeFieldName:s,longitudeFieldName:o}=r.geometryInfo.encoding,i=this._fieldsIndex.get(s)?.column,a=this._fieldsIndex.get(o)?.column,p=n(m(),l);for(const r of this._files)for(const s of r.rowGroups()){const r={stack:[],error:void 0,hasError:!1};try{const t=e(r,s.columnDescriptorForAttribute(i),!1),o=e(r,s.columnDescriptorForAttribute(a),!1),n=[o.minValue(),t.minValue(),o.maxValue(),t.maxValue()];u(p,n),s.free()}catch(e){r.error=e,r.hasError=!0}finally{t(r)}}this._fullExtent={xmin:p[0],ymin:p[1],xmax:p[3],ymax:p[4],spatialReference:r.metadata.spatialReference}}return{extent:this._fullExtent}}destroy(){for(const e of this._files)e.free();this._queue.destroy()}setCustomParameters(e){this._customParameters=e}async queryFeatures(e,t){return this._validateQuery(e),e.resultRecordCount=e.resultRecordCount?Math.min(e.resultRecordCount,8e3):8e3,e.resultOffset=e.resultOffset??0,(await this._enqueueQuery(e,t)).createQueryResponse()}async queryFeatureCount(e,t){return this._validateQuery(e),q(e)?(e.resultRecordCount=e.resultRecordCount??this._getFeatureCount(),e.resultOffset=e.resultOffset??0,delete e.outFields,delete e.returnGeometry,(await this._enqueueQuery(e,t)).createQueryResponseForCount()):this._getFeatureCount()}async queryObjectIds(e,t){return this._validateQuery(e),q(e)?(e.resultRecordCount=e.resultRecordCount?Math.min(e.resultRecordCount,8e3):8e3,e.resultOffset=e.resultOffset??0,delete e.returnGeometry,delete e.outFields,(await this._enqueueQuery(e,t)).items.map(e=>e.getObjectId())):Array.from({length:this._getFeatureCount()},(e,t)=>t)}async queryExtent(e,t){if(this._validateQuery(e),this._fullExtent&&!q(e))return{count:this._getFeatureCount(),extent:this._fullExtent};const s=r(this._metadata.spatialReference);e.resultOffset=e.resultOffset??0,e.resultRecordCount=e.resultRecordCount??this._getFeatureCount(),e.returnGeometry=!0,delete e.outFields;const o=n(m(),l),i=m(),a=await this._enqueueQuery(e,t);let u=0;for(const e of a.items)e.getBounds(i)&&(p(o,i),u+=1);return{count:u,extent:d(o,s,e.outSR?r(e.outSR):s,s,!1)}}_getFeatureCount(){return this._files.reduce((e,t)=>e+t.numRows(),0)}_validateQuery(e){if(e.outStatistics)throw new s("parquet:unsupported","Statistics queries are not supported",{query:e});if(e.orderByFields?.length)throw new s("parquet:unsupported","Queries using orderBy are not supported",{query:e})}async*_fetchChunks(e,t){const r=this._files[0].numRows(),s=Math.ceil(r/R);for(let r=0;r<s;r++){const s=r*R,o=await this._files[0].readChunk(s,R,e.fields,e.returnGeometry,t);for(const e of o){const t=new b(this._metadata,this._fieldsIndex,e,0),r=new F(t,null,0,!1),s=S(this._metadata,r,this._queryEngineParams);yield s}}}_enqueueQuery(e,t){return this._queue.push(e,t)}async _executeQuery(e,t){let r=e.resultRecordCount,s=e.resultOffset;o(r),o(s),delete e.resultRecordCount,delete e.resultOffset;const i=await this._getReadParams(e),a=[];for await(const o of this._fetchChunks(i,t)){const i=await o.executeQueryForOpaqueFeatures(e,t);if(i.length>s){const t=i.slice(s,Math.min(r,i.length));for(const e of t)a.push(e);if(s=0,r-=t.length,0===r)return new f(a,e,{fieldsIndex:this._fieldsIndex,geometryType:this._metadata.geometryType,spatialReference:this._metadata.spatialReference,objectIdField:"rowId",hasM:!1,hasZ:!1,featureAdapter:I})}else s-=i.length}return new f(a,e,{fieldsIndex:this._fieldsIndex,geometryType:this._metadata.geometryType,spatialReference:this._metadata.spatialReference,objectIdField:"rowId",hasM:!1,hasZ:!1,featureAdapter:I})}async _getReadParams(e){const t=new Set;if(e.where&&await y(t,this._fieldsIndex,e.where),e.outStatistics)for(const r of e.outStatistics)null!=r.onStatisticField&&t.add(r.onStatisticField);if(e.outFields)for(const r of e.outFields)t.add(r);return{fields:this._getAttributeIds(Array.from(t)),returnGeometry:!!e.returnGeometry||!!e.geometry}}_getAttributeIds(e){if(null==e)return new Uint32Array;if(e.includes("*"))return new Uint32Array(this._fieldsIndex.fields.map(e=>e.column).filter(e=>null!=e));const t=[];for(const r of e){const e=this._fieldsIndex.get(r);if(null==e)throw new s("unknown-field",`Field ${r} does not exist`);null==e.column||t.push(e.column)}return new Uint32Array(t)}}function q(e){return Object.keys(e).some(e=>function(e){switch(e){case"resultOffset":case"resultRecordCount":case"aggregateIds":case"distance":case"gdbVersion":case"geometry":case"having":case"timeExtent":case"where":case"objectIds":case"historicMoment":return!0;default:return!1}}(e))}function S(e,t,r){const s=new C(e);return s.insert(t),new j({...r,featureStore:s})}function O(e){switch(e.length){case 4:return c(m(),e);case 6:return e;default:throw new s("parquet:protocol-violation","Invalid Geoparquet file. BoundingBox size must be 4 or 6.",{bbox:e})}}export{U as default};
