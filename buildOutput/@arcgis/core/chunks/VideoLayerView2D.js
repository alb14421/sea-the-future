/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import e from"../Color.js";import s from"../Graphic.js";import{f as i,d as r}from"./maybe.js";import{when as o,initial as m,watch as l}from"../core/reactiveUtils.js";import{property as p}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./Logger.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import n from"../layers/GraphicsLayer.js";import y from"../layers/support/TelemetryDisplay.js";import{g as h}from"./videoUtils2.js";import j from"../symbols/SimpleFillSymbol.js";import c from"../symbols/SimpleLineSymbol.js";import u from"../symbols/SimpleMarkerSymbol.js";import{applyCIMSymbolRotation as d}from"../symbols/support/cimSymbolUtils.js";import{a as b}from"./typeUtils2.js";import{O as f}from"./OverlayContainer.js";import{a as g}from"./events.js";import S from"../core/Handles.js";import{c as C}from"./screenUtils.js";import{c as L}from"./vec2f64.js";import v from"../geometry/Point.js";import _ from"../geometry/Polygon.js";import{project as T}from"./projectionUtils.js";import{D as x}from"./DisplayObject.js";import{C as w,L as U}from"./LayerView2D.js";import{a as D,T as O}from"./Texture.js";import{G as P}from"./GraphicContainer.js";import{G}from"./GraphicsView2D.js";import M from"../views/layers/LayerView.js";import"./colorUtils.js";import"./mathUtils.js";import"./ensureType.js";import"./MapUtils.js";import"../config.js";import"./object.js";import"./string.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../core/Accessor.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./Lifecycle.js";import"./metadata.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/promiseUtils.js";import"../core/Error.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"./Warning.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"./jsonUtils.js";import"../core/JSONSupport.js";import"../core/accessorSupport/decorators/cast.js";import"./reader.js";import"./writer.js";import"../layers/support/fieldUtils.js";import"../core/sql.js";import"./guards.js";import"./datetime.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/support/AttachmentsOrderByInfo.js";import"./jsonMap.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./locale.js";import"./constants.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/content/UtilityNetworkAssociationsContent.js";import"../popup/support/UtilityNetworkAssociationType.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../geometry/support/jsonUtils.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polyline.js";import"./extentUtils.js";import"./boundsUtils.js";import"./aaBoundingRect.js";import"./coordsUtils.js";import"./typeUtils.js";import"./createFeatureId.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils3.js";import"../symbols/edges/Edges3D.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils4.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./vec3f64.js";import"./aaBoundingBox.js";import"./DoubleArray.js";import"../symbols/IconSymbol3DLayer.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"./lineMarkers.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/Font.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../symbols/FillSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/MarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./GraphicsCollection.js";import"../layers/Layer.js";import"../time/TimeExtent.js";import"./timeUtils.js";import"../layers/mixins/BlendLayer.js";import"./layerContainerType.js";import"./jsonUtils2.js";import"./parser.js";import"./utils5.js";import"./mat4.js";import"./common.js";import"../layers/mixins/ScaleRangeLayer.js";import"../symbols/support/ElevationInfo.js";import"../symbols/support/FeatureExpressionInfo.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"../layers/support/TelemetryData.js";import"../layers/support/VideoTimeExtent.js";import"./utils8.js";import"./asyncUtils.js";import"./gfxUtils.js";import"./LRUCache.js";import"./MemCache.js";import"./utils6.js";import"./defaultCIMValues.js";import"./mat3.js";import"./mat3f32.js";import"./vec2f32.js";import"./vec3f32.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"./utils9.js";import"./utils10.js";import"./viewpointUtils.js";import"../Viewpoint.js";import"../Camera.js";import"../CameraLayout.js";import"./Cyclical.js";import"./mat2d.js";import"./mat2df64.js";import"./vec2.js";import"./WGLContainer.js";import"./vec4f32.js";import"./utils30.js";import"./enums.js";import"./VertexElementDescriptor.js";import"./definitions.js";import"./BoundingBox.js";import"./WGLBrushVTLSymbol.js";import"./VertexArrayObject.js";import"./memoryEstimations.js";import"./VertexAttributeLocations.js";import"./VertexBuffer.js";import"./BufferObject.js";import"./config.js";import"./ShaderCompiler.js";import"./ProgramTemplate.js";import"./Program.js";import"./TiledDisplayObject.js";import"./TileKey2.js";import"./mat2df32.js";import"./vec3.js";import"./util.js";import"../views/support/HighlightOptions.js";import"./HighlightDefaults.js";import"./Container.js";import"./EffectView.js";import"./earcut.js";import"./featureConversionUtils.js";import"./OptimizedFeature.js";import"./OptimizedGeometry.js";import"./OptimizedFeatureSet.js";import"./clippingUtils.js";import"./FeatureCommandQueue.js";import"./CIMSymbolHelper.js";import"./BidiEngine.js";import"./labelPoint.js";import"./GeometryUtils.js";import"./fontUtils.js";import"./rasterizingUtils.js";import"./floatRGBA.js";import"./shapingUtils.js";import"./Rect.js";import"./defaults.js";import"./defaultsJSON.js";import"./GraphShaderModule.js";import"./FramebufferObject.js";import"./ShaderBuilder.js";import"./UpdateTracking2D.js";import"./ReactiveMap.js";import"./UpdatingHandles.js";import"./utils26.js";import"./constants4.js";import"./heatmapTextureUtils.js";import"./streamLayerUtils.js";import"./capabilities2.js";import"./QueueProcessor.js";import"./Queue.js";import"./signal.js";import"./utils27.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"./projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./utils23.js";import"./highlightOptionsUtils.js";import"./ClipRect.js";import"./layerViewUtils.js";import"./AGraphicContainer.js";import"./TechniqueInstance.js";import"./TileContainer.js";import"../layers/support/FieldsIndex.js";import"./UnknownTimeZone.js";import"./timeZoneUtils.js";import"./OverrideHelper.js";import"./colorUtils2.js";import"./vec4.js";import"./vec4f64.js";import"./ArcadeExpression.js";import"./TimeOnly.js";import"./enum.js";import"./callExpressionWithFeature.js";import"./quantizationUtils.js";import"./ComputedAttributeStorage.js";import"./diffUtils.js";import"./queryUtils.js";import"./projectionSupport.js";import"./json.js";import"./timeSupport.js";import"../rest/support/Query.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./FullTextSearch.js";import"./spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"./FeatureMetadata.js";import"./labelFormatUtils.js";import"./number.js";import"./labelUtils.js";import"./rbush.js";import"./quickselect.js";import"./normalizeUtilsSync.js";import"./ellipticArc7Utils.js";import"./mat3f64.js";import"./dehydratedFeatures.js";class A extends x{constructor(t){super(),this.element=t,this._handles=new S,this.isWrapAround=!1,this.perspectiveTransform=L(),this.wrapAroundShift=0,this.clipGeometry=null,this._handles.add(o(()=>this.element,()=>{const t=this.element;this.ready(),t&&this._handles.add(g(t,"play",()=>this.requestRender()))},m))}getMesh(t){throw new Error("Method not implemented.")}destroy(){super.destroy(),this._handles.destroy(),this.texture=i(this.texture)}get textureSize(){if(!this.texture)return[1,1];const t=this.texture.descriptor;return[t.width,t.height]}get dvsMat3(){return this.parent.dvsMat3}beforeRender(t){const e=this.element;if(null==e)return;const{context:s}=t,{videoWidth:i,videoHeight:r}=e;if(0!==i&&0!==r){if(this.texture)e.paused||this.texture.setData(e);else{const t=new D(i,r);t.wrapMode=33071,t.preMultiplyAlpha=!0,this.texture=new O(s,t,e)}e.paused||(this.texture.generateMipmap(),this.requestRender()),super.beforeRender(t)}}_createTransforms(){return null}updateDrawCoords(t,e,s,i){const r=this.element,o=this._getFrameInfo();if(!r||!o)return;const{spatialReference:m}=s;this._initializeData(t,o,m);const{controlPoints:l,horizon:p}=o,a=Math.sqrt(l.length),n=a,{x:y,y:h}=t,j=this._vertices,c=l[0],u=l[a-1],d=l[(n-1)*a],b=l[(n-1)*a+a-1],f=T(p?p[0].mapPoint:c.mapPoint,m),g=T(p?p[1].mapPoint:u.mapPoint,m),S=T(d.mapPoint,m),C=T(b.mapPoint,m);this.clipGeometry=p?new w({geometry:_.fromJSON({rings:[[[S.x,S.y],[C.x,C.y],[g.x,g.y],[f.x,f.y],[S.x,S.y]]],spatialReference:m})}):null;for(let t=0;t<l.length;t++){const e=l[t],{sourcePoint:s,mapPoint:i}=e;if(null==s||null==i)continue;const r=T(i,m);j[2*t+0]=r.x-y,j[2*t+1]=r.y-h}let L=e;if(i){const t=Math.min(f.x,g.x,S.x,C.x),e=Math.max(f.x,g.x,S.x,C.x),{worldWidth:s,xBounds:r}=i,[o,m]=r;t<o&&e>o?L=s:e>m&&t<m&&(L=-s)}this.wrapAroundShift=L,this.isWrapAround=0!==L}draw(t,e){this.visible&&(this.isReady&&this._vertices&&this._indices&&this._texCoords?(this.stage||console.warn("OverlayMultipoint: stage is null"),e.render(t,{transform:{dvs:this.dvsMat3},config:{perspective:this.perspectiveTransform,texSize:this.textureSize,wrapAroundShift:this.wrapAroundShift,isWrapAround:this.isWrapAround,opacity:this.opacity,texture:{texture:this.texture,unit:0}},position:this._vertices,tex:this._texCoords,index:this._indices})):this.requestRender())}_initializeData(t,e,s){if(null!=this._vertices&&null!=this._indices)return;const{controlPoints:i}=e,r=Math.sqrt(i.length),o=r,m=new Float32Array(2*i.length),l=new Uint16Array(2*i.length);for(let e=0;e<i.length;e++){const r=i[e],{sourcePoint:o,mapPoint:p}=r;if(null==o||null==p)continue;const a=T(p,s);m[2*e+0]=a.x-t.x,m[2*e+1]=a.y-t.y,l[2*e+0]=o.x,l[2*e+1]=o.y}const p=new Uint16Array(o*r+(o-2)*(r+2));let a=0;for(let t=0;t<o;t++){for(let e=0;e<r;e++)p[a++]=t*r+e,p[a++]=(t+1)*r+e;t<o-2&&(p[a++]=(t+1)*r+(r-1),p[a++]=(t+1)*r)}this._vertices=m,this._texCoords=l,this._indices=p}_getFrameInfo(){if(!this.groundControlPoints)return null;const t=this._getFrameControlPoints(),e=this.frameHorizonPoints;let s=null;if(e){const t=e.startX,i=e.startY,r=e.endX,o=e.endY;s=[{sourcePoint:C(t,i),mapPoint:new v(e.startLongitude,e.startLatitude)},{sourcePoint:C(r,o),mapPoint:new v(e.endLongitude,e.endLatitude)}]}return{controlPoints:t,horizon:s}}_getFrameControlPoints(){const t=this.groundControlPoints,e=t?.length;if(!e)return[];const s=new Array(e),i=Math.max(...t.map(({x:t})=>t)),r=this.element.videoWidth/i;for(let i=0;i<e;i++){const{x:e,y:o,lat:m,lon:l}=t[i];s[i]={sourcePoint:C(e*r,-o*r),mapPoint:new v(l,m)}}return s}}const E=new e([255,127,0]);let F=class extends(U(M)){constructor(){super(...arguments),this._graphicsLayer=new n,this._frameOutlineGraphic=new s({symbol:new j({outline:{type:"simple-line",color:E}})}),this._frameCenterGraphic=new s({symbol:new u({color:E,style:"cross"})}),this._sensorTrailGraphic=new s({symbol:new c({color:E})}),this._sensorSightlineGraphic=new s({symbol:new c({color:E})}),this._sensorLocationGraphic=new s({symbol:new u({color:E})}),this._overlayContainer=null,this._sensorLocationSymbolType=null,this.layer=null,this.sensorLocationSymbol=null,this.symbolAngle=0,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=r(this._graphicsLayer)}initialize(){this._sensorLocationSymbolType=this.layer?.sensorSymbol.type,this._graphicsLayer.graphics.addMany([this._frameCenterGraphic,this._frameOutlineGraphic,this._sensorLocationGraphic,this._sensorSightlineGraphic,this._sensorTrailGraphic]),this.visibleTelemetryElements=new y({frame:this.layer.telemetryDisplay?.frame??!1,frameCenter:this.layer.telemetryDisplay?.frameCenter??!0,frameOutline:this.layer.telemetryDisplay?.frameOutline??!0,lineOfSight:this.layer.telemetryDisplay?.lineOfSight??!0,sensorLocation:this.layer.telemetryDisplay?.sensorLocation??!0,sensorTrail:this.layer.telemetryDisplay?.sensorTrail??!0})}attach(){this._overlayContainer=new f,this.container.addChild(this._overlayContainer),this._addOverlayMultipoint(),this.graphicsView=new G({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new P(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([l(()=>[this.layer.telemetryDisplay?.frame,this.layer.telemetryDisplay?.frameCenter,this.layer.telemetryDisplay?.frameOutline,this.layer.telemetryDisplay?.sensorLocation,this.layer.telemetryDisplay?.sensorTrail,this.layer.telemetryDisplay?.lineOfSight],()=>this._updateVisibleTelemetryElements(),m),l(()=>[this.layer.telemetry,this.visibleTelemetryElements?.frameCenter,this.visibleTelemetryElements?.frameOutline,this.visibleTelemetryElements?.sensorLocation,this.visibleTelemetryElements?.sensorTrail,this.visibleTelemetryElements?.lineOfSight],()=>this._updateGraphicGeometries(),m),l(()=>this.layer.metadata,()=>this._updateSensorLocationSymbolAngle(),m),l(()=>this.layer?.frameCenterSymbol,()=>this._updateFrameCenterSymbol(),m),l(()=>this.layer?.frameOutlineSymbol,()=>this._updateFrameOutlineSymbol(),m),l(()=>this.layer?.sensorSightLineSymbol,()=>this._updateSensorSightlineSymbol(),m),l(()=>this.layer?.sensorSymbol,()=>this._updateSensorLocationSymbol(),m),l(()=>this.layer?.sensorTrailSymbol,()=>this._updateSensorTrailSymbol(),m),l(()=>this.symbolAngle,()=>this._updateSensorLocationSymbol(),m)])}detach(){this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this.graphicsView=r(this.graphicsView)}supportsSpatialReference(t){return!0}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(t){this.graphicsView.processUpdate(t)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frame=this.layer.telemetryDisplay.frame,this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:t}=this.layer,{visibleTelemetryElements:e}=this;t&&e&&(e.frameOutline&&t.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,e.sensorTrail&&t.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,e.lineOfSight&&t.lineOfSight?this._sensorSightlineGraphic.geometry=this.layer.telemetry.lineOfSight:this._sensorSightlineGraphic.geometry=null,e.sensorLocation&&t.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,e.frameCenter&&t.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}_updateSensorLocationSymbolAngle(){if(!this.layer?.metadata?.size)return;const{source:t,symbolOffset:e=0}=this.layer.sensorSymbolOrientation||{};if(!t&&!e)return;const s=this.layer?.metadata?.get(10005)?.value??0,i=this.layer?.metadata?.get(10018)?.value??0,r=h({cameraAzimuth:i,platformHeading:s,source:this.layer.sensorSymbolOrientation?.source,symbolOffset:this.layer.sensorSymbolOrientation?.symbolOffset??0});this.symbolAngle=Math.round(Math.abs(r))}_updateSensorLocationSymbol(){switch(this._sensorLocationSymbolType){case"simple-marker":this.sensorLocationSymbol=this.layer.sensorSymbol.clone(),this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol.clone();break;case"picture-marker":this.sensorLocationSymbol=this.layer.sensorSymbol,this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol;break;case"cim":this.sensorLocationSymbol=this.layer.sensorSymbol,d(this.sensorLocationSymbol,this.symbolAngle,!0),this._sensorLocationGraphic.symbol=this.sensorLocationSymbol}}_updateFrameCenterSymbol(){this.layer?.frameCenterSymbol&&(this._frameCenterGraphic.symbol=this.layer.frameCenterSymbol.clone())}_updateFrameOutlineSymbol(){this.layer?.frameOutlineSymbol&&(this._frameOutlineGraphic.symbol=this.layer.frameOutlineSymbol.clone())}_updateSensorSightlineSymbol(){this.layer?.sensorSightLineSymbol&&(this._sensorSightlineGraphic.symbol=this.layer.sensorSightLineSymbol.clone())}_updateSensorTrailSymbol(){this.layer?.sensorTrailSymbol&&(this._sensorTrailGraphic.symbol=this.layer.sensorTrailSymbol.clone())}async _addOverlayMultipoint(){if(!this.layer.videoElement)return;const t=new A(this.layer.videoElement);this.addAttachHandles([l(()=>[this.layer.frameHorizonPoints,this.layer.groundControlPoints,this.layer.frameOpacity,this.layer.telemetryDisplay?.frame],()=>{const{visibleTelemetryElements:e}=this;t.frameHorizonPoints=this.layer.frameHorizonPoints,t.groundControlPoints=this.layer.groundControlPoints,t.opacity=this.layer.frameOpacity,t.visible=e?.frame??!1},m)]),this._overlayContainer.addChild(t),this.view.stage.requestRender()}};t([p()],F.prototype,"graphicsView",void 0),t([p()],F.prototype,"layer",void 0),t([p({types:b})],F.prototype,"sensorLocationSymbol",void 0),t([p()],F.prototype,"symbolAngle",void 0),t([p({type:y})],F.prototype,"visibleTelemetryElements",void 0),F=t([a("esri.views.2d.layers.VideoLayerView2D")],F);const I=F;export{I as default};
