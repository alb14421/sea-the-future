/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as s}from"./tslib.es6.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import{subclass as e}from"../core/accessorSupport/decorators/subclass.js";import{L as t}from"./LayerView3D.js";import{L as r}from"./LayerViewAnalysisViewManager.js";import o from"../core/Collection.js";import{createAbortError as a}from"../core/promiseUtils.js";import"../core/lang.js";import"./Logger.js";import n from"../views/layers/LayerView.js";import"./ensureType.js";import"./MapUtils.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"../core/Error.js";import"./object.js";import"../config.js";import"./string.js";import"./Lifecycle.js";import"./tracking.js";import"./Warning.js";import"../core/reactiveUtils.js";import"./events.js";import"./maybe.js";import"./watch.js";import"./ObjectPool.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"./heightModelInfoUtils.js";import"../geometry/HeightModelInfo.js";import"./jsonMap.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./ObservableBase.js";import"./unitUtils.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./jsonUtils.js";import"./persistableUrlUtils.js";import"./reader.js";import"./writer.js";import"./asyncUtils.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"../core/Identifiable.js";import"../core/Promise.js";import"./UpdatingHandles.js";import"./layerViewUtils.js";const l=t=>{const r=t;let n=class extends r{constructor(...s){super(...s),this.layer=null}get interactive(){return null!=this.analysisView&&this.analysisView.interactive}set interactive(s){null!=this.analysisView&&(this.analysisView.interactive=s)}get results(){return this.analysisView?.results??new o}get selectedDimension(){return null!=this.analysisView?this.analysisView.selectedDimension:null}set selectedDimension(s){null!=this.analysisView&&(this.analysisView.selectedDimension=s)}async createLengthDimensions(s){await(this.analysisView?.createLengthDimensions(s))}place(s){if(null!=this.analysisView)return this.analysisView?.place(s);throw a()}};return s([i()],n.prototype,"layer",void 0),s([i()],n.prototype,"interactive",null),s([i({readOnly:!0})],n.prototype,"results",null),s([i()],n.prototype,"selectedDimension",null),n=s([e("esri.views.layers.DimensionLayerView")],n),n};var p;let m=class extends(t(l(n))){static{p=this}constructor(s){super(s),this.type="dimension-3d",this._analysisViewManager=null}initialize(){this._analysisViewManager=new r({getAnalysis:()=>this.layer.analysis,loadAnalysisViewModule:p.loadAnalysisViewModule,parent:this}),this.addResolvingPromise(this._analysisViewManager.whenAnalysisView())}destroy(){this._analysisViewManager.destroy()}get analysisView(){return this._analysisViewManager.analysisView}whenAnalysisView(){return this._analysisViewManager.whenAnalysisView()}isUpdating(){return this._analysisViewManager.updating}static{this.loadAnalysisViewModule=()=>import("../views/3d/analysis/DimensionAnalysisView3D.js")}};s([i()],m.prototype,"type",void 0),s([i()],m.prototype,"_analysisViewManager",void 0),s([i({readOnly:!0})],m.prototype,"analysisView",null),m=p=s([e("esri.views.3d.layers.DimensionLayerView3D")],m);const y=m;export{y as default};
