/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{A as t}from"./TimeOnly.js";import{d as e}from"./deepClone.js";import{A as s}from"./enum.js";import{j as r,k as n,l as i,m as o,a,i as u,n as l,o as c,b}from"./languageUtils.js";import f from"../geometry/Geometry.js";import{a as m,e as h,c as d,b as y}from"./guards.js";function w(t,e,s=!1,r=!1){if(null==t)return null;if(m(t)||h(t)||d(t)||u(t)||l(t)||c(t))return t;if(y(t)){const n=[];for(const i of t)n.push(w(i,e,s,r));return n}if(r&&b(t))return t;const n=new p;n.immutable=!1;for(const[i,o]of Object.entries(t))void 0!==o&&n.setField(i,w(o,e,s,r));return n.immutable=s,n}class p{constructor(t){this.declaredClass="esri.arcade.Dictionary",this.plain=!1,this.immutable=!0,t instanceof p?this.attributes=t.attributes:null==t?this.attributes=Object.create(null):null!=Object.getPrototypeOf(t)?this.attributes={__proto__:null,...t}:this.attributes=t}static containerEntry(t,e){return new p({__proto__:null,key:t,value:e})}static textFormatting(){const t=new p({__proto__:null,newline:"\n",tab:"\t",singlequote:"'",doublequote:'"',forwardslash:"/",backwardslash:"\\"});return t.immutable=!1,t}field(t){const e=t.toLowerCase(),r=this.attributes[t];if(void 0!==r)return r;for(const t in this.attributes)if(t.toLowerCase()===e)return this.attributes[t];throw new s(null,"FieldNotFound",null,{key:t})}setField(e,n){if(this.immutable)throw new s(null,"Immutable",null);if(r(n))throw new s(null,"NoFunctionInDictionary",null);const i=e.toLowerCase();if(n instanceof Date&&(n=t.dateJSToArcadeDate(n)),void 0===this.attributes[e]){for(const t in this.attributes)if(t.toLowerCase()===i)return void(this.attributes[t]=n);this.attributes[e]=n}else this.attributes[e]=n}hasField(t){const e=t.toLowerCase();if(void 0!==this.attributes[t])return!0;for(const t in this.attributes)if(t.toLowerCase()===e)return!0;return!1}keys(){let t=[];for(const e in this.attributes)t.push(e);return t=t.sort(),t}castToText(t=!1){return n(this.attributes,{useNumbersForDates:t})}static convertObjectToArcadeDictionary(t,e,s=!0,r=!1){const n=new p;n.immutable=!1;for(const i in t){const o=t[i];void 0!==o&&n.setField(i.toString(),w(o,e,s,r))}return n.immutable=s,n}static convertJsonToArcade(t,e,s=!1,r=!1){return w(t,e,s,r)}castAsJson(t=null){const e=Object.create(null);for(let s in this.attributes){const r=this.attributes[s];void 0!==r&&(t?.keyTranslate&&(s=t.keyTranslate(s)),e[s]=i(r,t))}return e}async castDictionaryValueAsJsonAsync(t,e,s,r=null,n){const i=await o(s,r,n);return t[e]=i,i}async castAsJsonAsync(e=null,s=null){const r=Object.create(null),n=[];for(let o in this.attributes){const u=this.attributes[o];s?.keyTranslate&&(o=s.keyTranslate(o)),void 0!==u&&(a(u)||u instanceof f||u instanceof t?r[o]=i(u,s):n.push(this.castDictionaryValueAsJsonAsync(r,o,u,e,s)))}return n.length>0&&await Promise.all(n),r}deepClone(){const t=new p;t.immutable=!1;for(const s of this.keys())t.setField(s,e(this.field(s)));return t}}export{p as D};
