/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{createResolver as t,onAbortOrThrow as e,throwIfNotAbortError as i}from"../core/promiseUtils.js";import{b as s,c as r,r as o,h as a,m as n}from"./mat3.js";import{c as l}from"./mat3f32.js";import{f as h}from"./vec2f32.js";import{D as u}from"./DisplayObject.js";import{S as c}from"./enums.js";import{a as d,T as p}from"./Texture.js";import{c as x}from"./definitions.js";import{o as m,u as g,w as _,q as f,U as y,G as b,l as w,a as S,t as v,n as B,V as M,S as k,M as R,F as T,p as j,r as A,T as I}from"./GraphShaderModule.js";import{_ as P,c as H}from"./tslib.es6.js";import{s as D}from"./bitmapUtils.js";class W{constructor(t,e,i){this.pixelBlock=t,this.extent=e,this.originalPixelBlock=i}get width(){return null!=this.pixelBlock?this.pixelBlock.width:0}get height(){return null!=this.pixelBlock?this.pixelBlock.height:0}render(t){const e=this.pixelBlock;if(null==e)return;const i=this.filter({extent:this.extent,pixelBlock:this.originalPixelBlock??e});if(null==i.pixelBlock)return;i.pixelBlock.maskIsAlpha&&(i.pixelBlock.premultiplyAlpha=!0);const s=i.pixelBlock.getAsRGBA(),r=t.createImageData(i.pixelBlock.width,i.pixelBlock.height);r.data.set(s),t.putImageData(r,0,0)}getRenderedRasterPixels(){const t=this.filter({extent:this.extent,pixelBlock:this.pixelBlock});return null==t.pixelBlock?null:(t.pixelBlock.maskIsAlpha&&(t.pixelBlock.premultiplyAlpha=!0),{width:t.pixelBlock.width,height:t.pixelBlock.height,renderedRasterPixels:new Uint8Array(t.pixelBlock.getAsRGBA().buffer)})}}function q(t){return t&&"render"in t}function U(t){const e=document.createElement("canvas");return e.width=t.width,e.height=t.height,t.render(e.getContext("2d")),e}class V extends u{constructor(t=null,e=!1){super(),this.blendFunction="standard",this._sourceWidth=0,this._sourceHeight=0,this._textureInvalidated=!1,this.stencilRef=0,this.coordScale=[1,1],this._height=void 0,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._texture=null,this._width=void 0,this.x=0,this.y=0,this.immutable=e,this.source=t,this.requestRender=this.requestRender.bind(this)}destroy(){super.destroy(),this._texture&&(this._texture.dispose(),this._texture=null),null!=this._uploadStatus&&(this._uploadStatus.controller.abort(),this._uploadStatus=null)}get isSourceScaled(){return this.width!==this._sourceWidth||this.height!==this._sourceHeight}get height(){return void 0!==this._height?this._height:this._sourceHeight}set height(t){this._height=t}get source(){return this._source}set source(t){null==t&&null==this._source||(this._source=t,this.invalidateTexture(),this.requestRender())}get texture(){return this._texture}get width(){return void 0!==this._width?this._width:this._sourceWidth}set width(t){this._width=t}beforeRender(t){super.beforeRender(t),this.updateTexture(t)}async setSourceAsync(i,s){null!=this._uploadStatus&&this._uploadStatus.controller.abort();const r=new AbortController,o=t();return e(s,()=>r.abort()),e(r,t=>o.reject(t)),this._uploadStatus={controller:r,resolver:o},this.source=i,o.promise}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this._source instanceof HTMLImageElement?(this._sourceHeight=this._source.naturalHeight,this._sourceWidth=this._source.naturalWidth):this._source&&(this._sourceHeight=this._source.height,this._sourceWidth=this._source.width))}transitionStep(t,e){t>=64&&(this.fadeTransitionEnabled=!1),super.transitionStep(t,e)}setTransform(t){const e=s(this.transforms.displayViewScreenMat3),[i,l]=t.toScreenNoRotation([0,0],[this.x,this.y]),u=this.resolution/this.pixelRatio/t.resolution,c=u*this.width,d=u*this.height,p=Math.PI*this.rotation/180;r(e,e,h(i,l)),r(e,e,h(c/2,d/2)),o(e,e,-p),r(e,e,h(-c/2,-d/2)),a(e,e,h(c,d)),n(this.transforms.displayViewScreenMat3,t.displayViewMat3,e)}setSamplingProfile(t){this._texture&&(t.mips&&!this._texture.descriptor.hasMipmap&&this._texture.generateMipmap(),this._texture.setSamplingMode(t.samplingMode))}bind(t,e){this._texture&&t.bindTexture(this._texture,e)}async updateTexture({context:t,painter:e}){if(!this._textureInvalidated)return;if(this._textureInvalidated=!1,this._texture||(this._texture=this._createTexture(t)),!this.source)return void this._texture.setData(null);this._texture.resize(this._sourceWidth,this._sourceHeight);const s=q(r=this.source)?r instanceof W?r.getRenderedRasterPixels()?.renderedRasterPixels:U(r):r;var r;try{if(null!=this._uploadStatus){const{controller:t,resolver:i}=this._uploadStatus,r={signal:t.signal},{width:o,height:a}=this,n=this._texture,l=e.textureUploadManager;await l.enqueueTextureUpdate({data:s,texture:n,width:o,height:a},r),i.resolve(),this._uploadStatus=null}else this._texture.setData(s);this.ready()}catch(t){i(t)}}onDetach(){this.destroy()}_createTransforms(){return{displayViewScreenMat3:l()}}_createTexture(t){const e=this.immutable,i=new d(this._sourceWidth,this._sourceHeight);return i.internalFormat=e?c.RGBA8:6408,i.wrapMode=33071,i.isImmutable=e,new p(t,i)}}class F extends f{}P([m(0,M)],F.prototype,"position",void 0);class G extends y{}P([g(k)],G.prototype,"texture",void 0),P([g(R)],G.prototype,"dvsMat3",void 0),P([g(M)],G.prototype,"coordScale",void 0),P([g(T)],G.prototype,"opacity",void 0);class C extends b{constructor(){super(...arguments),this.type="BitmapShader"}vertex(t){const e=this.config.dvsMat3.multiply(new w(t.position.multiply(this.config.coordScale),1));return{glPosition:new S(e,1),texcoord:t.position}}fragment(t){const e=new B;let i;return i=this.bicubic?D(this.config.texture,t.texcoord,this.config.coordScale):v(this.config.texture,t.texcoord),e.fragColor=new S(i.rgb.multiply(this.config.opacity),i.a.multiply(this.config.opacity)),e}}P([g(G)],C.prototype,"config",void 0),P([_],C.prototype,"bicubic",void 0),P([H(0,j(F))],C.prototype,"vertex",null),P([H(0,j(class extends A{}))],C.prototype,"fragment",null);const z={nearest:{samplingMode:9728,mips:!1},bilinear:{samplingMode:9729,mips:!1},bicubic:{samplingMode:9729,mips:!1},trilinear:{samplingMode:9987,mips:!0}},E=(t,e,i)=>{if("dynamic"===i.samplingMode){const{state:i}=t,s=e.resolution/e.pixelRatio/i.resolution,r=Math.round(t.pixelRatio)!==t.pixelRatio,o=s>1.05||s<.95;return i.rotation||o||r||e.isSourceScaled||e.rotation?z.bilinear:z.nearest}return z[i.samplingMode]};class O extends I{constructor(){super(...arguments),this.name="BrushBitmap",this.type=4,this.shaders={bitmap:new C}}render(t,e){const{context:i,renderingOptions:s,painter:r}=t;for(const o of e.bitmaps){const e=o.texture;if(!o.source||!o.isReady||null==e)continue;const a=E(t,o,s);t.timeline.begin(this.name),r.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:o.stencilRef,compare:514,op:{fail:7680,zFail:7680,zPass:7680}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:"additive"===o.blendFunction?"additive":"composite"}}),o.setSamplingProfile(a);const{coordScale:n,computedOpacity:l,transforms:h}=o,u={texture:{texture:e,unit:x},dvsMat3:h.displayViewScreenMat3,coordScale:n,opacity:l};r.submitDrawMesh(i,{shader:this.shaders.bitmap,uniforms:{config:u},defines:{bicubic:a===z.bicubic},optionalAttributes:null,useComputeBuffer:!1},r.quadMesh),t.timeline.end(this.name)}}}export{O as B,W as I,V as a,q as i,U as r};
