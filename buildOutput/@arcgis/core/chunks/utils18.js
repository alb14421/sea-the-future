/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{i as e}from"../core/lang.js";import{throwIfAborted as t}from"../core/promiseUtils.js";import n,{C as l}from"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import i from"../layers/support/Field.js";import{isStringField as a,isTimeOnlyField as o}from"../layers/support/fieldUtils.js";import s from"../rest/support/StatisticDefinition.js";import{noDominantCategoryField as r}from"../smartMapping/statistics/support/predominanceUtils.js";import{m as u,g as c,a as m}from"./utils14.js";import{i as f,a as p,g as d,c as g}from"./utils7.js";import{i as y,s as v,b as x,p as h}from"./utils13.js";const F=/_value$/i,w=Math.LOG10E,E={SECOND:1e3,MINUTE:6e4,HOUR:36e5},S=10;function T(e){return e.map(e=>e.toJSON())}function V(e,t){const n=[],l=e.layer,i="featureReduction"in l?l.featureReduction:null,a="binning"===i?.type,o=null!=i&&"fields"in i?i.fields?.map(e=>e.name?.toLowerCase()).filter(Boolean):[];if(!a||!t)return n;for(const e of t)o.includes(e.toLowerCase())||n.push(e);return n}function z(e,t,n){const l=[];if(t)for(const i of t){const t=e.getField(i);t&&n&&"availableFields"in n&&!n.availableFields?.includes(t.name)&&l.push(t.name)}return l}function $(e,t){const n=e&&e.features;if(0===n?.length)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};const l=n?.[0]?.attributes,i={};for(const e in l)i[e.replace(F,"").toLowerCase()]=l[e];return null!=i.totalcount&&i.totalcount>=i.count&&(i.nullcount=i.totalcount-i.count),delete i.totalcount,i.min===i.max&&null!=i.min&&null==i.stddev&&(i.stddev=i.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach(e=>{null!=i[e]&&(i[e]=Math.ceil(i[e]))}),i.min===i.max&&null!=i.min&&(i.avg=i.min,i.stddev=i.variance=0)),i}function b(e){const t=[],n=e.classBreaks,l=n[0].minValue,i=n[n.length-1].maxValue;n.forEach(e=>{t.push([e.minValue,e.maxValue])});const a={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:l,max:i,intervals:t,sqlExpr:q(a),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function q(e){const{field:t,normalizationType:n,normalizationField:l,normalizationTotal:i,layer:a}=e,o=p(a,t);let s=t;return"percent-of-total"===n?s=`((${o?g(t):t} / ${i}) * 100)`:"log"===n?s=`(log(${t}) * ${w})`:"field"===n?s=`(${o?g(t):t} / ${l})`:"natural-log"===n?s=`(log(${o?g(t):t}))`:"square-root"===n&&(s=`(power(${o?g(t):t}, 0.5))`),s}function C(e,t){let n;if(t=t.toLowerCase(),e)for(const l in e)if(l.toLowerCase()!==t){n=e[l];break}return n}function j(e,t){let n;if(t=t.toLowerCase(),e)for(const l in e)if(l.toLowerCase()===t){n=e[l];break}return n}function O(e,t,n,l,i){const a={},o="countOFExpr";e&&e.features&&e.features.forEach(e=>{const t=e.attributes,n=C(t,o),l=j(t,o);null!=n&&null!=l&&0!==n&&(a[n]=l)});const s=[];return x(t,n,l).forEach((e,t)=>{const n=(t+1).toString();s.push({minValue:e[0],maxValue:e[1],count:a.hasOwnProperty(n)?a[n]:0})}),{bins:s,minValue:t,maxValue:n,normalizationTotal:i}}async function L(e,n){const l=e&&e.features,{field:i,field2:a,field3:o,fieldDelimiter:s,layer:r,view:u,signal:c,labels:m}=n,f=`countOF${i&&a?"Expr":i||"Expr"}`,p={};let d=!1;for(const e of l){const t=e.attributes,n=j(t,f);let l=i?j(t,i):C(t,f),r=a?j(t,a):null,u=o?j(t,o):null;null===l&&0===n&&(d=!0),(null==l||"string"==typeof l&&""===l.trim())&&(l=null),a&&(null==r||"string"==typeof r&&""===r.trim())&&(r=null),o&&(null==u||"string"==typeof u&&""===u.trim())&&(u=null);let c=l;a&&(c=`${h(c)}${s}${h(r)}`,o&&(c=`${c}${s}${h(u)}`)),null==p[c]?p[c]={count:n,data:c}:p[c].count=p[c].count+n}if(i&&d){const e=i+" is NULL";try{const t=await r.queryFeatureCount({whereClause:e,view:u,signal:c});return p.null.count=p.null.count+t,R(p,m)}catch{return t(c),R(p,m)}}return R(p,m)}function R(e,t){if(t)for(const n in e)e[n].label=t[n];return{count:e}}async function D(e,t,i){const a=e?i.getField(e):null,o=a?i.getFieldDomain(a.name):null;if(o)return o;const{uniqueValueInfos:s}=await i.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),r=s.map(e=>new l({code:e.value}));return new n({codedValues:r})}async function I(e,t){if(!e.returnAllCodedValues)return[];const{field:n,field2:l,field3:i}=e;if(n&&!l){const e=n?t.getField(n):null,l=e?t.getFieldDomain(e.name):null;return l?[l]:[]}const a=[];return n&&(a.push(D(n,e,t)),l&&(a.push(D(l,e,t)),i&&a.push(D(i,e,t)))),Promise.all(a)}function N(e){return{viewingMode:"2d"===e.type?"map":e.viewingMode,scale:e.scale,spatialReference:e.spatialReference?.toJSON()}}function M(e,t){const n=new Set(e.map(e=>e.value)),l=t.filter(e=>!n.has(e));for(const t of l)e.push({value:t,count:0});e.sort((e,n)=>t.indexOf(e.value)-t.indexOf(n.value));for(const t of e)t.value===r&&(t.value=null);return{predominantCategoryInfos:e}}function U(t){const n="featureReduction"in t?t.featureReduction:null;return((null!=n&&"fields"in n?n.fields:null)??[]).map(e=>{const n=function(e,t){switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?"string"===e.onStatisticExpression.returnType?null:"double":null;case"mode":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?"string"===e.onStatisticExpression.returnType?"string":"double":null;default:return null}}(e,t.fieldsIndex);return n?new i({type:n,name:e.name,alias:e.alias}):null}).filter(e)}function B(e,t){return f(t)?(n=e,l=t?.name,d(n,new Date(0),l,"milliseconds").sqlExpression):o(t)?function(e){return e?g(["HOUR","MINUTE","SECOND"].map(t=>`(${function(e,t){return`EXTRACT(${t} FROM ${e}) * ${E[t]}`}(e,t)})`).join(" + ")):null}(t?.name):null;var n,l}function Q(e,t,n,l=!0){const{field:i,normalizationType:o,normalizationField:r,normalizationTotal:f,minValue:p,maxValue:d,filter:g}=t,x=e.supportsSQLExpression?B(e,n)||t.sqlExpression:null,h=q({field:i,normalizationType:o,normalizationField:r,normalizationTotal:f,layer:e}),F=x||h,w=F?c(F,p,d):null,E=m({field:i,normalizationField:r,normalizationType:o}),S=u(t.sqlWhere,E),T=u(S,w),V=y({normalizationField:r,normalizationType:o,sqlExpression:x,supportsSQLExpression:e.supportsSQLExpression,minValue:p,maxValue:d}),z=a(e.getField(i??void 0)),{include:$,exclude:b}=t.outStatisticTypes||{},C=v.filter(e=>(!$||$.includes(e))&&(!b||!b.includes(e))&&("nullcount"===e?V:!z||"count"===e)&&("median"!==e||l)),j=e.createQuery();return j.where=u(j.where,T),j.sqlFormat=x?"standard":null,j.outStatistics=C.map(t=>{const n=new s;let l=null,i=null,a=`${t}_value`;if("variance"===t)l="var",i=F;else if("nullcount"===t){const t=e.objectIdField;l="count",i=t&&e.getField(t)?t:"1",a="totalcount_value"}else"median"===t?(l="percentile-continuous",i=F,n.statisticParameters={value:.5}):(l=t,i=F);return n.statisticType=l,n.onStatisticField=i,n.outStatisticFieldName=a,n}),k(j,g),j}function k(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship)}function P(e,t){const{field:n,field2:l,field3:i,sqlExpression:a}=t,o=!(!n||!l),s=e.createQuery();return s.where=u(s.where,t.sqlWhere),s.sqlFormat=a?"standard":null,s.outStatistics=[W(o?null:n,o?"1":a)].filter(Boolean),s.groupByFieldsForStatistics=[n||a,l,i].filter(Boolean),k(s,t.filter),s}function W(e,t){const n="countOF"+(e||"Expr"),l=new s;return l.statisticType="count",l.onStatisticField=t?"1":e,l.outStatisticFieldName=n,l}function _(e,t,n,l=10,i,a,o){const{min:s,max:r,normTotal:c,excludeZerosExpr:m}=t,f=t.intervals||x(s,r,l),p=t.sqlExpr||n;return function(e,t,n,l,i,a,o){const s=[],r=t.length;for(let e=0;e<r;e++){const i=u(l,u(n+" >= "+t[e][0],null!==t[e][1]?n+(e===r-1?" <= ":" < ")+t[e][1]:""));s.push(i)}return Promise.allSettled(s.map(t=>e.queryFeatureCount({whereClause:t,view:i,filter:a,signal:o})))}(e,f,p,m,i,a,o).then(e=>({bins:e.map((e,t)=>({minValue:f[t][0],maxValue:f[t][1],count:"fulfilled"===e.status?e.value:0})),minValue:s,maxValue:r,normalizationTotal:c}))}export{N as a,B as b,q as c,S as d,b as e,T as f,U as g,Q as h,$ as i,z as j,P as k,L as l,_ as m,I as n,M as o,O as p,V as q,k as u};
