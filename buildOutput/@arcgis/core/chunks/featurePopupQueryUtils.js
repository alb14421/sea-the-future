/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{throwIfAborted as e}from"../core/promiseUtils.js";import{sqlAnd as t}from"../core/sql.js";import{unpackFieldNames as i,featureHasFields as o,l as n}from"../layers/support/fieldUtils.js";async function s(n,s,l,u){const a=new Array(s.length),c=new Map,d=new Map,f=i(n.fieldsIndex,l.outFields),p=u?.hasRequiredFields??o;for(let t=0;t<s.length;t++){const i=s[t];if(i.isAggregate){a[t]=i;continue}let o=!1;if(u?.getPopupTemplate){const t=(i.origin&&"object"==typeof i.origin&&"layer"in i.origin?i.origin.layer:null)??i.sourceLayer??i.layer,n=u.getPopupTemplate(t);if(null==n)continue;const s=await r(n);e(u),o=s&&s.arcadeUtils.hasGeometryOperations(n)}if(o||!p(i,f)){const e=i.getObjectId();if(null!=e){c.set(e,{graphic:i,index:t});continue}const o=i.getGlobalId();if(null!=o){d.set(o,{graphic:i,index:t});continue}}a[t]=i}if(!n.queryFeatures||0===c.size&&0===d.size)return a.filter(Boolean);const g=[],y=(e,t)=>{t&&(e.outFields??=[],e.outFields.includes(t)||e.outFields.push(t))};if(c.size>0){const e=l.clone();y(e,n.objectIdField),"uniqueIdFields"in n&&n.uniqueIdFields?.length&&(e.outFields??=[],e.outFields.push(...n.uniqueIdFields)),e.objectIds=Array.from(c.keys()),g.push({type:"object-id",query:e,map:c})}const m="globalIdField"in n?n.globalIdField:null;if(null!=m&&d.size>0){const e=l.clone();y(e,m);const i=Array.from(d.keys());e.where=t(l.where,`${m} IN (${i.map(e=>`'${e}'`).join(",")})`),g.push({type:"global-id",query:e,map:d})}const b=u?.updateSourceAttributes??!1;for(const{type:e,query:t,map:i}of g)try{const o=await n.queryFeatures(t,u);for(const t of o.features){const o="object-id"===e?t.getObjectId():t.getGlobalId();if(null==o)continue;const n=i.get(o);if(!n)continue;const{graphic:s,index:r}=n;if(b&&t.attributes){s.attributes??={};for(const e of f)e in t.attributes&&(s.attributes[e]=t.attributes[e])}const{geometry:l,origin:u}=s;t.geometry||=l,t.origin=u,a[r]=t}}catch{}return a.filter(Boolean)}async function r(e){if(e.expressionInfos?.length||Array.isArray(e.content)&&e.content.some(e=>"expression"===e.type))return n()}export{s as f,r as l};
