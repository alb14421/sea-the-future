/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{g as t}from"./assets.js";import e from"../Color.js";import s from"../request.js";import{L as o}from"./LRUCache.js";import{p as r}from"./screenUtils.js";import{getCIMSymbolColor as n}from"../symbols/support/cimSymbolUtils.js";const a="picture-fill",i="simple-fill",l="simple-marker",c=new Map([["dash",[4,3]],["dashdot",[4,3,1,3]],["dot",[1,3]],["longdash",[8,3]],["longdashdot",[8,3,1,3]],["longdashdotdot",[8,3,1,3,1,3]],["shortdash",[4,1]],["shortdashdot",[4,1,1,1]],["shortdashdotdot",[4,1,1,1,1,1]],["shortdot",[1,1]],["solid",[]]]),h=new o(1e3);function d(e){const s=e.style;let o=null;if(e)switch(e.type){case l:"cross"!==s&&"x"!==s&&(o=e.color);break;case i:s&&"solid"!==s?"none"!==s&&(o={type:"pattern",x:0,y:0,src:t(`esri/symbols/patterns/${s}.png`),width:5,height:5}):o=e.color;break;case a:o={type:"pattern",src:e.url,width:r(e.width)*e.xscale,height:r(e.height)*e.yscale,x:r(e.xoffset),y:r(e.yoffset)};break;case"text":o=e.color;break;case"cim":o=n(e)}return o}function p(t,e){const o=t+"-"+e,r=h.get(o);return null!=r?Promise.resolve(r):s(t,{responseType:"image"}).then(t=>{const s=t.data,r=s.naturalWidth,n=s.naturalHeight,a=document.createElement("canvas");a.width=r,a.height=n;const i=a.getContext("2d");i.fillStyle=e,i.fillRect(0,0,r,n),i.globalCompositeOperation="destination-in",i.drawImage(s,0,0);const l=a.toDataURL();return h.put(o,l),l})}function m(t){if(!t)return null;let e=null;switch(t.type){case i:case a:case l:e=m(t.outline);break;case"simple-line":{const s=r(t.width);null!=t.style&&"none"!==t.style&&0!==s&&(e={color:t.color,style:f(t.style),width:s,cap:t.cap,join:"miter"===t.join?r(t.miterLimit):t.join},e.dashArray=u(e).join(",")||"none");break}default:e=null}return e}function u(t){if(!t?.style)return[];const{dashArray:e,style:s,width:o}=t;if("string"==typeof e&&"none"!==e)return e.split(",").map(t=>Number(t));const r=o??0,n=c.has(s)?c.get(s).map(t=>t*r):[];if("butt"!==t.cap)for(const[t,e]of n.entries())n[t]=t%2==1?e+r:Math.max(e-r,1);return n}const f=(()=>{const t={};return e=>{if(t[e])return t[e];const s=e.replaceAll("-","");return t[e]=s,s}})(),y=new e([128,128,128]);export{d as a,u as b,p as c,y as d,f as e,m as g};
