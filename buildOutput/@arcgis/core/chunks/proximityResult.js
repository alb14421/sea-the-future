/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{toPoint as r,getSpatialReference as t}from"./apiConverter.js";import"./Point2D.js";import"./Envelope2D.js";import"./Envelope.js";import"./ProjectionTransformation.js";import"./Transformation2D.js";import"./SimpleGeometryCursor.js";import"./tslib.es6.js";import"./OperatorDefinitions.js";import"../geometry/Extent.js";import"./string.js";import"./object.js";import"../core/lang.js";import"../core/accessorSupport/decorators/property.js";import"./Logger.js";import"../config.js";import"./ensureType.js";import"./MapUtils.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"../core/Error.js";import"../core/accessorSupport/decorators/subclass.js";import"./Lifecycle.js";import"./tracking.js";import"./Warning.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./maybe.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/promiseUtils.js";import"./events.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./jsonUtils.js";import"./persistableUrlUtils.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./extentUtils.js";import"./boundsUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"../geometry/Polyline.js";import"./jsonConverter.js";function o(o,s,i=!1){const e=r(o.m_coordinate,t(s)),p=o.m_distance,m=o.isEmpty(),j=o.m_bRightSide;return{coordinate:e,distance:p,isEmpty:m,...i&&{isRightSide:j},vertexIndex:o.m_vertexIndex}}export{o as toProximityResult};
