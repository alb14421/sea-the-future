/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{p as o}from"./floatRGBA.js";import{L as t}from"./Logger.js";import{m as e}from"./mathUtils.js";import{d as r}from"./defaultCIMValues.js";import{g as n}from"./definitions.js";const a=4,s=64,i=1024,l={outlineWidth:.75,referenceWidth:.75,cap:r.CIMSolidStroke.capstyle,join:r.CIMSolidStroke.joinstyle,miterLimit:r.CIMSolidStroke.miterlimit},c=()=>t.getLogger("esri.symbols.cim.rasterizingUtils");function h(o,t,r){const n=t.style,a=e(Math.ceil(r)),s=(o=>"vertical"===o||"horizontal"===o||"cross"===o||"esriSFSCross"===o||"esriSFSVertical"===o||"esriSFSHorizontal"===o)(n)?8*a:16*a,i=2*a;o.width=s,o.height=s;const l=o.getContext("2d");l.strokeStyle="#ffffff",l.lineWidth=a,l.beginPath(),"vertical"!==n&&"cross"!==n&&"esriSFSCross"!==n&&"esriSFSVertical"!==n||(l.moveTo(s/2,-i),l.lineTo(s/2,s+i)),"horizontal"!==n&&"cross"!==n&&"esriSFSCross"!==n&&"esriSFSHorizontal"!==n||(l.moveTo(-i,s/2),l.lineTo(s+i,s/2)),"backward-diagonal"!==n&&"diagonal-cross"!==n&&"esriSFSDiagonalCross"!==n&&"esriSFSBackwardDiagonal"!==n||(l.moveTo(-i,-i),l.lineTo(s+i,s+i),l.moveTo(s-i,-i),l.lineTo(s+i,i),l.moveTo(-i,s-i),l.lineTo(i,s+i)),"forward-diagonal"!==n&&"diagonal-cross"!==n&&"esriSFSForwardDiagonal"!==n&&"esriSFSDiagonalCross"!==n||(l.moveTo(s+i,-i),l.lineTo(-i,s+i),l.moveTo(i,-i),l.lineTo(-i,i),l.moveTo(s+i,s-i),l.lineTo(s-i,s+i)),l.stroke();const c=l.getImageData(0,0,o.width,o.height),h=new Uint8Array(c.data);let f;for(let o=0;o<h.length;o+=4)f=h[o+3]/255,h[o]=h[o]*f,h[o+1]=h[o+1]*f,h[o+2]=h[o+2]*f;return[h,o.width,o.height,a]}function f(t){t.length%2==1&&(t=[...t,...t]);const e=t.reduce((o,t)=>o+t,0),r=Math.round(4*e),n=new Float32Array(1*r);let a=0,s=0,i=.5,l=!0;for(const o of t){for(a=s,s+=4*o;i<=s;){const o=i-.5,t=Math.min(Math.abs(i-a),Math.abs(i-s));n[o]=l?-t:t,i++}l=!l}const c=n.length,h=new Uint8Array(4*c);for(let t=0;t<c;++t){const e=n[t]/4;o(e/64*.5+.5,h,4*t)}return[h,r,1]}function m(t,e){null==t&&(t=[]);const r="Butt"===e,n="Square"===e,a=!r&&!n;t.length%2==1&&(t=[...t,...t]);const s=15.5;let i=0;for(const o of t)i+=o;const l=Math.round(i*s),c=new Float32Array(31*l),h=7.75;let f=0,m=0,u=.5,g=!0;for(const o of t){for(f=m,m+=o*s;u<=m;){let o=.5;for(;o<31;){const t=(o-.5)*l+u-.5,e=a?(o-s)*(o-s):Math.abs(o-s);c[t]=g?r?Math.max(Math.max(f+h-u,e),Math.max(u-m+h,e)):e:a?Math.min((u-f)*(u-f)+e,(u-m)*(u-m)+e):n?Math.min(Math.max(u-f,e),Math.max(m-u,e)):Math.min(Math.max(u-f+h,e),Math.max(m+h-u,e)),o++}u++}g=!g}const d=c.length,p=new Uint8Array(4*d);for(let t=0;t<d;++t){const e=(a?Math.sqrt(c[t]):c[t])/s;o(e,p,4*t)}return[p,l,31]}function u(o,t){const{colorRamp:e,gradientType:a}=t,s="CIMFixedColorRamp"===e.type,i=t.interval||r.CIMGradientFill.interval;let l=p(e);return s&&(l=C(l,i)),"Discrete"===a||s?function(o,t,e){return S(o,t,e,1,n),x(o)}(o,l,i):function(o,t){return S(o,t,32,1,n),x(o)}(o,l)}let g;function d(o,t){const{colorRamp:e,gradientType:n}=t,a=p(e),s="CIMFixedColorRamp"===e.type;if("Continuous"===n&&!s)return M(o,a);const i=t.interval??r.CIMGradientFill.interval;if(s)return M(o,C(a,i));const l=[];g??=document.createElement("canvas"),S(g,a,i,1,0);const c=g.getContext("2d").getImageData(0,0,i,1).data;for(let o=0,t=0;o<i;o++,t=4*o){const e=[c[t+0],c[t+1],c[t+2],c[t+3]];l.push({offset:o/i,color:e}),l.push({offset:(o+1)/i,color:e})}return M(o,l)}function p(o){const t=[];switch(o.type){case"CIMPolarContinuousColorRamp":case"CIMLinearContinuousColorRamp":{"CIMPolarContinuousColorRamp"===o.type&&c().warnOnce("CIMPolarContinuousColorRamp is currently unsupported. Falling back to CIMLinearContinuousColorRamp.");const e=o;t.push({offset:0,color:[e.fromColor[0],e.fromColor[1],e.fromColor[2],e.fromColor[3]/255]}),t.push({offset:1,color:[e.toColor[0],e.toColor[1],e.toColor[2],e.toColor[3]/255]});break}case"CIMFixedColorRamp":{const e=o,r=1/(e.colors.length-1);let n=0;for(const o of e.colors)t.push({offset:n,color:[o[0],o[1],o[2],o[3]/255]}),n+=r;break}case"CIMMultipartColorRamp":{const e=o,r=e.weights.reduce((o,t)=>o+t,0);let n=0;for(let o=0;o<e.colorRamps.length;o++){const a=e.colorRamps[o],s=e.weights[o],i=p(a);for(const o of i)t.push({offset:(n+o.offset*s)/r,color:o.color});n+=s}break}default:c().error(`Color ramp "${o.type}" currently unsupported.`)}return t}function C(o,t){const e=[],r=(o.length-1)/(t-1);for(let n=0;n<t;n++){const a=o[Math.round(n*r)].color;e.push({offset:n/t,color:a}),e.push({offset:(n+1)/t,color:a})}return e}function M(o,t,e=0){for(const{offset:r,color:n}of t)o.addColorStop(Math.min(Math.max(r,e),1-e),`rgba(${n[0]}, ${n[1]}, ${n[2]}, ${n[3]})`)}function S(o,t,e,r,n){const a=e+2*n;o.width=a,o.height=r;const s=(n+1)/a,i=o.getContext("2d",{willReadFrequently:!0});if(t.length>0){const o=i.createLinearGradient(0,0,a,r);M(o,t,s),i.fillStyle=o}else i.fillStyle="rgba(128, 128, 128, 1)";i.fillRect(0,0,a,r)}function x(o){const{width:t,height:e}=o,r=o.getContext("2d").getImageData(0,0,t,e),n=new Uint8Array(r.data);for(let o=0;o<n.length;o+=4){const t=n[o+3]/255;n[o]*=t,n[o+1]*=t,n[o+2]*=t}return[n,t,e]}function y(o,t){const e=function(o){const t=o[0]?.[0]?.[0]??0,e=o[0]?.[0]?.[1]??0,r={ymin:e,xmin:t,ymax:e,xmax:t,width:0,height:0};for(let t=0;t<o.length;t++){const e=o[t];for(let o=0;o<e.length;o++){const t=e[o][0],n=e[o][1];t<r.xmin&&(r.xmin=t),t>r.xmax&&(r.xmax=t),n<r.ymin&&(r.ymin=n),n>r.ymax&&(r.ymax=n)}}return r.width=Math.abs(r.xmax-r.xmin),r.height=Math.abs(r.ymax-r.ymin),r}(o),r=0===e.width?1:e.width,n=0===e.height?1:e.height,a=[];for(let s=0;s<o.length;s++){const i=o[s],l=[];for(let o=0;o<i.length;o++){let a=Math.round(i[o][0]-e.xmin),s=Math.round(i[o][1]-e.ymin);if(a=t.xmin+a*t.width/r,s=t.ymin+s*t.height/n,isNaN(a)||isNaN(s))throw new Error("Scaled shape has NaN values");l.push([a,s])}a.push(l)}return a}function w(o,t,e){const r=[];for(let n=0;n<o.length;n++){const a=o[n],s=[];for(let o=0;o<a.length;o++){const r=a[o][0]+t,n=a[o][1]+e;if(isNaN(r)||isNaN(n))throw new Error("Scaled shape has NaN values");s.push([r,n])}r.push(s)}return r}export{l as a,h as b,f as c,u as d,d as e,a as f,s as g,i as m,m as r,y as s,w as t};
