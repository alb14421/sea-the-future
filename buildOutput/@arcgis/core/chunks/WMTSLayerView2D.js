/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import{L as e}from"./Logger.js";import{isAbortError as i}from"../core/promiseUtils.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import{p as o}from"./unitUtils.js";import{B as a,r as p}from"./imageUtils2.js";import{L as m}from"./LayerView2D.js";import{T as l,a as c,b as n}from"./TileStrategy.js";import{T as j}from"./TileKey2.js";import h from"../views/layers/LayerView.js";import{R as u}from"./RefreshableLayerView.js";import{T as f}from"./Scheduler.js";import"../config.js";import"./object.js";import"./string.js";import"./handleUtils.js";import"../core/Error.js";import"./events.js";import"./maybe.js";import"./ensureType.js";import"./MapUtils.js";import"./get.js";import"./utils.js";import"./metadata.js";import"./Lifecycle.js";import"./tracking.js";import"./Warning.js";import"./jsonMap.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./jsonUtils.js";import"./persistableUrlUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./mat3f32.js";import"./BitmapTechnique.js";import"./mat3.js";import"./vec2f32.js";import"./DisplayObject.js";import"../core/Evented.js";import"./enums.js";import"./Texture.js";import"./definitions.js";import"./GraphShaderModule.js";import"./BufferObject.js";import"./FramebufferObject.js";import"./Program.js";import"./ShaderBuilder.js";import"./bitmapUtils.js";import"./TiledDisplayObject.js";import"./VertexAttributeLocations.js";import"./VertexElementDescriptor.js";import"./TileContainer.js";import"./WGLContainer.js";import"./vec4f32.js";import"./utils30.js";import"./BoundingBox.js";import"./WGLBrushVTLSymbol.js";import"./VertexArrayObject.js";import"./memoryEstimations.js";import"./VertexBuffer.js";import"./config.js";import"./ShaderCompiler.js";import"./ProgramTemplate.js";import"./mat2df32.js";import"./mat2d.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"./vec3f32.js";import"./util.js";import"../views/support/HighlightOptions.js";import"../Color.js";import"./colorUtils.js";import"./HighlightDefaults.js";import"./Container.js";import"./SimpleObservable.js";import"./EffectView.js";import"./parser.js";import"./utils5.js";import"./screenUtils.js";import"./mat4.js";import"../core/reactiveUtils.js";import"./earcut.js";import"./vec2.js";import"./vec2f64.js";import"./featureConversionUtils.js";import"./aaBoundingBox.js";import"./DoubleArray.js";import"../geometry/support/jsonUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./extentUtils.js";import"./boundsUtils.js";import"../geometry/Polyline.js";import"./OptimizedFeature.js";import"./OptimizedGeometry.js";import"./OptimizedFeatureSet.js";import"./createFeatureId.js";import"./clippingUtils.js";import"../core/Collection.js";import"./shared.js";import"./collectionUtils.js";import"./utils23.js";import"./ReactiveMap.js";import"./highlightOptionsUtils.js";import"./ClipRect.js";import"./layerViewUtils.js";import"./ScheduledQueueProcessor.js";import"./Queue.js";import"./signal.js";import"../core/Identifiable.js";import"../core/Promise.js";import"./UpdatingHandles.js";import"./debugFlags.js";const d=[0,0];let y=class extends(u(a(m(h)))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}get tileMatrixSet(){const{activeLayer:t}=this.layer,{tileMatrixSet:e}=t;if(e&&o(e.tileInfo?.spatialReference,this.view.spatialReference))return e;const i=this._getTileMatrixSetBySpatialReference(t);return i&&i.id!==t.tileMatrixSetId?(t.tileMatrixSetId=i.id,i):null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume()}attach(){const t=this.tileMatrixSet?.tileInfo;t&&(this._tileInfoView=new l(t),this._fetchQueue=new c({tileInfoView:this._tileInfoView,concurrency:16,process:(t,e)=>this.fetchTile(t,e),scheduler:this.scheduler,priority:f.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new n({cachePolicy:"keep",resampling:!0,acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),tileInfoView:this._tileInfoView}),this.addAttachHandles(this._updatingHandles.add(()=>[this.layer?.activeLayer?.styleId,this.tileMatrixSet],()=>this.doRefresh())),super.attach())}detach(){super.detach(),this._tileStrategy?.destroy(),this._fetchQueue?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.activeLayer.tileMatrixSets?.some(e=>o(e.tileInfo?.spatialReference,t))??!1}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(d,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){const r="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:s,resamplingLevel:o=0}=e;if(!r)return this._fetchImage(t,s);const a=new j(0,0,0,0);let m;try{await r.fetchAvailabilityUpsample(t.level,t.row,t.col,a,{signal:s}),m=await this._fetchImage(a,s)}catch(r){if(i(r))throw r;if(o<3){const i=this._tileInfoView.getTileParentId(t.id);if(i){const r=new j(i),s=await this.fetchTile(r,{...e,resamplingLevel:o+1});return p(this._tileInfoView,s,r,t)}}throw r}return p(this._tileInfoView,m,a,t)}canResume(){const t=super.canResume();return t?null!==this.tileMatrixSet:t}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(t){i(t)||e.getLogger(this).error(t)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}_getTileMatrixSetBySpatialReference(t){return t.tileMatrixSets?.find(t=>o(t.tileInfo?.spatialReference,this.view.spatialReference))}};t([r({readOnly:!0})],y.prototype,"tileMatrixSet",null),y=t([s("esri.views.2d.layers.WMTSLayerView2D")],y);const g=y;export{g as default};
