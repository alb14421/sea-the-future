/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{O as t}from"./ObjectPool.js";import{P as e}from"./PooledArray.js";import{e as n,m as o,u as i,i as s,j as r}from"./vec3.js";import{f as h,c as a}from"./vec3f64.js";import{b as l}from"./frustum.js";import{w as d}from"./ray.js";import{c as u,a as c,i as f,b as m,g as _}from"./sphere.js";import{r as b}from"./BufferView.js";class p{get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}constructor(t,e){this.objectToBoundingSphere=t,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new g,this._objectCount=0,e&&(void 0!==e.maximumObjectsPerNode&&(this._maximumObjectsPerNode=e.maximumObjectsPerNode),void 0!==e.maximumDepth&&(this._maximumDepth=e.maximumDepth))}destroy(){this._degenerateObjects.clear(),g.clearPool(),R[0]=null,k.prune(),W.prune()}add(t){const e=Array.from(t);this._grow(e);const n=g.acquire();for(const t of e)++this._objectCount,this._isDegenerate(t)?this._degenerateObjects.add(t):(n.init(this._root),this._add(t,n));g.release(n)}remove(t,e=null){this._objectCount-=t.length;const n=g.acquire();for(const o of t){const t=e??u(this.objectToBoundingSphere(o),I);v(t[3])?(n.init(this._root),x(o,t,n)):this._degenerateObjects.delete(o)}g.release(n),this._shrink()}update(t,e){if(!v(e[3])&&this._isDegenerate(t))return;const n=function(t){return R[0]=t,R}(t);this.remove(n,e),this.add(n)}forEachAlongRay(t,e,n){const o=d(t,e);S(this._root,t=>{if(!function(t,e){return T(_(e.bounds),2*-e.halfSize,y),T(_(e.bounds),2*e.halfSize,C),b(t.origin,t.direction,y,C)}(o,t))return!1;const e=t.node;return e.terminals.forAll(t=>{this._intersectsObject(o,t)&&n(t)}),null!==e.residents&&e.residents.forAll(t=>{this._intersectsObject(o,t)&&n(t)}),!0})}forEachAlongRayWithVerticalOffset(t,e,n,o){const i=d(t,e);S(this._root,t=>{if(!function(t,e,n){return T(_(e.bounds),2*-e.halfSize,y),T(_(e.bounds),2*e.halfSize,C),n.applyToMinMax(y,C),b(t.origin,t.direction,y,C)}(i,t,o))return!1;const e=t.node;return e.terminals.forAll(t=>{this._intersectsObjectWithOffset(i,t,o)&&n(t)}),null!==e.residents&&e.residents.forAll(t=>{this._intersectsObjectWithOffset(i,t,o)&&n(t)}),!0})}forEach(t){S(this._root,e=>{const n=e.node;return n.terminals.forAll(t),null!==n.residents&&n.residents.forAll(t),!0}),this._degenerateObjects.forEach(t)}forEachDegenerateObject(t){this._degenerateObjects.forEach(t)}findClosest(t,e,n,o=()=>!0,i=1/0){let h=1/0,a=1/0,d=null;const u=A(t,e),c=s=>{if(--i,!o(s))return;const r=this.objectToBoundingSphere(s);if(!l(n,r))return;const u=B(t,e,_(r)),c=u-r[3],f=u+r[3];c<h&&(h=c,a=f,d=s)};return j(this._root,o=>{if(i<=0||!l(n,o.bounds))return!1;if(s(q,u,o.halfSize),r(q,q,_(o.bounds)),B(t,e,q)>a)return!1;const h=o.node;return h.terminals.forAll(t=>c(t)),null!==h.residents&&h.residents.forAll(t=>c(t)),!0},t,e),d}forEachInDepthRange(t,e,n,o,i,h,a){let d=-1/0,u=1/0;const c={setRange:t=>{1===n?(d=Math.max(d,t.near),u=Math.min(u,t.far)):(d=Math.max(d,-t.far),u=Math.min(u,-t.near))}};c.setRange(o);const f=B(e,n,t),m=A(e,n),b=A(e,-n),p=t=>{if(!a(t))return;const o=this.objectToBoundingSphere(t),s=_(o),r=B(e,n,s)-f,m=r-o[3],b=r+o[3];m>u||b<d||!l(h,o)||i(t,c)};j(this._root,t=>{if(!l(h,t.bounds))return!1;if(s(q,m,t.halfSize),r(q,q,_(t.bounds)),B(e,n,q)-f>u)return!1;if(s(q,b,t.halfSize),r(q,q,_(t.bounds)),B(e,n,q)-f<d)return!1;const o=t.node;return o.terminals.forAll(t=>p(t)),null!==o.residents&&o.residents.forAll(t=>p(t)),!0},e,n)}forEachNode(t){S(this._root,e=>t(e.node,e.bounds,e.halfSize,e.depth))}forEachNeighbor(t,e){const n=c(e),o=_(e),s=e=>{const s=this.objectToBoundingSphere(e),r=c(s),h=n+r;return!(i(_(s),o)-h*h<=0)||t(e)};let r=!0;const h=t=>{r&&(r=s(t))};S(this._root,t=>{const e=c(t.bounds),s=n+e;if(i(_(t.bounds),o)-s*s>0)return!1;const a=t.node;return a.terminals.forAll(h),r&&null!==a.residents&&a.residents.forAll(h),r}),r&&this.forEachDegenerateObject(h)}_intersectsObject(t,e){const n=this.objectToBoundingSphere(e);return!(n[3]>0)||f(n,t)}_intersectsObjectWithOffset(t,e,n){const o=this.objectToBoundingSphere(e);return!(o[3]>0)||f(n.applyToBoundingSphere(o),t)}_add(t,e){e.advanceTo(this.objectToBoundingSphere(t))?e.node.terminals.push(t):(e.node.residents.push(t),e.node.residents.length>this._maximumObjectsPerNode&&e.depth<this._maximumDepth&&this._split(e))}_split(t){const e=t.node.residents;t.node.residents=null;for(let n=0;n<e.length;n++){const o=g.acquire().init(t);this._add(e.at(n),o),g.release(o)}}_grow(t){if(D(t,t=>this.objectToBoundingSphere(t),L),v(L[3])&&!this._fitsInsideTree(L))if(z(this._root.node))u(L,this._root.bounds),this._root.halfSize=1.25*this._root.bounds[3],this._root.updateBoundsRadiusFromHalfSize();else{const t=this._rootBoundsForRootAsSubNode(L);this._placingRootViolatesMaxDepth(t)?this._rebuildTree(L,t):this._growRootAsSubNode(t),g.release(t)}}_rebuildTree(t,e){n(_(H),_(e.bounds)),H[3]=e.halfSize,D([t,H],t=>t,J);const o=g.acquire().init(this._root);this._root.initFrom(null,J,J[3]),this._root.increaseHalfSize(1.25),S(o,t=>(this.add(t.node.terminals.data),null!==t.node.residents&&this.add(t.node.residents.data),!0)),g.release(o)}_placingRootViolatesMaxDepth(t){const e=Math.log(t.halfSize/this._root.halfSize)*Math.LOG2E;let n=0;return S(this._root,t=>(n=Math.max(n,t.depth),n+e<=this._maximumDepth)),n+e>this._maximumDepth}_rootBoundsForRootAsSubNode(t){const e=t[3],n=t;let o=-1/0;const i=this._root.bounds,s=this._root.halfSize;for(let t=0;t<3;t++){const r=i[t]-s-(n[t]-e),h=n[t]+e-(i[t]+s),a=Math.max(0,Math.ceil(r/(2*s))),l=Math.max(0,Math.ceil(h/(2*s)))+1,d=2**Math.ceil(Math.log(a+l)*Math.LOG2E);o=Math.max(o,d),V[t].min=a,V[t].max=l}for(let t=0;t<3;t++){let e=V[t].min,n=V[t].max;const r=(o-(e+n))/2;e+=Math.ceil(r),n+=Math.floor(r);const h=i[t]-s-e*s*2;F[t]=h+(n+e)*s}const r=o*s;return F[3]=r*E,g.acquire().initFrom(null,F,r,0)}_growRootAsSubNode(t){const e=this._root.node;n(_(L),_(this._root.bounds)),L[3]=this._root.halfSize,this._root.init(t),t.advanceTo(L,null,!0),t.node.children=e.children,t.node.residents=e.residents,t.node.terminals=e.terminals}_shrink(){for(;;){const t=this._findShrinkIndex();if(-1===t)break;this._root.advance(t),this._root.depth=0}}_findShrinkIndex(){if(0!==this._root.node.terminals.length||this._root.isLeaf())return-1;let t=null;const e=this._root.node.children;let n=0,o=0;for(;o<e.length&&null==t;)n=o++,t=e[n];for(;o<e.length;)if(e[o++])return-1;return n}_isDegenerate(t){return!v(this.objectToBoundingSphere(t)[3])}_fitsInsideTree(t){const e=this._root.bounds,n=this._root.halfSize;return t[3]<=n&&t[0]>=e[0]-n&&t[0]<=e[0]+n&&t[1]>=e[1]-n&&t[1]<=e[1]+n&&t[2]>=e[2]-n&&t[2]<=e[2]+n}toJSON(){const{maximumDepth:t,maximumObjectsPerNode:e,_objectCount:n}=this,o=this._nodeToJSON(this._root.node);return{maximumDepth:t,maximumObjectsPerNode:e,objectCount:n,root:{bounds:this._root.bounds,halfSize:this._root.halfSize,depth:this._root.depth,node:o}}}_nodeToJSON(t){const e=t.children.map(t=>t?this._nodeToJSON(t):null),n=t.residents?.map(t=>this.objectToBoundingSphere(t)),o=t.terminals?.map(t=>this.objectToBoundingSphere(t));return{children:e,residents:n,terminals:o}}static fromJSON(t){const e=new p(t=>t,{maximumDepth:t.maximumDepth,maximumObjectsPerNode:t.maximumObjectsPerNode});return e._objectCount=t.objectCount,e._root.initFrom(t.root.node,t.root.bounds,t.root.halfSize,t.root.depth),e}}class g{constructor(){this.bounds=m(),this.halfSize=0,this.initFrom(null,null,0,0)}init(t){return this.initFrom(t.node,t.bounds,t.halfSize,t.depth)}initFrom(t,e,n,o=this.depth){return this.node=null!=t?t:g.createEmptyNode(),e&&u(e,this.bounds),this.halfSize=n,this.depth=o,this}increaseHalfSize(t){this.halfSize*=t,this.updateBoundsRadiusFromHalfSize()}updateBoundsRadiusFromHalfSize(){this.bounds[3]=this.halfSize*E}advance(t){let e=this.node.children[t];e||(e=g.createEmptyNode(),this.node.children[t]=e),this.node=e,this.halfSize/=2,this.depth++;const n=P[t];return this.bounds[0]+=n[0]*this.halfSize,this.bounds[1]+=n[1]*this.halfSize,this.bounds[2]+=n[2]*this.halfSize,this.updateBoundsRadiusFromHalfSize(),this}advanceTo(t,e,n=!1){for(;;){if(this.isTerminalFor(t))return e&&e(this,-1),!0;if(this.isLeaf()){if(!n)return e&&e(this,-1),!1;this.node.residents=null}const o=this._childIndex(t);e&&e(this,o),this.advance(o)}}isLeaf(){return null!=this.node.residents}isTerminalFor(t){return t[3]>this.halfSize/2}_childIndex(t){const e=this.bounds;return(e[0]<t[0]?1:0)+(e[1]<t[1]?2:0)+(e[2]<t[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new e({shrink:!0}),residents:new e({shrink:!0})}}static{this._pool=new t(g)}static acquire(){return g._pool.acquire()}static release(t){g._pool.release(t)}static clearPool(){g._pool.prune()}}function S(t,e){let n=g.acquire().init(t);const o=[n];for(;0!==o.length;){if(n=o.pop(),e(n)&&!n.isLeaf())for(let t=0;t<n.node.children.length;t++)n.node.children[t]&&o.push(g.acquire().init(n).advance(t));g.release(n)}}function j(t,e,n,o=1){let i=g.acquire().init(t);const s=[i];for(function(t,e,n){if(!W.length)for(let t=0;t<8;++t)W.push({index:0,distance:0});for(let n=0;n<8;++n){const o=P[n];W.data[n].index=n,W.data[n].distance=B(t,e,o)}W.sort((t,e)=>t.distance-e.distance);for(let t=0;t<8;++t)n[t]=W.data[t].index}(n,o,G);0!==s.length;){if(i=s.pop(),e(i)&&!i.isLeaf())for(let t=7;t>=0;--t){const e=G[t];i.node.children[e]&&s.push(g.acquire().init(i).advance(e))}g.release(i)}}function x(t,e,n){k.clear();const o=n.advanceTo(e,(t,e)=>{k.push(t.node),k.push(e)})?n.node.terminals:n.node.residents;if(o.removeUnordered(t),0===o.length)for(let t=k.length-2;t>=0&&O(k.data[t],k.data[t+1]);t-=2);}function O(t,n){return n>=0&&(t.children[n]=null),!!z(t)&&(null===t.residents&&(t.residents=new e({shrink:!0})),!0)}function z(t){if(0!==t.terminals.length)return!1;if(null!==t.residents)return 0===t.residents.length;for(let e=0;e<t.children.length;e++)if(t.children[e])return!1;return!0}function M(t,e){t[0]=Math.min(t[0],e[0]-e[3]),t[1]=Math.min(t[1],e[1]-e[3]),t[2]=Math.min(t[2],e[2]-e[3])}function N(t,e){t[0]=Math.max(t[0],e[0]+e[3]),t[1]=Math.max(t[1],e[1]+e[3]),t[2]=Math.max(t[2],e[2]+e[3])}function T(t,e,n){n[0]=t[0]+e,n[1]=t[1]+e,n[2]=t[2]+e}function D(t,e,n){y[0]=1/0,y[1]=1/0,y[2]=1/0,C[0]=-1/0,C[1]=-1/0,C[2]=-1/0;for(const n of t){const t=e(n);v(t[3])&&(M(y,t),N(C,t))}o(_(n),y,C,.5),n[3]=Math.max(C[0]-y[0],C[1]-y[1],C[2]-y[2])/2}function A(t,e){let n,o=1/0;for(let i=0;i<8;++i){const s=B(t,e,w[i]);s<o&&(o=s,n=w[i])}return n}function B(t,e,n){return e*(t[0]*n[0]+t[1]*n[1]+t[2]*n[2])}function v(t){return!isNaN(t)&&t!==-1/0&&t!==1/0&&t>0}const P=[h(-1,-1,-1),h(1,-1,-1),h(-1,1,-1),h(1,1,-1),h(-1,-1,1),h(1,-1,1),h(-1,1,1),h(1,1,1)],w=[h(-1,-1,-1),h(-1,-1,1),h(-1,1,-1),h(-1,1,1),h(1,-1,-1),h(1,-1,1),h(1,1,-1),h(1,1,1)],E=Math.sqrt(3),R=[null],F=m(),q=a(),y=a(),C=a(),k=new e,I=m(),L=m(),H=m(),J=m(),V=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],W=new e,G=[0,0,0,0,0,0,0,0];export{p as O};
