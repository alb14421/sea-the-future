/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{a as t,b as e}from"./tslib.es6.js";import{P as i,a as s,G as n,b as o,f as a,D as m,E as r,p as u,w as h,u as c,F as l}from"./Point2D.js";import{y as _,G as p,N as d,H as g,I as x,Q as y,aj as P,S,ak as f,al as D,a8 as G,K as v,am as T,A as b,P as w,an as M,ad as E,R}from"./ProjectionTransformation.js";import{d as I,a as C}from"./Envelope.js";import{Envelope2D as B}from"./Envelope2D.js";import{T as A}from"./Transformation2D.js";import{s as q,w as N,m as F}from"./Distance2DCalculator-CXhBP-8I.js";import{O as X}from"./OperatorShapePreservingDensify.js";class Y{[Symbol.dispose](){this.m_peR1.destroy(),this.m_peR2.destroy(),this.m_peR3.destroy(),this.m_peR1=null,this.m_peR2=null,this.m_peR3=null}constructor(t,e,i){this.m_peR1=new g,this.m_peR2=new g,this.m_peR3=new g,void 0!==t?this.reset(t,e,i):this.reset(1,0,1)}reset(t,e,i){this.m_a=t,this.m_e2=e,this.m_b=this.m_a*Math.sqrt(1-this.m_e2),this.m_unitToDegree=i,this.m_unitToRad=.017453292519943295*i,this.m_u180=180/this.m_unitToDegree,this.m_u360=360/this.m_unitToDegree}calculateBbox(t,e,i,s){const n=this.m_peR1,o=this.m_peR2,a=this.m_peR3;x.geodeticDistance(this.m_a,this.m_e2,t*this.m_unitToRad,e*this.m_unitToRad,i*this.m_unitToRad,s*this.m_unitToRad,a,n,o,0);const m=Math.cos(n.val),r=Math.cos(o.val+3.141592653589793),u=e*this.m_unitToRad,h=R.phiToEta(this.m_e2,u),c=Math.sin(n.val)*Math.cos(h);let _=e;if(m*r<0){const t=m<0?-1:1,e=Math.acos(Math.abs(c))*t;_=R.etaToPhi(this.m_e2,e)/this.m_unitToRad}let p=l((i-t)*this.m_unitToRad,2*Math.PI);Math.abs(p)>Math.PI&&(p=p>0?p-2*Math.PI:p+2*Math.PI),p/=this.m_unitToRad,i=t+p;const d=new B;return d.xmin=Math.min(t,i),d.xmax=Math.max(t,i),d.ymin=Math.min(e,s),d.ymin=Math.min(d.ymin,_),d.ymax=Math.max(e,s),d.ymax=Math.max(d.ymax,_),d}minDistanceGeodesic(t,e){const i=k(t),s=k(e);if(i&&s)return this.lowerDistanceGeodetic_(t.xmin,t.ymin,e.xmin,e.ymin);const n=this.normalizeGeodesic_(e,t);return function(t,e){return e.xmax<t.xmin||e.xmin>t.xmax||e.ymax<t.ymin||e.ymin>t.ymax}(t,n)?t.ymin>=n.ymax?this.minDistanceGeodesicUpDown_(t,n):n.ymin>=t.ymax?this.minDistanceGeodesicUpDown_(n,t):t.xmin>n.xmax?this.minDistanceGeodesicLeftRight_(n,t):this.minDistanceGeodesicLeftRight_(t,n):0}normalizeGeodesic_(t,e){const i=t.clone(),s=t.clone();let n=O(i,e);if(0===n)return i;for(;s.xmax>e.xmin;){s.xmin-=this.m_u360,s.xmax-=this.m_u360;const t=O(s,e);if(t<n&&(i.assign(s),n=t,0===n))return i}for(s.assign(t);s.xmin<e.xmax;){s.xmin+=this.m_u360,s.xmax+=this.m_u360;const t=O(s,e);if(t<n&&(i.assign(s),n=t,0===n))return i}return i}lowerDistanceGeodetic_(t,e,i,s){const n=this.m_peR1;{const o=this.m_b*this.m_b/this.m_a,a=R.phiToPhig(this.m_e2,this.m_unitToRad*e),m=R.phiToPhig(this.m_e2,this.m_unitToRad*s);x.geodeticDistance(o,0,this.m_unitToRad*t,a,this.m_unitToRad*i,m,n,null,null,0)}return n.val}minDistanceGeodesicUpDown_(t,e){if(e.xmin<=t.xmin?e.xmax>=t.xmin:t.xmax>=e.xmin)return this.lowerDistanceGeodetic_(0,t.ymin,0,e.ymax);if(e.xmin>t.xmax){const i=this.lowerDistanceGeodeticSegMeridional_(t.xmax,t.ymin,t.ymax,e.xmin,e.ymin,e.ymax);if(e.xmax-t.xmin<this.m_u180)return i;const s=this.lowerDistanceGeodeticSegMeridional_(t.xmin,t.ymin,t.ymax,e.xmax,e.ymin,e.ymax);return Math.min(i,s)}{const i=this.lowerDistanceGeodeticSegMeridional_(t.xmin,t.ymin,t.ymax,e.xmax,e.ymin,e.ymax);if(t.xmax-e.xmin<this.m_u180)return i;const s=this.lowerDistanceGeodeticSegMeridional_(t.xmax,t.ymin,t.ymax,e.xmin,e.ymin,e.ymax);return Math.min(i,s)}}minDistanceGeodesicLeftRight_(t,e){let i=Math.abs(t.xmax-e.xmin);for(;i>this.m_u180;)i-=this.m_u360;let s=Math.abs(t.xmin-e.xmax);for(;s>this.m_u180;)s-=this.m_u360;return Math.abs(i)<=Math.abs(s)?this.minDistanceGeodesicLeftRightNormalized_(t,e):this.minDistanceGeodesicLeftRightNormalized_(e,t)}minDistanceGeodesicLeftRightNormalized_(t,e){let i,s;return i=this.lowerDistanceGeodetic_(t.xmax,t.ymin,e.xmin,e.ymin),t.ymin>=e.ymin&&t.ymin<=e.ymax&&(s=this.lowerDistanceGeodeticPtMeridional_(t.xmax,t.ymin,e.xmin,e.ymin,e.ymax),i=Math.min(i,s)),e.ymin>=t.ymin&&e.ymin<=t.ymax&&(s=this.lowerDistanceGeodeticPtMeridional_(e.xmin,e.ymin,t.xmax,t.ymin,t.ymax),i=Math.min(i,s)),s=this.lowerDistanceGeodetic_(t.xmax,t.ymax,e.xmin,e.ymax),i=Math.min(i,s),t.ymax>=e.ymin&&t.ymax<=e.ymax&&(s=this.lowerDistanceGeodeticPtMeridional_(t.xmax,t.ymax,e.xmin,e.ymin,e.ymax),i=Math.min(i,s)),e.ymax>=t.ymin&&e.ymax<=t.ymax&&(s=this.lowerDistanceGeodeticPtMeridional_(e.xmin,e.ymax,t.xmax,t.ymin,t.ymax),i=Math.min(i,s)),i}lowerDistanceGeodeticSegMeridional_(t,e,i,s,n,o){let a=this.lowerDistanceGeodeticPtMeridional_(t,e,s,n,o);const m=this.lowerDistanceGeodeticPtMeridional_(t,i,s,n,o);let r=this.lowerDistanceGeodeticPtMeridional_(s,n,t,e,i);const u=this.lowerDistanceGeodeticPtMeridional_(s,o,t,e,i);return a=Math.min(a,m),r=Math.min(r,u),Math.min(a,r)}lowerDistanceGeodeticPtMeridional_(t,e,s,n,o){const a=this.m_b*this.m_b/this.m_a,m=R.phiToPhig(this.m_e2,this.m_unitToRad*e),r=R.phiToPhig(this.m_e2,this.m_unitToRad*n),u=R.phiToPhig(this.m_e2,this.m_unitToRad*o),h=this.m_peR1,c=this.m_peR2;x.geodeticDistance(a,0,this.m_unitToRad*s,r,this.m_unitToRad*t,m,h,null,null,0),x.geodeticDistance(a,0,this.m_unitToRad*s,u,this.m_unitToRad*t,m,c,null,null,0);const l=y(1,0,new i(this.m_unitToRad*t,m)),_=y(1,0,new i(this.m_unitToRad*s,r)),p=y(1,0,new i(this.m_unitToRad*s,u));let d=new I;d.setCrossProductVector(_,p);const g=_.dotProduct(p);if(d.length()<1.568e-10)return g>=0?Math.min(h.val,c.val):0;d=d.getUnitVector();let P=new I;if(P.setCrossProductVector(d,l),P.length()<1.568e-10)return Math.min(h.val,c.val)-1e-5*a;P=P.getUnitVector();let S=l.sub(d.mul(l.dotProduct(d)));{const e=new I;e.setCrossProductVector(_,S);const i=new I;i.setCrossProductVector(S,p);let s=d.dotProduct(e)>0&&d.dotProduct(i)>0;if(s||(S.negateThis(),e.setCrossProductVector(_,S),i.setCrossProductVector(S,p),s=d.dotProduct(e)>0&&d.dotProduct(i)>0),s){S=S.getUnitVector();const e=E(1,0,S),i=this.m_peR3;x.geodeticDistance(a,0,this.m_unitToRad*t,m,e.x,e.y,i,null,null,0);const s=Math.min(h.val,c.val);return Math.min(s,i.val)}}return Math.min(h.val,c.val)}}function k(t){return t.xmin===t.xmax&&t.ymin===t.ymax}function O(t,e){let i,s=0;return i=t.xmin-e.xmax,i>s&&(s=i),i=e.xmin-t.xmax,i>s&&(s=i),s}class U{}function V(t){return{outPoint:void 0===t?new i:t.clone()}}function L(t,e){t.outPoint.assign(e.outPoint)}function j(){return new B}class H{constructor(t,e,s,n,o=0,a=4){this.m_ptDistFrom=new i,this.m_segStartPt=new i,this.m_segEndPt=new i,this.m_geodeticLength=new g,this.m_az12=new g,this.m_minGeodeticDist=new g,this.m_segStartPt3d=new I,this.m_segEndPt3d=new I,this.m_sr=n,this.m_distCurveType=o,this.m_segCurveType=a,this.m_inputGCS=this.m_sr.getGCS(),this.m_rpu=this.m_inputGCS.getUnit().getUnitToBaseFactor(),this.m_bIsPannablePcs=2===this.m_sr.getCoordinateSystemType()&&this.m_sr.isPannable();const m=_();this.m_inputGCS.querySpheroidData(m),this.m_a=m.majorSemiAxis,this.m_eSquared=m.e2,this.setPointDistFrom(t),this.setSegmentEndPoints(e,s)}setSegmentEndPoints(t,e){this.m_segStartPt.assign(t),this.m_segEndPt.assign(e),this.m_bIsPannablePcs||(this.m_segStartPt.mulThis(this.m_rpu),this.m_segEndPt.mulThis(this.m_rpu)),2===this.m_segCurveType&&(this.m_segStartPt3d.assign(y(this.m_a,this.m_eSquared,this.m_segStartPt)),this.m_segEndPt3d.assign(y(this.m_a,this.m_eSquared,this.m_segEndPt))),this.calculateAndUpdateSegmentLength()}setPointDistFrom(t){this.m_ptDistFrom.assign(t),this.m_ptDistFrom.scale(this.m_rpu)}setSegmentCurveType(t){this.m_segCurveType=t}setDistanceCurveType(t){this.m_distCurveType=t}makeFunctor(){return s=>{let n;switch(this.m_segCurveType){case 0:case 1:case 3:{const o={stack:[],error:void 0,hasError:!1};try{const e=t(o,new g,!1),a=t(o,new g,!1);x.geodeticCoordinate(this.m_a,this.m_eSquared,this.m_segStartPt.x,this.m_segStartPt.y,this.m_geodeticLength.val*s,this.m_az12.val,e,a,this.m_segCurveType),n=new i(e.val,a.val);break}catch(t){o.error=t,o.hasError=!0}finally{e(o)}}case 2:{const t=I.lerp(this.m_segStartPt3d,this.m_segEndPt3d,s);n=E(this.m_a,this.m_eSquared,t);break}case 4:n=i.lerp(this.m_segStartPt,this.m_segEndPt,s),this.m_bIsPannablePcs&&(f(this.m_sr,0,[n],1),n.mulThis(this.m_rpu));break;default:u("Invalid curve type")}return x.geodeticDistance(this.m_a,this.m_eSquared,this.m_ptDistFrom.x,this.m_ptDistFrom.y,n.x,n.y,this.m_minGeodeticDist,null,null,this.m_distCurveType),this.m_minGeodeticDist.val}}calculateAndUpdateSegmentLength(){switch(this.m_segCurveType){case 0:case 2:case 1:case 3:x.geodeticDistance(this.m_a,this.m_eSquared,this.m_segStartPt.x,this.m_segStartPt.y,this.m_segEndPt.x,this.m_segEndPt.y,this.m_geodeticLength,this.m_az12,null,this.m_segCurveType);break;case 4:this.m_geodeticLength.val=i.distance(this.m_segStartPt,this.m_segEndPt);break;default:u("Invalid curve type")}}[Symbol.dispose](){this.m_geodeticLength[Symbol.dispose](),this.m_az12[Symbol.dispose](),this.m_minGeodeticDist[Symbol.dispose]()}}function z(){return new U}class K{[Symbol.dispose](){this.m_envHelper[Symbol.dispose]()}constructor(t,e,i,s,n){this.m_boxGeomA=j(),this.m_boxGeomB=j(),this.m_envGeomA=new B,this.m_envGeomB=new B,this.m_progressCounter=0,this.m_transformPCS2GCS=null,this.m_segmentBoxesA=new Map,this.m_segmentBoxesB=new Map,this.m_boundaryPtsA=[],this.m_boundaryPtsB=[],this.m_scaleToRadians=new A,this.m_scaleToDegrees=new A,this.m_inputSR=t,this.m_distCurveType=e,this.m_progressTracker=i,this.m_maxDistance=s,this.m_maxDeviation=n,this.m_inputGCS=t.getGCS(),this.m_peGeogcs=this.m_inputGCS.getPECoordSys(),this.m_tolerance=0;const o=_();this.m_inputGCS.querySpheroidData(o),this.m_a=o.majorSemiAxis,this.m_eSquared=o.e2,this.m_rpu=this.m_inputGCS.getUnit().getUnitToBaseFactor(),this.m_envHelper=new Y(this.m_a,this.m_eSquared,1),4===this.m_distCurveType&&(this.m_distCurveType=0),this.m_boxGeomA.setEmpty(),this.m_boxGeomB.setEmpty(),this.m_envGeomA.setEmpty(),this.m_envGeomB.setEmpty(),this.m_bIsPannablePcs=2===this.m_inputSR.getCoordinateSystemType()&&this.m_inputSR.isPannable()}progress(t=!1){}calculate(t,e,i,s){const n=V(),o=V();if(t.queryEnvelope(this.m_envGeomA),e.queryEnvelope(this.m_envGeomB),this.checkGeometriesIntersect(t,e,n,o))return i&&L(i,n),s&&L(s,o),0;const a=this.prepareGeometry(t);if(a.isEmpty())return Number.NaN;const m=this.prepareGeometry(e);if(m.isEmpty())return Number.NaN;this.m_tolerance=this.computeTolerance(a,m);const r=this._ExecuteBruteForce(a,m,n,o);return r>=this.m_maxDistance?Number.NaN:(i&&(this.prepareOutput(n),L(i,n)),s&&(this.prepareOutput(o),L(s,o)),r)}createDistanceFunctor(t,e,i){const s=new H(t,e,i,this.m_inputSR,this.m_distCurveType);return this.m_bIsPannablePcs||1===this.m_inputSR.getCoordinateSystemType()||s.setSegmentCurveType(2),s}_NormalizeAndProject(t){if(this.m_inputSR.isPannable()&&(t=(new p).foldInto360Range(t,this.m_inputSR)),2===this.m_inputSR.getCoordinateSystemType()){const e=d(this.m_inputSR,this.m_inputGCS,null);t=(new p).execute(t,e,this.m_progressTracker)}return t}_ExecuteBruteForce(t,e,i,o){switch(t.getGeometryType()){case n.enumPoint:return this.calculateDistanceGeodeticPointGeometry(t,e,i,o);case n.enumMultiPoint:return this.calculateDistanceGeodeticMultipointGeometry(t,e,i,o);case n.enumPolyline:case n.enumPolygon:case n.enumEnvelope:return this.calculateDistanceGeodeticMultipathGeometry(t,e,i,o);default:s("")}}calculateDistanceGeodeticPointGeometry(t,e,i,o){switch(e.getGeometryType()){case n.enumPoint:return this.calculateDistanceGeodeticPointPoint(t,e,i,o);case n.enumMultiPoint:return this.calculateDistanceGeodeticPointMultipoint(t,e,i,o);case n.enumPolyline:case n.enumPolygon:return this.calculateDistanceGeodeticPointMultipath(t,e,i,o);default:s("")}}calculateDistanceGeodeticPointPoint(i,s,n,o){const a={stack:[],error:void 0,hasError:!1};try{const e=i.getXY();e.scale(this.m_rpu);const m=s.getXY();m.scale(this.m_rpu),n.outPoint.assign(e),o.outPoint.assign(m);const r=t(a,new g,!1);return x.geodeticDistance(this.m_a,this.m_eSquared,e.x,e.y,m.x,m.y,r,null,null,this.m_distCurveType),r.val}catch(t){a.error=t,a.hasError=!0}finally{e(a)}}calculateDistanceGeodeticPointMultipoint(s,n,o,a){const m={stack:[],error:void 0,hasError:!1};try{this.computeEnvelopesAndBoxes(s,n);const e=this.estimateMinimumDistance(o,a);let r=e<this.m_maxDistance?e:this.m_maxDistance;const u=s.getXY();u.scale(this.m_rpu),o.outPoint.assign(u);const h=y(this.m_a,this.m_eSquared,u),c=new i,l=n.getImpl(),_=t(m,new g,!1),p=l.getPointCount();for(let t=0;t<p;++t){l.queryXY(t,c),c.scale(this.m_rpu);const e=y(this.m_a,this.m_eSquared,c);if(!(I.distance(h,e)>r)&&!(this.m_envHelper.minDistanceGeodesic(this.m_boxGeomA,this.m_boxGeomB)>r)&&(x.geodeticDistance(this.m_a,this.m_eSquared,u.x,u.y,c.x,c.y,_,null,null,this.m_distCurveType),_.val<r&&(r=_.val,a.outPoint=c,0===r)))return r}return r===this.m_maxDistance?Number.POSITIVE_INFINITY:r}catch(t){m.error=t,m.hasError=!0}finally{e(m)}}calculateDistanceGeodeticPointMultipath(s,n,a,m){const r={stack:[],error:void 0,hasError:!1};try{const e=new i,u=new i;e.assign(s.getXY()),u.assign(s.getXY()),a.outPoint.assign(u.mul(this.m_rpu)),this.m_bIsPannablePcs&&P(this.m_inputSR,[e],1,!1),this.computeEnvelopesAndBoxes(s,n);const h=this.estimateMinimumDistance(a,m);let c=h<this.m_maxDistance?h:this.m_maxDistance;const l=n.getImpl(),_=new i(0,0),p=new i(0,0),d=[1],g=this.canUseSpatialTree(s,n),x=z();g&&this.buildSpatialTree(x,n);const y=j();y.setCoords({xmin:u.x,ymin:u.y,xmax:u.x,ymax:u.y});const S=t(r,this.createDistanceFunctor(u,_,p),!1),f=l.querySegmentIterator();if(f.stripAttributes(),g)o(0);else for(;f.nextPath();)for(;f.hasNextSegment();){const t=f.nextSegment(),i=this.findOrComputeBoxSegment(f.getStartPointIndex(),t,this.m_segmentBoxesB);if(this.m_envHelper.minDistanceGeodesic(y,i)>c)continue;const s=this.calculateDistanceGeodeticPointSegment(e,u,t,d,S);if(s.second<c&&(this.updateOutputSegment(m,t,s.first),c=s.second,0===c))return 0}return c===this.m_maxDistance?Number.POSITIVE_INFINITY:c}catch(t){r.error=t,r.hasError=!0}finally{e(r)}}calculateDistanceGeodeticMultipointGeometry(t,e,i,o){switch(e.getGeometryType()){case n.enumPoint:return this.calculateDistanceGeodeticPointMultipoint(e,t,o,i);case n.enumMultiPoint:return this.calculateDistanceGeodeticMultipointMultipoint(t,e,i,o);case n.enumPolyline:case n.enumPolygon:case n.enumEnvelope:return this.calculateDistanceGeodeticMultipointMultipath(t,e,i,o);default:s("")}}calculateDistanceGeodeticMultipointMultipoint(s,n,o,a){const m={stack:[],error:void 0,hasError:!1};try{const e=t(m,new g,!1);this.computeEnvelopesAndBoxes(s,n);const r=this.estimateMinimumDistance(o,a);let u=r<this.m_maxDistance?r:this.m_maxDistance;const h=new i,c=new i,l=s.getImpl(),_=n.getImpl(),p=j(),d=l.getPointCount(),P=_.getPointCount();for(let t=0;t<d;++t){if(h.assign(l.getXY(t)),p.setCoords({xmin:h.x,ymin:h.y,xmax:h.x,ymax:h.y}),this.m_envHelper.minDistanceGeodesic(p,this.m_boxGeomB)>u)continue;h.scale(this.m_rpu);const i=y(this.m_a,this.m_eSquared,h);for(let t=0;t<P;++t){c.assign(_.getXY(t)),c.scale(this.m_rpu);const s=y(this.m_a,this.m_eSquared,c);if(!(I.distance(i,s)>=u)&&(x.geodeticDistance(this.m_a,this.m_eSquared,h.x,h.y,c.x,c.y,e,null,null,this.m_distCurveType),e.val<u&&(o.outPoint.assign(h),a.outPoint.assign(c),u=e.val,0===u)))return u}}return u===this.m_maxDistance?Number.POSITIVE_INFINITY:u}catch(t){m.error=t,m.hasError=!0}finally{e(m)}}calculateDistanceGeodeticMultipointMultipath(s,n,a,m){const r={stack:[],error:void 0,hasError:!1};try{const e=n.getImpl().querySegmentIterator();e.stripAttributes(),this.computeEnvelopesAndBoxes(s,n);const u=this.estimateMinimumDistance(a,m);let h=u<this.m_maxDistance?u:this.m_maxDistance;const c=new i,l=new i(0,0),_=new i(0,0),p=new i(0,0),d=[0],g=j(),x=t(r,this.createDistanceFunctor(l,_,p),!1),y=z(),S=this.canUseSpatialTree(s,n);S&&this.buildSpatialTree(y,n);const f=s.getPointCount();for(let t=0;t<f;++t)if(c.assign(s.getXY(t)),l.assign(s.getXY(t)),this.m_bIsPannablePcs&&P(this.m_inputSR,[c],1,!1),g.setCoords({xmin:l.x,ymin:l.y,xmax:l.x,ymax:l.y}),!(this.m_envHelper.minDistanceGeodesic(g,this.m_boxGeomB)>h))if(x.setPointDistFrom(l),S)o(0);else{for(;e.nextPath();)for(;e.hasNextSegment();){const t=e.nextSegment();if(this.m_envHelper.minDistanceGeodesic(g,this.findOrComputeBoxSegment(e.getStartPointIndex(),t,this.m_segmentBoxesB))>h)continue;const i=this.calculateDistanceGeodeticPointSegment(c,l,t,d,x);if(i.second<h&&(a.outPoint.assign(l.mul(this.m_rpu)),this.updateOutputSegment(m,t,i.first),h=i.second,0===h))return 0}e.resetToFirstPath()}return h===this.m_maxDistance?Number.POSITIVE_INFINITY:h}catch(t){r.error=t,r.hasError=!0}finally{e(r)}}calculateDistanceGeodeticMultipathGeometry(t,e,i,o){switch(e.getGeometryType()){case n.enumPoint:return this.calculateDistanceGeodeticPointMultipath(e,t,o,i);case n.enumMultiPoint:return this.calculateDistanceGeodeticMultipointMultipath(e,t,o,i);case n.enumPolyline:case n.enumPolygon:case n.enumEnvelope:return this.calculateDistanceGeodeticMultipathMultipath(t,e,i,o);default:s("")}}calculateDistanceGeodeticMultipathMultipath(t,e,i,s){const n=[t],o=[e],m=this.swapGeometries(n,o),r=n[0],u=o[0];this.computeEnvelopesAndBoxes(n[0],o[0]);const h=this.estimateMinimumDistance(i,s),c=this.calculateDistanceGeodeticMultipathMultipath_(r,u,i,s,h);return m&&(s.outPoint=a(i.outPoint,i.outPoint=s.outPoint)),c}calculateDistanceGeodeticMultipathMultipath_(s,n,a,m,r=Number.MAX_VALUE){const u={stack:[],error:void 0,hasError:!1};try{let e=r;const h=new i(0,0),c=new i,l=new i(0,0),_=new i,p=new i(0,0),d=new i,g=new i,x=new i,y=[new i],P=[0],G=[0],v=j(),T=j(),b=t(u,this.createDistanceFunctor(p,h,l),!1),w=z(),M=this.canUseSpatialTree(s,n);M&&this.buildSpatialTree(w,n);const E=n.querySegmentIterator();E.stripAttributes();const R=new S,I=q(s);for(let t=0;t<I.length;++t){const i=I[t];s.getSegmentBuffer(i,R,!0);const n=R.get();if(v.assign(this.findOrComputeBoxSegment(i,n,this.m_segmentBoxesA)),M)o(0);else{if(p.assign(n.getStartXY()),d.assign(n.getStartXY()),g.assign(n.getEndXY()),x.assign(n.getEndXY()),this.m_bIsPannablePcs&&(f(this.m_inputSR,0,[d],1),f(this.m_inputSR,0,[x],1)),this.m_envHelper.minDistanceGeodesic(v,this.m_boxGeomB)>e)continue;for(;E.nextPath();){for(;E.hasNextSegment();){const t=E.nextSegment();if(h.assign(t.getStartXY()),c.assign(t.getStartXY()),l.assign(t.getEndXY()),_.assign(t.getEndXY()),n.intersect(t,y,P,G,this.m_tolerance))return this.updateOutputSegment(a,n,P[0]),this.updateOutputSegment(m,t,G[0]),0;if(this.m_bIsPannablePcs&&(f(this.m_inputSR,0,[c],1),f(this.m_inputSR,0,[_],1)),T.assign(this.findOrComputeBoxPoint(E.getStartPointIndex(),c,_,this.m_segmentBoxesB)),this.m_envHelper.minDistanceGeodesic(v,T)>e)continue;b.setSegmentEndPoints(h,l),b.setPointDistFrom(d);let i=D(b.makeFunctor(),0,1,1e-10);if(i.second<e&&(a.outPoint.assign(d.mul(this.m_rpu)),this.updateOutputSegment(m,t,i.first),e=i.second,0===e))break;if(b.setPointDistFrom(x),i=D(b.makeFunctor(),0,1,1e-10),i.second<e&&(a.outPoint.assign(x.mul(this.m_rpu)),this.updateOutputSegment(m,t,i.first),e=i.second,0===e))break;if(b.setSegmentEndPoints(p,g),b.setPointDistFrom(c),i=D(b.makeFunctor(),0,1,1e-10),i.second<e&&(this.updateOutputSegment(a,n,i.first),m.outPoint.assign(c.mul(this.m_rpu)),e=i.second,0===e))break;if(b.setPointDistFrom(_),i=D(b.makeFunctor(),0,1,1e-10),i.second<e&&(this.updateOutputSegment(a,n,i.first),m.outPoint.assign(_.mul(this.m_rpu)),e=i.second,0===e))break}if(0===e)return 0}E.resetToFirstPath()}}return e===this.m_maxDistance?Number.POSITIVE_INFINITY:e}catch(t){u.error=t,u.hasError=!0}finally{e(u)}}calculateDistanceGeodeticPointSegment(t,e,i,s,n){const o=i.getStartXY(),a=i.getEndXY();return i.intersectPoint(t,s,this.m_tolerance)?m(s[0],0):(n.setPointDistFrom(e),n.setSegmentEndPoints(o,a),D(n.makeFunctor(),0,1,1e-10))}prepareGeometry(t){let e=t.clone();const i=t.getGeometryType();if(i===n.enumPoint||i===n.enumMultiPoint)return this._NormalizeAndProject(e);if(i===n.enumEnvelope&&(e=this.envelopeToPolygon(e)),this.m_inputSR.isPannable())return this.prepareGeometryPannable(e,4);if(2===this.m_inputSR.getCoordinateSystemType()){if(e=G(e,this.m_inputSR,0,null),e.isEmpty())return e;e=(new X).execute(e,this.m_inputSR,5e4,this.m_maxDeviation/2,0,null);const t=this.m_inputSR.getSRToGCSTransform();return(new p).execute(e,t,this.m_progressTracker)}const s=new B;e.queryLooseEnvelope(s);const o=this.m_inputSR.getPannableExtent();if(s.ymin<o.ymin||s.ymax>o.ymax){const t=new B(s.xmin-1,o.ymin,s.xmax+1,o.ymax);if(e=(new v).execute(e,t,this.m_inputSR,this.m_progressTracker),e.isEmpty())return e}return s.width()>2*o.width()?(e=T(e,-2*o.width(),2*o.width(),this.m_inputSR,!0,0,!0,this.m_progressTracker),e):e}prepareGeometryPannable(t,e){const i=new B;t.queryEnvelope(i);const s=this.m_inputSR.getPannableExtent();if(s.containsEnvelope(i))return t;const n=new r;s.queryIntervalX(n);const o=new r;return i.queryIntervalX(o),n.contains(o)?b(t,this.m_inputSR):(new p).foldInto360RangeGeodetic(t,this.m_inputSR,e)}prepareOutput(t){t.outPoint.scale(1/this.m_rpu),2===this.m_inputSR.getCoordinateSystemType()&&P(this.m_inputSR,[t.outPoint],1,!1)}updateOutputSegment(t,e,i){e.queryCoord2D(i,t.outPoint),this.m_bIsPannablePcs&&f(this.m_inputSR,0,[t.outPoint],1),t.outPoint.mulThis(this.m_rpu)}computeTolerance(t,e){t.queryEnvelope(this.m_envGeomA),e.queryEnvelope(this.m_envGeomB);const i=new B(this.m_envGeomA);return i.mergeEnvelope2D(this.m_envGeomB),C(null,i)}envelopeToPolygon(t){const e=new w;return e.addEnvelope(t,!1),e}computeEnvelopesAndBoxes(t,e){t.queryEnvelope(this.m_envGeomA),e.queryEnvelope(this.m_envGeomB),this.m_boxGeomA=this.computeBoxGeometry(t,this.m_boundaryPtsA,this.m_segmentBoxesA),this.m_boxGeomB=this.computeBoxGeometry(e,this.m_boundaryPtsB,this.m_segmentBoxesB)}computeBoxGeometry(t,e,i){switch(t.getGeometryType()){case n.enumPoint:return this.computeBoxPoint(t,e);case n.enumMultiPoint:return this.computeBoxMultiPoint(t,e);case n.enumPolyline:case n.enumPolygon:return this.computeBoxMultiPath(t,e,i);default:u("Invalid geometry type")}}computeBoxPoint(t,e){const i=t.getXY();e.length=0,e.push(i.mul(this.m_rpu));const s=j();return s.setCoords({xmin:i.x,ymin:i.y,xmax:i.x,ymax:i.y}),s}computeBoxMultiPoint(t,e){let i=!0;for(let s=0;s<t.getPointCount();++s){const n=t.getXY(s);if(i){e.length=0;for(let t=0;t<4;++t)e.push(n.clone());i=!1}n.x<e[0].x&&e[0].assign(n),n.y>e[1].y&&e[1].assign(n),n.x>e[2].x&&e[2].assign(n),n.y<e[3].y&&e[3].assign(n)}for(let t=0;t<e.length;++t)e[t].mulThis(this.m_rpu);const s=j();return t.queryEnvelope(s),s}computeBoxMultiPath(t,e,i){let s=!0;const n=j();n.setEmpty();const o=t.querySegmentIterator();for(o.stripAttributes();o.nextPath();)for(;o.hasNextSegment();){const t=o.nextSegment(),a=t.getStartXY(),m=t.getEndXY();if(this.m_bIsPannablePcs&&(f(this.m_inputSR,0,[a],1),f(this.m_inputSR,0,[m],1)),s){for(let t=0;t<4;++t)e.push(a.clone());s=!1}a.x<e[0].x&&e[0].assign(a),a.y>e[1].y&&e[1].assign(a),a.x>e[2].x&&e[2].assign(a),a.y<e[3].y&&e[3].assign(a),m.x<e[0].x&&e[0].assign(m),m.y>e[1].y&&e[1].assign(m),m.x>e[2].x&&e[2].assign(m),m.y<e[3].y&&e[3].assign(m);const r=this.findOrComputeBoxPoint(o.getStartPointIndex(),a,m,i);n.mergeEnvelope2D(r)}for(let t=0;t<e.length;++t)e[t].mulThis(this.m_rpu);return n}findOrComputeBoxSegment(t,e,s){if(!s.has(t)){let n=j();if(e.queryEnvelope(n),this.m_bIsPannablePcs){const t=i.construct(n.xmin,n.ymin),e=i.construct(n.xmax,n.ymax);f(this.m_inputSR,0,[t],1),f(this.m_inputSR,0,[e],1),n=this.m_envHelper.calculateBbox(t.x,t.y,e.x,e.y)}return s.set(t,n),n}return s.get(t)}findOrComputeBoxPoint(t,e,i,s){if(!s.has(t)){let n=j();return n.setCoords({xmin:e.x,ymin:e.y,xmax:i.x,ymax:i.y}),this.m_bIsPannablePcs&&(n=this.m_envHelper.calculateBbox(n.xmin,n.ymin,n.xmax,n.ymax)),s.set(t,n),n}return s.get(t)}estimateMinimumDistance(i,s){const n={stack:[],error:void 0,hasError:!1};try{const e=t=>y(this.m_a,this.m_eSquared,t),o=this.m_boundaryPtsA.map(e),a=this.m_boundaryPtsB.map(e);let m=Number.MAX_VALUE,r=0,u=0;for(let t=0;t<o.length;++t)for(let e=0;e<a.length;++e){const i=I.distance(o[t],a[e]);i<m&&(m=i,r=t,u=e)}i.outPoint.assign(this.m_boundaryPtsA[r]),s.outPoint.assign(this.m_boundaryPtsB[u]);const h=t(n,new g,!1);return x.geodeticDistance(this.m_a,this.m_eSquared,this.m_boundaryPtsA[r].x,this.m_boundaryPtsA[r].y,this.m_boundaryPtsB[u].x,this.m_boundaryPtsB[u].y,h,null,null,this.m_distCurveType),h.val}catch(t){n.error=t,n.hasError=!0}finally{e(n)}}swapGeometries(t,e){return h(t[0])>h(e[0])&&(e[0]=a(t[0],t[0]=e[0]),this.m_envGeomB=a(this.m_envGeomA,this.m_envGeomA=this.m_envGeomB),!0)}canUseSpatialTree(t,e){return!1}checkGeometriesIntersect(t,e,i,s){let o=t.getGeometryType(),a=e.getGeometryType();if(this.m_envGeomA.isIntersecting(this.m_envGeomB)){if(o===n.enumPoint&&2===e.getDimension()){const n=[0],o=[t.getXY()];if(M(e,o,1,this.m_tolerance,n),0!==n[0])return i.outPoint.assign(o[0]),s.outPoint.assign(o[0]),!0}else if(a===n.enumPoint&&2===t.getDimension()){const n=[2],o=[e.getXY()];if(M(t,o,1,this.m_tolerance,n),0!==n[0])return i.outPoint.assign(o[0]),s.outPoint.assign(o[0]),!0}if(o===n.enumMultiPoint&&2===e.getDimension())return this.multipointIntersectsArea(t,e,i,s);if(a===n.enumMultiPoint&&2===t.getDimension())return this.multipointIntersectsArea(e,t,s,i);let m,r,u=t,h=e;if(o===n.enumEnvelope&&(m=this.envelopeToPolygon(t),u=m,o=n.enumPolygon),a===n.enumEnvelope&&(r=this.envelopeToPolygon(e),h=r,a=n.enumPolygon),c(o)&&c(a)){const t=u.querySegmentIterator(),e=h.querySegmentIterator(),n=F(),o=F();if(N(u,h,t,e,n,o))return i.outPoint.assign(n.outPoint),s.outPoint.assign(n.outPoint),!0}}return!1}multipointIntersectsArea(t,e,i,s){const n=t.getPointCount();for(let o=0;o<n;++o){const n=[2],a=t.getXY(o);if(M(e,[a],1,this.m_tolerance,n),0!==n[0])return i.outPoint.assign(a),s.outPoint.assign(a),!0}return!1}getNearestNeighbourVisitor(t,e,i,s,n,a,m){return o(0),{}}buildSpatialTree(t,e){o(0)}}export{K as G,H as a,V as m};
