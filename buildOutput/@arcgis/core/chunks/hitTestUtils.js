/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{Evented as t}from"../core/Evented.js";import{h as i,i as s}from"../core/lang.js";import{r}from"./rbush.js";import{w as n,k as a,c as o}from"./aaBoundingRect.js";import{h as l}from"./unitUtils.js";import{T as d}from"./Tile.js";import{c as h}from"./TileStrategy.js";import{T as p}from"./TileKey2.js";import c from"../Graphic.js";import{i as u}from"../core/Handles.js";import{c as m}from"./clippingUtils.js";import{i as y,a as f}from"./screenUtils2.js";function g(){return Promise.all([import("./webglDeps.js"),import("./mapViewDeps.js")])}const w=()=>g().then(()=>import("./TileLayerView2D.js")),j=()=>g().then(()=>import("./FeatureLayerView2D.js").then(e=>e.a)),V={"base-dynamic":()=>g().then(()=>import("./BaseDynamicLayerView2D.js")),"base-tile":w,"bing-maps":w,catalog:()=>g().then(()=>import("./CatalogLayerView2D.js")),"catalog-dynamic-group":()=>g().then(()=>import("./CatalogDynamicGroupLayerView2D.js")),"catalog-footprint":()=>g().then(()=>import("./CatalogFootprintLayerView2D.js")),csv:j,"geo-rss":()=>g().then(()=>import("./GeoRSSLayerView2D.js")),feature:j,geojson:j,parquet:j,graphics:()=>g().then(()=>import("./GraphicsLayerView2D.js")),group:()=>g().then(()=>import("./GroupLayerView2D.js")),imagery:()=>g().then(()=>import("./ImageryLayerView2D.js")),"imagery-tile":()=>g().then(()=>import("./ImageryTileLayerView2D.js")),kml:()=>g().then(()=>import("./KMLLayerView2D.js")),"knowledge-graph":()=>g().then(()=>import("./KnowledgeGraphLayerView2D.js")),"link-chart":()=>g().then(()=>import("./KnowledgeGraphLayerView2D.js")),"knowledge-graph-sublayer":j,"map-image":()=>g().then(()=>import("./MapImageLayerView2D.js")),"map-notes":()=>g().then(()=>import("./MapNotesLayerView2D.js")),media:()=>g().then(()=>import("./MediaLayerView2D.js")),"ogc-feature":()=>g().then(()=>import("./OGCFeatureLayerView2D.js")),"open-street-map":w,"oriented-imagery":j,route:()=>g().then(()=>import("./RouteLayerView2D.js")),stream:()=>g().then(()=>import("./StreamLayerView2D.js")),"subtype-group":()=>g().then(()=>import("./SubtypeGroupLayerView2D.js")),tile:w,"vector-tile":()=>g().then(()=>import("./VectorTileLayerView2D.js")),video:()=>g().then(()=>import("./VideoLayerView2D.js")),wcs:()=>g().then(()=>import("./ImageryTileLayerView2D.js")),"web-tile":w,wfs:j,wms:()=>g().then(()=>import("./WMSLayerView2D.js")),wmts:()=>g().then(()=>import("./WMTSLayerView2D.js")),"base-elevation":null,"building-scene":null,dimension:null,elevation:null,"gaussian-splat":null,"integrated-mesh-3dtiles":null,"integrated-mesh":null,"line-of-sight":null,"point-cloud":null,scene:null,unknown:null,unsupported:null,viewshed:null,voxel:null},L={hasLayerViewModule:e=>null!=V[e.type],importLayerView:t=>{const i=V[t.type];if(null==i)throw function(t){const i=t.declaredClass?t.declaredClass.slice(t.declaredClass.lastIndexOf(".")+1):"Unknown",s=i.replaceAll(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();return new e(`${s}:view-not-supported`,`${i} is not supported in 2D`)}(t);return i(t)}},D={added:[],removed:[]},b=new Set,v=new p(0,0,0,0);class S extends t{constructor(e){super(),this._tiles=new Map,this._index=r(9,i("esri-csp-restrictions")?e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}):[".bounds[0]",".bounds[1]",".bounds[2]",".bounds[3]"]),this.tiles=[],this.tileScheme=e}destroy(){super.destroy(),this.clear()}clear(){this.tiles.length=0,this._tiles.clear(),this._index.clear()}has(e){return this._tiles.has(e)}get(e){return this._tiles.get(e)}getIntersectingTiles(e){if(!e||0===n(e)||0===a(e))return[];const t=function(e,t){const i=l(t);if(!i)return null;const[s,r]=i.valid;return e[2]>r?[o([e[0],e[1],r,e[3]]),o([s,e[1],s+e[2]-r,e[3]])]:e[0]<s?[o([s,e[1],e[2],e[3]]),o([r-(s-e[0]),e[1],r,e[3]])]:null}(e,this.tileScheme.spatialReference);return null!=t?[...new Set([...this.boundsIntersections(t[0]),...this.boundsIntersections(t[1])])]:this.boundsIntersections(e)}boundsIntersections(e){return this._index.search({minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]})}updateTiles(e){const t={added:[],removed:[]};for(const i of e.added)if(!this.has(i)){const e=new d(this.tileScheme,i);this._tiles.set(i,e),this._index.insert(e),t.added.push(e)}for(const i of e.removed)if(this.has(i)){const e=this.get(i);this._tiles.delete(i),this._index.remove(e),t.removed.push(e)}this.tiles.length=0,this._tiles.forEach(e=>this.tiles.push(e)),(t.added.length||t.removed.length)&&this.emit("update",t)}setViewState(e){const t=this.tileScheme.getTileCoverage(e,0);if(!t)return;const{spans:i,lodInfo:s}=t,{level:r}=s;if(i.length>0)for(const{row:e,colFrom:t,colTo:n}of i)for(let i=t;i<=n;i++){const t=v.set(r,e,s.normalizeCol(i),s.getWorldForColumn(i)).id;if(b.add(t),!this.has(t)){const e=new d(this.tileScheme,t);this._tiles.set(t,e),this._index.insert(e),this.tiles.push(e),D.added.push(e)}}for(let e=this.tiles.length-1;e>=0;e--){const t=this.tiles[e];b.has(t.id)||(this._tiles.delete(t.id),this.tiles.splice(e,1),this._index.remove(t),D.removed.push(t))}(D.added.length||D.removed.length)&&this.emit("update",D),h.pool.release(t),b.clear(),D.added.length=0,D.removed.length=0}}async function x(e,t,i){const r=y(t)?f(e,t):t;if(!e.ready||isNaN(r.x)||isNaN(r.y))return{screenPoint:r,results:[]};let n=new Set;const a=new Set;let o=!1,l=null,d=null;i?.include?_(i.include,T(e,e=>{n.add(e),C(e,e=>a.add(e))},(e,t)=>{a.add(e),n.add(t)},e=>{l||(l=new Set),l.add(e)},e=>n.add(e),()=>o=!0)):(o=!0,n=new Set(e.allLayerViews),n.forEach(e=>{C(e,e=>a.add(e))})),i?.exclude&&_(i.exclude,T(e,e=>{n.delete(e),C(e,e=>a.delete(e))},e=>a.delete(e),e=>{d||(d=new Set),d.add(e)}));const h=e.toMap(r),p=e.allLayerViews.filter(t=>!t.suspended&&n.has(t)&&t.clips.every(t=>m(e,t,r,h))).reverse();let c=[...o?e.graphicsView.hitTest(h).map(e=>({type:"graphic",graphic:e,layer:null,mapPoint:h})):[],...await Promise.all(p.map(e=>e.hitTest(h,r)).toArray())].filter(s).flat().filter(s);return c=c.filter(e=>"graphic"!==e.type||"subtype-group"!==e.layer?.type||a.has(e.graphic.layer)),l&&(c=c.filter(e=>!("graphic"in e)||!e.graphic||l?.has(I(e.graphic)))),d&&(c=c.filter(e=>!("graphic"in e)||!e.graphic||!d?.has(I(e.graphic)))),{screenPoint:r,results:c}}function T(e,t,i,s,r,n){return a=>{if(a instanceof c){if(a.layer===e)n?.();else{const t=e.allLayerViews.find(e=>e.layer===a.layer);t&&r?.(t)}s(I(a))}else if("layer"in a&&"element"in a);else if("subtype-sublayer"===a.type){const t=e.allLayerViews.find(e=>e.layer===a.parent);t&&i(a,t)}else{const i=e.allLayerViews.find(e=>e.layer===a);i&&t(i)}}}function _(e,t){if(e)if(u(e))for(const i of e)if(u(i))for(const e of i)t(e);else t(i);else t(e)}function I(e){const t=e.getObjectId();return t?`${e.layer?.uid??e.sourceLayer?.uid??"MapView"}/${t}`:`"MapView/${e.uid}`}function C(e,t){const i=e.layer;"subtype-group"===i?.type&&i.sublayers.forEach(e=>{t(e)})}export{S as T,x as h,L as l};
