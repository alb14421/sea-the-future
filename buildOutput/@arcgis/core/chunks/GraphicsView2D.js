/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import e from"../core/Accessor.js";import{h as s,i}from"../core/lang.js";import{IdentifiableMixin as r}from"../core/Identifiable.js";import{b as o}from"./maybe.js";import{ignoreAbortErrors as a,throwIfAborted as n}from"../core/promiseUtils.js";import{watch as h}from"../core/reactiveUtils.js";import{property as c}from"../core/accessorSupport/decorators/property.js";import"./Logger.js";import{subclass as d}from"../core/accessorSupport/decorators/subclass.js";import{e as u,w as l,k as p,c as m,l as y,h as f}from"./aaBoundingRect.js";import{getJsonType as _,isExtent as g,isPolyline as b,isPolygon as S}from"../geometry/support/jsonUtils.js";import v from"../layers/support/FieldsIndex.js";import{p as w,H as I,b as x,c as M,s as R,C}from"./CIMSymbolHelper.js";import{OverrideHelper as j}from"./OverrideHelper.js";import{e as E,f as P,h as T}from"./defaults.js";import{p as k,y as G,z as D,A as U,x as z}from"./definitions.js";import{F}from"./WGLContainer.js";import{C as A,A as O,R as B,M as q}from"./ComputedAttributeStorage.js";import{g as V,c as L,a as H,b as $,d as W,e as Z,f as N,h as X,i as Q,j as Y,k as J,l as K,n as tt,F as et,m as st}from"./FeatureCommandQueue.js";import{b as it,G as rt}from"./FeatureMetadata.js";import{a as ot,p as at}from"../geometry/Polygon.js";import{b as nt,h as ht,q as ct}from"./featureConversionUtils.js";import{O as dt}from"./OptimizedGeometry.js";import{p as ut}from"./screenUtils.js";import{r as lt}from"./rbush.js";import{normalizeMapX as pt}from"../geometry/support/normalizeUtils.js";import{h as mt}from"./unitUtils.js";import{c as yt}from"./memoryEstimations.js";import{c as ft}from"./boundsUtils.js";import{j as _t}from"./coordsUtils.js";import{a as gt}from"./normalizeUtilsSync.js";import{i as bt,g as St,a as vt,b as wt,c as It,d as xt,e as Mt,f as Rt,h as Ct,j as jt,k as Et,p as Pt,l as Tt,m as kt,n as Gt}from"./ellipticArc7Utils.js";import{b as Dt,c as Ut,d as zt,h as Ft,i as At}from"./dehydratedFeatures.js";import{c as Ot,p as Bt}from"./projectionSupport.js";import{U as qt}from"./UpdateTracking2D.js";class Vt extends it{static from(t,e,s){return new Vt(t,e,s)}constructor(t,e,s){super(s),this._items=t,this._tile=e,this._index=-1,this._cachedGeometry=null;const i=e.lod;i.wrap&&(this._wrappingInfo={worldSizeX:i.worldSize[0]})}get _current(){return this._items[this._index]}getItem(){return this._current}getZOrder(){return this._current.zOrder}getMeshWriters(){return this._current.symbolResource?.symbolInfo.meshWriters??[]}hasField(t){return null!=this._current.attributes[t]}field(t){return this.readAttribute(t)}get geometryType(){const t=_(this._current.geometry);return"esriGeometryPoint"===t?"esriGeometryMultipoint":t}getCursor(){return this.copy()}copy(){const t=new Vt(this._items,this._tile,this.metadata);return this.copyInto(t),t}copyInto(t){super.copyInto(t),t._cachedGeometry=this._cachedGeometry,t._index=this._index}get fields(){throw new Error("Fields reading not supported to graphics.")}get hasFeatures(){return!!this._items.length}get hasNext(){return this._index+1<this._items.length}get exceededTransferLimit(){throw new Error("InternalError: exceededTransferLimit not implemented for graphics.")}get hasZ(){return!1}get hasM(){return!1}get usedMemory(){return this._current.usedMemory}getInTransform(){return this._tile.transform}getSize(){return this._items.length}getAttributeHash(){let t="";for(const e in this._current.attributes)t+=this._current.attributes[e];return t}getObjectId(){return this._items[this._index].objectId}getDisplayId(){return this._current.displayId}setDisplayId(t){throw new Error("InternalError: Setting displayId not supported for graphics.")}setIndex(t){this._index=t}getIndex(){return this._index}next(){for(this._cachedGeometry=null;++this._index<this._items.length&&!this._getExists(););return this._index<this._items.length}readGeometryArea(){throw new Error("InternalError: readGeometryArea not supported for graphics.")}_readGeometry(){if(!this._cachedGeometry){let t=nt(this._current.projectedGeometry,this.hasZ,this.hasM);if("esriGeometryPolyline"===this.geometryType&&(t=ht(new dt,t,this.hasZ,this.hasM,this.geometryType,this._tile.transform.scale[0])),this._cachedGeometry=ct(new dt,t,this.hasZ,this.hasM,this.geometryType,this._tile.transform),!this._cachedGeometry)return null;this._wrapGeometry(this._cachedGeometry)}return this._cachedGeometry}_wrapGeometry(t){if(!this._wrappingInfo)return;const{worldSizeX:e}=this._wrappingInfo;if(t.isPoint)return 1===e?(t.coords.push(k,0),t.coords.push(2*-k,0),void t.lengths.push(3)):2===e?(t.coords.push(2*k,0),t.coords.push(4*-k,0),void t.lengths.push(3)):void this._wrapVertex(t.coords,0,2,e);if("esriGeometryMultipoint"!==this.geometryType);else{if(1===e){const e=t.coords.slice();e[0]-=512;const s=t.coords.slice();s[0]+=512,t.coords.push(...e,...s);const i=t.lengths[0];return void t.lengths.push(i,i)}this._wrapVertex(t.coords,0,2,e)}}_wrapVertex(t,e,s,i){const r=e*s,o=t[r];o<-k*(i-2)?t[r]=o+k*i:o>k*(i-1)&&(t[r]=o-k*i)}_readX(){const t=this._readGeometry();return null!=t?t.coords[0]:0}_readY(){const t=this._readGeometry();return null!=t?t.coords[1]:0}_readServerCentroid(){switch(this.geometryType){case"esriGeometryPolygon":{const t=at(this._current.projectedGeometry),e=new dt([],t);return ct(new dt,e,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}case"esriGeometryPolyline":{const t=this._current.projectedGeometry,e=ot(t.paths,this.hasZ),s=new dt([],e);return ct(new dt,s,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}}return null}_readAttribute(t,e){const s=this._current.attributes[t];if(void 0!==s)return s;const i=t.toLowerCase();for(const t in this._current.attributes)if(t.toLowerCase()===i)return this._current.attributes[t]}_readAttributes(){return this._current.attributes}}const Lt={maxSegmentLength:1/0,maxDeviation:1/0,maxSegmentsPerCurve:12e3,minSegmentsPerCurve:1},Ht=1e-6,$t=[0,0];class Wt{constructor(t,e){this.curveStart=t,this.curveEnd=e,this.tStart=0,this.tEnd=0,this.tEndStack=[],this.arcEndStack=[]}get stackSize(){return this.tEndStack.length}initialize(t,e){this.tStart=0,this.arcStart=t,this.tEndStack.push(1),this.arcEndStack.push(e)}splitAt(t){this.tEndStack.push(this.tEnd),this.arcEndStack.push(this.arcEnd),this.tEndStack.push(t),this.arcEndStack.push(this.interpolate(t))}splitInHalf(){return this.splitAt((this.tStart+this.tEnd)/2)}pop(){this.tEnd=this.tEndStack.pop(),this.arcEnd=this.arcEndStack.pop()}next(){this.tStart=this.tEnd,this.arcStart=this.arcEnd}densify(t,{maxDeviation:e,maxSegmentLength:s,maxSegmentsPerCurve:i,minSegmentsPerCurve:r}){const o=s*s,a=e*e,n=1/i,h=this.interpolate(0),c=this.interpolate(1);Tt(this.curveStart,h)>Ht&&t.push(h),this.initialize(h,c);const d=1/r;for(let t=r-1;t>0;t--){const e=t*d;this.pop(),this.splitAt(e)}for(;this.stackSize>0;)this.pop(),this.tStart===this.tEnd||this.tEnd-this.tStart<n||(0===o||!isFinite(o)||Tt(this.arcStart,this.arcEnd)<o)&&(0===a||!isFinite(a)||this.getDeviation2()<a)?(t.push(this.arcEnd),this.next()):this.splitInHalf();return Tt(this.curveEnd,c)>Ht&&t.push([...this.curveEnd]),t}}class Zt extends Wt{constructor(t,e){const[s,i,r]=e.b;super(t,s),this._controlPointsStack=[],this._curveControlPoints=[i,r],this._arcControlPoints=[i,r],this._controlPointsStack.push(this._arcControlPoints)}splitAt(t){const{arcStart:e,arcEnd:s,tStart:i,tEnd:r}=this,[o,a]=this._arcControlPoints,n=(t-i)/(r-i),h=jt([],e,o,n),c=jt($t,o,a,n),d=jt([],a,s,n),u=jt([],h,c,n),l=jt([],c,d,n),p=jt([],u,l,n);this.tEndStack.push(this.tEnd),this.arcEndStack.push(this.arcEnd),this._controlPointsStack.push([l,d]),this.tEndStack.push(t),this.arcEndStack.push(p),this._arcControlPoints[0]=h,this._arcControlPoints[1]=u,this._controlPointsStack.push(this._arcControlPoints)}pop(){super.pop(),this._arcControlPoints=this._controlPointsStack.pop()}interpolate(t){const{curveStart:e,curveEnd:s}=this,[i,r]=this._curveControlPoints;return Et(e,i,r,s,t)}getDeviation2(){const{arcStart:t,arcEnd:e}=this,[s,i]=this._arcControlPoints;return Math.max(Pt(s,t,e),Pt(i,t,e))}}class Nt extends Wt{constructor(t,e){const[s]=e.a;super(t,s),this._derivedEllipse=kt(t,e)}pop(){super.pop(),this._tMid=(this.tStart+this.tEnd)/2,this._arcMid=this.interpolate(this._tMid)}splitInHalf(){this.tEndStack.push(this.tEnd),this.arcEndStack.push(this.arcEnd),this.tEndStack.push(this._tMid),this.arcEndStack.push(this._arcMid)}interpolate(t){return Gt(this._derivedEllipse,t)}getDeviation2(){return Pt(this._arcMid,this.arcStart,this.arcEnd)}}function Xt(t,e,s,{cx:i,cy:r,radius:o,thetaStart:a,thetaEnd:n,isInvalid:h},{maxDeviation:c,maxSegmentLength:d,maxSegmentsPerCurve:u,minSegmentsPerCurve:l}){if(h)return t.push([...s]),t;const p=2*o,m=[i+o*Math.cos(a),r+o*Math.sin(a)],y=[i+o*Math.cos(n),r+o*Math.sin(n)];Tt(e,m)>Ht&&t.push(m);const f=Math.abs(n-a),_=d<p?2*Math.asin(d/p):f,g=c<=o?2*Math.acos(1-c/o):f,b=Math.min(_,g),S=Math.min(u,Math.max(l,Math.ceil(Math.abs(f/b)))),v=1/S;for(let e=1;e<S;e++){const s=e*v,h=a*(1-s)+n*s;t.push([i+o*Math.cos(h),r+o*Math.sin(h)])}return t.push(y),Tt(s,y)>Ht&&t.push([...s]),t}function Qt(t,e,s,i){return wt(s)?(t.push([...s]),t):It(s)?function(t,e,s,i){return new Zt(e,s).densify(t,i)}(t,e,s,i):xt(s)?function(t,e,s,i){const r=Rt(e,s),[o]=s.c;return Xt(t,e,o,r,i)}(t,e,s,i):Mt(s)?function(t,e,s,i){const r=Ct(e,s),[o]=s.a;return Xt(t,e,o,r,i)}(t,e,s,i):function(t,e,s,i){const[r,o,a,n,h,c,d]=s.a;return 0===c||0===d?(t.push([...r]),t):new Nt(e,s).densify(t,i)}(t,e,s,i)}function Yt(t,e){if(!bt(t))return t;const s=St(t),i=[];for(const t of s){const s=[];for(let i=0,r=1;r<t.length;i=r++){const o=[...vt(t[i])];0===i&&s.push(o),Qt(s,o,t[r],{maxSegmentLength:e.maxSegmentLength??Lt.maxSegmentLength,maxDeviation:e.maxDeviation??Lt.maxDeviation,maxSegmentsPerCurve:e.maxSegmentsPerCurve??Lt.maxSegmentsPerCurve,minSegmentsPerCurve:Math.max(e.minSegmentsPerCurve??Lt.minSegmentsPerCurve,1)})}i.push(s)}return"curvePaths"in t?{paths:i,spatialReference:t.spatialReference}:{rings:i,spatialReference:t.spatialReference}}class Jt{static fromGraphic(t,e,s,i){return new Jt(t.geometry,e,t.attributes,t.visible,t.uid,t.version,s,i)}constructor(t,e,s,i,r,o,a,n){this.geometry=t,this.symbol=e,this.attributes=s,this.visible=i,this.objectId=r,this._version=o,this.zOrder=a,this.displayId=n,this.symbolBounds=u(),this.prevSymbolBounds=u(),this.size=[0,0,0,0],this.geometryBounds=u(),this._isDensificationDirty=!1,this._densificationDeviation=1/0}get projectedGeometry(){return this._projectedGeometry}get linearCIM(){return this.symbolResource?.symbolInfo.linearCIM}get usedMemory(){return 128+yt(this.attributes)+Dt(this.geometry)}get hasAnimations(){const{linearCIM:t}=this;return!!t&&t.some(t=>"animationParams"in t&&!!t.animationParams)}get hasCurvedGeoemtry(){return null!=this.geometry&&"mesh"!==this.geometry.type&&bt(this.geometry)}update(t,e,s){return(this._version!==t.version||this.zOrder!==s||this.symbol!==e)&&(this.prevSymbolBounds=this.symbolBounds,this.symbolBounds=u(),this.zOrder=s,this.geometry=t.geometry,this.attributes=t.attributes,this.symbol=e,this.visible=t.visible,this._version=t.version,this.symbolResource=null,this._projectedGeometry=null,u(this.geometryBounds),this._minDensificationDeviation=null,this._isDensificationDirty=!0,!0)}updateDensificationResolution(t){if(!this.hasCurvedGeoemtry)return!1;const e=Math.max(function(t){return 2**Math.round(Math.log2(t))*Ft()}(t),this._minDensificationDeviation??0);return e!==this._densificationDeviation&&(this._densificationDeviation=e,this._isDensificationDirty=!0,!0)}async projectAndNormalize(t){let e,s=this.geometry;if(s&&s.spatialReference&&"mesh"!==s.type&&("extent"===s.type&&(s=w(s)),e=bt(s)?Yt(s,{maxSegmentLength:1/0,minSegmentsPerCurve:Ut()}):s.toJSON(),this._projectedGeometry=await Kt(e,s.spatialReference,t),ft(this.geometryBounds,this._projectedGeometry),this.hasCurvedGeoemtry&&null!=this._projectedGeometry)){const t=l(this.geometryBounds),e=p(this.geometryBounds);this._minDensificationDeviation=function(t,e){if(t>0&&e>0){const s=Math.min(t,e)/2,i=2*Math.PI/At();return s*(1-Math.cos(i/2))}return null}(t,e)}}async densifyCurvedGeometryForDisplay(t){if(!this.hasCurvedGeoemtry||!this._isDensificationDirty)return;this._isDensificationDirty=!1;const e=this.geometry;if(!e||!e.spatialReference||"mesh"===e.type)return;const s=t.metersPerUnit/e.spatialReference.metersPerUnit,i=Yt(e,{maxDeviation:this._densificationDeviation*s,minSegmentsPerCurve:zt()});this._projectedGeometry=await Kt(i,e.spatialReference,t)}}async function Kt(t,e,s){await Ot(t.spatialReference,s);const i=gt(t);if(!i)return;const r=Bt(i,e,s);return r&&_t(r),g(r)?w(r):r}class te{constructor(t,e,s){this.added=t,this.updated=e,this.removed=s}hasAnyUpdate(){return!!(this.added.length||this.updated.length||this.removed.length)}}const ee=1e-5;function se(t,e){return e.zOrder-t.zOrder}class ie{constructor(t,e,s,i,r){this._items=new Map,this._boundsDirty=!1,this._outSpatialReference=t,this._cimResourceManager=e,this._hittestDrawHelper=new I(e),this._tileInfoView=s,this._store=r;const o=s.getClosestInfoForScale(i);this._resolution=this._tileInfoView.getTileResolution(o.level)}destroy(){this._hittestDrawHelper.destroy()}items(){return this._items.values()}getItem(t){return this._items.get(t)}async update(t,e,s){const i=[],r=[],o=[],a=new Set,n=[];let h=0;for(const o of t.items){h++;const t=o.uid,c=this._items.get(t),d=e(o);if(a.add(t),c){const t=c.update(o,d,h),e=c.updateDensificationResolution(this._resolution);t&&n.push(this._updateItem(c,s)),(t||e)&&r.push(c);continue}const u=this._store.createDisplayIdForObjectId(t),l=Jt.fromGraphic(o,d,h,u);l.updateDensificationResolution(this._resolution),n.push(this._updateItem(l,s)),this._items.set(l.objectId,l),i.push(l)}for(const[t,e]of this._items.entries())a.has(t)||(this._store.releaseDisplayIdForObjectId(t),this._items.delete(t),o.push(e));return await Promise.all(n),this._index=null,new te(i,r,o)}updateLevel(t){if(this._resolution===t)return!1;this._index=null,this._boundsDirty=!0,this._resolution=t;for(const t of this.items())if(t.hasCurvedGeoemtry)return!0;return!1}hitTest(t,e,i,r,o){const a=s("esri-mobile"),n=a?D:U,h=n+(a?0:G);t=pt(t,this._tileInfoView.spatialReference);const c=r*window.devicePixelRatio*h,d=m();d[0]=t-c,d[1]=e-c,d[2]=t+c,d[3]=e+c;const u=r*window.devicePixelRatio*n,l=m();l[0]=t-u,l[1]=e-u,l[2]=t+u,l[3]=e+u;const p=.5*r*(h+x),f=this._searchIndex(t-p,e-p,t+p,e+p);if(!f||0===f.length)return[];const _=[],g=m(),b=m();for(const t of f){if(!t.visible)continue;const{geometryBounds:e,symbolResource:s}=t;this._getSymbolBounds(g,s,e,b,o),b[3]=b[2]=b[1]=b[0]=0,y(g,d)&&_.push(t)}if(0===_.length)return[];const S=this._hittestDrawHelper,v=[];for(const t of _){const{projectedGeometry:e,symbolResource:s}=t;if(!s)continue;const{textInfo:i,symbolInfo:a}=s,n=a.cimSymbol;S.hitTest(l,n.symbol,e,i,o,r)&&v.push(t)}return v.sort(se),v.map(t=>t.objectId)}queryItems(t){return 0===this._items.size?[]:this._searchForItems(t)}clear(){this._items.clear(),this._index=null}async _updateItem(t,e){await t.projectAndNormalize(this._outSpatialReference),await e(t);const{size:s}=t;s[0]=s[1]=s[2]=s[3]=0,this._getSymbolBounds(t.symbolBounds,t.symbolResource,t.geometryBounds,t.size,0)}_searchIndex(t,e,s,i){return this._boundsDirty&&(this._items.forEach(t=>this._getSymbolBounds(t.symbolBounds,t.symbolResource,t.geometryBounds,t.size,0)),this._boundsDirty=!1),this._index||(this._index=lt(9,t=>({minX:t.symbolBounds[0],minY:t.symbolBounds[1],maxX:t.symbolBounds[2],maxY:t.symbolBounds[3]})),this._index.load(Array.from(this._items.values()))),this._index.search({minX:t,minY:e,maxX:s,maxY:i})}_searchForItems(t){const e=this._tileInfoView.spatialReference,s=t.bounds,i=mt(e);if(i&&e.isWrappable){const[e,r]=i.valid,o=Math.abs(s[2]-r)<ee,a=Math.abs(s[0]-e)<ee;if((!o||!a)&&(o||a)){const i=t.resolution;let a;a=m(o?[e,s[1],e+i*x,s[3]]:[r-i*x,s[1],r,s[3]]);const n=this._searchIndex(s[0],s[1],s[2],s[3]),h=this._searchIndex(a[0],a[1],a[2],a[3]);return[...new Set([...n,...h])]}}return this._searchIndex(s[0],s[1],s[2],s[3])}_getSymbolBounds(t,e,s,i,r){if(!e||!e.symbolInfo.linearCIM)return null;if(t||(t=m()),f(t,s),!i||0===i[0]&&0===i[1]&&0===i[2]&&0===i[3]){const{textInfo:t,symbolInfo:s}=e,o=s.cimSymbol;i||(i=[0,0,0,0]);const a=M.getSymbolInflateSize(i,o.symbol,this._cimResourceManager,r,t);i[0]=ut(a[0]),i[1]=ut(a[1]),i[2]=ut(a[2]),i[3]=ut(a[3])}const o=this._resolution,a=M.safeSize(i);return t[0]-=a*o,t[1]-=a*o,t[2]+=a*o,t[3]+=a*o,t}}class re{static getOrCreate(t,e,s){let i=e.get(t.id);return i||(i=new re(t,s),e.set(t.id,i)),i}static fromItems(t,e,s){const i=new re(t,s);for(const t of e)i.append(t);return i}constructor(t,e){this.tile=t,this.metadata=e,this.addedOrModified=[],this.removed=[],this.objectIdMap=null}get reader(){return this._reader||(this._reader=Vt.from(this.addedOrModified,this.tile,this.metadata)),this._reader}append(t){this.addedOrModified.push(t),t.hasAnimations&&(this.objectIdMap=this.objectIdMap||{},this.objectIdMap[t.displayId]=t.objectId)}}let oe=class extends(r(e)){constructor(t){super(t),this._attached=!1,this._tiles=new Map,this._controller=new AbortController,this._hashToSymbolInfo=new Map,this._lastCleanup=performance.now(),this._cleanupRequired=!0,this.lastUpdateId=-1,this.renderer=null,this._updateTracking=new qt({debugName:"GraphicsView2D"}),this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this._commandQueue=new et({process:t=>{if("update"===t.type)return this._update();throw new Error("InternalError: Unsupported command")}}),this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this.container.destroy(),this.view=null,this.renderer=null,this._set("graphics",null),this._controller.abort(),this._graphicStore.clear(),this._graphicStore.destroy(),this._attributeStore=null,this._hashToSymbolInfo.clear(),this._updateTracking.destroy(),this._commandQueue.destroy()}_initAttributeStore(){this._storage=new A({spatialReference:this.view.spatialReference,fields:new v}),this._attributeStore=new O({isLocal:!0,update:t=>{s("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView2D.AttributeStoreView.updateStart`,{message:t}),this.container.attributeView.requestUpdate(t),this.container.requestRender(),s("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView2D.AttributeStoreView.updateEnd`,{message:t})}});const t=st(null,[]);this._attributeStore.update(t,this._storage,null),this.container.checkHighlight=()=>this._attributeStore.hasHighlight}initialize(){this._initAttributeStore(),this._metadata=rt.createGraphics(this.view.spatialReference),this._resourceProxy=new B({fetch:t=>Promise.all(t.map(t=>this.view.stage.textureManager.rasterizeItem(t))),fetchDictionary:t=>{throw new Error("InternalError: Graphics do not support Dictionary requests")}}),this.addHandles([h(()=>this._effectiveRenderer,()=>this._pushUpdate()),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{this.addHandles([this.graphics.on("change",()=>this._pushUpdate())]),this._graphicStore?.destroy(),this._graphicStore=new ie(this.view.spatialReference,this._cimResourceManager,this.view.featuresTilingScheme,this.view.state.scale,this._attributeStore),this._attached=!0,this.requestUpdate(),this._pushUpdate()})]),this._updateTracking.addUpdateTracking("CommandQueue",this._commandQueue.updateTracking);const t=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:t,removed:[]})}get _effectiveRenderer(){return"function"==typeof this.renderer?this.renderer():this.renderer}get _cimResourceManager(){return this.view.stage.textureManager.resourceManager}get updating(){const t=!this._attached||this._updateTracking.updating;return s("esri-2d-log-updating")&&console.log(`Updating GraphicsView2D: ${t}\n  -> attaching ${!this._attached}\n  -> updateTracking ${this._updateTracking.updating}`),t}hitTest(t){if(!this.view||this.view.suspended)return[];const{resolution:e,rotation:s}=this.view.state,r=this._graphicStore.hitTest(t.x,t.y,2,e,s),o=new Set(r),a=this.graphics.items.reduce((t,e)=>(o.has(e.uid)&&t.set(e.uid,e),t),new Map);return r.map(t=>a.get(t)).filter(i)}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback()),this.notifyChange("updating")}processUpdate(t){this.updateRequested&&(this.updateRequested=!1,this.update(t))}viewChange(){this.requestUpdate()}setHighlight(t){const e=[];for(const{objectId:s,highlightFlags:i}of t){const t=this._graphicStore.getItem(s)?.displayId;e.push({objectId:s,highlightFlags:i,displayId:t})}this._attributeStore.setHighlight(e,t),this._pushUpdate()}graphicUpdateHandler(t){this._pushUpdate()}update(t){this.updateRequested=!1,this._attached&&this._graphicStore.updateLevel(t.state.resolution)&&this.pushUpdate()}pushUpdate(){this._pushUpdate()}_pushUpdate(){a(this._commandQueue.push({type:"update"}))}async _update(){try{s("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView._update start`);const t=await this._graphicStore.update(this.graphics,t=>this._getSymbolForGraphic(t),t=>this._ensureSymbolResource(t));for(const e of t.updated)this.container.restartAnimation(e.objectId);if(!t.hasAnyUpdate())return void this._attributeStore.sendUpdates();t.removed.length&&(this._cleanupRequired=!0),s("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView updateMessage`,t);const e=this._createTileMessages(t);await this._densifyItemsForDisplay(e),await this._fetchResources(e),this._write(e);for(const e of t.added)this._setFilterState(e);for(const e of t.updated)this._setFilterState(e);s("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView sendUpdate`,t),this._attributeStore.sendUpdates(),s("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView sendUpdate.await`,t)}catch(t){}this._cleanupSharedResources()}_createTileMessages(t){const e=new Map;for(const s of t.added){const t=this.view.graphicsTileStore.getIntersectingTiles(s.symbolBounds);for(const i of t)re.getOrCreate(i,e,this._metadata).append(s)}for(const s of t.updated){const t=this.view.graphicsTileStore.getIntersectingTiles(s.prevSymbolBounds),i=this.view.graphicsTileStore.getIntersectingTiles(s.symbolBounds);for(const i of t)re.getOrCreate(i,e,this._metadata).removed.push(s.displayId);for(const t of i)re.getOrCreate(t,e,this._metadata).append(s)}for(const s of t.removed){const t=this.view.graphicsTileStore.getIntersectingTiles(s.symbolBounds);for(const i of t)re.getOrCreate(i,e,this._metadata).removed.push(s.displayId)}return Array.from(e.values())}async _densifyItemsForDisplay(t){const e=new Map;for(const s of t)for(const t of s.addedOrModified)e.has(t)||e.set(t,t.densifyCurvedGeometryForDisplay(this.view.spatialReference));await Promise.all(e.values())}async _fetchResources(t){const e={timeZone:null,timeExtent:null};for(const{tile:i,reader:r}of t){s("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${i.id}] GraphicsView fetchResources`,t);const o=r.getCursor();for(;o.next();)for(const t of o.getMeshWriters())t.enqueueRequest(this._resourceProxy,o,i.createArcadeEvaluationOptions(e))}await this._resourceProxy.fetchEnqueuedResources()}_write(t){for(const e of t){s("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${e.tile.id}] GraphicsView write`,e);const t=this._writeMeshes(e);let i=this._tiles.get(e.tile.key);i||(i=this._createFeatureTile(e.tile.key)),s("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${e.tile.id}] GraphicsView onTileData`,e),this.container.onTileData(i,{type:"update",modify:t,remove:e.removed,end:!1,attributeEpoch:this._attributeStore.epoch,objectIdMap:e.objectIdMap}),this.container.requestRender()}}_writeMeshes(t){const e={timeZone:null,timeExtent:null},s=new q(t.tile.id),i=t.reader.getCursor();for(;i.next();){s.entityStart(i.getDisplayId(),i.getZOrder());for(const r of i.getMeshWriters())r.write(s,this._resourceProxy,i,t.tile.createArcadeEvaluationOptions(e),t.tile.level);s.entityEnd()}return{...s.serialize().message,tileId:t.tile.id}}_setFilterState(t){const e=t.displayId,s=this._attributeStore.getHighlightFlags(t.objectId);this._attributeStore.setData(e,0,0,s|(t.visible?z:0))}_getSymbolForGraphic(t){return null!=t.symbol?t.symbol:null!=this._effectiveRenderer?this._effectiveRenderer.getSymbol(t):this._getNullSymbol(t)}async _ensureSymbolResource(t){if(!t.symbol)return;const e=await this._getSymbolInfo(t.symbol);if(!e)return;const s=e.linearCIM.filter(t=>"text"===t.type);if(s.length>0){const i=await this._getTextResources(t,s);return void(t.symbolResource={symbolInfo:e,textInfo:i})}t.symbolResource={symbolInfo:e}}_getSymbolInfo(t){const e=t.hash();return this._hashToSymbolInfo.has(e)||this._hashToSymbolInfo.set(e,this._createSymbolInfo(e,t).catch(t=>null)),this._hashToSymbolInfo.get(e)}async _createSymbolInfo(t,e){const s=await this._convertToCIMSymbol(e),i=await this._createLinearCIM(s);return{hash:t,cimSymbol:s,linearCIM:i,meshWriters:await this._createMeshWriters(s,i)}}async _convertToCIMSymbol(t){const e=R(t);return"web-style"===e.type?this._convertToCIMSymbol(await e.fetchSymbol({acceptedFormats:["cim","web"]})):e}async _createLinearCIM(t){return await Promise.all(C.fetchResources(t.symbol,this._cimResourceManager,[])),this.view.stage.cimAnalyzer.analyzeSymbolReference(t,!1)}async _createMeshWriters(t,e){n(this._controller.signal);const s=this.container.instanceStore,i=this.view.stage.meshWriterRegistry,r=await async function(t,e,s){const i=[],r={scaleInfo:V(t),scaleExpression:null};for(const t of e)switch(t.type){case"marker":if(t.animationParams){if(t.animationParams.params.hasShiftAnimation){i.push(...J(s.instances.animatedMarkerShift,t,tt,r));break}i.push(...J(s.instances.animatedMarker,t,tt,r));break}i.push(...K(s.instances.marker,t,tt,r));break;case"fill":if(t.animationParams){i.push(...Z(s.instances.animatedPolygon,t,tt,r));break}null==t.spriteRasterizationParam?i.push(...Q(s.instances.fill,t,r)):i.push(...Y(s.instances.complexFill,t,!1,r));break;case"line":if(t.animationParams){if(t.animationParams.params.hasShiftAnimation){i.push(...Z(s.instances.animatedPolylineShift,t,tt,r));break}i.push(...Z(s.instances.animatedPolyline,t,tt,r));break}t.spriteRasterizationParam?i.push(...N(s.instances.texturedLine,t,!1,r)):i.push(...X(s.instances.line,t,!1,r));break;case"text":i.push(...W(s.instances.text,t,tt,r));break;case"gradientFill":i.push(...$(s.instances.gradientFill,t,r));break;case"gradientStroke":i.push(...H(s.instances.gradientStroke,t,r));break;case"outlineFill":i.push(...L(s.instances.outlineFill,t,r))}return i}(t,e,s);return Promise.all(r.map(t=>i.createMeshWriter(this._storage,this._resourceProxy,{tileInfo:this.view.featuresTilingScheme.tileInfo},t,null)))}_onTileUpdate(t){if(t.added&&t.added.length>0)for(const e of t.added)this._updateTracking.addPromise(this._addTile(e));if(t.removed&&t.removed.length>0)for(const e of t.removed)this._removeTile(e.key)}_createFeatureTile(t){const e=this.view.featuresTilingScheme.getTileBounds(m(),t),s=this.view.featuresTilingScheme.getTileResolution(t.level),i=new F(t,s,e[0],e[3]);return this._tiles.set(t,i),this.container.addChild(i),i}async _addTile(t){if(!this._attached)return;const e=this._graphicStore.queryItems(t);if(!e.length)return;const s=this._createFeatureTile(t.key),i=re.fromItems(t,e,this._metadata);await this._densifyItemsForDisplay([i]),await this._fetchResources([i]);const r=this._writeMeshes(i);s.onMessage({type:"append",append:r,clear:!1,end:!0,attributeEpoch:this._attributeStore.epoch,objectIdMap:i.objectIdMap})}_removeTile(t){if(!this._tiles.has(t))return;const e=this._tiles.get(t);this.container.removeChild(e),e.destroy(),this._tiles.delete(t)}_getNullSymbol(t){const e=t.geometry;return e?b(e)?P:S(e)||g(e)?T:this.defaultPointSymbolEnabled?E:null:this.defaultPointSymbolEnabled?E:null}async _getTextResources(t,e){const s=new Array,i=new Array;for(let r=0;r<e.length;r++){const o=e[r],{resource:a,overrides:n}=o.textRasterizationParam;if(n?.length>0){const e=j.resolveSymbolOverrides({type:"CIMSymbolReference",primitiveOverrides:n,symbol:{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,size:a.symbol.height,anchorPointUnits:"Relative",frame:{xmin:-5,ymin:-5,xmax:5,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{x:0,y:0},symbol:a.symbol,textString:a.textString}],scaleSymbolsProportionally:!0,respectFrame:!0}]}},t,this.view.spatialReference,null,_(t.projectedGeometry),null,null);e.then(t=>{const e=t.symbolLayers[0],{textString:s}=e.markerGraphics[0];i.push({type:"cim-rasterization-info",resource:{type:"text",textString:s||"",font:a.font}}),o.text=a.textString=s||""}),s.push(e)}else i.push({type:"cim-rasterization-info",resource:a})}s.length>0&&await Promise.all(s);const r=i.map(t=>this.view.stage.textureManager.rasterizeItem(t)),a=await Promise.all(r);o(a);const n=new Map;for(let t=0;t<e.length;t++){const s=e[t];n.set(s.textRasterizationParam.resource.symbol,{text:s.text,glyphMosaicItems:a[t]})}return n}_cleanupSharedResources(){if(!this._cleanupRequired)return;const t=performance.now();if(t-this._lastCleanup<5e3)return;this._cleanupRequired=!1,this._lastCleanup=t;const e=new Set;for(const t of this._graphicStore.items()){const s=t.symbolResource?.symbolInfo.hash;e.add(s)}const s=new Set(this._hashToSymbolInfo.keys());for(const t of s.values())e.has(t)||this._hashToSymbolInfo.delete(t)}};t([c()],oe.prototype,"_effectiveRenderer",null),t([c({constructOnly:!0})],oe.prototype,"layerId",void 0),t([c({constructOnly:!0})],oe.prototype,"requestUpdateCallback",void 0),t([c()],oe.prototype,"container",void 0),t([c({constructOnly:!0})],oe.prototype,"graphics",void 0),t([c()],oe.prototype,"renderer",void 0),t([c()],oe.prototype,"_updateTracking",void 0),t([c()],oe.prototype,"updating",null),t([c()],oe.prototype,"view",void 0),t([c()],oe.prototype,"updateRequested",void 0),t([c()],oe.prototype,"defaultPointSymbolEnabled",void 0),oe=t([d("esri.views.2d.layers.graphics.GraphicsView2D")],oe);export{oe as G};
