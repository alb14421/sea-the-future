/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{q as e,b as t,D as s}from"../core/lang.js";import r from"../core/Handles.js";import{L as i}from"./Logger.js";import{r as a}from"./maybe.js";import{P as n,M as h}from"../core/scheduling.js";import{isAborted as u,createAbortError as o,isPromiseLike as _,when as d}from"../core/promiseUtils.js";import{watch as l,initial as c,when as E}from"../core/reactiveUtils.js";import{s as T}from"./signal.js";import{d as g}from"./debugFlags.js";const m=Symbol("Yield");class R{constructor(){this._tasks=new Array,this._numPendingTasks=T(0),this._readyToRun=T(!1)}get length(){return this._tasks.length}get updating(){return this._numPendingTasks.value>0}get readyToRun(){return this._readyToRun.value}_updateReadyToRun(){this._readyToRun.value=this._tasks.length>0}destroy(){this.cancelAll()}runTask(e){if(0===this.length)return m;for(;!e.done&&this._process(e);)e.madeProgress()}push(e,t,s){return this._addTask((r,i)=>new k(r,i,e,t,s),Array.prototype.push)}unshift(e,t,s){return this._addTask((r,i)=>new k(r,i,e,t,s),Array.prototype.unshift)}pushGenerator(e,t,s){const r=Array.prototype.push;return this._addTask((i,a)=>new A(i,a,e,t,s,r),r)}unshiftGenerator(e,t,s){const r=Array.prototype.unshift;return this._addTask((i,a)=>new A(i,a,e,t,s,r),r)}_process(t){if(0===this._tasks.length)return!1;const s=this._tasks.shift();this._updateReadyToRun();try{if(u(s.signal))this._cancelTask(s,o());else switch(s.type){case 0:this._processSimple(s,t);break;case 1:this._processGenerator(s,t);break;case 2:this._processIterator(s,t);break;default:e(s)}}catch(e){s.reject(e)}return!0}cancelAll(){const e=o();for(const t of this._tasks)this._cancelTask(t,e);this._tasks.length=0,this._updateReadyToRun()}_cancelTask(e,t){if(e.abortCallback){const s=e.abortCallback(t);2===e.type&&e.iterator.return&&p(e.iterator.return()),_(s)?s.then(e.resolve,e.reject):e.resolve(s)}else 2===e.type&&e.iterator.throw&&p(e.iterator.throw(t)),e.reject(t)}_onIteratorResult(e,t){t.done?e.resolve(t.value):(e.scheduleFunction.call(this._tasks,e),this._updateReadyToRun())}_processSimple(e,t){const s=e.callback(t);_(s)?s.then(e.resolve,e.reject):e.resolve(s)}_processGenerator(e,t){const s=e.generatorFunction(t),r=new b(e.resolve,e.reject,s,e.signal,e.abortCallback,e.scheduleFunction);this._processIterator(r,t)}_processIterator(e,t){const s=e.iterator.next(t);_(s)?s.then(t=>this._onIteratorResult(e,t),e.reject):this._onIteratorResult(e,s)}_addTask(e,t){return new Promise((s,r)=>{const i=e(s,r);t.call(this._tasks,i),++this._numPendingTasks.value,this._updateReadyToRun()}).finally(()=>--this._numPendingTasks.value)}}function p(e){_(e)?e.then(I):I(e)}function I(e){e.done||i.getLogger("esri.layers.support.PromiseQueue").warn("Generator iterator was aborted, but it is not done.")}class f{constructor(e,t,s=void 0,r=void 0){this.resolve=e,this.reject=t,this.signal=s,this.abortCallback=r}}class k extends f{constructor(e,t,s,r,i){super(e,t,r,i),this.callback=s,this.type=0}}class A extends f{constructor(e,t,s,r,i,a){super(e,t,r,i),this.generatorFunction=s,this.scheduleFunction=a,this.type=1}}class b extends f{constructor(e,t,s,r,i,a){super(e,t,r,i),this.iterator=s,this.scheduleFunction=a,this.type=2}}function L(){return new w}const O={RESOURCE_CONTROLLER_IMMEDIATE:"immediate",RESOURCE_CONTROLLER:"schedule",SLIDE:"slide",STREAM_DATA_LOADER:"stream loader",ELEVATION_QUERY:"elevation query",TERRAIN_SURFACE:"terrain",SURFACE_GEOMETRY_UPDATES:"surface geometry updates",LOD_RENDERER:"LoD renderer",GRAPHICS_CORE:"Graphics3D",I3S_CONTROLLER:"I3S",POINT_CLOUD_LAYER:"point cloud",FEATURE_TILE_FETCHER:"feature fetcher",STREAM_CONTROLLER:"stream controller",OVERLAY:"overlay",OVERLAY_RENDERER:"overlay renderer",STAGE:"stage",GRAPHICS_DECONFLICTOR:"graphics deconflictor",FILTER_VISIBILITY:"Graphics3D filter visibility",SCALE_VISIBILITY:"Graphics3D scale visibility",FRUSTUM_VISIBILITY:"Graphics3D frustum visibility",POINT_OF_INTEREST_FREQUENT:"POI frequent",POINT_OF_INTEREST_INFREQUENT:"POI infrequent",LABELER:"labeler",FEATURE_QUERY_ENGINE:"feature query",FEATURE_TILE_TREE:"feature tile tree",FEATURE_TILE_TREE_ACTIVE:"fast feature tile tree",ELEVATION_ALIGNMENT:"elevation alignment",ELEVATION_ALIGNMENT_SCENE:"elevation alignment scene",TEXT_TEXTURE_ATLAS:"text texture atlas",TEXTURE_UNLOAD:"texture unload",LINE_OF_SIGHT_TOOL:"line of sight tool",LINE_OF_SIGHT_TOOL_INTERACTIVE:"interactive line of sight tool",ELEVATION_PROFILE:"elevation profile",SNAPPING:"snapping",SHADOW_ACCUMULATOR:"shadow accumulator",CLOUDS_GENERATOR:"clouds generator",FLOW_GENERATOR:"flow generator",MAPVIEW_FETCH_QUEUE:"mapview fetch queue",MAPVIEW_LAYERVIEW_UPDATE:"mapview layerview update",MAPVIEW_VECTOR_TILE_PARSING_QUEUE:"mapview vector tile parsing queue",NONE:0,TEST_PRIO:1},y=new Map([[O.RESOURCE_CONTROLLER_IMMEDIATE,0],[O.RESOURCE_CONTROLLER,4],[O.SLIDE,0],[O.STREAM_DATA_LOADER,0],[O.ELEVATION_QUERY,0],[O.TERRAIN_SURFACE,1],[O.SURFACE_GEOMETRY_UPDATES,1],[O.LOD_RENDERER,2],[O.GRAPHICS_CORE,2],[O.I3S_CONTROLLER,2],[O.POINT_CLOUD_LAYER,2],[O.FEATURE_TILE_FETCHER,2],[O.STREAM_CONTROLLER,2],[O.CLOUDS_GENERATOR,2],[O.OVERLAY,4],[O.OVERLAY_RENDERER,4],[O.STAGE,4],[O.GRAPHICS_DECONFLICTOR,4],[O.FILTER_VISIBILITY,4],[O.SCALE_VISIBILITY,4],[O.FRUSTUM_VISIBILITY,4],[O.POINT_OF_INTEREST_FREQUENT,6],[O.POINT_OF_INTEREST_INFREQUENT,30],[O.LABELER,8],[O.FEATURE_QUERY_ENGINE,8],[O.FEATURE_TILE_TREE,16],[O.FEATURE_TILE_TREE_ACTIVE,0],[O.ELEVATION_ALIGNMENT,12],[O.ELEVATION_ALIGNMENT_SCENE,14],[O.TEXT_TEXTURE_ATLAS,12],[O.TEXTURE_UNLOAD,12],[O.LINE_OF_SIGHT_TOOL,16],[O.LINE_OF_SIGHT_TOOL_INTERACTIVE,0],[O.SNAPPING,0],[O.SHADOW_ACCUMULATOR,30],[O.FLOW_GENERATOR,12],[O.MAPVIEW_FETCH_QUEUE,0],[O.MAPVIEW_LAYERVIEW_UPDATE,2],[O.MAPVIEW_VECTOR_TILE_PARSING_QUEUE,0]]);function S(e){return y.has(e)?y.get(e):"number"==typeof e?e:1}const N=h(6.5),P=h(1),U=h(30),C=h(1e3/30),F=h(100);class w{get updating(){return this._updating.value}_updatingChanged(){this._updating.value=this._tasks.some(e=>e.needsUpdate)}constructor(){this._updating=T(!0),this._microTaskQueued=!1,this._frameNumber=0,this.performanceInfo={total:new n("total"),tasks:new Map},this._frameTaskTimes=new Map,this._budget=new v,this._state=1,this._tasks=new Array,this._runQueue=new Array,this._load=0,this._idleStateCallbacks=new Array,this._idleUpdatesStartFired=!1,this._forceTask=!1,this._debug=!1,this._debugHandle=l(()=>g.SCHEDULER_LOG_SLOW_TASKS,e=>this._debug=e,c);for(const e of Object.keys(O))this.performanceInfo.tasks.set(O[e],new n(String(O[e])))}destroy(){this._tasks.forEach(e=>e.remove()),this._tasks.length=0,this._idleStateCallbacks.length=0,this._runQueue.length=0,a(this._debugHandle),this._microTaskQueued=!1,this._updatingChanged()}taskRunningChanged(e){this._updatingChanged(),e&&this._budget.remaining>0&&!this._microTaskQueued&&(this._microTaskQueued=!0,queueMicrotask(()=>{this._microTaskQueued&&(this._microTaskQueued=!1,this._budget.remaining>0&&this._schedule()&&this._runFrame())}))}registerTask(e,t){const s=new G(this,e,t);return this._tasks.push(s),this._updatingChanged(),this.performanceInfo.tasks.has(e)||this.performanceInfo.tasks.set(e,new n(e)),s}registerIdleStateCallbacks(e,t){const s={idleBegin:e,idleEnd:t};this._idleStateCallbacks.push(s),2===this.state&&this._idleUpdatesStartFired&&s.idleBegin();const r=this;return{remove:()=>this._removeIdleStateCallbacks(s),set idleBegin(e){r._idleUpdatesStartFired&&(s.idleEnd(),2===r._state&&e()),s.idleBegin=e},set idleEnd(e){s.idleEnd=e}}}get load(){return this._load}set state(e){this._state!==e&&(this._state=e,2!==this.state&&this._idleUpdatesStartFired&&(this._idleUpdatesStartFired=!1,this._idleStateCallbacks.forEach(e=>e.idleEnd())))}get state(){return this._state}frame(e){this._startFrameTaskTimes();const t=this._updateBudget(e);if(t){const e=this._budget.now();this._runFrame(),this._recordFrameTaskTimes(this._budget.now()-e)}else this._recordFrameTaskTimes(0);return t}_updateBudget(e){this._test&&(this._test.usedBudget=0),++this._frameNumber;let t=N,s=e.frameDuration,r=P;switch(this.state){case 2:t=h(0),s=h(Math.max(F,e.frameDuration)),r=U;break;case 1:s=h(Math.max(C,e.frameDuration))}return s=h(s-e.elapsedFrameTime-t),2!==this.state&&s<P&&!this._forceTask?(this._forceTask=!0,!1):(s=h(Math.max(s,r)),this._budget.reset(s),this._updateLoad(),this._schedule())}_runFrame(){switch(this._forceTask=!1,this._microTaskQueued=!1,this.state){case 2:this._idleUpdatesStartFired||(this._idleUpdatesStartFired=!0,this._idleStateCallbacks.forEach(e=>e.idleBegin())),this._runIdle();break;case 1:this._runInteracting();break;default:this._runAnimating()}this._test&&(this._test.usedBudget=this._budget.elapsed)}stopFrame(){this._budget.reset(h(0)),this._budget.madeProgress()}_removeIdleStateCallbacks(e){this._idleUpdatesStartFired&&e.idleEnd(),t(this._idleStateCallbacks,e)}removeTask(e){t(this._tasks,e),t(this._runQueue,e),this._updatingChanged()}_updateTask(e){this._tasks.forEach(t=>{t.name===e&&t.setPriority(e)})}_getState(e){if(this._runQueue.some(t=>t.name===e))return"s";let t="i";return this._tasks.forEach(s=>{s.name===e&&s.needsUpdate&&(s.schedulePriority<=1?t="r":"r"!==t&&(t="w"))}),t}_getRuntime(e){let t=0;return this._tasks.forEach(s=>{s.name===e&&(t+=s.runtime)}),t}_resetRuntimes(){this._tasks.forEach(e=>e.runtime=0)}_getRunning(){const e=new Map;if(this._tasks.forEach(t=>{t.needsUpdate&&e.set(t.name,(e.get(t.name)||0)+1)}),0===e.size)return null;let t="";return e.forEach((e,s)=>{t+=e>1?` ${e}x ${s}`:` ${s}`}),t}_runIdle(){this._run()}_runInteracting(){this._run()}_runAnimating(){this._run()}_updateLoad(){const e=this._tasks.reduce((e,t)=>t.needsUpdate?++e:e,0);this._load=.9*this._load+e*(1-.9)}_schedule(){for(s(this._runQueue,e=>!!e.needsUpdate||(e.schedulePriority=e.basePriority,!1)),this._tasks.forEach(e=>{0===e.basePriority&&e.needsUpdate&&!this._runQueue.includes(e)&&e.blockFrame!==this._frameNumber&&this._runQueue.unshift(e)});0===this._runQueue.length;){let e=!1,t=0;if(this._tasks.forEach(s=>{s.needsUpdate&&0!==s.schedulePriority&&0!==s.basePriority&&s.blockFrame!==this._frameNumber&&(e=!0,t=Math.max(t,s.basePriority),1===s.schedulePriority?(s.schedulePriority=0,this._runQueue.push(s)):--s.schedulePriority)}),!e)return this._updatingChanged(),!1}return this._updatingChanged(),!0}_run(){do{for(;this._runQueue.length>0;){const e=this._budget.now(),t=this._runQueue.pop();this._budget.resetProgress();try{t.task.runTask(this._budget)===m&&(t.blockFrame=this._frameNumber)}catch(e){i.getLogger("esri.views.support.Scheduler").error(`Exception in task "${t.name}"`,e),t.blockFrame=this._frameNumber}!this._budget.hasProgressed&&t.blockFrame!==this._frameNumber&&t.needsUpdate&&(t.name,t.blockFrame=this._frameNumber),t.schedulePriority=t.basePriority;const s=this._budget.now()-e;if(t.runtime+=s,this._frameTaskTimes.set(t.priority,this._frameTaskTimes.get(t.priority)+s),this._budget.remaining<=0)return void this._updatingChanged()}}while(this._schedule());this._updatingChanged()}_startFrameTaskTimes(){for(const e of Object.keys(O))this._frameTaskTimes.set(O[e],0)}_recordFrameTaskTimes(e){this._frameTaskTimes.forEach((e,t)=>this.performanceInfo.tasks.get(t).push(e)),this.performanceInfo.total.push(e)}get test(){return this._test}}class G{get task(){return this._task.value}get readyToRun(){return this._queue.readyToRun}get updating(){return this._queue.updating}constructor(e,t,s){this._scheduler=e,this.name=t,this.blockFrame=0,this.runtime=0,this._queue=new R,this._handles=new r,this._basePriority=S(t),this.schedulePriority=this._basePriority,this._task=T(null!=s?s:this._queue),this._handles.add(E(()=>this.task.readyToRun,t=>e.taskRunningChanged(t)))}remove(){this.processQueue(D),this._scheduler.removeTask(this),this.schedule=Q.schedule,this.reschedule=Q.reschedule,this.scheduleGenerator=Q.scheduleGenerator,this.rescheduleGenerator=Q.rescheduleGenerator,this._handles.destroy()}get basePriority(){return this._basePriority}setPriority(e){if(this.name===e)return;this.name=e;const t=S(e);0!==this._basePriority&&0===this.schedulePriority||(this.schedulePriority=t),this._basePriority=t}get priority(){return this.name}set priority(e){this.setPriority(e)}get needsUpdate(){return this.readyToRun||!this.task.destroyed&&this.task.readyToRun}schedule(e,t,s){return this._queue.push(e,t,s)}reschedule(e,t,s){return this._queue.unshift(e,t,s)}scheduleGenerator(e,t,s){return this._queue.pushGenerator(e,t,s)}rescheduleGenerator(e,t,s){return this._queue.unshiftGenerator(e,t,s)}processQueue(e){return this._queue.runTask(e)}}class v{constructor(){this._begin=performance?.now()??0,this._budget=0,this._done=!1,this._progressed=!1,this._enabled=!0}run(e){return!this.done&&(!0===e()&&this.madeProgress(),!0)}get done(){return this._done}get budget(){return this._budget}madeProgress(){return this._progressed=!0,this._done=this.elapsed>=this._budget&&this._enabled,this._done}get enabled(){return this._enabled}set enabled(e){this._enabled=e}reset(e){this._begin=this.now(),this._budget=e,this.resetProgress()}get remaining(){return Math.max(this._budget-this.elapsed,0)}now(){return performance.now()}get elapsed(){return this.now()-this._begin}resetProgress(){this._progressed=!1,this._done=!1}get hasProgressed(){return this._progressed}}const D=new v;function M(e){const t=new v;return t.reset(e),t}D.enabled=!1;const Q=new class{remove(){}processQueue(){}schedule(e,t,s){try{if(u(t)){const e=o();return s?Promise.resolve(s(e)):Promise.reject(e)}return d(e(D))}catch(e){return Promise.reject(e)}}reschedule(e,t,s){return this.schedule(e,t,s)}async scheduleGenerator(e,t,s){if(u(t)){const e=o();if(s)return s(e);throw e}const r=e(D);for(;;){const e=r.next(D),i=_(e)?await e:e;if(u(t)){const e=o();if(s)return s(e);throw e}if(i.done)return i.value}}rescheduleGenerator(e,t,s){return this.rescheduleGenerator(e,t,s)}};export{Q as I,R as P,O as T,m as Y,L as a,M as m,D as n};
