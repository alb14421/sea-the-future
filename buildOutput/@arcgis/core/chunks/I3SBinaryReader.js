/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{n as t,E as n,F as r,G as o,H as i,clone as c}from"../core/lang.js";import{L as a}from"./Logger.js";const u=!0;function s(e,t,n){return{identifier:String.fromCharCode.apply(null,new Uint8Array(e,n+0,10)),version:t.getUint16(n+10,u),checksum:t.getUint32(n+12,u)}}function l(t){const n=new DataView(t,0);let r=0;const{identifier:o,version:i}=s(t,n,r);if(r+=16,"LEPCC     "!==o)throw new e("lepcc-decode-error","Bad identifier");if(i>1)throw new e("lepcc-decode-error","Unknown version");const c=function(e,t){return{sizeLo:e.getUint32(t+0,u),sizeHi:e.getUint32(t+4,u),minX:e.getFloat64(t+8,u),minY:e.getFloat64(t+16,u),minZ:e.getFloat64(t+24,u),maxX:e.getFloat64(t+32,u),maxY:e.getFloat64(t+40,u),maxZ:e.getFloat64(t+48,u),errorX:e.getFloat64(t+56,u),errorY:e.getFloat64(t+64,u),errorZ:e.getFloat64(t+72,u),count:e.getUint32(t+80,u),reserved:e.getUint32(t+84,u)}}(n,r);if(r+=88,c.sizeHi*2**32+c.sizeLo!==t.byteLength)throw new e("lepcc-decode-error","Bad size");const a=new Float64Array(3*c.count),l=[],d=[],g=[],w=[];if(r=f(t,r,l),r=f(t,r,d),r=f(t,r,g),r=f(t,r,w),r!==t.byteLength)throw new e("lepcc-decode-error","Bad length");let y=0,b=0;for(let e=0;e<l.length;e++){b+=l[e];let t=0;for(let n=0;n<d[e];n++){t+=g[y];const e=w[y];a[3*y]=Math.min(c.maxX,c.minX+2*c.errorX*t),a[3*y+1]=Math.min(c.maxY,c.minY+2*c.errorY*b),a[3*y+2]=Math.min(c.maxZ,c.minZ+2*c.errorZ*e),y++}}return{errorX:c.errorX,errorY:c.errorY,errorZ:c.errorZ,result:a}}function f(e,t,n){const r=[];t=d(e,t,r);const o=[];for(let i=0;i<r.length;i++){o.length=0,t=d(e,t,o);for(let e=0;e<o.length;e++)n.push(o[e]+r[i])}return t}function d(t,n,r){const o=new DataView(t,n),i=o.getUint8(0),c=31&i,a=!!(32&i),s=(192&i)>>6;let l=0;if(0===s)l=o.getUint32(1,u),n+=5;else if(1===s)l=o.getUint16(1,u),n+=3;else{if(2!==s)throw new e("lepcc-decode-error","Bad count type");l=o.getUint8(1),n+=2}if(a)throw new e("lepcc-decode-error","LUT not implemented");const f=Math.ceil(l*c/8),d=new Uint8Array(t,n,f);let g=0,w=0,y=0;const b=-1>>>32-c;for(let e=0;e<l;e++){for(;w<c;)g|=d[y]<<w,w+=8,y+=1;r[e]=g&b,g>>>=c,w-=c,w+c>32&&(g|=d[y-1]>>8-w)}return n+y}function g(t){const n=new DataView(t,0);let r=0;const{identifier:o,version:i}=s(t,n,r);if(r+=16,"ClusterRGB"!==o)throw new e("lepcc-decode-error","Bad identifier");if(i>1)throw new e("lepcc-decode-error","Unknown version");const c=function(e,t){return{sizeLo:e.getUint32(t+0,u),sizeHi:e.getUint32(t+4,u),count:e.getUint32(t+8,u),colorMapCount:e.getUint16(t+12,u),lookupMethod:e.getUint8(t+14),compressionMethod:e.getUint8(t+15)}}(n,r);if(r+=16,c.sizeHi*2**32+c.sizeLo!==t.byteLength)throw new e("lepcc-decode-error","Bad size");if((2===c.lookupMethod||1===c.lookupMethod)&&0===c.compressionMethod){if(3*c.colorMapCount+c.count+r!==t.byteLength||c.colorMapCount>256)throw new e("lepcc-decode-error","Bad count");const n=new Uint8Array(t,r,3*c.colorMapCount),o=new Uint8Array(t,r+3*c.colorMapCount,c.count),i=new Uint8Array(3*c.count);for(let e=0;e<c.count;e++){const t=o[e];i[3*e]=n[3*t],i[3*e+1]=n[3*t+1],i[3*e+2]=n[3*t+2]}return i}if(0===c.lookupMethod&&0===c.compressionMethod){if(3*c.count+r!==t.byteLength||0!==c.colorMapCount)throw new e("lepcc-decode-error","Bad count");return new Uint8Array(t,r).slice()}if(c.lookupMethod<=2&&1===c.compressionMethod){if(r+3!==t.byteLength||1!==c.colorMapCount)throw new e("lepcc-decode-error","Bad count");const o=n.getUint8(r),i=n.getUint8(r+1),a=n.getUint8(r+2),u=new Uint8Array(3*c.count);for(let e=0;e<c.count;e++)u[3*e]=o,u[3*e+1]=i,u[3*e+2]=a;return u}throw new e("lepcc-decode-error","Bad method "+c.lookupMethod+","+c.compressionMethod)}function w(t){const n=new DataView(t,0);let r=0;const{identifier:o,version:i}=s(t,n,r);if(r+=16,"Intensity "!==o)throw new e("lepcc-decode-error","Bad identifier");if(i>1)throw new e("lepcc-decode-error","Unknown version");const c=function(e,t){return{sizeLo:e.getUint32(t+0,u),sizeHi:e.getUint32(t+4,u),count:e.getUint32(t+8,u),scaleFactor:e.getUint16(t+12,u),bitsPerPoint:e.getUint8(t+14),reserved:e.getUint8(t+15)}}(n,r);if(r+=16,c.sizeHi*2**32+c.sizeLo!==t.byteLength)throw new e("lepcc-decode-error","Bad size");const a=new Uint16Array(c.count);if(8===c.bitsPerPoint){if(c.count+r!==t.byteLength)throw new e("lepcc-decode-error","Bad size");const n=new Uint8Array(t,r,c.count);for(let e=0;e<c.count;e++)a[e]=n[e]*c.scaleFactor}else if(16===c.bitsPerPoint){if(2*c.count+r!==t.byteLength)throw new e("lepcc-decode-error","Bad size");const n=new Uint16Array(t,r,c.count);for(let e=0;e<c.count;e++)a[e]=n[e]*c.scaleFactor}else{const n=[];if(d(t,r,n)!==t.byteLength)throw new e("lepcc-decode-error","Bad size");for(let e=0;e<c.count;e++)a[e]=n[e]*c.scaleFactor}return a}const y=()=>a.getLogger("esri.views.3d.layers.i3s.I3SBinaryReader");function b(t,n,r){let o="",i=0;for(;i<r;){const c=t[n+i];if(c<128)o+=String.fromCharCode(c),i++;else if(c>=192&&c<224){if(i+1>=r)throw new e("utf8-decode-error","UTF-8 Decode failed. Two byte character was truncated.");const a=(31&c)<<6|63&t[n+i+1];o+=String.fromCharCode(a),i+=2}else if(c>=224&&c<240){if(i+2>=r)throw new e("utf8-decode-error","UTF-8 Decode failed. Multi byte character was truncated.");const a=(15&c)<<12|(63&t[n+i+1])<<6|63&t[n+i+2];o+=String.fromCharCode(a),i+=3}else{if(!(c>=240&&c<248))throw new e("utf8-decode-error","UTF-8 Decode failed. Invalid multi byte sequence.");{if(i+3>=r)throw new e("utf8-decode-error","UTF-8 Decode failed. Multi byte character was truncated.");const a=(7&c)<<18|(63&t[n+i+1])<<12|(63&t[n+i+2])<<6|63&t[n+i+3];if(a>=65536){const e=55296+(a-65536>>10),t=56320+(1023&a);o+=String.fromCharCode(e,t)}else o+=String.fromCharCode(a);i+=4}}}return o}function p(e,t){const n={byteOffset:0,byteCount:0,fields:Object.create(null)};let r=0;for(let o=0;o<t.length;o++){const i=t[o],c=i.valueType||i.type,a=L[c];n.fields[i.property]=a(e,r),r+=F[c].BYTES_PER_ELEMENT}return n.byteCount=r,n}function h(t,n,r){const o=[];let i,c,a=0;for(c=0;c<t;c+=1){if(i=n[c],i>0){if(o.push(b(r,a,i-1)),0!==r[a+i-1])throw new e("string-array-error","Invalid string array: missing null termination.")}else o.push(null);a+=i}return o}function m(e,t){return new(0,F[t.valueType])(e,t.byteOffset,t.count*t.valuesPerElement)}function U(e,t){if(!e)return null;const c=e[t];return n(e)?c===r?null:c:o(e)?c===i?null:c:c!=c?null:c}function v(t,n,r){if(n!==t&&y().error(`Invalid ${r} buffer size\n expected: ${t}, actual: ${n})`),n<t)throw new e("buffer-too-small","Binary buffer is too small",{expectedSize:t,actualSize:n})}function C(e,t){const n=p(e,t&&t.header);let r=n.byteCount;const o={isDraco:!1,header:n,byteOffset:n.byteCount,byteCount:0,vertexAttributes:{}},i=n.fields,c=null!=i.vertexCount?i.vertexCount:i.count;for(const e of t.ordering){if(!t.vertexAttributes[e])continue;const n={...t.vertexAttributes[e],byteOffset:r,count:c},i=I[e]||"_"+e;o.vertexAttributes[i]=n,r+=E(n.valueType)*n.valuesPerElement*c}const a=i.faceCount;if(t.faces&&a){o.faces={};for(const e of t.ordering){if(!t.faces[e])continue;const n={...t.faces[e],byteOffset:r,count:a};o.faces[e]=n,r+=E(n.valueType)*n.valuesPerElement*a}}const u=i.featureCount;if(t.featureAttributes&&t.featureAttributeOrder&&u){o.featureAttributes={};for(const e of t.featureAttributeOrder){if(!t.featureAttributes[e])continue;const n={...t.featureAttributes[e],byteOffset:r,count:u};o.featureAttributes[e]=n,r+=("UInt64"===n.valueType?8:E(n.valueType))*n.valuesPerElement*u}}return v(r,e.byteLength,"geometry"),o.byteCount=r-o.byteOffset,o}function A(e,t){return e&&e.compressedAttributes&&"draco"===e.compressedAttributes.encoding?function(e){const t={isDraco:!0,isLegacy:!1,color:!1,normal:!1,uv0:!1,uvRegion:!1,featureIndex:!1};for(const n of e)switch(n){case"position":break;case"normal":t.normal=!0;break;case"uv0":t.uv0=!0;break;case"color":t.color=!0;break;case"uv-region":t.uvRegion=!0;break;case"feature-index":t.featureIndex=!0}return t}(e.compressedAttributes.attributes):e?{isDraco:!1,isLegacy:!1,color:null!=(n=e).color,normal:null!=n.normal,uv0:null!=n.uv0,uvRegion:null!=n.uvRegion,featureIndex:null!=n.faceRange&&null!=n.featureId}:function(e){const t={isDraco:!1,isLegacy:!0,color:!1,normal:!1,uv0:!1,uvRegion:!1,featureIndex:!1};for(const n of e.ordering)if(e.vertexAttributes[n])switch(n){case"position":break;case"normal":t.normal=!0;break;case"color":t.color=!0;break;case"uv0":t.uv0=!0;break;case"region":t.uvRegion=!0}return e.featureAttributes&&e.featureAttributeOrder&&(t.featureIndex=!0),t}(t);var n}const I={position:"position",normal:"normal",color:"color",uv0:"uv0",region:"uvRegion"};function B(n,r,o,i=!1){if("lepcc-rgb"===n.encoding)return i?g(r):(a=g(r),Array.isArray(a)?a.length<t?a:new Uint8Array(a):a.length<t?Array.from(a):a);var a;if("lepcc-intensity"===n.encoding)return i?w(r):function(e){return Array.isArray(e)?e.length<t?e:new Uint16Array(e):e.length<t?Array.from(e):e}(w(r));if(null!=n.encoding&&""!==n.encoding)throw new e("unknown-attribute-storage-info-encoding","Unknown Attribute Storage Info Encoding");n["attributeByteCounts "]&&!n.attributeByteCounts&&(y().warn("Warning: Trailing space in 'attributeByteCounts '."),n.attributeByteCounts=n["attributeByteCounts "]),"ObjectIds"===n.ordering[0]&&n.hasOwnProperty("objectIds")&&(y().warn("Warning: Case error in objectIds"),n.ordering[0]="objectIds");const u=function(t,n,r){const o=null!=n.header?p(t,n.header):{byteOffset:0,byteCount:0,fields:{count:r}},i={header:o,byteOffset:o.byteCount,byteCount:0,entries:Object.create(null)};let a=o.byteCount;for(let t=0;t<n.ordering.length;t++){const r=n.ordering[t],u=c(n[r]);if(u.count=o.fields.count??0,"String"===u.valueType){if(u.byteOffset=a,u.byteCount=o.fields[r+"ByteCount"],"UTF-8"!==u.encoding)throw new e("unsupported-encoding","Unsupported String encoding.",{encoding:u.encoding});if(u.timeEncoding&&"ECMA_ISO8601"!==u.timeEncoding)throw new e("unsupported-time-encoding","Unsupported time encoding.",{timeEncoding:u.timeEncoding})}else{if(!M(u.valueType))throw new e("unsupported-value-type","Unsupported binary valueType",{valueType:u.valueType});{const e=E(u.valueType);a+=a%e!==0?e-a%e:0,u.byteOffset=a,u.byteCount=e*u.valuesPerElement*u.count}}a+=u.byteCount??0,i.entries[r]=u}return i.byteCount=a-i.byteOffset,i}(r,n,o);v(u.byteOffset+u.byteCount,r.byteLength,"attribute");const s=u.entries.attributeValues||u.entries.objectIds;if(s){if("String"===s.valueType){const e=u.entries.attributeByteCounts,t=m(r,e),n=function(e,t){return new Uint8Array(e,t.byteOffset,t.byteCount)}(r,s);return s.timeEncoding?function(e,t,n){return h(e,t,n).map(e=>{const t=e?Date.parse(e):null;return null==t||Number.isNaN(t)?null:t})}(e.count,t,n):h(e.count,t,n)}return i?m(r,s):function(e,n){const r=m(e,n);if(r.length>=t)return r;const o=new Array;return r.forEach((e,t)=>o.push(U(r,t))),o}(r,s)}throw new e("bad-attribute-storage-info","Bad attributeStorageInfo specification.")}const F={Float32:Float32Array,Float64:Float64Array,UInt8:Uint8Array,Int8:Int8Array,UInt16:Uint16Array,Int16:Int16Array,UInt32:Uint32Array,Int32:Int32Array},L={Float32:(e,t)=>new DataView(e,0).getFloat32(t,!0),Float64:(e,t)=>new DataView(e,0).getFloat64(t,!0),UInt8:(e,t)=>new DataView(e,0).getUint8(t),Int8:(e,t)=>new DataView(e,0).getInt8(t),UInt16:(e,t)=>new DataView(e,0).getUint16(t,!0),Int16:(e,t)=>new DataView(e,0).getInt16(t,!0),UInt32:(e,t)=>new DataView(e,0).getUint32(t,!0),Int32:(e,t)=>new DataView(e,0).getInt32(t,!0)};function M(e){return F.hasOwnProperty(e)}function E(e){return M(e)?F[e].BYTES_PER_ELEMENT:0}export{m as a,A as b,C as c,l as d,U as g,B as r};
