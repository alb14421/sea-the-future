/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Error.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import{h as r,M as i}from"../core/lang.js";import{L as s}from"./Logger.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import{c as o,a as l}from"./generateRendererUtils.js";import{m as u,a as m,g as p,b as c}from"./utils14.js";import{open as d}from"../core/workers/workers.js";import{i as y,d as h,l as f}from"./utils7.js";import g from"../Graphic.js";import{timeout as w,throwIfAborted as F}from"../core/promiseUtils.js";import S,{i as v}from"../request.js";import{isDateField as x,isTimestampOffsetField as q,isTimeOnlyField as _,isDateOnlyField as z,l as V,isNumericField as T}from"../layers/support/fieldUtils.js";import{fromJSON as b}from"../renderers/support/jsonUtils.js";import{p as L}from"./utils9.js";import"./DataLayerSource.js";import{a as E}from"./executeQueryJSON.js";import"../config.js";import"../kernel.js";import"../core/urlUtils.js";import"./unitUtils.js";import"./aaBoundingBox.js";import"./mathUtils.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/Multipoint.js";import"../geometry/Point.js";import"../geometry/Polygon.js";import"../geometry/Polyline.js";import"./normalizeUtilsCommon.js";import"../geometry/SpatialReference.js";import"./pbf.js";import N from"../rest/support/FeatureSet.js";import C,{Q as M}from"../rest/support/Query.js";import I from"../rest/support/StatisticDefinition.js";import{JSONSupport as k}from"../core/JSONSupport.js";import{e as j}from"./enumeration.js";import{getArcadeForPredominantCategory as A,getSQLForPredominantCategoryName as O}from"../smartMapping/statistics/support/predominanceUtils.js";import{b as Q}from"./maybe.js";import{whenOnce as B}from"../core/reactiveUtils.js";import{t as P}from"./quantizationUtils.js";import{k as R}from"./fieldType.js";import{summaryStatistics as D,uniqueValues as J,histogram as $,classBreaks as G,heatmapStatistics as U}from"./statsWorker.js";import{Loadable as Z}from"../core/Loadable.js";import{r as W}from"./date.js";import H from"../rest/support/AttributeBinsQuery.js";import K from"../rest/support/AutoIntervalBinParameters.js";import X from"../rest/support/DateBinParameters.js";import Y from"../rest/support/FixedBoundariesBinParameters.js";import ee from"../rest/support/FixedIntervalBinParameters.js";import{a as te,u as ae,b as re,c as ie,d as se,e as ne,f as oe,h as le,i as ue,j as me,k as pe,l as ce,m as de,n as ye,o as he,p as fe,q as ge,g as we}from"./utils18.js";import{o as Fe,e as Se,h as ve,r as xe,b as qe}from"./utils13.js";import{j as _e}from"./viewpointUtils.js";class ze{constructor(){this.connection=null}async open(e){this.connection=await d("statsWorker",{strategy:"distributed",signal:e})}destroy(){this.connection?.close()}static getInstance(){return ze.instance||(ze.instance=new ze),ze.instance}async summaryStatistics(e,a){if(!this.connection)throw new t("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:e,features:a})}async uniqueValues(e,a){if(!this.connection)throw new t("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:e,features:a})}async classBreaks(e,a){if(!this.connection)throw new t("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:e,features:a})}async histogram(e,a){if(!this.connection)throw new t("worker-client:histogram","connection is required");return this.connection.invoke("histogram",{attribute:e,features:a})}async heatmapStatistics(e,a){if(!this.connection)throw new t("worker-client:heatmap-statistics","connection is required");return this.connection.invoke("heatmapStatistics",{attribute:e,features:a})}}function Ve(e,t,a){if("classBreaks"===e.type){const r=b(e);return{classBreaks:r.classBreakInfos.map((e,i)=>(0===i&&null!=t&&(e.minValue=t),i===r.classBreakInfos.length-1&&null!=a&&(e.maxValue=a),{minValue:e.minValue,maxValue:e.maxValue,label:e.label})),normalizationTotal:r.normalizationTotal}}const{uniqueValueInfos:r}=e;return{uniqueValues:r?.map((e,i)=>(0===i&&null!=t&&(e.value=t),i===r.length-1&&null!=a&&(e.value=a),{count:e.count,value:e.value,label:e.label}))??[]}}let Te=class extends k{constructor(e){super(e),this.classificationDefinition=null,this.where=null}};e([a({json:{name:"classificationDef",write:!0}})],Te.prototype,"classificationDefinition",void 0),e([a({type:String,json:{write:!0}})],Te.prototype,"where",void 0),Te=e([n("esri.rest.support.GenerateRendererParameters")],Te);const be=Te;let Le=class extends k{constructor(e){super(e),this.type="unique-value-definition",this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null}get uniqueValueFields(){const e=[];return this.attributeField&&e.push(this.attributeField),this.attributeField2&&e.push(this.attributeField2),this.attributeField3&&e.push(this.attributeField3),e}};e([j({uniqueValueDef:"unique-value-definition"})],Le.prototype,"type",void 0),e([a()],Le.prototype,"attributeField",void 0),e([a()],Le.prototype,"attributeField2",void 0),e([a()],Le.prototype,"attributeField3",void 0),e([a({json:{write:!0}})],Le.prototype,"fieldDelimiter",void 0),e([a({json:{write:!0}})],Le.prototype,"uniqueValueFields",null),Le=e([n("esri.rest.support.UniqueValueDefinition")],Le);const Ee=Le;let Ne=class extends Z{constructor(e){super(e),this.adapterName="layer-adapter"}};e([a({readOnly:!0})],Ne.prototype,"adapterName",void 0),e([a({constructOnly:!0})],Ne.prototype,"layer",void 0),e([a()],Ne.prototype,"geometryType",void 0),e([a()],Ne.prototype,"objectIdField",void 0),e([a()],Ne.prototype,"supportsSQLExpression",void 0),e([a()],Ne.prototype,"hasQueryEngine",void 0),e([a()],Ne.prototype,"minScale",void 0),e([a()],Ne.prototype,"maxScale",void 0),e([a()],Ne.prototype,"fullExtent",void 0),Ne=e([n("esri.smartMapping.support.adapters.LayerAdapter")],Ne);const Ce=Ne,Me="countOFExpr";function Ie(e,t,a){const r=e.valueExpression||e.sqlExpression,i=e.signal;if(!r){const{field:r,normalizationType:s,normalizationField:n}=e,o=r?t.getField(r):null,l=y(o)||_(o),u={field:r,normalizationType:s,normalizationField:n,normalizationTotal:a,layer:t};return{sqlExpression:l?re(t,o):ie(u),sqlWhere:l?null:e.sqlWhere||m({field:r,normalizationType:s,normalizationField:n}),filter:e.filter,signal:i}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:i}}async function ke(e,t,a){const{field:r,normalizationType:i,normalizationField:s,signal:n}=e,o=m({field:r,normalizationType:i,normalizationField:s}),l=new be({classificationDefinition:Fe({field:r,normalizationType:i,normalizationField:s,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,definedInterval:e.definedInterval,breakCount:e.numBins||se}),where:u(o,a)});return t.generateRenderer(l,n).then(e=>{const{normalizationTotal:a,classBreaks:n}=e;return ne({field:r,normalizationType:i,normalizationField:s,normalizationTotal:a,classBreaks:n,where:o,layer:t})})}async function je(e,a,r,i,s){const{field:n,sqlExpression:o,normalizationField:l,classificationMethod:u,normalizationType:m}=e,c=n?a.getField(n):null,d=_(c),y=z(c)||d,h=e.numBins||se;if(y){if(m||u)throw new t(`${a.adapterName}:not-supported`,"NormalizationType and classificationMethod are not supported for date-only and time-only fields");const e=(i-r)/h/1e3,s=e/86400;return new X({field:n,expression:o,interval:{unit:d?"seconds":"days",value:Math.ceil(d?e:s)},start:r,end:i})}if("defined-interval"===u)return new ee({field:n,expression:o,normalizationField:l,normalizationTotal:s,normalizationType:m,interval:e.definedInterval??Math.ceil((i-r)/h),start:m?null:r,end:m?null:i,normalizationMinValue:m?r:null,normalizationMaxValue:m?i:null});if("manual"===u)throw new t(`${a.adapterName}:not-supported`,"Layer does not support manual classificationMethod");if("natural-breaks"===u||"quantile"===u||"standard-deviation"===u){const i=ie({field:n,normalizationField:l,normalizationTotal:s,normalizationType:m,layer:a}),u=null!==e.minValue&&null!==e.maxValue?p(i,e.minValue,e.maxValue):void 0,c=await ke(e,a,u);if(!c.intervals)throw new t(`${a.adapterName}:invalid`,"Invalid intervals returned from generate renderer");const d=[r,...c.intervals.map(e=>e[1])];return new Y({field:m?null:n,expression:m?i:o,boundaries:d})}return new K({field:n,normalizationField:l,normalizationTotal:s,normalizationType:m,expression:o,numBins:h,start:m?null:r,end:m?null:i,normalizationMinValue:m?r:null,normalizationMaxValue:m?i:null})}function Ae(e,t,a,r){return null!=a&&null!=r?Promise.resolve({min:a,max:r}):t.summaryStatistics({...e,outStatisticTypes:{include:["min","max"]}}).then(e=>({min:e.min,max:e.max}))}async function Oe(e,t,a,r){const{field:i,minValue:s,maxValue:n,filter:o,view:l}=e,m=i?t.getField(i):null,p=x(m)||q(m),c=Ie(e,t,a),{min:d,max:y}=await Ae(c,t,s,n);if(null==d||null==y)return{query:null,min:d,max:y};const h=new I({statisticType:"count",outStatisticFieldName:Me,onStatisticField:"1"}),f=u(r,c.sqlWhere),g=new H({binParameters:await je(e,t,d,y,a),outStatistics:[h],binOrder:e.sortOrder,where:f,lowerBoundaryAlias:"lowerBoundary",upperBoundaryAlias:"upperBoundary",outTimeZone:l?.timeZone&&p?W(l.timeZone):null});return ae(g,o),{query:g,min:d,max:y}}function Qe(e,t=!1){return"string"!=typeof e?e:(t?new Date(`1970-01-01T${e}Z`):new Date(e)).getTime()}function Be(e,t,a){const r=_(t);return{...a,bins:e.features.map(e=>({minValue:Qe(e.attributes.lowerBoundary,r),maxValue:Qe(e.attributes.upperBoundary,r),count:e.attributes[Me]}))}}function Pe(e,t,a){const{valueExpression:r,view:i}=e,{featuresJSON:s,graphics:n,fieldInfos:o}=t,l={field:e.field,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:a,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return r&&i&&(s||n)&&(l.viewInfoParams=te(i),l.timeZone=i.timeZone,l.fieldInfos=o),l}let Re=null,De=class extends Ce{constructor(){super(...arguments),this._hasLocalSource=!1,this.adapterName="in-memory-layer-adapter"}destroy(){this.workerClient?.destroy()}async _waitForLayerViewUpdate(e){if(!e)throw new t(`${this.adapterName}:insufficient-data`,"layerView is required to fetch the features");const a=new AbortController,r=B(()=>!e.updating,a.signal);await w(r,5e3,a).catch(e=>{throw s.getLogger(this).warn("LayerView is taking too long to update. Aborting fetch from layerView."),e})}async _fetchFeatureSetFromMemory(e,a,r){const i=this.layer;if(this._hasLocalSource&&"queryFeatures"in i)return i.queryFeatures(e);if(!a)throw new t(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const s=await a.whenLayerView(this.layer);return await this._waitForLayerViewUpdate(s),s.queryFeatures(e,{signal:r})}async _fetchFeaturesFromMemory(e,a,r,i){const s=this.layer,n="json"===i;if(this._hasLocalSource&&"queryFeatures"in s){const e=await s.queryFeatures(a);return n?oe(e.features):e.features}if(await this._waitForLayerViewUpdate(e),n&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:t}=await e.queryFeaturesJSON(a,{signal:r});return t}if(!("queryFeatures"in e))throw new t(`${this.adapterName}:not-supported`,"'queryFeatures' is not supported on the layerView");const o=await e.queryFeatures(a,{signal:r});return n?oe(o.features):o.features}_fetchFeaturesForStats(e,t){return h({field:e.field,field2:e.field2,field3:e.field3,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,filter:e.filter,requiredFields:a,signal:e.signal},t))}async _summaryStatsFromClientQuery(e,t){const{view:a,signal:r}=e,i=le(this,e,t),s=await this._fetchFeatureSetFromMemory(i,a,r),n=ue(s,y(t)||_(t));return Se(n,e.outStatisticTypes)}async _getNormalizationTotalFromMemory(e,a,r){const{featuresJSON:i,graphics:s,layerView:n,query:o}=a,l={include:["sum"]},u=(!i&&!s&&n&&"querySummaryStatistics"in n?await n.querySummaryStatistics(o,{field:e},{signal:r}):i?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:l},i):await D({attribute:{field:e,outStatisticTypes:l},features:s??[]})).sum;if(null==u)throw new t(`${this.adapterName}:invalid`,"invalid normalizationTotal");return u}async _summaryStatsFromMemory(e,t){const{view:a,field:r,valueExpression:i,normalizationType:s,signal:n}=e,o={field:r,valueExpression:i,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:m,query:p,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"querySummaryStatistics"});return i&&a&&(l||u)&&(o.fieldType=t?.type?R.toJSON(t.type):null,o.viewInfoParams=te(a),o.timeZone=a.timeZone,o.fieldInfos=c),"percent-of-total"===s&&null==e.normalizationTotal&&(o.normalizationTotal=await this._getNormalizationTotalFromMemory(r,{featuresJSON:l,graphics:u,layerView:m,query:p},n)),!l&&!u&&m&&"querySummaryStatistics"in m?m.querySummaryStatistics(p,o,{signal:n}):l?this.workerClient.summaryStatistics(o,l):D({attribute:o,features:u})}async _getFilteredFeatures(e,t){let a=e;const r=t?.geometry;if("intersects"===t?.spatialRelationship&&r){const t=await import("../geometry/operators/intersectionOperator.js").then(e=>e.i);a=e.filter(({geometry:e})=>!(!e||!t.execute(e,r)))}return e.length&&"declaredClass"in e[0]&&"esri.Graphic"===e[0].declaredClass?{graphics:a}:{featuresJSON:a}}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t?.length)return this._getFilteredFeatures(t,a);const{view:r,field:i,field2:s,field3:n,normalizationField:o,valueExpression:l,layerViewFunc:u,signal:m}=e;let p=e.returnGeometry;if(null==p&&l){if(!Re){const{arcadeUtils:e}=await V();Re=e}const e=Re.hasGeometryOperations(l);e&&await Re.enableGeometryOperations(),p=e}let c=null,d=null,y=null,f=null,g=null;if(r)try{const e="subtype-sublayer"===this.layer.type?this.layer.parent:this.layer;c=await r.whenLayerView(e),d=null!=u&&null!=c&&u in c&&"function"==typeof c[u]}catch{d=!1}if(d)try{await this._waitForLayerViewUpdate(c);const e=await h({field:i,field2:s,field3:n,normalizationField:o,valueExpression:l});me(this,e,c).length?d=!1:(y=this.layer.createQuery(),y.outFields=e,y.returnGeometry=!1,ae(y,a)),c.suspended&&(d=!1)}catch{d=!1}return d||(f=await this._fetchFeaturesForStats({field:i,field2:s,field3:n,valueExpression:l,normalizationField:o,returnGeometry:p,filter:a,view:r,signal:m},"json"),g=(await h({valueExpression:l})).map(e=>this.getField(e)?.toJSON()).filter(Boolean)),{layerView:c,query:y,featuresJSON:f,fieldInfos:g}}async _uvFromClientQuery(e,t){const{view:a,signal:r}=e,i=pe(this,e),s=await this._fetchFeatureSetFromMemory(i,a,r),n=await ce(s,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:f,view:e.view,signal:e.signal});return ve(n,t,e.returnAllCodedValues,f)}async _uvFromMemory(e,t){const{view:a,field:r,valueExpression:i,returnAllCodedValues:s,signal:n}=e,{featuresJSON:o,graphics:l,layerView:u,query:m,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryUniqueValues"}),c={field:r,field2:e.field2,field3:e.field3,fieldDelimiter:f,valueExpression:i,domains:t,returnAllCodedValues:s};return i&&a&&(o||l)&&(c.viewInfoParams=te(a),c.timeZone=a.timeZone,c.fieldInfos=p),!o&&!l&&u&&"queryUniqueValues"in u?u.queryUniqueValues(m,c,{signal:n}):o?this.workerClient.uniqueValues(c,o):J({attribute:c,features:l})}_histogramForField(e){let a=null;return a=null!=e.minValue&&null!=e.maxValue?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics({...e,outStatisticTypes:{include:["min","max","count"]}}).then(e=>{if(!e.count)throw new t(`${this.adapterName}:insufficient-data`,"Either the layer has no features or none of the features have data for the field");return{min:e.min,max:e.max}}),a.then(t=>de(this,{min:t.min,max:t.max},e.field,e.numBins??void 0,e.view,e.filter,e.signal))}async _histogramFromQueryAttributeBinsFromMemory(e){const{field:t,normalizationType:a,signal:r}=e,i=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAttributeBins"}),{featuresJSON:s,graphics:n,layerView:o,query:l}=i,u="percent-of-total"===a?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,i,r):void 0;if(!o||!("queryAttributeBins"in o)||s||n){const t=Pe(e,i,u);return s?this.workerClient.histogram(t,s):$({attribute:t,features:n})}const{query:m,min:p,max:c}=await Oe(e,this,u,l?.where);return m?Be(await o.queryAttributeBins(m,{signal:r}),t?this.getField(t):null,{minValue:p,maxValue:c,normalizationTotal:u}):{bins:[],minValue:p,maxValue:c,normalizationTotal:u}}async _histogramFromMemory(e){const{field:t,signal:a}=e,r=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryHistogram"}),{featuresJSON:i,graphics:s,layerView:n,query:o}=r,l=Pe(e,r,"percent-of-total"===e.normalizationType?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,r,a):void 0);return!i&&!s&&n&&"queryHistogram"in n?n.queryHistogram(o,l,{signal:a}):i?this.workerClient.histogram(l,i):$({attribute:l,features:s})}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,r=e.numClasses||5,i=[],s=(a-t)/r;for(let e=0;e<r;e++){const a=t+e*s;i.push({minValue:a,maxValue:a+s})}i[r-1].maxValue=a;const n={classBreaks:i,normalizationTotal:e.normalizationTotal},o=xe(n,e.classificationMethod);return Promise.resolve(o)}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:s,graphics:n,layerView:o,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryClassBreaks"}),m={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return r&&t&&(s||n)&&(m.viewInfoParams=te(t),m.timeZone=t.timeZone,m.fieldInfos=u),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:n,layerView:o,query:l},i)),!s&&!n&&o&&"queryClassBreaks"in o?o.queryClassBreaks(l,m,{signal:i}):s?this.workerClient.classBreaks(m,s):G({attribute:m,features:n})}async _heatmapStatsFromMemory(e){const{view:t,field:a,radius:r,signal:i}=e;Q(t,"InMemoryLayerAdapter: must have a view");try{const a=await t.whenLayerView(this.layer);if("queryHeatmapStatistics"in a&&!a.updating&&!e.filter)return await a.queryHeatmapStatistics({field:e.field,radius:e.radius})}catch{F(i)}const{featuresJSON:s,graphics:n}=await this._processStatsFromMemoryParams({...e,returnGeometry:!0}),o=new M({extent:t.extent,tolerance:"2d"===t.type?t.state.resolution:t.pixelSizeAt?.(t.center)}),l={field:a,radius:r,transform:P(o),spatialReference:t.spatialReference?.toJSON(),size:t.size};return s?.length||n?.length?s?this.workerClient.heatmapStatistics(l,s):U({attribute:l,features:n}):{min:null,max:null}}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}createQuery(){return this.layer.createQuery()}async summaryStatistics(e){const{field:a,valueExpression:r,sqlExpression:i,features:s,view:n}=e,o=a?this.getField(a):null,l=!!r,u="3d"===n?.type;if(!r&&i&&!this.supportsSQLExpression)throw new t(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return l||s||u?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,o)}async uniqueValues(e){const{valueExpression:a,sqlExpression:r,features:i,view:s}=e,n=await ye(e,this),o=!!a,l="3d"===s?.type;if(!a&&r&&!this.supportsSQLExpression)throw new t(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return o||i||l?this._uvFromMemory(e,n):this._uvFromClientQuery(e,n)}async histogram(e){const{features:a,valueExpression:r,normalizationType:i,sqlExpression:s}=e,n=a||!!r;if(!r&&s&&!this.supportsSQLExpression)throw new t(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return n||i?this._histogramFromMemory(e):this._histogramForField(e)}async classBreaks(e){return!1!==e.analyzeData?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:a,view:r,signal:i}=e;if(!r)throw new t(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const s=this.layer.createQuery();s.where=u(s.where,a);const n=await r.whenLayerView(this.layer);return await B(()=>!n.updating,i),n.queryFeatureCount(s,{signal:i})}async generateRenderer(e,a){throw new t(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:a,signal:r,filter:i}=e,s=A(t),n=await this._uvFromMemory({valueExpression:s,view:a,signal:r,filter:i});return he(n.uniqueValueInfos,t)}async heatmapStatistics(e){return this._heatmapStatsFromMemory(e)}async getSampleFeatures(e,a){const{view:r,sampleSize:s,requiredFields:n,returnGeometry:o,filter:l,signal:u}=e,m=this.layer.createQuery();if(m.outSpatialReference=r?.spatialReference,m.returnGeometry=!!o,m.outFields=n,ae(m,l),!r)throw new t(`${this.adapterName}:not-supported`,"view is required to get sample features for Layer");const p=await r.whenLayerView(this.layer);if(me(this,n,p).length)throw new t(`${this.adapterName}:not-supported`,"Required fields need to be passed in the outFields for Layer");const c=await this._fetchFeaturesFromMemory(p,m,u,a),d=null!=s&&s>0&&s<=c.length?s:c.length;return i(c,d,1)}load(e){const t=this.layer.load(e).then(async t=>{this.geometryType=t.geometryType,this.objectIdField=t.objectIdField,this.supportsSQLExpression="stream"===t.type||!!t.capabilities?.query?.supportsSqlExpression,this.minScale=t.minScale,this.maxScale=t.maxScale,this.fullExtent="fullExtent"in t?t.fullExtent:t.parent?.fullExtent,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=ze.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};e([a({readOnly:!0})],De.prototype,"adapterName",void 0),e([a({constructOnly:!0})],De.prototype,"layer",void 0),De=e([n("esri.smartMapping.support.adapters.InMemoryLayerAdapter")],De);const Je=De;let $e=class extends Je{constructor(){super(...arguments),this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){const e=this.layer;if(!e.capabilities?.query?.supportsStatistics||"multipatch"===this.geometryType&&!v(e.url)&&e.version<10.5)throw new t(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then(e=>e.features)}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(oe)}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:5,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:"field"===t?a:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then(t=>{let a,r,i;if(t.classBreakInfos?.some(e=>(e.hasAvg&&(a=e),!!a)),a){const e=a.maxValue-a.minValue;r=a.minValue+e/2,i=4*e}const s={min:t.minValue,max:t.maxValue,avg:r,stddev:i};return Se(s,e.outStatisticTypes)})}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),"percent-of-total"===e.normalizationType&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const a=y(t)||_(t),r="capabilities"in this.layer?this.layer.capabilities:null,i=le(this,e,t,r?.query?.supportsPercentileStatistics??!1),s=await this.layer.queryFeatures(i,{signal:e.signal}),n=ue(s,a);return Se(n,e.outStatisticTypes)}_uvFromGenRenderer(e,t){const a=e.field??void 0,r=new Ee({attributeField:a}),i=new be({classificationDefinition:r});return this.generateRenderer(i,e.signal).then(e=>{const t={},r=this.getField(a);return e.uniqueValues.forEach(e=>{let a=e.value;null!=a&&""!==a&&("string"!=typeof a||""!==a.trim()&&"<null>"!==a.toLowerCase())||(a=null),null==t[a]?t[a]={count:e.count,data:T(r)&&a?Number(a):a}:t[a].count=t[a].count+e.count}),{count:t}}).then(a=>ve(a,[t],e.returnAllCodedValues))}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(pe(this,e),{signal:e.signal})).then(t=>ce(t,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:f,view:e.view,signal:e.signal})).then(a=>ve(a,t,e.returnAllCodedValues,f))}_getNormalizationTotal(e,t,a,r){return e&&"percent-of-total"===t?this.summaryStatistics({field:e,outStatisticTypes:{include:["sum"]},filter:a,signal:r}).then(e=>e.sum):Promise.resolve(null)}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then(t=>{const a=Ie(e,this,t);return Ae(a,this,e.minValue,e.maxValue).then(r=>{const i=r.min,s=r.max;if(null==i||null==s)return{bins:[],minValue:i,maxValue:s,normalizationTotal:t};const n=e.numBins||se,o=qe(i,s,n),l=function(e,t,a){const r=[],i=t.length;return t.forEach((t,s)=>{const[n,o]=t;let l=null;l=0!==s||a?s!==i-1||a?u(`${e} >= ${n}`,`${e} ${s===i-1?" <= ":" < "} ${o}`):`${e} >= ${n}`:`${e} < ${o}`,r.push("WHEN ("+l+") THEN "+(s+1))}),["CASE",r.join(" "),"ELSE 0","END"].join(" ")}(a.sqlExpression,o,null!=e.minValue&&null!=e.maxValue),m=new I({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),p=this.layer.createQuery();return p.where=u(p.where,a.sqlWhere),p.sqlFormat="standard",p.outStatistics=[m],p.groupByFieldsForStatistics=[l],p.orderByFields=[l],ae(p,e.filter),this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(p,{signal:a.signal})).then(e=>fe(e,i,s,n,t))})})}async _histogramFromQueryAttributeBins(e){const{field:t,normalizationType:a,filter:r,signal:i}=e,s=await this._getNormalizationTotal(t,a,r,i),n=this.layer.createQuery(),{query:o,min:l,max:u}=await Oe(e,this,s,n?.where);return o?Be(await this.layer.queryAttributeBins(o,{signal:i}),t?this.getField(t):null,{minValue:l,maxValue:u,normalizationTotal:s}):{bins:[],minValue:l,maxValue:u,normalizationTotal:s}}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,signal:s}=e,n=m({field:t,normalizationType:a,normalizationField:r}),o=ie({field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:this}),l=p(o,e.minValue,e.maxValue),c=Fe({field:t,normalizationType:a,normalizationField:r,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||5}),d=new be({classificationDefinition:c});return d.where=u(n,l),this.generateRenderer(d,s).then(t=>xe(t,e.classificationMethod))}async summaryStatistics(e){const{field:a,normalizationType:r,valueExpression:i,sqlExpression:s,view:n,features:o,useFeaturesInView:l}=e,u=a?this.getField(a):null,m=y(u)||_(u),p=i&&!(s&&this.supportsSQLExpression),c=this._hasLocalSource||o||l,d=n&&"3d"===n.type;if(c||p)return p||o||l||d?this._summaryStatsFromMemory(e,u):this._summaryStatsFromClientQuery(e,u);if(!this.supportsSQLExpression&&(m||s||"natural-log"===r||"square-root"===r))throw new t(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(r&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,u)).catch(()=>(F(e.signal),this._summaryStatsFromMemory(e,u)))}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:r,useFeaturesInView:i,signal:s}=e,n=t&&!(a&&this.supportsSQLExpression),o=this._hasLocalSource||r||i||n,l=e.view,u=l&&"3d"===l.type,m=await ye(e,this);return o?n||r||i||u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m):this._uvFromServiceQuery(e,m).catch(t=>(F(s),!e.field||e.field2||e.field3||e.filter?t:this._uvFromGenRenderer(e,m[0]))).catch(()=>(F(s),u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m)))}async histogram(e){const{field:a,normalizationType:r,normalizationField:i,classificationMethod:s,view:n,filter:o,signal:l}=e,u=a?this.getField(a):null,m=y(u)||_(u),c=e.valueExpression||e.sqlExpression,d=e.valueExpression&&!(e.sqlExpression&&this.supportsSQLExpression),h=this._hasLocalSource||e.features||e.useFeaturesInView||d,f=this.supportsSQLExpression,g=!s||"equal-interval"===s,w=e.minValue,S=e.maxValue,v=null!=w&&null!=S,x=e.numBins||se;if(h)return this._histogramFromMemory(e);if(this.layer.capabilities?.operations?.supportsQueryBins&&e.useQueryAttributeBins)try{return await this._histogramFromQueryAttributeBins(e)}catch{return F(l),this._histogramFromQueryAttributeBinsFromMemory(e)}if((c||f)&&g){if(!f&&(c||"natural-log"===r||"square-root"===r))throw new t(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(e)}if(m&&g)throw new t(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");return r||!g?ke(e,this).then(s=>{if(!v)return de(this,s,a,x,n,o,l);if(w>s.max||S<s.min)throw new t(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(g)return de(this,{min:w,max:S,sqlExpr:s.sqlExpr,excludeZerosExpr:s.excludeZerosExpr},a,x,n,o,l);{const t={field:a,normalizationType:r,normalizationField:i,normalizationTotal:s.normTotal,layer:this},u=ie(t),m=p(u,w,S);return ke(e,this,m).then(e=>de(this,e,a,x,n,o,l))}}):this._histogramForField(e)}async classBreaks(e){const t=!1!==e.analyzeData,a=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;return t&&a?this._classBreaksFromMemory(e):(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch(()=>(F(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){if(this._hasLocalSource)throw new t(`${this.adapterName}:not-supported`,"Layer does not support count query");const a=this.layer,r=a.createQuery();return r.where=u(r.where,e.whereClause),ae(r,e.filter),a.queryFeatureCount(r,{signal:e.signal})}async generateRenderer(e,a){const i=this.layer;if(this._hasLocalSource||i.version<10.1)throw new t(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const s=i.createQuery();return e.where=u(e.where,s.where),async function(e,t,a,i){const s=L(e),{source:n,checkValueRange:o}=t,{classificationDefinition:l}=a,u={...a.toJSON(),f:"json"};let m=null;if(m="class-breaks-definition"===l?.type?l.classificationField:l?.attributeField,n){const e={source:n?.toJSON()};u.layer=JSON.stringify(e)}u.classificationDef&&(u.classificationDef=JSON.stringify(u.classificationDef));let p={query:u};i&&(p={...i,...p});const c={url:s.path,field:m,checkValueRange:o},d=s.path+"/generateRenderer";return S(d,p).then(e=>function(e,t){const{field:a,checkValueRange:i,url:s}=e,n=t?.data;if(!n)return;if(!i){const e=Ve(n);return Promise.resolve(e)}const o=new I({statisticType:"min",onStatisticField:a}),l=new I({statisticType:"max",onStatisticField:a});return async function(e,t){const a=await async function(e,t,a,i,s){const n={...void 0},o=function(e,t){let a=C.from(e);return a.sourceSpatialReference=a.sourceSpatialReference??t?.sourceSpatialReference??null,a}(t,void 0),l=null!=t.outStatistics?.[0],u=r("featurelayer-pbf-statistics");let m;return l&&!u&&(m=await E(e,o,n,s)),m.fields,m}(e,t,0,0,void 0);return async function(e,t){return N.fromJSON(t)}(0,a)}(s,new C({outStatistics:[o,l]})).then(e=>{const t=e.features[0].attributes;let a=null,r=null;for(const e in t)e.toLowerCase().startsWith("min")?a=t[e]:r=t[e];return Ve(n,a,r)})}(c,e))}(i.parsedUrl?.path??"",{source:i.dynamicDataSource??void 0,gdbVersion:i.gdbVersion??void 0},e,{signal:a})}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new t(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const{fields:a,view:r,signal:i,filter:s}=e,n=A(a),o=O(a),l=r&&this._hasLocalSource?await this._uvFromMemory({valueExpression:n,view:r,signal:i,filter:s}):await this._uvFromServiceQuery({sqlExpression:o.expression,valueExpression:n,signal:i,filter:s});return he(l.uniqueValueInfos,a)}async getSampleFeatures(e,t){const{view:a,requiredFields:r,returnGeometry:s,filter:n,signal:o}=e,l=e.sampleSize;if(null==l||0===l)return[];const u=this.layer.createQuery(),m="json"===t;u.outSpatialReference=a?.spatialReference,u.returnGeometry=!!s,u.outFields=r,ae(u,n);let p=[],c=!1;if(a)try{const s=await a.whenLayerView(this.layer);if(c=!me(this,r,s).length,c){if(l>=1&&!e.filter&&"getSampleFeatures"in s){await this._waitForLayerViewUpdate(s);const e=await s.getSampleFeatures({minFeatureCount:l,sampleSize:l});if(null!=e)return m?e:e.map(e=>g.fromJSON(e))}if(p=await this._fetchFeaturesFromMemory(s,u,o,t),p.length>=l&&l>0)return i(p,l,1)}}catch(e){F(o)}try{if(this._hasLocalSource)return c?p:m?await this._fetchFeaturesJSONFromService(u,o):await this._fetchFeaturesFromService(u,o);const t=await this.queryFeatureCount({view:a,filter:n,signal:o}),r=this.layer.capabilities.query.maxRecordCount;let s=-1===l?t:l;if(s=r&&s>r?r:s,t<=p.length||p.length>=r)return p;if(u.maxAllowableOffset=e.resolution||4e5*(a?a.extent.width/a.width/a.scale:_e(this.layer.spatialReference)),t<=s)return m?await this._fetchFeaturesJSONFromService(u,o):await this._fetchFeaturesFromService(u,o);if(t<=2e4){const e=this.layer.createQuery();ae(e,n);const t=await this.layer.queryObjectIds();return u.objectIds=i(t,s,1),m?await this._fetchFeaturesJSONFromService(u,o):await this._fetchFeaturesFromService(u,o)}return this.layer.capabilities?.query?.supportsPagination&&(u.num=Math.min(s,2e4)),m?await this._fetchFeaturesJSONFromService(u,o):await this._fetchFeaturesFromService(u,o)}catch(e){return F(o),p}}load(e){const t=this.layer.load(e).then(async t=>{this.geometryType=t.geometryType,this.objectIdField=t.objectIdField,this.supportsSQLExpression=t.capabilities?.query?.supportsSqlExpression,this._hasLocalSource=!t.url&&!!t.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=t.minScale,this.maxScale=t.maxScale,this.fullExtent=t.fullExtent,this.workerClient=ze.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};e([a({readOnly:!0})],$e.prototype,"adapterName",void 0),e([a({constructOnly:!0})],$e.prototype,"layer",void 0),$e=e([n("esri.smartMapping.support.adapters.FeatureLayerAdapter")],$e);const Ge=$e;let Ue=class extends Ge{constructor(){super(...arguments),this.adapterName="csv-layer-adapter"}async _createGenerateRendererResult(e,a,r,i,s){const n=e?.features,u=n?.length;if(!u)throw new t("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const m=oe(n);let p=null;if("percent-of-total"===i&&(p=(await this.workerClient.summaryStatistics({field:a},m)).sum,null==p))throw new t("csv-layer-adapter:invalid","invalid normalizationTotal");if("class-breaks-definition"===s?.type){const e=(await c({field:a,normalizationType:i,normalizationField:r,normalizationTotal:p},m)).filter(e=>Number.isFinite(e));return o({definition:s,values:e,normalizationTotal:p})}const d=(await c({field:a},m)).filter(e=>null!=e&&"string"==typeof e&&""!==e.trim());return l(d)}generateRenderer(e,t){const a=e.classificationDefinition;let r=null,i=null,s=null;"class-breaks-definition"===a?.type?(r=a.classificationField,i=a.normalizationField,s=a.normalizationType):r=a?.attributeField;const n=this.layer;return h({field:r,normalizationField:i}).then(o=>{const l=n.createQuery();return l.returnGeometry=!1,l.outFields=o,l.where=u(l.where,e.where),n.queryFeatures(l,{signal:t}).then(e=>this._createGenerateRendererResult(e,r,i,s,a))})}load(e){const t=this.layer.load(e).then(async t=>{this.geometryType=t.geometryType,this.objectIdField=t.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=ze.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};e([a({readOnly:!0})],Ue.prototype,"adapterName",void 0),Ue=e([n("esri.smartMapping.support.adapters.CSVLayerAdapter")],Ue);const Ze=Ue;let We=class extends Ge{constructor(){super(...arguments),this.adapterName="feature-layer-binning-adapter"}async _getNormalizationTotalFromMemory(e,a,r){const{featuresJSON:i,graphics:s,layerView:n,query:o}=a,l={include:["sum"]},u=(!i&&!s&&n&&"queryAggregateSummaryStatistics"in n?await n.queryAggregateSummaryStatistics(o,{field:e,outStatisticTypes:l},{signal:r}):i?await this.workerClient.summaryStatistics({field:e},i):await D({attribute:{field:e,outStatisticTypes:l},features:s})).sum;if(null==u)throw new t(`${this.adapterName}:invalid`,"invalid normalizationTotal");return u}async _processStatsFromMemoryParams(e){const{features:a,filter:r}=e;if(a?.length)return this._getFilteredFeatures(a,r);const{view:i,field:s,field2:n,field3:o,normalizationField:l,valueExpression:u,returnGeometry:m,layerViewFunc:p,signal:c}=e;let d=null,y=null,f=null,g=null,w=null;if(i)try{if(d=await i.whenLayerView(this.layer),Q(d),y=null!=p&&p in d&&"function"==typeof d[p],y){await this._waitForLayerViewUpdate(d);const e=await h({field:s,field2:n,field3:o,normalizationField:l,valueExpression:u});ge(this,e).length?y=!1:(f="createAggregateQuery"in d?d.createAggregateQuery():null,f?(f.outFields=e,f.returnGeometry=!1,ae(f,r)):y=!1),d.suspended&&(y=!1)}}catch{y=!1}if(!y&&(w=we(this.layer).map(e=>e.toJSON()),g=await this._fetchFeaturesForStats({field:s,field2:n,field3:o,valueExpression:u,normalizationField:l,returnGeometry:m,filter:r,view:i,signal:c},"json"),!g?.length))throw new t(`${this.adapterName}:insufficient-data`,"No features are available to calculate statistics");return{layerView:d,query:f,featuresJSON:g,fieldInfos:w}}async _summaryStatsFromMemory(e,t){const{view:a,field:r,valueExpression:i,normalizationType:s,signal:n}=e,o={field:r,valueExpression:i,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:m,query:p,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateSummaryStatistics"});return i&&a&&(l||u)&&(o.fieldType=t?.type?R.toJSON(t.type):null,o.viewInfoParams=te(a),o.timeZone=a.timeZone,o.fieldInfos=c),"percent-of-total"===s&&null==e.normalizationTotal&&(o.normalizationTotal=await this._getNormalizationTotalFromMemory(r,{featuresJSON:l,graphics:u,layerView:m,query:p},n)),!l&&!u&&m&&"queryAggregateSummaryStatistics"in m?m.queryAggregateSummaryStatistics(p,o,{signal:n}):l?this.workerClient.summaryStatistics(o,l):D({attribute:o,features:u})}async _uvFromMemory(e,t){const{view:a,field:r,valueExpression:i,returnAllCodedValues:s,signal:n}=e,{featuresJSON:o,graphics:l,layerView:u,query:m,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateUniqueValues"}),c={field:r,field2:e.field2,field3:e.field3,fieldDelimiter:f,valueExpression:i,domains:t,returnAllCodedValues:s};return i&&a&&(o||l)&&(c.viewInfoParams=te(a),c.timeZone=a.timeZone,c.fieldInfos=p),!o&&!l&&u&&"queryAggregateUniqueValues"in u?u.queryAggregateUniqueValues(m,c,{signal:n}):o?this.workerClient.uniqueValues(c,o):J({attribute:c,features:l})}async _histogramFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:s,graphics:n,layerView:o,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateHistogram"}),m={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return r&&t&&(s||n)&&(m.viewInfoParams=te(t),m.timeZone=t.timeZone,m.fieldInfos=u),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:n,layerView:o,query:l},i)),!s&&!n&&o&&"queryAggregateHistogram"in o?o.queryAggregateHistogram(l,m,{signal:i}):s?this.workerClient.histogram(m,s):$({attribute:m,features:n})}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:s,graphics:n,layerView:o,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateClassBreaks"}),m={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return r&&t&&(s||n)&&(m.viewInfoParams=te(t),m.timeZone=t.timeZone,m.fieldInfos=u),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:n,layerView:o,query:l},i)),!s&&!n&&o&&"queryAggregateClassBreaks"in o?o.queryAggregateClassBreaks(l,m,{signal:i}):s?this.workerClient.classBreaks(m,s):G({attribute:m,features:n})}getField(e=""){const t=we(this.layer);return t?.find(t=>t.name.toLowerCase()===e?.toLowerCase())}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!1,supportsStatistics:!0}:null}getFieldDomain(e,t){return null}async summaryStatistics(e){const{field:a}=e,r=a?this.getField(a):null,i=y(r)||_(r),s=e.sqlExpression&&!e.valueExpression&&!a;if(i||s)throw new t(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._summaryStatsFromMemory(e,r)}async uniqueValues(e){const t=await ye(e,this);return this._uvFromMemory(e,t)}async histogram(e){const{field:a}=e,r=a?this.getField(a):null,i=y(r)||_(r),s=e.sqlExpression&&!e.valueExpression&&!a;if(i||s)throw new t(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._histogramFromMemory(e)}async classBreaks(e){return(!1!==e.analyzeData?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)).catch(()=>(F(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){const a=await(e.view?.whenLayerView(this.layer));if(!a||!("queryAggregateCount"in a)||!a.queryAggregateCount)throw new t(`${this.adapterName}:not-supported`,"LayerView is not supported.");await this._waitForLayerViewUpdate(a);const r=a.createAggregateQuery();return r.where=u(r.where,e.whereClause),ae(r,e.filter),a.queryAggregateCount(r,{signal:e.signal})}generateRenderer(e,a){throw new t(`${this.adapterName}:not-supported`,"'generateRenderer' is not supported.")}heatmapStatistics(e){throw new t(`${this.adapterName}:not-supported`,"'heatmapStatistics' is not supported.")}async predominantCategories(e){const{fields:t,view:a,signal:r}=e,i=A(t),s=await this._uvFromMemory({valueExpression:i,view:a,signal:r});return he(s.uniqueValueInfos,t)}async getSampleFeatures(e,a){const{view:r,sampleSize:s,requiredFields:n,returnGeometry:o,filter:l,signal:u}=e;if(!r)throw new t(`${this.adapterName}:not-supported`,"'view' is required to get sample features for binning.");if("3d"===r.type)throw new t(`${this.adapterName}:not-supported`,"3d 'view' is not supported to get sample features for binning.");const m=await r.whenLayerView(this.layer);if(!("queryAggregateJSON"in m&&m.queryAggregateJSON&&"queryAggregates"in m&&m.queryAggregates))throw new t(`${this.adapterName}:not-supported`,"LayerView is not supported.");if(await this._waitForLayerViewUpdate(m),ge(this,n).length)throw new t(`${this.adapterName}:insufficient-data`,"Layer does not have required fields");const p="json"===a,c=m.createAggregateQuery();c.outSpatialReference=r?.spatialReference,c.returnGeometry=!!o,c.outFields=n,ae(c,l);const{features:d}=p?await m.queryAggregateJSON(c,{signal:u}):await m.queryAggregates(c,{signal:u});return d.length&&null!=s&&s>0&&s<=d.length?i(d,s,1):d}load(e){const a=this.layer.load(e).then(async a=>{this.geometryType="polygon",this.objectIdField=null,this.supportsSQLExpression=!1,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent;const r="featureReduction"in a?a.featureReduction:null;if("binning"!==r?.type&&"cluster"!==r?.type)throw new t(`${this.adapterName}:invalid-parameters`,`Feature reduction type ${r?.type} is not supported`);this.workerClient=ze.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(a),Promise.resolve(this)}};e([a({readOnly:!0})],We.prototype,"adapterName",void 0),We=e([n("esri.smartMapping.support.adapters.FeatureLayerBinningAdapter")],We);const He=We;let Ke=class extends Ce{constructor(e){super(e),this._featureLayerAdapter=null,this.workerClient=null,this.adapterName="scene-layer-adapter"}destroy(){this.workerClient?.destroy()}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!e||!a.length)return e;const r=this.layer.objectIdField,i=e.clone(),s=t.filter(e=>{const t=this.layer.getField(e);return!a.includes(t.name)}),n=s.some(e=>this.layer.getField(e).name===r);return i.outFields=n?s:[...s,r],i}async _fetchFeaturesFromMemory(e,a,r){if(!e)throw new t("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const i=await e.whenLayerView(this.layer),s=new AbortController,n=s.signal,o=B(()=>!i.updating,n);await w(o,5e3,s);const l=me(this,r,i);F(n);const u=this._updateQuery(a,r??[],l),m=await i.queryFeatures(u,{signal:n});F(n);const p=m.features;return l.length?i.whenGraphicAttributes(p,l):p}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(oe)}_fetchFeaturesForStats(e,t){return h({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t))}async _processStatsFromMemoryParams(e){const a=e.features;if(a?.length)return a.length&&"declaredClass"in a[0]&&"esri.Graphic"===a[0].declaredClass?{graphics:a}:{featuresJSON:a};const{view:r,field:i,normalizationField:s,valueExpression:n,signal:o}=e,l=await this._fetchFeaturesForStats({field:i,valueExpression:n,normalizationField:s,view:r,signal:o},null);if(!l?.length)throw new t("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:l}}_getCachedStatistics(e,a){const r=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new t("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):r.queryCachedStatistics(a?.name,{signal:e.signal}).then(e=>{const t=e.stats,{min:a,max:r,totalValuesCount:i}=t;let{avg:s,stddev:n,sum:o,variance:l,count:u}=t;return 0===a&&0===r||(s=0===s?null:s,o=0===o?null:o,n=0===n?null:n,l=0===l?null:l,u=0===u?null:u),null==u&&(null!=o&&null!=s?u=Math.round(o/s):null!=i&&(u=i)),{avg:s,count:u,max:r,min:a,stddev:n,sum:o,variance:l}})}async _getNormalizationTotal(e,a,r){const i={include:["sum"]},s=(a?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:i},a):await D({attribute:{field:e,outStatisticTypes:i},features:r})).sum;if(null==s)throw new t("scene-layer-adapter:invalid","invalid normalizationTotal");return s}async _getSummaryStatisticsFromMemory(e,t){const{view:a,field:r,normalizationField:i,valueExpression:s}=e,{featuresJSON:n,graphics:o}=await this._processStatsFromMemoryParams(e),l={field:r,valueExpression:s,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes};return e.valueExpression&&a&&n&&(l.fieldType=t?.type?R.toJSON(t.type):null,l.viewInfoParams=te(a),l.timeZone=a.timeZone),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(l.normalizationTotal=await this._getNormalizationTotal(r,n,o)),n?this.workerClient.summaryStatistics(l,n):D({attribute:l,features:o})}_getCachedStatisticsForUniqueValues(e,a){const r=this.layer,i=a?.name,s=a&&e.field?this.getFieldDomain(e.field):null;return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new t("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):r.queryCachedStatistics(i,{signal:e.signal}).then(t=>{const s=t.stats;if(!s.mostFrequentValues)throw new Error;const n=t.labels?.labels,o={},l=[],u="countOF"+i;s.mostFrequentValues.forEach(e=>{const t=new g({attributes:{}});t.attributes[i]=a&&a.name!==r.objectIdField&&(T(a)||y(a))?Number(e.value):e.value,t.attributes[u]=e.count,l.push(t)}),n&&n.forEach(e=>{o[e.value]=e.label});const m=new N({features:l});return ce(m,{layer:this,field:e.field,labels:o,view:e.view,signal:e.signal})}).then(t=>ve(t,[s],e.returnAllCodedValues))}async _getUniqueValuesFromMemory(e,t){const{view:a,field:r,field2:i,field3:s,valueExpression:n,returnAllCodedValues:o}=e,l={field:r,field2:i,field3:s,fieldDelimiter:f,valueExpression:n,domains:t,returnAllCodedValues:o},{featuresJSON:u,graphics:m}=await this._processStatsFromMemoryParams(e);return e.valueExpression&&a&&u&&(l.viewInfoParams=te(a),l.timeZone=a.timeZone),u?this.workerClient.uniqueValues(l,u):J({attribute:l,features:m})}_getCachedStatisticsForHistogram(e,a){const r=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new t("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):r.queryCachedStatistics(a&&a.name,{signal:e.signal}).then(t=>{const a=t.stats,{minValue:r,maxValue:i}=e,s=null!=r?r:a.min,n=null!=i?i:a.max,o=e.numBins||10,l=function(e,t=e.minimum,a=e.maximum,r){const i=[];for(let e=0;e<r;e++)i[e]=0;const s=e.counts.length,n=e.minimum,o=e.maximum;for(let l=0;l<s;l++){const u=(l+.5)/s,m=((1-u)*n+u*o-t)/(a-t)*r;m>=0&&m<=r&&(i[m===r?r-1:Math.floor(m)]+=e.counts[l])}const l=[];return i.forEach((e,t)=>{const a=new g({attributes:{}});a.attributes.EXPR_1=t+1,a.attributes.countOFExpr=e,l.push(a)}),new N({features:l})}(a.histogram,s,n,o);return fe(l,s,n,o)})}async _getClassBreaksFromMemory(e){const{view:t,field:a,normalizationField:r,valueExpression:i}=e,{featuresJSON:s,graphics:n}=await this._processStatsFromMemoryParams(e),o={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:r,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&s&&(o.viewInfoParams=te(t),o.timeZone=t.timeZone),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(o.normalizationTotal=await this._getNormalizationTotal(a,s,n)),s?this.workerClient.classBreaks(o,s):G({attribute:o,features:n})}async _getHistogramFromMemory(e){const{view:t,field:a}=e,{featuresJSON:r,graphics:i}=await this._processStatsFromMemoryParams(e),s={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&r&&(s.viewInfoParams=te(t),s.timeZone=t.timeZone),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(s.normalizationTotal=await this._getNormalizationTotal(a,r,i)),r?this.workerClient.histogram(s,r):$({attribute:s,features:i})}getField(e){return this.layer.getField(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}createQuery(){return this.layer.createQuery()}summaryStatistics(e){const a=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.summaryStatistics(e);if(e.filter)throw new t("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(a?.name)?this._getCachedStatistics(e,a).catch(()=>(F(e.signal),this._getSummaryStatisticsFromMemory(e,a))):this._getSummaryStatisticsFromMemory(e,a)}async uniqueValues(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.uniqueValues(e);if(e.filter)throw new t("scene-layer-adapter:not-supported","filter is not supported");const a=await ye(e,this),{field:r,field2:i}=e,s=r&&i,n=this.getField(r);return!s&&n&&this._hasCachedStatistics(n.name)?this._getCachedStatisticsForUniqueValues(e,n).catch(()=>(F(e.signal),this._getUniqueValuesFromMemory(e,a))):this._getUniqueValuesFromMemory(e,a)}histogram(e){const a=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.histogram(e);if(e.filter)throw new t("scene-layer-adapter:not-supported","filter is not supported");return a&&this._hasCachedStatistics(a.name)?this._getCachedStatisticsForHistogram(e,a).catch(()=>(F(e.signal),this._getHistogramFromMemory(e))):this._getHistogramFromMemory(e)}classBreaks(e){const a=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.classBreaks(e);if(e.filter)throw new t("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(a?.name)?Promise.reject(new t("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new t("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,a){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,a):Promise.reject(new t("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new t("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new t("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,a){if(e.filter)throw new t("scene-layer-adapter:not-supported","filter is not supported");const{view:r,sampleSize:s,requiredFields:n,returnGeometry:o,signal:l}=e,u="json"===a,m=this.createQuery();m.outFields=n,m.returnGeometry=!!o,m.where=null,m.num=s;let p=[];try{if(p=u?await this._fetchFeaturesJSONFromMemory(r,m,n):await this._fetchFeaturesFromMemory(r,m,n),p.length&&null!=s&&s>0&&s<=p.length)return i(p,s,1)}catch(e){F(l)}let c=null;if(this._featureLayerAdapter){const t={...e};delete t.view,c=await this._featureLayerAdapter.getSampleFeatures(t,a)}return c?.length?c:i(p,p.length,1)}load(e){const t=this.layer.load(e).then(async t=>{this.workerClient=ze.getInstance(),await this.workerClient.open(e.signal);const a=t.associatedLayer;if(this.geometryType=t.geometryType,null!=a)return this._featureLayerAdapter=new Ge({layer:a}),this._featureLayerAdapter.load(e).then(()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent});this.objectIdField=t.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=t.fullExtent});return this.addResolvingPromise(t),Promise.resolve(this)}};e([a({readOnly:!0})],Ke.prototype,"adapterName",void 0),e([a({constructOnly:!0})],Ke.prototype,"layer",void 0),Ke=e([n("esri.smartMapping.support.adapters.SceneLayerAdapter")],Ke);const Xe=Ke;let Ye=class extends Xe{constructor(e){super(e),this.adapterName="point-cloud-layer-adapter"}getField(e){return this.layer.fieldsIndex.get(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then(()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1});return this.addResolvingPromise(t),Promise.resolve(this)}};e([a({readOnly:!0})],Ye.prototype,"adapterName",void 0),Ye=e([n("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],Ye);const et=Ye;let tt=class extends Je{constructor(){super(...arguments),this.adapterName="stream-layer-adapter"}async _summaryStatsFromClientQuery(e,t){const{signal:a,view:r}=e,i=le(this,e,t);i.outStatistics=i.outStatistics?.filter(e=>"totalcount_value"!==e.outStatisticFieldName);const s=await this._fetchFeatureSetFromMemory(i,r,a),n=ue(s,y(t)||_(t));return Se(n,e.outStatisticTypes)}};e([a({readOnly:!0})],tt.prototype,"adapterName",void 0),tt=e([n("esri.smartMapping.support.adapters.StreamLayerAdapter")],tt);const at={0:{adapter:Ge,type:"catalog",label:"CatalogLayer"},1:{adapter:Ge,type:"catalog-footprint",label:"CatalogFootprintLayer"},2:{adapter:Ze,type:"csv",label:"CSVLayer"},3:{adapter:Ge,type:"feature",label:"FeatureLayer"},5:{adapter:Ge,type:"imagery",label:"ImageryLayer"},4:{adapter:Ge,type:"geojson",label:"GeoJSONLayer"},6:{adapter:Ge,type:"knowledge-graph-sublayer",label:"KnowledgeGraphSublayer"},7:{adapter:Je,type:"ogc-feature",label:"OGCFeatureLayer"},8:{adapter:Ge,type:"oriented-imagery",label:"OrientedImageryLayer"},9:{adapter:Ge,type:"parquet",label:"ParquetLayer"},10:{adapter:et,type:"point-cloud",label:"PointCloudLayer"},11:{adapter:Xe,type:"scene",label:"SceneLayer"},12:{adapter:tt,type:"stream",label:"StreamLayer"},13:{adapter:Ge,type:"subtype-group",label:"SubtypeGroupLayer"},14:{adapter:Ge,type:"subtype-sublayer",label:"SubtypeSublayer"},15:{adapter:Ge,type:"wfs",label:"WFSLayer"}},rt=[0,1,2,3,4,6,7,8,9,10,11,12,13,14,15],it=[1,2,3,4,6,7,8,9,11,12,13,14,15],st=[2,3,4,7,6,8,9,12,15];function nt(e){return e.map(e=>at[e].label)}function ot(e){return e.map(e=>at[e].type)}function lt(e,t=rt,a){if(e instanceof Ce)return e;const r=function(e,t=rt){let a=null;return t.some(t=>{const r=e.type===at[t].type;return r&&(a=at[t].adapter),r}),a}(e,t);return r?a?new He({layer:e}):new r({layer:e}):null}export{ot as a,st as b,lt as c,rt as d,it as f,nt as g};
