/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{D as t,b as e,g as i}from"./utils30.js";import{n as r}from"./string.js";import s from"../core/Error.js";import{h as n}from"../core/lang.js";import{L as o}from"./Logger.js";import{d as a}from"./diffUtils.js";import{e as h,b as c}from"./ArcadeExpression.js";import{C as u,m as d}from"./definitions.js";import{c as l,g as _,d as p}from"./UpdateTracking2D.js";import{n as f}from"./constants4.js";import{c as y}from"./aaBoundingRect.js";import{c as m}from"./boundsUtils.js";import{n as g}from"./queryUtils.js";import{g as x,a as I}from"./timeSupport.js";import w from"../rest/support/Query.js";import{a as b,d as S,e as E,i as C,S as T}from"./FeatureMetadata.js";import{P as z}from"./enums.js";import{a as A}from"./aaBoundingBox.js";import{f as v}from"./labelFormatUtils.js";import{s as F}from"./labelUtils.js";import{h as D,l as B}from"./utils6.js";import{parseWhereClause as R}from"../core/sql.js";function M(t){return"url"in t&&"urlHash"in t?{...t,url:""}:t}class V{destroy(){}}class O{get length(){return this._pos}constructor(t,e){this._pos=0;const i=e?this._roundToNearest(e,t.BYTES_PER_ELEMENT):40;this._array=new ArrayBuffer(i),this._buffer=new t(this._array),this._ctor=t,this._i16View=new Int16Array(this._array)}_roundToNearest(t,e){const i=Math.round(t);return 1===e?i:i+(e-i%e)}_ensureSize(t){if(this._pos+t>=this._buffer.length){const e=this._roundToNearest(1.25*(this._array.byteLength+t*this._buffer.BYTES_PER_ELEMENT),this._buffer.BYTES_PER_ELEMENT),i=new ArrayBuffer(e),r=new this._ctor(i);r.set(this._buffer,0),this._array=i,this._buffer=r,this._i16View=new Int16Array(this._array)}}ensureSize(t){this._ensureSize(t)}writeF32(t){this._ensureSize(1);const e=this._pos;return new Float32Array(this._array,4*this._pos,1)[0]=t,this._pos++,e}push(t){this._ensureSize(1);const e=this._pos;return this._buffer[this._pos++]=t,e}writeFixed(t){this._buffer[this._pos++]=t}setValue(t,e){this._buffer[t]=e}i1616Add(t,e,i){this._i16View[2*t]+=e,this._i16View[2*t+1]+=i}getValue(t){return this._buffer[t]}getValueF32(t){return new Float32Array(this._array,4*t,1)[0]}incr(t){if(this._buffer.length<t)throw new Error("Increment index overflows the target buffer");this._buffer[t]++}decr(t){this._buffer[t]--}writeRegion(t){this._ensureSize(t.length);const e=this._pos;return this._buffer.set(t,this._pos),this._pos+=t.length,e}writeManyFrom(t,e,i){this._ensureSize(i-e);for(let r=e;r!==i;r++)this.writeFixed(t._buffer[r])}buffer(){const t=this._array.slice(0,4*this._pos);return this.destroy(),t}toArray(){return[...this._buffer]}seek(t){this._pos=t}destroy(){this._array=null,this._buffer=null}}class j{constructor(t,e,i=0){const r=6*i*Uint32Array.BYTES_PER_ELEMENT,s=4*i*e.stride,n=e.stride/4,o=e.attributes.find(t=>"pos"===t.name||"position"===t.name);if(!o)throw new Error("InternalError: Unable to find position attribute");this.layout={...e,position:o},this._indices=new O(Uint32Array,r),this._vertices=new O(Uint32Array,s),this._metrics=new O(Uint32Array,0),this._metricCountOffset=this._metrics.push(0),this._strideInt=n,this._instanceId=t}serialize(t){const e=this._indices.buffer(),i=this._vertices.buffer(),r=this._metrics.length?this._metrics.buffer():null;return t.push(e,i),{instanceId:this._instanceId,layout:this.layout,indices:e,vertices:i,metrics:r}}get strideInt(){return this._strideInt}get vertexCount(){return this._vertices.length/this._strideInt}get indexCount(){return this._indices.length}get indexWriter(){return this._indices}get vertexWriter(){return this._vertices}get metricWriter(){return this._metrics}vertexEnsureSize(t){this._vertices.ensureSize(t)}indexEnsureSize(t){this._indices.ensureSize(t)}writeIndex(t){this._indices.push(t)}writeVertex(t){this._vertices.push(t)}writeVertexRegion(t){this._vertices.writeRegion(t)}writeVertexF32(t){this._vertices.writeF32(t)}writeMetric(t){this._metrics.incr(this._metricCountOffset),t.serialize(this._metrics)}}class k{constructor(e,i=0){this._id=e,this._sizeHint=i,this._entityRecordCountOffset=0,this._entityCountOffset=0,this._entityIdIndex=0,this._entitySortKeyIndex=0,this._didEntityStart=!1,this._instanceIdToVertexData=new Map,this._recordIndexStart=0,this._recordIndexCount=0,this._recordVertexStart=0,this._recordVertexCount=0,this._current={metric:null,writer:null,start:0,sortKey:0,instanceId:0,layoutHash:0,indexStart:0,vertexStart:0,textureKey:0,metricBoxLenPointer:0},this._entities=new O(Uint32Array,this._sizeHint*t.byteSizeHint),this._entityCountOffset=this._entities.push(0)}get id(){return this._id}serialize(){const t=new Array,e=[],i=this._entities.buffer();for(const i of this._instanceIdToVertexData.values())e.push(i.serialize(t));return{message:{data:e,entities:i},transferList:t}}vertexStart(){return this._current.vertexStart??0}vertexCount(){return this._current.writer?.vertexCount??0}indexCount(){return this._current.writer?.indexCount??0}vertexEnsureSize(t){this._current.writer.vertexEnsureSize(t)}indexEnsureSize(t){this._current.writer.indexEnsureSize(t)}vertexWrite(t){this._current.writer.writeVertex(t)}vertexWriteRegion(t){this._current.writer.writeVertexRegion(t)}vertexWriteF32(t){this._current.writer.writeVertexF32(t)}recordBounds(t,e,i,r){}indexWrite(t){this._current.writer.writeIndex(t)}metricStart(t){this._current.metric=t,this._current.metric.recordStart=this.recordCount()}metricEnd(){const t=this._current.writer;this._current.metric&&(this._current.metric.recordCount=this.recordCount()-this._current.metric.recordStart),this._current.metric?.bounds.length&&this._current.metric?.recordCount?(t.writeMetric(this._current.metric),this._current.metric=null):this._current.metric=null}metricBoxWrite(t){this._current.metric.bounds.push(t)}entityStart(t,e=t){this._entityIdIndex=this._entities.push(t),this._entitySortKeyIndex=this._entities.writeF32(e),this._entityRecordCountOffset=this._entities.push(0),this._didEntityStart=!0}entityRecordCount(){return this._entities.getValue(this._entityRecordCountOffset)}entityEnd(){this._didEntityStart&&(0===this.entityRecordCount()?this._entities.seek(this._entityIdIndex):this._entities.incr(this._entityCountOffset),this._didEntityStart=!1)}recordCount(){return this._entities.getValue(this._entityRecordCountOffset)}recordStart(t,e,i=0){this._current.writer=this._getVertexWriter(t,e),this._current.indexStart=this._current.writer.indexCount,this._current.vertexStart=this._current.writer.vertexCount,this._current.instanceId=t,this._current.layoutHash=e.hash,this._current.textureKey=i}recordEnd(t=0){const i=this._current.vertexStart,r=this._current.writer.vertexCount-i;if(!r)return!1;const s=this._current.indexStart,n=this._current.writer.indexCount-s;return this._recordIndexStart=s,this._recordIndexCount=n,this._recordVertexStart=i,this._recordVertexCount=r,this._entities.incr(this._entityRecordCountOffset),e.write(this._entities,this._current.instanceId,this._current.textureKey,s,n,i,r,t),!0}copyLast(t,i){const r=this._recordVertexStart+this._recordVertexCount;this._entities.incr(this._entityRecordCountOffset),e.write(this._entities,this._current.instanceId,this._current.textureKey,this._recordIndexStart+this._recordIndexCount,this._recordIndexCount,r,this._recordVertexCount,0);const s=this._current.writer.indexWriter,n=this._current.writer.vertexWriter,o=this._recordIndexStart+this._recordIndexCount,a=this._recordVertexCount;for(let t=this._recordIndexStart;t!==o;t++){const e=s.getValue(t);s.push(e+a)}const h=this._current.writer.layout.stride/Uint32Array.BYTES_PER_ELEMENT,c=this._recordVertexStart*h,u=(this._recordVertexStart+this._recordVertexCount)*h;for(let t=c;t!==u;t++){const e=n.getValue(t);n.push(e)}const d=this._current.writer.layout.position,l=d.packPrecisionFactor??1,_=d.offset/Uint32Array.BYTES_PER_ELEMENT,p=t*l,f=i*l;for(let t=r*h;t<=n.length;t+=h)n.i1616Add(t+_,p,f)}copyLastFrom(t,e,i){const r=t._entities.getValue(t._entityIdIndex);if(r!==this._entities.getValue(this._entityIdIndex)){const e=t._entities.getValueF32(t._entitySortKeyIndex);this.entityStart(r,e)}this.recordStart(t._current.instanceId,t._current.writer.layout,t._current.textureKey);const s=this._current.writer.layout.stride/Uint32Array.BYTES_PER_ELEMENT,n=this._current.vertexStart,o=t._current.vertexStart-n,a=this._current.writer.indexWriter,h=this._current.writer.vertexWriter,c=t._current.writer.indexWriter,u=t._current.writer.vertexWriter;for(let e=t._current.indexStart;e!==c.length;e++){const t=c.getValue(e);a.push(t-o)}for(let e=t._current.vertexStart*s;e!==u.length;e++){const t=u.getValue(e);h.push(t)}const d=this._current.writer.layout.position,l=d.packPrecisionFactor??1,_=d.offset/Uint32Array.BYTES_PER_ELEMENT,p=e*l,f=i*l;for(let t=n*s;t<=h.length;t+=s)h.i1616Add(t+_,p,f);this.recordEnd()}_getVertexWriter(t,e){const i=this._instanceIdToVertexData;return i.has(t)||i.set(t,new j(t,e,this._sizeHint)),i.get(t)}}class N{}class L extends N{constructor(t){super(),this._fetcher=t,this._controller=new AbortController,this._pendingIds=new Set,this._pendingRequests=[],this._resourceIdToResource=new Map}destroy(){this._controller.abort()}get _abortOptions(){return{signal:this._controller.signal}}enqueueRequest(t){const e=M(t.resource),i=r(JSON.stringify(e));return this._pendingIds.has(i)||(this._pendingIds.add(i),this._pendingRequests.push({...t,resourceId:i})),i}async fetchEnqueuedResources(){const t=this._pendingRequests;if(this._pendingIds.clear(),this._pendingRequests=[],0===t.length)return;const e=await this._fetcher.fetch(t,this._abortOptions);for(let i=0;i<e.length;i++){const r=t[i].resourceId;this._resourceIdToResource.set(r,e[i])}}async fetchResourceImmediate(t){const e=await this._fetcher.fetch([t]);if(1!==e.length)throw new Error("FeaturePipelineResourceProxy: failed to fetch resources");return e[0]}async fetchDictionaryResourceImmediate(t){const e=await this._fetcher.fetchDictionary([t]);if(1!==e.length)throw new Error("FeaturePipelineResourceProxy: failed to fetch dictionary resources");return e[0]}getResource(t){return this._resourceIdToResource.get(t)}}class P{constructor(t){this.data=t,this._referenceCount=0}increment(){this._referenceCount+=1}decrement(){this._referenceCount-=1}empty(){return 0===this._referenceCount}}class U{constructor(){this._freeIdsGenerationA=[],this._freeIdsGenerationB=[],this._idCounter=1,this._freeIds=this._freeIdsGenerationA,this._objectIdToDisplayId=new Map}createIdForObjectId(t){let e=this._objectIdToDisplayId.get(t);return e?e.increment():(e=new P(l(this._getFreeId(),!1)),e.increment(),this._objectIdToDisplayId.set(t,e)),e.data}releaseIdForObjectId(t){const e=this._objectIdToDisplayId.get(t);e&&(e.decrement(),e.empty()&&(this._objectIdToDisplayId.delete(t),this._freeIds.push(e.data)))}getDisplayIdForObjectId(t){const e=this._objectIdToDisplayId.get(t);return null!=e?e.data:null}releaseAll(){for(const t of this._objectIdToDisplayId.values())this._freeIds.push(t.data);this._objectIdToDisplayId.clear()}incrementGeneration(){this._freeIds=this._freeIds===this._freeIdsGenerationA?this._freeIdsGenerationB:this._freeIdsGenerationA}_getFreeId(){return this._freeIds.length?this._freeIds.pop():this._idCounter++}}const W=()=>o.getLogger("esri.views.2d.layers.FeatureLayerView2D"),G={getAttribute:(t,e)=>t.readAttribute(e)};async function H(t,e){try{const i=await R(t,e);return i.isStandardized||W().error(new s("sql-parse-error","expression is not standardized",{where:t})),(e,r)=>{const n=e.readArcadeFeature();try{return i.testFeatureCompiled(n,G,r.currentUser)}catch(e){return W().warn(new s("sql-runtime-error","Encountered an error when evaluating where clause",{where:t,error:e})),!0}}}catch(e){return W().warn(new s("sql-runtime-error","Encountered an error when evaluating where clause",{where:t,error:e})),t=>!0}}class K{constructor(t){this._geometryBounds=y(),this._idToVisibility=new Map,this._serviceInfo=t}static async create(t){const e=new K(t);return await e.update(t.filterJSON,t.spatialReference),e}get hash(){return this._hash}check(t,e){return this._applyFilter(t,e)}invalidate(){this._idToVisibility.forEach((t,e)=>{this._idToVisibility.set(e,0)})}setKnownIds(t){for(const e of t)this._idToVisibility.set(e,1)}setTrue(t){const e=[],i=[],r=new Set(t);return this._idToVisibility.forEach((t,s)=>{const n=!!(1&this._idToVisibility.get(s)),o=r.has(s);!n&&o?e.push(s):n&&!o&&i.push(s),this._idToVisibility.set(s,o?3:0)}),{show:e,hide:i}}createQuery(){const{geometry:t,spatialRel:e,where:i,timeExtent:r,objectIds:s}=this;return w.fromJSON({geometry:t,spatialRel:e,where:i,timeExtent:r,objectIds:s})}async update(t,e){this._hash=JSON.stringify(t);const i=await g(t,null,e);await Promise.all([this._setGeometryFilter(i),this._setIdFilter(i),this._setAttributeFilter(i),this._setTimeFilter(i)])}async _setAttributeFilter(t){if(!t?.where)return this._clause=null,void(this.where=null);this._clause=await H(t.where,this._serviceInfo.fieldsIndex),this.where=t.where}_setIdFilter(t){this._idsToShow=t?.objectIds&&new Set(t.objectIds),this._idsToHide=t?.hiddenIds&&new Set(t.hiddenIds),this.objectIds=t?.objectIds}async _setGeometryFilter(t){if(!t?.geometry)return this._spatialQueryOperator=null,this.geometry=null,void(this.spatialRel=null);const e=t.geometry,i=t.spatialRel??"esriSpatialRelIntersects",r=await x(i,e,this._serviceInfo.geometryType,this._serviceInfo.hasZ,this._serviceInfo.hasM);m(this._geometryBounds,e),this._spatialQueryOperator=r,this.geometry=e,this.spatialRel=i}_setTimeFilter(t){if(this.timeExtent=this._timeOperator=null,t?.timeExtent){if(!this._serviceInfo.timeInfo){const e=new s("feature-layer-view:time-filter-not-available","Unable to apply time filter, as layer doesn't have time metadata.",t.timeExtent);return void o.getLogger("esri.views.2d.layers.features.controllers.FeatureFilter").error(e)}this.timeExtent=t.timeExtent,this._timeOperator=I(this._serviceInfo.timeInfo,t.timeExtent,b.Shared)}}_applyFilter(t,e){return this._filterByGeometry(t)&&this._filterById(t)&&this._filterByTime(t)&&this._filterByExpression(t,e)}_filterByExpression(t,e){return!this.where||this._clause(t,e)}_filterById(t){return(!this._idsToHide?.size||!this._idsToHide.has(t.getObjectId()))&&(!this._idsToShow?.size||this._idsToShow.has(t.getObjectId()))}_filterByGeometry(t){if(!this.geometry)return!0;const e=t.readGeometryWorldSpace();return!!e&&this._spatialQueryOperator(e)}_filterByTime(t){return null==this._timeOperator||this._timeOperator(t)}}const Y=()=>o.getLogger("esri.views.layers.2d.features.support.AttributeStore"),q=(Y(),()=>null),$=n("esri-shared-array-buffer");n("esri-atomics");class J{constructor(t,e,i){this.size=0,this.texelSize=4,this.dirtyStart=0,this.dirtyEnd=0;const{pixelType:r,layout:s,textureOnly:n}=e;this.textureOnly=n||!1,this.pixelType=r,this.layout=s,this._resetRange(),this.size=t,this.isLocal=i,n||(this.data=this._initData(r,t))}get buffer(){return this.data?.buffer}unsetComponentAllTexels(t,e){const i=this.data;for(let r=0;r<this.size*this.size;r++)i[r*this.texelSize+t]&=~e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponentAllTexels(t,e){const i=this.data;for(let r=0;r<this.size*this.size;r++)i[r*this.texelSize+t]|=255&e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponent(t,e,i){const r=this.data;for(const s of i)r[s*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)}setComponentTexel(t,e,i){this.data[i*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i)}unsetComponentTexel(t,e,i){this.data[i*this.texelSize+t]&=~e,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i)}getData(t,e){const i=_(t);return this.data[i*this.texelSize+e]}setData(t,e,i){const r=_(t),s=1<<e;0!==(this.layout&s)?null!=this.data&&(this.data[r*this.texelSize+e]=i,this.dirtyStart=Math.min(this.dirtyStart,r),this.dirtyEnd=Math.max(this.dirtyEnd,r)):Y().error("mapview-attributes-store","Tried to set a value for a texel's readonly component")}expand(t){if(this.size=t,!this.textureOnly){const e=this._initData(this.pixelType,t),i=this.data;e.set(i),this.data=e}}toMessage(){const t=this.dirtyStart,e=this.dirtyEnd,i=this.texelSize;if(t>e)return null;this._resetRange();const r=!this.isLocal,s=this.pixelType,n=this.layout,o=this.data;return{start:t,end:e,data:r&&o.slice(t*i,(e+1)*i)||null,pixelType:s,layout:n}}_initData(t,e){const r=ArrayBuffer,s=i(t),n=new s(new r(e*e*4*s.BYTES_PER_ELEMENT));for(let t=0;t<n.length;t+=4)n[t+1]=255;return n}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}}class Q{constructor(t){this._client=t,this._filters=[],this._blocks=new Array,this._attributeComputeInfo=null,this._abortController=new AbortController,this._size=u,this._idsToHighlight=new Map,this._arcadeDependencies=new Set,this._initialized=!1,this.version=0,this._idGenerator=new U,this._epoch=1}destroy(){this._abortController.abort()}_initialize(){if(null!=this._blockDescriptors)return;const t=z.FLOAT;q(`Creating AttributeStore ${$?"with":"without"} shared memory`),this._blockDescriptors=[{pixelType:z.UNSIGNED_BYTE,layout:1},{pixelType:z.UNSIGNED_BYTE,layout:15,textureOnly:!0},{pixelType:z.UNSIGNED_BYTE,layout:15,textureOnly:!0},{pixelType:t,layout:15},{pixelType:t,layout:15},{pixelType:t,layout:15},{pixelType:t,layout:15},{pixelType:z.FLOAT,layout:15}],this._blocks=this._blockDescriptors.map(()=>null)}get hasHighlight(){return this._idsToHighlight.size>0}createDisplayIdForObjectId(t){return this._idGenerator.createIdForObjectId(t)}releaseDisplayIdForObjectId(t){return this._idGenerator.releaseIdForObjectId(t)}getDisplayIdForObjectId(t){return this._idGenerator.getDisplayIdForObjectId(t)}incrementDisplayIdGeneration(){this._idGenerator.incrementGeneration()}hasArcadeDependency(t){return this._arcadeDependencies.has(t)}releaseAllIds(){this._idGenerator.releaseAll()}async update(t,e,i,r=0){const s=a(this._schema,t);if(this.version=r,s&&(n("esri-2d-update-debug")&&console.debug(`Version[${r}] AttributeStore.update`,{changed:s}),this._schema=t,this._attributeComputeInfo=null,this._initialize(),null!=t))if(i&&(this._filters=await Promise.all(t.filters.map(t=>t?K.create({geometryType:i.geometryType,hasM:!1,hasZ:!1,timeInfo:i.timeInfo,fieldsIndex:i.fieldsIndex,spatialReference:i.outSpatialReference,filterJSON:t}):null))),"multi"!==t.type)this._attributeComputeInfo={type:"feature",map:new Map},await Promise.all(t.bindings.map(async t=>{const i=await this._bind(e,t);this._updateReferences(i)}));else{this._attributeComputeInfo={type:"multi",keyField:t.keyField,map:new Map};for(const i in t.bindings){const r=t.bindings[i];await Promise.all(r.map(async t=>{const r=await this._bind(e,t,parseInt(i,10));this._updateReferences(r)}))}}}setHighlight(t,e){let i=null;0===t.length&&0===e.length&&(i=this._getBlock(0),i.unsetComponentAllTexels(0,(1<<d)-1));for(const{displayId:e,highlightFlags:r}of t){if(null==e||-1===e)continue;i||(i=this._getBlock(0),i.unsetComponentAllTexels(0,(1<<d)-1));const t=_(e);i.setComponent(0,r,[t])}this._idsToHighlight.clear();for(const{objectId:e,highlightFlags:i}of t)this._idsToHighlight.set(e,i);for(const{objectId:t,highlightFlags:i}of e)this._idsToHighlight.set(t,i)}setData(t,e,i,r){const s=_(t);this._ensureSizeForTexel(s),this._getBlock(e).setData(t,i,r)}getData(t,e,i){return this._getBlock(e).getData(t,i)}getHighlightFlags(t){return this._idsToHighlight.get(t)||0}unsetAttributeData(t){const e=_(t);this._getBlock(0).setData(e,0,0)}setAttributeData(t,e,i,r){const s=_(t);this._ensureSizeForTexel(s),this._getBlock(0).setData(s,0,this.getFilterFlags(e,r));const n=this._attributeComputeInfo;let o=null;n&&(o="multi"===n.type?n.map.get(e.readAttribute(n.keyField)):n.map,o?.size&&o.forEach((t,r)=>{const n=1*r%4,o=Math.floor(1*r/4),a=this._getBlock(o+3);let h=t.field?.read(e,i);t.valueRepresentation&&(h=function(t,e){if(!t||!e)return t;switch(e){case"radius":case"distance":return 2*t;case"diameter":case"width":return t;case"area":return Math.sqrt(t)}return t}(h,t.valueRepresentation)),(null===h||isNaN(h)||h===1/0||h===-1/0)&&(h=f),a.setData(s,n,h)}))}get epoch(){return this._epoch}sendUpdates(){const t=this._blocks.map(t=>null!=t?t.toMessage():null),e=this._getInitArgs();n("esri-2d-log-updating")&&console.log("AttributeStore: _doSendUpdate.start"),this._client.update({initArgs:e,blockData:t,version:this.version,sendUpdateEpoch:this._epoch}),this._epoch+=1,n("esri-2d-log-updating")&&console.log("AttributeStore: _doSendUpdate.end")}_ensureSizeForTexel(t){for(;t>=this._size*this._size;)if(this._expand())return}async _bind(t,e,i){const r=await t.createComputedField(e),{valueRepresentation:s}=e,n=this._attributeComputeInfo;if("multi"===n.type){const t=n.map.get(i)??new Map;t.set(e.binding,{field:r,valueRepresentation:s}),n.map.set(i,t)}else n.map.set(e.binding,{field:r,valueRepresentation:s});return r}_getInitArgs(){return this._initialized?null:(this._initialized=!0,this._getBlock(1),this._getBlock(2),this._getBlock(7),{blockSize:this._size,blockDescriptors:this._blocks.map(t=>null!=t?{textureOnly:t.textureOnly,buffer:t.buffer,pixelType:t.pixelType}:null)})}_getBlock(t){const e=this._blocks[t];if(null!=e)return e;q(`Initializing AttributeBlock at index ${t}`);const i=new J(this._size,this._blockDescriptors[t],this._client.isLocal);return this._blocks[t]=i,this._initialized=!1,i}_expand(){if(this._size<this._schema.capabilities.maxTextureSize){const t=this._size<<=1;q("Expanding block size to",t,this._blocks);for(const e of this._blocks)e?.expand(t);return this._initialized=!1,this._size=t,0}return Y().error(new s("mapview-limitations","Maximum number of onscreen features exceeded.")),-1}_updateReferences(t){h(this._arcadeDependencies,t)}isVisible(t){return!!(this._getBlock(0).getData(t,0)&1<<d)}getFilterFlags(t,e){let i=0;for(let r=0;r<this._filters.length;r++){const s=!!(1<<r),n=this._filters[r];i|=(!s||null==n||n.check(t,e)?1:0)<<r}let r=0;if(this._idsToHighlight.size){const e=t.getObjectId();r=this.getHighlightFlags(e)}return i<<d|r}}class X extends V{constructor(t){super(),this._field=t}resize(t){throw new Error("Method not implemented.")}read(t,e){return t.readAttribute(this._field)}readWithDefault(t,e){return t.readAttribute(this._field)}hasArcadeDependency(t){return!1}}class Z extends V{static async create(t,e){const i=await c(t,e.spatialReference),s=r(t);return new Z(i,s)}constructor(t,e){super(),this._compiled=t,this._cacheKey=e}resize(t){}read(t,e){return this.hasArcadeDependency("scale")||"system"!==e.$view.timeZone?S(this._compiled,t,e):this._readCached(t,e)}readWithDefault(t,e,i){return this.hasArcadeDependency("scale")||"system"!==e.$view.timeZone?E(this._compiled,t,e,i):this._readWithDefaultCached(t,e,i)}hasArcadeDependency(t){return this._compiled?.references(t)??!1}_getCacheKey(t){if(!this._compiled?.references("timeProperties"))return this._cacheKey;const{currentStart:e,currentEnd:i}=t.$view.timeProperties;return this._cacheKey+function(t,e){const i=43758.5453*Math.sin(12.9898*t+78.233*e);return i-Math.floor(i)}(e??1,i??1)}_readCached(t,e){if(t.setCache(this._getCacheKey(e)),t.hasCachedValue())return t.getCachedValue();const i=S(this._compiled,t,e);return t.setCachedValue(i),i}_readWithDefaultCached(t,e,i){if(t.setCache(this._getCacheKey(e)),t.hasCachedValue())return t.getCachedValue();const r=E(this._compiled,t,e,i);return t.setCachedValue(r),r}}class tt extends V{static async create(t,e){const i=F(t);return new tt(t=>i.replaceAll(/{[^}]*}/g,e=>{const i=e.slice(1,-1),r=t.metadata.fieldsIndex.get(i);if(null==r)return e;const s=t.readAttribute(i);return null==s?"":v(s,r)}))}constructor(t){super(),this._evaluator=t}resize(t){}read(t,e){return this._evaluator(t)}readWithDefault(t,e,i){const r=this._evaluator(t);return C(r)?i:r}hasArcadeDependency(t){return!1}}class et extends V{constructor(t,e){super(),this._template=t,this._parts=D(t.template,e)}resize(t){}read(t,e){return B(t,this._parts,this._template.textCase)}readWithDefault(t,e,i){return B(t,this._parts,this._template.textCase)}hasArcadeDependency(t){return!1}}class it extends V{constructor(t,e){super(),this._field=t,this._normalizationInfo=e}resize(t){throw new Error("Method not implemented.")}read(t,e){return this._readNormalized(t)}readWithDefault(t,e){return this._readNormalized(t)}hasArcadeDependency(t){return!1}_readNormalized(t){const e=t.readAttribute(this._field);if(null==e)return null;const{normalizationField:i,normalizationTotal:r,normalizationType:s}=this._normalizationInfo,n=t.readAttribute(i);switch(s??"esriNormalizeByField"){case"esriNormalizeByField":return n?n?e/n:void 0:null;case"esriNormalizeByLog":return Math.log(e)*Math.LOG10E;case"esriNormalizeByPercentOfTotal":return r?e/r*100:null}}}const rt=()=>o.getLogger("esri.views.2d.layers.features.support.ComputedAttributeStorage"),st=4294967295;function nt(t,e,i){if(!(t.length>e))for(;t.length<=e;)t.push(i)}class ot{constructor(t){this._numerics=[],this._strings=[],this._allocatedSize=256,this._bitsets=[],this._instanceIds=[],this._bounds=[],this._dirtyBitset=this.getBitset(this.createBitset()),this.compilationOptions=t}createBitset(){const t=this._bitsets.length;return this._bitsets.push(T.create(this._allocatedSize,p)),t+1}createDictionaryTemplateField(t,e){return new et(t,e)}async createComputedField(t,e=!1){if(t.expression)try{if(!this.compilationOptions)throw new Error("InternalError: Compilation options not defined");return e?await tt.create(t.expression,this.compilationOptions):await Z.create(t.expression,this.compilationOptions)}catch(e){const i=new s("featurelayer","Failed to compile arcade expression",{error:e,expression:t.expression});return rt().error(i),null}if(t.normalizationType||t.normalizationField)return new it(t.field,t);if(t.field)return new X(t.field);const i=new s("featurelayer","Unable to create computed field. No expression or field found",{info:t});return rt().error(i),null}async createWhereClause(t){return t?H(t,this.compilationOptions.fields):null}getBitset(t){return this._bitsets[t-1]}getComputedNumeric(t,e){return this.getComputedNumericAtIndex(t&p,0)}setComputedNumeric(t,e,i){return this.setComputedNumericAtIndex(t&p,i,0)}getComputedString(t,e){return this.getComputedStringAtIndex(t&p,0)}setComputedString(t,e,i){return this.setComputedStringAtIndex(t&p,0,i)}getComputedNumericAtIndex(t,e){const i=t&p;return this._ensureNumeric(e,i),this._numerics[e][i]}setComputedNumericAtIndex(t,e,i){const r=t&p;this._ensureNumeric(e,r),this._numerics[e][r]=i}getPackedChunkId(t){const e=t&p;return this._ensureInstanceId(e),this._instanceIds[e]}setPackedChunkId(t,e){const i=t&p;this._ensureInstanceId(i),this._instanceIds[i]=e}getComputedStringAtIndex(t,e){const i=t&p;return this._ensureString(e,i),this._strings[e][i]}setComputedStringAtIndex(t,e,i){const r=t&p;this._ensureString(e,r),this._strings[e][r]=i}getXMin(t){return this._bounds[4*(t&p)]}getYMin(t){return this._bounds[4*(t&p)+1]}getXMax(t){return this._bounds[4*(t&p)+2]}getYMax(t){return this._bounds[4*(t&p)+3]}setBounds(t,e,i=!1){const r=t&p;if(!i&&!this._dirtyBitset.has(t))return this._bounds[4*r]!==st;this._dirtyBitset.unset(t);const s=e.readGeometryWorldSpace();if(nt(this._bounds,4*r+4,0),!s||!s.coords.length)return this._bounds[4*r]=st,this._bounds[4*r+1]=st,this._bounds[4*r+2]=st,this._bounds[4*r+3]=st,!1;let n=1/0,o=1/0,a=-1/0,h=-1/0;return s.forEachVertex((t,e)=>{n=Math.min(n,t),o=Math.min(o,e),a=Math.max(a,t),h=Math.max(h,e)}),this._bounds[4*r]=n,this._bounds[4*r+1]=o,this._bounds[4*r+2]=a,this._bounds[4*r+3]=h,!0}getBounds(t,e){const i=this.getXMin(e),r=this.getYMin(e),s=this.getXMax(e),n=this.getYMax(e);return A(t,i,r,s,n),i!==st}_ensureNumeric(t,e){this._numerics[t]||(this._numerics[t]=[]),nt(this._numerics[t],e,0)}_ensureInstanceId(t){nt(this._instanceIds,t,0)}_ensureString(t,e){this._strings[t]||(this._strings[t]=[]),nt(this._strings[t],e,null)}}export{Q as A,ot as C,K as F,k as M,L as R,V as a,M as d};
