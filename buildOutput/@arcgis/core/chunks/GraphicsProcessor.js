/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import i from"../Graphic.js";import t from"../core/Accessor.js";import{m as s}from"./handleUtils.js";import{d as r}from"./maybe.js";import{isAbortError as n}from"../core/promiseUtils.js";import{watch as o,sync as a,syncAndInitial as l}from"../core/reactiveUtils.js";import{property as p}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./Logger.js";import{subclass as c}from"../core/accessorSupport/decorators/subclass.js";import{d as h}from"./diffUtils.js";import{U as u}from"./UpdatingHandles.js";import d from"../layers/Layer.js";import{a as y}from"./hydratedFeatures.js";import{g,a as m}from"./renderingInfoUtils.js";import{s as f}from"./TextureCompressionTracker.js";import{G as b,a as C}from"./ExtentSet.js";import{G as w,a as V,b as v}from"./Graphics3DObjectStates.js";import{e as j}from"./graphicUtils.js";import{n as G}from"./highlightUtils2.js";import{a as E}from"./layerViewUtils.js";let S=class extends t{constructor(e){super(e),this.drapeSourcePriorityOffset=0,this.type="graphics-3d",this.graphicsCore=null,this.drapeSourceType=1,this.scaleVisibilityEnabled=!1,this.frustumVisibilityEnabled=!1,this._suspendResumeExtent=null,this._updatingHandles=new u}initialize(){const{layer:e}=this,i="effectiveScaleRange"in e?e:null,t=!E()&&this.scaleVisibilityEnabled&&null!=i,s=new b({owner:this,layer:this.owner.layer,preferredUpdatePolicy:1,graphicSymbolSupported:!0,componentFactories:{elevationAlignment:(e,i)=>new V({graphicsCoreOwner:this,graphicsCore:e,queryGraphicUIDsInExtent:i,elevationProvider:this.view.elevationProvider}),scaleVisibility:t?(e,t)=>new C({graphicsCoreOwner:this,layer:i,queryGraphicUIDsInExtent:t,graphicsCore:e,basemapTerrain:this.owner.view.basemapTerrain}):null,objectStates:e=>new w(e)}});if(this._set("graphicsCore",s),this.frustumVisibilityEnabled&&this._set("frustumVisibility",new v({graphicsCoreOwner:this})),"fullOpacity"in this.owner){const e=this.owner;this._updatingHandles.add(()=>e.fullOpacity,()=>this.graphicsCore.opacityChange())}if("elevationInfo"in e){const i=e;this._updatingHandles.add(()=>i.elevationInfo,(e,i)=>{h(e,i)&&this._updatingHandles.addPromise(this.graphicsCore.elevationInfoChange())})}this._set("initializePromise",this._initializeAsync()),this._updatingHandles.addPromise(this.initializePromise)}async _initializeAsync(){try{await this.graphicsCore.initializePromise}catch(e){if(n(e))return;throw e}this.destroyed||(this.addHandles(o(()=>this.view.clippingArea,()=>this._updateClippingExtent(),a)),this._updateClippingExtent(),this._setupSuspendResumeExtent(),this.graphicsCore.startCreateGraphics())}destroy(){this._updatingHandles.destroy(),this._set("frustumVisibility",r(this.frustumVisibility)),this._set("graphicsCore",r(this.graphicsCore))}get layer(){return this.owner.layer}get layerViewUid(){return this.owner.uid}get view(){return this.owner.view}get scaleVisibility(){return this.graphicsCore?.scaleVisibility}get elevationAlignment(){return this.graphicsCore?.elevationAlignment}get scaleVisibilitySuspended(){return!(null==this.scaleVisibility||!this.scaleVisibility.suspended)}get frustumVisibilitySuspended(){return null!=this.frustumVisibility&&this.frustumVisibility.suspended}get suspended(){return this.owner.suspended??!1}get updating(){return!!(this.graphicsCore?.updating||null!=this.scaleVisibility&&this.scaleVisibility.updating||null!=this.frustumVisibility&&this.frustumVisibility.updating||this._updatingHandles.updating)}get graphics3DGraphics(){return this.graphicsCore?.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphicsCore?.graphics3DGraphicsByObjectID}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner.fullOpacity??1}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}notifyGraphicGeometryChanged(e){this.graphicsCore.notifyGraphicGeometryChanged(e)}notifyGraphicVisibilityChanged(e){this.graphicsCore.notifyGraphicVisibilityChanged(e)}notifyContentGeometryUpdate(){this.owner.notifyContentGeometryUpdate?.()}getRenderingInfo(e,i,t){const s=g(e,{renderer:i,arcade:t});if(s?.color){const e=s.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255}return s}getRenderingInfoAsync(e,i,t,s){return m(e,{renderer:i,arcade:t,...s})}getHit(e){if(this.owner.loadedGraphics){const i=this.owner.loadedGraphics.find(i=>i.uid===e);if(i){const e=this.layer instanceof d?this.layer:null,t=y(i,e);return{type:"graphic",graphic:t,layer:t.layer}}}return null}whenGraphicBounds(e,i){return this.graphicsCore?this.graphicsCore.whenGraphicBounds(e,i):Promise.reject()}computeAttachmentOrigin(e,i){return this.graphicsCore?this.graphicsCore.computeAttachmentOrigin(e,i):null}getSymbolLayerSize(e,i){return this.graphicsCore?this.graphicsCore.getSymbolLayerSize(e,i):null}maskOccludee(e){const i=this.graphicsCore?.objectStates;if(!i)return s();const{set:t,handle:r}=i.acquireOccludeeSet(null);return i.setUid(t,e.uid),r}highlight(e,t){const s=this.graphicsCore?.objectStates;if(!s)return x;const r=G(e);if(0===r.length)return x;if(r[0]instanceof i){const e=r.map(e=>e.uid),{set:i,handle:n}=s.acquireHighlightSet(t,null);return s.setUids(i,e),n}if("number"==typeof r[0]){const e=r,{set:i,handle:n}=s.acquireHighlightSet(t,null);return s.setObjectIds(i,e),n}return x}_setupSuspendResumeExtent(){const{scaleVisibility:e,frustumVisibility:i}=this;if(null==e&&null==i)return;const t=({computedExtent:t,extentPadding:s})=>{this._suspendResumeExtent=j(t,this._suspendResumeExtent,f,s),null!=e&&e.setExtent(this._suspendResumeExtent),null!=i&&i.setExtent(this._suspendResumeExtent)};this.addHandles(o(()=>({computedExtent:this.graphicsCore?.computedExtent,extentPadding:this.graphicsCore?.extentPadding}),e=>t(e),l))}_updateClippingExtent(){const e=this.view.clippingArea;this.graphicsCore.setClippingExtent(e,this.view.spatialReference)&&this.graphicsCore.recreateAllGraphics()}};e([p()],S.prototype,"drapeSourcePriorityOffset",void 0),e([p()],S.prototype,"type",void 0),e([p({constructOnly:!0})],S.prototype,"owner",void 0),e([p()],S.prototype,"layer",null),e([p()],S.prototype,"layerViewUid",null),e([p()],S.prototype,"view",null),e([p({constructOnly:!0})],S.prototype,"graphicsCore",void 0),e([p()],S.prototype,"scaleVisibility",null),e([p({constructOnly:!0})],S.prototype,"frustumVisibility",void 0),e([p()],S.prototype,"elevationAlignment",null),e([p()],S.prototype,"scaleVisibilitySuspended",null),e([p({readOnly:!0})],S.prototype,"frustumVisibilitySuspended",null),e([p()],S.prototype,"suspended",null),e([p({readOnly:!0})],S.prototype,"updating",null),e([p()],S.prototype,"loadedGraphics",null),e([p()],S.prototype,"fullOpacity",null),e([p()],S.prototype,"slicePlaneEnabled",null),e([p()],S.prototype,"drapeSourceType",void 0),e([p()],S.prototype,"updatePolicy",null),e([p({constructOnly:!0})],S.prototype,"scaleVisibilityEnabled",void 0),e([p({constructOnly:!0})],S.prototype,"frustumVisibilityEnabled",void 0),e([p()],S.prototype,"initializePromise",void 0),S=e([c("esri.views.3d.layers.graphics.GraphicsProcessor")],S);const x=s();export{S as G};
