/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{u as e}from"../core/lang.js";import{d as t,f as r,g as s,h as n,i,j as a,k as o}from"./graphicUtils.js";import{e as c,b as u}from"./memoryEstimations.js";import{I as m}from"./HUDIntersectorResult.js";import{L as l}from"./Intersector.js";class h{constructor(e,t,r,s){this.material=e,this.buffer=t,this.numVertices=r,this.boundingInfo=s,this.bufferWriter=e.createBufferWriter()}get layout(){return this.bufferWriter.layout}get numTriangles(){return this.numVertices/3}computeUsedMemory(){return this.buffer.byteLength+u}get renderGeometry(){return this}intersect(e,t,r,s,n,i,a,o){const c=this.bufferWriter,u=this.buffer;c.intersect(u,this.material.parameters,null,e,r,s,(r,s,c)=>f(r,s,c,e,t,i,a,n,o))}}class d{constructor(e){this.engineGeometry=e;const t=this.material,r=this.engineGeometry,s=r.attributes,n=r.boundingInfo,i=t.createBufferWriter(),a=i.layout,o=i.elementCount(s),c=a.createBuffer(o);i.write(null,null,s,null,c,0),this.renderGeometry=new h(t,c.buffer,o,n)}get material(){return this.engineGeometry.material}get numVertices(){return this.engineGeometry.indexCount}get numTriangles(){return this.numVertices/3}get boundingInfo(){return this.engineGeometry.boundingInfo}computeUsedMemory(){return Array.from(this.engineGeometry.attributes.values()).reduce((e,t)=>e+c(t.data,t.indices),0)}intersect(e,t,r,s,n,i,a,o){const c=this.engineGeometry;this.material.intersect(c,e.transform.transform,e,r,s,(r,s,c)=>f(r,s,c,e,t,i,a,n,o))}}function f(e,t,r,s,n,i,a,o,c){if(e<0)return;if(n&&!n(s.rayBegin,s.rayEnd,e))return;const u=new l(i.layerViewUid,i.graphicUid(o),r,a,c);if((null==s.results.min.distance||e<s.results.min.distance)&&s.results.min.set(6,u,e,t,s.transform.transform),(null==s.results.max.distance||e>s.results.max.distance)&&s.results.max.set(6,u,e,t,s.transform.transform),2===s.options.store){const r=new m(s.results.min.ray);r.set(6,u,e,t,s.transform.transform),s.results.all.push(r)}}class p{constructor(e,t=null){this.geometry=e,this.textures=t}get material(){return this.geometry.material}get numTriangles(){return this.geometry.numTriangles}}class g{constructor(t,r,s){this.components=t,this.minScreenSpaceRadius=r,this.pivotOffset=s;const n=e(this.components.map(e=>e.geometry));this.numVertices=n.reduce((e,t)=>e+t.numVertices,0)}}class y{constructor(e){this.levels=e,this.levels.sort((e,t)=>e.minScreenSpaceRadius===t.minScreenSpaceRadius?e.numVertices-t.numVertices:e.minScreenSpaceRadius-t.minScreenSpaceRadius)}get materialParameters(){return this.levels[0].components[0].geometry.material.parameters}getMaterials(){const t=[];return this.levels.forEach(e=>e.components.forEach(e=>t.push(e.geometry.material))),e(t)}getTextures(){const t=new Array;return this.levels.forEach(e=>e.components.forEach(e=>{null!=e.textures&&t.push(...e.textures)})),e(t)}getGeometries(){const t=new Array;return this.levels.forEach(e=>e.components.forEach(e=>{t.push(e.geometry)})),e(t)}getEngineGeometries(){return this.getGeometries().map(e=>e.engineGeometry).filter(e=>null!=e)}computeUsedMemory(){const e=this.getGeometries(),t=this.getTextures(),r=e.reduce((e,t)=>e+t.computeUsedMemory(),0);return t.reduce((e,t)=>e+t.usedMemory,0)+r}}function S(e){switch(e){case"sphere":case"cube":case"diamond":case"cylinder":case"cone":case"inverted-cone":case"tetrahedron":return!0}return!1}function b(e,c){const u=(e,r,s=!1)=>new y(e.map(e=>{const n=r(e.tesselation);return s&&t(n),new g([new p(new d(n))],e.minScreenSpaceRadius)}));switch(e){case"sphere":return u([{tesselation:0,minScreenSpaceRadius:0},{tesselation:1,minScreenSpaceRadius:8},{tesselation:2,minScreenSpaceRadius:16},{tesselation:3,minScreenSpaceRadius:50},{tesselation:4,minScreenSpaceRadius:250}],e=>o(c,.5,e,!0));case"cube":return u([{tesselation:0,minScreenSpaceRadius:0}],()=>a(c,1));case"cone":return u(R,e=>i(c,1,.5,e,!1),!0);case"inverted-cone":return u(R,e=>i(c,1,.5,e,!0),!0);case"cylinder":return u(R,e=>n(c,1,.5,e,[0,0,1],[0,0,.5]));case"tetrahedron":return u([{tesselation:0,minScreenSpaceRadius:0}],()=>s(c,1),!0);case"diamond":return u([{tesselation:0,minScreenSpaceRadius:0}],()=>r(c,1),!0);default:return}}const R=[{tesselation:6,minScreenSpaceRadius:0},{tesselation:18,minScreenSpaceRadius:7},{tesselation:64,minScreenSpaceRadius:65}];export{h as L,p as a,g as b,y as c,d,S as i,b as p};
