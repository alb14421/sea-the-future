/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"../Basemap.js";import s from"../core/Collection.js";import{L as r}from"./Logger.js";import{d as n}from"./maybe.js";import{e as t}from"./ensureType.js";import{h as o}from"../request.js";import{e as a}from"./basemapDefinitions.js";import{l as i,b as f}from"./basemapUtils.js";const l=()=>r.getLogger("esri.support.basemapUtils");function c(){return{}}function m(e){for(const s in e){const r=e[s];n(r),delete e[s]}}function p(s,r){let n;if("string"==typeof s){const t=s in a,i=!t&&s.includes("/");if(!t&&!i){if(o())l().warn(`Unable to find basemap definition for: ${s}. See available styles at https://developers.arcgis.com/rest/basemap-styles/`);else{const e=Object.entries(a).filter(([e,s])=>s.classic||s.is3d).map(([e])=>`"${e}"`).sort().join(", ");l().warn(`Unable to find basemap definition for: ${s}. Try one of these: ${e}`)}return null}r&&(n=r[s]),n||(n=t?e.fromId(s):new e({style:{id:s}}),r&&(r[s]=n))}else n=t(e,s);return n?.destroyed&&(l().warn("The provided basemap is already destroyed",{basemap:n}),n=null),n}function u(e,s=null){const r=p(e);if(!r)return null;const n=r.clone();return s&&(n.baseLayers=d(n.baseLayers,s.baseLayers),n.referenceLayers=d(n.referenceLayers,s.referenceLayers)),n}function d(e,r){const n=new s;return e.forEach(e=>{const s=r.find(s=>"scene"!==s.type&&i(f(e),f(s)))||e;n.includes(s)?n.push(e):n.push(s)}),n}export{u as a,p as b,c,m as d};
