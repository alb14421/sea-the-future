/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import{JSONSupport as o}from"../core/JSONSupport.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import{b as i}from"./ensureType.js";import"../core/lang.js";import{subclass as e}from"../core/accessorSupport/decorators/subclass.js";import{w as s}from"./writer.js";import"../core/Accessor.js";import"../core/Handles.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./maybe.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./Lifecycle.js";import"./metadata.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/promiseUtils.js";import"../core/Error.js";import"./events.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"./MapUtils.js";import"./Warning.js";var p;let n=p=class extends o{static from(t){return i(p,t)}constructor(t){super(t),this.gdbVersion=null,this.sessionId=null,this.moment=null,this.domainNetworkName=null,this.circuits=null,this.location=null,this.terminalId=1,this.locationType=null,this.returnConsumerCircuits=!1,this.resultTypes=null}writeLocation(t,o){null!=t&&(o.sourceId=t.sourceId,o.globalId=t.globalId,o.firstUnit=t.firstUnit,o.numUnits=t.numUnits)}};t([r({type:String,json:{write:!0}})],n.prototype,"gdbVersion",void 0),t([r({type:String,json:{write:!0}})],n.prototype,"sessionId",void 0),t([r({type:Date,json:{type:Number,write:{writer:(t,o)=>{o.moment=t?t.getTime():null}}}})],n.prototype,"moment",void 0),t([r({type:String,json:{write:!0}})],n.prototype,"domainNetworkName",void 0),t([r({type:[String],json:{write:!0}})],n.prototype,"circuits",void 0),t([r({type:Object,json:{write:!0}})],n.prototype,"location",void 0),t([s("location")],n.prototype,"writeLocation",null),t([r({type:Number,json:{write:!0}})],n.prototype,"terminalId",void 0),t([r({type:String,json:{write:!0}})],n.prototype,"locationType",void 0),t([r({type:Boolean,json:{write:!0}})],n.prototype,"returnConsumerCircuits",void 0),t([r({type:[String],json:{write:!0}})],n.prototype,"resultTypes",void 0),n=p=t([e("esri.rest.networks.circuits.support.QueryCircuitsParameters")],n);const m=n;export{m as default};
