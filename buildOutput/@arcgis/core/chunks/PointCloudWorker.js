/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{w as t,i as r}from"../core/lang.js";import{c as o}from"./quat.js";import{c as e}from"./quatf64.js";import{r as s}from"./vec3.js";import{c as i,a}from"./vec3f32.js";import p from"../geometry/SpatialReference.js";import{p as n}from"./projectBuffer.js";import{r as m,g as l,e as u,f}from"./PointCloudWorkerUtil.js";import{O as j}from"./orientedBoundingBox.js";import"./vec3f64.js";import"./common.js";import"./vec4.js";import"./tslib.es6.js";import"../core/Accessor.js";import"../core/Handles.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./maybe.js";import"../core/accessorSupport/decorators/subclass.js";import"./Lifecycle.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./tracking.js";import"./ensureType.js";import"./MapUtils.js";import"./Warning.js";import"../core/Error.js";import"./get.js";import"./ObjectPool.js";import"./ObservableBase.js";import"../core/accessorSupport/decorators/property.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/promiseUtils.js";import"./events.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"../core/JSONSupport.js";import"./unitUtils.js";import"./jsonMap.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./jsonUtils.js";import"./persistableUrlUtils.js";import"./writer.js";import"./mathUtils.js";import"./geodesicConstants.js";import"../renderers/PointCloudClassBreaksRenderer.js";import"./enumeration.js";import"../renderers/PointCloudRenderer.js";import"./PointSizeSplatAlgorithm.js";import"./RendererLegendOptions.js";import"../core/Clonable.js";import"../Color.js";import"./colorUtils.js";import"./fieldsMap.js";import"../renderers/PointCloudStretchRenderer.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/PointCloudUniqueValueRenderer.js";import"./I3SBinaryReader.js";import"./mat3.js";import"./mat3f64.js";import"./mat4f64.js";import"./vec4f64.js";import"./spatialReferenceEllipsoidUtils.js";import"./computeTranslationToOriginAndRotation.js";import"./mat4.js";import"./plane.js";import"./vector.js";import"./vec2f64.js";import"./mathUtils2.js";class c{transform(r){const o=this._transform(r),e=[o.points.buffer,o.rgb.buffer];null!=o.pointIdFilterMap&&e.push(o.pointIdFilterMap.buffer);for(const r of o.attributes)"buffer"in r.values&&t(r.values.buffer)&&r.values.buffer!==o.rgb.buffer&&e.push(r.values.buffer);return Promise.resolve({result:o,transferList:e})}_transform(t){const e=m(t.schema,t.geometryBuffer);let c=e.length/3,d=null;const h=new Array,g=l(t.primaryAttributeData,e,c);null!=t.primaryAttributeData&&g&&h.push({attributeInfo:t.primaryAttributeData.attributeInfo,values:g});const v=l(t.modulationAttributeData,e,c);null!=t.modulationAttributeData&&v&&h.push({attributeInfo:t.modulationAttributeData.attributeInfo,values:v});let S=u(t.rendererInfo,g,v,c);if(t.filterInfo&&t.filterInfo.length>0&&null!=t.filterAttributesData){const o=t.filterAttributesData.filter(r).map(t=>{const r=l(t,e,c),o={attributeInfo:t.attributeInfo,values:r};return h.push(o),o});d=new Uint32Array(c),c=f(e,S,d,t.filterInfo,o)}for(const r of t.userAttributesData){const t=l(r,e,c);h.push({attributeInfo:r.attributeInfo,values:t})}3*c<S.length&&(S=new Uint8Array(S.buffer.slice(0,3*c))),function(t,r,o){if(0!==o)for(let e=0;e<r;e++)t[3*e+2]+=o}(e,c,t.elevationOffset);const A=function(t,r,e,p,m){if(!n(t,p,0,t,m,0,r))throw new Error("Can't reproject");const l=i(e.center),u=a(),f=a(),j=i(e.halfSize);o(b,e.quaternion);const c=new Float32Array(3*r);for(let o=0;o<r;o++){let r=3*o;u[0]=t[r]-l[0],u[1]=t[r+1]-l[1],u[2]=t[r+2]-l[2],s(f,u,b),j[0]=Math.max(j[0],Math.abs(f[0])),j[1]=Math.max(j[1],Math.abs(f[1])),j[2]=Math.max(j[2],Math.abs(f[2])),c[r++]=u[0],c[r++]=u[1],c[r]=u[2]}return e.halfSize=j,c}(e,c,j.fromData(t.obbData),p.fromJSON(t.inSR),p.fromJSON(t.outSR));return{obbData:t.obbData,points:A,rgb:S,attributes:h,pointIdFilterMap:d}}}const b=e();function d(){return new c}export{d as default};
