/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{b as t}from"./maybe.js";import n from"../layers/support/PixelBlock.js";import{a as e}from"./pixelRangeUtils.js";import{a as s}from"./stretchRendererUtils.js";function i(t){if(null==t)return!1;const{max:n,min:e,size:s}=t;return(n-e)/s===1&&e>=-.5&&.5===Math.abs(e%1)&&n<=255.5}function a(t,n=256){n=Math.min(n,256);const{size:e,counts:s}=t,a=new Float64Array(e);a[0]=s[0]/n;for(let t=1;t<e;t++)a[t]=a[t-1]+s[t]/n;const o=new Uint8Array(n),r=n/a[a.length-1];if(e<=n){const s=i(t)?Math.max(0,Math.round(t.min+.5)):0;for(let t=s;t<n;t++)o[t]=t>=e+s?255:Math.min(255,Math.trunc(a[t-s]*r))}else{const t=a.map(t=>Math.min(255,Math.trunc(t*r)));for(let s=0;s<n;s++)o[s]=t[Math.round(e/n)];o[n-1]=255}return o}function o(t){const{minCutOff:n,maxCutOff:e,gamma:s,pixelType:i,rounding:a}=t;if(!["u8","u16","s8","s16"].includes(i))return null;const o=n.length,l="s8"===i?-127:"s16"===i?-32767:0,u=["u16","s16"].includes(i)?65536:256,c=[],m=[],{minOutput:f=0,maxOutput:h=255}=t,d=h-f;for(let t=0;t<o;t++)m[t]=e[t]-n[t],c[t]=0===m[t]?0:d/m[t];const g=[];if(s&&s.length>=o){const t=M(o,s);for(let i=0;i<o;i++){const o=[];for(let r=0;r<u;r++){if(0===m[i]){o[r]=f;continue}const u=r+l,c=(u-n[i])/m[i];let g=1;if(s[i]>1&&(g-=(1/d)**(c*t[i])),u<e[i]&&u>n[i]){const t=g*d*c**(1/s[i])+f;o[r]="floor"===a?Math.floor(t):"round"===a?Math.round(t):t}else u>=e[i]?o[r]=h:o[r]=f}g[i]=o}}else for(let t=0;t<o;t++){const s=[];for(let i=0;i<u;i++){const o=i+l;if(o<=n[t])s[i]=f;else if(o>=e[t])s[i]=h;else{const e=(o-n[t])*c[t]+f;s[i]="floor"===a?Math.floor(e):"round"===a?Math.round(e):e}}g[t]=s}if(null!=t.contrastOffset){const n=r(t.contrastOffset,t.brightnessOffset);for(let t=0;t<o;t++){const e=g[t];for(let t=0;t<u;t++)e[t]=n[e[t]]}}return{lut:g,offset:l}}function r(t,n){const e=Math.min(Math.max(t,-100),100),s=Math.min(Math.max(n??0,-100),100),i=new Uint8Array(256);for(let t=0;t<256;t++){let n=0;e>0&&e<100?n=(200*t-25500+510*s)/(2*(100-e))+128:e<=0&&e>-100?n=(200*t-25500+510*s)*(100+e)/2e4+128:100===e?(n=200*t-25500+256*(100-e)+510*s,n=n>0?255:0):-100===e&&(n=128),i[t]=n>255?255:n<0?0:n}return i}function l(t,n,e){const s=[];for(let e=0;e<n.length;e++){let i=0,a=0,o=0;"min"in n[e]?({min:i,max:a,avg:o}=n[e]):[i,a,o]=n[e];let r=o??0;"u8"!==t&&(r=255*(r-i)/(a-i)),s.push(u(r))}return s}function u(t){if(t<=0||t>=255)return 1;const n=t+(150===t?0:t<150?45*Math.cos(.01047*t):17*Math.sin(.021*t)),e=Math.log(t/255),s=Math.log(n/255);if(0===s)return 1;const i=e/s;return isNaN(i)?1:Math.min(9.9,Math.max(.01,i))}function c(t){const{band:n,mask:e,min:s,max:i,use8BitHistogram:a}=t;if(a){const t=i-s+1,a=new Uint32Array(t);for(let t=0;t<n.length;t++)e&&!e[t]||a[n[t]-s]++;return{min:s-.5,max:i+.5,size:t,counts:a}}const o=t.size??256,r=new Uint32Array(o),l=(i-s)/o;if(0===l){const t=e?e.reduce((t,n)=>t+(n?1:0),0):n.length;return{min:s,max:i,size:1,counts:new Uint32Array(1).fill(t)}}const u=new Uint32Array(o+1),c=1/l;for(let t=0;t<n.length;t++)e&&!e[t]||u[Math.floor((n[t]-s)*c)]++;for(let t=0;t<o-1;t++)r[t]=u[t];return r[o-1]=u[o-1]+u[o],{min:s,max:i,size:o,counts:r}}function m(t,n,e=!1,s=!1){let i=1/0,a=-1/0,o=0,r=0,l=0,u=0;const c=t.length,m=new Map;for(let e=0;e<c;e++){const s=t[e];if(!n||n[e]){const t=(m.get(s)??0)+1;m.set(s,t),t>u&&(u=t,l=s),i=s<i?s:i,a=s>a?s:a,o+=s,r++}}const f=r>0?o/r:0;let h=i===a?i:void 0,d=i===a?i:void 0,g=i===a?i:void 0;if(e&&r>0&&r<2**24){let e=t.slice();if(n){let s=0;for(let i=0;i<c;i++){const a=t[i];n[i]&&(e[s++]=a)}}e=e.slice(0,r),e.sort((t,n)=>t-n);const i=r>>>1;h=r%2?e[Math.floor(i)]:(e[i-1]+e[i])/2,s&&(d=e[Math.floor(.25*r)],g=e[Math.floor(.75*r)])}return{min:i,max:a,count:r,avg:f,mode:l,median:h,quartile1:d,quartile3:g}}function f(t){const{pixels:n,mask:e,bandMasks:s,pixelType:i}=t,a=n.map((t,n)=>function(t,n,e){let{min:s,max:i,avg:a,median:o,quartile1:r,quartile3:l}=m(t,n,!0,!0);if(null==o||null==r||null==l){const a=c({band:t,mask:n,min:s,max:i,size:1e4,use8BitHistogram:["u8","s8","u4","u2","u1"].includes(e)});o=h(t,n,a,50),r=h(t,n,a,25),l=h(t,n,a,75)}return{min:s,max:i,avg:a,median:o,quartile1:r,quartile3:l}}(t,s?.[n]??e,i));return a}function h(t,n,e,s=50){const{counts:i,min:a,max:o,size:r}=e,l=i.reduce((t,n)=>t+n)*(s/=100);let u=0,c=0;for(;c<i.length&&(u+=i[c],!(u>=l+1));c++);const m=(o-a)/r,f=a+m*c,h=a+m*(c+1);if(1===m&&.5===Math.abs(a%1))return f+.5;const d=t.slice(0,i[c]).fill(0);for(let e=0,s=0;e<t.length;e++)if(!n||n[e]){const n=t[e];n>=f&&n<h&&(d[s++]=n)}d.sort((t,n)=>t-n);const g=u-Math.floor(l)-1;return d[Math.max(0,d.length-1-g)]}function d(t,n){const{pixels:e,mask:s,pixelType:i,bandMasks:a}=t,o=e.map((t,e)=>function(t,n,e){let{min:s,max:i,count:a,avg:o,mode:r,median:l}=m(t,n,!0);if(0===a)return{statistics:{min:0,max:0,avg:0,stddev:0,count:a,mode:0,median:0},histogram:null};const u={min:s,max:i,avg:o,mode:r,count:a,median:l},f=function(t,n,e,s=!1,i=!1){let a=0,o=0,r=0,l=0;for(let i=0;i<t.length;i++)if(!n||n[i]){const n=t[i]-e,u=n*n;if(a+=u,!s){const t=u*n;o+=t,r+=t*n}l++}if(l<2)return null;a/=l-1;const u=Math.sqrt(a);return s?{stddev:u}:(r/=l,{stddev:u,skewness:i?o*(l/((l-1)*(l-2)))/a**1.5:o/l/a**1.5,kurtosis:r/(a*a)})}(t,n,o,!e.includeSkewnessKurtosis);f&&(u.stddev=f.stddev,e.includeSkewnessKurtosis&&(u.skewness=f.skewness,u.kurtosis=f.kurtosis));const d=e?.histogramSize??256,g=!!e?.pixelType&&["u8","s8","u4","u2","u1"].includes(e.pixelType),p=!e?.skipHistograms;if(null==l){const e=c({band:t,mask:n,min:s,max:i,size:1e4,use8BitHistogram:g});if(l=h(t,n,e,50),p&&g&&256===d)return{statistics:u,histogram:e}}return p?{statistics:u,histogram:c({band:t,mask:n,min:s,max:i,size:d,use8BitHistogram:g&&256===d})}:{statistics:u,histogram:null}}(t,a?.[e]??s,{pixelType:i,...n}));return{statistics:o.map(({statistics:t})=>t),histograms:o.map(({histogram:t})=>t)}}function g(t){if(!t?.pixels?.length)return null;const{pixels:n,mask:e,bandMasks:s,pixelType:i}=t,a=t.width*t.height,o=n.length,r=[],l=[],u=256;let c,m;for(let f=0;f<o;f++){let o=new Uint32Array(u);const h=n[f],d=s?.[f]??e;if("u8"===i){if(c=255,m=0,d){for(let t=0;t<a;t++)if(d[t]){const n=h[t];c=n<c?n:c,m=n>m?n:m,o[n]++}}else for(let t=0;t<a;t++){const n=h[t];c=n<c?n:c,m=n>m?n:m,o[n]++}o=o.slice(c,m+1)}else{let n=!1;t.statistics||(t.updateStatistics(),n=!0);const e=t.statistics;c=e[f].minValue,m=e[f].maxValue;const s=(m-c)/u;if(0===s){!e||t.validPixelCount||n||t.updateStatistics();const s=(t.validPixelCount||t.width*t.height)/u;for(let t=0;t<u;t++)o[t]=Math.round(s*(t+1))-Math.round(s*t)}else{const t=new Uint32Array(257);for(let n=0;n<a;n++)d&&!d[n]||t[Math.floor((h[n]-c)/s)]++;for(let n=0;n<255;n++)o[n]=t[n];o[255]=t[255]+t[256]}}const g="u8"===i?c-.5:c,p="u8"===i?m+.5:m;r.push({min:g,max:p,size:o.length,counts:o});let x=0,M=0,b=0;for(let t=0;t<o.length;t++)x+=o[t],M+=t*o[t];const y=M/x;for(let t=0;t<o.length;t++)b+=o[t]*(t-y)**2;const v=Math.sqrt(b/(x-1)),k=(p-g)/o.length,w=(y+("u8"===i?0:.5))*k+c,O=v*k;l.push({min:c,max:m,avg:w,stddev:O})}return{statistics:l,histograms:r}}function p(t){const n=[];for(let e=0;e<t.length;e++){const{min:s,max:i,size:a,counts:o}=t[e];let r=0,l=0;for(let t=0;t<a;t++)r+=o[t],l+=t*o[t];const u=l/r;let c=0;for(let t=0;t<a;t++)c+=o[t]*(t-u)**2;const m=(i-s)/a,f=(u+.5)*m+s,h=Math.sqrt(c/(r-1))*m;n.push({min:s,max:i,avg:f,stddev:h})}return n}function x(n,i){const{pixelBlock:o,bandIds:r,returnHistogramLut:l,rasterInfo:u}=i;let c=null,m=null,f=n.stretchType;if("number"==typeof f&&(f=s[f]),n.dra)if("minMax"===f&&o?.statistics)c=o.statistics.map(t=>[t.minValue,t.maxValue,0,0]);else{const t=g(o);c=null!=t?t.statistics:null,m=null!=t?t.histograms:null}else c=n.statistics?.length?n.statistics:u.statistics,m="histograms"in n?n.histograms:void 0,m||(m=u.histograms);"percentClip"!==f&&"histogramEqualization"!==f||m?.length||(f="minMax");const h=c?.length||m?.length||u.bandCount,d=[],p=[];c&&!Array.isArray(c[0])&&(c=c.map(t=>[t.min,t.max,t.avg,t.stddev]));const[x,M]=e(u.pixelType);if(!c?.length){c=[];for(let t=0;t<h;t++)c.push([x,M,1,1]);"standardDeviation"===f&&(f="minMax")}switch(f){case"none":for(let t=0;t<h;t++)d[t]=x,p[t]=M;break;case"minMax":for(let t=0;t<h;t++){const n=c[t];d[t]=n[0],p[t]=n[1]}break;case"standardDeviation":{const{numberOfStandardDeviations:t=2}=n;for(let n=0;n<h;n++){const e=c[n];d[n]=e[2]-t*e[3],p[n]=e[2]+t*e[3],d[n]<e[0]&&(d[n]=e[0]),p[n]>e[1]&&(p[n]=e[1])}}break;case"histogramEqualization":t(m);for(let t=0;t<h;t++)d[t]=m[t].min,p[t]=m[t].max;break;case"percentClip":t(m);for(let t=0;t<m.length;t++){const e=m[t],s=new Uint32Array(e.size),i=[...e.counts];i.length>=20&&(i[0]=i[1]=i[2]=i[i.length-1]=i[i.length-2]=0);let a=0;const o=(e.max-e.min)/e.size,r=-.5===e.min&&1===o?.5:0;for(let t=0;t<e.size;t++)a+=i[t],s[t]=a;let l=(n.minPercent||0)*a/100;d[t]=e.min+r;for(let n=0;n<e.size;n++)if(s[n]>l){d[t]=e.min+o*(n+r);break}l=(1-(n.maxPercent||0)/100)*a,p[t]=e.max+r;for(let n=e.size-2;n>=0;n--)if(s[n]<l){p[t]=e.min+o*(n+2-r);break}if(p[t]<d[t]){const n=d[t];d[t]=p[t],p[t]=n}}break;default:for(let t=0;t<h;t++){const n=c[t];d[t]=n[0],p[t]=n[1]}}let b,y,v;return"histogramEqualization"===f?(t(m),y=m[0].size||256,b=0,l&&(v=m.map(t=>a(t)))):(y=n.max||255,b=n.min||0),function(t,n){if(null==n||0===n.length)return t;const e=Math.max.apply(null,n),{minCutOff:s,maxCutOff:i,minOutput:a,maxOutput:o,histogramLut:r}=t;return s.length===n.length||s.length<=e?t:{minCutOff:n.map(t=>s[t]),maxCutOff:n.map(t=>i[t]),histogramLut:r?n.map(t=>r[t]):null,minOutput:a,maxOutput:o}}({minCutOff:d,maxCutOff:p,maxOutput:y,minOutput:b,histogramLut:v},r)}function M(t,n){const e=new Float32Array(t);for(let s=0;s<t;s++)n[s]>1?n[s]>2?e[s]=6.5+(n[s]-2)**2.5:e[s]=6.5+100*(2-n[s])**4:e[s]=1;return e}function b(t,e){if(!t?.pixels?.length)return t;const{mask:s,bandMasks:i,width:a,height:o,pixels:r}=t,{minCutOff:l,maxCutOff:u,minOutput:c,maxOutput:m,gamma:f}=e,h=a*o,d=e.outputPixelType||"u8",g=t.pixels.map(()=>n.createEmptyBand(d,h)),p=g.length,x=m-c,b=[],y=[];for(let t=0;t<p;t++)y[t]=u[t]-l[t],b[t]=0===y[t]?0:x/y[t];const v=d.startsWith("u")||d.startsWith("s"),k=f&&f.length>=p,w=!!e.isRenderer;if(k){const t=M(p,f);for(let n=0;n<p;n++){const e=i?.[n]??s;for(let s=0;s<h;s++)if(null==e||e[s]){if(0===y[n]){g[n][s]=c;continue}const e=r[n][s],i=(e-l[n])/y[n];let a=1;if(f[n]>1&&(a-=(1/x)**(i*t[n])),e<u[n]&&e>l[n]){const t=a*x*i**(1/f[n])+c;g[n][s]=w?Math.floor(t):v?Math.round(t):t}else e>=u[n]?g[n][s]=m:g[n][s]=c}}}else for(let t=0;t<p;t++){const n=i?.[t]??s;for(let e=0;e<h;e++)if(null==n||n[e]){const n=r[t][e];if(n<u[t]&&n>l[t]){const s=(n-l[t])*b[t]+c;g[t][e]=w?Math.floor(s):v?Math.round(s):s}else n>=u[t]?g[t][e]=m:g[t][e]=c}}const O=new n({width:a,height:o,mask:s,bandMasks:i,pixels:g,pixelType:d});return O.updateStatistics(),O}function y(t){return["u8","s8"].includes(t.pixelType)&&null!=t.statistics?.[0]?.min&&null!=t.statistics[0]?.max&&1===t.bandCount}function v(t,n){const{attributeTable:e,bandCount:s}=t;return!((null!=e||!y(t))&&(null==e||s>1||n&&null==e.fields.find(t=>t.name.toLowerCase()===n.toLowerCase())))}function k(t){const{bandCount:n,dataType:e,pixelType:s}=t;return"elevation"===e||"generic"===e&&1===n&&("s16"===s||"s32"===s||"f32"===s||"f64"===s)}function w(t,n=!1){const{bandCount:e,colormap:s,pixelType:i}=t;return 1===e&&(!!s?.length||!n&&"u8"===i)}function O(t,n=!1){const{attributeTable:e,bandCount:s}=t;return 1===s&&(!n||null!=e||null!=t.histograms)}function z(t){const{dataType:n}=t;return"vector-uv"===n||"vector-magdir"===n}function C(t){const{dataType:n}=t;return"vector-uv"===n||"vector-magdir"===n}function T(t){return!!t?.length&&t.length<=16384}export{w as a,v as b,O as c,k as d,C as e,y as f,f as g,d as h,z as i,g as j,p as k,x as l,i as m,o as n,T as o,l as p,a as q,r,b as s,M as t};
