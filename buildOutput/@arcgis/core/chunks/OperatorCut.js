/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{G as t}from"./SimpleGeometryCursor.js";import{G as e,p as s,b as n}from"./Point2D.js";import{b as r,P as o,E as m,j as i,k as u,l as c,T as h,m as l,n as a,C as d}from"./ProjectionTransformation.js";import{g as p,c as y}from"./Envelope.js";var _=d;function g(t,e){return{m_geometry:t,m_side:e}}class f{getOperatorType(){return 10005}accelerateGeometry(t,e,s){return!1}canAccelerateGeometry(t){return!1}supportsCurves(){return!0}execute(t,e,s,n,r){return new C(t,e,s,n,r)}}class C extends t{constructor(t,e,s,n,o){super(),this.m_cutIndex=-1,this.m_cuts=[],this.m_progressTracker=o,this.m_cuttee=e.clone(),this.m_cutter=new r({copy:s}),this.m_bConsiderTouch=t;const m=p(e,s);this.m_tolerance=y(n,m,!0)}next(){return-1===this.m_cutIndex&&this.generateCuts(),++this.m_cutIndex<this.m_cuts.length?this.m_cuts[this.m_cutIndex]:null}getGeometryID(){return this.m_cutIndex}tock(){return!0}getRank(){return 1}generateCuts(){switch(this.m_cuttee.getGeometryType()){case e.enumPolyline:this.generatePolylineCuts();break;case e.enumPolygon:this.generatePolygonCuts()}}generatePolylineCuts(){const t=new r,e=new r,n=new r;this.m_cuts.length=0,this.m_cuts.push(t),this.m_cuts.push(e);const o=[];!function(t,e,s,n,r,o){if(e.isEmpty()){const t=g(e,0);return void r.push(t)}if(s.isEmpty()){const t=g(e,0);return void r.push(t)}const a=[],d=new m;{const m=d.createGeometryUserIndex(),p=d.addGeometry(e),y=d.addGeometry(s),f=new h(o);let C=0,E=null;if(d.hasCurves()){E=new _;const t=d.getEnvelope2D(o);C=i(n.total());const e=u(n.total(),t);c(d,e,n.total(),12e3,E,null,o)}d.dbgVerifyCurves(),f.setEditShapeCrackAndCluster(d,n),f.cut(t,m,p,y,a);for(const t of a){null!==E&&E.stitchCurves(d,t,C,!1);const e=g(d.getGeometry(t),l(d.getGeometryUserIndex(t,m)));r.push(e)}null!==E&&E.clearStitcher(d)}}(this.m_bConsiderTouch,this.m_cuttee,this.m_cutter,this.m_tolerance,o,this.m_progressTracker);for(let r=0;r<o.length;r++){const m=o[r];1===m.m_side?t.add(m.m_geometry,!1):2===m.m_side||4===m.m_side?e.add(m.m_geometry,!1):3===m.m_side?this.m_cuts.push(m.m_geometry):0===m.m_side?n.add(m.m_geometry,!1):s("")}n.isEmpty()||t.isEmpty()&&e.isEmpty()&&!(this.m_cuts.length>=3)||this.m_cuts.push(n),t.isEmpty()&&e.isEmpty()&&this.m_cuts.length<3&&(this.m_cuts.length=0)}generatePolygonCuts(){const t=new o,e=new o,r=new o;this.m_cuts.length=0,this.m_cuts.push(t),this.m_cuts.push(e);const l=[];!function(t,e,s,n,r,l){if(e.isEmpty()){const t=g(e,0);return void r.push(t)}if(s.isEmpty()){const t=g(e,0);return void r.push(t)}const d=[],p=new m;{const t=p.createGeometryUserIndex(),y=p.addGeometry(e),f=p.addGeometry(s),C=new h(l);let E=0,G=null;if(p.hasCurves()){G=new _;const t=p.getEnvelope2D(l);E=i(n.total());const e=u(n.total(),t);c(p,e,n.total(),12e3,G,null,l)}p.dbgVerifyCurves(),C.setEditShapeCrackAndCluster(p,n),C.cut(!1,t,y,f,d),null!==G&&G.stitchCurves(p,a,E,!0);let v=p.getGeometry(y);const w=new o,x=new o,k=[];for(let e=0;e<d.length;e++){let s=null;{const r=new m,o=r.addGeometry(v),h=r.addGeometry(p.getGeometry(d[e]));if(r.hasCurves()){const t=r.getEnvelope2D(l);E=i(n.total());const e=u(n.total(),t);c(r,e,n.total(),12e3,G,null,l)}C.setEditShapeCrackAndCluster(r,n);const y=C.intersection(o,h);if(null!==G&&G.stitchCurves(r,a,E,!0),s=r.getGeometry(y),s.isEmpty())continue;const _=p.getGeometryUserIndex(d[e],t);2===_?w.add(s,!1):1===_?x.add(s,!1):k.push(s)}{const t=new m,s=t.addGeometry(v),r=t.addGeometry(p.getGeometry(d[e]));if(t.hasCurves()){const e=t.getEnvelope2D(l);E=i(n.total());const s=u(n.total(),e);c(t,s,n.total(),12e3,G,null,l)}C.setEditShapeCrackAndCluster(t,n);const o=C.difference(s,r);null!==G&&G.stitchCurves(t,a,E,!0),v=t.getGeometry(o)}}if(!v.isEmpty()&&d.length>0&&k.push(v),w.isEmpty()&&x.isEmpty())return;if(!w.isEmpty()){const t=g(w,1);r.push(t)}if(!x.isEmpty()){const t=g(x,2);r.push(t)}for(let t=0,e=k.length;t<e;++t){const e=g(k[t],3);r.push(e)}}}(this.m_bConsiderTouch,this.m_cuttee,this.m_cutter,this.m_tolerance,l,this.m_progressTracker);for(let n=0;n<l.length;n++){const o=l[n];1===o.m_side?t.add(o.m_geometry,!1):2===o.m_side?e.add(o.m_geometry,!1):3===o.m_side?this.m_cuts.push(o.m_geometry):0===o.m_side?r.add(o.m_geometry,!1):s("")}n(r.isEmpty()||1===l.length),t.isEmpty()&&e.isEmpty()&&this.m_cuts.length<3&&(this.m_cuts.length=0)}}export{f as O};
