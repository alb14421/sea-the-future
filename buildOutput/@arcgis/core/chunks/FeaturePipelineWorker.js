/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{h as t}from"./handleUtils.js";import{h as s,i as r,R as i}from"../core/lang.js";import{n as a}from"./nextTick.js";import{throwIfNotAbortError as n,throwIfAborted as o,after as c,debounce as l,onAbort as u,isAbortError as d,ignoreAbortErrors as h,createResolver as p}from"../core/promiseUtils.js";import{watch as m}from"../core/reactiveUtils.js";import{p as _}from"./screenUtils.js";import{i as f}from"../core/workers/RemoteClient.js";import y from"../layers/support/TileInfo.js";import{p as g}from"./definitions.js";import{b,d as I}from"./maybe.js";import{n as S}from"./object.js";import{d as w,a as v,b as x}from"./diffUtils.js";import F from"../geometry/SpatialReference.js";import{T as k}from"./TileStrategy.js";import{T as j}from"./TileKey2.js";import{M as C,C as O,F as q,R as M,A as R}from"./ComputedAttributeStorage.js";import{a as T,b as A,i as D}from"./streamLayerUtils.js";import{D as P}from"./DictionaryScriptEvaluator.js";import{D as E,M as U}from"./MeshWriterRegistry.js";import{QueueProcessor as z}from"./QueueProcessor.js";import{g as L,e as G,u as N,q as B,a as W,x as Q,o as V,y as $,m as H}from"./featureConversionUtils.js";import{O as J}from"./OptimizedFeature.js";import{c as Z,p as K}from"./projectionSupport.js";import X from"../layers/support/FieldsIndex.js";import{EventEmitter as Y}from"../core/Evented.js";import{c as ee}from"./aaBoundingBox.js";import{o as te}from"./optimizedFeatureQueryEngineAdapter.js";import{a as se}from"./QueryEngine.js";import{e as re}from"./ArcadeExpression.js";import{F as ie,c as ae,b as ne,f as oe}from"./FeatureMetadata.js";import{O as ce}from"./OptimizedGeometry.js";import{p as le,G as ue,O as de,c as he,A as pe,a as me,d as _e,F as fe,b as ye}from"./SourceChunkStore.js";import{c as ge}from"./arcadeUtils.js";import{L as be}from"./Logger.js";import{i as Ie,l as Se,e as we}from"./operatorGeodeticDensify.js";import{g as ve}from"./geodeticCurveType.js";import{F as xe,f as Fe,l as ke,e as je,m as Ce,t as Oe}from"./aaBoundingRect.js";import{getClosestDenormalizedXToReference as qe}from"../geometry/support/normalizeUtils.js";import{a as Me}from"./normalizeUtilsSync.js";import Re,{i as Te}from"../request.js";import{f as Ae,e as De,a as Pe}from"./query.js";import Ee from"../rest/support/StatisticDefinition.js";import{sqlAnd as Ue}from"../core/sql.js";import{a as ze}from"./displayFilterUtils.js";import Le,{Q as Ge}from"../rest/support/Query.js";import Ne from"../time/TimeExtent.js";import{_ as Be}from"./tslib.es6.js";import We from"../core/Accessor.js";import{property as Qe}from"../core/accessorSupport/decorators/property.js";import{subclass as Ve}from"../core/accessorSupport/decorators/subclass.js";import{g as $e}from"./uuid.js";import He from"../core/workers/Connection.js";import{t as Je}from"./quantizationUtils.js";import{i as Ze}from"./ogcFeatureUtils.js";import{d as Ke}from"./memoryEstimations.js";import{P as Xe}from"./pbf.js";import{g as Ye}from"./FeatureIdInfo.js";import{a as et,b as tt}from"./pbfQueryUtils.js";import{g as st}from"./MapUtils.js";import{d as rt,u as it}from"./SetUtils.js";import{c as at}from"./parquet.js";import nt from"../geometry/Polygon.js";import{S as ot}from"./StreamFeatureManager.js";import{createConnection as ct}from"./createConnection.js";import{U as lt}from"./UpdateTracking2D.js";import{T as ut}from"./Tile.js";import"../config.js";import"./string.js";import"./events.js";import"./watch.js";import"./ObjectPool.js";import"../core/scheduling.js";import"./PooledArray.js";import"./get.js";import"./utils.js";import"./Lifecycle.js";import"./tracking.js";import"./SimpleTrackingTarget.js";import"../kernel.js";import"../core/urlUtils.js";import"./jsonUtils.js";import"./jsonMap.js";import"../core/JSONSupport.js";import"../core/Handles.js";import"./metadata.js";import"./ObservableBase.js";import"./ensureType.js";import"./Warning.js";import"./unitUtils.js";import"./pe.js";import"./assets.js";import"./reader.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Geometry.js";import"./persistableUrlUtils.js";import"../geometry/support/webMercatorUtils.js";import"../layers/support/LOD.js";import"./TileKey.js";import"./mathUtils.js";import"../geometry/Extent.js";import"../core/Collection.js";import"./shared.js";import"./SimpleObservable.js";import"./vec2.js";import"./common.js";import"./ScheduledQueueProcessor.js";import"./Queue.js";import"./ReactiveMap.js";import"./signal.js";import"./utils30.js";import"./enums.js";import"./VertexElementDescriptor.js";import"./BoundingBox.js";import"./vec2f32.js";import"./constants4.js";import"./boundsUtils.js";import"./queryUtils.js";import"./projectionUtils.js";import"./vec3f64.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polyline.js";import"./extentUtils.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"./projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./coordsUtils.js";import"../geometry/support/jsonUtils.js";import"./timeSupport.js";import"./labelFormatUtils.js";import"./date.js";import"./locale.js";import"./constants.js";import"./datetime.js";import"./number.js";import"../layers/support/fieldUtils.js";import"./guards.js";import"./labelUtils.js";import"./utils6.js";import"./defaultCIMValues.js";import"./Version.js";import"./labelPoint.js";import"./rasterizingUtils.js";import"./floatRGBA.js";import"./CIMSymbolHelper.js";import"./BidiEngine.js";import"../symbols/Font.js";import"./GeometryUtils.js";import"./fontUtils.js";import"./shapingUtils.js";import"./mat2d.js";import"./mat2df32.js";import"./Rect.js";import"./defaults.js";import"../symbols/SimpleFillSymbol.js";import"../Color.js";import"./colorUtils.js";import"./enumeration.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/Symbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/MarkerSymbol.js";import"../symbols/TextSymbol.js";import"./defaultsJSON.js";import"./TexturedLineMeshWriter.js";import"./libtess.js";import"./TurboLine.js";import"./earcut.js";import"./grouping.js";import"./vec2f64.js";import"./OptimizedFeatureSet.js";import"./createFeatureId.js";import"./json.js";import"./UnknownTimeZone.js";import"./timeZoneUtils.js";import"./DoubleArray.js";import"./WhereClauseCache.js";import"./LRUCache.js";import"./MemCache.js";import"../core/sql/WhereClause.js";import"./TimeOnly.js";import"./enum.js";import"./fieldType.js";import"./QueryEngineCapabilities.js";import"./utils14.js";import"./timeUtils.js";import"./heatmapUtils.js";import"./vec4.js";import"./vec4f64.js";import"./utils7.js";import"./basemapUtils.js";import"./utils5.js";import"./mat4.js";import"./basemapDefinitions.js";import"./messages.js";import"./utils13.js";import"./generateRendererUtils.js";import"./SnappingCandidate.js";import"../rest/support/AutoIntervalBinParameters.js";import"../rest/support/BinParametersBase.js";import"../core/Clonable.js";import"../rest/support/AttributeBinsGrouping.js";import"../rest/support/NormalizationBinParametersMixin.js";import"../rest/support/DateBinParameters.js";import"../rest/support/DateBinTimeInterval.js";import"../rest/support/FixedBoundariesBinParameters.js";import"../rest/support/FixedIntervalBinParameters.js";import"./Scheduler.js";import"./debugFlags.js";import"./rbush.js";import"./quickselect.js";import"./SimpleGeometryCursor.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"./utils9.js";import"./utils10.js";import"./queryZScale.js";import"./typeUtils.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./FullTextSearch.js";import"./spatialRelationships.js";import"./geojson.js";import"./date2.js";import"./clientSideDefaults.js";import"./sourceUtils.js";import"./CircularArray.js";import"../layers/support/StreamConnection.js";import"./UpdatingHandles.js";class dt{constructor(e){this._client=e,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(e){f(this._eventLog.onEvent(e))}}function ht(e){switch(e){case 1:case 8:case 32:return-1;case 2:case 64:return 0;case 4:case 16:case 128:return 1}}function pt(e){switch(e){case 1:case 2:case 4:return-1;case 8:case 16:return 0;case 32:case 64:case 128:return 1}}class mt{constructor(e,t,s,r,i=0){this.tileKey=e,this._bufferingEnabled=t,this._sizeHint=i,this._meshes={self:new C(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0;const a=r?1:0;this._copyBufferedDataIntoSelf=s&&this._bufferingEnabled&&e.level===a}get id(){return this.tileKey.id}vertexStart(){return this._meshes.self.vertexStart()??0}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(e){this._meshes.self.indexEnsureSize(e)}entityStart(e,t=e){this._currentEntityOverlaps=0,this._meshes.self.entityStart(e,t)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let e=0;e<8;e++){const t=1<<e;this._currentEntityOverlaps&t&&this._meshes.neighbors[e].entityEnd()}}}recordStart(e,t,s){this._currentRecordOverlaps=0,this._meshes.self.recordStart(e,t,s)}recordEnd(e=0){const t=this._meshes.self.recordEnd(this._currentRecordOverlaps);return t&&0!==this._currentRecordOverlaps?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):t}recordBounds(e,t,s,r){this._bufferingEnabled&&this._addOverlap(e,t,s,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(e){this._meshes.self.metricStart(e)}metricBoxWrite(e){this._meshes.self.metricBoxWrite(e)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(e){this._meshes.self.vertexWrite(e)}vertexWriteF32(e){this._meshes.self.vertexWriteF32(e)}vertexWriteRegion(e){this._meshes.self.vertexWriteRegion(e)}indexWrite(e){this._meshes.self.indexWrite(e)}serialize(e){const t={message:[],transferList:[]},s=this._meshes.self.serialize();return t.message.push({tileId:this.tileKey.id,...s.message}),t.transferList.push(...s.transferList),this._meshes.neighbors.forEach((s,r)=>{const i=s.serialize(),a=1<<r,n=ht(a),o=pt(a),c=new j(this.tileKey).getNormalizedNeighbor(n,o,e);t.message.push({tileId:c.id,...i.message}),t.transferList.push(...i.transferList)}),t}_addOverlap(e,t,s,r){const i=Math.min(g/2,s),a=Math.min(g/2,r),n=255^((e<0+i?148:e>=g-i?41:189)|(t<0+a?224:t>=g-a?7:231));this._currentRecordOverlaps|=n}_copyIntoNeighbors(){for(let e=0;e<8;e++){const t=1<<e;if(this._currentRecordOverlaps&t){if(this._copyBufferedDataIntoSelf){const e=-ht(t)*g,s=-pt(t)*g;if(0!==s)continue;this._meshes.self.copyLast(e,s);continue}if(!this._meshes.neighbors[e]){const s=Math.floor(this._sizeHint/16);this._meshes.neighbors[e]=new C(t,s)}const s=this._meshes.neighbors[e],r=-ht(t)*g,i=-pt(t)*g;s.copyLastFrom(this._meshes.self,r,i)}}}}class _t{}class ft{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const s=new ft;return s.setDefault(await e.createMeshWriters(t.meshes)),s}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}hasArcadeDependency(e){return this._defaultResult?.some(t=>t.hasArcadeDependency(e))??!1}match(e,t,s){const r=this.doMatch(e,t)||this.getDefault();if(r&&r.length>0){const e=this.getBackgroundFill();if(e)return[...e,...r]}return r}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}}class yt extends ft{static async fromDictionaryRenderer(e,t){const s=await P.from(t.dictionaryInfo,t.userConfig,t.fieldMap);return new yt(e,s)}constructor(e,t){super(),this._context=e,this._evaluator=t,this._controlStringToPromise=new Map,this._controlStringToGroup=new Map}async fetchResources(e,t){const s=t.getCursor(),r=new Set;for(;s.next();){const e=this._evaluateControlString(s);e&&r.add(e)}const i=Array.from(r.values()).map(t=>this._ensureGroup(e,t));await Promise.all(i)}match(e,t){const s=this._evaluateControlString(e);return s?this._controlStringToGroup.get(s):null}_evaluateControlString(e){const t=e.readLegacyFeatureWorldSpace();return this._evaluator.evaluate(t,0,e.fields,null)}_ensureGroup(e,t){let s=this._controlStringToPromise.get(t);return null==s&&(s=this._fetchGroup(e,t),this._controlStringToPromise.set(t,s)),s}async _fetchGroup(e,t){const s=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",controlString:t});if(!s)return;const r=await this._context.createMeshWriters(s.meshes);this._controlStringToGroup.set(t,r)}}class gt extends ft{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const s=await e.storage.createComputedField(t),r=new gt(s,t.isMaxInclusive);await Promise.all(t.intervals.map(async t=>{const s=await e.createMeshWriters(t.meshes);r.add(t,s)}));const i=await e.createMeshWriters(t.defaultSymbol);r.setDefault(i);const a=await e.createMeshWriters(t.backgroundFill);return r.setBackgroundFill(a),r}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((e,t)=>e.interval.min-t.interval.min)}size(){return super.size()+this._intervals.length}hasArcadeDependency(e){return this._field?.hasArcadeDependency(e)||this._intervals.some(t=>t.result.some(t=>t.hasArcadeDependency(e)))}doMatch(e,t){const s=this._field?.read(e,t);if(null==s||isNaN(s)||s===1/0||s===-1/0)return null;for(let e=0;e<this._intervals.length;e++){const{interval:t,result:r}=this._intervals[e],i=s>=t.min,a=this._isMaxInclusive?s<=t.max:s<t.max;if(i&&a)return r}return null}}class bt extends ft{static async fromLabelSchema(e,t){const s=t.classes.map(async t=>{const s=await e.createMeshWriters(t.meshes);return{minScale:t.minScale,maxScale:t.maxScale,meshes:s,expression:null,where:await e.storage.createWhereClause(t.where)}}),r=await Promise.all(s);return new bt(r)}constructor(e){super(),this._labels=e}match(e,t,s){if(!this._labels.length)return null;const r=this._getLabels(t.$view.scale),i=[];for(const t of r)t.where&&!t.where(e,s)||i.push(...t.meshes);return i}hasArcadeDependency(e){return this._labels.some(t=>t.meshes.some(t=>t.hasArcadeDependency(e)))}_getLabels(e){return this._labels.filter(t=>this._validForTileScale(t,e))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}}class It extends ft{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const s=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],r=(await Promise.all(s)).filter(e=>!!e),i=new It(r,t.fieldDelimiter),a=await e.createMeshWriters(t.defaultSymbol);i.setDefault(a);const n=await e.createMeshWriters(t.backgroundFill);return i.setBackgroundFill(n),await Promise.all(t.map.map(async(t,s)=>{const r=await e.createMeshWriters(t.symbol);"<Null>"===t.value?i.setNullResult(r):i.add(t.value,r,s+1)})),i}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(null==s||""===s||"<Null>"===s)return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}hasArcadeDependency(e){return this._fields.some(t=>t.hasArcadeDependency(e))||[...this._resultsMap.values()].some(t=>t.meshWriters.some(t=>t.hasArcadeDependency(e)))||this._nullResult?.some(t=>t.hasArcadeDependency(e))||!1}doMatch(e,t){const s=this._getValueFromFields(e,t);if(null!==this._nullResult&&(null==s||""===s||"<Null>"===s))return this._nullResult;if(null==s)return null;const r=s.toString();return this._resultsMap.get(r)?.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const i=r.read(e,t);null==i||""===i?s.push("<Null>"):s.push(i)}return s.join(this._separator)}}async function St(e,t){switch(t.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return ft.from(e,t);case"interval":return gt.fromIntervalSchema(e,t);case"dictionary":return yt.fromDictionaryRenderer(e,t);case"label":return bt.fromLabelSchema(e,t);case"map":return It.fromMatcherSchema(e,t);case"subtype":return wt.fromSubtypes(e,t);case"cluster":return vt.fromClusterSchema(e,t);case"track":return xt.fromTrackSchema(e,t);default:throw new Error("Impl")}}class wt extends ft{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const s=new Map,r=[];for(const i in t.renderers){const a=parseInt(i,10),n=St(e,t.renderers[i]).then(e=>s.set(a,e));r.push(n)}return await Promise.all(r),new wt(s,t.subtypeField)}match(e,t,s){const r=e.readAttribute(this._subtypeField),i=this._subMatchers.get(r);return i?i.match(e,t,s):null}hasArcadeDependency(e){for(const t of this._subMatchers.values())if(t.hasArcadeDependency(e))return!0;return!1}}class vt extends ft{static async fromClusterSchema(e,t){const[s,r]=await Promise.all([St(e,t.feature),St(e,t.cluster)]);return new vt(s,r)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t,s){return 1===e.readAttribute("cluster_count")?this._featureMatcher.match(e,t,s):this._clusterMatcher.match(e,t,s)}hasArcadeDependency(e){return this._featureMatcher.hasArcadeDependency(e)||this._clusterMatcher.hasArcadeDependency(e)}}class xt extends ft{static async fromTrackSchema(e,t){const[s,r,i]=await Promise.all([St(e,t.previousObservation),St(e,t.latestObservation),St(e,t.trackLine)]);return new xt(s,r,i)}constructor(e,t,s){super(),this._previousObservationMatcher=e,this._latestObservationMatcher=t,this._trackLineMatcher=s}match(e,t,s){switch(e.readAttribute(T)){case 0:return this._trackLineMatcher.match(e,t,s);case 1:return this._latestObservationMatcher.match(e,t,s);case 2:return this._previousObservationMatcher.match(e,t,s)}return null}hasArcadeDependency(e){return this._trackLineMatcher.hasArcadeDependency(e)||this._latestObservationMatcher.hasArcadeDependency(e)||this._previousObservationMatcher.hasArcadeDependency(e)}}class Ft extends _t{static async create(e,t){const s=await St(e,t.symbology),r=t.labels?await St(e,t.labels):null;return new Ft(s,r)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){await Promise.all([this._symbology.fetchResources(e,t),this._labels?.fetchResources(e,t)])}enqueueWriterRequests(e,t,s,r){const i=this._symbology.match(t,s,r);if(i){for(const r of i)r.enqueueRequest(e,t,s);if(this._labels){const i=this._labels.match(t,s,r);if(!i)return;for(const r of i)r.enqueueRequest(e,t,s)}}}write(e,t,s,r,i,a){const n=this._symbology.match(s,r,i);if(n){for(const i of n)i.write(e,t,s,r,a);if(e.entityRecordCount()>=1&&this._labels){const o=this._labels.match(s,r,i);if(!o)return;for(const i of o)i.setReferences(n),i.write(e,t,s,r,a)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}hasArcadeDependency(e){return!(!this._symbology.hasArcadeDependency(e)&&!this._labels?.hasArcadeDependency(e))}}class kt{constructor(e,t,s,r,i){this.storage=e,this.proxy=t,this.viewParams=s,this.registry=r,this.fieldsMap=i}async createMeshWriters(e){const t=e.map(e=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,e,this.fieldsMap));return Promise.all(t)}}class jt{constructor(e){this._outstandingMessages=[],this._queue=new z({concurrency:e.concurrency,process:t=>e.process(t)})}async push(e){if(e.end)return await Promise.all(this._outstandingMessages),await this._queue.push(e),void(this._outstandingMessages=[]);const t=this._queue.push(e);return this._outstandingMessages.push(t),t}}class Ct{static async create(e,t){if("count"===t.statisticType){const e=new E(1);return new Ct(t.name,t.alias,t.type,t.statisticType,e)}const s=await e.createComputedField({expression:t.onStatisticExpression?.expression,field:t.onStatisticField});return new Ct(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,i){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=i}}class Ot{constructor(e){this.subscription=e,this.handledChunks=new Set}destroy(){}}class qt{constructor(e,t,s){this._source=e,this._attributeStore=t,this._sqlOptions=s,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}get isAggregate(){return!1}onSubscribe(e){const t=this.createState(e);this._sendStates.set(e.key.id,t),this.updateChunks()}onUnsubscribe(e){this._sendStates.get(e.key.id)?.destroy(),this._sendStates.delete(e.key.id)}get hasSubscribers(){return this._sendStates.size>0}requiresInvalidation(){return!1}invalidate(){const e=Array.from(this._sendStates.values());this._sendStates.clear();for(const t of e)t.destroy(),this.onSubscribe(t.subscription)}invalidateAttributeData(e){}hasArcadeDependency(e){return!1}getFeatureObjectIdsForAggregate(e){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(e){return this.displayMap(e,e=>e,e=>e)}getDisplayAndObjectIds(e){return this.displayMap(e,e=>e,(e,t,s)=>[e,s])}afterUpdateChunks(){}}class Mt extends qt{constructor(e,t,s,r,i){super(e,t,i),this.spatialReference=s,this.aggregateFields=r,this._arcadeDependencies=new Set,this.events=new Y,this.featureAdapter=te;for(const e of r)re(this._arcadeDependencies,e.computed)}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new se({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,featureIdInfo:this._metadata.featureIdInfo,spatialReference:this.spatialReference})),this._aggregateQueryEngine}get isAggregate(){return!0}removeChunks(e){}hasArcadeDependency(e){return this._arcadeDependencies.has(e)}forEach(e){return this.forEachAggregateWorldSpace(e)}forEachInBounds(e,t){}forEachBounds(e,t){const s=ee();for(const r of e){const e=L(s,r.geometry,!1,!1);e&&t(e)}}}class Rt{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.clear=s,this.end=r,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"append",clear:this.clear,id:this.id,append:e,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:t,attributeEpoch:s}}}class Tt{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.remove=s,this.end=r,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"update",id:this.id,modify:e,debugInfo:this.debugInfo,remove:this.remove,version:t,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:s}}}class At extends Ot{constructor(e,t){super(e),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=t}reset(){this.destroy(),this.done=!1}destroy(){const e=this.subscription.tile.key.level;for(const t of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${t}.${e}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const e of this.featureCache.values()){const t=e.clone();t.geometry&&N(t.geometry,t.geometry,!1,!1,this.subscription.tile.transform),yield t}}}class Dt extends Mt{static async create(e,t,s,r,i,a){const n=new O({spatialReference:t}),o=await Promise.all(e.fields.map(async e=>Ct.create(n,e))),c=e.featureFilter?await q.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return"geohash"===e.index.type&&await Z(t,F.WGS84),new Dt(e,c,i,o,t,s,r,a)}constructor(e,t,s,r,i,a,n,o){super(a,n,i,r,o),this._schema=e,this._featureFilter=t,this._arcadeContextInfo=s,this._metadata=ie.createFeature({geometryType:"esriGeometryPolygon",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:new X(e.fields).toJSON(),globalIdField:null,spatialReference:a.metadata.spatialReference,outSpatialReference:a.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}createState(e){return new At(e,this._attributeStore)}async*applyOverrideUpdate(e){for(const e of this._sendStates.values()){e.reset();const t=new Rt(e.subscription,ae.empty(this._source.metadata),!0,!1,{});yield t}}displayMap(e,t,s){const r=new Map(e.map(e=>[t(e),e])),i=[];for(const e of this._sendStates.values())for(const t of e.featuresWorldSpace()){const{objectId:e,displayId:a}=t,n=r.get(e);if(null!=n){const t=s(a,n,e);i.push(t),r.delete(e)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const e of this._sendStates.values())for(const i of e.featuresWorldSpace())t.has(i.displayId)&&!s.has(i.objectId)&&(i.geometry&&r.push({...G(i,this._metadata.geometryType,!1,!1),displayId:i.displayId}),s.add(i.objectId));return{features:[],aggregates:r,tracks:[]}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.containedObjectIds);return[]}async*updateChunks(){for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){const t=new Set;for(const s of this._sendStates.values())for(const r of s.featuresWorldSpace())t.has(r.objectId)||(e(r),t.add(r.objectId))}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:e.scale,sqlOptions:this._sqlOptions};case"grid":{const t=this._schema.index.fixedBinLevel,s=null!=t?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:s,sqlOptions:this._sqlOptions}}}}async*_update(e,t){const{handledChunks:s,subscription:r,bins:i,featureCache:a}=e,n=r.tile;if(e.done)return;for(const r of t.chunks()){if(s.has(r.chunkId))continue;s.add(r.chunkId);const t=r.queryInfo;if("tileId"in t){const e=new j(t.tileId);if(e.level!==n.level||e.world!==n.key.world)continue}r.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(i,e.tile.extent,e.tile.resolution)}const o=[],c=r.tile.transform,l=r.tile.key.level;for(const e of i.values()){let t=a.get(e.id);if(t)t.attributes=e.getAttributes();else{const s=e.getGeometry(this.spatialReference,c);t=new J(s,e.getAttributes(),null,e.id),s||(t.centroid=e.getGeometricCentroid(this.spatialReference,c)),t.displayId=this._attributeStore.createDisplayIdForObjectId(`${t.objectId}.${l}`),a.set(e.id,t)}o.push(t)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const u=ae.fromOptimizedFeatures(o,this._metadata,c),d=u.getCursor(),h=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo);for(;d.next();)this._attributeStore.setAttributeData(d.getDisplayId(),d,h,this._sqlOptions);const p=new Tt(e.subscription,u,[],e.done,{});yield p}}class Pt{constructor(e,t){this.inner=e,this.displayId=t}}class Et extends Ot{constructor(e){super(e),this.didSend=!1,this.done=!1}}class Ut{constructor(e,t,s,r,i){this._level=e,this._scale=t,this._indexOptions=s,this._clusterRadius=r,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const e of this._clusters.values())this._store.releaseDisplayIdForObjectId(e.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const e of this._clusters.values()){const t=e.inner.getCentroid(null),s=new J(t,e.inner.getAttributes(),null,e.inner.id,e.displayId);yield s}}clusters(){return this._clusters.values()}updateChunks(e,t){let s=!1;for(const t of e){const e=t.queryInfo;"tileId"in e&&new j(e.tileId).level!==this._level||this._handledChunks.has(t.normalizedChunkId)||(this._handledChunks.add(t.normalizedChunkId),s=!0,t.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells))}const r={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},i=le(this._indexOptions.spatialReference,this._scale),a=this._indexOptions.cellSize;for(const{subscription:e}of t){const t=e.tile.bounds,s=Math.floor(t[0]*i/a),n=Math.floor(t[1]*i/a),o=Math.ceil(t[2]*i/a),c=Math.ceil(t[3]*i/a);r.xMin=Math.min(r.xMin,s),r.yMin=Math.min(r.yMin,n),r.xMax=Math.max(r.xMax,o),r.yMax=Math.max(r.yMax,c)}return null!=this._lastCellBounds&&r.xMin===this._lastCellBounds.xMin&&r.yMin===this._lastCellBounds.yMin&&r.yMin===this._lastCellBounds.yMin&&r.yMax===this._lastCellBounds.yMax||(s=!0,this._lastCellBounds=r),s&&this._clusterCells(r),s}async updateStatistics(e){let t=!1;for(const e of this._clusters.values())e.inner.count>1&&(t=this._updateAggregateStatistics(this._statistics,e.inner)||t);if(t){const t=Array.from(this._statistics.entries()).map(([e,t])=>({fieldName:e,minValue:t.minValue,maxValue:t.maxValue}));await e.container.updateStatistics(this._level,t)}}createAggregateFeatures(e,t){const s=e.subscription,r=[],i=s.tile.transform;for(const e of this._clusters.values()){let t=e.inner.getCentroidX(i);const a=e.inner.getCentroidY(i),n=s.tile.lod,o=n.wrap?n.worldSize[0]:null,c=1===e.inner.count?e.inner.firstObjectId:e.inner.id,l=e.displayId;if(null!=o)if(1===o){const s=new ce([],[t,a]),i=new J(s,e.inner.getAttributes(),null,c,l);i.geometry.coords[0]-=g,r.push(i);const n=new ce([],[t,a]),o=new J(n,e.inner.getAttributes(),null,c,l);o.geometry.coords[0]+=g,r.push(o)}else t>g+g/2?t-=o*g:t<-256&&(t+=o*g);if(t<g+128&&t>=-128&&a<g+128&&a>=-128){const s=new ce([],[t,a]),i=new J(s,e.inner.getAttributes(),null,c,l);r.push(i)}}return ae.fromOptimizedFeatures(r,t,s.tile.transform)}_clusterCells(e){let t=Array.from(this._cells.values());t=t.sort((e,t)=>t.count-e.count);const s=[];for(const e of this._clusters.values())s.push(e.inner.id);this._clusters.clear();const r=this._clusterRadius*(1/le(this._indexOptions.spatialReference,this._scale)),i=1+this._clusterRadius/this._indexOptions.cellSize,a=new Set;for(const s of t){if(a.has(s.id))continue;if(s.gridX<e.xMin||s.gridX>e.xMax||s.gridY<e.yMin||s.gridY>e.yMax)continue;const t=this._store.createDisplayIdForObjectId(s.id),n=new Pt(s.clone(),t);a.add(s.id),this._clusters.set(s.id,n);const o=s.centroidXWorld,c=s.centroidYWorld;for(let e=s.gridY-i;e<=s.gridY+i;e++)for(let t=s.gridX-i;t<=s.gridX+i;t++){if(e===s.gridY&&t===s.gridX)continue;const i=this._cells.get(ue.createId(t,e));if(!i||a.has(i.id))continue;const l=Math.abs(i.centroidXWorld-o),u=Math.abs(i.centroidYWorld-c);l<r&&u<r&&(n.inner.merge(i),a.add(i.id))}}for(const e of s)this._store.releaseDisplayIdForObjectId(e)}_updateAggregateStatistics(e,t){let s=!1;for(const r of t.statistics.values()){if("esriFieldTypeString"===r.field.type)continue;const t=r.value,i=r.field,a=e.get(i.name);if(a){const{minValue:e,maxValue:r}=a,i=Math.min(a.minValue,t),n=Math.max(a.maxValue,t);e===i&&r===n||(a.minValue=i,a.maxValue=n,s=!0);continue}e.set(i.name,{minValue:t,maxValue:t}),s=!0}return s}}class zt extends Mt{static async create(e,t,s,r,i,a,n){const o=new O({spatialReference:s}),c={type:"grid",fields:await Promise.all(t.fields.map(async e=>Ct.create(o,e))),spatialReference:s,featureFilter:t.featureFilter?await q.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,arcadeContextInfo:a,sqlOptions:n};return new zt(e,t.clusterRadius,c,t.fields,r,i,n)}constructor(e,t,s,r,i,a,n){super(i,a,s.spatialReference,s.fields,n),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=ie.createFeature({geometryType:"esriGeometryPoint",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:new X([...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}]).toJSON(),globalIdField:null,spatialReference:i.metadata.spatialReference,outSpatialReference:i.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new Et(e)}async*applyOverrideUpdate(e){for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear();for(const e of this._sendStates.values())e.done=!1}displayMap(e,t,s){const r=new Map(e.map(e=>[t(e),e])),i=[],a=this._getClusterState(this._requiredLevel,this._requiredScale);for(const e of a.clusters()){const t=r.get(e.inner.id);if(null!=t){const a=s(e.displayId,t,e.inner.id);i.push(a),r.delete(e.inner.id);continue}if(1===e.inner.count){const{firstObjectId:t}=e.inner,a=t?r.get(t):null;if(null!=a){const n=s(e.displayId,a,t);i.push(n),r.delete(t)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],i=[],a=this._getClusterState(this._requiredLevel,this._requiredScale);for(const e of a.aggregatesWorldSpace())if(t.has(e.displayId)&&!s.has(e.displayId)){const t=G(e,this._metadata.geometryType,!1,!1);if(s.add(e.displayId),1===t.attributes.cluster_count){r.push({...t,displayId:e.displayId});continue}i.push({...t,displayId:e.displayId})}return{features:r,aggregates:i,tracks:[]}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter(e=>e.subscription.tile.level===this._requiredLevel);if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const e of s)e.subscription.tile.level===this._requiredLevel&&(e.didSend=!1,e.done=!1);const r=Array.from(this._sendStates.values()).filter(e=>e.done).map(e=>e.subscription.tile.key),i=new Set(r);for(const e of this._sendStates.values()){if(this._source.updateTracking.updating){if(r.some(t=>t.containsChild(e.subscription.tile.key)))continue;if(e.subscription.tile.key.getChildKeys().every(e=>i.has(e)))continue}e.didSend||e.subscription.tile.level!==this._requiredLevel||(e.didSend=!0,yield*this._update(e,t,this._source))}await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(null==this._requiredLevel||null==this._requiredScale)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(null==e||null==t)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new Ut(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const i=r.getCursor(),a=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.arcadeContextInfo);for(;i.next();)this._attributeStore.setAttributeData(i.getDisplayId(),i,a,this._sqlOptions);const n=new Rt(e.subscription,r,!0,e.done,{});yield n}}class Lt extends Ot{}class Gt extends qt{constructor(e,t,s,r){super(e,t,r),this._arcadeContextInfo=s,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const e of this._source.chunks())this._cleanupChunkIds(e)}invalidateAttributeData(e){this.handledChunksForAttributeData.clear(),this._arcadeContextInfo=e,null!=this._evalOptions&&(this._evalOptions=ge(this._evalOptions.$view.scale,e))}onSubscribe(e){super.onSubscribe(e),this._evalOptions=e.tile.createArcadeEvaluationOptions(this._arcadeContextInfo)}createState(e){return new Lt(e)}get aggregateQueryEngine(){return null}displayMap(e,t,s){const r=new Map(e.map(e=>[t(e),e])),i=[];for(const e of this._source.chunks()){const t=e.reader.getCursor();for(;t.next();){const e=t.getObjectId(),a=t.getDisplayId(),n=r.get(e);if(null!=n){const t=s(a,n,e);i.push(t),r.delete(e)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const e of this._source.chunks()){const i=e.reader.getCursor();for(;i.next();){const e=i.getObjectId(),a=i.getDisplayId();t.has(a)&&!s.has(e)&&(r.push({...i.readLegacyFeatureWorldSpace(),displayId:a}),s.add(e))}}return{features:r,aggregates:[],tracks:[]}}async*applyOverrideUpdate(e){const t=[];for(const s of e.modified){const e=this._attributeStore.createDisplayIdForObjectId(s.objectId);s.displayId=e,t.push(e)}const r=ae.fromOptimizedFeatures(e.modified,this._source.metadata).getCursor();for(;r.next();)this._attributeStore.setAttributeData(r.getDisplayId(),r,this._evalOptions,this._sqlOptions);const i=[];for(const t of e.removed){const e=this._attributeStore.getDisplayIdForObjectId(t);null!=e&&i.push(e)}s("esri-2d-update-debug")&&console.debug("FeatureUpdateStrategy.applyLocalEdit",{message:e,modifiedDisplayIds:t,removedDisplayIds:i});const a=de.fromFeatures(e.modified,this._source.metadata);this.handledChunks.add(a.chunkId),this.handledChunksForAttributeData.add(a.chunkId),this.handledChunksForIdCreation.add(a.chunkId);for(const e of this._sendStates.values())e.handledChunks.add(a.chunkId),yield new Tt(e.subscription,null,t,!1,a.queryInfo);for(const e of this._sendStates.values()){const t=a.getTileReader(e.subscription.tile);yield new Tt(e.subscription,t,i,!1,a.queryInfo)}for(const t of e.removed)this._attributeStore.releaseDisplayIdForObjectId(t)}async*updateChunks(){if(this._source.chunks().length){this._updateAttributeData();for(const e of this._sendStates.values())yield*this._update(e)}}removeChunks(e){for(const t of e)this.handledChunks.delete(t.chunkId),this.handledChunksForAttributeData.delete(t.chunkId),this._cleanupChunkIds(t)}afterUpdateChunks(){for(const e of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(e);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(e){if(this.handledChunksForIdCreation.has(e.chunkId)){const t=e.reader.getCursor();for(;t.next();){const e=t.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(e):this._attributeStore.releaseDisplayIdForObjectId(e)}this.handledChunksForIdCreation.delete(e.chunkId)}}_updateAttributeData(){for(const e of this._source.chunks()){const{chunkId:t,reader:s}=e;if(!this.handledChunksForIdCreation.has(t)){this.handledChunksForIdCreation.add(t);const e=s.getCursor();for(;e.next();){const t=this._attributeStore.createDisplayIdForObjectId(e.getObjectId());e.setDisplayId(t)}}}for(const e of this._source.chunks())if(!this.handledChunksForAttributeData.has(e.chunkId)){this.handledChunksForAttributeData.add(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const e=t.getDisplayId();this._attributeStore.setAttributeData(e,t,this._evalOptions,this._sqlOptions)}}}*_update(e){const{subscription:t,handledChunks:s}=e;for(const r of this._source.chunks()){const{chunkId:i}=r;if(s.has(i)||!this.handledChunksForIdCreation.has(i)||!this.handledChunksForAttributeData.has(i))continue;s.add(i);const a=r.getTileReader(t.tile);a&&(yield new Rt(e.subscription,a,!1,r.end,r.queryInfo))}}}let Nt;class Bt{constructor(e,t,s,r,i){this.chunkIndex=e,this.featureIndex=t,this.objectId=s,this.displayId=r,this.time=i}}class Wt{static getOid(e){return A+e}constructor(e,t,s,r,i,a,n,o){this._schema=e,this.trackId=t,this.objectId=s,this.displayId=r,this._fields=i,this._spatialReference=a,this._metadata=n,this._isStream=o,this._maxDisplayDuration=this._schema.maxDisplayDuration>0?this._schema.maxDisplayDuration:1/0,this._maxDisplayObservationsPerTrack=this._schema.maxDisplayObservationsPerTrack>=1?this._schema.maxDisplayObservationsPerTrack:1/0,this._observationRecords=[],this._nextObservationRecords=[],this._trackLinePath=[],this._bounds=[],this._trackLineGeometry=new ce}get _trackLineAttributes(){const e={...this._latestObservationFeature?.attributes??{},aggregateId:this.objectId,[T]:0};if(null!=this._statistics)for(const t of this._statistics.values())e[t.field.name]=t.value;return e}get _startTimeField(){return this._metadata.timeInfo?.startTimeField}get length(){return this._observationRecords.length}*observations(){yield*this._observationRecords}*previousObservations(){for(let e=0;e<this._observationRecords.length-1;e++)yield this._observationRecords[e]}get latestObservationFeature(){return this._latestObservationFeature}get latestObservationRecord(){return this._latestObservationRecord}stageObservation(e,t){this._nextObservationRecords.push(new Bt(e,t.getIndex(),t.getObjectId(),t.getDisplayId(),null!=this._startTimeField?t.readAttributeAsTimestamp(this._startTimeField):null))}commitObservations(e,t,s){const r=new Set(this._nextObservationRecords.map(e=>e.objectId)),i=this._observationRecords.filter(e=>!r.has(e.objectId)).map(e=>e.objectId);let a,n;switch(this._observationRecords=[],this._trackLinePath=[],this._isStream||null==this._startTimeField||this._nextObservationRecords.sort((e,t)=>{const s=e.time,r=t.time;return null!=s&&null!=r?s-r:0}),this._schema.timeField){case"startTimeField":a=this._metadata.timeInfo?.startTimeField;break;case"endTimeField":a=this._metadata.timeInfo?.endTimeField;break;case"timeReceived":a=this._isStream?D:null}n=this._isStream?s?.end??Date.now():s?.end??-1/0;const o=t.map(e=>e.reader.getCursor());let c;for(let e=this._nextObservationRecords.length-1;e>=0&&!(this._observationRecords.length>=this._maxDisplayObservationsPerTrack);e--){const t=this._nextObservationRecords[e],s=o[t.chunkIndex];b(s),s.setIndex(t.featureIndex);const r=null!=a?s.readAttributeAsTimestamp(a):null;(null!=r?n-r:0)>=this._maxDisplayDuration||(this._commitObservation(t,s),c??=t)}if(null!=c){const{chunkIndex:t,featureIndex:s}=c,r=`${c.objectId}.latest`,a=e.createDisplayIdForObjectId(r),n=o[t];b(n),n.setIndex(s);const l=new J(n.readGeometryWorldSpace(),{...n.readAttributes(),[T]:1},null,r,a);this._latestObservationFeature&&i.push(this._latestObservationFeature.objectId),this._latestObservationFeature=l,this._latestObservationRecord=c}else this._latestObservationFeature=null;return this._trackLineGeometry=function(e,t,s){if(t.length<2)return Q(e,[t],!1,!1);if(s.isWrappable){let r=!1;for(let e=1;e<t.length;e++){const i=t[e][0],a=qe(i,t[e-1][0],s);i!==a&&(t[e][0]=a,r=!0)}if(r){const r=Me({paths:[t],spatialReference:s});if(null!=r)return Q(e,r.paths,!1,!1)}return Q(e,[t],!1,!1)}const r=Nt.fromGeometryToGXGeometry({hasM:!1,hasZ:!1,paths:[t]}),i=Nt.fromSpatialReference(s);if(null!=i){const t=we(r,1e6,i,ve.geodesic);if(null!=t){const s=Nt.toGeometry(t,i);if(null!=s&&"paths"in s)return Q(e,s.paths,!1,!1)}}return Q(e,[t],!1,!1)}(this._trackLineGeometry,this._trackLinePath,this._spatialReference),this._bounds=function(e){const{lengths:t,coords:s}=e;if(!t.length)return[je()];const r=[];let i=0;for(let e=0;e<t.length;e++){const a=t[e],n=je();r.push(n);for(let e=0;e<a;e++){const t=s[2*(e+i)],r=s[2*(e+i)+1];Ce(n,[t,r])}i+=a}return r}(this._trackLineGeometry),this._nextObservationRecords=[],i}updateStatistics(e,t){this._statistics=pe.create(this._fields);const s=e.map(e=>e.reader.getCursor());for(const{chunkIndex:e,featureIndex:r}of this._observationRecords){const i=s[e];b(i),i.setIndex(r),this._statistics.insert(i,t)}}overlapsTile(e){for(const t of this._bounds)if(xe(t,e.bounds,32))return!0;return!1}getLatestObservationFeatureForTile(e){if(null==this._latestObservationFeature)return null;const{objectId:t,displayId:s,geometry:r,attributes:i}=this._latestObservationFeature,a=new ce;B(a,r,!1,!1,this._metadata.geometryType,e.subscription.tile.transform);const n=Fe(1/0,1/0,-1/0,-1/0);return function(e,t){const{coords:s,lengths:r}=e;if(!r.length)return void t(s[0],s[1]);let i=0;for(let e=0;e<r.length;e++){const a=r[e];let n=0,o=0;for(let e=0;e<a;e++)n+=s[2*(e+i)],o+=s[2*(e+i)+1],t(n,o);i+=a}}(a,(e,t)=>Ce(n,[e,t])),ke(n,Fe(0,0,g,g))?new J(a,i,null,t,s):null}getTrackLineFeatureForTile(e){const t=new ce;return B(t,this._trackLineGeometry,!1,!1,"esriGeometryPolyline",e.subscription.tile.transform),new J(t,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineOptimizedFeature(){return new J(this._trackLineGeometry,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineDisplayFeature(){const{_trackLineGeometry:e,_trackLineAttributes:t,displayId:s}=this;return{geometry:W(e,"esriGeometryPolyline",!1,!1),attributes:t,displayId:s}}_commitObservation(e,t){const s=t.readCentroidWorldSpace();let r=s?.coords[0],i=s?.coords[1];null==s&&(r=t.readXWorldSpace(),i=t.readYWorldSpace()),null!=r&&null!=i&&(this._observationRecords.unshift(e),this._trackLinePath.unshift([r,i]))}}class Qt extends Ot{constructor(e){super(e),this.done=!1}}class Vt extends Mt{static async create(e,t,s,r,i,a){const n=new O({spatialReference:t}),o=await Promise.all(e.fields.map(async e=>Ct.create(n,e))),c=e.featureFilter?await q.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return t.isWrappable||Ie()||await Promise.all([import("./apiConverter.js"),import("./jsonConverter.js"),Se()]).then(([e,t,s])=>{Nt={fromGeometryToGXGeometry:t.fromGeometryToGXGeometry,toGeometry:t.toGeometry,fromSpatialReference:e.fromSpatialReference}}),new Vt(e,s,r,t,o,c,i,a)}constructor(e,t,s,r,i,a,n,o){super(t,s,r,i,o),this._schema=e,this._featureFilter=a,this._arcadeContextInfo=n,this._tracks=new Map,this._handledChunks=new Set,this._metadata=t.metadata.weakCloneWithAdditionalFields([{name:T,alias:"trackPart",type:"esriFieldTypeSmallInteger"}]),this._trackLineMetadata=ie.createFeature({geometryType:"esriGeometryPolyline",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:{fields:[...this._source.metadata.fieldsIndex.fields,...this.aggregateFields,{name:T,alias:"trackPart",type:"esriFieldTypeSmallInteger"},{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}],timeZoneByFieldName:null},globalIdField:null,spatialReference:t.metadata.spatialReference,outSpatialReference:t.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:t.metadata.timeInfo,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}destroy(){super.destroy();for(const e of this._tracks.values())this._removeTrack(e);this._tracks.clear()}get _isStream(){return this._source.isStream}get enablePixelBuffering(){return!0}get isAggregate(){return!1}requiresInvalidation(){const e=new Set(this._source.chunks().map(e=>e.chunkId));for(const t of e)if(!this._handledChunks.has(t))return!0;for(const t of this._handledChunks)if(!e.has(t))return!0;return!1}invalidate(){this._handledChunks.clear(),super.invalidate()}createState(e){return new Qt(e)}async*applyOverrideUpdate(e){be.getLogger("esri.views.2d.layers.features.processor.TrackStrategy").error("Applying override to tracks is not supported")}displayMap(e,t,s){const r=new Map(e.map(e=>[t(e),e])),i=[];for(const e of this._tracks.values()){const t=r.get(e.objectId);if(null!=t){const a=s(e.displayId,t,e.objectId);i.push(a),r.delete(e.objectId);continue}const a=e.latestObservationFeature;if(a?.objectId){const e=r.get(a.objectId);if(null!=e){const t=s(a.displayId,e,a.objectId);i.push(t),r.delete(a.objectId);continue}}for(const t of e.observations()){const e=r.get(t.objectId);if(null!=e){const a=s(t.displayId,e,t.objectId);i.push(a),r.delete(t.objectId)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=[],r=[],i=this._source.chunks().map(e=>e.reader.getCursor());for(const e of this._tracks.values()){if(t.has(e.displayId)&&r.push(e.getTrackLineDisplayFeature()),null!=e.latestObservationFeature&&t.has(e.latestObservationFeature.displayId)){const{displayId:t,chunkIndex:r,featureIndex:a}=e.latestObservationRecord,n=i[r];n.setIndex(a),s.push({displayId:t,...n.readLegacyFeatureWorldSpace()})}for(const{displayId:r,chunkIndex:a,featureIndex:n}of e.observations())if(t.has(r)){const e=i[a];e.setIndex(n),s.push({displayId:r,...e.readLegacyFeatureWorldSpace()})}}return{features:s,aggregates:[],tracks:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._tracks.values())if(t.objectId===e)return Array.from(t.observations(),e=>e.objectId);return[]}async*updateChunks(){0===this._handledChunks.size&&this._rebuildTracks();for(const e of this._sendStates.values())yield*this._update(e)}forEachAggregateWorldSpace(e){for(const t of this._tracks.values())e(t.getTrackLineOptimizedFeature())}_rebuildTracks(){const e=this._source.chunks();if(!e.length)return;const t=this._metadata.timeInfo?.trackIdField;if(null==t)return;const s=new Set;for(let r=0;r<e.length;r++){const i=e[r];this._handledChunks.add(i.chunkId);const a=i.reader.getCursor();for(;a.next();){const e=a.readAttribute(t),i=a.getObjectId();if(null!=e&&null!=i&&(null===this._featureFilter||this._featureFilter.check(a,this._sqlOptions))){if(a.getDisplayId()||a.setDisplayId(this._attributeStore.createDisplayIdForObjectId(i)),!this._tracks.has(e)){const t=Wt.getOid(e),s=this._attributeStore.createDisplayIdForObjectId(t),r=new Wt(this._schema,e,t,s,this.aggregateFields,this.spatialReference,this._source.metadata,this._isStream);this._tracks.set(e,r)}this._tracks.get(e).stageObservation(r,a),s.add(e)}}}for(const t of this._tracks.values())if(s.has(t.trackId)){const s=t.commitObservations(this._attributeStore,e,this._featureFilter?.timeExtent);for(const e of s)this._attributeStore.releaseDisplayIdForObjectId(e);t.updateStatistics(e,ge(1,this._arcadeContextInfo))}else this._removeTrack(t)}_removeTrack(e){this._tracks.delete(e.trackId),this._attributeStore.releaseDisplayIdForObjectId(e.objectId);for(const{objectId:t}of e.observations())this._attributeStore.releaseDisplayIdForObjectId(t);null!=e.latestObservationFeature&&this._attributeStore.releaseDisplayIdForObjectId(e.latestObservationFeature.objectId)}*_update(e){if(e.done)return;e.done=!this._source.updateTracking.updating;const t=[],s=[];for(const r of this._tracks.values())if(r.length>0){if(this._schema.showLatestObservation){const s=r.getLatestObservationFeatureForTile(e);null!=s&&t.push(s)}this._schema.showTrackLine&&r.overlapsTile(e.subscription.tile)&&s.push(r.getTrackLineFeatureForTile(e))}const i=ae.fromOptimizedFeatures(t,this._metadata,e.subscription.tile.transform),a=ae.fromOptimizedFeatures(s,this._trackLineMetadata,e.subscription.tile.transform);let n=[];if(this._schema.showPreviousObservations){const t=this._source.chunks().map(()=>[]);for(const e of this._tracks.values())for(const{chunkIndex:s,featureIndex:r}of e.previousObservations())t[s].push(r);n=this._source.chunks().map((s,r)=>{const i=s.getTileReader(e.subscription.tile);if(null==i)return null;const a=he.from(i,t[r]);return a.setProcessorAttributes({[T]:2}),"esriGeometryPoint"!==a.geometryType&&null!=a.getInTransform()||a.setTransformForDisplay(e.subscription.tile.transform),a}).filter(r)}this.events.emit("changed");const o=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo),c=a.getCursor();for(;c.next();)this._attributeStore.setAttributeData(c.getDisplayId(),c,o,this._sqlOptions);for(const e of n){const t=e.getCursor();for(;t.next();)this._attributeStore.setAttributeData(t.getDisplayId(),t,o,this._sqlOptions)}const l=i.getCursor();for(;l.next();)this._attributeStore.setAttributeData(l.getDisplayId(),l,o,this._sqlOptions);yield new Rt(e.subscription,a,!1,!1,{});for(const t of n)yield new Rt(e.subscription,t,!1,!1,{});yield new Rt(e.subscription,i,!1,e.done,{})}}class $t{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._registry=new U,this._proxy=new M({fetch:(e,t)=>this._connection.layerView.fetch(e,t),fetchDictionary:(e,t)=>this._connection.layerView.fetchDictionary(e,t)}),this._attributeStore=new R({isLocal:!1,update:e=>f(this._connection.container.updateAttributeView(e))})}destroy(){this._proxy.destroy(),this._strategy?.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}get version(){return this._version}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[],tracks:[]}}getDisplayIds(e){const t={};return this._strategy?(this._strategy.displayMap(e,e=>e,(e,s,r)=>{t[r]=e}),t):t}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){this._strategy?.onSubscribe(e)}onUnsubscribe(e){this._strategy?.onUnsubscribe(e)}requiresInvalidation(){return this._strategy?.requiresInvalidation()??!1}async update(e,t,r,i,a){const n=e.processor,o=S(this._schema?.storage,n.storage),c=S(this._schema?.mesh.properties,n.mesh.properties),l=S(this._schema?.mesh.factory,n.mesh.factory),u=S(this._schema?.mesh.strategy,n.mesh.strategy),d=function(e,t){const s=[];return e?.timeExtent?.start===t.timeExtent?.start&&e?.timeExtent?.end===t.timeExtent?.end||s.push("timeProperties"),s}(this._schema?.expressionProperties,n.expressionProperties),h=d.some(e=>this._attributeStore.hasArcadeDependency(e)),p=d.some(e=>this._factory?.hasArcadeDependency(e)??!1),m=d.some(e=>this._strategy?.hasArcadeDependency(e))||this._strategy?.isAggregate&&h,_=p||m,f=c||l||u;if(!(o||f||p||h||m||i))return!1;s("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:w(this._schema,n),schema:n}),this._schema=n;const y=F.fromJSON(this._source.service.outSpatialReference),g=new O({fields:this._source.metadata.fieldsIndex,spatialReference:y}),b={currentUser:n.mesh.properties.currentUser};if((o||f||h)&&(await this._attributeStore.update(n.storage,g,this._source.metadata,t),this._strategy?.invalidateAttributeData(Ht(n))),!i&&!f&&!_)return!1;(u||c||_)&&await this._updateStrategy(n.mesh.strategy,y,a,Ht(n),b),this._updateSortKey(g,"sortKey"in n.mesh.properties?n.mesh.properties.sortKey:null);const I="dictionary"===n.mesh.factory.symbology.type?n.mesh.factory.symbology.fieldMap:null,v=new kt(g,this._proxy,r,this._registry,I);return(l||"dictionary"===n.mesh.factory.symbology.type)&&(this._factory=await Ft.create(v,n.mesh.factory)),this._version=t,!0}async applyOverrideUpdate(e){if(!this._strategy)return;const t=this._strategy.applyOverrideUpdate(e);for await(const e of t)try{await this._process(e)}catch(e){}}async updateChunks(){await this._doUpdateChunks(),this._strategy?.afterUpdateChunks()}async removeChunks(e){this._strategy?.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:e}){if(!this._strategy||!this._strategy.hasSubscribers)return void this._attributeStore.setHighlight(e.map(({objectId:e,highlightFlags:t})=>({objectId:e,highlightFlags:t,displayId:-1})),e);const t=this._strategy.displayMap(e,({objectId:e})=>e,(e,{highlightFlags:t},s)=>({objectId:s,displayId:e,highlightFlags:t}));this._attributeStore.setHighlight(t,e)}invalidate(){this._strategy&&this._strategy.invalidate()}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],r=new Map;for await(const s of e){let e=r.get(s.id);null==e&&(e=new jt({concurrency:16,process:e=>this._process(e)}),r.set(s.id,e));const i=e.push(s).catch(e=>n(e));t.push(i)}try{await Promise.all(t)}catch(e){}s("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),s("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r,i){switch(this._strategy?.destroy(),e.type){case"feature":this._strategy=new Gt(this._source,this._attributeStore,r,i);break;case"binning":this._strategy=await Dt.create(e,t,this._source,this._attributeStore,r,i);break;case"cluster":this._strategy=await zt.create(this._connection,e,t,this._source,this._attributeStore,r,i);break;case"track":this._strategy=await Vt.create(e,t,this._source,this._attributeStore,r,i)}for(const e of s)this._strategy.onSubscribe(e)}async _updateSortKey(e,t){if(this._sortInfo=I(this._sortInfo?.computed),null!=t){const s=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:s}}}async _process(e){const t=e.subscription;if(s("esri-2d-update-debug")){const s=t.tile;console.debug(`Version[${this._version}] Tile[${s.key.id}, end=${e.end}] Processor._process`)}const r={currentUser:this._schema?.mesh.properties.currentUser};await this._fetchResources(e,r),o(t.signal);const i=await this._write(e,t.tile.createArcadeEvaluationOptions(Ht(this._schema)),r),a=t.tile.tileInfoView.getLODInfoAt(t.tile.key);o(t.signal);const{message:n,transferList:c}=i.serialize(a),l={objectIdMap:null,inner:e.createMessage(n,this._version,this._attributeStore.epoch)};if(this._schema?.mesh.properties.returnMeshObjectId){l.objectIdMap={};const t=e.reader?.getCursor();if(t)for(;t.next();)l.objectIdMap[t.getDisplayId()]=t.getObjectId()}if(o(t.signal),await this._connection.container.onMessage(l,{signal:t.signal,transferList:c}),this._attributeStore.sendUpdates(),s("esri-2d-update-debug")){const s=t.tile;console.debug(`Version[${this._version}] Tile[${s.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e,t){await this._fetchMatcherResources(e),await this._fetchWriterResources(e,t)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e,t){if(!e.reader)return;const s=e.reader.getCursor(),r=e.subscription.tile.createArcadeEvaluationOptions(Ht(this._schema));for(;s.next();)this._factory.enqueueWriterRequests(this._proxy,s,r,t);await this._proxy.fetchEnqueuedResources()}async _write(e,t,s){const r=e.subscription.tile,i=e.reader?.getCursor(),a=i?.getSize()??0,n=r.tileInfoView.tileInfo.isWrappable,l=r.tileInfoView.tileInfo.spatialReference.isWGS84,u=new mt(r.key,this._strategy.enablePixelBuffering,n,l,a);if(!i)return u;const d=r.createArcadeEvaluationOptions(Ht(this._schema));let h=0;for(;i.next();){++h%1e3||(await c(0),o(e.subscription));const a=this._getSortKeyValue(i,t);u.entityStart(i.getDisplayId(),a),this._factory.write(u,this._proxy,i,d,s,r.level),u.entityEnd()}return u}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:i}=this._sortInfo,a=i?this._factory.getSortKey(e,t):s?.read(e,t);return null==a||isNaN(a)?0:a*("asc"===r?-1:1)}}function Ht(e){const{timeZone:t}=e?.mesh.properties??{},{timeExtent:s}=e?.expressionProperties??{};return{timeZone:t,timeExtent:s}}class Jt{static from(e){let t=0,s=0,r=0;return e.forEach(e=>{const i=e._readGeometry();i&&(s+=i.isPoint?1:i.lengths.reduce((e,t)=>e+t,0),r+=i.isPoint?1:i.lengths.length,t+=1)}),new Jt(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}}class Zt{static fromSchema(e,t,s){const r="feature"===t.type?t.mutable.dataFilter.queryScaleRanges:[],i=t.mutable.displayFilterInfo;return new Zt(function(e,t,s){const r=function(e){switch(e.type){case"object-id":case"unique-id-simple":return`${e.fieldName} ASC`;case"unique-id-composite":return`${e.fieldNames.join(",")} ASC`}}(s.featureIdInfo),i=e.source,a={returnCentroid:!(null!==i&&"object"==typeof i&&"path"in i&&Te(i.path))&&"esriGeometryPolygon"===s.serviceGeometryType,returnGeometry:!0,timeReferenceUnknownClient:s.timeReferenceUnknownClient??void 0,outSpatialReference:F.fromJSON(e.outSpatialReference),orderByFields:"memory"===e.type?[]:[r],where:t.mutable.dataFilter.definitionExpression??"1=1",outFields:t.mutable.availableFields,multipatchOption:"esriGeometryMultiPatch"===s.serviceGeometryType?"xyFootprint":null};if("feature"===t.type){const{gdbVersion:e,historicMoment:s,timeExtent:r}=t.mutable.dataFilter;return{...a,gdbVersion:e,historicMoment:s?new Date(s):null,timeExtent:r?Ne.fromJSON(r):null,outFields:t.mutable.availableFields}}return a}(e,t,s),i,r,s.subtypeField,t.mutable.dataFilter.customParameters,s.geometryType,e.queryMetadata)}constructor(e,t,s,r,i,a,n){this._queryParams=e,this._displayFilter=t,this._queryScaleRanges=s,this._subtypeField=r,this._customParameters=i,this._geometryType=a,this._queryMetadata=n}get pageSize(){if(null==this._queryMetadata)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?4:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}get objectIdsQueryPageSize(){return this._queryMetadata?.maxRecordCount??2e3}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t,r){if(!t.getSize())return null;const i=e.clone();if("*"===this._queryParams.outFields[0]){if("*"===(i.outFields??[])[0])return null;i.outFields=this._queryParams.outFields}else{const e=new Set(this._queryParams.outFields),s=[];for(const r of e)t.hasField(r)||s.push(r);if(0===s.length)return null;i.outFields=s}i.returnGeometry=!1,i.returnCentroid=!1,i.quantizationParameters=null,i.cacheHint=!0;const a={inner:i,customParameters:this._customParameters};if(s("esri-tiles-debug")&&null!=r){const e=r.chunkId.toString().replaceAll("/",".");a.customParameters=a.customParameters?{...a.customParameters,chunkId:e}:{chunkId:e}}return a}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new Le({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(null==this._queryMetadata)throw new Error("InternalError: Service does not support tile queries");const r=this.createQuery(t),i=r.inner;if(this._queryScaleRanges.length){const t=this._queryScaleRanges.filter(t=>(!t.minScale||t.minScale>=e.maxScale)&&(!t.maxScale||t.maxScale<=e.minScale)).map(e=>e.subtypeCode);if(t.length){const e=`${this._subtypeField} IN (${t})`;i.where=Ue(i.where,e)}}if(this._displayFilter&&(i.where=Ue(i.where,ze(this._displayFilter,e.minScale,e.maxScale))),i.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),i.resultType="tile",i.geometry=e.extent,this._queryMetadata.supportsQuantization?"esriGeometryPolyline"===this._geometryType&&(i.maxAllowableOffset=e.resolution*s("feature-polyline-generalization-factor")):"esriGeometryPolyline"!==this._geometryType&&"esriGeometryPolygon"!==this._geometryType||(i.maxAllowableOffset=e.resolution,"esriGeometryPolyline"===this._geometryType&&(i.maxAllowableOffset*=s("feature-polyline-generalization-factor"))),i.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,i.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(i.maxRecordCountFactor=4),s("esri-tiles-debug")){const t=e.id.replaceAll("/",".");r.customParameters=r.customParameters?{...r.customParameters,tileId:t}:{tileId:t}}return r}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e,t){const s=this.pageSize;return this.createQuery({start:s*e,num:s,returnExceededLimitFeatures:!0,maxRecordCountFactor:4,quantizationParameters:t,cacheHint:!0})}createObjectIdsQuery(e){return this.createQuery({objectIds:e,outFields:["*"]})}}let Kt=class extends We{constructor(e){super(),this._connection=e,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([m(()=>this._strategy?.connectionStatus??"disconnected",e=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:e})},{initial:!0}),m(()=>this._strategy?.errorString||null,e=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:e}),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(e){null==this._strategy&&this._resetUpdateInfo(performance.now());const t="event-handles";this.removeHandles(t),null!=e&&(this.addHandles([e.events.on("data-received",e=>this._onFeature(e)),e.events.on("message-received",e=>this._onWebSocketMessage(e)),e.events.on("features-updated",e=>this._onUpdate(e)),e.events.on("tick",()=>this._onTick())],t),this._queuedCommands.forEach(t=>t(e)),this._queuedCommands=[]),this._strategy=e}updateCustomParameters(e){null!=e&&this._callOrEnqueue(t=>t.updateCustomParameters(e))}sendMessageToSocket(e){this._callOrEnqueue(t=>t.sendMessageToSocket(e))}sendMessageToClient(e){this._callOrEnqueue(t=>t.sendMessageToClient(e))}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(e){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:e})}_onFeature(e){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}})}_onUpdate(e){this._updateInfo.client+=e}_onTick(){const e=performance.now(),t=e-this._lastTime;if(t>2500){const s=Math.round(this._updateInfo.client/(t/1e3)),r=Math.round(this._updateInfo.websocket/(t/1e3));this._resetUpdateInfo(e),this._layerView.emitEvent({name:"update-rate",event:{client:s,websocket:r}})}}_resetUpdateInfo(e){this._lastTime=e,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(e){null!=this._strategy?e(this._strategy):this._queuedCommands.push(e)}};Be([Qe()],Kt.prototype,"_strategy",void 0),Kt=Be([Ve("esri.views.2d.layers.features.sources.StreamMessenger")],Kt);class Xt{constructor(t,s,r,i){this.store=t,this.queryInfo=s,this._options=r,this._fetch=i,this._nextBatch=new Set,this._fetchFeatures=l(async()=>{if(0===this._nextBatch.size||this._options.signal?.aborted)return;const t=Array.from(this._nextBatch);this._nextBatch.clear(),t.length>8e3&&be.getLogger("esri.views.2d.layers.FeatureLayerView2D").warn(new e("highlight-too-many-features","highlight is limited to 8000 features on large layers configured with a display filter to avoid performance issues"));const s=this.queryInfo.objectIdsQueryPageSize,r=Math.ceil(8e3/s),i=Math.min(r,Math.ceil(t.length/s)),a=Array.from({length:i},(e,r)=>{const i=r*s,a=Math.min(i+s,t.length);return{num:r,query:this.queryInfo.createObjectIdsQuery(t.slice(i,a))}});try{await async function(t,s,r,i={}){const a=await Promise.allSettled(r.map(e=>async function(e,t,s,r={}){const i=`${e.chunkPrefix??""}${s.num}`,a=await e.fetch(s.query,r,{chunkId:i}),n=new me(a,s.query.inner.toJSON(),s.num,!1);n.chunkId=n.normalizedChunkId=i,o(r),t.insert(n)}(t,s,e,i))),n=a.filter(e=>"rejected"===e.status).map(e=>e.reason);if(n.length)throw new e("featurelayer-query","Encountered errors when downloading data",{errors:n})}({chunkPrefix:"cache."+$e(),fetch:this._fetch},this.store,a,this._options)}catch(e){}})}prepareCacheUpdate(e,t){if(t)for(const e of t)this._nextBatch.delete(e);for(const t of e)this._nextBatch.add(t)}applyCacheUpdate(){return 0===this._nextBatch.size||this._options.signal?.aborted?null:this._fetchFeatures().catch(()=>{})}}class Yt{constructor(e){this._store=e,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}get _signal(){return this._controller.signal}unsafeSetQueryHistoricMoment(e){throw new Error("InternalError: LoadStrategy does not support query info")}async queryByObjectId(e){throw new Error("InternalError: LoadStrategy does not support fetching")}async addParquetFile(e){throw new Error("InternalError: LoadStrategy does not support loading blobs")}prepareCacheUpdate(e,t){}applyCacheUpdate(){return null}}const es=268435455;class ts{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.idFieldIndices=[],this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}}const ss=268435455,rs=128e3,is={small:{delta:new Int32Array(128),decoded:new Int32Array(128)},small64:{delta:new Float64Array(0),decoded:new Float64Array(0)},large:{delta:new Int32Array(rs),decoded:new Int32Array(rs)},large64:{delta:new Float64Array(0),decoded:new Float64Array(0)}};function as(e,t){return t?e<=is.small64.delta.length?is.small64:(e<=is.large64.delta.length||(is.large64.delta=new Float64Array(Math.round(1.25*e)),is.large64.decoded=new Float64Array(Math.round(1.25*e))),is.large64):e<=is.small.delta.length?is.small:(e<=is.large.delta.length||(is.large.delta=new Int32Array(Math.round(1.25*e)),is.large.decoded=new Int32Array(Math.round(1.25*e))),is.large)}function ns(e){for(;e.next();){if(1===e.tag())return e.getMessage();e.skip()}return null}function os(e,t,s,r,i){return!!e&&0===t*i-r*s&&t*r+s*i>0}class cs extends ne{static fromBuffer(t,s,r=!1){const i=s.geometryType,a=function(t){try{const e=2,s=new Xe(new Uint8Array(t),new DataView(t));for(;s.next();){if(s.tag()===e)return ns(s.getMessage());s.skip()}}catch(t){const s=new e("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:t});be.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(s)}return null}(t),n=function(e,t,s,r=!1){const i=e.asUnsafe(),a=i.pos(),n=new ts;let o=0,c=0,l=null,u=!1;const d=[];for(;i.next();)switch(i.tag()){case 12:l=i.processMessage(tt);break;case 9:if(n.exceededTransferLimit=i.getBool(),n.exceededTransferLimit){n.offsets.geometry=r?new Float64Array(8e3):new Int32Array(8e3),n.centroid=r?new Float64Array(16e3):new Int32Array(16e3);for(let e=0;e<n.centroid.length;e++)n.centroid[e]=es}break;case 13:{const e=i.processMessage(et);e.index=o++,d.push(e);break}case 15:{const e=i.getLength(),s=i.pos()+e;if(!n.exceededTransferLimit){const e=n.offsets.geometry,t=n.centroid;e.push(0),t.push(es),t.push(es)}!u&&n.exceededTransferLimit&&(u=!0,n.offsets.attributes=r?new Float64Array(8e3*o):new Uint32Array(8e3*o));let a=c*o;for(;i.pos()<s&&i.next();)switch(i.tag()){case 1:{u?n.offsets.attributes[a++]=i.pos():n.offsets.attributes.push(i.pos());const e=i.getLength();i.skipLen(e);break}case 2:if(t){const e=i.getLength(),t=i.pos()+e;for(;i.pos()<t&&i.next();)switch(i.tag()){case 3:{i.getUInt32();const e=i.getSInt64(),t=i.getSInt64();n.centroid[2*c]=e,n.centroid[2*c+1]=t;break}default:i.skip()}}else{n.offsets.geometry[c]=i.pos();const e=i.getLength();n.vertexCount+=e,i.skipLen(e)}break;case 4:{const e=i.getLength(),t=i.pos()+e;for(;i.pos()<t&&i.next();)switch(i.tag()){case 3:{i.getUInt32();const e=i.getSInt64(),t=i.getSInt64();n.centroid[2*c]=e,n.centroid[2*c+1]=t;break}default:i.skip()}break}default:i.skip()}c++,n.hasFeatures=!0;break}default:i.skip()}n.fields=new X(d),n.featureCount=c,n.fieldCount=o;const h=Ye(s);return n.idFieldIndices=Array.from(h,e=>n.fields.get(e)?.index),n.transform=l,n.displayIds=new Uint32Array(n.featureCount),n.groupIds=new Uint16Array(n.featureCount),i.move(a),n}(a,"esriGeometryPoint"===i,s.featureIdInfo,r);return new cs(a,n,s,r)}constructor(e,t,s,r){super(s),this._use64Bit=r,this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints="esriGeometryPoint"===s.geometryType}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){if(1===this._header.idFieldIndices.length)return this._readAttributeAtIndex(this._header.idFieldIndices[0]);const e=this._header.idFieldIndices.map(e=>this._readAttributeAtIndex(e));return JSON.stringify(e)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new cs(e,this._header,this.metadata,this._use64Bit);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}get usedMemory(){return Ke+(this._cache.geometry?.usedMemory??0)}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===ss?null:new ce([],[e,t])}_readGeometry(e=!1){if(void 0===this._cache.geometry){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===ss)return null;const e=this._header.centroid[2*this._featureIndex],s=this._header.centroid[2*this._featureIndex+1];t=new ce([],[e,s])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(0===s)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch(e){return null}}return 0===t?.coords.length&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(null==s)return;const r=this._readAttributeAtIndex(s.index),i=this._header.fields.isDateField(s.name);return t?null==r?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new oe(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const i=function(e){const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getSInt32();case 5:return e.getUInt32();case 6:return e.getInt64();case 7:return e.getUInt64();case 8:return e.getSInt64();case 9:return e.getBool();default:return e.skip(),null}return null}(r);return t.set(this._featureIndex,i),i}_readGeometryDeltaDecoded(e=!1){if(void 0===this._cache.unquantGeometry){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=as(t.coords.length,this._use64Bit).decoded,r=t.clone(s),i=r.coords;let a=0;for(const e of r.lengths){for(let t=1;t<e;t++){const e=2*(a+t),s=2*(a+t-1);i[e]+=i[s],i[e+1]+=i[s+1]}a+=e}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i=[],a=[];for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),s=t.pos()+e;for(;t.pos()<s;)a.push(t.getUInt32());break}case 3:{const e=t.getUInt32(),s=t.pos()+e;for(i.push(t.getSInt64()),i.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();t.pos()<s;)i.push(t.getSInt64()),i.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();break}default:t.skip()}return new ce(a,i)}_parseGeometryForDisplay(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i=[],a=[];let n=0,o=0,c=null,l=0;const u="esriGeometryPolygon"===this.geometryType,d="esriGeometryPolyline"===this.geometryType,h=u?3:d?2:1,p=u||d;for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),s=t.pos()+e;for(;t.pos()<s;){const e=t.getUInt32();i.push(e),n+=e}c=as(2*n,this._use64Bit).delta;break}case 3:{t.getUInt32();const e=2+(this.hasZ?1:0)+(this.hasM?1:0);b(c);for(const s of i){if(o+e*s>c.length){for(let e=0;e<s;e++)t.getSInt64(),t.getSInt64(),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();continue}let r=0,i=t.getSInt64(),n=t.getSInt64();this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64(),c[o++]=i,c[o++]=n,r+=1;for(let e=1;e<s;e++){const e=t.getSInt64(),s=t.getSInt64(),a=i+e,u=n+s;l+=-.5*(a-i)*(u+n),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64(),0===e&&0===s||os(p,c[o-2],c[o-1],e,s)?(c[o-2]+=e,c[o-1]+=s):(c[o++]=e,c[o++]=s,r+=1),i=a,n=u}r>=h?a.push(r):o-=r*e}break}default:t.skip()}return this._cache.area=l,a.length?new ce(a,c):null!=c?this._createDeltaQuantizedExtrudedGeometry(c[0],c[1]):null}}class ls{constructor(e,t){this.service=e,this._metadata=t}destroy(){}}class us extends ls{constructor(e,t){super(e,t),this._portsOpen=async function(e){const t=new He;return await t.open(e,{}),t}(e.source).then(e=>this.client=e)}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return ae.fromFeatureSet(s,this._metadata)}}class ds extends ls{async executeQuery(e,t){const{data:s}=await Ae(this.service.source,e,t),r=!e.quantizationParameters;return cs.fromBuffer(s,this._metadata,r)}}class hs extends ls{async executeQuery(e,t){const{source:s,queryMetadata:r}=this.service;if(null!=e.quantizationParameters&&!r.supportsQuantization){const r=e.clone(),i=Je(r.quantizationParameters);r.quantizationParameters=null;const{data:a}=await De(s,r,this._metadata.spatialReference,t),n=V(a,this._metadata.featureIdInfo);return $(i,n),ae.fromOptimizedFeatureSet(n,this._metadata)}const{data:i}=await De(s,e,this._metadata.spatialReference,t);return"esriGeometryPoint"===this._metadata.geometryType&&(i.features=i.features?.filter(e=>{if(null!=e.geometry){const t=e.geometry;return Number.isFinite(t.x)&&Number.isFinite(t.y)}return!0})),ae.fromFeatureSet(i,this._metadata)}}class ps extends ls{async executeQuery(e,t){if(e.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const s=e.clone(),r=Je(s.quantizationParameters);s.quantizationParameters=null;const i=await Ze(this.service.source,e,t);return $(r,i),ae.fromOptimizedFeatureSet(i,this._metadata)}const s=await Ze(this.service.source,e,t);return ae.fromOptimizedFeatureSet(s,this._metadata)}}class ms extends Yt{constructor(e,t,r,i,a){super(r),this._serviceInfo=e,this._queryInfo=t,this._metadata=i,this._connection=a,this._queue=new z({concurrency:32,process:async e=>{const t={signal:e.options?.signal,query:e.query.customParameters,useRequestQueue:!0};return this._adapter.executeQuery(e.query.inner,t)}}),this._adapter=function(e,t){switch(e.type){case"memory":return new us(e,t);case"ogc":return new ps(e,t);case"feature-service":return e.queryMetadata.supportsFormatPBF&&s("featurelayer-pbf")?new ds(e,t):new hs(e,t)}}(e,i)}unsafeSetQueryHistoricMoment(e){this._queryInfo.updateHistoricMoment(e)}async updateFields(t){this._queryInfo.updateFields(t);const s=Array.from(this._store.chunks()).map(async e=>{const t=Le.fromJSON(e.queryInfo.queryJSON);if(t)try{return await this._tryUpdateFields(e.reader,t,{chunkId:e.chunkId}),null}catch(e){return e}}),r=(await Promise.all(s)).filter(e=>e);if(r.length)throw new e("featurelayer-query","Encountered errors when downloading fields",{errors:r})}async queryByObjectId(e){if(0===e.length)return ae.empty(this._metadata);const t=this._queryInfo.createQuery({objectIds:e});return this._fetch(t,null,null)}async _fetch(e,t,s){const r=await this._enqueue(e,t);return await this._tryUpdateFields(r,e.inner,s),r}async _tryUpdateFields(t,s,r){const i=this._queryInfo.createPatchFieldsQuery(s,t,r);if(!i)return;const a=await this._enqueue(i,this._options);a.getSize()===t.getSize()?t.joinAttributes(a):be.getLogger("esri.views.2d.layers.features.sources.strategies.AFetchLoadStrategy").error(new e("featurelayer-query",`Failed to join features. Expected a count of ${t.getSize()} features, but got ${a.getSize()}`,{query:i.inner.toJSON(),debugInfo:r}))}async _enqueue(e,t){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:e,options:t}).finally(()=>{this._connection.onEvent({type:"fetchEnd",done:0===this._queue.length})})}}class _s extends ms{constructor(e,t,s,r,i){super(e,t,s,r,i),this._chunksById=new Map,this._featureCache=new Xt(s,t,this._options,this._fetch.bind(this))}prepareCacheUpdate(e,t){return this._featureCache.prepareCacheUpdate(e,t)}applyCacheUpdate(){return this._featureCache.applyCacheUpdate()}unload(e){this._removeChunks(e.tile)}_addChunk(e){const t=e.tile.id;this._chunksById.has(t)||this._chunksById.set(t,[]);const r=e.size();(r||e.first||e.end)&&(s("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${r}]`),this._chunksById.get(t).push(e),this._store.insert(e))}_removeChunks(e){const t=this._chunksById.get(e.key.id)??[];for(const r of t)s("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${r.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(r);this._chunksById.delete(e.key.id)}}class fs extends _e{constructor(e,t,s,r,i,a){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=i,this._end=a,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._sourceTile?.key.normalizedId}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return 0===this._sourceTileDepth}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}}class ys{constructor(e,s){this.subscription=e,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=t([u(e.signal,()=>this._controller.abort()),u(s,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get(e){return this._tileIdToResult.get(e)}set(e,t){this._tileIdToResult.set(e,t)}get options(){return{signal:this._controller.signal}}}class gs extends _s{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{supportsDisplayFilter:!0,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new ys(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{for await(const s of this._fetchChunkInfos(t,e.tile,0)){const{queryJSON:e,reader:r,sourceTile:i,sourceTileDepth:a,tile:n}=s,c=new fs(r,e,n,i,a,!1);o(t.options),this._addChunk(c)}}catch(e){s=e}const r=new fs(ae.empty(this._metadata),null,e.tile,null,-1,!0);if(this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async*_fetchChunkInfos(e,t,r){let i=e.get(t.id);const a=!!i;if(i||(i=await this._fetchChunkInfo(e,t,r),e.set(t.id,i)),i.reader.exceededTransferLimit&&r<s("featurelayer-query-max-depth"))for(const s of t.createChildTiles())yield*this._fetchChunkInfos(e,s,r+1);else a||(yield i)}async _fetchChunkInfo(e,t,s){const r=e.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(t,{returnExceededLimitFeatures:!1,quantizationParameters:r});return{reader:await this._fetch(i,e.options,{chunkId:t.id}),queryJSON:i.inner.toJSON(),tile:e.subscription.tile,sourceTile:t,sourceTileDepth:s}}}class bs extends _e{constructor(e,t,s,r,i){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return 0===this._page}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}}class Is{constructor(e,s){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=t([u(e.signal,()=>this._controller.abort()),u(s,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}}class Ss extends _s{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{supportsDisplayFilter:!0,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){const t=st(this._loadStates,e.key.id,()=>new Is(e,this._options));for await(const e of this._fetchPages(t))this._addChunk(e)}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async*_fetchPages(e){let t;try{for await(const t of this._concurrentPageStream(e))o(e.options),0!==t.size()&&(yield t)}catch(e){t=e}if(t&&d(t)||(yield new bs(ae.empty(this._metadata),null,e.subscription.tile,-1,!0)),t)throw t}async*_concurrentPageStream(e){const t=s("featurelayer-query-tile-concurrency"),r=this._pageStreamAll(e),i=[];let a=!1,n=1;for(;!a;){const e=[];for(;!a&&i.length<n;){const t=r.next();if(!t.value){a=!0;break}const s=t.value;s.then(e=>{e.reader.exceededTransferLimit||(a=!0)}).catch(e=>{a=!0}).finally(()=>{i.splice(i.indexOf(s),1)}),i.push(s),e.push(s)}for(const t of e)yield t;i.length&&await Promise.race(i),n<t&&(n+=1)}}*_pageStreamAll(e){const t=Math.ceil(s("featurelayer-query-tile-max-features")/this._queryInfo.pageSize);for(let s=0;s<t;s++)yield this._downloadPage(s,e)}async _downloadPage(e,t){o(t.options);const s=t.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,e),i=await this._fetch(r,t.options,{chunkId:`${s.id}-${e}`});return o(t.options),new bs(i,r.inner.toJSON(),s,e,!1)}}class ws extends Yt{constructor(e,t,s,r){super(r),this._service=e,this._metadata=t,this._schema=s,this._chunkId=0,this._files=[],this._availableFields=new Set(s.mutable.availableFields)}destroy(){super.destroy();for(const e of this._files)e.free()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}async updateFields(e){await this._promise;const t=new Set(e),s=rt(t,this._availableFields);this._availableFields=it(s,this._availableFields);const r=this._fieldsIndex;if(null==r)return;const i=Array.from(s).map(e=>r.get(e)?.column);if(s.size)for(const e of this._files)await e.ensureFields(new Uint32Array(i))}async load(e){return null==this._promise&&(this._promise=this._download()),this._promise}unload(e){}async addParquetFile(e){this._insert(e)}async _insert(e){const t=await at(e,{geometryInfo:this._service.geometryInfo,outSpatialReference:this._service.outSpatialReference,getCustomParameters:()=>this._schema.mutable.dataFilter.customParameters});this._files.push(t),o(this._options);const s=t.fields().map(e=>({name:e.name,alias:e.name,type:e.type,column:t.columnForFieldName(e.name)})),{timeZoneByFieldName:r}=this._service.metadata.fieldsIndex,i=X.fromJSON({fields:s,timeZoneByFieldName:r});this._fieldsIndex=i;const a=new Uint32Array(Array.from(this._availableFields.values()).map(e=>i.get(e)?.column).filter(e=>null!=e));await t.readAllChunks(a,this._signal,e=>{if(this._signal.aborted)return;const t=this._chunkId++,s=new fe(this._metadata,i,e,t),r=new me(s,null,t,!1);this._store.insert(r)})}async _download(){try{await Promise.all(this._service.source.urls.map(e=>this._insert(e)));const e=new me(ae.empty(this._metadata),null,-1,!0);this._store.insert(e)}catch(e){throw console.error(e),e}}}class vs extends _e{constructor(e,t,s,r,i){super(),this._metadata=e,this._reader=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get reader(){return this._reader??ae.empty(this._metadata)}get first(){return 0===this._page}get end(){return this._end}get tile(){return this.tile}get queryInfo(){return{type:"parquet",chunkId:this.chunkId,queryJSON:null,page:this._page,size:this.size(),tileId:this._tile.id,end:this.end}}get isTiled(){return!0}getTileReader(e){if(this._tile.key.id===e.key.id){const t=[];for(let e=0;e<this.reader.getSize();e++)t.push(e);const s=he.from(this.reader,t);return s.setTransformForDisplay(e.transform),s}return null}}class xs extends Yt{constructor(e,t,s,r){super(r),this._metadata=t,this._schema=s,this._files=[];const i=new Set(s.mutable.availableFields);if(!e.geometryInfo.displayOptimization)throw new Error("InternalError: ParquetTileLoadStrategy only supports XZ-enabled parquet files");this._index=Fs.create(t,e,i,r,()=>this._schema.mutable.dataFilter.customParameters)}destroy(){super.destroy();for(const e of this._files)e.free()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}async load(e){const t=await this._index;await t.ensureLoaded(e)}unload(e){this._index.then(t=>t.unload(e.tile))}async updateFields(e){return(await this._index).updateFields(e)}async addParquetFile(e){throw new Error("Impl!")}}class Fs{static async create(e,t,s,r,i){const a=await Promise.all(t.source.urls.map(e=>at(e,{geometryInfo:t.geometryInfo,outSpatialReference:t.outSpatialReference,getCustomParameters:i}))),[n]=a,o=n.fields().map(e=>({name:e.name,alias:e.name,type:e.type,column:n.columnForFieldName(e.name)})),{timeZoneByFieldName:c}=t.metadata.fieldsIndex,l=X.fromJSON({fields:o,timeZoneByFieldName:c}),u=new Uint32Array(Array.from(s.values()).map(e=>l.get(e)?.column).filter(e=>null!=e)),d=t.geometryInfo.displayOptimization;if(!d)throw new Error("InternalError: tiled parquet load requires display optimization");return new Fs(e,await Promise.all(a),l,u,r,s,d)}constructor(e,t,s,r,i,a,n){this._metadata=e,this._files=t,this._fieldsIndex=s,this._fieldIndices=r,this._store=i,this._availableFields=a,this._displayOptimization=n,this._queue=new z({concurrency:1,process:e=>this._ensureLoaded(e)}),this._tileIdToChunkId=new Map}get file(){return this._files[0]}async ensureLoaded(e){return this._queue.push(e)}unload(e){const t=this._tileIdToChunkId.get(e.id);if(null!=t){for(const e of t)this._store.removeById(e);this._tileIdToChunkId.delete(e.id)}}async _ensureLoaded(e){const t=this._metadata.outSpatialReference,s=e.tile,{xmin:r,ymin:i,xmax:a,ymax:n}=function(e,t){const s=[e.xmin,e.ymin,e.xmax,e.ymax],r=nt.fromExtent(Oe(s,t)),i=K(r,t,F.WGS84);if(!i)return null;const a=H(new ce,i,!1,!1),n=a.coords.filter((e,t)=>!(t%2)),o=a.coords.filter((e,t)=>t%2);return{xmin:Math.min(...n),ymin:Math.min(...o),xmax:Math.max(...n),ymax:Math.max(...o)}}(s.extent,t);let o=0;const c={extent:s.extent,extent_lat_lng:{xmin:r,ymin:i,xmax:a,ymax:n},tile_level:s.level,attributes:this._fieldIndices};if("z"===this._displayOptimization.mode?await this.file.queryZChunks(c.extent_lat_lng,this._fieldIndices,e.signal,t=>{if(e.signal.aborted)return;const r=new fe(this._metadata,this._fieldsIndex,t,o),i=new vs(this._metadata,r,s,o++,!1);this._insertChunk(s,i)}):await this.file.queryXZChunks(c,e.signal,t=>{if(e.signal.aborted)return;const r=new fe(this._metadata,this._fieldsIndex,t,o),i=new vs(this._metadata,r,s,o++,!1);this._insertChunk(s,i)}),e.signal.aborted)return;const l=new vs(this._metadata,null,s,o++,!0);this._insertChunk(s,l)}_insertChunk(e,t){let s=this._tileIdToChunkId.get(e.id);null==s&&(s=[],this._tileIdToChunkId.set(e.id,s)),s.push(t.chunkId),this._store.insert(t)}async updateFields(e){const t=new Set(e),s=rt(t,this._availableFields);if(this._availableFields=it(s,this._availableFields),s.size)for(const e of this._files){const t=Array.from(s).map(e=>this._fieldsIndex.get(e)?.column);await e.ensureFields(new Uint32Array(t))}}}class ks extends ms{constructor(e,t,s,r,i,a){super(e,t,s,i,a),this._snapshotInfo=r}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return null==this._promise&&(this._promise=this._download()),this._promise}unload(e){}async _download(){const e=this._snapshotInfo.initialTolerance,t=e?new Ge({mode:"view",originPosition:"upper-left",tolerance:e}):null;await this._downloadStreaming(t),null!=t&&await this._downloadRefresh()}async _downloadStreaming(t){try{for await(const e of this._fetchPages(t))this._store.insert(e)}catch(t){throw new e("featurelayer-query","Encountered error when downloading data",{error:t})}}async _downloadRefresh(){try{const e=[];for await(const t of this._fetchPages(null))e.push(t);this._store.clear();for(const t of e)this._store.insert(t);this._store.refresh()}catch(t){throw new e("featurelayer-query","Encountered error when downloading data",{error:t})}}async*_fetchPages(e){let t;try{for await(const t of this._concurrentPageStream(e))0!==t.size()&&(yield t)}catch(e){t=e}if(t&&d(t)||(yield new me(ae.empty(this._metadata),null,-1,!0)),t)throw t}async*_concurrentPageStream(e){const t=s("featurelayer-snapshot-concurrency"),r=this._pageStreamAll(e),i=[];let a=!1,n=1;for(;!a;){const e=[];for(;!a&&i.length<n;){const t=r.next();if(!t.value){a=!0;break}const s=t.value;s.then(e=>{e.reader.exceededTransferLimit||(a=!0)}).catch(e=>{a=!0}).finally(()=>{i.splice(i.indexOf(s),1)}),i.push(s),e.push(s)}for(const t of e)yield t;i.length&&await Promise.race(i),n<t&&(n+=1)}}*_pageStreamAll(e){const t=Math.ceil(this._snapshotInfo.maxFeatureCount/this._queryInfo.pageSize);for(let s=0;s<t;s++)yield this._downloadPage(s,e)}async _downloadPage(e,t){o(this._options);const s=this._queryInfo.createPagedQuery(e,t),r=await this._fetch(s,this._options,{chunkId:e.toString()}),i=new me(r,s.inner.toJSON(),e,!1);return o(this._options),i}}let js=class extends We{constructor(e){super(e)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};Be([Qe()],js.prototype,"connection",void 0),Be([Qe()],js.prototype,"connectionStatus",null),Be([Qe()],js.prototype,"errorString",null),js=Be([Ve("esri.views.2d.layers.features.sources.StreamConnectionState")],js);class Cs{constructor(e,t){this._metadata=e,this._onUpdate=t,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return ae.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(e){this._objectIdToFeature.set(e.objectId,e)}forEach(e){this._objectIdToFeature.forEach(e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),t):null}clear(){this._objectIdToFeature=new Map}update(e,t){this._onUpdate(e?.length??0)}}class Os extends _e{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}class qs extends Yt{constructor(e,t,s,r,i){super(s),this._service=e,this._dataFilter=t,this._streamOptions=r,this._metadata=i,this._connectionState=new js,this._forceRefresh=!1,this.events=new Y;const{timeInfo:a}=this._metadata,{purgeOptions:n}=t;this._stagingStore=new Cs(this._metadata.weakCloneWithAdditionalFields([{name:D,alias:"timeReceived",type:"esriFieldTypeDate"}]),e=>this.events.emit("features-updated",e)),this._manager=new ot(this._stagingStore,i.featureIdInfo,a,n),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){const e=null!=this._chunk;return this._manager.checkForUpdates()||!e||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new Os(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick"),!0):(this.events.emit("tick"),!1)}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){this._connection=I(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(null!=this._connection)return;const{geometryType:e,spatialReference:s}=this._metadata,{maxReconnectionAttempts:r,maxReconnectionInterval:i,geometryDefinition:a,definitionExpression:n,customParameters:o}=this._dataFilter;this._connection=ct(this._service.source,s,this._streamOptions.outSR,e,n,a,r,i,o),this._handlesGroup=t([this._connection.on("data-received",e=>this._onFeature(e)),this._connection.on("message-received",e=>this._onWebSocketMessage(e))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){this._connection?.updateCustomParameters(e)}sendMessageToSocket(e){this._connection?.sendMessageToSocket(e)}sendMessageToClient(e){this._connection?.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch(e){}}}class Ms{constructor(e,t,s,r,i){this.service=e,this._aggregateAdapter=t,this._subscriptions=s,this._connection=r,this._cachedObjectIds=i,this._updateTracking=new lt({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._metadata=ie.createFeature(e.metadata),this._store=new ye(this._metadata)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy(),"memory"===this.service.type&&this.service.source.map(e=>e.close())}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){return null==this._streamMessenger&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return Jt.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new se({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,featureIdInfo:s.featureIdInfo,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return"stream"===this._schema.type}get hasDisplayFilter(){return!!this._schema&&"displayFilterInfo"in this._schema.mutable&&null!=this._schema.mutable.displayFilterInfo}chunks(){return Array.from(this._store.chunks())}prepareCacheUpdate(e,t){const s=new Set,r=new Set;for(const t of e)this._cachedObjectIds.has(t)||(this._cachedObjectIds.add(t),s.add(t));for(const e of t)this._cachedObjectIds.delete(e),r.add(e);this.hasDisplayFilter&&this._strategy.prepareCacheUpdate(s,r)}async applyCacheUpdate(){this.hasDisplayFilter&&await this._updateTracking.addPromise(this._strategy.applyCacheUpdate())}cleanup(){return this._store.cleanup()}onSubscribe(e){if(this._connection.onEvent({type:"subscribe",tile:e.tile.id}),!this._strategy)return;const t=this._strategy.load(e);t.then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(t=>this._connection.onEvent({type:"error",tile:e.tile.id,error:t})),this._updateTracking.addPromise(t)}onResume(e){this._updateTracking.addPromise(h(this._strategy?.load(e)))}onUnsubscribe(e){this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),this._strategy?.unload(e)}applyOverride(e){this._didInvalidateData=!0,this._store.applyOverride(e)}takeOverrideUpdate(){return this._store.takeOverrideUpdate()}async update(e,t){const r=e.source,i=w(this._schema?.mutable,r.mutable);if(!i)return!1;if(s("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:i}),this._schema=r,this._queryEngine?.destroy(),this._queryEngine=null,"feature-service"===this.service.type&&null!=this.service.queryMetadata.lastEditDate&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),null==this._streamMessenger&&"stream"===this._schema.type&&this._initStreamMessenger(),v(i,"sourceRefreshVersion")&&this._strategy?.refresh)return this._strategy.refresh();if(("feature"===r.type||"parquet"===r.type)&&v(i,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(r.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(e){this._connection.onEvent({type:"updateFieldsError",error:e})}}return!1}return!!(x(i,"dataFilter")||x(i,"sourceRefreshVersion")||this._strategy.about.supportsDisplayFilter&&x(i,"displayFilterInfo"))&&(await this._updateStrategy(t),!0)}async addParquetFile(e){await this._strategy.addParquetFile(e)}unsafeSetQueryHistoricMoment(e){"feature"===this._schema.type&&(this._schema.mutable.dataFilter.historicMoment=e,this._strategy.unsafeSetQueryHistoricMoment(new Date(e)))}_initStreamMessenger(){null==this._streamMessenger&&(this._streamMessenger=new Kt(this._connection))}async normalizeOverrides(e){const t={historicMoment:e.historicMoment,commands:{updateWeak:e.commands.updateWeak.map(J.fromJSON),removeWeak:e.commands.removeWeak,update:e.commands.update.map(J.fromJSON),remove:e.commands.remove,release:e.commands.release}},s=e.commands.updateByIdWeak,r=await this._queryOptimizedFeatures(s);return t.commands.updateWeak.push(...r),t}async _queryOptimizedFeatures(e){if(0===e.length)return[];const t=[],s=(await this._strategy.queryByObjectId(e)).getCursor();for(;s.next();)t.push(s.readOptimizedFeatureWorldSpace());return t}getObjectIdsFromGlobalIds(e){const t=this.metadata.globalIdField;if(null==t)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");const s=this._store.mapObjectIdsFromGlobalIds(e,t).values();return Array.from(s)}async _queryLastEditDateChanged(){if(null==this._lastEditDate)return!1;const e=this.service.source,t={...e.query,f:"json"},s=(await Re(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e="isSourceHosted"in this.service&&this.service.isSourceHosted,t=Array.isArray(this.service.source),s=this.service.source&&"collection"in this.service.source,r=e||t||s;if("stream"===this._schema.type){const e=new qs(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=e,e}if("parquet"===this._schema.type){const e=this.service;return null!=e.geometryInfo.displayOptimization?new xs(e,this._metadata,this._schema,this._store):new ws(e,this._metadata,this._schema,this._store)}const i=this.service,a=Zt.fromSchema(i,this._schema,this._metadata),n=await this._supportSnapshotMode(i,a);return n?new ks(i,a,this._store,n,this.metadata,this._connection):r?new Ss(i,a,this._store,this.metadata,this._connection):new gs(i,a,this._store,this.metadata,this._connection)}async _updateStrategy(e){const t=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",about:t.about});const r=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=t,s("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const i=Array.from(this._subscriptions.values());if(!i.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const a=Promise.all(i.map(e=>this._strategy.load(e).then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(t=>this._connection.onEvent({type:"error",tile:e.tile.id,error:t}))));this._updateTracking.addPromise(a),this._strategy.prepareCacheUpdate(this._cachedObjectIds);try{r&&await a}catch(e){n(e)}this._connection.onEvent({type:"updateStrategyEnd"}),s("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e,r=s.snapshotInfo;return r?await this._executeExceedsLimitQuery(e,t,r)?null:r:null}async _executeExceedsLimitQuery(e,t,s){if(!s.supportsExceedsLimit)return this._executeExceedsLimitFallbackQuery(e,t,s);try{const r=e.source,i=t.createQuery();i.inner.orderByFields=[],i.inner.returnGeometry=!1;const a=new Ee;a.statisticType="exceedslimit",a.maxPointCount=s.maxFeatureCount,a.maxRecordCount=s.maxFeatureCount,a.outStatisticFieldName="exceedslimit",s.maxVertexCount&&(a.maxVertexCount=s.maxVertexCount),i.inner.outStatistics=[a],i.inner.cacheHint=!0;const n=await De(r,i.inner,void 0,{query:i.customParameters}),o=n.data.features[0]?.attributes.exceedslimit;return!(0===o)}catch(e){return!0}}async _executeExceedsLimitFallbackQuery(e,t,s){if(s.maxVertexCount)return!0;const r=e.source,i=t.createQuery();i.inner.orderByFields=[],i.inner.returnGeometry=!1,i.inner.cacheHint=!0;try{return(await Pe(r,i.inner,{query:i.customParameters})).data.count>s.maxFeatureCount}catch(e){return!0}}}class Rs{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class Ts{constructor(e){this.inner=e,this.resolver=p()}}class As{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._cachedObjectIds=new Set,this._updateRequested=!1,this._didSourceRefresh=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor?.destroy(),this._source?.destroy(),this._handles?.remove(),this._updateOverridesRequest=null,this._tileInfoView=null}onAttach(e){s("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const r=this._connection,i=y.fromJSON(e.tileInfoJSON);this._tileInfoView=new k(i),this._source=new Ms(e.service,this._aggregateAdapter,this._subscriptions,r,this._cachedObjectIds),this._processor=new $t(r,this._source),this._handles=t([this._source.store.events.on("changed",()=>this._requestUpdate()),this._source.store.events.on("refresh",()=>this._requestRefresh()),m(()=>this._source.updateTracking.updating,()=>{this._requestUpdate(),h(this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}))})])}onDetach(){s("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new dt(e)}get features(){const t=this._source?.queryEngine;if(!t)throw new e("no-queryEngine","No query engine defined");return t}get aggregates(){const t=this._processor?.aggregateQueryEngine;if(!t)throw new e("no-queryEngine","No aggregate query engine defined");return t}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}getDisplayIds(e){return this._processor.getDisplayIds(e)}getObjectIdsFromGlobalIds(e){return this._source.getObjectIdsFromGlobalIds(e)}async updateSchema(e,t){return s("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new Ts({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new Ts(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new Ts(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async addParquetFile(e){return this._source.addParquetFile(e)}async onOverride(t){if(null!=this._updateOverridesRequest)throw new e("featurelayer","InternalError - Already processing an edit");this._updateOverridesRequest=new Ts(t);const s=this._updateOverridesRequest.resolver.promise;return this._requestUpdate(),s}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(_(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const i="string"==typeof e.fieldOffset,a=e.fieldOffset??0,n=Array.from(this._subscriptions.values()),o=this._source.chunks(),c=t**2,l=3/(Math.PI*c),u=2*t,d=Math.ceil(g/u);for(const t of n){const n=t.tile,h=new Float64Array(d*d);for(const t of o){const s=t.getTileReader(n);if(!s)continue;const r=s.getCursor();for(;r.next();){let t=1;if(null!=e.field){const s=r.readAttribute(e.field);t=i?-1*+s:+s+a}const s=r.readXForDisplay()/u,n=r.readYForDisplay()/u,o=Math.floor(s),p=Math.floor(n);if(o<0||p<0||o>=d||p>=d)continue;const m=((.5+o-s)*u)**2+((.5+p-n)*u)**2;if(m>c)continue;const _=t*(l*(1-m/c)**2);h[p+o*d]+=_}}for(let e=0;e<h.length;e++)s=Math.min(s,h[e]),r=Math.max(r,h[e])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce((e,t)=>e+t.size(),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const e=[];return this._source.store.forEachUnsafe(t=>e.push(t.readLegacyFeatureWorldSpace())),e}return null}const s=new Set,r=[],a=t.map(e=>e.reader.getCursor()),n=new i,o=3*e.sampleSize;for(let i=0;i<o&&r.length<e.sampleSize;i++){const e=a[n.getIntRange(0,t.length-1)];if(0===e.getSize())continue;const i=n.getIntRange(0,e.getSize()-1);e.setIndex(i);const o=e.getObjectId();s.has(o)||(s.add(o),r.push(e.readLegacyFeatureWorldSpace()))}return r.length>=e.sampleSize?r:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,a(()=>this._scheduleNextUpdate()))}_requestRefresh(){this._didSourceRefresh=!0,this._requestUpdate()}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=f(this._doUpdate()).finally(()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()}),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;s("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const r=new ut(this._tileInfoView,t),i=new Rs(r,e.version);this._subscriptions.set(t,i),this._source.onSubscribe(i),this._processor.onSubscribe(i)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(s("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(s("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const e=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const t of e)this._doUpdateSubscriptions(t.inner),t.resolver.resolve()}if(this._updateHighlightRequests.length){const e=this._updateHighlightRequests,t=new Set,s=new Set;for(const r of e)for(const{objectId:e,highlightFlags:i}of r.inner.highlights)i?(t.add(e),s.delete(e)):(s.add(e),t.delete(e));this._source.prepareCacheUpdate(t,s)}const e=this._updateSchemaRequest;this._updateSchemaRequest=null;let t=!1;if(null!=e){const{schema:s,version:r}=e.inner;t=await this._doUpdateSchema(s,r)}this._processor.requiresInvalidation()&&(t=!0),this._didSourceRefresh&&(t=!0,this._didSourceRefresh=!1),t&&(this._processor.invalidate(),await this._connection.container.updateRenderState(this._processor.version));const r=this._updateOverridesRequest;if(this._updateOverridesRequest=null,null!=r){s("esri-2d-update-debug")&&console.debug("Pipeline.applyOverride",r.inner),null!=r.inner.historicMoment&&this._source.unsafeSetQueryHistoricMoment(r.inner.historicMoment);const e=await this._source.normalizeOverrides(r.inner);this._source.applyOverride(e),s("esri-2d-update-debug")&&console.debug("Pipeline.endOverride",r.inner)}if(await this._source.applyCacheUpdate(),this._updateHighlightRequests.length){const e=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const t of e)this._processor.updateHighlight(t.inner),t.resolver.resolve()}const i=this._source.cleanup();this._processor.removeChunks(i);try{const e=this._source.takeOverrideUpdate();if(null!=e&&this._subscriptions.size){s("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesStart"),await this._connection.container.lockForOverrides();try{await this._processor.applyOverrideUpdate(e)}catch(e){s("esri-2d-update-debug")&&console.debug("InternalError",e)}await this._connection.container.unlockForOverrides(),s("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesEnd")}this._subscriptions.size&&(s("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),s("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(e){n(e)}null!=r&&r.resolver.resolve(),null!=e&&e.resolver.resolve(),null==e&&t&&await this._connection.container.trySwapRenderState(),this._updateRequested?(s("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0})):(s("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){s("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const r={tileInfo:this._tileInfoView?.tileInfo},i=await this._source.update(e,t),a=Array.from(this._subscriptions.values()),n=this._processor.update(e,t,r,i,a);return s("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`),n}_doUpdateSubscriptions(e){s("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{As as default};
