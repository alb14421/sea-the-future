/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import{EventEmitter as e,EventedAccessor as n}from"../core/Evented.js";import{clone as i}from"../core/lang.js";import{d as s,e as r}from"./maybe.js";import{m as o}from"./memoize.js";import{ignoreAbortErrors as a}from"../core/promiseUtils.js";import{R as l}from"./ReactiveSet.js";import{watch as p,syncAndInitial as c}from"../core/reactiveUtils.js";import{c as u,b as d}from"./screenUtils.js";import{property as h}from"../core/accessorSupport/decorators/property.js";import"./Logger.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import{d as g}from"./diffUtils.js";import{U as v}from"./UpdatingHandles.js";import{p as y,a as f}from"./dehydratedFeatureComparison.js";import{i as _,n as x,d as b,b as S}from"./elevationInfoUtils.js";import{a as w}from"./DrawingMode.js";import{c as T,E as P,a as C,P as V}from"./EditGeometryOperations.js";import{c as M,a as O}from"./dragEventPipeline.js";import{C as D,c as I,d as E,H as j,V as H,G as Z,P as G,a as R,e as k}from"./constraints.js";import{v as z,a as U,d as L}from"./quantityUtils.js";import{a7 as A,O as F}from"./unitUtils.js";import{h as q,e as W,j as B}from"./vec3.js";import K from"../geometry/SpatialReference.js";import{p as N}from"./projectVectorToVector.js";import{geodesicCompatibleSpatialReference as J}from"../geometry/support/geodesicUtils.js";import{m as Q}from"./dehydratedPoint.js";import{b as X,h as Y,j as $}from"./normalizedPoint.js";import{a as tt,d as et,p as nt}from"./angularMeasurementUtils.js";import it from"../views/interactive/sketch/SketchLabelOptions.js";import{S as st}from"./SnappingContext.js";import{c as rt}from"./SnappingDragPipelineStep.js";import{S as ot}from"./SnappingOperation.js";import at from"../geometry/Point.js";import{c as lt}from"./hydratedFeatures.js";function pt(t,e,n,i,s,r){let o="geodesic",a=J(n);const l=X();return Y(t,e,i,l),l[2]=0,a&&N(l,n,l,a)||(o="euclidean",a=n),{mode:o,view:e,elevationInfo:i,hasZ:s,directionMode:r,spatialReference:t.spatialReference,measurementSR:a,origin:l}}function ct(t,e,n){if(null==e||null==t)return;const i=A(n.measurementSR);if(null==i)return;const s=yt(t,n);if(null==s)return;const r=z(e,i);return new I(s,r)}function ut(t,e,n,i){if(null==n||null==t)return;const s=yt(t,i);if(null==s)return;const r=tt(n),o=t=>{if(null==t)return;const e=X(),n=U(t,"degrees","geographic");return nt(e,s,i.measurementSR,10,n,i.mode)?new H(s,e):void 0},a=()=>{if(null!=e&&null!=t)return tt(et(e,t))};switch(i.directionMode){case"absolute":return o(r);case"relative":{const t=a();if(null==t)return;return o(t+r)}case"relative-bilateral":{const t=a();if(null==t)return;return E([o(t+r),o(t-r)])}}}function dt(t,e){const n=ft(t,e);return null!=n?new j(n):void 0}function ht(t,e,n){const{context:i,longitude:s,latitude:r,direction:o,distance:a,elevation:l}=n;if(null!=s||null!=r||null!=a||null!=l||null!=o){if(null!=s||null!=r){const t=tt(s),e=tt(r),n=ft(l,i);return new D(t,e,n)}return function(t,e,{context:n,direction:i,distance:s,elevation:r}){if(null==e)return dt(r,n);const{view:o,elevationInfo:a,measurementSR:l}=n,p=Y(e,o,a);if(!l||!N(p,e.spatialReference,_t,l))return;const[c,u]=_t,d=null!=s?z(s,"meters"):void 0,h=tt(i),m=ft(r,n),g=t=>{const e=new Z([c,u],l,d,m,t);return null==d||null==t||null==m&&n.hasZ?e:new G(e.closestTo(p))};if(null==h)return g(void 0);const v=()=>{if(null!=t&&null!=e)return tt(et(t,e))};switch(n.directionMode){case"absolute":return g(h);case"relative":{const t=v();if(null==t)return;return g(t+h)}case"relative-bilateral":{const t=v();if(null==t)return;return E([g(t+h),g(t-h)])}}}(t,e,n)}}function mt(t){return"geodesic"===t.context.mode?ht(null,null,t):vt(t)}function gt(t,e,n){const{context:i,x:s,y:r,distance:o,direction:a,elevation:l}=n;return"geodesic"===i.mode?ht(e,t,n):null!=s||null!=r?vt(n):function(t){let e;for(const n of t)n&&(e=e?.intersect(n)??n);return e}([ct(t,o,i),ut(t,e,a,i),dt(l,i)])}function vt({x:t,y:e,elevation:n,context:i}){St.x=t?.value??0,St.y=e?.value??0,St.spatialReference=i.spatialReference;const s=yt(St,i,xt);return new D(null!=t&&null!=s?s[0]:void 0,null!=e&&null!=s?s[1]:void 0,ft(n,i))}function yt(t,e,n=X()){const{view:i,elevationInfo:s,measurementSR:r,origin:o,mode:a}=e;if(Y(t,i,s,n),N(n,t.spatialReference,n,r))return"geodesic"!==a&&q(n,n,o),n}function ft(t,e){return function(t,{view:e,origin:n,elevationInfo:i,hasZ:s,measurementSR:r}){if(null==t||!s)return;const o=F(r);if(null==o)return;const[a,l]=n,p=z(t,o),c="3d"===e?.type?_(e,a,l,p,r,i):p;return null!=c?L(c,o):void 0}(t,e)?.value??void 0}const _t=X(),xt=X(),bt=X(),St=Q(0,0,0,K.WGS84);class wt{constructor({consumesClicks:t,grabbableForEvent:n}){this.events=new e,this.interactive=!0,this.selectable=!1,this.cursor=null,this.grabbable=!0,this.consumesClicks=t,this.grabbableForEvent=n}destroy(){}intersectionDistance(t,e){return 0}attach(){}detach(){}onElevationChange(){}onViewChange(){}}const Tt=Symbol(),Pt=Symbol();let Ct=class extends n{constructor(t){super(t),this._createOperationCompleted=!1,this._hideDefaultCursor=!1,this._pointerDownStates=new l,this._stagedScreenPoint=null,this._stagedPointerType=null,this._updatingHandles=new v,this._stagedPointerId=null,this.constraintsEnabled=!1,this.constraints=void 0,this._getPointConstraint=o(mt),this._getPolylineOrPolygonConstraint=o(gt),this.constraintZ=null,this.defaultZ=null,this.isDraped=!0,this.labelOptions=new it,this.cursor=null,this.loading=!1,this.snapToSceneEnabled=null,this.firstVertex=null,this.lastVertex=null,this.secondToLastVertex=null,null==t.elevationInfo&&(this.elevationInfo=x(!!t.hasZ))}initialize(){const{geometryType:t,view:e}=this,n=e.spatialReference,i="viewingMode"in e.state?e.state.viewingMode:2,s="segment"===t||"multipoint"===t?"polyline":t;this.coordinateHelper=T(this.hasZ,this.hasM,n),this._editGeometryOperations=new P(new C(s,this.coordinateHelper),i),this._snappingOperation=new ot({view:e}),this.addHandles([p(()=>({stagedPoint:this._snappingOperation.stagedPoint,constraint:this._constraint}),({stagedPoint:t,constraint:e},n)=>{const{snappingOptions:i}=this;if(i&&(i.forceDisabled=null!=e&&k(e)),null!=n&&t===n.stagedPoint&&e!==n.constraint)return this._onKeyboardBasedChange();this._processCursor(t??this._screenToMap(this._stagedScreenPoint))},{equals:(t,e)=>t.stagedPoint===e.stagedPoint&&r(t.constraint,e.constraint)}),p(()=>this.view.viewpoint,(t,e)=>{t&&e&&g(t,e)&&this._onKeyboardBasedChange()})]),this._activePart=new V(n,i),this._editGeometryOperations.data.parts.push(this._activePart);const o=this.segmentLabels;null!=o&&(o.context={view:e,editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,labelOptions:this.labelOptions,automaticLengthMeasurementUtils:this.automaticLengthMeasurementUtils},this.addHandles(p(()=>this.labelOptions.enabled,t=>{o.visible=t},c))),this.addHandles(this._editGeometryOperations.on(["vertex-add","vertex-update","vertex-remove"],t=>{const e=t.vertices.map(t=>({componentIndex:0,vertexIndex:t.index,coordinates:this.coordinateHelper.vectorToArray(t.pos)})),n=e.map(t=>t.coordinates),i=this.coordinateHelper.vectorToDehydratedPoint(this._activePart.getFirstVertex()?.pos)??null;y(i,this.firstVertex)||(this.firstVertex=i);const s=this.coordinateHelper.vectorToDehydratedPoint(this._activePart.getLastVertex()?.pos)??null;y(s,this.lastVertex)||(this.lastVertex=s);const r=this.coordinateHelper.vectorToDehydratedPoint(this._activePart.segments.at(-1)?.leftVertex?.pos)??null;switch(y(r,this.secondToLastVertex)||(this.secondToLastVertex=r),this._processCursor(this.cursorVertex),t.type){case"vertex-add":this.emit(t.type,{...t,added:n,vertices:e});break;case"vertex-update":this.emit(t.type,{...t,updated:n,vertices:e});break;case"vertex-remove":this.emit(t.type,{...t,removed:n,vertices:e})}}));const l=this._manipulator=new wt({consumesClicks:!1,grabbableForEvent:t=>"click"!==this.drawingMode||"touch"===t.pointerType&&this._snappingEnabled&&1===this._pointerDownStates.size});this.manipulators.add(l),l.grabbable="point"!==t&&"multipoint"!==t,this.addHandles([l.events.on("immediate-click",t=>this._onImmediateClick(t)),l.events.on("immediate-double-click",t=>this._onImmediateDoubleClick(t)),p(()=>this.drawingMode,()=>{this.removeHandles(Tt),this.addHandles(this._createManipulatorDragPipeline(l),Tt)},c),p(()=>({effectiveCursor:this.effectiveCursor}),({effectiveCursor:t})=>{l.cursor=t},c)]),R(this,()=>{const t=this.view.inputManager.latestPointerType??"mouse",e=this._getSnappingContext(t);if(null!=this.snappingManager){const t=this._snappingOperation.snapAgainNearPreviousMapPoint(this.snappingManager,e);this._updatingHandles.addPromise(a(t))}})}destroy(){s(this.segmentLabels),s(this._snappingOperation),this._editGeometryOperations=s(this._editGeometryOperations),this._updatingHandles.destroy()}get _isDragging(){const{_stagedPointerId:t,_manipulator:e}=this;return null!=t&&this._pointerDownStates.has(t)||e.grabbing||!e.interactive}get _snappingEnabled(){return null!=this.snappingManager&&this.snappingManager.options.effectiveEnabled}get _requiresScenePoint(){const t=this._updateAndGetEffectiveDrawSurface();return"3d"===this.view.type&&this.drawSurface!==t}get canRedo(){return this._editGeometryOperations.canRedo}get canUndo(){return this._editGeometryOperations.canUndo}get committedVertices(){return this._activePart.vertices.map(t=>this.coordinateHelper.vectorToArray(t.pos))}get _constraint(){const{constraints:t,constraintsEnabled:e}=this;if(t&&e)switch(this.geometryType){case"point":case"multipoint":return this._getPointConstraint(t);case"polygon":case"polyline":return this._getPolylineOrPolygonConstraint(this.lastVertex,this.secondToLastVertex,t)}}set drawingMode(t){this._set("drawingMode",t??w)}get effectiveCursor(){return this.loading?"progress":this._hideDefaultCursor?null:this.cursor||"crosshair"}get interactive(){return this._manipulator.interactive}set interactive(t){this._manipulator.interactive=t}get isCompleted(){return this._createOperationCompleted}get numCommittedVertices(){return this._activePart.vertices.length}get snappingOptions(){return null!=this.snappingManager?this.snappingManager.options:null}get cursorVertex(){return this._get("cursorVertex")}get visualizationCursorVertex(){return"mouse"===this._stagedPointerType?this.cursorVertex:null}get committableVertex(){const{cursorVertex:t,lastVertex:e,firstVertex:n,geometryType:i}=this;return"polygon"===i&&f(t,n)||f(t,e)?null:t}get updating(){return this._updatingHandles.updating}get geometryIncludingUncommittedVertices(){const{committedVertices:t,committableVertex:e,coordinateHelper:n}=this,i=t.slice();return null!=e&&i.push(n.pointToArray(e)),i}cancel(){this.complete({aborted:!0})}commitStagedVertex(){this._snappingOperation.abort();const{committableVertex:t}=this;null!=t&&this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(t))}complete(t){const e=t?.aborted||!1;this._snappingOperation.abort(),this.snappingManager?.doneSnapping();const{geometryType:n,numCommittedVertices:i}=this,s="multipoint"===n&&0===i||"polyline"===n&&i<2||"polygon"===n&&i<3;"segment"!==n&&"point"!==n||this.commitStagedVertex(),this._createOperationCompleted=!s,(this.isCompleted||e)&&(this._stagedScreenPoint=null,this._stagedPointerId=null,this._stagedPointerType=null,this._processCursor(null),this.emit("complete",{vertices:this.committedVertices.map((t,e)=>({componentIndex:0,vertexIndex:e,coordinates:t})),aborted:e,type:"complete"}))}onInputEvent(t){switch(t.type){case"pointer-down":this._pointerDownStates.add(t.pointerId);break;case"pointer-up":this._pointerDownStates.delete(t.pointerId)}switch(t.type){case"pointer-move":return this._onPointerMove(t);case"hold":return this._onHold(t)}}redo(){this._editGeometryOperations.redo()}undo(){null!=this.snappingManager&&this.snappingManager.doneSnapping(),this._editGeometryOperations.undo()}_processCursor(t){const e=i(this.cursorVertex),n=i(t),s=n&&(this._updateAndGetEffectiveDrawSurface()?.constrainZ(n)??n),r=this._snapToClosingVertex(s),o=this._applyConstraints(r);f(e,o)||(this._set("cursorVertex",o),this.segmentLabels?.set("stagedVertex",null!=o?this.coordinateHelper.pointToVector(o):null),null==o||"mouse"!==this._stagedPointerType?this.emit("cursor-remove"):this.emit("cursor-update",{updated:null,vertices:[{componentIndex:0,vertexIndex:this._activePart.vertices.length,coordinates:this.coordinateHelper.pointToArray(o)}],operation:"apply",type:"vertex-update"}))}_snapToClosingVertex(t){if(null==t||this._isDragging||"polygon"!==this.geometryType||this.numCommittedVertices<=2)return t;const e=this._mapToScreen(t);if(!e)return t;const n=this._activePart;return this._vertexWithinPointerDistance(n.vertices[0].pos,e)?this.firstVertex:this._vertexWithinPointerDistance(n.vertices.at(-1).pos,e)?this.lastVertex:t}_createManipulatorDragPipeline(t){switch(this.drawingMode){case"click":return this._createManipulatorDragPipelineClick(t);case"freehand":return this._createManipulatorDragPipelineFreehand(t);case"hybrid":return this._createManipulatorDragPipelineHybrid(t)}}_createManipulatorDragPipelineClick(t){return M(t,(t,e,n,i)=>{const s="touch"===i&&this._snappingEnabled;if(this.isCompleted||!s)return;const{snappingStep:r,cancelSnapping:o}=rt({predicate:()=>s,snappingManager:this.snappingManager,snappingContext:new st({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,feature:this.graphic,pointer:i,visualizer:this.snappingVisualizer,drawConstraints:this.constraints}),updatingHandles:this._updatingHandles,useZ:!this._requiresScenePoint});n=n.next(t=>(s&&null!=this.snappingManager&&this.snappingManager.doneSnapping(),t)).next(o),e.next(this._screenToMapDragEventStep()).next(t=>("start"===t.action&&(this._processCursor(t.mapStart),("segment"===this.geometryType||s&&!this.numCommittedVertices)&&this.commitStagedVertex()),t)).next(O(this.view,this.elevationInfo)).next(...r).next(t=>(s&&(this._processCursor(t.mapEnd),"end"===t.action&&this.commitStagedVertex()),t)).next(t=>("end"===t.action&&("mouse"!==this._stagedPointerType&&this._snappingOperation.abort(),"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()),t))})}_createManipulatorDragPipelineFreehand(t){return M(t,(t,e)=>{this.isCompleted||e.next(this._screenToMapDragEventStep()).next(t=>("start"===t.action&&(this._snappingOperation.abort(),null==this.committableVertex&&this._processCursor(t.mapStart),"segment"===this.geometryType&&this.commitStagedVertex()),t)).next(t=>{switch(t.action){case"start":case"update":this._processCursor(t.mapEnd),"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":this.complete()}return t})})}_createManipulatorDragPipelineHybrid(t){return M(t,(t,e)=>{this.isCompleted||e.next(this._screenToMapDragEventStep()).next(t=>("start"===t.action&&(this._snappingOperation.abort(),this.addHandles(this._editGeometryOperations.createUndoGroup(),Pt),this._processCursor(t.mapStart),this.commitStagedVertex()),t)).next(t=>{switch(t.action){case"start":case"update":this._processCursor(t.mapEnd),"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":"mouse"!==this._stagedPointerType&&this._snappingOperation.abort(),this.removeHandles(Pt),"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return t})})}get _drawAtFixedElevation(){const{constraintsEnabled:t,constraintZ:e,geometryType:n,numCommittedVertices:i}=this;return t?null!=e||"segment"===n&&i>0:("segment"===n||"polygon"===n)&&i>0}_updateAndGetEffectiveDrawSurface(){const{constraintsEnabled:t,coordinateHelper:e,drawSurface:n,elevationDrawSurface:i,snapToSceneEnabled:s}=this;if(null==i)return n;if(!this.hasZ)return i.defaultZ=null,i;const r=this.elevationInfo?.mode;let o=this.defaultZ,a=t||"absolute-height"===r;return null!=s&&(a=s),"on-the-ground"===r&&(a=!1),this._drawAtFixedElevation&&(o=(t?this.constraintZ:null)??e.getZ(this._activePart.vertices[0].pos),a=!1),a?n:(i.defaultZ=o,i)}_mapToScreen(t){return this._updateAndGetEffectiveDrawSurface()?.mapToScreen(t)}_onHold(t){this._snappingOperation.abort(),"click"===this.drawingMode&&"touch"===t.pointerType&&this._snappingEnabled&&this._processCursor(t.mapPoint),t.stopPropagation()}_onImmediateClick(t){if(!("mouse"===t.pointerType&&2===t.button||this._manipulator.dragging))try{const{drawingMode:e,geometryType:n}=this;this._stagedPointerType=t.pointerType,this._stagedScreenPoint=t.screenPoint;const i=this._screenToMap(t.screenPoint);if(null==i)return;if(null==i||"freehand"===e&&"point"!==n&&"multipoint"!==n)return;if(this._snappingEnabled&&null!=this.cursorVertex||this._processCursor(i),null==this.committableVertex)return void this.complete();this.commitStagedVertex(),"mouse"!==t.pointerType&&this._processCursor(null),("freehand"===e&&"multipoint"!==this.geometryType||"point"===n||"segment"===n&&2===this.numCommittedVertices||"segment"===n&&"hybrid"===e&&1===this.numCommittedVertices)&&this.complete()}finally{t.stopPropagation()}}_onImmediateDoubleClick(t){this._manipulator.dragging||"point"===this.geometryType||(this.complete(),t.stopPropagation())}_onPointerMove(t){const e=u(t.x,t.y);this._stagedScreenPoint=e,this._stagedPointerType=t.pointerType,this._stagedPointerId=t.pointerId,this._isDragging?this._snappingOperation.abort():(t.stopPropagation(),this._processCursorMovementRelativeToSurface(e,t.pointerType))}_onKeyboardBasedChange(){"mouse"===this._stagedPointerType&&this._stagedScreenPoint&&null!=this._stagedPointerId&&!this._isDragging?this._processCursorMovementRelativeToSurface(this._stagedScreenPoint,this._stagedPointerType):this._snappingOperation.abort()}_processCursorMovementRelativeToSurface(t,e){const n=this._snappingOperation,i=this._screenToMap(t),s=this._requiresScenePoint?this.drawSurface?.screenToMap(t):null;if(null==i)return this._hideDefaultCursor=!0,this._processCursor(null),void n.abort();this._hideDefaultCursor=!1;const r=this.snappingManager;if(null==r)return this._processCursor(i),void n.abort();const o=this._getSnappingContext(e);this._updatingHandles.addPromise(a(n.snap({point:i,scenePoint:s},r,o)))}_applyConstraints(t){const{_constraint:e,constraints:n}=this;if(!t||!n||!e)return t;const{context:i}=n,s=yt(t,i),r=s?e.closestTo(s):void 0;if(!r)return t;const o=function(t,e,n){const{view:i,measurementSR:s,spatialReference:r,origin:o,mode:a}=n;if("geodesic"===a?W(bt,t):B(bt,t,o),N(bt,s,bt,r))return $(bt,i,e,n,void 0)}(r,t,i),a="2d"===this.view.type||"absolute-height"!==i.elevationInfo.mode;return null!=o&&a&&null!=this.constraintZ&&this.hasZ&&(o.z=this.constraintZ),o}_screenToMap(t){return t?this._updateAndGetEffectiveDrawSurface()?.screenToMap(t):null}_screenToMapDragEventStep(){let t=null;return e=>{if("start"===e.action&&(t=this._screenToMap(e.screenStart)),null==t)return null;const n=this._screenToMap(e.screenEnd);return null!=n?{...e,mapStart:t,mapEnd:n}:null}}_vertexWithinPointerDistance(t,e){const n=this._mapToScreen(this.coordinateHelper.vectorToDehydratedPoint(t));return null!=n&&function(t,e){const n=t.x-e.x,i=t.y-e.y;return n*n+i*i<=25}(n,e)}_getSnappingContext(t){const e=this._drawAtFixedElevation?this.elevationDrawSurface?.defaultZ:null;return new st({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:t,feature:this.graphic,visualizer:this.snappingVisualizer,selfSnappingZ:null!=e?{value:e,elevationInfo:this.elevationInfo}:null,drawConstraints:this.constraints})}};t([h()],Ct.prototype,"_hideDefaultCursor",void 0),t([h()],Ct.prototype,"_stagedPointerId",void 0),t([h()],Ct.prototype,"_isDragging",null),t([h()],Ct.prototype,"_snappingOperation",void 0),t([h()],Ct.prototype,"_snappingEnabled",null),t([h({constructOnly:!0})],Ct.prototype,"graphic",void 0),t([h()],Ct.prototype,"constraintsEnabled",void 0),t([h()],Ct.prototype,"constraints",void 0),t([h()],Ct.prototype,"_constraint",null),t([h()],Ct.prototype,"constraintZ",void 0),t([h()],Ct.prototype,"defaultZ",void 0),t([h()],Ct.prototype,"isDraped",void 0),t([h({constructOnly:!0})],Ct.prototype,"automaticLengthMeasurementUtils",void 0),t([h({value:w})],Ct.prototype,"drawingMode",null),t([h({constructOnly:!0})],Ct.prototype,"elevationDrawSurface",void 0),t([h({constructOnly:!0})],Ct.prototype,"elevationInfo",void 0),t([h({constructOnly:!0,type:it})],Ct.prototype,"labelOptions",void 0),t([h({constructOnly:!0})],Ct.prototype,"geometryType",void 0),t([h({constructOnly:!0})],Ct.prototype,"hasM",void 0),t([h({constructOnly:!0})],Ct.prototype,"hasZ",void 0),t([h()],Ct.prototype,"cursor",void 0),t([h()],Ct.prototype,"effectiveCursor",null),t([h()],Ct.prototype,"loading",void 0),t([h({constructOnly:!0})],Ct.prototype,"manipulators",void 0),t([h({constructOnly:!0})],Ct.prototype,"drawSurface",void 0),t([h({constructOnly:!0})],Ct.prototype,"segmentLabels",void 0),t([h({constructOnly:!0})],Ct.prototype,"snappingManager",void 0),t([h({constructOnly:!0})],Ct.prototype,"snappingVisualizer",void 0),t([h()],Ct.prototype,"snapToSceneEnabled",void 0),t([h({readOnly:!0})],Ct.prototype,"cursorVertex",null),t([h({readOnly:!0})],Ct.prototype,"visualizationCursorVertex",null),t([h()],Ct.prototype,"committableVertex",null),t([h()],Ct.prototype,"firstVertex",void 0),t([h()],Ct.prototype,"lastVertex",void 0),t([h()],Ct.prototype,"secondToLastVertex",void 0),t([h()],Ct.prototype,"updating",null),t([h({constructOnly:!0})],Ct.prototype,"view",void 0),Ct=t([m("esri.views.draw.DrawOperation")],Ct);class Vt{constructor(t,e,n,i=null){this._elevationInfo=t,this.defaultZ=e,this._view=n,this._excludeGraphics=i}screenToMap(t){const{defaultZ:e,_view:n}=this,i=n.sceneIntersectionHelper.intersectElevationFromScreen(d(t.x,t.y),this._elevationInfo,e??0,this._excludeGraphics);return null==e&&null!=i&&(i.z=void 0),i}mapToScreen(t){const e=Q(t.x,t.y,b(this._view,t,this._elevationInfo),t.spatialReference);return this._view.toScreen(e)}constrainZ(t){const{defaultZ:e}=this;return null!=e&&t.z!==e&&((t=lt(t)).z=e),t}}class Mt{constructor(t,e,n=[]){this.view=t,this.elevationInfo=e,this.exclude=n}screenToMap(t){const e=this.view.toMap(t,{exclude:this.exclude,excludeLabels:!0});return null!=e&&(e.z=S(e,this.view,this.elevationInfo)),e}mapToScreen(t){let e=t;return null!=this.elevationInfo&&(e=Q(t.x,t.y,b(this.view,t,this.elevationInfo),t.spatialReference)),this.view.toScreen(e)}constrainZ(t){return t}}class Ot{constructor(t,e=!1,n=0){this.view=t,this.hasZ=e,this.defaultZ=n,this.mapToScreen=e=>t.toScreen(e),this.screenToMap=e?e=>{const i=t.toMap(e);return i.z=n,i}:e=>t.toMap(e)}constrainZ(t){const{defaultZ:e}=this;return this.hasZ&&t.z!==e&&((t=lt(t)).z=e),t}}class Dt{screenToMap(t){const{x:e,y:n}=t;return new at({x:e,y:n,spatialReference:Dt.spatialReference})}mapToScreen(t){return u(t.x,t.y)}constrainZ(t){return t}static{this.spatialReference=new K}}export{Ct as D,Vt as E,Ot as M,Mt as S,Dt as a,pt as g};
