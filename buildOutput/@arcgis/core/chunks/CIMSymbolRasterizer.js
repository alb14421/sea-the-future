/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{isPolyline as t,isPolygon as i}from"../geometry/support/jsonUtils.js";import{C as e}from"./CIMResourceManager.js";import{C as s,T as r,a as o}from"./CIMSymbolHelper.js";import{OverrideHelper as m}from"./OverrideHelper.js";import{s as p,t as l}from"./rasterizingUtils.js";import{m as n}from"./utils6.js";import"../geometry/Extent.js";import"./tslib.es6.js";import"./string.js";import"./object.js";import"../core/lang.js";import"../core/accessorSupport/decorators/property.js";import"./Logger.js";import"../config.js";import"./ensureType.js";import"./MapUtils.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"../core/Error.js";import"../core/accessorSupport/decorators/subclass.js";import"./Lifecycle.js";import"./tracking.js";import"./Warning.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./maybe.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/promiseUtils.js";import"./events.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./jsonUtils.js";import"./persistableUrlUtils.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./extentUtils.js";import"./boundsUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"../geometry/Polyline.js";import"./fontUtils.js";import"./imageUtils.js";import"./BidiEngine.js";import"./screenUtils.js";import"../symbols/Font.js";import"./labelPoint.js";import"./OptimizedGeometry.js";import"./memoryEstimations.js";import"./GeometryUtils.js";import"./defaultCIMValues.js";import"./definitions.js";import"./shapingUtils.js";import"./mat2d.js";import"./mat2df32.js";import"./vec2.js";import"./common.js";import"./vec2f32.js";import"./Rect.js";import"./BoundingBox.js";import"./defaults.js";import"../symbols/SimpleFillSymbol.js";import"../Color.js";import"./colorUtils.js";import"./enumeration.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/Symbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/MarkerSymbol.js";import"../symbols/TextSymbol.js";import"./defaultsJSON.js";import"./colorUtils2.js";import"./vec4.js";import"./vec4f64.js";import"../layers/support/FieldsIndex.js";import"./UnknownTimeZone.js";import"./datetime.js";import"../layers/support/fieldUtils.js";import"../core/sql.js";import"./guards.js";import"./constants.js";import"./timeZoneUtils.js";import"./ArcadeExpression.js";import"./TimeOnly.js";import"./enum.js";import"./locale.js";import"./callExpressionWithFeature.js";import"./quantizationUtils.js";import"./floatRGBA.js";const a=96/72;class h{constructor(t){this._spatialReference=t,this._imageDataCanvas=null,this._cimResourceManager=new e}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(e,r,o,l,a,h,c,y,g,d){if(!e)return null;const{data:u}=e;if(!u||"CIMSymbolReference"!==u.type||!u.symbol)return null;const{symbol:b}=u;h||(h=n(b));const w=await m.resolveSymbolOverrides(u,r,this._spatialReference,a,h,c,y),f=this._cimResourceManager,x=[];s.fetchResources(w,f,x),s.fetchFonts(w,f,x),x.length>0&&await Promise.all(x);const{width:S,height:U}=o;let M=j(h,S,U,l,d);const v=s.getEnvelope(w,M,f);if(!v)return null;v.x===1/0&&(v.x=S+2),v.y===1/0&&(v.y=-U/2),v.width===-1/0&&(v.width=S),v.height===-1/0&&(v.height=U);let C=1,R=0,P=0;switch(b.type){case"CIMPointSymbol":case"CIMTextSymbol":{let t=1;v.width>S&&(t=S/v.width);let i=1;v.height>U&&(i=U/v.height),"preview"===l&&(v.width<S&&(t=S/v.width),v.height<U&&(i=U/v.height)),C=Math.min(t,i),R=v.x+v.width/2,P=v.y+v.height/2}break;case"CIMLineSymbol":if(d){P=v.y+v.height/2,R=v.x+v.width/2;const t=v.width-S,i=v.height-U;M={paths:p(M.paths,{xmin:-1*v.width/2+t,xmax:v.width/2-t,ymin:-1*v.height/2+i,ymax:v.height/2-i,width:v.width-2*t,height:v.height-2*i})}}else{(g||v.height>U)&&(C=U/v.height),P=v.y+v.height/2;const e=v.x*C+S/2,s=(v.x+v.width)*C+S/2,r=t(M)?M.paths:i(M)?M.rings:null;if(null===r)throw new Error("Bad geometry, can't rasterise symbol!");r[0][0][0]-=e/C,r[0][2][0]-=(s-S)/C}break;case"CIMPolygonSymbol":if(d){P=v.y+v.height/2,R=v.x+v.width/2;const t=v.width-S,i=v.height-U;M={paths:p(M.rings,{xmin:-1*v.width/2+t,xmax:v.width/2-t,ymin:-1*v.height/2+i,ymax:v.height/2-i,width:v.width-2*t,height:v.height-2*i})}}else{R=v.x+v.width/2,P=v.y+v.height/2;const t=v.x*C+S/2,i=(v.x+v.width)*C+S/2,e=v.y*C+U/2,s=(v.y+v.height)*C+U/2,{rings:r}=M;t<0&&(r[0][0][0]-=t,r[0][3][0]-=t,r[0][4][0]-=t),e<0&&(r[0][0][1]+=e,r[0][1][1]+=e,r[0][4][1]+=e),i>S&&(r[0][1][0]-=i-S,r[0][2][0]-=i-S),s>U&&(r[0][2][1]+=s-U,r[0][3][1]+=s-U)}}const I={type:"cim",data:{type:"CIMSymbolReference",symbol:w}};return this.rasterize(I,S,U,R,P,C,h,1,M)}rasterize(t,i,e,s,m,p,l,h=0,c=null,y=window.devicePixelRatio||1){const{data:g}=t;if(!g||"CIMSymbolReference"!==g.type||!g.symbol)return null;const{symbol:d}=g,u=this._canvas,b=y*a;u.width=i*b,u.height=e*b,l||(l=n(d)),c||(c=j(l,i,e,"legend")),u.width+=2*h,u.height+=2*h;const w=u.getContext("2d",{willReadFrequently:!0}),f=r.createIdentity();return f.translate(-s,-m),f.scale(p*b,-p*b),f.translate(i*b/2+h,e*b/2+h),w.clearRect(0,0,u.width,u.height),new o(w,this._cimResourceManager,f,!0).drawSymbol(d,c),w.getImageData(0,0,u.width,u.height)}}function j(t,i,e,s,r){const o=-i/2+1,m=i/2-1,n=e/2-1,a=-e/2+1;if(r&&("esriGeometryPolygon"===t||"esriGeometryPolyline"===t)){const s=function(t,i,e,s){return"esriGeometryPolygon"===i?{rings:l(p(t.rings,{xmin:0,ymin:0,width:e,height:s}),-1*e/2,-1*s/2)}:"esriGeometryPolyline"===i?{paths:l(p(t.paths,{xmin:0,ymin:0,width:e,height:s}),-1*e/2,-1*s/2)}:null}(r,t,i,e);if(s)return s}switch(t){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[o,0],[0,0],[m,0]]]};default:return"legend"===s?{rings:[[[o,n],[m,0],[m,a],[o,a],[o,n]]]}:{rings:[[[o,n],[m,n],[m,a],[o,a],[o,n]]]}}}export{h as CIMSymbolRasterizer};
