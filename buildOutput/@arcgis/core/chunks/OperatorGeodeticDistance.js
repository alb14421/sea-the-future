/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{a as r,b as e}from"./tslib.es6.js";import{a as t,v as o}from"./Point2D.js";import{G as s,m as i}from"./GeodeticDistanceCalculator-Ce-woMPw.js";import"./ProjectionTransformation.js";import"./Envelope2D.js";import"./Envelope.js";import"./Transformation2D.js";import"./SimpleGeometryCursor.js";import"./OperatorDefinitions.js";import"./Distance2DCalculator-CXhBP-8I.js";import"./OperatorShapePreservingDensify.js";import"./OperatorGeodeticDensifyByLength.js";class a{getOperatorType(){return 10316}supportsCurves(){return!0}accelerateGeometry(r,e,t){return!1}canAccelerateGeometry(r){return!1}execute(r,e,t,o,s){return this.executeEx(r,e,t,o,s,null,null,Number.NaN)}executeEx(a,n,m,p,u,c,l,j){const y={stack:[],error:void 0,hasError:!1};try{if(0===m.getCoordinateSystemType()&&t(""),o(a),o(n),a.isEmpty()||n.isEmpty())return Number.NaN;Number.isNaN(j)&&(j=Number.MAX_VALUE);const e=r(y,new s(m,p,u,j,1),!1),f=i(),N=i(),D=e.calculate(a,n,f,N);return c&&c.outPoint.assign(f.outPoint),l&&l.outPoint.assign(N.outPoint),D}catch(r){y.error=r,y.hasError=!0}finally{e(y)}}}export{a as OperatorGeodeticDistance,i as makeOutput};
