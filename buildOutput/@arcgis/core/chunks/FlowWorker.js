/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import"./Logger.js";import"../core/lang.js";import"../core/Error.js";import{subclass as r}from"../core/accessorSupport/decorators/subclass.js";import{c as s,g as e}from"./dataUtils.js";import{c as o}from"./loadUtils2.js";import"../config.js";import"./object.js";import"./string.js";import"./Lifecycle.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./tracking.js";import"./ensureType.js";import"./MapUtils.js";import"./Warning.js";import"./mathUtils.js";import"../core/promiseUtils.js";import"./events.js";import"./maybe.js";import"../geometry/Extent.js";import"../core/accessorSupport/decorators/property.js";import"./get.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./jsonUtils.js";import"./persistableUrlUtils.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./aaBoundingRect.js";import"./FeatureTileDescriptor.js";let i=class{constructor(){this._tileData=new Map}async generateStreamlines(t){const{flowData:r,simulationSettings:e,size:o}=t,i=p(s(e,r),e,o);return{result:{streamlines:i},transferList:i?.map(t=>t.buffer)}}async generateTiledStreamlines(t){const{simulationSettings:r,size:s,reset:e,flowDataTiles:i,extent:a,pixelSize:m}=t;this._updateTileData(i,e);const l=p(o(r,this._tileData,s,a,m),r,s);return{result:{streamlines:l},transferList:l?.map(t=>t.buffer)??[]}}_updateTileData(t,r){r&&this._tileData.forEach((r,s)=>{null==t.get(s)&&this._tileData.delete(s)}),t.forEach((t,r)=>{"delete"===t?this._tileData.delete(r):"on-worker"!==t&&this._tileData.set(r,t)})}};i=t([r("esri.views.3d.support.flow.FlowWorker")],i);const a=i;function p(t,r,s){if(null==t)return;const o=e(r,t,s[0],s[1]),i=[];for(const t of o){const r=new Float32Array(3*t.length);for(let s=0;s<t.length;s++)r[3*s]=t[s].x,r[3*s+1]=t[s].y,r[3*s+2]=t[s].t;i.push(r)}return i}export{a as default};
