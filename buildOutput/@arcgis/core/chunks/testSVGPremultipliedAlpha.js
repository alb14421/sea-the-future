/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{a as e,P as t}from"./enums.js";import{F as r}from"./FramebufferObject.js";import{a as s,T as i}from"./Texture.js";import{V as n}from"./VertexArrayObject.js";import{P as o,a}from"./TiledDisplayObject.js";import{V as u}from"./VertexBuffer.js";import{f as E}from"./maybe.js";class _{constructor(e,t,r,s,i,n,o,a,u){this.createQuery=e,this.deleteQuery=t,this.resultAvailable=r,this.getResult=s,this.disjoint=i,this.beginTimeElapsed=n,this.endTimeElapsed=o,this.createTimestamp=a,this.timestampBits=u}}let T=!1;function m(e,t){if(t.disjointTimerQuery)return null;let r=e.getExtension("EXT_disjoint_timer_query_webgl2");return r?new _(()=>e.createQuery(),t=>{e.deleteQuery(t),T=!1},t=>e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE),t=>e.getQueryParameter(t,e.QUERY_RESULT),()=>e.getParameter(r.GPU_DISJOINT_EXT),t=>{T||(T=!0,e.beginQuery(r.TIME_ELAPSED_EXT,t))},()=>{e.endQuery(r.TIME_ELAPSED_EXT),T=!1},e=>r.queryCounterEXT(e,r.TIMESTAMP_EXT),()=>e.getQuery(r.TIMESTAMP_EXT,r.QUERY_COUNTER_BITS_EXT)):(r=e.getExtension("EXT_disjoint_timer_query"),r?new _(()=>r.createQueryEXT(),e=>{r.deleteQueryEXT(e),T=!1},e=>r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT),e=>r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT),()=>e.getParameter(r.GPU_DISJOINT_EXT),e=>{T||(T=!0,r.beginQueryEXT(r.TIME_ELAPSED_EXT,e))},()=>{r.endQueryEXT(r.TIME_ELAPSED_EXT),T=!1},e=>r.queryCounterEXT(e,r.TIMESTAMP_EXT),()=>r.getQueryEXT(r.TIMESTAMP_EXT,r.QUERY_COUNTER_BITS_EXT)):null)}class l{constructor(){this._result=!1}dispose(){this._program=E(this._program)}get result(){return null!=this._program&&(this._result=this._test(this._program),this.dispose()),this._result}}class g extends l{constructor(e){super(),this._rctx=e,this._program=e.programCache.acquire("\n    precision highp float;\n\n    attribute vec2 position;\n    varying vec2 v_uv;\n\n    void main() {\n      v_uv = position;\n      gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ","\n    precision highp float;\n\n    varying vec2 v_uv;\n\n    uniform sampler2D u_texture;\n\n    void main() {\n      gl_FragColor = texture2D(u_texture, v_uv);\n    }\n    ",o)}dispose(){super.dispose()}_test(o){const E=this._rctx;if(!E.gl)return o.dispose(),!0;const _=new s(1);_.wrapMode=33071,_.samplingMode=9728;const T=new r(E,_),m=new u(E,a,new Uint16Array([0,0,1,0,0,1,1,1])),l=new n(E,m),g=new s;g.samplingMode=9729,g.wrapMode=33071;const d=new i(E,g,p);E.useProgram(o),E.bindTexture(d,0),o.setUniform1i("u_texture",0);const c=E.getBoundFramebufferObject(),{x:h,y,width:f,height:w}=E.getViewport();E.bindFramebuffer(T),E.setViewport(0,0,1,1),E.setClearColor(0,0,0,0),E.setBlendingEnabled(!1),E.clear(16384),E.bindVAO(l),E.drawArrays(e.TRIANGLE_STRIP,0,4);const X=new Uint8Array(4);return T.readPixels(0,0,1,1,6408,t.UNSIGNED_BYTE,X),l.dispose(),T.dispose(),d.dispose(),E.setViewport(h,y,f,w),E.bindFramebuffer(c),255!==X[0]}}const p=new Image;p.src="data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='5' height='5' version='1.1' viewBox='0 0 5 5' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='5' height='5' fill='%23f00' fill-opacity='.5'/%3E%3C/svg%3E%0A",p.width=5,p.height=5,p.decode();export{g as S,l as W,m as c,T as h};
