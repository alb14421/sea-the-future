/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{L as r}from"./LRUCache.js";import t from"../core/sql/WhereClause.js";import"./MemCache.js";import"../core/lang.js";import"./TimeOnly.js";import"./enum.js";import"./string.js";import"./object.js";import"./UnknownTimeZone.js";import"./datetime.js";import"./locale.js";import"./handleUtils.js";import"../geometry/Extent.js";import"./tslib.es6.js";import"../core/accessorSupport/decorators/property.js";import"./Logger.js";import"../config.js";import"./ensureType.js";import"./MapUtils.js";import"./get.js";import"./utils.js";import"./metadata.js";import"../core/Error.js";import"../core/accessorSupport/decorators/subclass.js";import"./Lifecycle.js";import"./tracking.js";import"./Warning.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./maybe.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/promiseUtils.js";import"./events.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./jsonUtils.js";import"./persistableUrlUtils.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./mathUtils.js";import"./guards.js";class s{constructor(t,s){this._cache=new r(t),this._invalidCache=new r(s)}get(r,s){const o=`${s?.uid}:${r}`,e=this._cache.get(o);if(e)return e;if(null!=this._invalidCache.get(o))return null;try{const e=t.create(r,{fieldsIndex:s});return this._cache.put(o,e),e}catch(r){return this._invalidCache.put(o,r),null}}getError(r,t){const s=`${t?.uid}:${r}`;return this._invalidCache.get(s)??null}}export{s as WhereClauseCache};
