/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{c as t}from"./asyncUtils.js";import e from"../core/Error.js";import{L as r}from"./Logger.js";import{c as s}from"./mathUtils.js";import{throwIfAborted as o,isAbortError as i}from"../core/promiseUtils.js";import{W as a}from"./Warning.js";import{p as n}from"./unitUtils.js";import{b as p,a as m}from"./featureConversionUtils.js";import{e as u}from"./executeQueryForSnapping.js";import{F as l}from"./FeatureStore.js";import{c,p as j}from"./projectionSupport.js";import{a as h}from"./QueryEngine.js";import{v as d,c as g}from"./geojson.js";import{m as y}from"./sourceUtils.js";import{getGetFeatureSpatialReference as f,getFeatureCount as _,getFeature as C}from"../layers/ogc/wfsUtils.js";import x from"../layers/support/FieldsIndex.js";import{a as R}from"./guards.js";import{a as w}from"./constants.js";import"./tslib.es6.js";import"../core/Accessor.js";import"../core/lang.js";import"../core/Handles.js";import"./maybe.js";import"../core/accessorSupport/decorators/subclass.js";import"./Lifecycle.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./tracking.js";import"./ensureType.js";import"./MapUtils.js";import"./object.js";import"./get.js";import"./ObjectPool.js";import"./ObservableBase.js";import"../core/accessorSupport/decorators/property.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"../config.js";import"./string.js";import"./events.js";import"./jsonMap.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./jsonUtils.js";import"./persistableUrlUtils.js";import"./aaBoundingBox.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./aaBoundingRect.js";import"./DoubleArray.js";import"../geometry/support/jsonUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./extentUtils.js";import"./boundsUtils.js";import"../geometry/Polyline.js";import"./OptimizedFeature.js";import"./memoryEstimations.js";import"./OptimizedGeometry.js";import"./OptimizedFeatureSet.js";import"./createFeatureId.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"./utils9.js";import"./utils10.js";import"./queryUtils.js";import"./projectionUtils.js";import"./SimpleObservable.js";import"./vec3f64.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"./projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./timeSupport.js";import"../core/Evented.js";import"./BoundsStore.js";import"./PooledRBush.js";import"./quickselect.js";import"./optimizedFeatureQueryEngineAdapter.js";import"./json.js";import"./WhereClauseCache.js";import"./LRUCache.js";import"./MemCache.js";import"../core/sql/WhereClause.js";import"./TimeOnly.js";import"./enum.js";import"./UnknownTimeZone.js";import"./datetime.js";import"./locale.js";import"./fieldType.js";import"./QueryEngineCapabilities.js";import"./quantizationUtils.js";import"../layers/support/fieldUtils.js";import"../core/sql.js";import"./utils14.js";import"./screenUtils.js";import"./timeUtils.js";import"./date.js";import"./heatmapUtils.js";import"./vec4.js";import"./common.js";import"./vec4f64.js";import"./utils7.js";import"./basemapUtils.js";import"../core/Collection.js";import"./shared.js";import"./utils5.js";import"./colorUtils.js";import"./mat4.js";import"./basemapDefinitions.js";import"./messages.js";import"./timeZoneUtils.js";import"./utils13.js";import"./generateRendererUtils.js";import"./enumeration.js";import"./SnappingCandidate.js";import"../rest/support/AutoIntervalBinParameters.js";import"../rest/support/BinParametersBase.js";import"../core/Clonable.js";import"../rest/support/AttributeBinsGrouping.js";import"../rest/support/NormalizationBinParametersMixin.js";import"../rest/support/DateBinParameters.js";import"../rest/support/DateBinTimeInterval.js";import"../rest/support/FixedBoundariesBinParameters.js";import"../rest/support/FixedIntervalBinParameters.js";import"./Scheduler.js";import"../core/reactiveUtils.js";import"./signal.js";import"./debugFlags.js";import"./date2.js";import"./typeUtils.js";import"./xmlUtils.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";const F="esri.layers.WFSLayer";class S{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(t,r={}){const{getFeatureUrl:s,getFeatureOutputFormat:i,fields:a,geometryType:n,featureType:p,maxRecordCount:m,maxTotalRecordCount:u,maxPageCount:j,objectIdField:d,customParameters:g}=t,{spatialReference:y,getFeatureSpatialReference:_}=f(s,p,t.spatialReference);try{await c(_,y)}catch{throw new e("unsupported-projection","Projection not supported",{inSpatialReference:_,outSpatialReference:y})}o(r),this._customParameters=g,this._featureType=p,this._fieldsIndex=x.fromLayerJSON({fields:a,dateFieldsTimeReference:a.some(t=>"esriFieldTypeDate"===t.type)?{timeZoneIANA:w}:null}),this._geometryType=n,this._getFeatureUrl=s,this._getFeatureOutputFormat=i,this._getFeatureSpatialReference=_,this._maxRecordCount=m,this._maxTotalRecordCount=u,this._maxPageCount=j,this._objectIdField=d,this._spatialReference=y;let C=await this._snapshotFeatures(r);if(C.errors.length>0&&(this._supportsPagination=!1,C=await this._snapshotFeatures(r),C.errors.length>0))throw C.errors[0];const R={type:"object-id",fieldName:d};return this._queryEngine=new h({fieldsIndex:this._fieldsIndex,geometryType:n,hasM:!1,hasZ:!1,featureIdInfo:R,spatialReference:y,timeInfo:null,featureStore:new l({geometryType:n,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(C.features),{warnings:T(C),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new e("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(t,e.signal)).filter(R)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),u(this._queryEngine,t,e.signal)}async queryAttributeBins(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(t,e.signal)}async refresh(e){return this._customParameters=e.customParameters,this._maxRecordCount=e.maxRecordCount,this._maxTotalRecordCount=e.maxTotalRecordCount,this._maxPageCount=e.maxPageCount,this._snapshotTask?.abort(),this._snapshotTask=t(t=>this._snapshotFeatures({signal:t})),this._snapshotTask.promise.then(t=>{this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(t.features);for(const e of T(t))r.getLogger(F).warn(new a("wfs-layer:refresh-warning",e.message,e.details));t.errors?.length&&r.getLogger(F).warn(new a("wfs-layer:refresh-error","Refresh completed with errors",{errors:t.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t?.signal,r=this._maxTotalRecordCount,a=this._maxPageCount,n=this._supportsPagination&&a>1?await _(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let p=[];const m=[];if(null==n)try{p=await this._singleQuery(e)}catch(t){i(t)||m.push(t)}else{const t=Math.min(n,r),o=function*(t,e,r){for(let s=0;s<e;s++)yield t._pageQuery(s,r)}(this,s(Math.ceil(t/this._maxRecordCount),1,a),e);await Promise.allSettled(Array.from({length:10}).map(()=>async function(t,e,r){let s=t.next();for(;!s.done;){try{const t=await s.value;e.push(...t)}catch(t){i(t)||r.push(t)}s=t.next()}}(o,p,m)))}return o(e),{features:p,totalRecordCount:n,maxTotalRecordCount:r,maxPageCount:a,errors:m}}async _singleQuery(t){const e=Number.isFinite(this._maxRecordCount)&&this._maxRecordCount>0?this._maxRecordCount:void 0,r=await C(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,count:e,signal:t});return this._processGeoJSON(r,{signal:t})}async _pageQuery(t,e){const r=t*this._maxRecordCount,s=await C(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:r,count:this._maxRecordCount,signal:e});return this._processGeoJSON(s,{startIndex:r,signal:e})}_processGeoJSON(t,e){d(t,this._getFeatureSpatialReference.wkid);const{startIndex:r,signal:s}=e;o(s);const i=g(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!n(this._spatialReference,this._getFeatureSpatialReference))for(const t of i)null!=t.geometry&&(t.geometry=p(j(m(t.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let a=r??1;for(const t of i){const e={};y(this._fieldsIndex,e,t.attributes,!0),t.attributes=e,null==e[this._objectIdField]&&(t.objectId=e[this._objectIdField]=a++)}return i}}function T(t){const e=[];return null!=t.totalRecordCount&&(t.features.length<t.totalRecordCount&&e.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${t.features.length} of ${t.totalRecordCount} in ${t.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:t.features.length,totalRecordCount:t.totalRecordCount}}),t.totalRecordCount>t.maxTotalRecordCount&&e.push({name:"wfs-layer:large-dataset",message:`The number of ${t.totalRecordCount} features exceeds the maximum allowed of ${t.maxTotalRecordCount}.`,details:{recordCount:t.features.length,totalRecordCount:t.totalRecordCount,maxTotalRecordCount:t.maxTotalRecordCount}})),e}export{S as default};
