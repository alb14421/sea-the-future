/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Accessor.js";import{i as r}from"../core/lang.js";import{isAborted as o,throwIfAborted as s}from"../core/promiseUtils.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"./Logger.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import{d as a}from"./handleUtils.js";import{r as p,a as m}from"./maybe.js";import{U as c}from"./UpdatingHandles.js";import{E as d}from"./EdgeWorkerHandle.js";import{c as l}from"./vec3f64.js";import{W as j}from"./WorkerHandle.js";import{f as u}from"./sphere.js";import{m as g,e as y}from"./normalizedPoint.js";import{E as h}from"./SnappingManager.js";import{V as f}from"./VertexSnappingCandidate.js";import"../core/Handles.js";import"./get.js";import"./utils.js";import"./Lifecycle.js";import"./metadata.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/Error.js";import"./object.js";import"../config.js";import"./string.js";import"./events.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"./ensureType.js";import"./MapUtils.js";import"./Warning.js";import"../core/reactiveUtils.js";import"./workerHelper.js";import"./InterleavedLayout.js";import"./BufferView.js";import"./vec2.js";import"./common.js";import"./vec3.js";import"./vec4.js";import"./vec2f64.js";import"./vec4f64.js";import"./types.js";import"./enums.js";import"./VertexElementDescriptor.js";import"./VertexAttributeLocations.js";import"./edgeProcessing.js";import"./deduplicate.js";import"./mathUtils.js";import"./Indices.js";import"./bufferLayouts.js";import"./Normals.js";import"./edgePreprocessing.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"./Queue.js";import"./SimpleObservable.js";import"../core/workers/RemoteClient.js";import"../kernel.js";import"../core/urlUtils.js";import"./jsonUtils.js";import"../request.js";import"./persistableUrlUtils.js";import"../intl.js";import"./date.js";import"./jsonMap.js";import"./locale.js";import"./constants.js";import"./datetime.js";import"./number.js";import"./substitute.js";import"./messages.js";import"./assets.js";import"./mat4.js";import"./ray.js";import"./mat3.js";import"./mat3f64.js";import"./vector.js";import"./mat4f64.js";import"./quatf64.js";import"./dehydratedPoint.js";import"./elevationInfoUtils.js";import"./unitUtils.js";import"./pe.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"./asyncUtils.js";import"../core/Evented.js";import"./projectionUtils.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/SpatialReference.js";import"../core/JSONSupport.js";import"./writer.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"./reader.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./extentUtils.js";import"./boundsUtils.js";import"./aaBoundingRect.js";import"../geometry/Polyline.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"./projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./Settings.js";import"../Color.js";import"./colorUtils.js";import"../views/interactive/snapping/SnappingOptions.js";import"../core/Collection.js";import"./shared.js";import"../views/interactive/snapping/FeatureSnappingLayerSource.js";import"./constraints.js";import"../core/sql.js";import"./timeUtils.js";import"../rest/support/Query.js";import"./enumeration.js";import"../geometry/support/jsonUtils.js";import"./typeUtils.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./FullTextSearch.js";import"../core/Clonable.js";import"./spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"../time/TimeExtent.js";import"./InputManager.js";import"./signal.js";import"./keybindings.js";import"./utils11.js";import"./Version2.js";import"./Version.js";import"../geometry/support/geodesicUtils.js";import"./plane.js";import"./mathUtils2.js";import"./geometry2dUtils.js";import"./RightAngleSnappingHint.js";import"./screenUtils.js";import"./geodesicLengthMeasurementUtils.js";import"./quantityUtils.js";import"./projectVectorToVector.js";import"./projectPointToVector.js";import"./spatialReferenceEllipsoidUtils.js";import"../geometry/operators/geodeticLengthOperator.js";import"./geodeticCurveType.js";import"./geodesicMeasurementUtils.js";import"./PointSnappingHint.js";let v=class extends t{constructor(e){super(e),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new w(this.schedule,{fetchAllEdgeLocations:(e,t)=>this._fetchAllEdgeLocations(e,t)})}async fetchCandidates(e,t){const r=e.coordinateHelper,{point:o}=e,s=S;this.renderCoordsHelper.toRenderCoords(o,r.spatialReference,s);const i=e.distance,n="number"==typeof i?i:i.distance,a=await this._workerHandle.invoke({bounds:u(s[0],s[1],s[2],n),returnEdge:e.returnEdge,returnVertex:"none"!==e.vertexMode},t);return a.candidates.sort((e,t)=>e.distance-t.distance),a.candidates.map(e=>this._convertCandidate(r,e))}async add(e,t){this._ids.add(e.id),await this._workerHandle.invokeMethod("add",e,t)}async remove(e,t){this._ids.delete(e.id),await this._workerHandle.invokeMethod("remove",e,t)}_convertCandidate(e,t){switch(t.type){case"edge":return new h({objectId:t.objectId,targetPoint:g(this._convertRenderCoordinate(e,t.target)),edgeStart:this._convertRenderCoordinate(e,t.start),edgeEnd:this._convertRenderCoordinate(e,t.end),isDraped:!1});case"vertex":return new f({objectId:t.objectId,targetPoint:g(this._convertRenderCoordinate(e,t.target)),isDraped:!1})}}_convertRenderCoordinate({spatialReference:e},t){const r=l();return this.renderCoordsHelper.fromRenderCoords(t,r,e),y(r)}async _fetchAllEdgeLocations(e,t){const r=[],o=[];for(const{id:s,uid:i}of e.components)this._ids.has(s)&&r.push((async()=>{const e=await this.fetchEdgeLocations(s,t.signal),r=e.locations.buffer;return o.push(r),{id:s,uid:i,objectIds:e.objectIds,locations:r,origin:e.origin,type:e.type}})());return{result:{components:(await Promise.all(r)).filter(({id:e})=>this._ids.has(e))},transferList:o}}};e([i({constructOnly:!0})],v.prototype,"renderCoordsHelper",void 0),e([i({constructOnly:!0})],v.prototype,"fetchEdgeLocations",void 0),e([i({constructOnly:!0})],v.prototype,"schedule",void 0),e([i({readOnly:!0})],v.prototype,"availability",void 0),v=e([n("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorkerHandle")],v);class w extends j{constructor(e,t){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:t})}}const S=l();let _=class extends t{get updating(){return this._updatingHandles.updating}constructor(e){super(e),this.availability=1,this._updatingHandles=new c,this._abortController=new AbortController}destroy(){this._tracker=p(this._tracker),this._abortController=m(this._abortController),this._updatingHandles.destroy()}initialize(){const{view:e}=this,t=e.resourceController;this._edgeWorker=new d(b(t)),this._workerHandle=new v({renderCoordsHelper:this.view.renderCoordsHelper,schedule:b(t),fetchEdgeLocations:async(e,t)=>{if(null==this._tracker)throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(e,this._edgeWorker,t)}}),this._updatingHandles.addPromise(this._setupLayerView()),this.addHandles([a(this._workerHandle),a(this._edgeWorker)])}async fetchCandidates(e,t){return this._workerHandle.fetchCandidates(e,t)}refresh(){}async _setupLayerView(){if(this.destroyed)return;const e=this._abortController?.signal,t=await this.getLayerView();null==t||o(e)||(this._tracker=t.trackSnappingSources({add:(t,r)=>{this._updatingHandles.addPromise(this._workerHandle.add({id:t,bounds:r},e))},remove:t=>{this._updatingHandles.addPromise(this._workerHandle.remove({id:t},e))}}))}};function b(e){return t=>e.immediate.schedule(t)}e([i({constructOnly:!0})],_.prototype,"getLayerView",void 0),e([i({constructOnly:!0})],_.prototype,"view",void 0),e([i({readOnly:!0})],_.prototype,"updating",null),e([i({readOnly:!0})],_.prototype,"availability",void 0),_=e([n("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],_);let k=class extends t{get updating(){return this._i3sSources.some(e=>e.updating)}constructor(e){super(e),this.availability=1,this._i3sSources=[]}destroy(){this._i3sSources.forEach(e=>e.destroy()),this._i3sSources.length=0}initialize(){const{view:e}=this,t=this.layerSource.layer;this._i3sSources="building-scene"===t.type?this._getBuildingSceneI3SSources(e,t):[this._getSceneLayerI3SSource(e,t)]}async fetchCandidates(e,t){const r=await Promise.all(this._i3sSources.map(r=>r.fetchCandidates(e,t)));return s(t),r.flat()}refresh(){this._i3sSources.forEach(e=>e.refresh())}_getBuildingSceneI3SSources(e,t){return t.allSublayers.toArray().map(r=>"building-component"===r.type?new _({getLayerView:async()=>(await e.whenLayerView(t)).whenSublayerView(r),view:e}):null).filter(r)}_getSceneLayerI3SSource(e,t){return new _({getLayerView:async()=>{const r=await e.whenLayerView(t);return"scene-layer-graphics-3d"===r.type?void 0:r},view:e})}};e([i({constructOnly:!0})],k.prototype,"layerSource",void 0),e([i({constructOnly:!0})],k.prototype,"view",void 0),e([i({readOnly:!0})],k.prototype,"updating",null),e([i({readOnly:!0})],k.prototype,"availability",void 0),k=e([n("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],k);export{k as SceneLayerSnappingSource};
