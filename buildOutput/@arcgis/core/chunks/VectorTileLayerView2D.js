/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{clone as t}from"../core/lang.js";import{L as s}from"./Logger.js";import{d as i}from"./maybe.js";import{isAbortError as r}from"../core/promiseUtils.js";import{property as o}from"../core/accessorSupport/decorators/property.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import{d as a,h as n}from"./diffUtils.js";import p from"../geometry/Point.js";import{f as h,c,l as u}from"./aaBoundingRect.js";import{p as d}from"./unitUtils.js";import{i as m}from"./isVectorTileGraphicOrigin.js";import{T as y,a as _}from"./TileInfoViewPOT.js";import{L as f}from"./LRUCache.js";import{a as g,t as j,b}from"./constants3.js";import{c as T,a as C}from"./TileStrategy.js";import{T as v}from"./TileKey2.js";import{w,V as S}from"./SymbolRepository.js";import I from"../layers/support/TileInfo.js";import{S as D}from"./SymbolFader.js";import{R as P}from"./RenderableTile.js";import{T as R}from"./TileContainer.js";import L from"../Graphic.js";import{g as M}from"./MapUtils.js";import{P as x}from"./pbf.js";import{P as U}from"./PooledRBush.js";import k from"../graphic/VectorTileGraphicOrigin.js";import{S as F,F as V}from"./SourceLayerData.js";import{g as H}from"./GeometryUtils.js";import{I as q,S as Q}from"./StyleRepository.js";import{L as A}from"./LayerView2D.js";import B from"../views/layers/LayerView.js";import{R as O}from"./RefreshableLayerView.js";import{T as E}from"./Scheduler.js";import"../config.js";import"./object.js";import"./string.js";import"./handleUtils.js";import"../core/Error.js";import"./events.js";import"./ensureType.js";import"./get.js";import"./utils.js";import"./metadata.js";import"./Lifecycle.js";import"./tracking.js";import"./Warning.js";import"../core/Accessor.js";import"../core/Handles.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"./jsonUtils.js";import"../core/accessorSupport/decorators/cast.js";import"./reader.js";import"./writer.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../geometry/SpatialReference.js";import"./jsonMap.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../geometry/support/webMercatorUtils.js";import"./mathUtils.js";import"../geometry/Extent.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"./Queue.js";import"../core/workers/RemoteClient.js";import"../intl.js";import"./date.js";import"./locale.js";import"./constants.js";import"./datetime.js";import"./number.js";import"./substitute.js";import"./messages.js";import"./Rect.js";import"./Texture.js";import"./enums.js";import"./rasterizingUtils.js";import"./floatRGBA.js";import"./defaultCIMValues.js";import"./definitions.js";import"./MemCache.js";import"./vec2.js";import"./common.js";import"./ScheduledQueueProcessor.js";import"./ReactiveMap.js";import"./signal.js";import"./mat3f32.js";import"./config.js";import"./mat3.js";import"./memoryEstimations.js";import"./BufferObject.js";import"./VertexArrayObject.js";import"./VertexAttributeLocations.js";import"./VertexBuffer.js";import"./TiledDisplayObject.js";import"./VertexElementDescriptor.js";import"./DisplayObject.js";import"../layers/support/LOD.js";import"./TileKey.js";import"./WGLContainer.js";import"./vec4f32.js";import"./utils30.js";import"./BoundingBox.js";import"./vec2f32.js";import"./WGLBrushVTLSymbol.js";import"./ShaderCompiler.js";import"./ProgramTemplate.js";import"./Program.js";import"./mat2df32.js";import"./mat2d.js";import"./vec3.js";import"./vec3f64.js";import"./vec3f32.js";import"./util.js";import"../views/support/HighlightOptions.js";import"../Color.js";import"./colorUtils.js";import"./HighlightDefaults.js";import"./Container.js";import"./EffectView.js";import"./parser.js";import"./utils5.js";import"./screenUtils.js";import"./mat4.js";import"../core/reactiveUtils.js";import"./earcut.js";import"./vec2f64.js";import"./featureConversionUtils.js";import"./aaBoundingBox.js";import"./DoubleArray.js";import"../geometry/support/jsonUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./extentUtils.js";import"./boundsUtils.js";import"../geometry/Polyline.js";import"./OptimizedFeature.js";import"./OptimizedGeometry.js";import"./OptimizedFeatureSet.js";import"./createFeatureId.js";import"./clippingUtils.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../layers/support/fieldUtils.js";import"../core/sql.js";import"./guards.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/support/AttachmentsOrderByInfo.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/content/UtilityNetworkAssociationsContent.js";import"../popup/support/UtilityNetworkAssociationType.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"./typeUtils.js";import"./typeUtils2.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils3.js";import"../symbols/edges/Edges3D.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils4.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"../symbols/IconSymbol3DLayer.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"./lineMarkers.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/Font.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/MarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./quickselect.js";import"../graphic/GraphicOrigin.js";import"./colorUtils2.js";import"./vec4.js";import"./vec4f64.js";import"./unitBezier.js";import"./utils23.js";import"./highlightOptionsUtils.js";import"./ClipRect.js";import"./layerViewUtils.js";import"./UpdatingHandles.js";import"./debugFlags.js";const z=(e,t)=>e+1/(1<<2*t);class K{constructor(e,t){this._tiles=new Map,this._tileCache=new f(40,e=>e.dispose()),this._viewSize=[0,0],this._visibleTiles=new Map,this.acquireTile=e.acquireTile,this.releaseTile=e.releaseTile,this.tileInfoView=e.tileInfoView,this._container=t}destroy(){for(const e of this._tiles.values())e.dispose();this._tiles=null,this._tileCache.clear(),this._tileCache=null}update(e){this._updateCacheSize(e);const t=this.tileInfoView,s=t.getTileCoverage(e.state,0,!0,"smallest");if(!s)return!0;const{spans:i,lodInfo:r}=s,{level:o}=r,l=this._tiles,a=new Set,n=new Set;for(const{row:e,colFrom:t,colTo:s}of i)for(let i=t;i<=s;i++){const t=v.getId(o,e,r.normalizeCol(i),r.getWorldForColumn(i)),s=this._getOrAcquireTile(t);a.add(t),s.processed()?this._addToContainer(s):n.add(new v(t))}for(const[e,t]of l)t.isCoverage=a.has(e);for(const e of n)this._findPlaceholdersForMissingTiles(e,a);let p=!1;for(const[e,i]of l)i.neededForCoverage=a.has(e),i.neededForCoverage||i.isHoldingForFade&&t.intersects(s,i.key)&&a.add(e),i.isFading&&(p=!0);for(const e of this._tiles.keys())a.has(e)||this._releaseTile(e);return T.pool.release(s),!p}clear(){this._tiles.clear(),this._tileCache.clear(),this._visibleTiles.clear()}clearCache(){this._tileCache.clear()}getIntersectingTiles(e,t,s,i,r){const o=[0,0],l=[0,0];i.toMap(o,e-s,t+s),i.toMap(l,e+s,t-s);const a=Math.min(o[0],l[0]),n=Math.min(o[1],l[1]),p=Math.max(o[0],l[0]),d=Math.max(o[1],l[1]),m=h(a,n,p,d),y=c(),_=[];for(const e of this._visibleTiles.values())this.tileInfoView.getTileBounds(y,e.key),u(m,y)&&_.push(e);if(null!=r&&r.length>0){const e=new Set(_.map(e=>e.id)),t=r.filter(t=>!e.has(t.tileKey.id)).map(e=>this._visibleTiles.get(e.tileKey.id)).filter(e=>void 0!==e);_.push(...t)}return _}_findPlaceholdersForMissingTiles(e,t){const s=[];for(const i of this._tiles.values())this._addPlaceholderChild(s,i,e,t);const i=s.reduce(z,0);Math.abs(1-i)<1e-6||this._addPlaceholderParent(e.id,t)}_addPlaceholderChild(e,t,s,i){t.key.level<=s.level||!t.hasData()||function(e,t){const s=t.level-e.level;return e.row===t.row>>s&&e.col===t.col>>s&&e.world===t.world}(s,t.key)&&(this._addToContainer(t),i.add(t.id),e.push(t.key.level-s.level))}_addPlaceholderParent(e,t){const s=this._tiles;let i=e;for(;;){if(i=W(i),!i||t.has(i))return;const e=s.get(i);if(e?.hasData())return this._addToContainer(e),void t.add(e.id)}}_getOrAcquireTile(e){let t=this._tiles.get(e);return t||(t=this._tileCache.pop(e),t||(t=this.acquireTile(new v(e))),this._tiles.set(e,t),t)}_releaseTile(e){const t=this._tiles.get(e);this.releaseTile(t),this._removeFromContainer(t),this._tiles.delete(e),t.hasData()?this._tileCache.put(e,t,1):t.dispose()}_addToContainer(e){let t;const s=[],i=this._container;if(i.contains(e))return;const r=this._visibleTiles;for(const i of r.values())this._canConnectDirectly(e,i)&&s.push(i),null==t&&this._canConnectDirectly(i,e)&&(t=i);if(null!=t){for(const i of s)t.childrenTiles.delete(i),e.childrenTiles.add(i),i.parentTile=e;t.childrenTiles.add(e),e.parentTile=t}else for(const t of s)e.childrenTiles.add(t),t.parentTile=e;r.set(e.id,e),i.addChild(e)}_removeFromContainer(e){if(this._visibleTiles.delete(e.id),this._container.removeChild(e),null!=e.parentTile){e.parentTile.childrenTiles.delete(e);for(const t of e.childrenTiles)null!=e.parentTile&&e.parentTile.childrenTiles.add(t)}for(const t of e.childrenTiles)t.parentTile=e.parentTile;e.parentTile=null,e.childrenTiles.clear()}_canConnectDirectly(e,t){const s=e.key;let{level:i,row:r,col:o,world:l}=t.key;const a=this._visibleTiles;for(;i>0;){if(i--,r>>=1,o>>=1,s.level===i&&s.row===r&&s.col===o&&s.world===l)return!0;if(a.has(`${i}/${r}/${o}/${l}`))return!1}return!1}_updateCacheSize(e){const t=e.state.size;if(t[0]===this._viewSize[0]&&t[1]===this._viewSize[1])return;const s=Math.ceil(t[0]/g)+1,i=Math.ceil(t[1]/g)+1;this._viewSize[0]=t[0],this._viewSize[1]=t[1],this._tileCache.maxSize=5*s*i}}function W(e){const[t,s,i,r]=e.split("/"),o=parseInt(t,10);return 0===o?null:`${o-1}/${parseInt(s,10)>>1}/${parseInt(i,10)>>1}/${parseInt(r,10)}`}const G=1e-6;function $(e,t){if(e){const s=e.getLayoutProperty("visibility");if(!s||1!==s.getValue()&&(void 0===e.minzoom||e.minzoom<t+G)&&(void 0===e.maxzoom||e.maxzoom>=t-G))return!0}return!1}class N extends R{constructor(e){super(e),this._backgroundTiles=[],this._computeDisplayInfoView(e)}destroy(){super.destroy(),this.removeAllChildren(),this._spriteMosaic?.dispose(),this._spriteMosaic=null,this._glyphMosaic?.dispose(),this._glyphMosaic=null,null!=this._symbolFader&&(this._symbolFader.clear(),this._symbolFader=null),this._styleRepository=null,this._backgroundTiles=[]}get fading(){return this._symbolFader?.fading??!1}get symbolFader(){return this._symbolFader}get symbolRepository(){return this._symbolFader?.symbolRepository}setStyleResources(e,t,s,i){if(this._spriteMosaic=e,this._glyphMosaic=t,this._styleRepository=s,this.tileInfoView=i,this._computeDisplayInfoView(i),null==this._symbolFader){const e=(e,t)=>{e.allSymbolsFadingOut=!0,e.lastOpacityUpdate=t,w(e,t,!0),e.decluttered=!0,e.requestRender()};this._symbolFader=new D("vector-tile",this._styleRepository,e,this.children,j)}this._symbolFader.styleRepository=s}setSpriteMosaic(e){this._spriteMosaic?.dispose(),this._spriteMosaic=e}deleteStyleLayers(e){null!=this._symbolFader&&this._symbolFader.deleteStyleLayers(e)}createRenderParams(e){return{...super.createRenderParams(e),renderPass:null,styleLayer:null,styleLayerUID:-1,glyphMosaic:this._glyphMosaic,spriteMosaic:this._spriteMosaic,hasClipping:!!this._clippingInfos}}doRender(e){!this.visible||1!==e.drawPhase&&64!==e.drawPhase||void 0===this._spriteMosaic||super.doRender(e)}addChild(e){return super.addChild(e),null!=this._symbolFader?this._symbolFader.addTile(e):e.decluttered=!0,this.requestRender(),e}removeChild(e){return null!=this._symbolFader&&this._symbolFader.removeTile(e),this.requestRender(),super.removeChild(e)}renderChildren(e){const{drawPhase:t}=e;64!==t?this._doRender(e):super.renderChildren(e)}removeAllChildren(){for(let e=0;e<this.children.length;e++){const t=this.children[e];null!=this._symbolFader&&this._symbolFader.removeTile(t),t.dispose()}super.removeAllChildren()}getStencilTarget(){return this.children.filter(e=>e.neededForCoverage&&e.hasData())}restartDeclutter(){null!=this._symbolFader&&this._symbolFader.restartDeclutter()}_doRender(e){const{context:t,state:s}=e,i=this._styleRepository;if(!i)return;const r=i.layers,o=this._displayInfo.scaleToZoom(s.scale);i.backgroundBucketIds.length>0&&(e.renderPass="background",this._renderBackgroundLayers(e,i.backgroundBucketIds,o)),super.renderChildren(e),1===e.drawPhase&&this._fade(o,s);const l=this.children.filter(e=>e.visible&&e.hasData());if(!l||0===l.length)return t.bindVAO(null),t.setStencilTestEnabled(!0),void t.setBlendingEnabled(!0);for(const e of l)e.triangleCount=0;t.setStencilWriteMask(0),t.setColorMask(!0,!0,!0,!0),t.setStencilOp(7680,7680,7681),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!1),t.setDepthTestEnabled(!0),t.setDepthWriteEnabled(!0),t.setDepthFunction(515),t.setClearDepth(1),t.clear(256),e.renderPass="opaque";for(let t=r.length-1;t>=0;t--)this._renderStyleLayer(r[t],e,l);t.setDepthWriteEnabled(!1),t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(1,771,1,771),e.renderPass="translucent";for(let t=0;t<r.length;t++)this._renderStyleLayer(r[t],e,l);t.bindVAO(null),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!0);for(const e of l)e.debugInfo.display.triangleCount=e.triangleCount}_fade(e,t){null!=this._symbolFader&&(this._symbolFader.update(e,t)||this.requestRender())}_renderStyleLayer(e,t,s){const{displayLevel:i,painter:r,renderPass:o}=t;if(void 0===e)return;const l=e.getLayoutProperty("visibility");if(l&&1===l.getValue())return;let a;switch(e.type){case 0:return;case 1:if("opaque"!==o&&"translucent"!==t.renderPass)return;a="vtlFill";break;case 2:if("translucent"!==o)return;a="vtlLine";break;case 4:if("translucent"!==o)return;a="vtlCircle";break;case 3:if("translucent"!==o)return;a="vtlSymbol"}if(s=3===e.type?s.filter(e=>e.decluttered):s.filter(e=>e.neededForCoverage),"vtlSymbol"!==a&&(0===s.length||void 0!==e.minzoom&&e.minzoom>=i+G||void 0!==e.maxzoom&&e.maxzoom<i-G))return;const n=e.uid;t.styleLayerUID=n,t.styleLayer=e;for(const e of s)if(e.layerData.has(n)){r.renderObjects(t,s,a);break}}_renderBackgroundLayers(e,t,s){const{context:i,painter:r,state:o}=e,l=this._styleRepository;let a=!1;for(const e of t)if(0===l.getLayerById(e).type&&$(l.getLayerById(e),s)){a=!0;break}if(!a)return;const n=this.tileInfoView,p=n.getTileCoverage(e.state,0,!0,"smallest"),{spans:h,lodInfo:u}=p,{level:d}=u,m=c(),y=[];if(this._renderPasses){const t=this._renderPasses[0];null!=this._clippingInfos&&(t.brushes[0].prepareState(e),t.brushes[0].drawMany(e,this._clippingInfos))}const _=this._backgroundTiles;let f,b=0;for(const{row:e,colFrom:t,colTo:s}of h)for(let i=t;i<=s;i++){if(b<_.length)f=_[b],f.key.set(d,e,u.normalizeCol(i),u.getWorldForColumn(i)),n.getTileBounds(m,f.key,!1),f.x=m[0],f.y=m[3],f.resolution=n.getTileResolution(d);else{const t=new v(d,e,u.normalizeCol(i),u.getWorldForColumn(i)),s=n.getTileBounds(c(),t),r=n.getTileResolution(d);f=new P(t,r,s[0],s[3],g,g,j,j),_.push(f)}f.setTransform(o),y.push(f),b++}i.setStencilWriteMask(0),i.setColorMask(!0,!0,!0,!0),i.setStencilOp(7680,7680,7681),i.setStencilFunction(514,0,255),i.setStencilTestEnabled(!0);for(const i of t){const t=l.getLayerById(i);0===t.type&&$(t,s)&&(e.styleLayerUID=t.uid,e.styleLayer=t,r.renderObjects(e,y,"vtlBackground"))}T.pool.release(p)}_computeDisplayInfoView(e){let t=e.tileInfo.lods[0].scale;const s=Math.max(25,e.tileInfo.lods.length),i=[];for(let e=0;e<=s;e++)i.push(t),t/=2;this._displayInfo=I.create({scales:i,size:g,spatialReference:e.spatialReference,numLODs:s})}}const X=(e,t)=>{const s=e.vtlSymbol.sourceTile,i=t.vtlSymbol.sourceTile;return s.level!==i.level?s.level-i.level:s.row!==i.row?s.row-i.row:s.col!==i.col?s.col-i.col:e.styleLayerUID-t.styleLayerUID};class Y{constructor(e,t,s,i,r){this.tileKey=e,this._tileLayerData=t,this._styleRepository=s,this._tileHandler=i,this._parentLayer=r,this._index=null,this._tileKeyToPBF=new Map}static create(e,t,s,i,r){return new Y(e,t,s,i,r)}clear(){this._index?.clear(),this._tileKeyToPBF.clear()}async queryAttributes(e,t,s,i,r){if(0===this._tileLayerData.size||!this._styleRepository||!this._tileHandler)return[];null===this._index&&(this._index=new U(100,J),await this._indexLayers());const o=[];return this._queryIndex(o,e,t,s,this.tileKey.level,i),r&&r?.length>0&&await this._getSymbolsAttributes(o,r),o}async _indexLayers(){const e=this.tileKey,t=this._styleRepository.layers,s=await this._getTilePayload(e);for(const[i,r]of this._tileLayerData){const o=t[i],l=s.find(e=>e.sourceName===o.source);if(!l)continue;const{protobuff:a,key:n}=l;if(3!==r.type){const t=1<<e.level-n.level,s=e.row-n.row*t,i=e.col-n.col*t;this._indexLayer(o,a,e.level,t,s,i)}}}_indexLayer(e,t,s,i,r,o){const l=e.sourceLayer,a=e.getFeatureFilter(),n=s,p=s+1,h=H(n),c=new x(new Uint8Array(t),new DataView(t));for(;c.next();)switch(c.tag()){case 3:{const t=c.getMessage(),u=new F(t);if(t.release(),u.name!==l)continue;const d=u.getData(),m=u.extent/i,y=m*o-h,_=m*r-h,f=y+m+2*h,b=_+m+2*h,T=m/g,C=j/m,v=m*o,w=m*r;for(;d.nextTag(2);){const t=d.getMessage(),i=new V(t,u);if(t.release(),a&&!a.filter(i,s))continue;const r=i.values||{},o=r._minzoom,l=r._maxzoom;if(o&&o>=10*p||l&&l<=10*n)continue;const h=e.getFeatureInflatedBounds(i,n,u.extent,T);null==h||h[0]>f||h[1]>b||h[2]<y||h[3]<_||(h[0]=(h[0]-v)*C,h[1]=(h[1]-w)*C,h[2]=(h[2]-v)*C,h[3]=(h[3]-w)*C,this._index.insert(new q(e,i,h,C,v,w)))}break}default:c.skip()}c.release()}async _getSymbolsAttributes(e,t){if(!t||0===t.length)return e;const s=[];if(t.sort(X),t.length>0){let e=0,{styleLayerUID:i}=t[0];for(let r=1;r<t.length;r++){const{styleLayerUID:o}=t[r];o!==i&&(s.push({from:e,to:r,styleLayerUID:i,sourceTileKey:t[r-1].vtlSymbol.sourceTile}),e=r,i=o)}const r=t.length-1;s.push({from:e,to:t.length,styleLayerUID:i,sourceTileKey:t[r].vtlSymbol.sourceTile})}const i=this._styleRepository.layers;for(const r of s){const s=await this._getTilePayload(r.sourceTileKey),o=i[r.styleLayerUID],l=!!o&&s.find(e=>e.sourceName===o.source);l&&this._addSymbolsAttributes(e,t.slice(r.from,r.to).map(e=>e.vtlSymbol.featureIndex),r.styleLayerUID,l)}return e}_addSymbolsAttributes(e,t,s,i){const r=this._styleRepository.layers,o=i.key,l=this.tileKey,a=1<<l.level-o.level,n=l.row-o.row*a,p=l.col-o.col*a;this._getSymbolAttributes(i.protobuff,t,s,a,n,p).forEach(t=>{const{attributes:i,tilePoint:o}=t;e.push({layerId:r[s].id,layerIndex:s,graphic:new L({attributes:i,origin:new k(this._parentLayer,r[s].id,s)}),tilePoint:o})})}_getSymbolAttributes(e,t,s,i,r,o){const l=[],a=this._styleRepository.layers;let n=0;t.sort((e,t)=>e-t);const p=new x(new Uint8Array(e),new DataView(e));for(;p.next();)switch(p.tag()){case 3:{const e=p.getMessage(),h=new F(e);if(e.release(),h.name!==a[s].sourceLayer)continue;const c=h.getData(),u=h.extent/i,d=j/u,m=u*o,y=u*r;let _=0;for(;c.nextTag(2);){const e=c.getMessage();if(_++===t[n]){const t=new V(e,h),s=t.values,i=t.getGeometry(),r=null!=i?[d*(i[0][0].x-m),d*(i[0][0].y-y)]:null;l.push({attributes:s,tilePoint:r}),n++}if(e.release(),n===t.length)return l}break}default:p.skip()}return p.release(),l}_queryIndex(e,t,s,i,r,o){const l=b*i*(window.devicePixelRatio||1);return this._index?.search({minX:t-l,minY:s-l,maxX:t+l,maxY:s+l},l=>{const{layer:a,feature:n}=l;a.isIntersectingFeature(t,s,i,n,r,o,l)&&e.push({layerId:a.id,layerIndex:a.uid,tilePoint:null,graphic:new L({attributes:n.values,origin:new k(this._parentLayer,l.layer.id,l.layer.uid)})})}),e}async _getTilePayload(e){return M(this._tileKeyToPBF,e.id,()=>this._tileHandler.fetchTilePBFs(e)).then(e=>e)}}const J=e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]});let Z=class extends(O(A(B))){constructor(){super(...arguments),this._styleChanges=[],this._fetchQueue=null,this._parseQueue=null,this._tileHandlerPromise=null,this._isTileHandlerReady=!1,this._styeChanged=!1,this._spriteSourceChanged=!1}get fading(){return this._vectorTileContainer?.fading??!1}get hasVisibleFeatures(){const e=this._vectorTileContainer.children;for(const t of e)if(t.hasFeatures())return!0;return!1}get spriteSourceChanged(){return this._spriteSourceChanged}get styleChanged(){return this._styeChanged}async hitTest(e,t){const s=this._tileHandlerPromise,i=this._vectorTileContainer?.symbolFader;if(!s||!this._isTileHandlerReady||!i)return;await s;let r=null;const o=this._vectorTileContainer?.symbolRepository;o&&(r=o.querySymbols(t,2,i.decluttererOffset,{}));const l=this.view.state,a=this._tileManager.getIntersectingTiles(t.x,t.y,2,l,r);if((!a||0===a.length)&&0===r?.length)return null;e=e.clone().normalize();const n=[],p=[];for(const t of a)n.push(this._queryTile(p,e,2,this.view.state.rotation,t,r?.filter(e=>e.tileKey.id===t.id)));return await Promise.all(n),p}update(e){if(this._tileHandlerPromise&&this._isTileHandlerReady)return e.pixelRatio!==this._tileHandler.devicePixelRatio?(this._tileHandler.devicePixelRatio=e.pixelRatio,void this._loadStyle()):void(this._styleChanges.length>0?this._tileHandlerPromise=this._applyStyleChanges():(this._pauseQueues(),this._fetchQueue.state=e.state,this._parseQueue.state=e.state,this._tileManager.update(e)||this.requestUpdate(),this._resumeQueues()))}attach(){const{style:e}=this.layer.currentStyleInfo;this._styleRepository=new Q(e),this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent),this._vectorTileContainer=new N(this._tileInfoView),this._tileHandler=new _(this.layer,this._styleRepository,window.devicePixelRatio||1,this.layer.tileInfo.lods.length-1),this.container.addChild(this._vectorTileContainer),this._start(),this.addAttachHandles([this.layer.on("paint-change",e=>{if(this._styeChanged=!0,e.isDataDriven)this._styleChanges.push({type:0,data:e}),this.requestUpdate();else{const t=this._styleRepository,s=t.getLayerById(e.layer);if(!s)return;const i=3===s.type;t.setPaintProperties(e.layer,e.paint),i&&this._vectorTileContainer?.restartDeclutter(),this._vectorTileContainer?.requestRender()}}),this.layer.on("layout-change",e=>{const t=this._styleRepository,s=t.getLayerById(e.layer);if(!s)return;this._styeChanged=!0;const i=a(s.layout,e.layout);if(null!=i){if(n(i,"visibility")&&1===function(e){if(null==e)return 0;switch(e.type){case"partial":return Object.keys(e.diff).length;case"complete":return Math.max(Object.keys(e.oldValue).length,Object.keys(e.newValue).length);case"collection":return Object.keys(e.added).length+Object.keys(e.changed).length+Object.keys(e.removed).length}}(i))return t.setLayoutProperties(e.layer,e.layout),3===s.type&&this._vectorTileContainer?.restartDeclutter(),void this._vectorTileContainer?.requestRender();this._styleChanges.push({type:1,data:e}),this.requestUpdate()}}),this.layer.on("style-layer-visibility-change",e=>{const t=this._styleRepository,s=t.getLayerById(e.layer);s&&(this._styeChanged=!0,t.setStyleLayerVisibility(e.layer,e.visibility),3===s.type&&this._vectorTileContainer?.restartDeclutter(),this._vectorTileContainer?.requestRender())}),this.layer.on("style-layer-change",e=>{this._styleChanges.push({type:2,data:e}),this._styeChanged=!0,this.requestUpdate()}),this.layer.on("delete-style-layer",e=>{this._styleChanges.push({type:3,data:e}),this._styeChanged=!0,this.requestUpdate()}),this.layer.on("load-style",()=>this._loadStyle()),this.layer.on("spriteSource-change",e=>{this._spriteSourceChanged=!0,this._styleChanges.push({type:4,data:e});const t=this._styleRepository.layers;for(const e of t)switch(e.type){case 3:e.getLayoutProperty("icon-image")&&this._styleChanges.push({type:1,data:{layer:e.id,layout:e.layout}});break;case 2:e.getPaintProperty("line-pattern")&&this._styleChanges.push({type:0,data:{layer:e.id,paint:e.paint,isDataDriven:e.isPainterDataDriven()}});break;case 1:e.getLayoutProperty("fill-pattern")&&this._styleChanges.push({type:0,data:{layer:e.id,paint:e.paint,isDataDriven:e.isPainterDataDriven()}})}this.requestUpdate()})])}detach(){this._stop(),this.container.removeAllChildren(),this._vectorTileContainer=i(this._vectorTileContainer),this._tileHandler=i(this._tileHandler)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){return d(this.layer.tileInfo?.spatialReference,e)}canResume(){let e=super.canResume();const{currentStyleInfo:t}=this.layer;if(e&&t?.layerDefinition){const s=this.view.scale,{minScale:i,maxScale:r}=t.layerDefinition;t?.layerDefinition&&(i&&i<s&&(e=!1),r&&r>s&&(e=!1))}return e}isUpdating(){return this.fading}acquireTile(e){const t=this._createVectorTile(e);return this._updatingHandles.addPromise(this._fetchQueue.push(t.key).then(e=>this._parseQueue.push({key:t.key,data:e})).then(e=>{t.once("attach",()=>this.requestUpdate()),t.setData(e),this.requestUpdate()}).catch(e=>{r(e)||s.getLogger(this).error(e)})),t}releaseTile(e){const t=e.key.id;this._fetchQueue.abort(t),this._parseQueue.abort(t),this.requestUpdate()}async doRefresh(){if(!this.attached)return;if(this.suspended)return this._tileManager.clear(),void this.requestUpdate();this._isTileHandlerReady=!1,this._pauseQueues(),this._clearQueues(),this._tileManager.clearCache(),this._resumeQueues();const e=this._vectorTileContainer.children,t=[];try{for(const s of e){const e=this._updatingHandles.addPromise(this._fetchQueue.push(s.key).then(e=>this._parseQueue.push({key:s.key,data:e})).then(e=>s.setData(e)).finally(()=>s.featureIndex=null));t.push(e)}await Promise.all(t)}catch(e){s.getLogger(this).error("error refreshing vector-tiles layer-view",e),this._resumeQueues(),this._isTileHandlerReady=!0}this._isTileHandlerReady=!0,this.requestUpdate()}_start(){if(this._stop(),this._tileManager=new K({acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView},this._vectorTileContainer),!this.layer.currentStyleInfo)return;const e=new AbortController,t=this._tileHandler.start({signal:e.signal}).then(()=>{this._fetchQueue=new C({tileInfoView:this._tileInfoView,process:(e,t)=>this._getTileData(e,t),concurrency:15,scheduler:this.scheduler,priority:E.MAPVIEW_FETCH_QUEUE}),this._parseQueue=new C({tileInfoView:this._tileInfoView,process:(e,t)=>this._parseTileData(e,t),concurrency:8,scheduler:this.scheduler,priority:E.MAPVIEW_VECTOR_TILE_PARSING_QUEUE}),this.requestUpdate(),this._isTileHandlerReady=!0});this._tileHandler.spriteMosaic.then(e=>{this._vectorTileContainer.setStyleResources(e,this._tileHandler.glyphMosaic,this._styleRepository,this._tileInfoView),this.requestUpdate()}),this._tileHandlerAbortController=e,this._tileHandlerPromise=t}_stop(){if(!this._tileHandlerAbortController||!this._vectorTileContainer)return;const e=this._tileHandlerAbortController;e&&e.abort(),this._tileHandlerPromise=null,this._isTileHandlerReady=!1,this._fetchQueue=i(this._fetchQueue),this._parseQueue=i(this._parseQueue),this._tileManager=i(this._tileManager),this._vectorTileContainer.removeAllChildren()}async _getTileData(e,t){return this._tileHandler.fetchTileData(e,t)}async _parseTileData(e,t){return this._tileHandler.parseTileData(e,t)}async _applyStyleChanges(){this._isTileHandlerReady=!1,this._pauseQueues(),this._clearQueues(),this._tileManager.clearCache();const e=this._styleChanges;try{await this._tileHandler.updateStyle(e)}catch(e){s.getLogger(this).error("error applying vector-tiles style update",e.message),this._resumeQueues(),this._isTileHandlerReady=!0}const t=this._styleRepository,i=new Set;e.forEach(e=>{if(3!==e.type)return;const s=e.data,r=t.getLayerById(s.layer);r&&i.add(r.uid)});const r=new Set;e.forEach(e=>{let s;switch(e.type){case 0:t.setPaintProperties(e.data.layer,e.data.paint),s=e.data.layer;break;case 1:t.setLayoutProperties(e.data.layer,e.data.layout),s=e.data.layer;break;case 3:return void t.deleteStyleLayer(e.data.layer);case 2:t.setStyleLayer(e.data.layer,e.data.index),s=e.data.layer.id;break;case 4:this._vectorTileContainer.setSpriteMosaic(this._tileHandler.setSpriteSource(e.data.spriteSource))}if(s){const e=t.getLayerById(s);e&&r.add(e.uid)}});const o=this._vectorTileContainer.children;if(i.size>0){const e=Array.from(i);this._vectorTileContainer.deleteStyleLayers(e);for(const t of o)t.deleteLayerData(e)}if(this._resumeQueues(),r.size>0){const e=Array.from(r),t=[];for(const s of o){const i=this._updatingHandles.addPromise(this._fetchQueue.push(s.key).then(t=>this._parseQueue.push({key:s.key,data:t,styleLayerUIDs:e})).then(e=>s.setData(e)).finally(()=>s.featureIndex=null));t.push(i)}await Promise.all(t)}this._styleChanges=[],this._isTileHandlerReady=!0,this.requestUpdate()}async _loadStyle(){const{style:e}=this.layer.currentStyleInfo,s=t(e);this._isTileHandlerReady=!1,this._pauseQueues(),this._clearQueues(),this._styleRepository=new Q(s),this._vectorTileContainer.destroy(),this._tileManager.clear(),this._tileHandlerAbortController.abort(),this._tileHandlerAbortController=new AbortController;const{signal:i}=this._tileHandlerAbortController;try{this._tileHandlerPromise=this._tileHandler.setStyle(this._styleRepository,s,this.layer.tileInfo.lods.length-1),await this._tileHandlerPromise}catch(e){if(!r(e))throw e}if(i.aborted)return this._resumeQueues(),this._isTileHandlerReady=!0,this._styeChanged=!1,this._spriteSourceChanged=!1,void this.requestUpdate();const o=await this._tileHandler.spriteMosaic,l=this._vectorTileContainer;this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent),l.setStyleResources(o,this._tileHandler.glyphMosaic,this._styleRepository,this._tileInfoView),this._tileManager=new K({acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView},this._vectorTileContainer),this._resumeQueues(),this._isTileHandlerReady=!0,this.requestUpdate(),this._styeChanged=!1,this._spriteSourceChanged=!1}_createVectorTile(e){const t=this._tileInfoView.getTileBounds(c(),e),s=this._tileInfoView.getTileResolution(e.level);return new S(e,s,t[0],t[3],512,512,this._styleRepository)}async _queryTile(e,t,s,i,r,o){if(0===r.layerData.size)return;const l=this._ensureTileIndex(r),a=this._tileInfoView.getTileBounds(c(),r.key,!0),n=(t.x-a[0])/(a[2]-a[0])*4096,p=4096*(1-(t.y-a[1])/(a[3]-a[1])),h=await l.queryAttributes(n,p,s,i,o);for(const s of h)s.graphic.geometry=this._tileToMapPoint(s.tilePoint,r.transforms.tileUnitsToPixels),e.push({type:"graphic",layer:this.layer,graphic:s.graphic,mapPoint:t.clone()});e.sort((e,t)=>(m(t.graphic.origin)?t.graphic.origin.layerIndex:0)-(m(e.graphic.origin)?e.graphic.origin.layerIndex:0))}_tileToMapPoint(e,t){if(!e)return null;const s=e[0]*t[0]+e[1]*t[3]+t[6],i=e[0]*t[1]+e[1]*t[4]+t[7],r=this.view.state,o=[0,0];return r.toMap(o,[s,i]),new p({x:o[0],y:o[1],spatialReference:r.spatialReference})}_ensureTileIndex(e){let t=e.featureIndex;return t||(t=Y.create(e.key,e.layerData,this._styleRepository,this._tileHandler,this.layer),e.featureIndex=t),t}_pauseQueues(){this._fetchQueue.pause(),this._parseQueue.pause()}_resumeQueues(){this._fetchQueue.resume(),this._parseQueue.resume()}_clearQueues(){this._fetchQueue.clear(),this._parseQueue.clear()}};e([o()],Z.prototype,"_isTileHandlerReady",void 0),Z=e([l("esri.views.2d.layers.VectorTileLayerView2D")],Z);const ee=Z;export{ee as default};
