/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"../core/Collection.js";import"../core/lang.js";import{L as r}from"./loadUtils.js";import{l as a}from"./lazyLayerLoader.js";import t from"../portal/PortalItem.js";import{selectLayerClassPath as o}from"./portalLayers.js";import{l as i}from"./styleUtils2.js";import"./tslib.es6.js";import"./watch.js";import"./ObjectPool.js";import"./handleUtils.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/promiseUtils.js";import"../core/Error.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./events.js";import"./maybe.js";import"./SetUtils.js";import"./get.js";import"./utils.js";import"./Lifecycle.js";import"./tracking.js";import"./SimpleTrackingTarget.js";import"../core/Evented.js";import"../core/Accessor.js";import"../core/Handles.js";import"../core/accessorSupport/decorators/subclass.js";import"./metadata.js";import"./ensureType.js";import"./MapUtils.js";import"./Warning.js";import"./ObservableBase.js";import"../core/accessorSupport/decorators/property.js";import"./shared.js";import"./SimpleObservable.js";import"./jsonUtils.js";import"./requestPresets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"./associatedFeatureServiceUtils.js";import"../portal/Portal.js";import"../core/JSONSupport.js";import"../core/Loadable.js";import"../core/Promise.js";import"./reader.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./pe.js";import"./assets.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./locale.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"./fetchService.js";import"./layerUtils.js";import"../layers/catalog/catalogUtils.js";import"../core/reactiveUtils.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"./portalItemUtils.js";import"./projectionUtils.js";import"./vec3f64.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./extentUtils.js";import"./boundsUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"../geometry/Polyline.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"./projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./asyncUtils.js";function s(e,r){return!(!e.layerType||"ArcGISFeatureLayer"!==e.layerType)&&e.featureCollectionType===r}async function y(e,y,G){if(!y)return;const M=y.map(e=>async function(e,y){const G=await async function(e,i){const y=i.context,T=function(e){let r;switch(e.origin){case"web-scene":switch(e.layerContainerType){case"basemap":r=c;break;case"ground":r=l;break;case"tables":r=n;break;default:r=p}break;case"link-chart":switch(e.layerContainerType){case"basemap":r=j;break;case"tables":r=d;break;default:r=S}break;default:switch(e.layerContainerType){case"basemap":r=u;break;case"tables":r=m;break;default:r=L}}return r}(y);let f=e.layerType||e.type;!f&&i?.defaultLayerType&&(f=i.defaultLayerType);const G=T[f];let M=G?a[G]:a.UnknownLayer;if(I(e)){const i=y?.portal;if(e.itemId){const s=new t({id:e.itemId,portal:i});await s.load();const y=(await o(s,new r)).className||"UnknownLayer";M=a[y]}}else"ArcGISFeatureLayer"===f?function(e){return s(e,"notes")}(e)||function(e){return s(e,"markup")}(e)?M=a.MapNotesLayer:function(e){return s(e,"route")}(e)?M=a.RouteLayer:g(e)&&(M=a.GroupLayer):e.wmtsInfo?.url&&e.wmtsInfo.layerIdentifier?M=a.WMTSLayer:"WFS"===f&&"2.0.0"!==e.wfsInfo?.version&&(M=a.UnsupportedLayer);return M()}(e,y);return async function(e,r,o){const s=new e;return s.read(r,o.context),"group"===s.type&&("GroupLayer"===r.layerType?await T(s,r,o):I(r)?function(e,r,a){r.itemId&&(e.portalItem=new t({id:r.itemId,portal:a?.portal}),e.when(()=>{const t=t=>{const o=t.layerId;f(t,e,r,o,a);const i=r.featureCollection?.layers?.[o];i&&t.read(i,a)};e.layers?.forEach(t),e.tables?.forEach(t)}))}(s,r,o.context):g(r)&&await async function(e,r,t){const o=a.FeatureLayer,i=await o(),s=r.featureCollection,y=s?.showLegend,p=s?.layers?.map((a,o)=>{const s=new i;s.read(a,t);const p={...t,ignoreDefaults:!0};return f(s,e,r,o,p),null!=y&&s.read({showLegend:y},p),s});e.layers.addMany(p??[])}(s,r,o.context)),await i(s,o.context),s}(G,e,y)}(e,G)),b=await Promise.allSettled(M);for(const r of b)"rejected"===r.status||r.value&&e.add(r.value)}const p={ArcGISDimensionLayer:"DimensionLayer",ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISSceneServiceLayer:"SceneLayer",ArcGISTiledElevationServiceLayer:"ElevationLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",BuildingSceneLayer:"BuildingSceneLayer",CatalogLayer:"CatalogLayer",CSV:"CSVLayer",DefaultTileLayer:"TileLayer",GeoJSON:"GeoJSONLayer",GroupLayer:"GroupLayer",IntegratedMesh3DTilesLayer:"IntegratedMesh3DTilesLayer",Object3DTilesLayer:"UnsupportedLayer",IntegratedMeshLayer:"IntegratedMeshLayer",KML:"KMLLayer",LineOfSightLayer:"LineOfSightLayer",MediaLayer:"MediaLayer",OGCFeatureLayer:"OGCFeatureLayer",OrientedImageryLayer:"OrientedImageryLayer",PointCloudLayer:"PointCloudLayer",RasterDataLayer:"UnsupportedLayer",VectorTileLayer:"VectorTileLayer",ViewshedLayer:"ViewshedLayer",Voxel:"VoxelLayer",WCS:"WCSLayer",WFS:"WFSLayer",WMS:"WMSLayer",WebTiledLayer:"WebTileLayer"},l={ArcGISTiledElevationServiceLayer:"ElevationLayer",DefaultTileLayer:"ElevationLayer",RasterDataElevationLayer:"UnsupportedLayer"},n={ArcGISFeatureLayer:"FeatureLayer"},c={ArcGISImageServiceLayer:"UnsupportedLayer",ArcGISMapServiceLayer:"UnsupportedLayer",ArcGISSceneServiceLayer:"SceneLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",DefaultTileLayer:"TileLayer",OpenStreetMap:"OpenStreetMapLayer",VectorTileLayer:"VectorTileLayer",WCS:"UnsupportedLayer",WMS:"UnsupportedLayer",WebTiledLayer:"WebTileLayer"},L={ArcGISAnnotationLayer:"UnsupportedLayer",ArcGISDimensionLayer:"UnsupportedLayer",ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISStreamLayer:"StreamLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",ArcGISVideoLayer:"VideoLayer",BingMapsAerial:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",CatalogLayer:"CatalogLayer",CSV:"CSVLayer",DefaultTileLayer:"TileLayer",GeoJSON:"GeoJSONLayer",GeoRSS:"GeoRSSLayer",GroupLayer:"GroupLayer",KML:"KMLLayer",KnowledgeGraphLayer:"KnowledgeGraphLayer",MediaLayer:"MediaLayer",OGCFeatureLayer:"OGCFeatureLayer",OrientedImageryLayer:"OrientedImageryLayer",SubtypeGroupLayer:"SubtypeGroupLayer",VectorTileLayer:"VectorTileLayer",WCS:"WCSLayer",WFS:"WFSLayer",WMS:"WMSLayer",WebTiledLayer:"WebTileLayer"},m={ArcGISFeatureLayer:"FeatureLayer",SubtypeGroupTable:"SubtypeGroupLayer"},u={ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",BingMapsAerial:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",DefaultTileLayer:"TileLayer",OpenStreetMap:"OpenStreetMapLayer",VectorTileLayer:"VectorTileLayer",WCS:"WCSLayer",WMS:"WMSLayer",WebTiledLayer:"WebTileLayer"},S={...L,LinkChartLayer:"LinkChartLayer"},d={...m},j={...u};function g(e){return"ArcGISFeatureLayer"===e.layerType&&!I(e)&&(e.featureCollection?.layers?.length??0)>1}function I(e){return"Feature Collection"===e.type}async function T(r,a,t){const o=new e,i=y(o,Array.isArray(a.layers)?a.layers:[],t);try{try{if(await i,"group"===r.type)return r.layers.addMany(o),r}catch(e){r.destroy();for(const e of o)e.destroy();throw e}}catch(e){throw e}}function f(e,r,a,t,o){e.read({id:`${r.id}-sublayer-${t}`,visibility:a.visibleLayers?.includes(t)??!0},o)}export{T as populateGroupLayer,y as populateOperationalLayers};
