/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
const t={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function n(n){return t[n]??[-34028234663852886e22,34028234663852886e22]}const e={u1:1,u2:1,u4:1,u8:1,s8:1,u16:2,s16:2,u32:4,s32:4,f32:4,f64:8,unknown:4,c64:16,c128:32};function s(t){return e[t]}function u(t){return s(t.pixelType)*t.bandCount}function o(t,n){return null==t||null==n?"s32":t<0?t>=-128&&n<128?"s8":t>=-32768&&n<32768?"s16":"s32":n<256?"u8":n<65536?"u16":"u32"}function l(t){return(t?.startsWith("s")||t?.startsWith("u"))??!1}function i(t,e,s,u){let[o,i]=n(s);const a=l(s);return a&&(o-=1e-5,i+=1e-5),a?s.startsWith("u")?function(t,n,e,s){const[u,o]=s;for(let s=0;s<n.length;s++)if(n[s]){const l=t[s];l<u||l>o?n[s]=0:e[s]=l+.5|0}}(t,e,u,[o,i]):function(t,n,e,s){const[u,o]=s;for(let s=0;s<n.length;s++)if(n[s]){const l=t[s];l<u||l>o?n[s]=0:e[s]=l+(l>0?.5:-.5)|0}}(t,e,u,[o,i]):function(t,n,e,s){const[u,o]=s;for(let s=0;s<n.length;s++)if(n[s]){const l=t[s];l<u||l>o?n[s]=0:e[s]=l}}(t,e,u,[o,i])}function a(t,n){for(let e=0;e<n.length;e++)n[e]&&isNaN(t[e])&&(n[e]=0,t[e]=0)}function c(t,e,s){if(t.depthCount&&t.depthCount>1)return;const{pixels:u,statistics:o,pixelType:l}=t,i=u[0].length,a=t.bandMasks??[],c=t.mask??new Uint8Array(i).fill(255),r="f32"===l||"f64"===l,f=n(l);let h=!1;for(let t=0;t<u.length;t++){const n="number"==typeof e?e:e[t];if(null==n)continue;const i=o?.[t]?.minValue??f[0],b=o?.[t]?.maxValue??f[1];if(i>n+Number.EPSILON||b<n-Number.EPSILON)continue;const g=a[t]||c.slice(),m=u[t],d=s?.customFloatTolerance;if(r&&0!==d){let t=d;t||(t=Math.abs(n)>=9999999e31?2e-7*Math.abs(n):"f32"===l?2**-23:Number.EPSILON);for(let e=0;e<m.length;e++)g[e]&&Math.abs(m[e]-n)<t&&(m[e]=0,g[e]=0,c[e]=0,h=!0)}else for(let t=0;t<m.length;t++)g[t]&&m[t]===n&&(m[t]=0,g[t]=0,c[t]=0,h=!0);a[t]=g}if(h){const n=t.bandMasks||t.pixels.length>1?a:null;s?.matchAllNoData?t.mask=n&&n.length>1?function(t){if(t.length<2)return t[0];const n=t[0].length,e=new Uint8Array(n).fill(0);for(let s=0;s<t.length;s++){const u=t[s];for(let t=0;t<n;t++)u[t]&&(e[t]=255)}return e}(n):c:(t.bandMasks=n,t.mask=c)}h&&"updateStatistics"in t&&t.updateStatistics()}export{n as a,o as b,c,i as d,u as e,a as f,s as g,l as i};
