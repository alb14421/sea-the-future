/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{throwIfAborted as e}from"../core/promiseUtils.js";import{r as t}from"../core/lang.js";import{d as s}from"./colorUtils.js";import{L as r}from"./Logger.js";import{g as i}from"./MapUtils.js";import{e as o}from"./mathUtils.js";import{e as n,f as a}from"./quat.js";import{a as c,I as h,c as l}from"./quatf64.js";import{k as f,h as u,c as m,n as p,g as d}from"./vec3.js";import{c as g,Z as _,b as w,O as b}from"./vec3f64.js";import y from"../geometry/support/MeshMaterialMetallicRoughness.js";import{c as T}from"./vertexSpaceConversion.js";import{D as j}from"./enums.js";import x from"../core/Error.js";import{isDataProtocol as A,dataComponents as E}from"../core/urlUtils.js";import{i as S}from"./resourceUtils3.js";import"./handleUtils.js";import"./events.js";import"./maybe.js";import"./object.js";import"../config.js";import"./string.js";import"./common.js";import"./vec4.js";import"./tslib.es6.js";import"../Color.js";import"./ensureType.js";import"../core/accessorSupport/decorators/property.js";import"./get.js";import"./utils.js";import"./metadata.js";import"../core/accessorSupport/decorators/subclass.js";import"./Lifecycle.js";import"./tracking.js";import"./Warning.js";import"../geometry/support/MeshMaterial.js";import"../core/Clonable.js";import"../core/Accessor.js";import"../core/Handles.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"../core/JSONSupport.js";import"../geometry/support/MeshTexture.js";import"./imageUtils.js";import"../request.js";import"../kernel.js";import"./jsonUtils.js";import"./persistableUrlUtils.js";import"./reader.js";import"./writer.js";import"./meshCloneUtils.js";import"../geometry/support/MeshTextureTransform.js";import"./unitUtils.js";import"./jsonMap.js";import"./pe.js";import"./assets.js";import"./mat3.js";import"./mat3f64.js";import"./mat4.js";import"./mat4f64.js";import"./spatialReferenceEllipsoidUtils.js";import"../geometry/SpatialReference.js";import"./computeTranslationToOriginAndRotation.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"./projectPointToVector.js";import"./projectionUtils.js";import"./SimpleObservable.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./extentUtils.js";import"./boundsUtils.js";import"./aaBoundingRect.js";import"../geometry/Polyline.js";import"./projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./meshVertexSpaceUtils.js";import"../geometry/support/MeshGeoreferencedVertexSpace.js";import"./enumeration.js";import"../geometry/support/MeshLocalVertexSpace.js";import"./vec32.js";import"./BufferView.js";import"./vec2.js";import"./vec2f64.js";import"./vec4f64.js";import"./vec42.js";class M{constructor(){this.copyright="",this.defaultScene=0,this.generator="",this._scenes=[]}addScene(e){if(this._scenes.includes(e))throw new Error("Scene already added");this._scenes.push(e)}removeScene(e){t(this._scenes,e)}forEachScene(e){this._scenes.forEach(e)}}class O{static{this.HEADER_SIZE=12}static{this.CHUNK_HEADER_SIZE=8}static{this.MAGIC=1179937895}static{this.VERSION=2}constructor(e,t){if(!e)throw new Error("GLB requires a JSON gltf chunk");this._length=O.HEADER_SIZE,this._length+=O.CHUNK_HEADER_SIZE;const s=function(e){return(new TextEncoder).encode(e).buffer}(e);if(this._length+=C(s.byteLength,4),t&&(this._length+=O.CHUNK_HEADER_SIZE,this._length+=t.byteLength,t.byteLength%4))throw new Error("Expected BIN chunk length to be divisible by 4 at this point");this.buffer=new ArrayBuffer(this._length),this._outView=new DataView(this.buffer),this._writeHeader();const r=this._writeChunk(s,12,1313821514,32);t&&this._writeChunk(t,r,5130562)}_writeHeader(){this._outView.setUint32(0,O.MAGIC,!0),this._outView.setUint32(4,O.VERSION,!0),this._outView.setUint32(8,this._length,!0)}_writeChunk(e,t,s,r=0){const i=C(e.byteLength,4);var o,n,a,c;for(this._outView.setUint32(t,i,!0),this._outView.setUint32(t+=4,s,!0),o=this._outView.buffer,n=e,a=t+=4,c=e.byteLength,new Uint8Array(o,a,c).set(new Uint8Array(n,0,c),0),t+=e.byteLength;t%4;)r&&this._outView.setUint8(t,r),t++;return t}}function C(e,t){return t*Math.ceil(e/t)}class N{constructor(e,t,s,r,i){this._buffer=e,this._componentType=s,this._dataType=r,this._data=[],this._isFinalized=!1,this._accessorIndex=-1,this._accessorAttribute=null,this._accessorMin=null,this._accessorMax=null,t.bufferViews||(t.bufferViews=[]),this.index=t.bufferViews.length,this._bufferView={buffer:e.index,byteLength:-1,target:i};const o=this._getElementSize();o>=4&&34963!==i&&(this._bufferView.byteStride=o),t.bufferViews.push(this._bufferView),this._numComponentsForDataType=this._calculateNumComponentsForDataType()}push(e){const t=this._data.length;if(this._data.push(e),this._accessorIndex>=0){const s=t%this._numComponentsForDataType,r=this._accessorMin[s];this._accessorMin[s]="number"!=typeof r?e:Math.min(r,e);const i=this._accessorMax[s];this._accessorMax[s]="number"!=typeof i?e:Math.max(i,e)}}get dataSize(){return this._data.length*this._sizeComponentType()}get byteSize(){return e=this.dataSize,4*Math.ceil(e/4);var e}getByteOffset(){if(!this._isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this._buffer.getByteOffset(this)}get byteOffset(){if(!this._isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this._buffer.getByteOffset(this)}_createTypedArray(e,t){switch(this._componentType){case j.BYTE:return new Int8Array(e,t);case j.FLOAT:return new Float32Array(e,t);case j.SHORT:return new Int16Array(e,t);case j.UNSIGNED_BYTE:return new Uint8Array(e,t);case j.UNSIGNED_INT:return new Uint32Array(e,t);case j.UNSIGNED_SHORT:return new Uint16Array(e,t)}}writeOutToBuffer(e,t){this._createTypedArray(e,t).set(this._data)}writeAsync(e){if(this._asyncWritePromise)throw new Error("Can't write multiple bufferView values asynchronously");return this._asyncWritePromise=e.then(e=>{const t=new Uint8Array(e);for(let e=0;e<t.length;++e)this._data.push(t[e]);delete this._asyncWritePromise}),this._asyncWritePromise}startAccessor(e){if(this._accessorIndex>=0)throw new Error("Accessor was started without ending the previous one");this._accessorIndex=this._data.length,this._accessorAttribute=e;const t=this._numComponentsForDataType;this._accessorMin=new Array(t),this._accessorMax=new Array(t)}endAccessor(){if(this._accessorIndex<0)throw new Error("An accessor was not started, but was attempted to be ended");const e=this._getElementSize(),t=this._numComponentsForDataType,s=(this._data.length-this._accessorIndex)/t;if(s%1)throw new Error("An accessor was ended with missing component values");for(let e=0;e<this._accessorMin.length;++e)"number"!=typeof this._accessorMin[e]&&(this._accessorMin[e]=0),"number"!=typeof this._accessorMax[e]&&(this._accessorMax[e]=0);const r={byteOffset:e*(this._accessorIndex/t),componentType:this._componentType,count:s,type:this._dataType,min:this._accessorMin,max:this._accessorMax,name:this._accessorAttribute};switch(this._accessorAttribute){case"TEXCOORD_0":case"TEXCOORD_1":case"COLOR_0":case"WEIGHTS_0":switch(this._componentType){case j.UNSIGNED_BYTE:case j.UNSIGNED_SHORT:r.normalized=!0}}return this._accessorIndex=-1,this._accessorAttribute=null,this._accessorMin=null,this._accessorMax=null,r}get finalized(){return this._finalizedPromise?this._finalizedPromise:this._isFinalized?this._finalizedPromise=Promise.resolve():this._finalizedPromise=new Promise(e=>this._finalizedPromiseResolve=e)}async finalize(){const e=this._bufferView,t=this._buffer.getViewFinalizePromises(this);this._asyncWritePromise&&t.push(this._asyncWritePromise),await Promise.allSettled(t),this._isFinalized=!0,e.byteOffset=this.getByteOffset(),e.byteLength=this.dataSize,this._finalizedPromiseResolve&&this._finalizedPromiseResolve()}_getElementSize(){return this._sizeComponentType()*this._numComponentsForDataType}_sizeComponentType(){switch(this._componentType){case j.BYTE:case j.UNSIGNED_BYTE:return 1;case j.SHORT:case j.UNSIGNED_SHORT:return 2;case j.UNSIGNED_INT:case j.FLOAT:return 4}}_calculateNumComponentsForDataType(){switch(this._dataType){case"SCALAR":return 1;case"VEC2":return 2;case"VEC3":return 3;case"VEC4":case"MAT2":return 4;case"MAT3":return 9;case"MAT4":return 16}}}class z{constructor(e){this._gltf=e,this._bufferViews=[],this._isFinalized=!1,e.buffers||(e.buffers=[]),this.index=e.buffers.length;const t={byteLength:-1};e.buffers.push(t),this._buffer=t}addBufferView(e,t,s){if(this._finalizePromise)throw new Error("Cannot add buffer view after fiinalizing buffer");const r=new N(this,this._gltf,e,t,s);return this._bufferViews.push(r),r}getByteOffset(e){let t=0;for(const s of this._bufferViews){if(s===e)return t;t+=s.byteSize}throw new Error("Given bufferView was not present in this buffer")}getViewFinalizePromises(e){const t=[];for(const s of this._bufferViews){if(e&&s===e)return t;t.push(s.finalized)}return t}getArrayBuffer(){if(!this._isFinalized)throw new Error("Cannot get ArrayBuffer from Buffer before it is finalized");const e=this._getTotalSize(),t=new ArrayBuffer(e);let s=0;for(const e of this._bufferViews)e.writeOutToBuffer(t,s),s+=e.byteSize;return t}finalize(){if(this._finalizePromise)throw new Error(`Buffer ${this.index} was already finalized`);return this._finalizePromise=Promise.allSettled(this.getViewFinalizePromises()).then(()=>{this._isFinalized=!0;const e=this.getArrayBuffer();this._buffer.byteLength=e.byteLength,this._buffer.uri=e}),this._gltf.extras.promises.push(this._finalizePromise),this._finalizePromise}_getTotalSize(){let e=0;for(const t of this._bufferViews)e+=t.byteSize;return e}}function I(e,t){null==t.normal&&(t.normal=new Float32Array(t.position.length));const{position:s,normal:r}=t,i=e.length/3;for(let t=0;t<i;++t){const i=3*e[3*t],o=3*e[3*t+1],n=3*e[3*t+2],a=f(V,s[i],s[i+1],s[i+2]),c=f(v,s[o],s[o+1],s[o+2]),h=f(R,s[n],s[n+1],s[n+2]),l=u(c,c,a),p=u(h,h,a),d=m(l,l,p);r[i]+=d[0],r[i+1]+=d[1],r[i+2]+=d[2],r[o]+=d[0],r[o+1]+=d[1],r[o+2]+=d[2],r[n]+=d[0],r[n+1]+=d[1],r[n+2]+=d[2]}for(let e=0;e<r.length;e+=3)f(U,r[e],r[e+1],r[e+2]),p(U,U),r[e]=U[0],r[e+1]=U[1],r[e+2]=U[2]}const V=g(),v=g(),R=g(),U=g();async function B(t,s){const r=L(t);if(null==r)throw new x("imageToArrayBuffer","Unsupported image type");const i=function(e){if(!(e instanceof HTMLImageElement))return"image/png";const t=e.src;if(A(t)){const e=E(t);return"image/jpeg"===e?.mediaType?e.mediaType:"image/png"}return/\.png$/i.test(t)?"image/png":/\.(jpg|jpeg)$/i.test(t)?"image/jpeg":"image/png"}(t),o=await new Promise(e=>r.toBlob(e,i));if(e(s),!o)throw new x("imageToArrayBuffer","Failed to encode image");const n=await o.arrayBuffer();return e(s),{data:n,type:i}}function L(e){if(e instanceof HTMLCanvasElement)return e;if(e instanceof HTMLVideoElement)return null;const t=document.createElement("canvas");t.width=e.width,t.height=e.height;const s=t.getContext("2d");return e instanceof HTMLImageElement?s.drawImage(e,0,0,e.width,e.height):e instanceof ImageData&&s.putImageData(e,0,0),t}const P=()=>r.getLogger("esri.geometry.support.meshUtils.exporters.gltf.gltf");class D{constructor(e,t){this.options=t,this._materialMap=new Array,this._imageMap=new Map,this._textureMap=new Map,this.gltf={asset:{version:"2.0",copyright:e.copyright,generator:e.generator},extras:{output:t.output,binChunkBuffer:null,promises:[]}},this._addScenes(e)}_addScenes(e){this.gltf.scene=e.defaultScene;const t=this.gltf.extras,s=2===t.output.buffer||2===t.output.image;s&&(t.binChunkBuffer=new z(this.gltf)),e.forEachScene(e=>{this._addScene(e)}),s&&t.binChunkBuffer.finalize()}_addScene(e){this.gltf.scenes||(this.gltf.scenes=[]);const t={};e.name&&(t.name=e.name),e.forEachNode(e=>{t.nodes||(t.nodes=[]),t.nodes.push(...this._addNodes(e))}),this.gltf.scenes.push(t)}_addNodes(e){this.gltf.nodes||(this.gltf.nodes=[]);const t={};e.name&&(t.name=e.name);const s=e.translation;d(s,_)||(t.translation=w(s));const r=e.rotation;n(r,h)||(t.rotation=c(r));const i=e.scale;d(i,b)||(t.scale=w(i));const o=this.gltf.nodes.length;if(this.gltf.nodes.push(t),e.mesh&&e.mesh.vertexAttributes.position){const s=this._createMeshes(e.mesh),r=[o];if(1===s.length)this._addMesh(t,s[0]);else for(const e of s){const t={};this._addMesh(t,e),r.push(this.gltf.nodes.length),this.gltf.nodes.push(t)}return r}return e.forEachNode(e=>{t.children||(t.children=[]),t.children.push(...this._addNodes(e))}),[o]}_addMesh(e,t){this.gltf.meshes??=[];const s=this.gltf.meshes.length;this.gltf.meshes.push(t),e.mesh=s}_createMeshes(e){const t=this.gltf.extras,s=2===t.output.buffer;let r;r=s?t.binChunkBuffer:new z(this.gltf);const i=this.options.origin,o=e.vertexSpace.clone();o.origin=[i.x,i.y,i.z??0];const n=T({vertexAttributes:e.vertexAttributes,vertexSpace:e.vertexSpace,transform:this.options?.ignoreLocalTransform?null:e.transform,spatialReference:e.spatialReference},o,{targetUnit:this.options.unitConversionDisabled?void 0:"meters"});if(!n)return[];!function(e,t){if(e.components)for(const s of e.components)s.faces&&"smooth"===s.shading&&I(s.faces,t)}(e,n),function({position:e,normal:t,tangent:s}){F(e,3),F(t,3),F(s,4)}(n);const{position:a,normal:c,tangent:h}=n,{uv:l,color:f}=e.vertexAttributes,u=r.addBufferView(j.FLOAT,"VEC3",34962);let m,p,d,g;c&&(m=r.addBufferView(j.FLOAT,"VEC3",34962)),l&&(p=r.addBufferView(j.FLOAT,"VEC2",34962)),h&&(d=r.addBufferView(j.FLOAT,"VEC4",34962)),f&&(g=r.addBufferView(j.FLOAT,"VEC4",34962)),u.startAccessor("POSITION"),m&&m.startAccessor("NORMAL"),p&&p.startAccessor("TEXCOORD_0"),d&&d.startAccessor("TANGENT"),g&&g.startAccessor("COLOR_0");const _=n.position.length/3;for(let e=0;e<_;++e)u.push(a[3*e]),u.push(a[3*e+1]),u.push(a[3*e+2]),m&&null!=c&&(m.push(c[3*e]),m.push(c[3*e+1]),m.push(c[3*e+2])),p&&null!=l&&(p.push(l[2*e]),p.push(l[2*e+1])),d&&null!=h&&(d.push(h[4*e]),d.push(h[4*e+1]),d.push(h[4*e+2]),d.push(h[4*e+3])),g&&null!=f&&(g.push(k(f[4*e]/255)),g.push(k(f[4*e+1]/255)),g.push(k(f[4*e+2]/255)),g.push(f[4*e+3]/255));const w=u.endAccessor(),b=this._addAccessor(u.index,w);let y,x,A,E,S;if(m){const e=m.endAccessor();y=this._addAccessor(m.index,e)}if(p){const e=p.endAccessor();x=this._addAccessor(p.index,e)}if(d){const e=d.endAccessor();A=this._addAccessor(d.index,e)}if(g){const e=g.endAccessor();E=this._addAccessor(g.index,e)}const M=[];return e.components&&e.components.length>0&&e.components[0].faces?(S=r.addBufferView(j.UNSIGNED_INT,"SCALAR",34963),this._addMeshVertexIndexed(S,e.components,M,b,y,x,A,E)):this._addMeshVertexNonIndexed(e.components,M,b,y,x,A,E),u.finalize(),m?.finalize(),p?.finalize(),d?.finalize(),S?.finalize(),g?.finalize(),s||r.finalize(),M}_addMaterial(e){if(null==e)return;const t=this._materialMap.indexOf(e);if(-1!==t)return t;this.gltf.materials||(this.gltf.materials=[]);const s={};switch(e.alphaMode){case"mask":s.alphaMode="MASK";break;case"auto":case"blend":s.alphaMode="BLEND"}s.alphaCutoff=e.alphaCutoff,e.doubleSided&&(s.doubleSided=e.doubleSided),s.pbrMetallicRoughness={};const r=e=>{const t=e.toRgba();return t[0]=k(t[0]/255),t[1]=k(t[1]/255),t[2]=k(t[2]/255),t};if(null!=e.color&&(s.pbrMetallicRoughness.baseColorFactor=r(e.color)),null!=e.colorTexture&&(s.pbrMetallicRoughness.baseColorTexture=this._createTextureInfo(e.colorTexture,e.colorTextureTransform)),null!=e.normalTexture&&(s.normalTexture=this._createTextureInfo(e.normalTexture,e.normalTextureTransform)),e instanceof y){if(null!=e.emissiveTexture&&(s.emissiveTexture=this._createTextureInfo(e.emissiveTexture,e.emissiveTextureTransform)),null!=e.emissiveColor){const t=r(e.emissiveColor);s.emissiveFactor=[t[0],t[1],t[2]]}null!=e.occlusionTexture&&(s.occlusionTexture=this._createTextureInfo(e.occlusionTexture,e.occlusionTextureTransform)),null!=e.metallicRoughnessTexture&&(s.pbrMetallicRoughness.metallicRoughnessTexture=this._createTextureInfo(e.metallicRoughnessTexture,e.metallicRoughnessTextureTransform)),s.pbrMetallicRoughness.metallicFactor=e.metallic,s.pbrMetallicRoughness.roughnessFactor=e.roughness}else s.pbrMetallicRoughness.metallicFactor=1,s.pbrMetallicRoughness.roughnessFactor=1,P().warnOnce("Meshes exported to GLTF without MeshMaterialMetallicRoughness material will appear different when imported back.");const i=this.gltf.materials.length;return this.gltf.materials.push(s),this._materialMap.push(e),i}_createTextureInfo(e,t){const s={index:this._addTexture(e)};return t?(s.extensions||(s.extensions={}),s.extensions.KHR_texture_transform={scale:t.scale,offset:t.offset,rotation:o(t.rotation)},s):s}_addTexture(e){const t=this.gltf.textures??[];return this.gltf.textures=t,i(this._textureMap,e,()=>{const s={sampler:this._addSampler(e),source:this._addImage(e)},r=t.length;return t.push(s),r})}_addImage(e){const t=this._imageMap.get(e);if(null!=t)return t;this.gltf.images||(this.gltf.images=[]);const s={};if(e.url)s.uri=e.url;else{const t=e.data;s.extras=t;for(let e=0;e<this.gltf.images.length;++e)if(t===this.gltf.images[e].extras)return e;const r=this.gltf.extras;switch(r.output.image){case 2:{const e=r.binChunkBuffer.addBufferView(j.UNSIGNED_BYTE,"SCALAR");if(S(t))null!=t.data&&e.writeOutToBuffer(t.data,0);else{const i=B(t,this.options.signal).then(({data:e,type:t})=>(s.mimeType=t,e));r.promises.push(e.writeAsync(i).then(()=>e.finalize()))}s.bufferView=e.index;break}case 1:if(S(t)){P().warnOnce("Image export for basis compressed textures not available.");break}s.uri=function(e){const t=L(e);return null!=t?t.toDataURL():""}(t);break;default:if(S(t)){P().warnOnce("Image export for basis compressed textures not available.");break}r.promises.push(B(t,this.options.signal).then(({data:e,type:t})=>{s.uri=e,s.mimeType=t}))}}const r=this.gltf.images.length;return this.gltf.images.push(s),this._imageMap.set(e,r),r}_addSampler(e){this.gltf.samplers||(this.gltf.samplers=[]);let t=10497,s=10497;if("string"==typeof e.wrap)switch(e.wrap){case"clamp":t=33071,s=33071;break;case"mirror":t=33648,s=33648}else{switch(e.wrap.vertical){case"clamp":s=33071;break;case"mirror":s=33648}switch(e.wrap.horizontal){case"clamp":t=33071;break;case"mirror":t=33648}}const r={wrapS:t,wrapT:s};for(let e=0;e<this.gltf.samplers.length;++e)if(JSON.stringify(r)===JSON.stringify(this.gltf.samplers[e]))return e;const i=this.gltf.samplers.length;return this.gltf.samplers.push(r),i}_addAccessor(e,t){this.gltf.accessors||(this.gltf.accessors=[]);const s={bufferView:e,byteOffset:t.byteOffset,componentType:t.componentType,count:t.count,type:t.type,min:t.min,max:t.max,name:t.name};t.normalized&&(s.normalized=!0);const r=this.gltf.accessors.length;return this.gltf.accessors.push(s),r}_addMeshVertexIndexed(e,t,s,r,i,o,n,a){const c=new Map;for(const h of t){if(e.startAccessor("INDICES"),h.faces)for(let t=0;t<h.faces.length;++t)e.push(h.faces[t]);const t=e.endAccessor(),l={attributes:{POSITION:r},indices:this._addAccessor(e.index,t),material:this._addMaterial(h.material)};i&&"flat"!==h.shading&&(l.attributes.NORMAL=i),o&&(l.attributes.TEXCOORD_0=o),n&&"flat"!==h.shading&&(l.attributes.TANGENT=n),a&&(l.attributes.COLOR_0=a);const f=c.get(h.name);if(f)f.primitives.push(l);else{const e={name:h.name,primitives:[l]};c.set(h.name,e),s.push(e)}}}_addMeshVertexNonIndexed(e,t,s,r,i,o,n){const a={primitives:[]};t.push(a);const c={attributes:{POSITION:s}};r&&(c.attributes.NORMAL=r),i&&(c.attributes.TEXCOORD_0=i),o&&(c.attributes.TANGENT=o),n&&(c.attributes.COLOR_0=n),e&&(c.material=this._addMaterial(e[0].material)),a.primitives.push(c)}}function F(e,t){if(null!=e)for(let s=1,r=2;s<e.length;s+=t,r+=t){const t=e[s],i=e[r];e[s]=i,e[r]=-t}}function k(e){return e**s}class G{constructor(e){this.mesh=e,this.name="",this.translation=g(),this.rotation=l(),this.scale=w(b),this._nodes=[]}addNode(e){if(this._nodes.includes(e))throw new Error("Node already added");this._nodes.push(e)}forEachNode(e){this._nodes.forEach(e)}set rotationAngles(e){a(this.rotation,e[0],e[1],e[2])}}class H{constructor(){this.name="",this._nodes=[]}addNode(e){if(this._nodes.includes(e))throw new Error("Node already added");this._nodes.push(e)}forEachNode(e){this._nodes.forEach(e)}}const W="model.gltf",Y="model.glb";async function Z(t,s){const r=new D(t,s).gltf,i=r.extras.promises;let o=1,n=1,a=null;await Promise.allSettled(i),e(s.signal);const c=s.jsonSpacing??4,h=new Map,l=JSON.stringify(r,(e,t)=>{if("extras"!==e){if(t instanceof ArrayBuffer){if(function(e){if(e.byteLength<8)return!1;const t=new Uint8Array(e);return 137===t[0]&&80===t[1]&&78===t[2]&&71===t[3]&&13===t[4]&&10===t[5]&&26===t[6]&&10===t[7]}(t))switch(s.output?.image){case 1:case 2:break;default:{const e=`img${n}.png`;return n++,h.set(e,t),e}}switch(s.output?.buffer){case 1:return function(e){const t=[],s=new Uint8Array(e);for(let e=0;e<s.length;e++)t.push(String.fromCharCode(s[e]));return"data:application/octet-stream;base64,"+btoa(t.join(""))}(t);case 2:if(a)throw new Error("Already encountered an ArrayBuffer, there should only be one in the GLB format.");return void(a=t);default:{const e=`data${o}.bin`;return o++,h.set(e,t),e}}}return t}},c);return 2===s.output?.buffer||2===s.output?.image?h.set(Y,new O(l,a).buffer):h.set(W,l),h}async function X(e,t){const s=new M,r=new H;return s.addScene(r),r.addNode(new G(e)),await async function(e,t){const s=(await Z(e,{output:{buffer:2,image:2},jsonSpacing:0,...t})).get(Y);if(!(s&&s instanceof ArrayBuffer))throw new Error("failed to export to glb");return s}(s,{origin:e.origin,...t})}export{Z as exportGLTF,Y as modelNameGlb,W as modelNameGltf,X as toBinaryGLTF};
