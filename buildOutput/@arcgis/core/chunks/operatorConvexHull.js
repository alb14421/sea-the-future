/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{G as e,S as t}from"./SimpleGeometryCursor.js";import{v as n,G as r,o,a as i,H as u,b as s,z as m}from"./Point2D.js";import{P as a}from"./Envelope.js";import{i as c,at as g,b as y,P as l,au as f,av as p,aw as x}from"./ProjectionTransformation.js";import{Envelope2D as C}from"./Envelope2D.js";class P extends e{constructor(e,t,n){super(),t||i(""),this.m_progressTracker=n,this.m_index=-1,this.m_bMerge=e,this.m_bDone=!1,this.m_inputGeometryCursor=t}getGeometryID(){return this.m_index}tock(){return!0}getRank(){return 1}next(){if(this.m_bMerge){if(!this.m_bDone){const e=G(this.m_inputGeometryCursor);return this.m_bDone=!0,e}return null}if(!this.m_bDone){const e=this.m_inputGeometryCursor.next();if(null!==e)return u(e),n(e),this.m_index=this.m_inputGeometryCursor.getGeometryID(),h(e);this.m_bDone=!0}return null}}function G(e,t){const r=new x;let o;for(;o=e.next();)u(o),n(o),r.addGeometry(o);return r.getBoundingGeometry()}function h(e,t){if(n(e),e.isEmpty())return e.createInstance();const i=e.getGeometryType();if(o(i)){const t=e;if(t.isDegenerate(0)){const e=new a;return t.queryStart(e),e}if(t.getGeometryType()===r.enumLine){const n=new a,r=new y({vd:e.getDescription()});return t.queryStart(n),r.startPathPoint(n),t.queryEnd(n),r.lineToPoint(n),r}{const n=new y({vd:e.getDescription()});return n.addSegment(t,!0),h(n)}}if(i===r.enumEnvelope){const t=e,n=new C;if(t.queryEnvelope(n),n.xmin===n.xmax&&n.ymin===n.ymax){const e=new a;return t.queryCornerByVal(0,e),e}if(n.xmin===n.xmax||n.ymin===n.ymax){const n=new a,r=new y({vd:e.getDescription()});return t.queryCornerByVal(0,n),r.startPathPoint(n),t.queryCornerByVal(1,n),r.lineToPoint(n),r}{const n=new l({vd:e.getDescription()});return n.addEnvelope(t,!1),n}}if(i===r.enumGeometryCollection)return G(f(e,-1));if(d(e)){if(i===r.enumMultiPoint){const t=e,n=new a;return t.getPointByVal(0,n),n}return e}return s(m(i)),p(e)}function d(e,t){if(n(e),e.isEmpty())return!0;const i=e.getGeometryType();if(i===r.enumPoint)return!0;if(i===r.enumEnvelope){const t=e;return t.getXMin()!==t.getXMax()&&t.getYMin()!==t.getYMax()}if(o(i)){const t=e;if(t.isDegenerate(0))return!1;if(i===r.enumLine)return!0;const n=new y;return n.addSegment(t,!0),d(n)}if(i===r.enumMultiPoint)return 1===e.getPointCount();if(i===r.enumPolyline){const t=e;return!t.hasNonLinearSegments()&&1===t.getPathCount()&&2===t.getPointCount()&&!t.getXY(0).equals(t.getXY(1))}if(i===r.enumGeometryCollection){const t=e;return 1===t.getGeometryCount()&&d(t.getGeometry(0))}const u=e;return!(1!==u.getPathCount()||u.getPointCount()<3)&&c(u,0)}const v=new class{getOperatorType(){return 10102}supportsCurves(){return!0}accelerateGeometry(e,t,n){return!1}canAccelerateGeometry(e){return!1}executeMany(e,t,n){return new P(t,e,n)}execute(e,t){return h(e)}isConvex(e,t){if(n(e),e.isEmpty())return!0;const i=e.getGeometryType();if(i===r.enumPoint)return!0;if(i===r.enumEnvelope){const t=e;return t.getXMin()!==t.getXMax()&&t.getYMin()!==t.getYMax()}if(o(i)){const t=e;return!t.getStartXY().equals(t.getEndXY())}if(i===r.enumMultiPoint)return 1===e.getPointCount();if(i===r.enumPolyline){const t=e;return 1===t.getPathCount()&&2===t.getPointCount()&&!t.getXY(0).equals(t.getXY(1))}if(i===r.enumGeometryCollection){const n=e;return 1===n.getGeometryCount()&&this.isConvex(n.getGeometry(0),t)}const u=e;return!(1!==u.getPathCount()||u.getPointCount()<3)&&c(u,0)}constructOrientedMinimumBoundingBox(e,t,n,r,o){g(e,t,n,r,o)}};function w(e){return v.execute(e,null)}function M(e,n){const r=v.executeMany(new t(e),n,null);return Array.from(r)}function D(e){return v.isConvex(e,null)}function _(){return v.supportsCurves()}export{M as a,w as e,D as i,_ as s};
