/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import r from"./Accessor.js";import{a as e}from"../chunks/handleUtils.js";import{createResolver as i,createAbortError as t,isAbortError as o}from"./promiseUtils.js";import{subclass as l}from"./accessorSupport/decorators/subclass.js";import"./lang.js";import"./Handles.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/maybe.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/Lifecycle.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"./accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import"../chunks/MapUtils.js";import"./Error.js";import"../chunks/watch.js";import"./scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/events.js";import"../chunks/Warning.js";class n{constructor(){this._resolver=i(),this._status=0,this._resolvingPromises=[],this._resolver.promise.then(()=>{this._status=1,this._cleanUp()},()=>{this._status=2,this._cleanUp()}),this.promise=this._resolver.promise}destroy(){this._cleanUp()}addResolvingPromise(s){this._resolvingPromises.push(s),this._tryResolve()}isResolved(){return 1===this._status}isRejected(){return 2===this._status}isFulfilled(){return 0!==this._status}abort(){this._resolver.reject(t())}_cleanUp(){this._allPromise=null,this._resolvingPromises=null}_tryResolve(){if(this.isFulfilled())return;const s=i(),r=[...this._resolvingPromises,s.promise],e=this._allPromise=Promise.all(r);e.then(()=>{this.isFulfilled()||this._allPromise!==e||this._resolver.resolve()},s=>{this.isFulfilled()||this._allPromise!==e||o(s)||this._resolver.reject(s)}),s.resolve()}}const h=r=>{const i=r;let t=class extends i{constructor(...s){super(...s),this._promiseProps=new n,this.addResolvingPromise(Promise.resolve())}destroy(){this._promiseProps.destroy()}isResolved(){return this._promiseProps.isResolved()}isRejected(){return this._promiseProps.isRejected()}isFulfilled(){return this._promiseProps.isFulfilled()}when(s,r){return this._promiseProps.promise.then(()=>this).then(s,r)}catch(s){return this.when(null,s)}addResolvingPromise(s){s&&!this._promiseProps.isFulfilled()&&this._promiseProps.addResolvingPromise("_promiseProps"in s?s.when():s)}addResolvingTask(s){s&&!this._promiseProps.isFulfilled()&&(this.addHandles(e(s)),this._promiseProps.addResolvingPromise(s.promise))}};return t=s([l("esri.core.Promise")],t),t},p=h(r);export{p as EsriPromise,h as EsriPromiseMixin};
