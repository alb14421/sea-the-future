/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import{clone as e}from"../core/lang.js";import{property as o}from"../core/accessorSupport/decorators/property.js";import"../chunks/Logger.js";import{e as r}from"../chunks/enumeration.js";import{subclass as t}from"../core/accessorSupport/decorators/subclass.js";import i from"./PointCloudRenderer.js";import{R as n}from"../chunks/RendererLegendOptions.js";import p from"../Color.js";import{JSONSupport as l}from"../core/JSONSupport.js";import{I as a}from"../chunks/ensureType.js";import{f as c}from"../chunks/fieldsMap.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../core/Error.js";import"../chunks/object.js";import"../config.js";import"../chunks/string.js";import"../chunks/MapUtils.js";import"../chunks/jsonMap.js";import"../chunks/Lifecycle.js";import"../chunks/tracking.js";import"../chunks/Warning.js";import"../chunks/PointSizeSplatAlgorithm.js";import"../core/Clonable.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/promiseUtils.js";import"../chunks/events.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/colorUtils.js";import"../chunks/mathUtils.js";var u;let m=u=class extends l{constructor(){super(...arguments),this.description=null,this.label=null,this.minValue=0,this.maxValue=0,this.color=null}clone(){return new u({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,color:e(this.color)})}};s([o({type:String,json:{write:!0}})],m.prototype,"description",void 0),s([o({type:String,json:{write:!0}})],m.prototype,"label",void 0),s([o({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue",isRequired:!0}}})],m.prototype,"minValue",void 0),s([o({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue",isRequired:!0}}})],m.prototype,"maxValue",void 0),s([o({type:p,json:{type:[a],write:{isRequired:!0}}})],m.prototype,"color",void 0),m=u=s([t("esri.renderers.support.pointCloud.ColorClassBreakInfo")],m);const d=m;var j;let h=j=class extends i{constructor(s){super(s),this.type="point-cloud-class-breaks",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.colorClassBreakInfos=null}clone(){return new j({...this.cloneProperties(),field:this.field,fieldTransformType:this.fieldTransformType,colorClassBreakInfos:e(this.colorClassBreakInfos),legendOptions:e(this.legendOptions)})}};s([r({pointCloudClassBreaksRenderer:"point-cloud-class-breaks"})],h.prototype,"type",void 0),s([o({json:{write:{isRequired:!0}},type:String})],h.prototype,"field",void 0),s([o({type:n,json:{write:!0}})],h.prototype,"legendOptions",void 0),s([o({type:c.apiValues,json:{type:c.jsonValues,read:c.read,write:c.write}})],h.prototype,"fieldTransformType",void 0),s([o({type:[d],json:{write:{isRequired:!0}}})],h.prototype,"colorClassBreakInfos",void 0),h=j=s([t("esri.renderers.PointCloudClassBreaksRenderer")],h);export{h as default};
