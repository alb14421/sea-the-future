/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import{s as o}from"../chunks/jsonMap.js";import{JSONSupport as t}from"../core/JSONSupport.js";import{clone as s}from"../core/lang.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"../chunks/Logger.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";import{a as n,P as l}from"../chunks/PointSizeSplatAlgorithm.js";import{e as p}from"../chunks/enumeration.js";import"../chunks/object.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/Lifecycle.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/promiseUtils.js";import"../core/Error.js";import"../config.js";import"../chunks/string.js";import"../chunks/events.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/ensureType.js";import"../chunks/MapUtils.js";import"../chunks/Warning.js";var u;let c=u=class extends t{constructor(){super(...arguments),this.field=null,this.minValue=0,this.maxValue=255}clone(){return new u({field:this.field,minValue:this.minValue,maxValue:this.maxValue})}};e([r({type:String,json:{write:{isRequired:!0}}})],c.prototype,"field",void 0),e([r({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}})],c.prototype,"minValue",void 0),e([r({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}})],c.prototype,"maxValue",void 0),c=u=e([i("esri.renderers.support.pointCloud.ColorModulation")],c);const a=c;var m;let d=m=class extends n{constructor(){super(...arguments),this.type="fixed-size",this.size=0,this.useRealWorldSymbolSizes=null}clone(){return new m({size:this.size,useRealWorldSymbolSizes:this.useRealWorldSymbolSizes})}};e([p({pointCloudFixedSizeAlgorithm:"fixed-size"})],d.prototype,"type",void 0),e([r({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}})],d.prototype,"size",void 0),e([r({type:Boolean,json:{write:!0}})],d.prototype,"useRealWorldSymbolSizes",void 0),d=m=e([i("esri.renderers.support.pointCloud.PointSizeFixedSizeAlgorithm")],d);const h={key:"type",base:n,typeMap:{"fixed-size":d,splat:l}},j=o()({pointCloudClassBreaksRenderer:"point-cloud-class-breaks",pointCloudRGBRenderer:"point-cloud-rgb",pointCloudStretchRenderer:"point-cloud-stretch",pointCloudUniqueValueRenderer:"point-cloud-unique-value"});let y=class extends t{constructor(e){super(e),this.type=void 0,this.pointSizeAlgorithm=null,this.colorModulation=null,this.pointsPerInch=10}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}cloneProperties(){return{pointSizeAlgorithm:s(this.pointSizeAlgorithm),colorModulation:s(this.colorModulation),pointsPerInch:s(this.pointsPerInch)}}};e([r({type:j.apiValues,readOnly:!0,nonNullable:!0,json:{type:j.jsonValues,read:!1,write:{writer:j.write,isRequired:!0}}})],y.prototype,"type",void 0),e([r({types:h,json:{write:!0}})],y.prototype,"pointSizeAlgorithm",void 0),e([r({type:a,json:{write:!0}})],y.prototype,"colorModulation",void 0),e([r({json:{write:!0},nonNullable:!0,type:Number})],y.prototype,"pointsPerInch",void 0),y=e([i("esri.renderers.PointCloudRenderer")],y);export{y as default};
