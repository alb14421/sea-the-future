/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{l as s,i as r,p as t}from"../../../chunks/pe.js";import o from"./GeographicTransformation.js";import n from"./GeographicTransformationStep.js";import"../../../chunks/assets.js";import"../../../config.js";import"../../../core/lang.js";import"../../../chunks/object.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../core/Error.js";import"../../../chunks/Logger.js";import"../../../chunks/string.js";import"../../../chunks/jsonUtils.js";import"../../../chunks/MapUtils.js";import"../../../core/promiseUtils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/events.js";import"../../../chunks/maybe.js";import"../../../chunks/persistableUrlUtils.js";import"../../../chunks/tslib.es6.js";import"../../../core/Accessor.js";import"../../../core/Handles.js";import"../../../core/accessorSupport/decorators/subclass.js";import"../../../chunks/Lifecycle.js";import"../../../chunks/metadata.js";import"../../../chunks/utils.js";import"../../../chunks/tracking.js";import"../../../chunks/ensureType.js";import"../../../chunks/Warning.js";import"../../../chunks/get.js";import"../../../chunks/ObjectPool.js";import"../../../chunks/ObservableBase.js";import"../../../core/accessorSupport/decorators/property.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../chunks/SetUtils.js";import"../../../chunks/SimpleTrackingTarget.js";let e,i,c,p;function m(){return!!e&&r()}async function u(){if(!m()){const[r,o,n,m]=await Promise.all([import("../../../chunks/Envelope2D.js"),import("../../../chunks/ProjectionTransformation.js").then(s=>s.bn).then(({queryTransformationList:s})=>s),import("../../../chunks/ProjectionTransformation.js").then(s=>s.bj).then(({injectPe:s})=>s),import("../../../chunks/apiConverter.js"),s()]);p=r.Envelope2D.constructEmpty(),e=o,n(t),i=m.fromExtent,c=m.fromSpatialReference}}function j(s,r,t=null){const o=t?i(t).asEnvelope2D():p,n=e(0,c(s),c(r),o,1,!0);return n.length>0?h(n[0]):null}function a(s,r,t=null){const o=t?i(t).asEnvelope2D():p;return e(0,c(s),c(r),o,0,!0).map(s=>h(s))}function h(s){const r=new o;for(let t=0;t<s.count();t++){const o=s.getStep(t);r.steps.push(new n({wkid:o.getID(),isInverse:o.isInverted()}))}return r}export{j as getTransformation,a as getTransformations,m as isLoaded,u as load};
