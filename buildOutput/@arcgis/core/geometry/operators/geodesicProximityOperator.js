/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{c as t}from"../../chunks/unitUtils.js";import{l as e,p as s,i as r}from"../../chunks/pe.js";import"../../core/lang.js";import"../../chunks/jsonMap.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/assets.js";import"../../config.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../core/Error.js";import"../../chunks/Logger.js";import"../../chunks/jsonUtils.js";import"../../chunks/MapUtils.js";import"../../core/promiseUtils.js";import"../../chunks/handleUtils.js";import"../../chunks/events.js";import"../../chunks/maybe.js";import"../../chunks/persistableUrlUtils.js";let i,n,o,c,m,a,u;function p(){return!!i&&r()}async function j(){if(!p()){const[t,r]=await Promise.all([import("../../chunks/OperatorProximityGeodesic.js"),import("../../chunks/ProjectionTransformation.js").then(t=>t.bj).then(({injectPe:t})=>t),e()]);i=new t.OperatorProximityGeodesic,r(s)}}function l(){return!!n&&p()}async function f(){if(!l()){const[t,e]=await Promise.all([import("../../chunks/apiConverter.js"),import("../../chunks/proximityResult.js"),j()]);n=t.fromGeometry,o=t.fromPoint,c=t.fromSpatialReference,m=t.getSpatialReference,a=e.toProximityResult,u=i.supportsCurves()}}function h(e,s,r={}){let{calculateLeftRightSide:u=!1,maxDeviation:p=NaN,testPolygonInterior:j=!0,unit:l}=r;l&&p&&(p=t(p,l,"meters"));const f=m(e),h=function(t,e,s,r,n,o){return i.getNearestCoordinate(t,e,s,r,n,o)}(n(e),o(s).getXY(),c(f),p,j,u);return l&&h.m_distance&&(h.m_distance=t(h.m_distance,"meters",l)),a(h,e,u)}function k(e,s,r={}){const{unit:u}=r,p=m(e),j=function(t,e,s){return i.getNearestVertex(t,e,s)}(n(e),o(s).getXY(),c(p));return u&&j.m_distance&&(j.m_distance=t(j.m_distance,"meters",u)),a(j,e)}function d(e,s,r,u,p={}){const{unit:j}=p;j&&r&&(r=t(r,j,"meters"));const l=m(e);return function(t,e,s,r,n){return i.getNearestVertices(t,e,s,r,n)}(n(e),o(s).getXY(),c(l),r,u).map(s=>(j&&s.m_distance&&(s.m_distance=t(s.m_distance,"meters",j)),a(s,e)))}export{h as getNearestCoordinate,k as getNearestVertex,d as getNearestVertices,l as isLoaded,f as load,u as supportsCurves};
