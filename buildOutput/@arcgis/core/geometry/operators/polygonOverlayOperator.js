/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{O as t,S as s}from"../../chunks/SimpleGeometryCursor.js";import{a as e,v as i,G as r,V as o,b as n}from"../../chunks/Point2D.js";import{Envelope2D as h}from"../../chunks/Envelope2D.js";import{c as m}from"../../chunks/Envelope.js";import{E as a,aX as p,C as c,k as u,j as l,aQ as _,l as g,aO as d,aP as k,n as j,aM as G,aY as y,aZ as C,a_ as f}from"../../chunks/ProjectionTransformation.js";import{getSpatialReference as x,fromSpatialReference as I,fromPolygon as S,toPolygon as v}from"../../chunks/apiConverter.js";import"../../chunks/Transformation2D.js";import"../../chunks/tslib.es6.js";import"../../chunks/OperatorDefinitions.js";import"../Extent.js";import"../../chunks/string.js";import"../../chunks/object.js";import"../../core/lang.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../core/Error.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Lifecycle.js";import"../../chunks/tracking.js";import"../../chunks/Warning.js";import"../Geometry.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../chunks/events.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/reader.js";import"../SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/jsonUtils.js";import"../../chunks/persistableUrlUtils.js";import"../../chunks/writer.js";import"../Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../support/webMercatorUtils.js";import"../Multipoint.js";import"../../chunks/zmUtils.js";import"../Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../Polyline.js";import"../../chunks/jsonConverter.js";function P(t){t&&t.checkProgress()}class F extends t{constructor(t,s,i,r){super(),this.m_shape=null,this.m_topoGraph=null,this.m_curveStitcher=null,this.m_stitchMaxDeviation=0,this.m_chainStack=[],this.m_bitsetToChains=null,this.m_chainsLists=null,this.m_visitedChainsIndex=-1,this.m_index=-1,this.m_geometryIndex=-1,this.m_progressCounter=0,this.m_currentIds=[],this.m_currentEdgeIds=[],t||e(""),this.m_progressTracker=r,this.m_options=0!==i?i:3,(this.m_options<=0||this.m_options>63)&&e("options"),this.m_inputGeometryCursor=t,this.m_sr=s}tock(){return!0}getRank(){return 1}next(){if(-1===this.m_index){this.m_shape=new a;const t=new h;t.setEmpty(),this.m_geometryIndex=this.m_shape.createGeometryUserIndex();for(let s=this.m_inputGeometryCursor.next();null!==s;s=this.m_inputGeometryCursor.next()){i(s);const o=this.m_shape.addGeometry(s);s.getGeometryType()!==r.enumPolygon&&e("Polygon Overlay only supports Polygons"),this.m_shape.setGeometryUserIndex(o,this.m_geometryIndex,this.m_inputGeometryCursor.getGeometryID());const n=this.m_inputGeometryCursor.getRank();n>p&&this.m_shape.assignRankToGeometryVertices(o,n);const m=new h;s.queryLooseEnvelope(m),t.mergeEnvelope2D(m),P(this.m_progressTracker)}this.m_inputGeometryCursor=null;const s=m(this.m_sr,t,!0),o=m(this.m_sr,t,!1);t.inflate(10*s.total()),this.m_shape.forceSetEnvelope2D(t),this.m_stitchMaxDeviation=0;let n=0;if(this.m_shape.hasCurves()){this.m_curveStitcher=new c;const e=u(s.total(),t);this.m_stitchMaxDeviation=l(s.total()),n=_(e,this.m_stitchMaxDeviation),g(this.m_shape,e,s.total(),12e3,this.m_curveStitcher,null,this.m_progressTracker)}if(d(this.m_shape,o,this.m_progressTracker)){k(this.m_shape,s.add(n),this.m_progressTracker,!0,!1);for(let t=this.m_shape.getFirstGeometry();t!==j;t=this.m_shape.getNextGeometry(t))this.m_shape.getGeometryType(t)===r.enumPolygon&&G(this.m_shape,t,-1,!1,j,this.m_progressTracker)}this.m_topoGraph=new y,this.m_topoGraph.buildGeometryParentageSets(),this.m_topoGraph.setEditShape(this.m_shape,this.m_progressTracker);const f=this.m_topoGraph.getFirstChain();for(let t=this.m_topoGraph.getChainFirstIsland(f);t!==j;t=this.m_topoGraph.getChainNextInParent(t))for(let s=this.m_topoGraph.getChainFirstIsland(t);s!==j;s=this.m_topoGraph.getChainNextInParent(s))this.m_chainStack.push(s);if(16&this.m_options){this.m_visitedChainsIndex=this.m_topoGraph.createUserIndexForChains(),this.m_bitsetToChains=new Map,this.m_chainsLists=new C;const t=[],s=this.m_topoGraph.getFirstChain();for(t.push(s);t.length>0;){const s=t.at(-1);t.pop();for(let e=this.m_topoGraph.getChainFirstIsland(s);e!==j;e=this.m_topoGraph.getChainNextInParent(e))for(let s=this.m_topoGraph.getChainFirstIsland(e);s!==j;s=this.m_topoGraph.getChainNextInParent(s)){const e=this.m_topoGraph.getChainBitSet(s);if(null!==e&&!e.isZero()){let t;this.m_bitsetToChains.has(e)?t=this.m_bitsetToChains.get(e):(t=this.m_chainsLists.createList(),this.m_bitsetToChains.set(e,t)),this.m_chainsLists.addElement(t,s)}t.push(s)}}}}return this.makeNextGeometry()}getGeometryID(){return this.m_index}getGeometryIDs(){return this.m_currentIds.slice()}getBoundaryIDs(){return this.m_currentEdgeIds.slice()}buildIdsFromBitset(t,s){if(!t)return;const e=this.m_topoGraph.getGeometriesFromBits(t);if(e.length>0){for(let t=0,i=e.length;t<i;t++)s.push(this.m_shape.getGeometryUserIndex(e[t],this.m_geometryIndex));o(s)}}makeGeometryFromChainSinglePart(t){this.m_index++;const s=new a;null!==this.m_curveStitcher&&s.setCurveStitcherPointer(this.m_curveStitcher);const e=this.m_topoGraph.extractPolygonFromChainAndIslands(s,j,t,j);return null!==this.m_curveStitcher&&this.m_curveStitcher.stitchCurves(s,e,this.m_stitchMaxDeviation,!1),s.getGeometry(e)}makeGeometryFromChainMultiPart(t,s){this.m_index++;const e=new a;null!==this.m_curveStitcher&&e.setCurveStitcherPointer(this.m_curveStitcher);const i=this.m_bitsetToChains.has(s);n(i);const r=this.m_bitsetToChains.get(s);let o=j;for(let t=this.m_chainsLists.getFirst(r);t!==C.st_nullNode();t=this.m_chainsLists.getNext(t)){const s=this.m_chainsLists.getElement(t);o=this.m_topoGraph.extractPolygonFromChainAndIslands(e,o,s,j),this.m_topoGraph.setChainUserIndex(s,this.m_visitedChainsIndex,1)}return null!==this.m_curveStitcher&&this.m_curveStitcher.stitchCurves(e,o,this.m_stitchMaxDeviation,!1),e.getGeometry(o)}makeNextGeometry(){for(P(this.m_progressTracker);this.m_chainStack.length>0;){this.m_currentIds.length=0,this.m_currentEdgeIds.length=0;const t=this.m_chainStack.at(-1);this.m_chainStack.pop();const s=this.m_topoGraph.getChainArea(t);if(0!==s)if(s<0)for(let s=this.m_topoGraph.getChainFirstIsland(t);s!==j;s=this.m_topoGraph.getChainNextInParent(s))this.m_topoGraph.getChainArea(s)>0&&this.m_chainStack.push(s);else{for(let s=this.m_topoGraph.getChainFirstIsland(t);s!==j;s=this.m_topoGraph.getChainNextInParent(s))this.m_topoGraph.getChainArea(s)<0&&this.m_chainStack.push(s);if(-1!==this.m_visitedChainsIndex&&1===this.m_topoGraph.getChainUserIndex(t,this.m_visitedChainsIndex))continue;const s=t=>{const s=t.getUnorderedBitIterator();let e=0;for(;s.next()!==f.npos();)if(e++,e>1)return e;return e},e=s(this.m_topoGraph.getChainBitSet(t));if(e>0){if(1===e&&2&this.m_options||e>1&&1&this.m_options){const s=this.m_topoGraph.getChainBitSet(t);return this.buildIdsFromBitset(s,this.m_currentIds),16&this.m_options?this.makeGeometryFromChainMultiPart(t,s):this.makeGeometryFromChainSinglePart(t)}}else{if(!(12&~this.m_options)){if(32&this.m_options){const s=this.m_topoGraph.getChainBoundaryBitSet(t);this.buildIdsFromBitset(s,this.m_currentEdgeIds)}return this.makeGeometryFromChainSinglePart(t)}if(4&this.m_options){const e=this.m_topoGraph.getChainBoundaryBitSet(t);if(s(e)>1)return 32&this.m_options&&this.buildIdsFromBitset(e,this.m_currentEdgeIds),this.makeGeometryFromChainSinglePart(t);continue}if(8&this.m_options){const e=this.m_topoGraph.getChainBoundaryBitSet(t);if(1===s(e))return 32&this.m_options&&this.buildIdsFromBitset(e,this.m_currentEdgeIds),this.makeGeometryFromChainSinglePart(t);continue}}}}return null}}const T=new class{getOperatorType(){return 10012}accelerateGeometry(t,s,e){return!1}canAccelerateGeometry(t){return!1}supportsCurves(){return!0}executeMany(t,s,e,i){return new F(t,s,e,i)}};function b(t,e){const{overlaps:i=!0,noOverlaps:r=!0,gaps:o,holes:n,multiPart:h}=e??{};let m=0;i&&(m|=1),r&&(m|=2),o&&(m|=4),n&&(m|=8),h&&(m|=16);const a=x(t),p=function(t,e,i){return T.executeMany(new s(t),e,i,null)}(t.map(S),I(a),m),c=[],u=[];let l;for(;l=p.next();)c.push(v(l,a)),u.push(p.getGeometryIDs());return{results:c,ids:u}}const U=T.supportsCurves();export{b as executeMany,U as supportsCurves};
