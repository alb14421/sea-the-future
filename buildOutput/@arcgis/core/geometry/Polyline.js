/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import{clone as s}from"../core/lang.js";import{property as e}from"../core/accessorSupport/decorators/property.js";import"../chunks/Logger.js";import{subclass as r}from"../core/accessorSupport/decorators/subclass.js";import{w as i}from"../chunks/writer.js";import o from"./Extent.js";import n from"./Geometry.js";import a from"./Point.js";import h from"./SpatialReference.js";import{g as p}from"../chunks/extentUtils.js";import{u as c}from"../chunks/zmUtils.js";import"../chunks/ensureType.js";import"../chunks/MapUtils.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../core/Error.js";import"../chunks/object.js";import"../config.js";import"../chunks/string.js";import"../chunks/Lifecycle.js";import"../chunks/tracking.js";import"../chunks/Warning.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../chunks/pe.js";import"../chunks/assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../chunks/jsonUtils.js";import"../core/promiseUtils.js";import"../chunks/events.js";import"../chunks/maybe.js";import"../chunks/persistableUrlUtils.js";import"./support/webMercatorUtils.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/reader.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/boundsUtils.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";var u;let l=u=class extends n{constructor(t){super(function(t){if(!t)return;let{paths:s,hasM:e,hasZ:r,spatialReference:i}=t;var o;switch(s??=[],o=s,"number"==typeof o[0]?.[0]&&(s=[s]),s[0]?.[0]?.length){case 4:r??=!0,e??=!0;break;case 3:r??=!0!==e,e??=!r;break;default:r??=!1,e??=!1}return i??=h.WGS84,{...t,hasM:e,hasZ:r,paths:s,spatialReference:i}}(t)),this.curvePaths=void 0,this.paths=[],this.type="polyline"}get cache(){return this.commitProperty("curvePaths"),this.commitProperty("hasM"),this.commitProperty("hasZ"),this.commitProperty("paths"),this.commitProperty("spatialReference"),{}}writeCurvePaths(t,e){e.curvePaths=s(t)}get extent(){const t=p(this),{spatialReference:s}=this;return t?new o({...t,spatialReference:s}):null}writePaths(t,e){e.paths=s(this.paths)}addPath(t){if(!t)return;const s=this.paths,e=s.length;if(function(t){return!Array.isArray(t[0])}(t)){const r=[];for(let s=0,e=t.length;s<e;s++)r[s]=t[s].toArray();s[e]=r}else s[e]=t.slice();return this.notifyChange("paths"),this}clone(){const t=new u;return t.spatialReference=this.spatialReference,t.paths=s(this.paths),t.curvePaths=s(this.curvePaths),t.hasZ=this.hasZ,t.hasM=this.hasM,t}getPoint(t,s){if(!this._validateInputs(t,s))return null;const e=this.paths[t][s],r=this.hasZ,i=this.hasM;return r&&!i?new a(e[0],e[1],e[2],void 0,this.spatialReference):i&&!r?new a(e[0],e[1],void 0,e[2],this.spatialReference):r&&i?new a(e[0],e[1],e[2],e[3],this.spatialReference):new a(e[0],e[1],this.spatialReference)}insertPoint(t,s,e){return this._validateInputs(t,s,!0)?(c(this,e),Array.isArray(e)||(e=e.toArray()),this.paths[t].splice(s,0,e),this.notifyChange("paths"),this):this}removePath(t){if(!this._validateInputs(t,null))return null;const s=this.paths.splice(t,1)[0],e=this.spatialReference,r=s.map(t=>new a(t,e));return this.notifyChange("paths"),r}removePoint(t,s){if(!this._validateInputs(t,s))return null;const e=new a(this.paths[t].splice(s,1)[0],this.spatialReference);return this.notifyChange("paths"),e}setPoint(t,s,e){return this._validateInputs(t,s)?(c(this,e),Array.isArray(e)||(e=e.toArray()),this.paths[t][s]=e,this.notifyChange("paths"),this):this}_validateInputs(t,s,e=!1){if(null==t||t<0||t>=this.paths.length)return!1;if(null!=s){const r=this.paths[t];if(e&&(s<0||s>r.length))return!1;if(!e&&(s<0||s>=r.length))return!1}return!0}toJSON(t){return this.write({},t)}};t([e({readOnly:!0})],l.prototype,"cache",null),t([e({json:{write:!0,origins:{"portal-item":{write:!1},"web-map":{write:!1},"web-scene":{write:!1}}}})],l.prototype,"curvePaths",void 0),t([i("curvePaths")],l.prototype,"writeCurvePaths",null),t([e({readOnly:!0})],l.prototype,"extent",null),t([e({type:[[[Number]]],json:{write:{isRequired:!0}}})],l.prototype,"paths",void 0),t([i("paths")],l.prototype,"writePaths",null),l=u=t([r("esri.geometry.Polyline")],l);const m=l;l.prototype.toJSON.isDefaultToJSON=!0;export{m as default};
