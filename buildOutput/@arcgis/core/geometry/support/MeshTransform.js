/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{ClonableMixin as s}from"../../core/Clonable.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{f as e,i as n,e as a}from"../../chunks/mat4.js";import{c}from"../../chunks/mat4f64.js";import{s as p}from"../../chunks/quat.js";import{c as m}from"../../chunks/quatf64.js";import{c as l,a as u,f as h,b as j}from"../../chunks/vec3f64.js";import{u as k,f,a as g,b,c as y}from"../../chunks/axisAngleDegrees.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/object.js";import"../../chunks/events.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/Warning.js";import"../../chunks/common.js";import"../../chunks/vec3.js";import"../../chunks/vec4.js";import"../../chunks/mathUtils.js";let x=class extends(s(o)){constructor(t){super(t),this.translation=l(),this.rotationAxis=u(k),this.rotationAngle=0,this.scale=h(1,1,1)}get rotation(){return f(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=j(g(t)),this.rotationAngle=b(t)}get localMatrix(){const t=c();return p(d,g(this.rotation),y(this.rotation)),e(t,d,this.translation,this.scale),t}get localMatrixInverse(){return n(c(),this.localMatrix)}equals(t){return this===t||null!=t&&a(this.localMatrix,t.localMatrix)}};t([r({type:[Number],nonNullable:!0,json:{write:!0}})],x.prototype,"translation",void 0),t([r({type:[Number],nonNullable:!0,json:{write:!0}})],x.prototype,"rotationAxis",void 0),t([r({type:Number,nonNullable:!0,json:{write:!0}})],x.prototype,"rotationAngle",void 0),t([r({type:[Number],nonNullable:!0,json:{write:!0}})],x.prototype,"scale",void 0),t([r()],x.prototype,"rotation",null),t([r()],x.prototype,"localMatrix",null),t([r()],x.prototype,"localMatrixInverse",null),x=t([i("esri.geometry.support.MeshTransform")],x);const d=m();export{x as default};
