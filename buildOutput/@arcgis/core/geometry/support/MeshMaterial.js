/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import o from"../../Color.js";import{ClonableMixin as s}from"../../core/Clonable.js";import{JSONSupport as t}from"../../core/JSONSupport.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import n from"./MeshTexture.js";import p from"./MeshTextureTransform.js";import{g as l,a as m}from"../../chunks/meshCloneUtils.js";import"../../chunks/colorUtils.js";import"../../chunks/mathUtils.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/events.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/Warning.js";import"../../chunks/imageUtils.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/jsonUtils.js";import"../../chunks/persistableUrlUtils.js";import"../../chunks/reader.js";import"../../chunks/writer.js";let u=class extends(s(t)){constructor(r){super(r),this.color=null,this.colorTexture=null,this.colorTextureTransform=null,this.normalTexture=void 0,this.normalTextureTransform=void 0,this.alphaMode="auto",this.alphaCutoff=.5,this.doubleSided=!0}clone(r){const o=l(r),s=o?.materialMap?.get(this);if(s)return s;const t=super.clone(m(r));return o?.materialMap?.set(this,t),t}get memoryUsage(){return this.getMemoryUsage()}getMemoryUsage(){let r=0;return r+=null!=this.color?16:0,null!=this.colorTexture&&(r+=this.colorTexture.memoryUsage),r+=null!=this.colorTextureTransform?20:0,null!=this.normalTexture&&(r+=this.normalTexture.memoryUsage),r+=null!=this.normalTextureTransform?20:0,r}};r([e({type:o,json:{write:!0}})],u.prototype,"color",void 0),r([e({type:n,json:{write:!0}})],u.prototype,"colorTexture",void 0),r([e({type:p,json:{write:!0}})],u.prototype,"colorTextureTransform",void 0),r([e({type:n,json:{write:!0}})],u.prototype,"normalTexture",void 0),r([e({type:p,json:{write:!0}})],u.prototype,"normalTextureTransform",void 0),r([e({nonNullable:!0,json:{write:!0}})],u.prototype,"alphaMode",void 0),r([e({nonNullable:!0,json:{write:!0}})],u.prototype,"alphaCutoff",void 0),r([e({nonNullable:!0,json:{write:!0}})],u.prototype,"doubleSided",void 0),u=r([i("esri.geometry.support.MeshMaterial")],u);export{u as default};
