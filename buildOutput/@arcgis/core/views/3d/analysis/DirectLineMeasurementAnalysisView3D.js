/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import e from"../../../core/Accessor.js";import"../../../core/lang.js";import{d as i,a as s}from"../../../chunks/maybe.js";import{property as n}from"../../../core/accessorSupport/decorators/property.js";import{L as o}from"../../../chunks/Logger.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import{g as a}from"../../../chunks/getDefaultUnitForView.js";import{A as l}from"../../../chunks/AnalysisView3D.js";import{t as u}from"../../../chunks/quantityUtils.js";import{watch as c,syncAndInitial as p,initial as h,when as m}from"../../../core/reactiveUtils.js";import{a9 as d,aa as g,b as y,c as v}from"../../../chunks/unitUtils.js";import{a as j,l as _,O as b,L as f}from"../../../chunks/LineVisualElement.js";import{f as w,l as k}from"../../../chunks/geodesicLengthMeasurementUtils.js";import"../../../intl.js";import{n as P,u as L,k as S,f as C,m as M,j as V}from"../../../chunks/colorUtils2.js";import{t as D,e as E}from"../../../chunks/mathUtils.js";import{c as O,e as A,g as x,h as z,i as T}from"../../../chunks/quantityFormatUtils.js";import{g as U,f as R}from"../../../chunks/screenUtils.js";import{g as H}from"../../../chunks/vec2.js";import{k as G,n as I,h as F,c as B,x as W,t as q,e as Q,s as N,b as $,i as J,j as X}from"../../../chunks/vec3.js";import{c as Y}from"../../../chunks/vec3f64.js";import{r as Z}from"../../../chunks/SnappingManager.js";import{L as K,m as tt}from"../../../chunks/LabelVisualElement.js";import et from"../../../core/Handles.js";import{c as it}from"../../../chunks/mat4f64.js";import{c as st}from"../../../chunks/vec4.js";import{f as nt,c as ot}from"../../../chunks/vec4f64.js";import{s as rt}from"../../../chunks/vector.js";import{h as at}from"../../../chunks/cameraUtils.js";import{a as lt}from"../webgl.js";import{c as ut,b as ct}from"../../../chunks/graphicUtils.js";import{F as pt,i as ht}from"../../../chunks/Emissions.glsl.js";import{a as mt,i as dt,k as gt,R as yt,v as vt,x as jt,D as _t,M as bt,W as ft,A as wt}from"../../../chunks/Matrix4PassUniform.js";import{n as kt}from"../../../chunks/InterleavedLayout.js";import{g as Pt}from"../../../chunks/glsl.js";import{S as Lt}from"../../../chunks/ShaderBuilder.js";import{a as St}from"../../../chunks/AlphaCutoff.js";import{a as Ct}from"../../../chunks/enums.js";import{m as Mt,d as Vt,a as Dt}from"../../../chunks/renderState.js";import{R as Et,S as Ot}from"../../../chunks/SnappingVisualizer3D.js";import{G as At,E as xt}from"../../../chunks/Segment.js";import{c as zt}from"../../../chunks/lineStippleUtils.js";import{g as Tt}from"../../../chunks/geodesicMeasurementUtils.js";import{o as Ut}from"../../../chunks/locale.js";import{f as Rt}from"../../../chunks/messages.js";import{m as Ht}from"../../../chunks/memoize.js";import{U as Gt}from"../../../chunks/UpdatingHandles.js";import It from"../../../geometry/Point.js";import{c as Ft}from"../../../chunks/hydratedFeatures.js";import{i as Bt}from"../../../chunks/measurementUtils.js";import{h as Wt,c as qt}from"../../../chunks/dragEventPipeline3D.js";import Qt from"../../../Color.js";import{f as Nt}from"../../../chunks/lineSegment.js";import{M as $t,b as Jt,R as Xt}from"../../../chunks/RenderObject.js";import{L as Yt}from"../../../chunks/LaserlineVisualElement.js";import{g as Zt}from"../../../chunks/ElevationProvider.js";import{A as Kt,c as te,r as ee,s as ie}from"../../../chunks/analysisViewUtils.js";import{E as se,a as ne,c as oe}from"../../../chunks/EditGeometryOperations.js";import{c as re,g as ae}from"../../../chunks/dragEventPipeline.js";import{S as le}from"../../../chunks/SnappingContext.js";import{c as ue}from"../../../chunks/SnappingDragPipelineStep.js";import{a as ce}from"../../../chunks/SnappingManagerPool.js";import{a as pe}from"../../../chunks/constraints.js";import{c as he}from"../../../chunks/screenUtils2.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/Lifecycle.js";import"../../../chunks/metadata.js";import"../../../chunks/ObjectPool.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/tracking.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../core/promiseUtils.js";import"../../../core/Error.js";import"../../../chunks/object.js";import"../../../config.js";import"../../../chunks/string.js";import"../../../chunks/events.js";import"../../../chunks/SetUtils.js";import"../../../chunks/SimpleTrackingTarget.js";import"../../../chunks/ensureType.js";import"../../../chunks/MapUtils.js";import"../../../chunks/Warning.js";import"../../../portal/Portal.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../chunks/jsonUtils.js";import"../../../request.js";import"../../../chunks/persistableUrlUtils.js";import"../../../core/JSONSupport.js";import"../../../core/Loadable.js";import"../../../core/Promise.js";import"../../../chunks/reader.js";import"../../../geometry/Extent.js";import"../../../geometry/Geometry.js";import"../../../geometry/SpatialReference.js";import"../../../chunks/writer.js";import"../../../chunks/jsonMap.js";import"../../../chunks/pe.js";import"../../../chunks/assets.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../portal/PortalGroup.js";import"../../../portal/PortalQueryParams.js";import"../../../portal/PortalQueryResult.js";import"../../../portal/PortalUser.js";import"../../../portal/PortalFolder.js";import"../../../chunks/projectionUtils.js";import"../../../chunks/SimpleObservable.js";import"../../../geometry/Multipoint.js";import"../../../chunks/zmUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/coordsUtils.js";import"../../../chunks/extentUtils.js";import"../../../chunks/boundsUtils.js";import"../../../chunks/aaBoundingRect.js";import"../../../geometry/Polyline.js";import"../../../chunks/projectBuffer.js";import"../../../chunks/geodesicConstants.js";import"../../../chunks/projectXYZToVector.js";import"../../../geometry/support/GeographicTransformation.js";import"../../../geometry/support/GeographicTransformationStep.js";import"../../../chunks/zscale.js";import"../../../chunks/mat4.js";import"../../../chunks/common.js";import"../../../chunks/VisualElement.js";import"../../../chunks/RibbonLineMaterial.js";import"../../../chunks/sphere.js";import"../../../chunks/ray.js";import"../../../chunks/mat3.js";import"../../../chunks/mat3f64.js";import"../../../chunks/mathUtils2.js";import"../../../chunks/BufferView.js";import"../../../chunks/vec2f64.js";import"../../../core/Evented.js";import"../../../chunks/Octree.js";import"../../../chunks/frustum.js";import"../../../chunks/plane.js";import"../../../chunks/sdfPrimitives.js";import"../../../chunks/floatRGBA.js";import"../../../chunks/Texture.js";import"../../../chunks/line.js";import"../../../chunks/DoubleArray.js";import"../../../chunks/Indices.js";import"../../../chunks/orientedBoundingBox.js";import"../../../chunks/quat.js";import"../../../chunks/quatf64.js";import"../../../chunks/spatialReferenceEllipsoidUtils.js";import"../../../chunks/computeTranslationToOriginAndRotation.js";import"../../../chunks/projectVectorToVector.js";import"../../../chunks/projectPointToVector.js";import"../../../chunks/dehydratedPoint.js";import"../../../geometry/operators/geodeticLengthOperator.js";import"../../../chunks/geodeticCurveType.js";import"../../../geometry/support/geodesicUtils.js";import"../../../chunks/date.js";import"../../../chunks/constants.js";import"../../../chunks/datetime.js";import"../../../chunks/number.js";import"../../../chunks/substitute.js";import"../../../chunks/Cyclical.js";import"../../../chunks/unitFormatUtils.js";import"../../../chunks/asyncUtils.js";import"../../../chunks/elevationInfoUtils.js";import"../../../chunks/unitConversionUtils.js";import"../../../chunks/lengthUtils.js";import"../../../chunks/normalizedPoint.js";import"../../../chunks/Settings.js";import"../../interactive/snapping/SnappingOptions.js";import"../../../core/Collection.js";import"../../../chunks/shared.js";import"../../interactive/snapping/FeatureSnappingLayerSource.js";import"../../../chunks/colorUtils.js";import"../../../chunks/RightAngleSnappingHint.js";import"../../../chunks/projector.js";import"../../../chunks/sanitizerUtils.js";import"../../../chunks/TextOverlayItem.js";import"../../../Camera.js";import"../../../CameraLayout.js";import"../../../core/Clonable.js";import"../../../chunks/projectVectorToPoint.js";import"../../../chunks/earthUtils.js";import"../../../chunks/spatialReferenceSupport.js";import"../webgl/RenderCamera.js";import"../../../chunks/Intersector2.js";import"../../../chunks/HUDIntersectorResult.js";import"../../../chunks/vec3f32.js";import"../../../chunks/aaBoundingBox.js";import"../../../chunks/meshVertexSpaceUtils.js";import"../../../geometry/support/MeshGeoreferencedVertexSpace.js";import"../../../chunks/enumeration.js";import"../../../geometry/support/MeshLocalVertexSpace.js";import"../../../chunks/triangle.js";import"../../../chunks/boundedPlane.js";import"../../../chunks/guards.js";import"../../../chunks/debugFlags2.js";import"../../../chunks/videoUtils.js";import"../../../chunks/requestImageUtils.js";import"../../../chunks/types.js";import"../../../chunks/VertexElementDescriptor.js";import"../../../chunks/VertexAttributeLocations.js";import"../../../chunks/ExtendedLineVisualElement.js";import"../../../chunks/EngineVisualElement.js";import"../../../core/Identifiable.js";import"../../../chunks/RenderGeometry.js";import"../../../chunks/GridLocalOriginFactory.js";import"../../../chunks/CameraSpace.glsl.js";import"../webgl/RenderNode.js";import"../../../chunks/SceneLighting.js";import"../../../chunks/HighlightDefaults.js";import"../../../chunks/VertexArrayObject2.js";import"../../../chunks/VertexArrayObject.js";import"../../../chunks/memoryEstimations.js";import"../../../chunks/BufferObject.js";import"../../../chunks/VertexBuffer.js";import"../../../chunks/NestedMap.js";import"../../../chunks/signal.js";import"../../../chunks/axisAngleDegrees.js";import"../../../chunks/weather.js";import"../environment/CloudyWeather.js";import"../environment/FoggyWeather.js";import"../environment/RainyWeather.js";import"../environment/SnowyWeather.js";import"../environment/SunnyWeather.js";import"../../../chunks/Scheduler.js";import"../../../chunks/debugFlags.js";import"../../../chunks/PointVisualElement.js";import"../../../chunks/ElevationContext.js";import"../../../chunks/dehydratedFeatureUtils.js";import"../../../layers/support/fieldUtils.js";import"../../../core/sql.js";import"../../../chunks/HUDMaterial.js";import"../../../chunks/HUDVisibility.glsl.js";import"../../../chunks/BooleanBindUniform.js";import"../../../chunks/ColorMaterial.js";import"../../../chunks/VertexColor.glsl.js";import"../../../chunks/TriangleMaterial.js";import"../../../chunks/SnappingVisualizer.js";import"../../../chunks/PointSnappingHint.js";import"../../../Graphic.js";import"../../../PopupTemplate.js";import"../../../popup/content.js";import"../../../popup/content/AttachmentsContent.js";import"../../../popup/content/Content.js";import"../../../popup/support/AttachmentsOrderByInfo.js";import"../../../popup/content/CustomContent.js";import"../../../popup/content/ExpressionContent.js";import"../../../popup/ElementExpressionInfo.js";import"../../../popup/content/FieldsContent.js";import"../../../popup/FieldInfo.js";import"../../../popup/support/FieldInfoFormat.js";import"../../../popup/content/MediaContent.js";import"../../../popup/content/BarChartMediaInfo.js";import"../../../popup/content/mixins/ChartMediaInfo.js";import"../../../popup/content/mixins/MediaInfo.js";import"../../../popup/content/support/ChartMediaInfoValue.js";import"../../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../../chunks/chartMediaInfoUtils.js";import"../../../popup/content/ColumnChartMediaInfo.js";import"../../../popup/content/ImageMediaInfo.js";import"../../../popup/content/support/ImageMediaInfoValue.js";import"../../../popup/content/LineChartMediaInfo.js";import"../../../popup/content/PieChartMediaInfo.js";import"../../../popup/content/RelationshipContent.js";import"../../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../../popup/content/TextContent.js";import"../../../popup/content/UtilityNetworkAssociationsContent.js";import"../../../popup/support/UtilityNetworkAssociationType.js";import"../../../popup/ExpressionInfo.js";import"../../../popup/LayerOptions.js";import"../../../popup/RelatedRecordsInfo.js";import"../../../support/actions/ActionBase.js";import"../../../support/actions/ActionButton.js";import"../../../support/actions/ActionToggle.js";import"../../../geometry/support/jsonUtils.js";import"../../../chunks/typeUtils.js";import"../../../chunks/createFeatureId.js";import"../../../chunks/typeUtils2.js";import"../../../symbols/CIMSymbol.js";import"../../../symbols/Symbol.js";import"../../../symbols/LabelSymbol3D.js";import"../../../symbols/Symbol3D.js";import"../../../chunks/collectionUtils.js";import"../../../symbols/ExtrudeSymbol3DLayer.js";import"../../../symbols/Symbol3DLayer.js";import"../../../chunks/utils3.js";import"../../../symbols/edges/Edges3D.js";import"../../../chunks/materialUtils.js";import"../../../chunks/opacityUtils.js";import"../../../symbols/edges/SketchEdges3D.js";import"../../../symbols/edges/SolidEdges3D.js";import"../../../chunks/Symbol3DMaterial.js";import"../../../symbols/FillSymbol3DLayer.js";import"../../../symbols/patterns/LineStylePattern3D.js";import"../../../symbols/patterns/StylePattern3D.js";import"../../../chunks/utils4.js";import"../../../chunks/colors.js";import"../../../chunks/symbolLayerUtils3D.js";import"../../../symbols/IconSymbol3DLayer.js";import"../../../symbols/LineSymbol3DLayer.js";import"../../../symbols/LineStyleMarker3D.js";import"../../../chunks/lineMarkers.js";import"../../../symbols/ObjectSymbol3DLayer.js";import"../../../symbols/PathSymbol3DLayer.js";import"../../../symbols/TextSymbol3DLayer.js";import"../../../symbols/Font.js";import"../../../symbols/WaterSymbol3DLayer.js";import"../../../symbols/support/StyleOrigin.js";import"../../../chunks/Thumbnail.js";import"../../../chunks/calloutUtils.js";import"../../../symbols/callouts/Callout3D.js";import"../../../symbols/callouts/LineCallout3D.js";import"../../../symbols/support/Symbol3DVerticalOffset.js";import"../../../symbols/LineSymbol3D.js";import"../../../symbols/MeshSymbol3D.js";import"../../../symbols/PictureFillSymbol.js";import"../../../symbols/FillSymbol.js";import"../../../symbols/SimpleLineSymbol.js";import"../../../symbols/LineSymbol.js";import"../../../symbols/LineSymbolMarker.js";import"../../../chunks/urlUtils.js";import"../../../symbols/PictureMarkerSymbol.js";import"../../../symbols/MarkerSymbol.js";import"../../../symbols/PointSymbol3D.js";import"../../../symbols/PolygonSymbol3D.js";import"../../../symbols/SimpleFillSymbol.js";import"../../../symbols/SimpleMarkerSymbol.js";import"../../../symbols/TextSymbol.js";import"../../../symbols/WebStyleSymbol.js";import"../../../chunks/ray2.js";import"../../../chunks/BlendColorsPremultiplied.glsl.js";import"../../../chunks/InteractiveToolBase.js";import"../../../chunks/ellipticArc7Utils.js";import"../../../chunks/geometry2dUtils.js";import"../../../chunks/dehydratedFeatureComparison.js";import"../../../chunks/mapCollectionUtils.js";import"../../../chunks/timeUtils.js";import"../../../rest/support/Query.js";import"../../../chunks/DataLayerSource.js";import"../../../layers/support/Field.js";import"../../../chunks/domains.js";import"../../../layers/support/CodedValueDomain.js";import"../../../layers/support/Domain.js";import"../../../layers/support/InheritedDomain.js";import"../../../layers/support/RangeDomain.js";import"../../../chunks/fieldType.js";import"../../../chunks/FullTextSearch.js";import"../../../chunks/spatialRelationships.js";import"../../../rest/support/StatisticDefinition.js";import"../../../time/TimeExtent.js";import"../../../chunks/InputManager.js";import"../../../chunks/Queue.js";import"../../../chunks/keybindings.js";import"../../../chunks/utils11.js";import"../../../chunks/Version2.js";import"../../../chunks/Version.js";let me=class extends e{constructor(t){super(t)}initialize(){this.addHandles([c(()=>({viewData:this.viewData,startPoint:this.analysis.startPoint}),({viewData:t,startPoint:e})=>{t.elevationAlignedStartPoint=this._applyProjectionAndElevationAlignment(e)},p),c(()=>({viewData:this.viewData,endPoint:this.analysis.endPoint}),({viewData:t,endPoint:e})=>{t.elevationAlignedEndPoint=this._applyProjectionAndElevationAlignment(e)},p),c(()=>({result:this._computedResult,viewData:this.viewData}),({result:t,viewData:e})=>{e.result=t},p)])}_applyProjectionAndElevationAlignment(t){if(null==t)return t;const{spatialReference:e,elevationProvider:i}=this.view;return j(t,e,i)??(_(this.analysis,t.spatialReference,o.getLogger(this)),null)}get _computedResult(){const{elevationAlignedStartPoint:t,elevationAlignedEndPoint:e,measurementMode:i,unit:s}=this.viewData;if(null==t||null==e)return null;const n=w(t,e),o=this.geodesicLengthMeasurementUtils.geodesicDistanceBetweenPoints(t,e);if(null==n)return null;let r,a;switch(i){case 0:a=null!=o?"geodesic":"euclidean",r=o??n.horizontal;break;case 2:if(null==o)return null;a="geodesic",r=o;break;case 1:a="euclidean",r=n.horizontal}let l=n.direct,c=n.vertical;const p=d(l.value,l.unit,s),h=d(r.value,r.unit,s),m=g(c.value,c.unit,s);return l=u(l,p),r=u(r,h),c=u(c,m),{mode:a,directDistance:l,horizontalDistance:r,verticalDistance:c}}};t([n({constructOnly:!0})],me.prototype,"view",void 0),t([n({constructOnly:!0})],me.prototype,"analysis",void 0),t([n({constructOnly:!0})],me.prototype,"viewData",void 0),t([n({constructOnly:!0})],me.prototype,"geodesicLengthMeasurementUtils",void 0),t([n()],me.prototype,"_computedResult",null),me=t([r("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],me);const de=Object.freeze(Object.defineProperty({__proto__:null,build:function(t){const e=new Lt,{vertex:i,fragment:s}=e;mt(i,t),i.uniforms.add(new pt("width",t=>t.width)),e.attributes.add("position","vec3"),e.attributes.add("normal","vec3"),e.attributes.add("uv0","vec2"),e.attributes.add("length","float"),e.varyings.add("vtc","vec2"),e.varyings.add("vlength","float"),e.varyings.add("vradius","float"),i.main.add(Pt`vec3 bitangent = normal;
vtc = uv0;
vlength = length;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;`),s.uniforms.add(new pt("outlineSize",t=>t.outlineSize),new dt("outlineColor",t=>t.outlineColor),new pt("stripeLength",t=>t.stripeLength),new dt("stripeEvenColor",t=>t.stripeEvenColor),new dt("stripeOddColor",t=>t.stripeOddColor));const n=1/Math.sqrt(2);return s.code.add(Pt`
    const float INV_SQRT2 = ${Pt.float(n)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      }
      if (d < outlineSize) {
        return outlineColor;
      }
      return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
    }`),s.main.add(Pt`
    vec2 ntc = vec2(vtc.x / vradius, vtc.y);
    vec4 color = arrowColor(ntc, vlength / vradius);
    if (color.a < ${Pt.float(St)}) {
      discard;
    }
    fragColor = color;`),e}},Symbol.toStringTag,{value:"Module"}));class ge extends gt{constructor(t,e){super(t,e,new yt(de,()=>Promise.resolve().then(()=>de)),ye.locations),this.primitiveType=Ct.TRIANGLE_STRIP}initializePipeline(t){return Mt({blending:t.transparent?vt(t.oitPass):null,polygonOffset:t.polygonOffsetEnabled?{factor:0,units:-4}:null,depthTest:{func:513},depthWrite:Dt,colorWrite:Vt})}}const ye=kt().vec3f("position").vec3f("normal").vec2f("uv0").f32("length");class ve extends _t{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1}}t([jt()],ve.prototype,"polygonOffsetEnabled",void 0),t([jt()],ve.prototype,"transparent",void 0);class je extends bt{constructor(t){super(t,be),this._configuration=new ve,this.intersectDraped=void 0,this.produces=new Map([[2,t=>!this._transparent&&ht(t)],[8,t=>this._transparent&&ht(t)]])}getConfiguration(t,e){return super.getConfiguration(t,e,this._configuration),this._configuration.polygonOffsetEnabled=this.parameters.polygonOffset,this._configuration.transparent=this._transparent,this._configuration.oitPass=e.oitPass,this._configuration}get visible(){const{outlineColor:t,stripeEvenColor:e,stripeOddColor:i}=this.parameters;return t[3]>=St||e[3]>=St||i[3]>=St}intersect(){}createGLMaterial(t){return new _e(t)}createBufferWriter(){return new Se}get _transparent(){const{parameters:t}=this;return t.outlineColor[3]<1||t.stripeEvenColor[3]<1||t.stripeOddColor[3]<1}}class _e extends wt{beginSlot(t){return this.getTechnique(ge,t)}}class be extends ft{constructor(){super(...arguments),this.width=32,this.outlineSize=.2,this.outlineColor=nt(1,.5,0,1),this.stripeEvenColor=nt(1,1,1,1),this.stripeOddColor=nt(1,.5,0,1),this.stripeLength=1,this.polygonOffset=!1}}const fe=Y(),we=Y(),ke=Y(),Pe=Y(),Le=Y();class Se{constructor(){this.layout=ye}elementCount(t){return 2*(t.get("position").indices.length/2+1)}write(t,e,i,s,n,o){const{data:r,indices:a}=i.get("position"),l=i.get("normal").data,u=r.length/3;a&&a.length!==2*(u-1)&&console.warn("MeasurementArrowMaterial does not support indices");const c=fe,p=we,h=ke,m=Pe,d=Le,g=n.position,y=n.normal,v=n.uv0;let j=0;for(let i=0;i<u;++i){const s=3*i;if(G(c,r[s],r[s+1],r[s+2]),i<u-1){const t=3*(i+1);G(p,r[t],r[t+1],r[t+2]),G(d,l[t],l[t+1],l[t+2]),I(d,d),F(h,p,c),I(h,h),B(m,d,h),I(m,m)}const n=W(c,p);t&&e&&(q(c,c,t),q(p,p,t),q(m,m,e));const a=o+2*i,_=a+1;g.setVec(a,c),g.setVec(_,c),y.setVec(a,m),y.setVec(_,m),v.set(a,0,j),v.set(a,1,-1),v.set(_,0,j),v.set(_,1,1),i<u-1&&(j+=n)}const _=n.length;for(let t=0;t<2*u;++t)_.set(o+t,j);return null}}class Ce extends b{constructor(t){super(t),this._arrowWidth=16,this._arrowSubdivisions=128,this._origin=Y(),this._originTransform=it(),this._arrowCenter=Y(),this._renderOccluded=4,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._color=ot(),this._contrastColor=ot(),this.applyProperties(t)}get renderOccluded(){return this._renderOccluded}set renderOccluded(t){t!==this._renderOccluded&&(this._renderOccluded=t,this._arrowMaterial?.setParameters({renderOccluded:t}))}get geometry(){return this._geometry}set geometry(t){this._geometry=t,this._geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(t){this._stripeLength=t,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(t){if(this._stripesEnabled=t,this.attached){const t=this._stripesEnabled?this._contrastColor:this._color;this._arrowMaterial.setParameters({stripeEvenColor:t})}}get color(){return this._color}set color(t){P(t,this._color)||(st(this._color,t),this._updateArrowColor())}get contrastColor(){return this._contrastColor}set contrastColor(t){P(t,this._color)||(st(this._contrastColor,t),this._updateArrowColor())}createExternalResources(){const t=this._color,e=this._contrastColor,i=this._stripesEnabled?e:t;this._arrowMaterial=new je({outlineColor:t,stripeEvenColor:i,stripeOddColor:t,renderOccluded:this.renderOccluded,polygonOffset:!0,isDecoration:this.isDecoration}),this._handles=new et,this._handles.add(c(()=>this.view.state.camera,()=>{this._viewChanged()}))}destroyExternalResources(){this._arrowMaterial=null,this._handles=i(this._handles)}forEachMaterial(t){t(this._arrowMaterial)}createGeometries(t){if(null==this._geometry?.startRenderSpace||null==this._geometry.endRenderSpace)return;const e=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);e.transformation=this._originTransform,t.addGeometry(e),this._viewChanged()}_createArrowGeometry(t,e,i,s){const n=this.view,o=n.renderCoordsHelper,r=[],a=[],l=(t,e)=>{const s=rt.get();F(s,t,i),r.push(s),a.push(e)};if("euclidean"===s.type){s.eval(.5,this._arrowCenter);const i=rt.get();if(o.worldUpAtPosition(this._arrowCenter,i),function(t,e,i){const s=N(Me,e,t),n=B(Me,s,i);return 0===$(n)}(t,e,i)){const{heading:e,tilt:s}=n.camera,{direction:o}=at(n,t,e,s,Ve);Q(i,o)}l(t,i),l(e,i)}else{s.eval(.5,this._arrowCenter);const t=this._arrowSubdivisions+1&-2;for(let e=0;e<t;++e){const i=e/(t-1),n=rt.get(),r=rt.get();s.eval(i,n),o.worldUpAtPosition(n,r),l(n,r)}}return ut(this._arrowMaterial,r,a)}_geometryChanged(){this.recreateGeometry()}_viewChanged(){if(this.view.ready&&this.attached&&null!=this._geometry){const t=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._arrowWidth*t})}}_updateArrowColor(){if(!this.attached)return;const t=this._color,e=this._contrastColor,i=this._stripesEnabled?e:t,s=t,n=t;this._arrowMaterial.setParameters({stripeEvenColor:i,outlineColor:s,stripeOddColor:n})}}const Me=Y(),Ve=lt();let De=class extends e{get _parameters(){const t=this.view.effectiveTheme,{accentColor:e,textColor:i}=t,s=L(e),n=S(e,.75),o=L(C(e)),r=C(i,160);return{accentColor:s,contrastColor:o,translucentAccentColor:n,triangleLineWidth:3,geodesicProjectionLineWidth:2,guideLineWidth:2,guideStippleLengthPixels:3,directLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12,textColor:i,textBackgroundColor:M(r,.6),textCalloutColor:M(r,.5)}}get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:t,elevationAlignedEndPoint:e}=this.analysisView;if(null==t||null==e||t.equals(e))return 0;const i=this.analysisView.result;if(null==i)return 1;if("geodesic"===this.actualVisualizedMeasurement)return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?3:1;const{verticalDistance:s,horizontalDistance:n}=i,o=u(s,"meters").value,r=u(n,"meters").value;return Math.min(o/r,r/o)<this.triangleCollapseRatioThreshold?1:2}get actualVisualizedMeasurement(){const{measurementMode:t,result:e}=this.analysisView;switch(t){case 0:return null!=e&&u(e.horizontalDistance,"meters").value>Tt?"geodesic":"euclidean";case 1:return"euclidean";case 2:return"geodesic"}}get allowVisualElementsOrientationChange(){return null==this._triangleOrientationOverride}set allowVisualElementsOrientationChange(t){null==this._triangleOrientationOverride!==t&&(null==this._triangleOrientationOverride?this._triangleOrientationOverride=this._actualVisualElementsOrientation:this._triangleOrientationOverride=null)}get labels(){return"geodesic"===this.actualVisualizedMeasurement?{direct:null,horizontal:this._segmentLabel,vertical:this._verticalLabel}:{direct:this._segmentLabel,horizontal:this._horizontalLabel,vertical:this._verticalLabel}}constructor(t){super(t),this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=Y(),this._endPosition=Y(),this._cornerPosition=Y(),this._startPositionAtSeaLevel=Y(),this._endPositionAtSeaLevel=Y(),this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=0,this.triangleCollapseRatioThreshold=.03}initialize(){const t={attached:!0,view:this.view,isDecoration:!0},{guideLineWidth:e,guideStippleLengthPixels:i,triangleLineWidth:s,geodesicProjectionLineWidth:n,directLabelFontSize:o,verticalLabelFontSize:r,horizontalLabelFontSize:a}=this._parameters;this._segmentVisualElement=new Ce({...t,geometry:null,renderOccluded:4}),this._triangleVisualElement=new f({...t,width:s,renderOccluded:4}),this._rightAngleQuad=new Et({...t,renderOccluded:4});const l={...t,polygonOffset:!0,renderOccluded:4};this._projectedGeodesicLine=new f({...l,width:n,stipplePattern:zt(i)}),this._geodesicStartHint=new f({...l,width:e,stipplePattern:zt(i)}),this._geodesicEndHint=new f({...l,width:e,stipplePattern:zt(i)}),this._segmentLabel=new K({...t,fontSize:o}),this._verticalLabel=new K({...t,fontSize:r}),this._horizontalLabel=new K({...t,fontSize:a}),this.addHandles([c(()=>{const{elevationAlignedStartPoint:t,elevationAlignedEndPoint:e}=this.analysisView,i=this.view;return{view:i,camera:i.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:t,elevationAlignedEndPoint:e,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}},t=>this._updateGeometryAndViewMode(t),p),c(()=>({visible:this.visible,viewMode:this.viewMode}),t=>this._updateVisualElementVisibility(t),p),c(()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement}),t=>this._updateLabelText(t),p),c(()=>({visible:this.visible,viewMode:this.viewMode}),t=>this._updateLabelVisibility(t),p),c(()=>this._measurementArrowStripeLength,t=>this._updateSegmentStripeLength(t),p),Ut(()=>this._updateMessageBundle()),c(()=>this._parameters,({textBackgroundColor:t,textCalloutColor:e,textColor:i,translucentAccentColor:s,accentColor:n,contrastColor:o})=>{const{_segmentLabel:r,_verticalLabel:a,_horizontalLabel:l,_triangleVisualElement:u,_rightAngleQuad:c,_projectedGeodesicLine:p,_geodesicStartHint:h,_geodesicEndHint:m,_segmentVisualElement:d}=this;r.backgroundColor=t,r.calloutColor=e,r.textColor=i,a.backgroundColor=t,a.calloutColor=e,a.textColor=i,l.backgroundColor=t,l.calloutColor=e,l.textColor=i,u.color=s,c.color=s,p.color=s,h.color=s,m.color=s,d.color=n,d.contrastColor=o},h)]),this._updateMessageBundle()}destroy(){this._segmentVisualElement=i(this._segmentVisualElement),this._triangleVisualElement=i(this._triangleVisualElement),this._rightAngleQuad=i(this._rightAngleQuad),this._projectedGeodesicLine=i(this._projectedGeodesicLine),this._geodesicStartHint=i(this._geodesicStartHint),this._geodesicEndHint=i(this._geodesicEndHint),this._segmentLabel=i(this._segmentLabel),this._verticalLabel=i(this._verticalLabel),this._horizontalLabel=i(this._horizontalLabel),this.set("view",null)}_updateVisualElementVisibility({visible:t,viewMode:e}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,t)switch(e){case 0:break;case 1:this._segmentVisualElement.visible=!0;break;case 2:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case 3:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:t,camera:e,viewMode:i,elevationAlignedStartPoint:s,elevationAlignedEndPoint:n,orientation:o,visualizedMeasurement:r,stripeLength:a}){const l=t.renderCoordsHelper;if(null==l||null==s||null==n||s.equals(n))return;let u=this._startPosition,c=this._endPosition;l.toRenderCoords(s,u),l.toRenderCoords(n,c);const p=1===o?1:-1,h=p*(l.getAltitude(c)-l.getAltitude(u));h<0&&(u=this._endPosition,c=this._startPosition);const m="geodesic"===r?new At(this._startPosition,this._endPosition,l.spatialReference):new xt(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=m,this._updateSegmentStripeLength(a),i){case 1:this._updateSegment(m,o);break;case 2:this._updateSegmentAndTriangle({view:t,camera:e,segment:m,orientation:o,startPosition:u,endPosition:c,deltaSign:p,altitudeDelta:h});break;case 3:this._updateSegmentAndProjection({view:t,orientation:o,startPosition:u,endPosition:c})}}_updateSegment(t,e){this._segmentLabel.anchor=1===e?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:t,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:t},camera:e,segment:i,orientation:s,startPosition:n,endPosition:o,deltaSign:r,altitudeDelta:a}){const l=this._cornerPosition;t.worldUpAtPosition(n,l),J(l,l,r*Math.abs(a)),X(l,l,n),this._triangleVisualElement.geometry=[[[n[0],n[1],n[2]],[l[0],l[1],l[2]],[o[0],o[1],o[2]]]],this._rightAngleQuad.geometry={previous:n,center:l,next:o};const u=new xt(n,l),c=new xt(l,o),p=function(t,e,i,s,n){const o=Oe,r=Ae;n.projectToRenderScreen(i,o),n.projectToRenderScreen(e,r);const a={segment:"bottom",horizontal:"top",vertical:o[0]<r[0]?"left":"right"};{const s=xe,o=ze;if(Z(t,i,n,s),Z(t,e,n,o),H(s,o)>=Ee){const t=Math.sign(s[1])===Math.sign(o[1]);a.segment=t?tt(a.vertical):a.vertical}else{const t=Te;Z(i,e,n,t),H(t,o)>=Ee&&(a.segment=Math.sign(t[0])===Math.sign(o[0])?tt(a.horizontal):a.horizontal)}}if(2===s){const t=t=>"top"===t?"bottom":"top";a.segment=t(a.segment),a.horizontal=t(a.horizontal),a.vertical=t(a.vertical)}return a}(n,o,l,s,e);this._segmentLabel.anchor=p.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:u,sampleLocation:"center"},this._verticalLabel.anchor=p.vertical,this._horizontalLabel.geometry={type:"segment",segment:c,sampleLocation:"center"},this._horizontalLabel.anchor=p.horizontal}_updateSegmentAndProjection({view:{renderCoordsHelper:t},orientation:e,startPosition:i,endPosition:s}){t.setAltitude(this._startPositionAtSeaLevel,0,i),t.setAltitude(this._endPositionAtSeaLevel,0,s);const n=new At(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,t.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(n),this._geodesicStartHint.setGeometryFromSegment(new xt(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new xt(this._endPositionAtSeaLevel,s)),this._segmentLabel.geometry={type:"segment",segment:n,sampleLocation:"center"},this._segmentLabel.anchor=1===e?"top":"bottom"}_updateLabelText({text:t,visualizedMeasurement:e}){null!=t?(this._segmentLabel.text="euclidean"===e?t.directDistance:t.horizontalDistance,this._horizontalLabel.text=t.horizontalDistance,this._verticalLabel.text=t.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels")}_updateLabelVisibility({visible:t,viewMode:e}){const i=this._segmentLabel,s=this._horizontalLabel,n=this._verticalLabel;if(i.visible=!1,s.visible=!1,n.visible=!1,t)switch(e){case 1:case 3:i.visible=!0;break;case 2:i.visible=!0,s.visible=!0,n.visible=!0}}get _labelsText(){if(this.destroyed)return null;const t=this.messages,e=this.analysisView.result;if(null==e||null==t)return null;const{directDistance:i,horizontalDistance:s,verticalDistance:n}=e,o=this.analysisView.unit,r=t=>({directDistance:"",horizontalDistance:"",verticalDistance:"",...t});switch(o){case"metric":return r({directDistance:i&&T(t,i),horizontalDistance:s&&T(t,s),verticalDistance:n&&z(t,n)});case"imperial":return r({directDistance:i&&x(t,i),horizontalDistance:s&&x(t,s),verticalDistance:n&&A(t,n)});default:return r({directDistance:i&&O(t,i,o),horizontalDistance:s&&O(t,s,o),verticalDistance:n&&O(t,n,o)})}}_updateSegmentStripeLength(t){const e=this._segmentVisualElement;null!=t?(e.stripeLength=t,e.stripesEnabled=!0):e.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(null!=this._triangleOrientationOverride)return this._triangleOrientationOverride;const t=this.visualElementOrientation;return 0===t?this.view.state.camera.aboveGround?1:2:t}_requiresGeodesicGuideAt(t){const e=this.view;if(!e?.state)return!1;const i=e.state.camera,s=e.renderCoordsHelper;if(!s)return!1;const n=i.computeScreenPixelSizeAt(t);return s.getAltitude(t)/n>=10}get _measurementArrowStripeLength(){const{result:t,unit:e}=this.analysisView;if(null==t)return null;let i=null;const s=t.directDistance;switch(e){case"metric":i=s&&u(s,"meters");break;case"imperial":i=s&&u(s,y(s.value,s.unit));break;default:i=s&&u(s,e)}return null==i?null:D(i.value/30)*v(1,i.unit,"meters")}_updateMessageBundle(){this.loadingMessages=!0,Rt("esri/core/t9n/Units").then(t=>{this.messages=t}).finally(()=>{this.loadingMessages=!1})}get testData(){}};t([n()],De.prototype,"_parameters",null),t([n()],De.prototype,"_triangleOrientationOverride",void 0),t([n()],De.prototype,"messages",void 0),t([n()],De.prototype,"view",void 0),t([n()],De.prototype,"analysis",void 0),t([n()],De.prototype,"analysisView",void 0),t([n()],De.prototype,"loadingMessages",void 0),t([n()],De.prototype,"visible",null),t([n()],De.prototype,"viewMode",null),t([n()],De.prototype,"actualVisualizedMeasurement",null),t([n()],De.prototype,"visualElementOrientation",void 0),t([n()],De.prototype,"triangleCollapseRatioThreshold",void 0),t([n()],De.prototype,"allowVisualElementsOrientationChange",null),t([n()],De.prototype,"labels",null),t([n()],De.prototype,"_labelsText",null),t([n()],De.prototype,"_actualVisualElementsOrientation",null),t([n()],De.prototype,"_measurementArrowStripeLength",null),De=t([r("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],De);const Ee=Math.cos(E(12)),Oe=U(),Ae=U(),xe=R(),ze=R(),Te=R();let Ue=class extends e{constructor(t){super(t),this.cursorPoint=null,this._visible=!1,this._laserLine=null,this.laserLineEnabled=!0,this._lastDraggedHandle=null}initialize(){this._laserLine=new Yt({view:this.view,attached:!0,isDecoration:!0}),this._updateVisibility(this._visible),this._connectToAnalysisView(),this.addHandles(c(()=>this._params,({laserLineGlowColor:t,laserLineInnerColor:e,laserLineGlobalAlpha:i})=>{const s=this._laserLine,n=s.style;s.style={...n,innerColor:e,glowColor:t,globalAlpha:i}}))}destroy(){this._laserLine=i(this._laserLine)}get _params(){const{accentColor:t}=this.view.effectiveTheme;return{laserLineGlowColor:Qt.toUnitRGB(t),laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:Qt.toUnitRGB(C(t)),laserLineInnerWidth:.75,laserLineGlobalAlpha:.75*t.a,handleColor:S(t,.5),handleRadius:5}}get visible(){return this._visible}set visible(t){t?this.show():this.hide()}get testData(){}get _cursorPosition(){const t=Y(),e=this.cursorPoint;return e&&this.view.renderCoordsHelper.toRenderCoords(e,t),t}get _startPosition(){const t=Y(),e=this.analysis.startPoint;return e&&this.view.renderCoordsHelper.toRenderCoords(e,t),t}get _endPosition(){const t=Y(),e=this.analysis.endPoint;return e&&this.view.renderCoordsHelper.toRenderCoords(e,t),t}get _laserLineParams(){const t=this._focusPosition,{active:e,lineState:i}=this.toolState,s=this.analysisViewData,n=this.laserLineEnabled&&!!t&&"measured"!==i&&e;if(!n||!this.visible||null==s||s.destroyed)return{heightManifoldTarget:null,pointDistanceLine:null,lineVerticalPlaneSegment:null};const o=s.actualVisualizedMeasurement,r="local"!==this.view.viewingMode&&n&&!!this.analysis.startPoint&&"geodesic"===o,a=n&&2===s.viewMode;return{heightManifoldTarget:"euclidean"===o?t:null,pointDistanceLine:r?this._pointDistanceLine:null,lineVerticalPlaneSegment:a?Nt(this._startPosition,this._endPosition):null}}get _focusPosition(){const{lineState:t}=this.toolState,e=this.analysisViewData,i=null!=e&&!e.destroyed&&1===e.measurementMode&&1===e.viewMode;switch(t){case"drawing":return i?this._startPosition:this.analysis.endPoint?this._endPosition:this._startPosition;case"editing":return i?"start"===this._lastDraggedHandle?this._endPosition:this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return null!=this.cursorPoint?this._cursorPosition:null}}get _pointDistanceLine(){return{origin:"drawing"===this.toolState.lineState||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition,target:this._focusPosition}}createManipulators(){const t=this._params,{view:e}=this,i=()=>{const i=Jt(t.handleColor),s=[new Xt(ct(i,1,32,32))],n=new $t({view:e,renderObjects:s});return n.available=!1,n.radius=t.handleRadius,[n,i]},[s,n]=i(),[o,r]=i(),a=new $t({view:this.view,available:!1,interactive:!1});null!=this.analysis.startPoint&&(s.location=this.analysis.startPoint,s.available=!0),null!=this.analysis.endPoint&&(o.location=this.analysis.endPoint,o.available=!0);const l=()=>{let t=this._lastDraggedHandle;s.grabbing&&!o.grabbing&&(t="start"),o.grabbing&&!s.grabbing&&(t="end"),s.grabbing||o.grabbing||(t=null),this._lastDraggedHandle=t},u=s.events.on("grab-changed",l),p=o.events.on("grab-changed",l);return this.addHandles([u,p,c(()=>V(this._params.handleColor),t=>{n.setParameters({color:t}),r.setParameters({color:t})},{equals:P})],"manipulators"),{start:s,end:o,cursor:a}}show(){this.destroyed||this._visible||this._updateVisibility(!0)}hide(){!this.destroyed&&this._visible&&this._updateVisibility(!1)}_connectToAnalysisView(){this.removeHandles("analysis-view"),this.addHandles([c(()=>this.analysisViewData?.destroyed,t=>{t&&this.removeHandles("analysis-view")},h),c(()=>["measured"===this.toolState.lineState,this.analysisViewData],([t,e])=>{null==e||e.destroyed||(e.allowVisualElementsOrientationChange=!t)},h),c(()=>this._laserLineParams,t=>{const e=this._laserLine;e.heightManifoldTarget=t.heightManifoldTarget,e.pointDistanceLine=t.pointDistanceLine,e.lineVerticalPlaneSegment=t.lineVerticalPlaneSegment},h)],"analysis-view")}_updateVisibility(t){this.initialized&&(this._visible=t,t&&(this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha}),this._laserLine.visible=t)}};t([n({constructOnly:!0})],Ue.prototype,"view",void 0),t([n()],Ue.prototype,"_params",null),t([n({constructOnly:!0})],Ue.prototype,"analysis",void 0),t([n({constructOnly:!0})],Ue.prototype,"analysisViewData",void 0),t([n()],Ue.prototype,"cursorPoint",void 0),t([n()],Ue.prototype,"toolState",void 0),t([n()],Ue.prototype,"visible",null),t([n()],Ue.prototype,"testData",null),t([n()],Ue.prototype,"_visible",void 0),t([n()],Ue.prototype,"_laserLine",void 0),t([n({constructOnly:!0})],Ue.prototype,"laserLineEnabled",void 0),t([n()],Ue.prototype,"_cursorPosition",null),t([n()],Ue.prototype,"_startPosition",null),t([n()],Ue.prototype,"_endPosition",null),t([n()],Ue.prototype,"_lastDraggedHandle",void 0),t([n()],Ue.prototype,"_laserLineParams",null),t([n()],Ue.prototype,"_focusPosition",null),t([n()],Ue.prototype,"_pointDistanceLine",null),Ue=t([r("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],Ue);let Re=class extends Kt{constructor(t){super(t),this._updatingHandles=new Gt,this._emulatedDrag=null,this.lineState="initial",this.removeIncompleteOnCancel=!1,this.startPointSurfaceLocation=null,this.endPointSurfaceLocation=null,this.cursorPointSurfaceLocation=null,this.startManipulator=null,this.endManipulator=null,this.cursorManipulator=null,this._getSnappingContext=Ht(t=>new le({elevationInfo:{mode:"absolute-height",offset:0},pointer:t,editGeometryOperations:new se(new ne("point",oe(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new Ot}))}initialize(){const{view:t,analysis:e,analysisViewData:i,visible:s}=this;this.measurementView=new Ue({toolState:this,view:t,analysis:e,analysisViewData:i,visible:s});const n=ce(t);this._snappingManagerResult=n,this.addHandles(n);const{start:o,end:r,cursor:a}=this.measurementView.createManipulators(),l=(t,e,i)=>{const s=re(t,(t,s,n,o)=>{const r=Wt(t),a=this._snappingManager,l=this._getSnappingContext(o),u=this._updatingHandles,{lineState:c}=this;n=n.next(r).next(ae(this,[i,e])).next(i=>{if("cursorPoint"!==e){const i=this.analysis[e];null!=i&&(t.location=i)}return i});const p=qt(this.view);let h=s.next(r).next(t=>{const s=p(t);return s||"drawing"!==this.lineState&&"initial"!==this.lineState||(this[e]=null,this[i]=null),s});if("touch"!==o||"editing"===c){const{snappingStep:t,cancelSnapping:e}=ue({snappingManager:a,snappingContext:l,updatingHandles:u});n=n.next(e),h=h.next(...t)}h.next(t=>"start"!==t.action?t:null).next(s=>{const n=Ft(s.mapEnd,new It);this[e]=n,t.location=n,this[i]=this._surfaceLocation(n,s.surfaceType)})});return"cursorPoint"===e?[s]:[s,t.events.on("grab-changed",()=>{const t=o.grabbing||r.grabbing;this.lineState=t?"editing":"measured"}),c(()=>this.analysis[e],e=>{e&&(t.location=e)})]};this.startManipulator=o,this.endManipulator=r,this.cursorManipulator=a,this.manipulators.add(o),this.manipulators.add(r),this.manipulators.add(a),this.addHandles([...l(o,"startPoint","startPointSurfaceLocation"),...l(r,"endPoint","endPointSurfaceLocation"),...l(a,"cursorPoint","cursorPointSurfaceLocation"),m(()=>"measured"===this.state,()=>{this.finishToolCreation(),this.active&&(this.view.activeTool=null)},p),c(()=>({startPointAvailable:null!=this.startPoint,endPointAvailable:null!=this.endPoint}),({startPointAvailable:t,endPointAvailable:e})=>{this.startManipulator.available=t,this.endManipulator.available=e},p)]),pe(this)}destroy(){this._updatingHandles=i(this._updatingHandles),this.measurementView=i(this.measurementView)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){const{analysis:t}=this;if(null==t.startPoint&&null==t.endPoint)return"ready";const{lineState:e}=this;return this.validMeasurement&&"editing"!==e&&"drawing"!==e?"measured":"measuring"}get cursor(){return!this.active||"ready"!==this.state&&"measured"===this.lineState?null:"crosshair"}get startPoint(){return this.analysis.startPoint}set startPoint(t){this.analysis.startPoint=t}get endPoint(){return this.analysis.endPoint}set endPoint(t){this.analysis.endPoint=t}get cursorPoint(){return this.measurementView.cursorPoint}set cursorPoint(t){this.measurementView.cursorPoint=t}get snappingOptions(){return this._snappingManager.options}get validMeasurement(){return null!=this.analysis.startPoint&&null!=this.analysis.endPoint}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}resetCreated(){super.resetCreated(),this.lineState="initial",this.cursorPoint=null,"measured"===this.state&&this.finishToolCreation()}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onDeactivate(){this._emulatedDrag?.cancel(),this._emulatedDrag=null}onInputEvent(t){switch(t.type){case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t)}}_handlePointerMove(t){if(!this.active||this.view.navigating)return;const{pointerType:e}=t;if("mouse"!==e)return;const i=he(t),{lineState:s,cursorManipulator:n,endManipulator:o}=this;let r=!1;null==this.cursorPoint&&(this._emulatedDrag?.cancel(),this._emulatedDrag=He(n,e,i),r=!0),"initial"===s&&(this._emulatedDrag?.update(i),r=!0),"drawing"===s&&(o.events.emit("drag",{action:"update",start:i,screenPoint:i}),r=!0),r&&t.stopPropagation()}_handleImmediateClick(t){if(!this.active||!Bt(t))return;const e=he(t),{pointerType:i}=t,{cursorManipulator:s,startManipulator:n,endManipulator:o,lineState:r}=this;let a=!1;switch(null==this.cursorPoint&&(this._emulatedDrag?.cancel(),this._emulatedDrag=He(s,i,e)),r){case"initial":if(this._emulatedDrag?.update(e),null!=this.cursorPoint){this._emulatedDrag?.end(e),this._emulatedDrag=null,this.endPoint=null;const{cursorPoint:t}=this;this.startPoint=t,this.startPointSurfaceLocation=this.cursorPointSurfaceLocation,n.location=t,n.interactive=!1,o.interactive=!1,this.lineState="drawing",this._emulatedDrag=He(o,i,e),a=!0}break;case"drawing":this._emulatedDrag?.update(e),null!=this.endPoint&&(this._emulatedDrag?.end(e),this._emulatedDrag=null,n.interactive=!0,o.interactive=!0,this.lineState="measured",a=!0)}a&&t.stopPropagation()}_surfaceLocation(t,e){return 0===e?"on-the-surface":(t.z??0)>=this._getElevation(t)?"above-the-surface":"below-the-surface"}_getElevation(t){return this.view.basemapTerrain.ready?Zt(this.view.elevationProvider,t)??0:0}get test(){}};function He(t,e,i){return t.events.emit("drag",{action:"start",pointerType:e,start:i,screenPoint:i}),{update:e=>t.events.emit("drag",{action:"update",start:e,screenPoint:e}),end:e=>t.events.emit("drag",{action:"end",start:e,screenPoint:e}),cancel:()=>t.events.emit("drag",{action:"cancel"})}}t([n({readOnly:!0})],Re.prototype,"state",null),t([n()],Re.prototype,"lineState",void 0),t([n({readOnly:!0})],Re.prototype,"cursor",null),t([n()],Re.prototype,"startPoint",null),t([n()],Re.prototype,"endPoint",null),t([n()],Re.prototype,"cursorPoint",null),t([n({constructOnly:!0})],Re.prototype,"analysis",void 0),t([n({constructOnly:!0})],Re.prototype,"analysisViewData",void 0),t([n()],Re.prototype,"measurementView",void 0),t([n()],Re.prototype,"removeIncompleteOnCancel",void 0),t([n({constructOnly:!0})],Re.prototype,"view",void 0),t([n({readOnly:!0})],Re.prototype,"validMeasurement",null),t([n({value:null})],Re.prototype,"startPointSurfaceLocation",void 0),t([n({value:null})],Re.prototype,"endPointSurfaceLocation",void 0),t([n({value:null})],Re.prototype,"cursorPointSurfaceLocation",void 0),t([n()],Re.prototype,"updating",null),Re=t([r("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],Re);const Ge=Re;let Ie=class extends(l(e)){constructor(t){super(t),this.type="direct-line-measurement-view-3d",this.analysis=null,this.tool=null,this.result=null,this.measurementMode=0,this.elevationAlignedStartPoint=null,this.elevationAlignedEndPoint=null,this.userOperation=null}initialize(){const{analysis:t,view:e}=this;this._analysisVisualization=new De({view:e,analysis:t,analysisView:this}),this.addResolvingPromise(k().then(i=>{this.destroyed||(this._analysisController=new me({view:e,analysis:t,viewData:this,geodesicLengthMeasurementUtils:i}))})),this.addHandles(te(this,Ge))}destroy(){ee(this),this.userOperation=s(this.userOperation),this._analysisController=i(this._analysisController),this._analysisVisualization=i(this._analysisVisualization)}get updating(){return!!this._analysisVisualization?.loadingMessages}get visible(){return super.visible}set visible(t){super.visible=t}get interactive(){return super.interactive}set interactive(t){super.interactive=t}get viewMode(){return this._analysisVisualization.viewMode}get actualVisualizedMeasurement(){return this._analysisVisualization.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisVisualization.visualElementOrientation}set visualElementOrientation(t){this._analysisVisualization.visualElementOrientation=t}get allowVisualElementsOrientationChange(){return this._analysisVisualization.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(t){this._analysisVisualization.allowVisualElementsOrientationChange=t}get triangleCollapseRatioThreshold(){return this._analysisVisualization.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(t){this._analysisVisualization.triangleCollapseRatioThreshold=t}get directLabelText(){return this._analysisVisualization.labels.direct?.text??""}get horizontalLabelText(){return this._analysisVisualization.labels.horizontal?.text??""}get verticalLabelText(){return this._analysisVisualization.labels.vertical?.text??""}get unit(){return this.analysis.unit??a(this.view)}get testData(){}place(t){return ie(this,{placementOptions:t})}};t([n()],Ie.prototype,"_analysisVisualization",void 0),t([n()],Ie.prototype,"_analysisController",void 0),t([n()],Ie.prototype,"updating",null),t([n({readOnly:!0})],Ie.prototype,"type",void 0),t([n({constructOnly:!0,nonNullable:!0})],Ie.prototype,"analysis",void 0),t([n()],Ie.prototype,"tool",void 0),t([n()],Ie.prototype,"result",void 0),t([n()],Ie.prototype,"measurementMode",void 0),t([n()],Ie.prototype,"elevationAlignedStartPoint",void 0),t([n()],Ie.prototype,"elevationAlignedEndPoint",void 0),t([n({readOnly:!0})],Ie.prototype,"viewMode",null),t([n({readOnly:!0})],Ie.prototype,"actualVisualizedMeasurement",null),t([n()],Ie.prototype,"visualElementOrientation",null),t([n()],Ie.prototype,"allowVisualElementsOrientationChange",null),t([n()],Ie.prototype,"triangleCollapseRatioThreshold",null),t([n({readOnly:!0})],Ie.prototype,"directLabelText",null),t([n({readOnly:!0})],Ie.prototype,"horizontalLabelText",null),t([n({readOnly:!0})],Ie.prototype,"verticalLabelText",null),t([n()],Ie.prototype,"unit",null),t([n()],Ie.prototype,"userOperation",void 0),Ie=t([r("esri.views.3d.analysis.DirectLineMeasurementAnalysisView3D")],Ie);const Fe=Ie;export{Fe as default};
