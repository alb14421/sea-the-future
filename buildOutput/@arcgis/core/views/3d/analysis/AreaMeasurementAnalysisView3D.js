/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import"../../../core/lang.js";import{d as s,a as i}from"../../../chunks/maybe.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import{L as n}from"../../../chunks/Logger.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import{g as a}from"../../../chunks/getDefaultUnitForView.js";import{A as l}from"../../../chunks/AnalysisView3D.js";import{watch as h,sync as p,syncAndInitial as c,initial as u,when as m}from"../../../core/reactiveUtils.js";import{e as d,t as g}from"../../../chunks/mathUtils.js";import{d as _,t as y,b as j}from"../../../chunks/quantityUtils.js";import{a7 as f,V as v,U as k,ac as w,a9 as S,c as b}from"../../../chunks/unitUtils.js";import{s as V,u as M,c as L}from"../../../chunks/vec2.js";import{c as P,f as C}from"../../../chunks/vec2f64.js";import{e as D,j as x,h as A,n as U,x as O,c as I,v as R,d as T,i as G}from"../../../chunks/vec3.js";import{c as E}from"../../../chunks/vec3f64.js";import{c as F,f as z}from"../../../chunks/vec4f64.js";import{canProjectWithoutEngine as H,tryProjectWithZConversion as W}from"../../../chunks/projectionUtils.js";import{g as B}from"../../../chunks/spatialReferenceEllipsoidUtils.js";import{p as q}from"../../../chunks/projectVectorToVector.js";import{p as N}from"../../../chunks/projectPointToVector.js";import{b as Q}from"../../../chunks/Indices.js";import{s as K}from"../../../geometry/Extent.js";import{b as Z}from"../../../chunks/sphere.js";import{a as J}from"../../../chunks/triangle.js";import{b as X,f as Y,t as $,p as ee,a as te,i as se}from"../../../chunks/measurementUtils.js";import{g as ie}from"../../../chunks/ElevationProvider.js";import{c as re,d as ne,t as oe}from"../../../chunks/mathUtils2.js";import{t as ae,l as le}from"../../../chunks/geodesicAreaMeasurementUtils.js";import{c as he,f as pe,l as ce}from"../../../chunks/geodesicLengthMeasurementUtils.js";import{s as ue}from"../../../chunks/geodesicMeasurementUtils.js";import{EventedAccessor as me}from"../../../core/Evented.js";import de from"../../../geometry/Point.js";import{e as ge,m as _e}from"../../../chunks/aaBoundingRect.js";import{l as ye,O as je,L as fe}from"../../../chunks/LineVisualElement.js";import{E as ve,a as ke,c as we,P as Se}from"../../../chunks/EditGeometryOperations.js";import"../../../intl.js";import{u as be,k as Ve,f as Me,m as Le,p as Pe}from"../../../chunks/colorUtils2.js";import{c as Ce}from"../../../chunks/quantityFormatUtils.js";import{w as De,l as xe}from"../../../chunks/mat4.js";import{c as Ae}from"../../../chunks/mat4f64.js";import{L as Ue}from"../../../chunks/LabelVisualElement.js";import{a as Oe,c as Ie}from"../../../chunks/vec4.js";import{A as Re}from"../../../chunks/orientedBoundingBox.js";import{S as Te,t as Ge,o as Ee,a as Fe,i as ze,C as He,k as We,R as Be,w as qe,r as Ne,u as Qe,v as Ke,x as Ze,D as Je,W as Xe,A as Ye,G as $e}from"../../../chunks/Matrix4PassUniform.js";import{f as et}from"../../../chunks/Emissions.glsl.js";import{D as tt}from"../../../chunks/VertexColor.glsl.js";import{P as st}from"../../../chunks/DefaultLayouts.js";import{T as it}from"../../../chunks/TriangleMaterial.js";import{F as rt}from"../../../chunks/CameraSpace.glsl.js";import{g as nt}from"../../../chunks/glsl.js";import{S as ot}from"../../../chunks/ShaderBuilder.js";import{m as at,d as lt}from"../../../chunks/renderState.js";import{a as ht}from"../../../chunks/AlphaCutoff.js";import{G as pt,E as ct}from"../../../chunks/Segment.js";import{c as ut}from"../../../chunks/lineStippleUtils.js";import{o as mt}from"../../../chunks/locale.js";import{f as dt}from"../../../chunks/messages.js";import{m as gt}from"../../../chunks/memoize.js";import{ignoreAbortErrors as _t}from"../../../core/promiseUtils.js";import{U as yt}from"../../../chunks/UpdatingHandles.js";import{c as jt}from"../../../chunks/hydratedFeatures.js";import{S as ft}from"../../../chunks/SnappingVisualizer3D.js";import{h as vt,c as kt}from"../../../chunks/dragEventPipeline3D.js";import wt from"../../../Color.js";import St from"../../../core/Handles.js";import{s as bt}from"../../../chunks/screenUtils.js";import{b as Vt,R as Mt,M as Lt}from"../../../chunks/RenderObject.js";import{L as Pt}from"../../../chunks/LaserlineVisualElement.js";import{b as Ct}from"../../../chunks/graphicUtils.js";import{M as Dt}from"../../../chunks/InteractiveToolBase.js";import{n as xt}from"../../../chunks/ToolIntersector.js";import{A as At,c as Ut,r as Ot,s as It}from"../../../chunks/analysisViewUtils.js";import{c as Rt}from"../../../chunks/dragEventPipeline.js";import{s as Tt}from"../../../chunks/keybindings.js";import{S as Gt}from"../../../chunks/SnappingContext.js";import{c as Et}from"../../../chunks/SnappingDragPipelineStep.js";import{a as Ft}from"../../../chunks/SnappingManagerPool.js";import{S as zt}from"../../../chunks/SnappingOperation.js";import{a as Ht}from"../../../chunks/constraints.js";import{c as Wt}from"../../../chunks/screenUtils2.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/Lifecycle.js";import"../../../chunks/metadata.js";import"../../../chunks/ObjectPool.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/tracking.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../core/Error.js";import"../../../chunks/object.js";import"../../../config.js";import"../../../chunks/string.js";import"../../../chunks/events.js";import"../../../chunks/SetUtils.js";import"../../../chunks/SimpleTrackingTarget.js";import"../../../chunks/ensureType.js";import"../../../chunks/MapUtils.js";import"../../../chunks/Warning.js";import"../../../portal/Portal.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../chunks/jsonUtils.js";import"../../../request.js";import"../../../chunks/persistableUrlUtils.js";import"../../../core/JSONSupport.js";import"../../../core/Loadable.js";import"../../../core/Promise.js";import"../../../chunks/reader.js";import"../../../portal/PortalGroup.js";import"../../../portal/PortalQueryParams.js";import"../../../chunks/jsonMap.js";import"../../../geometry/SpatialReference.js";import"../../../chunks/writer.js";import"../../../chunks/pe.js";import"../../../chunks/assets.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../geometry/Geometry.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../portal/PortalQueryResult.js";import"../../../portal/PortalUser.js";import"../../../portal/PortalFolder.js";import"../../../chunks/common.js";import"../../../chunks/SimpleObservable.js";import"../../../geometry/Multipoint.js";import"../../../chunks/zmUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/coordsUtils.js";import"../../../chunks/extentUtils.js";import"../../../chunks/boundsUtils.js";import"../../../geometry/Polyline.js";import"../../../chunks/projectBuffer.js";import"../../../chunks/geodesicConstants.js";import"../../../chunks/projectXYZToVector.js";import"../../../geometry/support/GeographicTransformation.js";import"../../../geometry/support/GeographicTransformationStep.js";import"../../../chunks/zscale.js";import"../../../chunks/dehydratedPoint.js";import"../../../chunks/ray.js";import"../../../chunks/mat3.js";import"../../../chunks/mat3f64.js";import"../../../chunks/vector.js";import"../../../chunks/quatf64.js";import"../../../chunks/lineSegment.js";import"../../../chunks/dehydratedFeatureUtils.js";import"../../../chunks/earcut.js";import"../../../chunks/plane.js";import"../../../geometry/support/geodesicUtils.js";import"../../../geometry/operators/geodeticLengthOperator.js";import"../../../chunks/geodeticCurveType.js";import"../../../chunks/VisualElement.js";import"../../../chunks/RibbonLineMaterial.js";import"../../../chunks/BufferView.js";import"../../../chunks/Octree.js";import"../../../chunks/frustum.js";import"../../../chunks/sdfPrimitives.js";import"../../../chunks/floatRGBA.js";import"../../../chunks/Texture.js";import"../../../chunks/enums.js";import"../../../chunks/InterleavedLayout.js";import"../../../chunks/types.js";import"../../../chunks/VertexElementDescriptor.js";import"../../../chunks/VertexAttributeLocations.js";import"../../../chunks/line.js";import"../../../chunks/DoubleArray.js";import"../../../chunks/ellipticArc7Utils.js";import"../../../chunks/geometry2dUtils.js";import"../../../chunks/date.js";import"../../../chunks/constants.js";import"../../../chunks/datetime.js";import"../../../chunks/number.js";import"../../../chunks/substitute.js";import"../../../chunks/Cyclical.js";import"../../../chunks/unitFormatUtils.js";import"../../../chunks/SnappingManager.js";import"../../../chunks/asyncUtils.js";import"../../../chunks/elevationInfoUtils.js";import"../../../chunks/unitConversionUtils.js";import"../../../chunks/lengthUtils.js";import"../../../chunks/normalizedPoint.js";import"../../../chunks/Settings.js";import"../../interactive/snapping/SnappingOptions.js";import"../../../core/Collection.js";import"../../../chunks/shared.js";import"../../interactive/snapping/FeatureSnappingLayerSource.js";import"../../../chunks/colorUtils.js";import"../../../chunks/RightAngleSnappingHint.js";import"../../../chunks/projector.js";import"../../../chunks/sanitizerUtils.js";import"../../../chunks/TextOverlayItem.js";import"../../../chunks/quat.js";import"../../../chunks/computeTranslationToOriginAndRotation.js";import"../../../chunks/boundedPlane.js";import"../../../chunks/guards.js";import"../../../chunks/debugFlags2.js";import"../../../chunks/videoUtils.js";import"../../../chunks/requestImageUtils.js";import"../../../chunks/aaBoundingBox.js";import"../../../Graphic.js";import"../../../PopupTemplate.js";import"../../../core/Clonable.js";import"../../../layers/support/fieldUtils.js";import"../../../core/sql.js";import"../../../popup/content.js";import"../../../popup/content/AttachmentsContent.js";import"../../../popup/content/Content.js";import"../../../popup/support/AttachmentsOrderByInfo.js";import"../../../popup/content/CustomContent.js";import"../../../popup/content/ExpressionContent.js";import"../../../popup/ElementExpressionInfo.js";import"../../../popup/content/FieldsContent.js";import"../../../popup/FieldInfo.js";import"../../../chunks/enumeration.js";import"../../../popup/support/FieldInfoFormat.js";import"../../../popup/content/MediaContent.js";import"../../../popup/content/BarChartMediaInfo.js";import"../../../popup/content/mixins/ChartMediaInfo.js";import"../../../popup/content/mixins/MediaInfo.js";import"../../../popup/content/support/ChartMediaInfoValue.js";import"../../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../../chunks/chartMediaInfoUtils.js";import"../../../popup/content/ColumnChartMediaInfo.js";import"../../../popup/content/ImageMediaInfo.js";import"../../../popup/content/support/ImageMediaInfoValue.js";import"../../../popup/content/LineChartMediaInfo.js";import"../../../popup/content/PieChartMediaInfo.js";import"../../../popup/content/RelationshipContent.js";import"../../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../../popup/content/TextContent.js";import"../../../popup/content/UtilityNetworkAssociationsContent.js";import"../../../popup/support/UtilityNetworkAssociationType.js";import"../../../popup/ExpressionInfo.js";import"../../../popup/LayerOptions.js";import"../../../popup/RelatedRecordsInfo.js";import"../../../support/actions/ActionBase.js";import"../../../core/Identifiable.js";import"../../../support/actions/ActionButton.js";import"../../../support/actions/ActionToggle.js";import"../../../geometry/support/jsonUtils.js";import"../../../chunks/typeUtils.js";import"../../../chunks/createFeatureId.js";import"../../../chunks/typeUtils2.js";import"../../../symbols/CIMSymbol.js";import"../../../symbols/Symbol.js";import"../../../symbols/LabelSymbol3D.js";import"../../../symbols/Symbol3D.js";import"../../../chunks/collectionUtils.js";import"../../../symbols/ExtrudeSymbol3DLayer.js";import"../../../symbols/Symbol3DLayer.js";import"../../../chunks/utils3.js";import"../../../symbols/edges/Edges3D.js";import"../../../chunks/materialUtils.js";import"../../../chunks/opacityUtils.js";import"../../../symbols/edges/SketchEdges3D.js";import"../../../symbols/edges/SolidEdges3D.js";import"../../../chunks/Symbol3DMaterial.js";import"../../../symbols/FillSymbol3DLayer.js";import"../../../symbols/patterns/LineStylePattern3D.js";import"../../../symbols/patterns/StylePattern3D.js";import"../../../chunks/utils4.js";import"../../../chunks/colors.js";import"../../../chunks/symbolLayerUtils3D.js";import"../../../symbols/IconSymbol3DLayer.js";import"../../../symbols/LineSymbol3DLayer.js";import"../../../symbols/LineStyleMarker3D.js";import"../../../chunks/lineMarkers.js";import"../../../symbols/ObjectSymbol3DLayer.js";import"../../../symbols/PathSymbol3DLayer.js";import"../../../symbols/TextSymbol3DLayer.js";import"../../../symbols/Font.js";import"../../../symbols/WaterSymbol3DLayer.js";import"../../../symbols/support/StyleOrigin.js";import"../../../chunks/Thumbnail.js";import"../../../chunks/calloutUtils.js";import"../../../symbols/callouts/Callout3D.js";import"../../../symbols/callouts/LineCallout3D.js";import"../../../symbols/support/Symbol3DVerticalOffset.js";import"../../../symbols/LineSymbol3D.js";import"../../../symbols/MeshSymbol3D.js";import"../../../symbols/PictureFillSymbol.js";import"../../../symbols/FillSymbol.js";import"../../../symbols/SimpleLineSymbol.js";import"../../../symbols/LineSymbol.js";import"../../../symbols/LineSymbolMarker.js";import"../../../chunks/urlUtils.js";import"../../../symbols/PictureMarkerSymbol.js";import"../../../symbols/MarkerSymbol.js";import"../../../symbols/PointSymbol3D.js";import"../../../symbols/PolygonSymbol3D.js";import"../../../symbols/SimpleFillSymbol.js";import"../../../symbols/SimpleMarkerSymbol.js";import"../../../symbols/TextSymbol.js";import"../../../symbols/WebStyleSymbol.js";import"../../../chunks/ExtendedLineVisualElement.js";import"../../../chunks/EngineVisualElement.js";import"../../../chunks/RenderGeometry.js";import"../../../chunks/GridLocalOriginFactory.js";import"../webgl/RenderCamera.js";import"../webgl.js";import"../../../Camera.js";import"../../../CameraLayout.js";import"../../../chunks/Intersector2.js";import"../../../chunks/HUDIntersectorResult.js";import"../../../chunks/earthUtils.js";import"../webgl/RenderNode.js";import"../../../chunks/SceneLighting.js";import"../../../chunks/HighlightDefaults.js";import"../../../chunks/VertexArrayObject2.js";import"../../../chunks/VertexArrayObject.js";import"../../../chunks/memoryEstimations.js";import"../../../chunks/BufferObject.js";import"../../../chunks/VertexBuffer.js";import"../../../chunks/NestedMap.js";import"../../../chunks/signal.js";import"../../../chunks/axisAngleDegrees.js";import"../../../chunks/weather.js";import"../environment/CloudyWeather.js";import"../environment/FoggyWeather.js";import"../environment/RainyWeather.js";import"../environment/SnowyWeather.js";import"../environment/SunnyWeather.js";import"../../../chunks/Scheduler.js";import"../../../chunks/debugFlags.js";import"../../../chunks/PointVisualElement.js";import"../../../chunks/ElevationContext.js";import"../../../chunks/HUDMaterial.js";import"../../../chunks/HUDVisibility.glsl.js";import"../../../chunks/BooleanBindUniform.js";import"../../../chunks/ColorMaterial.js";import"../../../chunks/SnappingVisualizer.js";import"../../../chunks/PointSnappingHint.js";import"../../../chunks/ray2.js";import"../../../chunks/BlendColorsPremultiplied.glsl.js";import"../../../chunks/vec3f32.js";import"../../../chunks/meshVertexSpaceUtils.js";import"../../../geometry/support/MeshGeoreferencedVertexSpace.js";import"../../../geometry/support/MeshLocalVertexSpace.js";import"../../../chunks/InputManager.js";import"../../../chunks/Queue.js";import"../../../chunks/dehydratedFeatureComparison.js";import"../../../chunks/mapCollectionUtils.js";import"../../../chunks/timeUtils.js";import"../../../rest/support/Query.js";import"../../../chunks/DataLayerSource.js";import"../../../layers/support/Field.js";import"../../../chunks/domains.js";import"../../../layers/support/CodedValueDomain.js";import"../../../layers/support/Domain.js";import"../../../layers/support/InheritedDomain.js";import"../../../layers/support/RangeDomain.js";import"../../../chunks/fieldType.js";import"../../../chunks/FullTextSearch.js";import"../../../chunks/spatialRelationships.js";import"../../../rest/support/StatisticDefinition.js";import"../../../time/TimeExtent.js";import"../../../chunks/utils11.js";import"../../../chunks/Version2.js";import"../../../chunks/Version.js";function Bt(e,t,s,i,r){D(qt,e),x(Nt,e,t),q(qt,s,qt,r),q(Nt,s,Nt,r),A(i,Nt,qt),U(i,i)}const qt=E(),Nt=E();class Qt{get numVertices(){return this._length}get hasStagedVertex(){return null!=this._lastCursorPoint}constructor(e,t,s){this._sceneView=e,this._geodesicAreaMeasurementUtils=t,this._geodesicLengthMeasurementUtils=s,this.validMeasurement=!1,this.positionsWorld=[],this.positionsRender=[],this.positionsFittedWorld=[],this.positionsFittedRender=[],this.positionsGeodesic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=E(),this.areaCentroidRenderCoords=E(),this.geodesicAreaCentroidRenderCoords=E(),this.fittingMode=null,this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=E(),this._planeWorldCoords=F(),this._worldUp=E(),this._worldTangent=E(),this._frame=[E(),E(),E()],this._lastPathVersion=-1,this._lastCursorPoint=null,this._mode=null,this._tempU=E(),this._tempV=E(),this._tempVec3=E(),this._tempSphere=Z();const i=he(e.spatialReference);this._measurementSR=i,this._lengthMeasurementUnit=f(i)??"meters",this._areaMeasurementUnit=v(i)??"square-meters"}update(e,t,s,i,r,n){const o=this._lastPathVersion===e.version,a=t?t.equals(this._lastCursorPoint):null==this._lastCursorPoint,l=this._mode===r;return!(o&&!n&&l&&a||(this._lastPathVersion=e.version,this._lastCursorPoint=t,this._updateCursorSegmentLength(e,t),this._update(e,t,s,i,r),0))}_update(e,t,s,i,r){const n=this._sceneView.renderSpatialReference,o=this._measurementSR,a=s.spatialReference;let l=e.numVertices;const h=!(null==t||t.equals(e.lastPoint)||l>2&&t.equals(e.firstPoint)||e.polygonIsClosed);h&&(l+=1);const p=!e.polygonIsClosed&&l>2,c=e.polygonIsClosed||p;this._resize(l);const u=B(a),m=null!=a&&ue(a)?a:null,d=null!=m&&H(a,u),{positionsGeodesic:g,positionsWorld:y,positionsRender:j,positionsSpherical:f}=this,v=(e,t)=>{!function(e,t){t.hasZ||(t.z=ie(e,t,"ground")??0)}(s.elevationProvider,e),N(e,y[t],o),N(e,j[t],n),d&&(N(e,g[t],m),N(e,f[t],u),U(f[t],f[t]))};e.forEachVertexPosition((e,t)=>v(e,t)),h&&v(t,l-1);const k=this._updatePathLengths(c);if(this.pathLength=this._length>1?_(k,this._lengthMeasurementUnit):null,d){const e=this._updateGeodesicPathLengths(c,m);this.geodesicPathLength=null!=e&&this._length>1?e:null}else this.geodesicPathLength=null;if(this._updateMode(r),!c)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),void(this.validMeasurement=!1);this._updateAreaAndPerimeterLength(s,n,o,i),d&&this._updateGeodesicArea(s,m),this.validMeasurement=!0}getData(){return{validMeasurement:this.validMeasurement,numVertices:this.numVertices,hasStagedVertex:this.hasStagedVertex,positionsRender:this.positionsRender,positionsFittedWorld:this.positionsFittedWorld,positionsFittedRender:this.positionsFittedRender,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorld.length=e,this.positionsRender.length=e,this.positionsFittedWorld.length=e,this.positionsFittedRender.length=e,this.positionsGeodesic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorld.push(E()),this.positionsRender.push(E()),this.positionsFittedWorld.push(P()),this.positionsFittedRender.push(E()),this.positionsGeodesic.push(E()),this.positionsSpherical.push(E()),this.positionsStereographic.push(P()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const t=this.positionsWorld,s=this.pathSegmentLengths;let i=0;const r=this._length;for(let n=0;n<r;++n){const o=s[n]=O(t[n],t[(n+1)%r]);(n<r-1||e)&&(i+=o)}return i}_updateGeodesicPathLengths(e,t){const s=this.positionsGeodesic,i=this.geodesicPathSegmentLengths;let r=0;const n=this._length;for(let o=0;o<n;++o){const a=this._geodesicLengthMeasurementUtils.geodesicDistance(s[o],s[(o+1)%n],t);if(null==a)return null;const l=y(a,"meters").value,h=i[o]=l;(o<n-1||e)&&(r+=h)}return _(r,"meters")}_updateAreaAndPerimeterLength(e,t,s,i){const r=e.renderCoordsHelper,n=this.positionsWorld,o=this.positionsRender,a=this.positionsFittedWorld,l=this.positionsFittedRender,h=this._planeWorldCoords,p=this._centroidRenderCoords;re(o,p),r.worldUpAtPosition(p,this._worldUp),r.worldBasisAtPosition(p,0,this._worldTangent),Bt(p,this._worldUp,t,this._worldUp,s),Bt(p,this._worldTangent,t,this._worldTangent,s),n.length>2&&X(n,h),this.fittingMode=this._selectFittingMode(h,n,this._worldUp,i);let c=0;if("horizontal"===this.fittingMode){let e=-1/0;o.forEach((t,s)=>{const i=r.getAltitude(o[s]);i>e&&(e=i,c=s)})}const u=n[c];let m=h,d=this._worldTangent;"horizontal"===this.fittingMode?m=this._worldUp:"vertical"===this.fittingMode&&(m=this._tempVec3,d=this._worldUp,ne(h,this._worldUp,m)),D(this._frame[2],m),ne(d,m,this._frame[0]),I(this._frame[1],this._frame[0],this._frame[2]),R(this._frame[1],this._frame[1]);const g=this._tempVec3,_=this._tempU,y=this._tempV;for(let e=0;e<this._length;++e){const i=a[e],r=l[e];A(g,n[e],u),V(i,T(this._frame[0],g),T(this._frame[1],g)),G(_,this._frame[0],i[0]),G(y,this._frame[1],i[1]),x(g,_,y),x(g,g,u),q(g,s,r,t)}this.perimeterLength=this._length>0?this._updatePerimeterLengths():null,re(l,this.areaCentroidRenderCoords),q(this.areaCentroidRenderCoords,t,this.areaCentroidWorldCoords,s),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?this._computeArea():null}_updateGeodesicArea(e,t){const{renderCoordsHelper:s,spatialReference:i}=e,{positionsSpherical:r,positionsStereographic:n}=this,o=this._tempVec3,a=Y(r,o);if(!a)return void(this.geodesicArea=null);const l=this._tempU,h=this._tempV;oe(o,l,h);for(let e=0;e<this._length;++e){const t=T(r[e],l),s=T(r[e],h),i=T(r[e],o);V(n[e],t/i,s/i)}G(o,o,k(i).radius),s.toRenderCoords(o,B(i),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=a&&0===this.geodesicIntersectingSegments.size?this._computeGeodesicArea(t):null}_updatePerimeterLengths(){const e=this.positionsFittedWorld,t=this.perimeterSegmentLengths;let s=0;for(let i=0;i<this._length;++i)s+=t[i]=M(e[i],e[(i+1)%this._length]);return _(s,this._lengthMeasurementUnit)}_updateIntersectingSegments(){const e=this.positionsFittedWorld,t=this.intersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const r=e[s],n=e[(s+1)%this._length],o=e[i],a=e[(i+1)%this._length];K(r,n,o,a)&&(t.add(s),t.add(i))}}_computeArea(){const e=this.positionsFittedWorld,t=this.triangleIndices=Q(ae(e));let s=0;for(let i=0;i<t.length;i+=3)s+=J(e[t[i]],e[t[i+1]],e[t[i+2]]);return j(s,this._areaMeasurementUnit)}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,t=this.geodesicIntersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const r=e[s],n=e[(s+1)%this._length],o=e[i],a=e[(i+1)%this._length];K(r,n,o,a)&&(t.add(s),t.add(i))}}_computeGeodesicArea(e){const t=this.positionsGeodesic,s=this.positionsStereographic,i=this.geodesicTriangleIndices=Q(ae(s));let r=0;for(let s=0;s<i.length;s+=3){const n=$(t[i[s]],t[i[s+1]],t[i[s+2]],e,this._geodesicAreaMeasurementUtils);if(null==n)return null;r+=y(n,"square-meters").value}return j(r,"square-meters")}_selectFittingMode(e,t,s,i){const r=t.map(t=>Math.abs(ee(e,t))).reduce((e,t)=>Math.max(e,t),0);te(t,this._tempSphere);const n=r/(2*this._tempSphere[3]),o=n<i.maxRelativeErrorCoplanar,a=n<i.maxRelativeErrorAlmostCoplanar;let l="horizontal";return o?l="oblique":a&&(l=Math.abs(T(s,e))>Math.cos(d(i.verticalAngleThreshold))?"horizontal":"vertical"),l}_updateCursorSegmentLength(e,t){const s=e.lastPoint;e.isValidPolygon||null==s||null==t?(this.geodesicStagedSegmentLength=null,this.stagedSegmentLength=null):(this.geodesicStagedSegmentLength=this._geodesicLengthMeasurementUtils.geodesicDistanceBetweenPoints(s,t),this.stagedSegmentLength=pe(s,t)?.direct)}_updateMode(e){if(0===e){this.actualMeasurementMode="euclidean";let e=0;null!=this.geodesicPathLength&&(e+=this.geodesicPathLength.value),e>Kt&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=1===e?"euclidean":"geodesic";null==this.geodesicPathLength&&(this.actualMeasurementMode="euclidean"),this._mode=e}}const Kt=1e5;let Zt=class extends t{constructor(e){super(e)}initialize(){this._measurementDataManager=new Qt(this.view,this.geodesicAreaMeasurementUtils,this.geodesicLengthMeasurementUtils),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),h(()=>this.analysisViewData.stagedPoint,()=>this._update(),p),h(()=>this.analysisViewData.mode,()=>this._update(),p)]),this._update()}_update(e=!1){const{analysisViewData:t,view:s}=this;this._measurementDataManager.update(t.path,t.stagedPoint,s,{maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80},t.mode,e)&&(t.measurementData=this._measurementDataManager.getData())}};e([r({constructOnly:!0})],Zt.prototype,"view",void 0),e([r({constructOnly:!0})],Zt.prototype,"analysis",void 0),e([r({constructOnly:!0})],Zt.prototype,"analysisViewData",void 0),e([r({constructOnly:!0})],Zt.prototype,"geodesicAreaMeasurementUtils",void 0),e([r({constructOnly:!0})],Zt.prototype,"geodesicLengthMeasurementUtils",void 0),Zt=e([o("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],Zt);let Jt=class extends me{constructor(e={}){super(e),this._version=0,this._internalGeometryChange=!1,this._extent=ge()}set areaMeasurement(e){this._set("areaMeasurement",e),null!=e&&null!=this.view&&this._initialize(e,this.view)}set view(e){this._set("view",e),null!=e&&null!=this.areaMeasurement&&this._initialize(this.areaMeasurement,e)}get constructed(){return null!=this.areaMeasurement&&null!=this.view}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||0===this._editGeometry.parts.length}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.parts[0]?.vertices.length){const e=ge(this._extent);return this.forEachVertex(t=>{_e(e,t.pos)}),e}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(e,t){this.removeAllHandles(),this.addHandles(h(()=>e.geometry,()=>{this._updateEditGeometryFromModelGeometry(e,t)},c)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,t){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let s=e.geometry;if(null!=s){const i=W(s,t.spatialReference);null==i&&ye(e,s.spatialReference,n.getLogger(this)),s=i}this._editGeometryOperations=null!=s?ve.fromGeometry(s,t.state.viewingMode):new ve(new ke("polygon",we(!0,!1,t.spatialReference)),t.state.viewingMode),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",t=>{this._makeDirty(null!=t.addedVertices||null!=t.removedVertices),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex(t=>{e.push(t)}),e}get numVertices(){return this.constructed?this._editGeometry.parts[0]?.vertices.length??0:0}get polygonIsClosed(){return this._editGeometry.parts[0]?.isClosed()??!1}get firstPoint(){if(this.constructed){const{coordinateHelper:e,parts:t}=this._editGeometry,s=t[0]?.getFirstVertex();if(null!=s)return e.vectorToPoint(s.pos)}return null}get lastPoint(){if(this.constructed){const{coordinateHelper:e,parts:t}=this._editGeometry,s=t[0]?.getLastVertex();if(null!=s)return e.vectorToPoint(s.pos)}return null}getVertex(e){if(!this.constructed||!this._editGeometry.parts[0]?.vertices.length)return null;const t=this._editGeometry.parts[0].vertices[0];let s=t;do{if(s.index===e)return s;s=s.rightSegment.rightVertex}while(s!==t&&null!=s);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){if(this.constructed&&this._editGeometry.parts.length>0)for(const t of this._editGeometry.parts[0].iterateVertices())e(t,t.index)}forEachVertexPosition(e){const t=this._editGeometry.coordinateHelper;this.forEachVertex((s,i)=>{t.vectorToPoint(s.pos,Xt),e(Xt,i)})}clear(){null!=this.areaMeasurement&&(this.areaMeasurement.geometry=null)}add(e){if(!this.constructed)return null;if(0===this._editGeometry.parts.length){const e=this.view;this._editGeometry.parts.push(new Se(e.spatialReference,e.state.viewingMode))}const t=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),t}close(){if(!this.constructed||0===this._editGeometry.parts.length)return null;const e=this._editGeometryOperations.closePart(this._editGeometry.parts[0]);return this.emit("change"),e}ensureContains(e,t=""){let s=!1;if(this._editGeometry.parts.forEach(t=>{for(const i of t.iterateVertices())i===e&&(s=!0)}),!s)throw new Error(`vertex doesn't exist ${t}`);return s}setVertexPosition(e,t){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(e,this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),s}equals(e){if(this.numVertices!==e.numVertices)return!1;let t=!0;return this.forEachVertexPosition((s,i)=>{const r=e.getVertexPositionAsPointFromIndex(i);s.equals(r)||(t=!1)}),!!t}};e([r({value:null})],Jt.prototype,"areaMeasurement",null),e([r({value:null})],Jt.prototype,"view",null),e([r()],Jt.prototype,"isEmptyPolygon",null),e([r()],Jt.prototype,"isValidPolygon",null),e([r()],Jt.prototype,"extent",null),e([r()],Jt.prototype,"spatialReference",null),e([r()],Jt.prototype,"numVertices",null),e([r()],Jt.prototype,"polygonIsClosed",null),Jt=e([o("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementPathHelper")],Jt);const Xt=new de;function Yt(e,t){return y(e,w(e.value,e.unit,t))}function $t(e,t){return y(e,es(e,t))}function es(e,t){const s=function(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-nautical-miles":return"nautical-miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}(t);return S(e.value,e.unit,s)}const ts=Object.freeze(Object.defineProperty({__proto__:null,build:function(e){const t=new ot,{vertex:s,fragment:i,varyings:r}=t;return t.fragment.include(Te,e),t.include(Ge,e),t.include(Ee,e),Fe(s,e),t.attributes.add("position","vec3"),t.attributes.add("uv0","vec2"),r.add("vUV","vec2"),r.add("vpos","vec3"),s.main.add(nt`vUV = uv0;
vpos = position;
forwardViewPosDepth((view * vec4(position, 1.0)).xyz);
gl_Position = proj * view * vec4(position, 1.0);`),i.uniforms.add(new rt("size",e=>e.size)),i.uniforms.add(new ze("color1",e=>e.color1)),i.uniforms.add(new ze("color2",e=>e.color2)),i.include(He),i.main.add(nt`discardByTerrainDepth();
vec2 uvScaled = vUV / (2.0 * size);
vec2 uv = fract(uvScaled - 0.25);
vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
float t = mix(abs(ab.x + ab.y), 0.5, fade);
fragColor = mix(color2, color1, t);
outputColorHighlightOID(fragColor, vpos, fragColor.rgb);`),t}},Symbol.toStringTag,{value:"Module"}));class ss extends We{constructor(e,t){super(e,t,new Be(ts,()=>Promise.resolve().then(()=>ts)),st.locations)}initializePipeline(e){const{oitPass:t,transparent:s,polygonOffset:i,output:r}=e,n=0===t,o=2===t;return at({blending:s?Ke(t):null,depthTest:{func:Qe(t)},depthWrite:Ne(e),drawBuffers:qe(t,r),colorWrite:lt,polygonOffset:n||o?i?is:null:{factor:-1,units:-25}})}}const is={factor:0,units:-25};class rs extends Je{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.textureCoordinateType=0,this.emissionSource=0,this.output=0,this.occlusionPass=!1,this.olidColorInstanced=!1,this.overlayEnabled=!1,this.draped=!1,this.snowCover=!1}get discardInvisibleFragments(){return this.transparent&&this.writeDepth}}e([Ze()],rs.prototype,"transparent",void 0),e([Ze()],rs.prototype,"writeDepth",void 0),e([Ze()],rs.prototype,"polygonOffset",void 0),e([Ze()],rs.prototype,"terrainDepthTest",void 0),e([Ze()],rs.prototype,"cullAboveTerrain",void 0);class ns extends it{constructor(e){super(e,as),this._configuration=new rs,this.produces=new Map([[2,e=>et(e)&&!this.transparent],[4,e=>et(e)&&this.transparent&&this.parameters.writeDepth],[8,e=>et(e)&&this.transparent&&!this.parameters.writeDepth]])}getConfiguration(e,t){return super.getConfiguration(e,t,this._configuration),this._configuration.transparent=this.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.oitPass=t.oitPass,this._configuration.terrainDepthTest=t.terrainDepthTest,this._configuration.cullAboveTerrain=t.cullAboveTerrain,this._configuration}get visible(){return this.parameters.color1[3]>=ht||this.parameters.color2[3]>=ht}get transparent(){return this.parameters.color1[3]<1||this.parameters.color2[3]<1}createGLMaterial(e){return new os(e)}createBufferWriter(){return new tt(st)}}class os extends Ye{beginSlot(e){return this.getTechnique(ss,e)}}class as extends Xe{constructor(){super(...arguments),this.size=C(1,1),this.color1=z(.75,.75,.75,1),this.color2=z(.5,.5,.5,1),this.writeDepth=!0,this.polygonOffset=!1}}class ls extends je{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=4,this._geometry=null,this._size=C(1,1),this._color1=z(1,.5,0,.5),this._color2=z(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){L(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){Oe(e,this._color1)||(Ie(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){Oe(e,this._color2)||(Ie(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial?.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new ns({size:this._size,color1:this._color1,color2:this._color2,writeDepth:!1,polygonOffset:!0,renderOccluded:4,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachMaterial(e){e(this._checkerBoardMaterial)}createGeometries(e){if(null==this._geometry||null==this._checkerBoardMaterial)return;const t=hs;De(t,this.transform);const s=this._geometry,i=[],r=E();s.position.forEach(e=>{A(r,e,t),i.push(r[0],r[1],r[2])});const n=[];s.uv.forEach(e=>{n.push(e[0],e[1])});const o=new $e(this._checkerBoardMaterial,[["position",new Re(i,s.triangleIndices,3,!0)],["uv0",new Re(n,s.triangleIndices,2,!0)]]);e.addGeometry(o)}}const hs=E();let ps=class extends t{get _parameters(){const{accentColor:e,textColor:t}=this.view.effectiveTheme,s=be(e),i=Ve(e,.5),r=Ve(Me(e),.5),n=Me(t,160);return{accentColor:s,transparentAccentColor:i,transparentContrastColor:r,intersectingLineColor:[1,.2,0,1],textColor:t,textBackgroundColor:Le(n,.6),textCalloutColor:Le(n,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get _renderUnits(){const e=this.view.renderCoordsHelper.spatialReference;return f(e)??"meters"}get testData(){}constructor(e){super(e),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=E(),this._originTransform=Ae(),this.messages=null,this.viewData=cs,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:e,_parameters:t,view:s}=this;this._path=new fe({view:s,attached:!0,width:t.pathLineWidth,polygonOffset:!0,renderOccluded:4,isDecoration:!0}),this._intersectedPath=new fe({view:s,attached:!0,width:t.pathLineWidth,polygonOffset:!0,renderOccluded:4,isDecoration:!0}),this._perimeter=new fe({view:s,attached:!0,width:t.perimeterLineWidth,polygonOffset:!0,renderOccluded:4,isDecoration:!0}),this._intersectedPerimeter=new fe({view:s,attached:!0,width:t.perimeterLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:4,isDecoration:!0}),this._projectionLines=new fe({view:s,attached:!0,width:t.projectionLineWidth,stipplePattern:ut(t.projectionLineStippleSize),polygonOffset:!0,renderOccluded:4,isDecoration:!0}),this._measurementArea=new ls({view:s,attached:!0,isDecoration:!0});const i={attached:!0,view:s,isDecoration:!0};this._areaLabel=new Ue({...i,fontSize:16}),this._perimeterLengthLabel=new Ue({...i,fontSize:12}),this.addHandles([h(()=>[e.mode,this.visible,e.unit,e.measurementData,e.stagedPoint],()=>this._update(),c),h(()=>s.state?.camera,()=>this._updateLabels(),c),mt(()=>this._updateMessageBundle()),h(()=>this._parameters,({accentColor:e,transparentAccentColor:t,transparentContrastColor:s,textColor:i,textBackgroundColor:r,textCalloutColor:n})=>{const{_path:o,_intersectedPath:a,_perimeter:l,_projectionLines:h,_measurementArea:p,_areaLabel:c,_perimeterLengthLabel:u}=this;o.color=e,a.color=e,l.color=e,h.color=e,p.color1=t,p.color2=s,c.textColor=i,c.backgroundColor=r,c.calloutColor=n,u.textColor=i,u.backgroundColor=r,u.calloutColor=n},u)]),this._updateMessageBundle()}destroy(){this._measurementArea=s(this._measurementArea),this._path=s(this._path),this._intersectedPath=s(this._intersectedPath),this._perimeter=s(this._perimeter),this._intersectedPerimeter=s(this._intersectedPerimeter),this._areaLabel=s(this._areaLabel),this._perimeterLengthLabel=s(this._perimeterLengthLabel),this._projectionLines=s(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:e},analysisViewData:t}=this;null!=e&&(this._updateViewData(e,t.path),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(e,t){const s=e.validMeasurement,i="geodesic"===e.actualMeasurementMode,r=i?e.geodesicArea:e.area;let n=1;if(r){const e=Yt(r,this.analysisViewData.unit);n=g(Math.sqrt(e.value)/Math.sqrt(300)),n*=Math.sqrt(b(1,e.unit,"square-meters")),n=b(n,"meters",this._renderUnits)}const o={validMeasurement:s,numVertices:e.numVertices,hasStagedVertex:e.hasStagedVertex,path:t,mode:e.actualMeasurementMode,positionsRender:e.positionsRender,positionsFittedWorld:e.positionsFittedWorld,positionsFittedRender:e.positionsFittedRender,intersectingSegments:i?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:i?e.geodesicTriangleIndices:e.triangleIndices,areaCentroid:i?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,perimeterLengthLabelSegmentIndex:0,area:i?e.geodesicArea:e.area,pathLength:i?e.geodesicPathLength:e.pathLength,perimeterLength:e.perimeterLength,checkerSize:n};this._set("viewData",o)}_updateOrigin(){const e=this.viewData;re(e.positionsRender,this._origin),xe(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(e){const t=this.viewData,s=this.view.renderCoordsHelper.spatialReference,i=t.mode,r=[],n=[],o=[],a=t.numVertices,l=t.validMeasurement?a:a-1;for(let h=0;h<l;++h){const l=t[e][h],p=t[e][(h+1)%a];let c=null;switch(i){case"euclidean":c=new ct(l,p);break;case"geodesic":c=new pt(l,p,s)}t.intersectingSegments.has(h)?o.push(c):n.push(c),r.push(c)}let h=null;return t.validMeasurement&&t.hasStagedVertex&&l>=2?h=r[r.length-2]:t.hasStagedVertex&&l>=1&&(h=r[r.length-1]),{all:r,nonIntersecting:n,intersecting:o,stagedSegment:h}}_updatePathSegments(){const{visible:e}=this,t=this._createSegments("positionsRender");this._path.setGeometryFromSegments(t.nonIntersecting,this._origin),this._path.visible=e,this._intersectedPath.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPath.visible=e,this._pathSegments=t.all}_updatePerimeterSegments(){const e=this.visible&&"euclidean"===this.viewData.mode&&this.viewData.path.numVertices>2,t=this._createSegments("positionsFittedRender");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._perimeter.visible=e,this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPerimeter.visible=e,this._perimeterSegments=t.all}_updateArea(){const e=this.viewData;switch(e.mode){case"euclidean":this._updateAreaEuclidean(e);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){const t=this.visible;e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsFittedWorld,position:e.positionsFittedRender,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=t):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const e=this.viewData,t=this.visible,s=e.mode,i=e.numVertices;if(i>0&&e.validMeasurement&&"euclidean"===s){const s=[];for(let t=0;t<i;++t){const i=E();A(i,e.positionsRender[t],this._origin);const r=E();A(r,e.positionsFittedRender[t],this._origin),s.push([i,r])}this._projectionLines.geometry=s,this._projectionLines.visible=t}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:e}=this,{area:t,path:s}=e;if(!s)return;const i=this.visible,r=this._areaLabel,n=this._perimeterLengthLabel,o=e.validMeasurement;r.visible=!0,n.visible=!0;let a=!1;const l=function(e,t,s){return e&&t&&Ce(e,t,w(t.value,t.unit,s))}(this.messages,t,this.analysisViewData.unit);if(null!=l&&i&&(r.geometry={type:"point",point:e.areaCentroid},r.text=l,a=e.validMeasurement&&0===e.intersectingSegments.size),this._set("areaLabel",l),i&&o&&0===e.intersectingSegments.size){const t="geodesic"===e.mode,s=t?e.pathLength:e.perimeterLength,i=(h=this.messages,p=s,c=this.analysisViewData.unit,h&&p&&Ce(h,p,es(p,c)));this._set("perimeterLengthLabel",i),n.distance=this._parameters.labelDistance,n.anchor="top",n.text=i;let r=!0;for(let s=0;s<e.numVertices;++s){const i=(e.perimeterLengthLabelSegmentIndex+s)%e.numVertices,o=t?this._pathSegments[i]:this._perimeterSegments[i];if(r=!0,n.geometry={type:"segment",segment:o,sampleLocation:"center"},!n.overlaps(this._areaLabel))break;r=!1}n.visible=r}else n.visible=!1;var h,p,c;r.visible=a}_updateMessageBundle(){this.loadingMessages=!0,dt("esri/core/t9n/Units").then(e=>{this.messages=e,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};e([r()],ps.prototype,"_parameters",null),e([r()],ps.prototype,"view",void 0),e([r()],ps.prototype,"messages",void 0),e([r()],ps.prototype,"analysis",void 0),e([r()],ps.prototype,"viewData",void 0),e([r()],ps.prototype,"analysisViewData",void 0),e([r({readOnly:!0})],ps.prototype,"areaLabel",void 0),e([r({readOnly:!0})],ps.prototype,"perimeterLengthLabel",void 0),e([r()],ps.prototype,"loadingMessages",void 0),e([r()],ps.prototype,"visible",null),e([r()],ps.prototype,"_renderUnits",null),ps=e([o("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],ps);const cs={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,mode:null,positionsRender:null,positionsFittedWorld:null,positionsFittedRender:null,intersectingSegments:null,triangleIndices:null,areaCentroid:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null,area:null,pathLength:null,perimeterLength:null};class us{constructor(e,t=null){this.screenPoint=e,this.result=t}}class ms{constructor(e,t){this.scenePoint=e,this.mapPoint=t}}class ds{constructor(e){this.vertexManipulators=[],this._destroyed=!1,this._isManipulatorsOwner=!0,this._visible=!0,this._listenerHandles=null,this._tempHandlePosition=E();const{analysisViewData:t,manipulators:s,toolState:i,view:r,visible:n}=e;this._analysisViewData=t,this._toolState=i,null!=s?(this._manipulators=s,this._isManipulatorsOwner=!1):this._manipulators=new Dt,this._view=r,this._intersector=xt(r.state.viewingMode);const o=Vt(this._handleColor),a=[new Mt(Ct(o,1,32,32))],l=new Lt({view:r,renderObjects:a});l.available=!1,l.radius=js,l.interactive=!1,this._manipulators.add(l),this._cursorManipulator=l,this._cursorManipulatorMaterial=o,this._laserLine=new Pt({view:r,attached:!0,style:{glowWidth:gs,glowFalloff:_s,innerWidth:ys},isDecoration:!0}),this._updateVisibility(n??!0)}destroy(){this._listenerHandles=s(this._listenerHandles),this._isManipulatorsOwner?this._manipulators=s(this._manipulators):this._manipulators=null,this._laserLine=s(this._laserLine),this._destroyed=!0}get destroyed(){return this._destroyed}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get testData(){}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(e){this._destroyed||this._visible===e||this._updateVisibility(e)}_updateVisibility(e){this._visible=e,this._laserLine.visible=e,e?(this._initializeListeners(),this._updateAll()):(this._destroyListeners(),this.vertexManipulators.forEach(({manipulator:e})=>this._removeVertexManipulator(e)),this.vertexManipulators=[])}vertexHandleAt(e,t){const s=this._manipulators.intersect(e,t);return s?.metadata}pick(e){const t=this._view.spatialReference,s=bt(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(s,this._intersector);const i=this._intersector.results.min,r=E();if(!i.getIntersectionPoint(r))return null;const n=this._view.renderCoordsHelper.fromRenderCoords(r,new de({spatialReference:t}));return null==n?null:new ms(r,n)}_updateAll(){this._visible&&(this._updateVertexManipulators(),this._updateLaserLine())}_createVertexManipulator(){const e=Vt(this._handleColor),t=[new Mt(Ct(e,1,32,32))],s=new Lt({view:this._view,renderObjects:t});return s.radius=js,this._manipulators.add(s),{manipulator:s,material:e}}_removeVertexManipulator(e){this._manipulators.remove(e)}_updateVertexManipulators(){const{viewData:e}=this._analysisViewData,t=this._analysisViewData.path?this._analysisViewData.path.vertices:[],s=this.vertexManipulators;!function(e,t,s,i){for(;e.length<t;)e.push(s());if(i)for(;e.length>t;)i(e.pop());else e.length=t}(s,t.length,()=>this._createVertexManipulator(),({manipulator:e})=>this._removeVertexManipulator(e)),s.forEach(({manipulator:s},i)=>{s.metadata=t[i],s.renderLocation=e.positionsRender[i],s.cursor=0===i&&"drawing"===this._toolState.polygonState?"crosshair":null}),"drawing"===this._toolState.polygonState&&null!=this._analysisViewData.stagedPoint?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._analysisViewData.stagedPoint):this._cursorManipulator.available=!1}get _handleColor(){return Ve(this._view.effectiveTheme.accentColor,.5)}_getFocusPoint(){const{lastDraggedVertex:e}=this._analysisViewData;switch(this._toolState.polygonState){case"drawing":return null!=this._analysisViewData.stagedPoint?this._analysisViewData.stagedPoint:null!=e?this._analysisViewData.path.getVertexPositionAsPoint(e):this._analysisViewData.path.lastPoint;case"editing":return null!=e?this._analysisViewData.path.getVertexPositionAsPoint(e):null;default:return this._analysisViewData.stagedPoint}}_updateLaserLine(){const e="measured"!==this._toolState.polygonState&&this._toolState.active,t=this._getFocusPoint();if(e&&null!=t){const e=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(t,e),this._laserLine.heightManifoldTarget=e}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new St,this._listenerHandles.add([h(()=>this._toolState.polygonState,()=>this._updateLaserLine()),h(()=>this._analysisViewData.viewData,()=>this._updateAll(),p),h(()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.stagedPoint}),()=>this._updateLaserLine()),h(()=>this._toolState.active,()=>this._updateAll()),h(()=>this._view.effectiveTheme.accentColor,e=>{const t=Ve(e,.5);for(const{material:e}of this.vertexManipulators)e.setParameters({color:t});this._cursorManipulatorMaterial.setParameters({color:t});const s=wt.toUnitRGB(e),i=wt.toUnitRGB(Me(e)),r=.75*e.a,n=this._laserLine,o=n.style;n.style={...o,glowColor:s,innerColor:i,globalAlpha:r}},{initial:!0,equals:Pe})])}_destroyListeners(){this._listenerHandles=s(this._listenerHandles)}}const gs=8,_s=8,ys=1,js=5;let fs=class extends At{constructor(e){super(e),this._updatingHandles=new yt,this.polygonState="initial",this.removeIncompleteOnCancel=!1,this.manipulators=new Dt,this._getSnappingContext=gt(e=>new Gt({elevationInfo:{mode:"absolute-height",offset:0},pointer:e,editGeometryOperations:new ve(new ke("point",we(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new ft}))}initialize(){const{view:e,analysisViewData:t,manipulators:s,visible:i}=this;this.measurementView=new ds({view:e,analysisViewData:t,toolState:this,manipulators:s,visible:i});const r=Ft(e);this._snappingManagerResult=r,this.addHandles(r),this._snappingOperation=new zt({view:e}),this._updatingHandles.add(()=>this.stagedPoint,e=>{this.analysisViewData.stagedPoint=null!=e?jt(e,new de):null},c),Ht(this,()=>{const e=this.view.inputManager.latestPointerType??"mouse",t=this._getSnappingContext(e);this._updatingHandles.addPromise(_t(this._snappingOperation.snapAgainNearPreviousMapPoint(this._snappingManager,t)))}),this._setupManipulators(),this.addHandles([m(()=>"measured"===this.state,()=>this.finishToolCreation(),c),this.analysisViewData.path.on("change",()=>{const e=this.analysisViewData.path;"initial"!==this.polygonState||e.isEmptyPolygon||(e.isValidPolygon?this.polygonState="measured":this.polygonState="drawing")})])}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._updatingHandles=s(this._updatingHandles)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){return 0===this.analysisViewData.path.numVertices?"ready":this.analysisViewData.path.isValidPolygon&&"editing"!==this.polygonState?"measured":"measuring"}get cursor(){return this.active?"crosshair":null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}get stagedPoint(){return this._snappingOperation.stagedPoint}set stagedPoint(e){this._snappingOperation.stagedPoint=e}get snappingOptions(){return this._snappingManager.options}finishMeasurement(){const{path:e}=this.analysisViewData;e.numVertices<=2||(e.close(),this.polygonState="measured",this._resetSnappingState(),this.active&&(this.view.activeTool=null))}resetCreated(){super.resetCreated(),this._resetSnappingState(),this.polygonState="initial","measured"===this.state&&(this.polygonState="measured",this.finishToolCreation())}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onDeactivate(){this._resetSnappingState()}onInputEvent(e){switch(e.type){case"immediate-double-click":this._handleImmediateDoubleClick(e);break;case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"drag":this._handleDrag(e);break;case"key-down":this._handleKeyDown(e)}}_setupManipulators(){const e=e=>e.events.on("grab-changed",()=>{if(this.analysisViewData.path.isValidPolygon){const e=this.manipulators.some(e=>e.manipulator.grabbing);this.polygonState=e?"editing":"measured"}}),t=t=>{this.addHandles([Rt(t,(e,t,s,i)=>{const r=vt(e),n=e.metadata,o=this._snappingManager,a=this._getSnappingContext(i),l=this._updatingHandles,{snappingStep:h,cancelSnapping:p}=Et({snappingManager:o,snappingContext:a,updatingHandles:l});s=s.next(r).next(t=>(this.analysisViewData.lastDraggedVertex=null,this.analysisViewData.path.setVertexPosition(n,c),e.location=c,t)).next(p),t.next(r).next(kt(this.view)).next(...h).next(t=>{e.location=t.mapEnd,this.analysisViewData.lastDraggedVertex="end"===t.action?null:n,this.analysisViewData.path.setVertexPosition(n,jt(t.mapEnd))});const c=jt(this.analysisViewData.path.getVertexPositionAsPoint(n))}),e(t)],t)};this.manipulators.forEach(({manipulator:e})=>{t(e)}),this.addHandles([this.manipulators.on("after-add",({item:{manipulator:e}})=>{t(e)}),this.manipulators.on("after-remove",({item:{manipulator:e}})=>this.removeHandles(e))])}_handleImmediateDoubleClick(e){se(e)&&("drawing"===this.polygonState&&this.finishMeasurement(),e.stopPropagation())}_handleDrag(e){"editing"===this.polygonState&&e.stopPropagation()}_handleImmediateClick(e){if(!se(e))return;const t=Wt(e),{pointerType:s}=e;if(this.active)switch(this.polygonState){case"initial":case"measured":if(this._addVertexAt(t,s))return this.stagedPoint=null,this.polygonState="drawing",void e.stopPropagation();break;case"drawing":{const i=this.measurementView.vertexHandleAt(t,s);if(null==i){if(this._addVertexAt(t,s))return this.stagedPoint=null,void e.stopPropagation()}else 0===i.index&&(this.finishMeasurement(),e.stopPropagation());break}}"mouse"===e.pointerType&&this._hoverAt(t)}_handlePointerMove(e){if("mouse"===e.pointerType){const t=Wt(e);this._hoverAt(t)}}_handleKeyDown(e){const{path:t}=this.analysisViewData;e.key===Tt.complete&&"drawing"===this.polygonState&&t.numVertices>=3&&(this.stagedPoint=null,this.finishMeasurement(),e.stopPropagation())}_hoverAt(e){const{polygonState:t}=this;if(this.active&&vs.has(t)){const t=this._pick(e);if(null!=t?.mapPoint){const e=this._getSnappingContext("mouse");this._updatingHandles.addPromise(_t(this._snappingOperation.snap({point:t.mapPoint},this._snappingManager,e)))}}else this.stagedPoint=null}_addVertexAt(e,t){const s=this._pick(e),i=s?.mapPoint;if(null==i)return!1;this.analysis.valid&&"measured"===this.polygonState&&(this.analysis.clear(),this._set("created",!1),this.polygonState="initial");const r=this._getSnappingContext(t),n=this._snappingOperation.update({point:i},this._snappingManager,r),o=jt(n,new de);return this.analysisViewData.path.add(o),!0}_pick(e){const t=new us(e);return this.measurementView.pick(t)}_resetSnappingState(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null}get test(){}};e([r({readOnly:!0})],fs.prototype,"state",null),e([r()],fs.prototype,"polygonState",void 0),e([r({readOnly:!0})],fs.prototype,"cursor",null),e([r()],fs.prototype,"measurementView",void 0),e([r()],fs.prototype,"removeIncompleteOnCancel",void 0),e([r({constructOnly:!0})],fs.prototype,"view",void 0),e([r({constructOnly:!0})],fs.prototype,"analysis",void 0),e([r({constructOnly:!0})],fs.prototype,"analysisViewData",void 0),e([r({readOnly:!0})],fs.prototype,"manipulators",void 0),e([r()],fs.prototype,"updating",null),e([r()],fs.prototype,"stagedPoint",null),e([r()],fs.prototype,"snappingOptions",null),fs=e([o("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],fs);const vs=new Set(["initial","drawing","measured"]),ks=fs;let ws=class extends(l(t)){constructor(e){super(e),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.stagedPoint=null,this.mode=0,this.tool=null,this.userOperation=null}initialize(){const{analysis:e,view:t}=this;this.path=new Jt({view:t,areaMeasurement:e}),this._analysisVisualization=new ps({view:t,analysis:e,analysisViewData:this}),this.addResolvingPromise(Promise.all([le(),ce()]).then(([s,i])=>{this.destroyed||(this._analysisController=new Zt({view:t,analysis:e,analysisViewData:this,geodesicAreaMeasurementUtils:s,geodesicLengthMeasurementUtils:i}))})),this.addHandles(Ut(this,ks))}destroy(){Ot(this),this.userOperation=i(this.userOperation),this._analysisController=s(this._analysisController),this._analysisVisualization=s(this._analysisVisualization),this.path.destroy()}get visible(){return super.visible}set visible(e){super.visible=e}get interactive(){return super.interactive}set interactive(e){super.interactive=e}get updating(){return!!this._analysisVisualization?.loadingMessages}get result(){const{measurementData:e}=this;if(null==e)return{area:null,mode:null,perimeter:null};const{unit:t}=this;if("euclidean"===e.actualMeasurementMode){const{area:s,perimeterLength:i}=e;return{area:null!=s?Yt(s,t):null,perimeter:null!=i?$t(i,t):null,mode:"euclidean"}}const{geodesicArea:s,pathLength:i}=e;return{area:null!=s?Yt(s,t):null,perimeter:null!=i?$t(i,t):null,mode:"geodesic"}}get viewData(){return this._analysisVisualization.viewData}get areaLabel(){return this._analysisVisualization.areaLabel}get perimeterLengthLabel(){return this._analysisVisualization.perimeterLengthLabel}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??a(this.view)}get testData(){}place(e){return It(this,{placementOptions:e})}};e([r()],ws.prototype,"_analysisVisualization",void 0),e([r()],ws.prototype,"_analysisController",void 0),e([r({readOnly:!0})],ws.prototype,"type",void 0),e([r({constructOnly:!0,nonNullable:!0})],ws.prototype,"analysis",void 0),e([r()],ws.prototype,"updating",null),e([r()],ws.prototype,"result",null),e([r()],ws.prototype,"measurementData",void 0),e([r()],ws.prototype,"viewData",null),e([r()],ws.prototype,"areaLabel",null),e([r()],ws.prototype,"perimeterLengthLabel",null),e([r()],ws.prototype,"validMeasurement",null),e([r()],ws.prototype,"path",void 0),e([r()],ws.prototype,"lastDraggedVertex",void 0),e([r()],ws.prototype,"stagedPoint",void 0),e([r()],ws.prototype,"mode",void 0),e([r()],ws.prototype,"unit",null),e([r()],ws.prototype,"tool",void 0),e([r()],ws.prototype,"userOperation",void 0),ws=e([o("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],ws);const Ss=ws;export{Ss as default};
