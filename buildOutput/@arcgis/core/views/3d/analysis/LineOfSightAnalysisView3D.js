/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import e from"../../../core/Collection.js";import{EventedAccessor as i}from"../../../core/Evented.js";import{clone as s,e as o}from"../../../core/lang.js";import{e as n,a as r,d as a}from"../../../chunks/maybe.js";import{property as l}from"../../../core/accessorSupport/decorators/property.js";import{L as u}from"../../../chunks/Logger.js";import{subclass as p}from"../../../core/accessorSupport/decorators/subclass.js";import{c,b as d,a as h}from"../../../chunks/vec3f64.js";import{A as m}from"../../../chunks/AnalysisView3D.js";import{u as g,g as v}from"../../../chunks/featureReferenceUtils.js";import{c as y}from"../../../chunks/asyncUtils.js";import b from"../../../core/Handles.js";import{h as _,m as f}from"../../../chunks/handleUtils.js";import{ignoreAbortErrors as j}from"../../../core/promiseUtils.js";import{initial as k,on as C,watch as w,when as O,syncAndInitial as T}from"../../../core/reactiveUtils.js";import{D as I,e as S,n as P,i as L,j as V,h as R,z as D,s as E}from"../../../chunks/vec3.js";import{U as A}from"../../../chunks/UpdatingHandles.js";import M from"../../../geometry/Point.js";import{projectOrLoad as H}from"../../../chunks/projectionUtils.js";import{p as U}from"../../../chunks/projectBoundingRect.js";import{E as x}from"../../../chunks/aaBoundingBox.js";import{e as F,x as G,y as z}from"../../../chunks/aaBoundingRect.js";import{h as B,c as N,g as W,f as q}from"../../../chunks/ray.js";import{z as Z,m as J,d as Q}from"../../../chunks/elevationInfoUtils.js";import $ from"./LineOfSightAnalysisResult.js";import X from"../../../core/Accessor.js";import{s as Y}from"../../../chunks/screenUtils.js";import{b as K}from"../../../chunks/vector.js";import{g as tt}from"../../../chunks/dehydratedFeatures.js";import{f as et}from"../../../chunks/ray2.js";import{i as it,t as st}from"../../../chunks/intersectorUtilsConversions.js";import{I as ot}from"../../../chunks/Intersector2.js";import{l as nt,L as rt}from"../../../chunks/LineVisualElement.js";import{I as at,T as lt}from"../../../chunks/Scheduler.js";import ut from"../../../Color.js";import pt from"../../../analysis/LineOfSightAnalysisObserver.js";import ct from"../../../analysis/LineOfSightAnalysisTarget.js";import{c as dt,f as ht}from"../../../chunks/lineSegment.js";import mt from"../../../symbols/support/ElevationInfo.js";import{f as gt,k as vt}from"../../../chunks/colorUtils2.js";import{M as yt,b as bt,R as _t}from"../../../chunks/RenderObject.js";import{d as ft}from"../../../chunks/manipulatorUtils.js";import{b as jt}from"../../../chunks/graphicUtils.js";import{L as kt}from"../../../chunks/LaserlineVisualElement.js";import{A as Ct,c as wt,r as Ot,s as Tt}from"../../../chunks/analysisViewUtils.js";import{c as It}from"../../../chunks/dragEventPipeline.js";import{c as St}from"../../../chunks/screenUtils2.js";import{c as Pt}from"../../../chunks/mat4f64.js";import{P as Lt}from"../../../chunks/PointVisualElement.js";import"../../../chunks/watch.js";import"../../../chunks/ObjectPool.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../core/Error.js";import"../../../chunks/object.js";import"../../../config.js";import"../../../chunks/string.js";import"../../../chunks/events.js";import"../../../chunks/SetUtils.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/Lifecycle.js";import"../../../chunks/tracking.js";import"../../../chunks/SimpleTrackingTarget.js";import"../../../chunks/ensureType.js";import"../../../chunks/MapUtils.js";import"../../../chunks/shared.js";import"../../../chunks/SimpleObservable.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/jsonUtils.js";import"../../../chunks/metadata.js";import"../../../chunks/Warning.js";import"../../../core/Promise.js";import"../../../chunks/common.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../chunks/reader.js";import"../../../chunks/writer.js";import"../../../geometry/Geometry.js";import"../../../core/JSONSupport.js";import"../../../geometry/SpatialReference.js";import"../../../chunks/unitUtils.js";import"../../../chunks/jsonMap.js";import"../../../chunks/pe.js";import"../../../chunks/assets.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../chunks/persistableUrlUtils.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../geometry/Extent.js";import"../../../geometry/Multipoint.js";import"../../../chunks/zmUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/coordsUtils.js";import"../../../chunks/extentUtils.js";import"../../../chunks/boundsUtils.js";import"../../../chunks/mathUtils.js";import"../../../geometry/Polyline.js";import"../../../chunks/projectBuffer.js";import"../../../chunks/geodesicConstants.js";import"../../../chunks/projectXYZToVector.js";import"../../../geometry/support/GeographicTransformation.js";import"../../../geometry/support/GeographicTransformationStep.js";import"../../../chunks/zscale.js";import"../../../chunks/DoubleArray.js";import"../../../chunks/mat3.js";import"../../../chunks/mat3f64.js";import"../../../chunks/unitConversionUtils.js";import"../../../chunks/lengthUtils.js";import"../../../chunks/quatf64.js";import"../../../chunks/vec2f64.js";import"../../../chunks/vec4f64.js";import"../../../chunks/memoryEstimations.js";import"../../../chunks/quantizationUtils.js";import"../../../chunks/typeUtils.js";import"../../../layers/support/Field.js";import"../../../chunks/enumeration.js";import"../../../chunks/domains.js";import"../../../layers/support/CodedValueDomain.js";import"../../../layers/support/Domain.js";import"../../../layers/support/InheritedDomain.js";import"../../../layers/support/RangeDomain.js";import"../../../chunks/fieldType.js";import"../../../chunks/vec2.js";import"../../../chunks/mat4.js";import"../../../chunks/sphere.js";import"../../../chunks/vec4.js";import"../../../chunks/HUDIntersectorResult.js";import"../../../chunks/Intersector.js";import"../webgl/RenderCamera.js";import"../../../chunks/frustum.js";import"../../../chunks/plane.js";import"../../../chunks/mathUtils2.js";import"../../../chunks/orientedBoundingBox.js";import"../../../chunks/quat.js";import"../../../chunks/spatialReferenceEllipsoidUtils.js";import"../../../chunks/computeTranslationToOriginAndRotation.js";import"../../../chunks/ElevationProvider.js";import"../../../chunks/dehydratedFeatureUtils.js";import"../../../chunks/VisualElement.js";import"../../../chunks/RibbonLineMaterial.js";import"../../../chunks/Matrix4PassUniform.js";import"../../../chunks/Indices.js";import"../../../chunks/BufferView.js";import"../../../chunks/triangle.js";import"../../../chunks/Texture.js";import"../../../chunks/enums.js";import"../../../chunks/boundedPlane.js";import"../../../chunks/Emissions.glsl.js";import"../../../chunks/glsl.js";import"../../../chunks/colorUtils.js";import"../../../chunks/guards.js";import"../../../chunks/debugFlags2.js";import"../../../chunks/videoUtils.js";import"../../../chunks/requestImageUtils.js";import"../../../chunks/AlphaCutoff.js";import"../../../chunks/renderState.js";import"../../../chunks/Octree.js";import"../../../chunks/sdfPrimitives.js";import"../../../chunks/floatRGBA.js";import"../../../chunks/ShaderBuilder.js";import"../../../chunks/InterleavedLayout.js";import"../../../chunks/types.js";import"../../../chunks/VertexElementDescriptor.js";import"../../../chunks/VertexAttributeLocations.js";import"../../../chunks/line.js";import"../../../chunks/signal.js";import"../../../chunks/debugFlags.js";import"../../../core/Clonable.js";import"../../../chunks/persistable.js";import"../../../chunks/MD5.js";import"../../../chunks/multiOriginJSONSupportUtils.js";import"../../../chunks/uuid.js";import"../../../chunks/resourceExtension.js";import"../../../symbols/support/FeatureExpressionInfo.js";import"../../../layers/support/fieldUtils.js";import"../../../core/sql.js";import"../../../chunks/datetime.js";import"../../../chunks/hydratedFeatures.js";import"../../../Graphic.js";import"../../../PopupTemplate.js";import"../../../popup/content.js";import"../../../popup/content/AttachmentsContent.js";import"../../../popup/content/Content.js";import"../../../popup/support/AttachmentsOrderByInfo.js";import"../../../popup/content/CustomContent.js";import"../../../popup/content/ExpressionContent.js";import"../../../popup/ElementExpressionInfo.js";import"../../../popup/content/FieldsContent.js";import"../../../popup/FieldInfo.js";import"../../../popup/support/FieldInfoFormat.js";import"../../../chunks/date.js";import"../../../chunks/locale.js";import"../../../chunks/constants.js";import"../../../popup/content/MediaContent.js";import"../../../popup/content/BarChartMediaInfo.js";import"../../../popup/content/mixins/ChartMediaInfo.js";import"../../../popup/content/mixins/MediaInfo.js";import"../../../popup/content/support/ChartMediaInfoValue.js";import"../../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../../chunks/chartMediaInfoUtils.js";import"../../../popup/content/ColumnChartMediaInfo.js";import"../../../popup/content/ImageMediaInfo.js";import"../../../popup/content/support/ImageMediaInfoValue.js";import"../../../popup/content/LineChartMediaInfo.js";import"../../../popup/content/PieChartMediaInfo.js";import"../../../popup/content/RelationshipContent.js";import"../../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../../popup/content/TextContent.js";import"../../../popup/content/UtilityNetworkAssociationsContent.js";import"../../../popup/support/UtilityNetworkAssociationType.js";import"../../../popup/ExpressionInfo.js";import"../../../popup/LayerOptions.js";import"../../../popup/RelatedRecordsInfo.js";import"../../../support/actions/ActionBase.js";import"../../../core/Identifiable.js";import"../../../support/actions/ActionButton.js";import"../../../support/actions/ActionToggle.js";import"../../../geometry/support/jsonUtils.js";import"../../../chunks/createFeatureId.js";import"../../../chunks/typeUtils2.js";import"../../../symbols/CIMSymbol.js";import"../../../symbols/Symbol.js";import"../../../symbols/LabelSymbol3D.js";import"../../../symbols/Symbol3D.js";import"../../../chunks/collectionUtils.js";import"../../../portal/Portal.js";import"../../../core/Loadable.js";import"../../../portal/PortalGroup.js";import"../../../portal/PortalQueryParams.js";import"../../../portal/PortalQueryResult.js";import"../../../portal/PortalUser.js";import"../../../portal/PortalFolder.js";import"../../../symbols/ExtrudeSymbol3DLayer.js";import"../../../symbols/Symbol3DLayer.js";import"../../../chunks/utils3.js";import"../../../symbols/edges/Edges3D.js";import"../../../chunks/materialUtils.js";import"../../../chunks/opacityUtils.js";import"../../../symbols/edges/SketchEdges3D.js";import"../../../symbols/edges/SolidEdges3D.js";import"../../../chunks/Symbol3DMaterial.js";import"../../../symbols/FillSymbol3DLayer.js";import"../../../symbols/patterns/LineStylePattern3D.js";import"../../../symbols/patterns/StylePattern3D.js";import"../../../chunks/utils4.js";import"../../../chunks/colors.js";import"../../../chunks/symbolLayerUtils3D.js";import"../../../symbols/IconSymbol3DLayer.js";import"../../../symbols/LineSymbol3DLayer.js";import"../../../symbols/LineStyleMarker3D.js";import"../../../chunks/lineMarkers.js";import"../../../symbols/ObjectSymbol3DLayer.js";import"../../../symbols/PathSymbol3DLayer.js";import"../../../symbols/TextSymbol3DLayer.js";import"../../../symbols/Font.js";import"../../../symbols/WaterSymbol3DLayer.js";import"../../../symbols/support/StyleOrigin.js";import"../../../chunks/Thumbnail.js";import"../../../chunks/calloutUtils.js";import"../../../symbols/callouts/Callout3D.js";import"../../../symbols/callouts/LineCallout3D.js";import"../../../symbols/support/Symbol3DVerticalOffset.js";import"../../../symbols/LineSymbol3D.js";import"../../../symbols/MeshSymbol3D.js";import"../../../symbols/PictureFillSymbol.js";import"../../../symbols/FillSymbol.js";import"../../../symbols/SimpleLineSymbol.js";import"../../../symbols/LineSymbol.js";import"../../../symbols/LineSymbolMarker.js";import"../../../chunks/urlUtils.js";import"../../../symbols/PictureMarkerSymbol.js";import"../../../symbols/MarkerSymbol.js";import"../../../symbols/PointSymbol3D.js";import"../../../symbols/PolygonSymbol3D.js";import"../../../symbols/SimpleFillSymbol.js";import"../../../symbols/SimpleMarkerSymbol.js";import"../../../symbols/TextSymbol.js";import"../../../symbols/WebStyleSymbol.js";import"../../../chunks/dehydratedPoint.js";import"../../../chunks/ColorMaterial.js";import"../../../chunks/VertexColor.glsl.js";import"../../../chunks/TriangleMaterial.js";import"../../../chunks/vec3f32.js";import"../../../chunks/meshVertexSpaceUtils.js";import"../../../geometry/support/MeshGeoreferencedVertexSpace.js";import"../../../geometry/support/MeshLocalVertexSpace.js";import"../webgl.js";import"../../../Camera.js";import"../../../CameraLayout.js";import"../../../chunks/Cyclical.js";import"../../../chunks/projectPointToVector.js";import"../../../chunks/projectVectorToVector.js";import"../../../chunks/earthUtils.js";import"../webgl/RenderNode.js";import"../../../chunks/BlendColorsPremultiplied.glsl.js";import"../../../chunks/CameraSpace.glsl.js";import"../../../chunks/VertexArrayObject2.js";import"../../../chunks/VertexArrayObject.js";import"../../../chunks/VertexBuffer.js";import"../../../chunks/BufferObject.js";import"../../../chunks/InteractiveToolBase.js";import"../../../chunks/EditGeometryOperations.js";import"../../../chunks/ellipticArc7Utils.js";import"../../../chunks/geometry2dUtils.js";import"../../../chunks/ElevationContext.js";import"../../../chunks/HUDMaterial.js";import"../../../chunks/HUDVisibility.glsl.js";import"../../../chunks/BooleanBindUniform.js";let Vt=class extends X{constructor(t){super(t),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:c(),observerSurfaceNormal:null,observerFeatureId:null,target:c(),targetSurfaceNormal:null,targetFeatureId:null,observerAdjusted:c(),targetAdjusted:c()},this.computationResult={start:c(),end:c(),intersection:c(),isValid:!1,isTargetVisible:!1},this.result=null}notifyResultChanged(){this.notifyChange("computationResult")}notifyInputPointsChanged(){this.notifyChange("inputPoints")}};var Rt;t([l()],Vt.prototype,"target",void 0),t([l()],Vt.prototype,"elevationAlignedTargetLocation",void 0),t([l()],Vt.prototype,"inputPoints",void 0),t([l()],Vt.prototype,"computationResult",void 0),t([l()],Vt.prototype,"result",void 0),Vt=t([p("esri.views.3d.analysis.LineOfSight.LineOfSightComputation")],Vt);let Dt=Rt=class extends X{constructor(t){super(t)}clone(){return new Rt({type:this.type,id:s(this.id),mapPoint:s(this.mapPoint),renderPoint:d(this.renderPoint),normal:s(this.normal),ray:s(this.ray),graphic:this.graphic})}equals(t){return this.type===t.type&&this.id===t.id&&n(this.mapPoint,t.mapPoint)&&I(this.renderPoint,t.renderPoint)&&o(this.normal,t.normal)&&B(this.ray,t.ray)&&this.graphic===t.graphic}};t([l()],Dt.prototype,"type",void 0),t([l({constructOnly:!0})],Dt.prototype,"id",void 0),t([l({constructOnly:!0})],Dt.prototype,"mapPoint",void 0),t([l({constructOnly:!0})],Dt.prototype,"renderPoint",void 0),t([l({constructOnly:!0})],Dt.prototype,"normal",void 0),t([l({constructOnly:!0})],Dt.prototype,"graphic",void 0),t([l({constructOnly:!0})],Dt.prototype,"ray",void 0),Dt=Rt=t([p("esri.views.3d.analysis.LineOfSight.LineOfSightIntersectionResult")],Dt);let Et=class extends X{constructor(t){super(t),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=new ot(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=0}getScreenPointIntersection(t){const e=Y(t,K.get()),i=et(this.view.state.camera,e,xt);return this._getRayIntersection(i)}_getRayIntersection(t,e){const{view:i,intersector:s}=this;if(null==t||null==i.sceneIntersectionHelper)return null;s.options.store=0,i.sceneIntersectionHelper.intersectToolIntersectorRay(t,s,e);const o=s.results.min;if(null==o.target)return null;const n=c();if(!o.getIntersectionPoint(n))return null;if(null!=e?.maxDistance&&!o.withinDistance(e.maxDistance))return null;const r=i.renderCoordsHelper.fromRenderCoords(n,new M({spatialReference:i.spatialReference})),a=d(o.normal);if(it(o))return new Dt({type:2,id:o.target.lij.slice(),mapPoint:r,renderPoint:n,normal:a,ray:W(t),graphic:null});const l=st(o,i);if(null==l)return null;const{layer:u,sourceLayer:p}=l,h="scene"===p?.type?tt(l,p.objectIdField):l.uid;return new Dt({type:0,id:`${u?.uid}/${h}`,mapPoint:r,renderPoint:n,normal:a,ray:W(t),graphic:l})}updateFromGroundIntersection(t,e,i){const s=At,o=Mt,n=Ht,r=Ut;S(o,t),this.view.renderCoordsHelper.worldUpAtPosition(o,n),P(n,n);const a=this.view.basemapTerrain.visibleElevationBounds,l=(e>=0?1:-1)*((a?Math.abs(a.max-a.min):100)+Math.abs(e));L(r,n,l),V(s,o,r),q(s,o,xt);const u=this._getRayIntersection(xt,{include:this._terrainIntersectionOptionsLayerUids,maxDistance:l});if(null!=u){const t=Ut;return L(t,n,e),V(i,u.renderPoint,t),d(u.normal)}return S(i,t),null}};t([l()],Et.prototype,"view",void 0),t([l()],Et.prototype,"intersector",void 0),Et=t([p("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],Et);const At=c(),Mt=c(),Ht=c(),Ut=c(),xt=N();let Ft=class extends i{constructor(t){super(t),this.updateOnCameraChange=!0,this._observerGroundOffsetRenderSpace=0,this._effectiveObserverElevationMode="absolute-height",this._observerFeatureId=null,this._updatingHandles=new A,this._frameTask=at,this._computationHandles=new b,this._externalObserverUpdate=!0}initialize(){const t=this.view.resourceController?.scheduler;this._frameTask=t?t.registerTask(lt.LINE_OF_SIGHT_TOOL):at,this._intersector=new Et({view:this.view}),this.addHandles([this._connectObserver(),this._connectComputations(),this._connectTargets()])}destroy(){this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(t){this._frameTask.priority=t}get _computations(){return this.analysisViewData.computations}get _elevationAlignedObserverPositionRenderSpace(){return this.analysisViewData.observerEngineLocation}set _elevationAlignedObserverPositionRenderSpace(t){this.analysisViewData.observerEngineLocation=t}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}_computeResult(t){const e=t.computation,{inputPoints:i,computationResult:s}=e,{observerAdjusted:o,targetAdjusted:n}=i,{start:r,end:a}=s;S(r,o),S(a,n),this._canCompute(e)?this._computeIntersection(t):function({computation:t,interpolationInfo:e}){const{computationResult:i,inputPoints:s}=t,{start:o,end:n,intersection:r}=i,{originalIntersection:a,originalObserver:l,originalTarget:u}=e;if(S(r,a),s.isValid){const t=Bt,e=D(l,a)/D(l,u);E(t,o,l),L(t,t,1-e),V(r,r,t),E(t,n,u),L(t,t,e),V(r,r,t),i.isValid=!0}else t.result=null,i.isValid=!1,i.isTargetVisible=!1}(t),e.notifyResultChanged(),this.emit("result-changed",{target:t.computation.target,result:e.result})}_adjustStartEndPositions(t){const{view:e}=this,{inputPoints:i}=t,{observer:s,target:o,observerAdjusted:n,targetAdjusted:r}=i;S(n,s),S(r,o),g(e,this._intersector.intersector,i);const{observerSurfaceNormal:a,targetSurfaceNormal:l}=i,u=this._screenPixelSize,p=Bt;null!=a?S(p,a):R(p,r,n);const c=u;P(p,p),L(p,p,Math.min(c,1)),V(n,n,p),null!=l?S(p,l):R(p,n,r);const d=e.state.camera.computeScreenPixelSizeAt(r);P(p,p),L(p,p,Math.min(d,1)),V(r,r,p)}_computeIntersection({computation:t,interpolationInfo:e}){const{view:i}=this,{sceneIntersectionHelper:s,renderCoordsHelper:o}=i;if(null==s)return;const n=this._intersector.intersector,{computationResult:r,inputPoints:a}=t,{observer:l,target:u}=a,{start:p,end:c}=r,d=q(p,c,Nt);n.options.store=0,s.intersectToolIntersectorRay(d,n);const h=n.results.min,m=r.intersection,g=Bt;let v=!0;if(null!=h&&h.getIntersectionPoint(m)){S(e.originalIntersection,m),S(e.originalObserver,p),S(e.originalTarget,c),o.fromRenderCoords(m,g,i.spatialReference);const t=1-D(c,u)/D(p,u);v=D(l,m)>=t*D(l,u)}const y=new M(g,i.spatialReference);{const{result:e,target:s}=t;null!=e?(e.target=s,e.intersectedGraphic=v?null:st(h,i),e.intersectedLocation=v?null:y,e.visible=v):t.result=new $({target:s,elevationAlignedTargetLocation:t.elevationAlignedTargetLocation,intersectedGraphic:v?null:st(h,i),intersectedLocation:v?null:y,visible:v})}r.isValid=a.isValid=!0,r.isTargetVisible=v}_canCompute(t){const e=this.analysisViewData.elevationAlignedObserver,i=this.view.frustum;if(null==e||null==t.elevationAlignedTargetLocation||null==i)return!1;const{observerAdjusted:s,targetAdjusted:o}=t.inputPoints,n=i.intersectsPoint(s),r=i.intersectsPoint(o);return n&&r}_onObserverPositionChange(t,e,i,s,o){if(this._externalObserverUpdate=o,null==t)return this.analysisViewData.elevationAlignedObserver=null,void(this._observerFeatureId=null);if(null==e)return nt(this.analysis,t.spatialReference,u.getLogger(this)),void(this.analysisViewData.elevationAlignedObserver=null);const n=Gt(e,i),{absoluteZ:r,elevation:a}=Z(e.x,e.y,e.z,this.view.spatialReference,this.view,n),l=e.clone();l.z=r,this._effectiveObserverElevationMode=n.mode,this.analysisViewData.elevationAlignedObserver=l;const p=c();this.view.renderCoordsHelper.toRenderCoords(l,p),this._elevationAlignedObserverPositionRenderSpace=p,this._observerGroundOffsetRenderSpace=r-a,this._observerFeatureId=v(s),this.priority=lt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onObserverRenderSpacePositionChangeForComputation(t,e,i,s,o){const{inputPoints:n}=t;switch(S(n.observer,e),n.observerFeatureId=o,n.observerSurfaceNormal=null,s){case"on-the-ground":case"relative-to-ground":{const t=this._intersector.updateFromGroundIntersection(n.observer,i,n.observer);null==n.observerFeatureId&&(n.observerSurfaceNormal=t)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=lt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetPositionChange(t,e,i,s,o,n=!0){const r=t.inputPoints;if(n&&(r.isValid=!1),null==i)return null!=e&&nt(this.analysis,e.spatialReference,u.getLogger(this)),t.elevationAlignedTargetLocation=null,void t.notifyInputPointsChanged();const a=Gt(i,s),{absoluteZ:l,elevation:p}=Z(i.x,i.y,i.z,this.view.spatialReference,this.view,a),c=i.clone();switch(c.z=l,t.elevationAlignedTargetLocation=c,this.view.renderCoordsHelper.toRenderCoords(t.elevationAlignedTargetLocation,r.target),r.targetFeatureId=v(o),r.targetSurfaceNormal=null,a.mode){case"on-the-ground":case"relative-to-ground":{const t=this._intersector.updateFromGroundIntersection(r.target,l-p,r.target);null==r.targetFeatureId&&(r.targetSurfaceNormal=t)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=lt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectComputationToTarget(t){return _([this._updatingHandles.add(()=>({computation:t,targetPosition:t.target.position,targetElevationInfo:t.target.elevationInfo,targetFeatureInfo:t.target.feature,projectedTargetPosition:H(t.target.position,this.view.spatialReference)}),({computation:t,targetPosition:e,targetElevationInfo:i,targetFeatureInfo:s,projectedTargetPosition:o})=>{null==o.pending?this._onTargetPositionChange(t,e,o.geometry,i,s):this._updatingHandles.addPromise(o.pending)},k)])}_connectComputationToObserver(t){return this._updatingHandles.add(()=>({computation:t,observer:this.analysisViewData.elevationAlignedObserver}),({computation:t})=>{this._externalObserverUpdate&&(t.inputPoints.isValid=!1,t.notifyInputPointsChanged())},k)}_connectComputationToRenderSpaceObserver(t){return this._updatingHandles.add(()=>({computation:t,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId}),({computation:t,observer:e,observerGroundOffset:i,observerElevationMode:s,observerFeatureId:o})=>{this._onObserverRenderSpacePositionChangeForComputation(t,e,i,s,o)},k)}_connectComputationToCamera(t){return this._updatingHandles.add(()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty}),({isDirty:e})=>{!this.updateOnCameraChange||t.inputPoints.isValid&&!e||t.notifyInputPointsChanged()})}_connectComputationToSlicePlane(t){return this._updatingHandles.add(()=>this.view.slice.plane,()=>{t.inputPoints.isValid=!1,t.notifyInputPointsChanged()})}_connectComputationToElevation(t){const e=(i,s)=>{const o=this.analysis.observer,n=t.target;let r=null,a=null,l=null,u=null,p=null,c=null;if(null!=o?.position){const t=H(o.position,this.view.spatialReference);if(null!=t.pending)return this._updatingHandles.addPromise(t.pending),void t.pending.finally(()=>e(i,s));r=t.geometry,a=o.elevationInfo,l=o.feature}if(null!=n.position){const t=H(n.position,this.view.spatialReference);if(null!=t.pending)return this._updatingHandles.addPromise(t.pending),void t.pending.finally(()=>e(i,s));u=t.geometry,p=n.elevationInfo,c=n.feature}null==r&&null==u||(U(i,s,Wt,this.view.spatialReference),null!=r&&G(Wt,r)&&this._onObserverPositionChange(null!=o?o.position:null,r,a,l,!1),null!=u&&G(Wt,u)&&this._onTargetPositionChange(t,n.position,u,p,c,!1),null!=r&&null!=u&&z(Wt,r,u)&&t.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",({extent:t,spatialReference:i})=>e(t,i))}_connectComputationToTask(t){let e=null;const i={computation:t,interpolationInfo:{originalIntersection:c(),originalObserver:c(),originalTarget:c()}};return _([this._updatingHandles.add(()=>t.inputPoints,()=>{e=r(e),e=y(async t=>{await j(this._frameTask.schedule(()=>this._computeResult(i),t))})},{initial:!0,equals:()=>!1}),f(()=>e=r(e))])}_connectComputationToContent(t){return C(()=>this.view.pointsOfInterest?.contentGeometryUpdates.events,"request-update",e=>{const i=e?.renderBounds,{observerAdjusted:s,targetAdjusted:o}=t.inputPoints;(null==i||x(i,s,o))&&(t.inputPoints.isValid=!1,t.notifyInputPointsChanged())})}_connectComputation(t){const e=this._computationHandles;e.has(t)||e.add([this._connectComputationToTarget(t),this._connectComputationToObserver(t),this._connectComputationToRenderSpaceObserver(t),this._connectComputationToCamera(t),this._connectComputationToSlicePlane(t),this._connectComputationToElevation(t),this._connectComputationToTask(t),this._connectComputationToContent(t)],t)}_disconnectComputation(t){this._computationHandles.remove(t)}_onComputationCollectionChange({added:t,removed:e}){for(const t of e)this._disconnectComputation(t);for(const e of t)this._connectComputation(e)}_onTargetCollectionChange({added:t,removed:e}){for(const t of e)this._removeTarget(t);for(const e of t)this._addTarget(e)}_onCursorTargetChange(t,e){null!=e&&this._removeTarget(e),null!=t&&this._addTarget(t)}_addTarget(t){this._computations.some(e=>e.target===t)||this._computations.add(new Vt({target:t}))}_removeTarget(t){const e=this._computations.findIndex(e=>e.target===t);this._computations.removeAt(e)}_connectObserver(){return _([this._updatingHandles.add(()=>({observerPosition:null!=this.analysis.observer?this.analysis.observer.position:null,projectedObserverPosition:H(null!=this.analysis.observer?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:null!=this.analysis.observer?this.analysis.observer.elevationInfo:null,observerFeatureInfo:null!=this.analysis.observer?this.analysis.observer.feature:null}),({observerPosition:t,projectedObserverPosition:e,observerElevationInfo:i,observerFeatureInfo:s})=>{null==e.pending?this._onObserverPositionChange(t,e.geometry,i,s,!0):this._updatingHandles.addPromise(e.pending)},k)])}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this._computations,t=>this._onComputationCollectionChange(t),{initial:!0,final:!0})}_connectTargets(){return _([this._updatingHandles.addOnCollectionChange(()=>this.analysis.targets,t=>this._onTargetCollectionChange(t),{initial:!0,final:!0}),this._updatingHandles.add(()=>this.analysisViewData.cursorTarget,(t,e)=>{this._onCursorTargetChange(t,e)})])}get _isCameraDirty(){const t=this.analysisViewData.elevationAlignedObserver,{view:e}=this,{renderCoordsHelper:i}=e;if(null==t||null==i)return!1;const s=Bt;i.toRenderCoords(t,s);const o=e.state.camera.computeScreenPixelSizeAt(s);return Math.abs((o-this._screenPixelSize)/this._screenPixelSize)>zt}};function Gt(t,e){return t.hasZ?e??{mode:"absolute-height",offset:0}:{mode:"on-the-ground",offset:0}}t([l({constructOnly:!0})],Ft.prototype,"analysis",void 0),t([l({constructOnly:!0})],Ft.prototype,"analysisViewData",void 0),t([l({constructOnly:!0})],Ft.prototype,"view",void 0),t([l()],Ft.prototype,"updating",null),t([l()],Ft.prototype,"priority",null),t([l()],Ft.prototype,"updateOnCameraChange",void 0),t([l()],Ft.prototype,"_computations",null),t([l()],Ft.prototype,"_elevationAlignedObserverPositionRenderSpace",null),t([l()],Ft.prototype,"_observerGroundOffsetRenderSpace",void 0),t([l()],Ft.prototype,"_effectiveObserverElevationMode",void 0),t([l()],Ft.prototype,"_observerFeatureId",void 0),t([l()],Ft.prototype,"_screenPixelSize",null),t([l({readOnly:!0})],Ft.prototype,"_updatingHandles",void 0),t([l()],Ft.prototype,"_frameTask",void 0),t([l()],Ft.prototype,"_isCameraDirty",null),Ft=t([p("esri.views.3d.analysis.LineOfSight.LineOfSightController")],Ft);const zt=.1,Bt=c(),Nt=N(),Wt=F(),qt=new class{constructor(){this.glowWidth=8,this.innerWidth=.75}},Zt=new class{constructor(){this.size=.5}};function Jt(t){return vt(t.accentColor,.75)}const Qt=new class{constructor(){this.size=.5,this.visibleColor=new ut([3,252,111,.75]),this.occludedColor=new ut([252,3,69,.75]),this.undefinedColor=new ut([127,127,127,.75])}},$t=new class{constructor(){this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new ut([3,252,111,1]),this.visibleOuterColor=new ut([3,252,111,.15]),this.occludedInnerColor=new ut([252,3,69,1]),this.occludedOuterColor=new ut([252,3,69,.1]),this.undefinedInnerColor=new ut([255,255,255,1]),this.undefinedOuterColor=new ut([127,127,127,.2])}};class Xt extends yt{constructor(t,e){const i=bt(Jt(t.effectiveTheme)),s=jt(i,Zt.size,32,32),o=new _t(s);super({view:t,renderObjects:[o],metadata:e,elevationInfo:{mode:"absolute-height",offset:0}}),ft(this),this.themeHandle=w(()=>({color:Jt(t.effectiveTheme)}),t=>{i.setParameters(t)})}destroy(){this.themeHandle.remove(),super.destroy()}}class Yt extends yt{constructor(t,e){const{size:i,visibleColor:s,occludedColor:o,undefinedColor:n}=Qt;super({view:t,renderObjects:[Kt(i,s,16),Kt(i,o,32),Kt(i,n,64)],metadata:e,elevationInfo:{mode:"absolute-height",offset:0}}),ft(this)}}function Kt(t,e,i){return new _t(jt(bt(ut.toUnitRGBA(e)),t,32,32),i)}let te=class extends Ct{constructor(t){super(t),this._creationMode=!1,this.removeIncompleteOnCancel=!1,this.analysisViewData=null,this._latestPointerMovePointerType=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new b,this._updatingHandles=new A,this._manipulatorHandles=new b,this._targetTrackerManipulator=null}initialize(){this._intersector=new Et({view:this.view}),this.addHandles(O(()=>"created"===this.state,()=>this.finishToolCreation(),T)),this._observerManipulator=this._createObserverManipulator(),this._createLaserLine(),this.addHandles([this._updatingHandles.add(()=>this.analysisViewData?.elevationAlignedObserver,t=>this._onObserverLocationChange(t),k),this._updatingHandles.add(()=>function(t){const e=t.accentColor;return{glowColor:e,innerColor:gt(e),globalAlpha:.75*e.a}}(this.view.effectiveTheme),({glowColor:t,innerColor:e,globalAlpha:i})=>this._updateLaserLineStyle(t,e,i),k),this._updatingHandles.add(()=>this._laserLineRendererDependencies(),t=>this._updateLaserLineRenderer(t)),this._connectComputations(),this._updatingHandles.addWhen(()=>!this._shouldRenderTracker,()=>this._clearCursorTracker(),k),this._updatingHandles.add(()=>({active:this.active,hasGrabbedManipulators:this.hasGrabbedManipulators}),({active:t,hasGrabbedManipulators:e})=>{this._creationMode=!!t&&(this._creationMode||!e)},k)])}destroy(){this._updatingHandles=a(this._updatingHandles),this._manipulatorHandles=a(this._manipulatorHandles),this._analysisHandles=a(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeLaserLine(),this._intersector=null,this._set("analysis",null)}get state(){return this.active?!this.hasGrabbedManipulators||this._creationMode?"creating":"created":null!=this.analysis.observer?.position?"created":"ready"}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return null!=this.analysisViewData&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&"mouse"===this._latestPointerMovePointerType}get _shouldRenderTracker(){return this._showTracker&&null!=this.analysis.observer?.position&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(t){switch(t.type){case"immediate-double-click":this._doubleClickHandler(t);break;case"pointer-move":this._pointerMoveHandler(t)}}onInputEventAfter(t){"immediate-click"===t.type&&this._clickHandler(t)}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,t=>this._onComputationsCollectionChange(t),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:e}){for(const t of e)this._disconnectComputation(t);for(const e of t)this._connectComputation(e)}_connectComputation(t){if(this.destroyed)return void u.getLogger(this).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const e=this._analysisHandles;if(e.has(t))return;const i=this._createTargetManipulator(t.target);null==this._targetTrackerManipulator&&i.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=i,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),e.add([this._updatingHandles.add(()=>function(t){const{isValid:e,isTargetVisible:i}=t.computationResult;return{isValid:e,isTargetVisible:i}}(t),()=>function(t,e){const{isValid:i,isTargetVisible:s}=e.computationResult;t.state=i?s?16:32:64}(i,t),k),this._updatingHandles.add(()=>t.elevationAlignedTargetLocation,t=>this._onTargetLocationChange(t,i),k)],t)}_disconnectComputation(t){if(this.destroyed)return void u.getLogger(this).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(t);const e=this._getTargetManipulator(t.target);null!=e&&(this.manipulators.remove(e),this._manipulatorHandles.remove(e),null!=this._targetTrackerManipulator&&this._targetTrackerManipulator===e&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=a(this.analysisViewData.cursorTarget)}_createTargetManipulator(t){const e={target:t,type:"target"},i=new Yt(this.view,e);return this._manipulatorHandles.add([this._createTargetManipulatorDragPipeline(i),i.events.on("grab-changed",t=>this._manipulatorGrabChanged(i,t)),i.events.on("immediate-click",t=>this._manipulatorClick(i,t))],i),this.manipulators.add(i),null!=t.position?i.elevationAlignedLocation=t.position:i.available=!1,i}_getTargetManipulator(t){let e=null;return this.manipulators.forEach(i=>{const s=i.manipulator;null==e&&"target"===s.metadata.type&&s.metadata.target===t&&(e=s)}),e}_createObserverManipulator(){const t=new Xt(this.view,{type:"observer",intersection:null});return this._manipulatorHandles.add([this._createObserverManipulatorDragPipeline(t),t.events.on("grab-changed",e=>this._manipulatorGrabChanged(t,e)),t.events.on("immediate-click",e=>this._manipulatorClick(t,e))],t),this.manipulators.add(t),t}_screenToIntersection(){return t=>{const e=this._intersector.getScreenPointIntersection(t.screenEnd);return null==e?null:{...t,intersection:e}}}_createTargetManipulatorDragPipeline(t){return It(t,(e,i,s)=>{i.next(this._screenToIntersection()).next(this._updateTargetDragStep(t)).next(()=>this._updateLaserLineRenderer()),s.next(function(t){const e=t.position?.clone();return i=>(t.position=e,i)}(t.metadata.target)).next(()=>this._updateLaserLineRenderer())})}_createObserverManipulatorDragPipeline(t){return It(t,(t,e,i)=>{e.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next(()=>this._updateLaserLineRenderer()),i.next(this._cancelObserverDragStep()).next(()=>this._updateLaserLineRenderer())})}_updateObserverDragStep(){return t=>(null!=t.intersection.mapPoint?(null==this.analysis.observer&&(this.analysis.observer=new pt),this._updateFromIntersection(this.analysis.observer,t.intersection)):this.analysis.observer=null,t)}_cancelObserverDragStep(){const t=null!=this.analysis.observer?.position?this.analysis.observer.clone():null;return e=>(this.analysis.observer=t,e)}_updateTargetDragStep(t){return e=>{this._updateFromIntersection(t.metadata.target,e.intersection);const i=e.intersection.mapPoint;return null!=i&&(t.elevationAlignedLocation=i),e}}_manipulatorGrabChanged(t,e){switch(e.action){case"start":this._grabbedManipulator=t;break;case"end":this._grabbedManipulator===t&&(this._grabbedManipulator=null)}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:null!=this.analysis.observer?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(t=this._laserLineRendererDependencies()){const{laserlineVisualElement:e,grabbedManipulator:i,shouldRenderTracker:s,observerPosition:o,visible:n}=t;if(null==e)return;const r=null!=i?i:s&&null!=o?this._targetTrackerManipulator:null;null!=r&&n?(e.visible=!0,e.heightManifoldTarget=r.renderLocation,r!==this._observerManipulator?e.lineVerticalPlaneSegment=ht(this._observerManipulator.renderLocation,r.renderLocation,ee):e.lineVerticalPlaneSegment=null):(e.visible=!1,e.heightManifoldTarget=null,e.lineVerticalPlaneSegment=null)}_createLaserLine(){this._removeLaserLine();const{glowWidth:t,innerWidth:e}=qt;this._laserlineVisualElement=new kt({view:this.view,attached:!0,visible:this.visible,style:{glowWidth:t,innerWidth:e},isDecoration:!0})}_removeLaserLine(){null!=this._laserlineVisualElement&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_updateLaserLineStyle(t,e,i){const s=this._laserlineVisualElement;if(null==s)return;const o=s.style;s.style={...o,glowColor:ut.toUnitRGB(t),innerColor:ut.toUnitRGB(e),globalAlpha:i}}_onObserverLocationChange(t){null!=t?(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=t):this._observerManipulator.available=!1}_onTargetLocationChange(t,e){null!=t?(e.elevationAlignedLocation=t,e!==this._targetTrackerManipulator&&(e.available=!0)):e.available=!1}_addPointFromClickEvent(t){const e=this._intersector.getScreenPointIntersection(t);if(null!=e?.mapPoint)if(null!=this.analysis.observer?.position){this._clearCursorTracker();const t=new ct;this._updateFromIntersection(t,e),this.analysis.targets.add(t)}else{const t=new pt;this._updateFromIntersection(t,e),this.analysis.observer=t}}_clickHandler(t){this.active&&2!==t.button&&(this._addPointFromClickEvent(St(t)),t.stopPropagation())}_doubleClickHandler(t){this.active&&2!==t.button&&(this.stop(),t.stopPropagation())}_pointerMoveHandler(t){if(this.hasGrabbedManipulators)return;if(this._latestPointerMovePointerType=t.pointerType,this._updateLaserLineRenderer(),!this._showTracker||null==this.analysis.observer?.position)return;const e=St(t),i=this._intersector.getScreenPointIntersection(e);null!=i?.mapPoint&&(null==this.analysisViewData.cursorTarget&&(this.analysisViewData.cursorTarget=new ct),this._updateFromIntersection(this.analysisViewData.cursorTarget,i),this._updateLaserLineRenderer())}_updateFromIntersection(t,e){if(null==e.mapPoint)return t.position=null,t.elevationInfo=null,void(t.feature=null);switch(e.type){case 0:if(null!=e.graphic){const i=e.graphic,s=J(i);"on-the-ground"===s.mode&&(s.mode="relative-to-ground",s.offset=0),t.elevationInfo=new mt(s),t.feature=i}else t.elevationInfo=null,t.feature=null;break;case 2:t.elevationInfo=new mt({mode:"on-the-ground"}),t.feature=null;break;default:t.elevationInfo=null,t.feature=null}const i=e.mapPoint.clone();i.z=Q(this.view,i,{mode:"absolute-height",offset:0},t.elevationInfo),t.position=i}_manipulatorClick(t,e){if("observer"===t.metadata.type||t.grabbing||t.dragging||2!==e.button||this.analysis.targets.length<=1)return;const{target:i}=t.metadata;this.analysis.targets.remove(i),e.stopPropagation()}get testInfo(){}};t([l({constructOnly:!0})],te.prototype,"view",void 0),t([l({constructOnly:!0})],te.prototype,"analysis",void 0),t([l()],te.prototype,"_creationMode",void 0),t([l({readOnly:!0})],te.prototype,"state",null),t([l({readOnly:!0})],te.prototype,"cursor",null),t([l()],te.prototype,"removeIncompleteOnCancel",void 0),t([l({readOnly:!0})],te.prototype,"updating",null),t([l({constructOnly:!0})],te.prototype,"analysisViewData",void 0),t([l({readOnly:!0})],te.prototype,"_showTracker",null),t([l()],te.prototype,"_latestPointerMovePointerType",void 0),t([l()],te.prototype,"_shouldRenderTracker",null),t([l()],te.prototype,"_laserlineVisualElement",void 0),t([l()],te.prototype,"_grabbedManipulator",void 0),te=t([p("esri.views.3d.analysis.LineOfSight.LineOfSightTool")],te);const ee=dt();class ie{constructor(t,e,i,s){this.visibleLineVisualElement=t,this.occludedLineVisualElement=e,this.undefinedLineVisualElement=i,this.targetVisualElement=s}destroy(){this.visibleLineVisualElement.destroy(),this.occludedLineVisualElement.destroy(),this.undefinedLineVisualElement.destroy(),this.targetVisualElement.destroy()}}let se=class extends X{constructor(t){super(t),this._lineOfSightVisualElements=new Array,this._computationHandles=new b,this._updatingHandles=new A}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=a(this._updatingHandles),this._computationHandles=a(this._computationHandles),this._observerVisualElement=a(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get test(){}_createLineOfSightVisualization(){const t=$t,e=this.view,i=this.isDecoration,s={view:e,attached:!0,width:t.outerWidth,innerWidth:t.innerWidth,isDecoration:i},o=ut.toUnitRGBA(t.visibleOuterColor),n=ut.toUnitRGBA(t.visibleInnerColor),r=ut.toUnitRGBA(t.occludedOuterColor),a=ut.toUnitRGBA(t.occludedInnerColor),l=ut.toUnitRGBA(t.undefinedOuterColor),u=ut.toUnitRGBA(t.undefinedInnerColor),p=new rt({...s,color:o,innerColor:n}),c=new rt({...s,color:r,innerColor:a}),d=new rt({...s,color:l,innerColor:u}),h=new Lt({view:e,attached:!0,...oe,size:8,isDecoration:i}),m=new ie(p,c,d,h);return this._lineOfSightVisualElements.push(m),m}_destroyLineOfSightVisualization(t){t.destroy(),this._lineOfSightVisualElements.splice(this._lineOfSightVisualElements.indexOf(t),1)}_updateLineOfSightVisualization(t,e,i){const s=$t,{computationResult:o,inputPoints:n}=t,{start:r,end:a,intersection:l,isValid:u,isTargetVisible:p}=o,{observer:c}=n,d=le;d[12]=c[0],d[13]=c[1],d[14]=c[2];const m=R(ne,r,c),g=R(re,a,c),v=R(ae,l,c),{visibleLineVisualElement:y,occludedLineVisualElement:b,undefinedLineVisualElement:_,targetVisualElement:f}=e,j=null==this.analysisViewData.elevationAlignedObserver||null==t.elevationAlignedTargetLocation,k=this.visible&&!j;y.visible=k,b.visible=k,_.visible=k,f.visible=k,f.attached=!i.interactiveAndEditable,k&&(y.geometry=null,b.geometry=null,_.geometry=null,f.geometry=t.elevationAlignedTargetLocation,u?p?(y.geometry=[[h(m),h(g)]],y.transform=d,y.color=ut.toUnitRGBA(s.visibleOuterColor),f.color=ut.toUnitRGBA(s.visibleInnerColor)):(y.geometry=[[h(m),h(v)]],y.transform=d,y.color=ut.toUnitRGBA(s.occludedOuterColor),b.geometry=[[h(v),h(g)]],b.transform=d,f.color=ut.toUnitRGBA(s.occludedInnerColor)):(_.geometry=[[h(m),h(g)]],_.transform=d,f.color=ut.toUnitRGBA(s.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(t){const{computationResult:e}=t,{occludedOuterColor:i,visibleOuterColor:s}=$t;return{computationResult:e,occludedOuterColor:i,visibleOuterColor:s,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(t){const e=this._computationHandles;if(e.has(t))return;const i=this._createLineOfSightVisualization();e.add([this._updatingHandles.add(()=>this._getLineOfSightVisualizationDependencies(t),e=>this._updateLineOfSightVisualization(t,i,e),{initial:!0,equals:()=>!1}),f(()=>this._destroyLineOfSightVisualization(i))],t)}_disconnectComputation(t){this._computationHandles.remove(t)}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,t=>this._onComputationsCollectionChange(t),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:e}){for(const t of e)this._disconnectComputation(t);for(const e of t)this._connectComputation(e)}_createObserverVisualization(){const t=ut.toUnitRGBA($t.visibleInnerColor),e=new Lt({view:this.view,color:t,...oe,isDecoration:this.isDecoration});this._observerVisualElement=e,this.addHandles(this._updatingHandles.add(()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible}),({observer:t,interactiveAndEditable:i,visible:s})=>{null!=t&&!i&&s?(e.geometry=t,this._observerVisualElement.attached=!0):e.attached=!1},k))}};t([l({constructOnly:!0})],se.prototype,"analysis",void 0),t([l({constructOnly:!0})],se.prototype,"analysisViewData",void 0),t([l({constructOnly:!0})],se.prototype,"view",void 0),t([l({readOnly:!0})],se.prototype,"visible",null),t([l({constructOnly:!0})],se.prototype,"isDecoration",void 0),t([l()],se.prototype,"updating",null),t([l()],se.prototype,"interactiveAndEditable",null),t([l()],se.prototype,"test",null),se=t([p("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],se);const oe={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},ne=c(),re=c(),ae=c(),le=Pt();let ue=class extends(m(i)){constructor(t){super(t),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new e,this.cursorTarget=null,this.editable=!0,this.elevationAlignedObserver=null,this.observerEngineLocation=c(),this.userOperation=null}initialize(){const t=this.view,e=this.analysis;this._analysisController=new Ft({analysis:e,analysisViewData:this,view:t}),this._analysisVisualization=new se({analysis:e,analysisViewData:this,view:t,isDecoration:!this.parent}),this.addHandles([this._analysisController.on("result-changed",t=>{t.target!==this.cursorTarget&&this.emit("result-changed",t)}),wt(this,te)])}destroy(){Ot(this),this.userOperation=r(this.userOperation),this._analysisController=a(this._analysisController),this._analysisVisualization=a(this._analysisVisualization)}get visible(){return super.visible}set visible(t){super.visible=t}get interactive(){return super.interactive}set interactive(t){super.interactive=t}get results(){return this.computations.map(t=>t.result)}get priority(){return this._analysisController.priority}set priority(t){this._analysisController.priority=t}get updating(){return null!=this._analysisController&&this._analysisController.updating||null!=this._analysisVisualization&&this._analysisVisualization.updating}place(t){return Tt(this,{placementOptions:t})}getResultForTarget(t){return this.computations.find(e=>e.target===t)?.result}get testInfo(){}};t([l({readOnly:!0})],ue.prototype,"type",void 0),t([l({constructOnly:!0,nonNullable:!0})],ue.prototype,"analysis",void 0),t([l()],ue.prototype,"tool",void 0),t([l({readOnly:!0})],ue.prototype,"results",null),t([l()],ue.prototype,"priority",null),t([l()],ue.prototype,"computations",void 0),t([l()],ue.prototype,"cursorTarget",void 0),t([l()],ue.prototype,"editable",void 0),t([l()],ue.prototype,"elevationAlignedObserver",void 0),t([l()],ue.prototype,"observerEngineLocation",void 0),t([l()],ue.prototype,"updating",null),t([l()],ue.prototype,"userOperation",void 0),t([l()],ue.prototype,"_analysisController",void 0),t([l()],ue.prototype,"_analysisVisualization",void 0),ue=t([p("esri.views.3d.analysis.LineOfSightAnalysisView3D")],ue);const pe=ue;export{pe as default};
