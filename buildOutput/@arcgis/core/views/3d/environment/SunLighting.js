/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{EventedMixin as t}from"../../../core/Evented.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/lang.js";import"../../../chunks/Logger.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import i from"../../../webscene/SunLighting.js";import"../../../core/Accessor.js";import"../../../core/Handles.js";import"../../../chunks/maybe.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/Lifecycle.js";import"../../../chunks/metadata.js";import"../../../chunks/ObjectPool.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/tracking.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../core/promiseUtils.js";import"../../../core/Error.js";import"../../../chunks/object.js";import"../../../chunks/events.js";import"../../../chunks/SetUtils.js";import"../../../chunks/SimpleTrackingTarget.js";import"../../../config.js";import"../../../chunks/string.js";import"../../../chunks/ensureType.js";import"../../../chunks/MapUtils.js";import"../../../chunks/Warning.js";import"../../../core/JSONSupport.js";import"../../../chunks/reader.js";import"../../../chunks/writer.js";var n;let r=n=class extends(t(i)){static calculateTimezoneOffset({hours:e,minutes:t,seconds:s}){return Math.round(e+t/60+s/3600)}constructor(e){super(e),this.cameraTrackingEnabled=!0,this.positionTimezoneInfo={hours:0,minutes:0,seconds:0,autoUpdated:!0};const t=(new Date).getFullYear(),s=new Date("March 15, "+t+" 12:00:00 UTC");this._set("defaultDate",s),this._set("date",s)}get defaultDate(){return new Date(this._get("defaultDate").getTime())}static fromWebsceneLighting(e){return new n(e.cloneConstructProperties())}set defaultDate(e){const t=this._get("date")===this._get("defaultDate");e=new Date(e.getTime()),this._set("defaultDate",e),t&&this._set("date",e)}set date(e){null!=e&&(this.positionTimezoneInfo.autoUpdated=!1,this._set("date",new Date(e.getTime())))}autoUpdate(e,t){const s=n.calculateTimezoneOffset(this.positionTimezoneInfo);this.positionTimezoneInfo.hours=t.hours,this.positionTimezoneInfo.minutes=t.minutes,this.positionTimezoneInfo.seconds=t.seconds;let o=null;null!=e&&(this.positionTimezoneInfo.autoUpdated=!0,isNaN(e.getTime())?(o=this.defaultDate.getTime(),this._set("date",this.defaultDate)):(o=this.date&&this.date.getTime(),this._set("date",new Date(e.getTime()))));const i=n.calculateTimezoneOffset(this.positionTimezoneInfo);if(s!==i&&(a.target=this,a.timezoneOffset=i,this.emit("timezone-will-change",a),a.target=null),null!=e)return isNaN(e.getTime())||o!==e.getTime()}clone(){const e=this._get("date")===this._get("defaultDate"),t=new n({...this.cloneConstructProperties(),defaultDate:this.defaultDate,cameraTrackingEnabled:this.cameraTrackingEnabled});return e&&t._set("date",t._get("defaultDate")),t.positionTimezoneInfo.autoUpdated=this.positionTimezoneInfo.autoUpdated,t.positionTimezoneInfo.hours=this.positionTimezoneInfo.hours,t.positionTimezoneInfo.minutes=this.positionTimezoneInfo.minutes,t.positionTimezoneInfo.seconds=this.positionTimezoneInfo.seconds,t}cloneWithWebsceneLighting(e){const t=this.clone();return null!=e.date&&(t.date=e.date),t.directShadowsEnabled=e.directShadowsEnabled,t.displayUTCOffset=e.displayUTCOffset,t}cloneNonPersistentConstructProperties(){return{cameraTrackingEnabled:this.cameraTrackingEnabled}}};e([s({type:Boolean})],r.prototype,"cameraTrackingEnabled",void 0),e([s({type:Date})],r.prototype,"defaultDate",null),e([s({type:Date})],r.prototype,"date",null),r=n=e([o("esri.views.3d.environment.SunLighting")],r);const a={target:null,timezoneOffset:0},c=r;export{c as default};
