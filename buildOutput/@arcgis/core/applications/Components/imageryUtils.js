/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import t from"../../core/Error.js";import{throwIfAborted as e}from"../../core/promiseUtils.js";import s from"../../geometry/Extent.js";import o from"../../geometry/Point.js";import r from"../../layers/support/Field.js";import i from"../../layers/support/PixelBlock.js";import{g as n}from"../../chunks/pixelRangeUtils.js";import{s as p,c as a}from"../../chunks/clipUtils.js";import{b as l,d as m,m as c,e as u}from"../../chunks/vectorFieldUtils.js";import{l as j,b as h}from"../../chunks/rasterProjectionHelper.js";import{g as y,h as f}from"../../chunks/rasterRendererChecks.js";import{m as d}from"../../chunks/rasterRendererHelper.js";import k from"../../rest/support/ImageIdentifyParameters.js";import"../../core/lang.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/handleUtils.js";import"../../chunks/events.js";import"../../chunks/maybe.js";import"../../chunks/tslib.es6.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/metadata.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Lifecycle.js";import"../../chunks/tracking.js";import"../../chunks/Warning.js";import"../../geometry/Geometry.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/reader.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/jsonUtils.js";import"../../chunks/persistableUrlUtils.js";import"../../chunks/writer.js";import"../../geometry/support/webMercatorUtils.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/enumeration.js";import"../../chunks/domains.js";import"../../layers/support/CodedValueDomain.js";import"../../layers/support/Domain.js";import"../../layers/support/InheritedDomain.js";import"../../layers/support/RangeDomain.js";import"../../chunks/fieldType.js";import"../../chunks/mathUtils.js";import"../../geometry/Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/zmUtils.js";import"../../chunks/projectionUtils.js";import"../../chunks/SimpleObservable.js";import"../../chunks/vec3f64.js";import"../../geometry/Multipoint.js";import"../../geometry/Polyline.js";import"../../chunks/projectBuffer.js";import"../../chunks/geodesicConstants.js";import"../../chunks/projectXYZToVector.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../chunks/stretchRendererUtils.js";import"../../Color.js";import"../../chunks/colorUtils.js";import"../../chunks/datasetUtils.js";import"../../renderers/ClassBreaksRenderer.js";import"../../layers/support/fieldUtils.js";import"../../core/sql.js";import"../../chunks/guards.js";import"../../chunks/datetime.js";import"../../renderers/Renderer.js";import"../../renderers/support/AuthoringInfo.js";import"../../renderers/support/AuthoringInfoVisualVariable.js";import"../../chunks/colorRamps.js";import"../../rest/support/AlgorithmicColorRamp.js";import"../../rest/support/ColorRamp.js";import"../../rest/support/MultipartColorRamp.js";import"../../renderers/mixins/VisualVariablesMixin.js";import"../../renderers/visualVariables/ColorVariable.js";import"../../renderers/visualVariables/VisualVariable.js";import"../../core/Clonable.js";import"../../renderers/visualVariables/support/ColorStop.js";import"../../renderers/visualVariables/OpacityVariable.js";import"../../renderers/visualVariables/support/OpacityStop.js";import"../../chunks/opacityUtils.js";import"../../renderers/visualVariables/RotationVariable.js";import"../../renderers/visualVariables/SizeVariable.js";import"../../chunks/screenUtils.js";import"../../renderers/visualVariables/support/SizeStop.js";import"../../chunks/visualVariableUtils.js";import"../../Graphic.js";import"../../PopupTemplate.js";import"../../core/Collection.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../popup/content.js";import"../../popup/content/AttachmentsContent.js";import"../../popup/content/Content.js";import"../../popup/support/AttachmentsOrderByInfo.js";import"../../popup/content/CustomContent.js";import"../../popup/content/ExpressionContent.js";import"../../popup/ElementExpressionInfo.js";import"../../popup/content/FieldsContent.js";import"../../popup/FieldInfo.js";import"../../popup/support/FieldInfoFormat.js";import"../../chunks/date.js";import"../../chunks/locale.js";import"../../chunks/constants.js";import"../../popup/content/MediaContent.js";import"../../popup/content/BarChartMediaInfo.js";import"../../popup/content/mixins/ChartMediaInfo.js";import"../../popup/content/mixins/MediaInfo.js";import"../../popup/content/support/ChartMediaInfoValue.js";import"../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../chunks/chartMediaInfoUtils.js";import"../../popup/content/ColumnChartMediaInfo.js";import"../../popup/content/ImageMediaInfo.js";import"../../popup/content/support/ImageMediaInfoValue.js";import"../../popup/content/LineChartMediaInfo.js";import"../../popup/content/PieChartMediaInfo.js";import"../../popup/content/RelationshipContent.js";import"../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../popup/content/TextContent.js";import"../../popup/content/UtilityNetworkAssociationsContent.js";import"../../popup/support/UtilityNetworkAssociationType.js";import"../../popup/ExpressionInfo.js";import"../../popup/LayerOptions.js";import"../../popup/RelatedRecordsInfo.js";import"../../support/actions/ActionBase.js";import"../../core/Identifiable.js";import"../../support/actions/ActionButton.js";import"../../support/actions/ActionToggle.js";import"../../core/reactiveUtils.js";import"../../geometry/support/jsonUtils.js";import"../../chunks/typeUtils.js";import"../../chunks/createFeatureId.js";import"../../chunks/typeUtils2.js";import"../../symbols/CIMSymbol.js";import"../../symbols/Symbol.js";import"../../symbols/LabelSymbol3D.js";import"../../symbols/Symbol3D.js";import"../../chunks/collectionUtils.js";import"../../portal/Portal.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"../../portal/PortalGroup.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalUser.js";import"../../portal/PortalFolder.js";import"../../symbols/ExtrudeSymbol3DLayer.js";import"../../symbols/Symbol3DLayer.js";import"../../chunks/utils3.js";import"../../symbols/edges/Edges3D.js";import"../../chunks/materialUtils.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/Symbol3DMaterial.js";import"../../symbols/FillSymbol3DLayer.js";import"../../symbols/patterns/LineStylePattern3D.js";import"../../symbols/patterns/StylePattern3D.js";import"../../chunks/utils4.js";import"../../chunks/colors.js";import"../../chunks/symbolLayerUtils3D.js";import"../../chunks/aaBoundingBox.js";import"../../chunks/DoubleArray.js";import"../../symbols/IconSymbol3DLayer.js";import"../../symbols/LineSymbol3DLayer.js";import"../../symbols/LineStyleMarker3D.js";import"../../chunks/lineMarkers.js";import"../../symbols/ObjectSymbol3DLayer.js";import"../../symbols/PathSymbol3DLayer.js";import"../../symbols/TextSymbol3DLayer.js";import"../../symbols/Font.js";import"../../symbols/WaterSymbol3DLayer.js";import"../../symbols/support/StyleOrigin.js";import"../../chunks/Thumbnail.js";import"../../chunks/calloutUtils.js";import"../../symbols/callouts/Callout3D.js";import"../../symbols/callouts/LineCallout3D.js";import"../../symbols/support/Symbol3DVerticalOffset.js";import"../../symbols/LineSymbol3D.js";import"../../symbols/MeshSymbol3D.js";import"../../symbols/PictureFillSymbol.js";import"../../symbols/FillSymbol.js";import"../../symbols/SimpleLineSymbol.js";import"../../symbols/LineSymbol.js";import"../../symbols/LineSymbolMarker.js";import"../../chunks/urlUtils.js";import"../../symbols/PictureMarkerSymbol.js";import"../../symbols/MarkerSymbol.js";import"../../symbols/PointSymbol3D.js";import"../../symbols/PolygonSymbol3D.js";import"../../symbols/SimpleFillSymbol.js";import"../../symbols/SimpleMarkerSymbol.js";import"../../symbols/TextSymbol.js";import"../../symbols/WebStyleSymbol.js";import"../../chunks/lengthUtils.js";import"../../renderers/support/ClassBreakInfo.js";import"../../chunks/commonProperties2.js";import"../../symbols/support/jsonUtils.js";import"../../chunks/layerUtils.js";import"../../layers/catalog/catalogUtils.js";import"../../chunks/defaults.js";import"../../chunks/defaultsJSON.js";import"../../chunks/RendererLegendOptions.js";import"../../renderers/FlowRenderer.js";import"../../renderers/RasterColormapRenderer.js";import"../../renderers/support/ColormapInfo.js";import"../../chunks/colorRampUtils.js";import"../../chunks/colorUtils2.js";import"../../chunks/vec4.js";import"../../chunks/common.js";import"../../chunks/vec4f64.js";import"../../renderers/RasterShadedReliefRenderer.js";import"../../renderers/RasterStretchRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../chunks/diffUtils.js";import"../../renderers/support/UniqueValue.js";import"../../renderers/support/UniqueValueClass.js";import"../../renderers/support/UniqueValueGroup.js";import"../../renderers/support/UniqueValueInfo.js";import"../../chunks/styleUtils.js";import"../../renderers/VectorFieldRenderer.js";import"../../geometry/support/normalizeUtils.js";import"../../chunks/normalizeUtilsCommon.js";import"../../chunks/simplify.js";import"../../chunks/utils9.js";import"../../chunks/utils10.js";import"../../chunks/utils8.js";import"../../chunks/asyncUtils.js";import"../../chunks/jsonUtils2.js";import"../../chunks/parser.js";import"../../chunks/utils5.js";import"../../chunks/mat4.js";import"../../symbols/support/cimSymbolUtils.js";import"../../chunks/utils6.js";import"../../chunks/defaultCIMValues.js";import"../../chunks/gfxUtils.js";import"../../chunks/LRUCache.js";import"../../chunks/MemCache.js";import"../../chunks/generateRendererUtils.js";import"../../layers/support/MosaicRule.js";import"../../layers/support/DimensionalDefinition.js";import"../../layers/support/RasterFunction.js";import"../../chunks/rasterEnums.js";import"../../time/TimeExtent.js";import"../../chunks/timeUtils.js";const x=2**30,b=2048;async function g(t,e){return"imagery"===t.type?await t.generateRasterInfo(t.rasterFunction,e)??t.serviceRasterInfo:t.raster.rasterInfo}function w(t){const e=[new r({name:"PixelID",alias:"Pixel ID",type:"oid"})],{pixelType:s}=t,o="f32"===s?"single":"f64"===s?"double":"integer";return d(t).forEach(t=>{e.push(new r({name:t,alias:t,type:o}))}),e.map(t=>t.toJSON())}async function S(e,s){if(e.spatialReference.equals(s))return e;if("polyline"===e.type){const o=(await import("../../geometry/operators/projectOperator.js")).execute(e,s);if(null==o)throw new t("read-pixels","failed to project the geometry into the layer's spatial reference");return o}if("extent"===e.type||e.rings[0].length<20){const t=(await import("../../geometry/operators/lengthOperator.js").then(t=>t.l)).execute(e,{unit:"meters"})/100;e=(await import("../../geometry/operators/densifyOperator.js").then(t=>t.d)).execute(e,t,{unit:"meters"}),await j(),e=h(e,s)}return e}async function U(t,e){const{spatialReference:s}=t,r=e?.geometry,i=await S(r??t.extent,s),n="extent"===i.type?i:i.extent,a=null==r||"extent"===r.type&&r.spatialReference.equals(s)?void 0:i,l=new o({x:t.pixelSize.x,y:t.pixelSize.y,spatialReference:s}),m=!!e?.autoResample,c=m?l:e?.pixelSize??l;let{extent:u,width:j,height:h}=p(t,n,c);if(!m)return{extent:u,clipGeometry:a,width:j,height:h,pixelSize:c};const y=t.storageInfo?.pyramidScalingFactor??2;let{x:f,y:d}=c;const k=e?.maxPixelCount??1048576;if(j*h>k)for(;j*h>k;)f*=y,d*=y,j/=y,h/=y;return j=Math.round(j),h=Math.round(h),{extent:u,clipGeometry:a,width:j,height:h,pixelSize:new o({x:f,y:d,spatialReference:s})}}async function*R(t,o,r=!1,i){const{extent:n,clipGeometry:p,width:l,height:m}=o,c=n.width/l,u=n.height/m,j=Math.ceil(l/b),h=Math.ceil(m/b),y=c*b,f=u*b,{xmin:d,xmax:k,ymin:x,ymax:g}=n,w=h*j,S={bandIds:o.bandIds?.length?o.bandIds:void 0,interpolation:"nearest",...i};for(let o=0;o<h;o++)for(let i=0;i<j;i++){e(S);const l=new s({xmin:d+i*y,xmax:r?Math.min(k,d+(i+1)*y):d+(i+1)*y,ymax:g-o*f,ymin:r?Math.max(x,g-(o+1)*f):g-(o+1)*f,spatialReference:n.spatialReference}),m={row:o,col:i},h=o*j+i+1;if(p&&!l.intersects(p)){yield{extent:l,pixelBlock:null,id:m,total:w,current:h};continue}const U=r?Math.round(l.width/c):b,R=r?Math.round(l.height/u):b;let{pixelBlock:C}=await t.fetchPixels(l,U,R,S).catch(()=>({pixelBlock:void 0}));C&&p&&(C=await a(C,l,p)),yield{extent:l,pixelBlock:C,id:m,total:w,current:h}}}function C(e,s,o){const r=n(s),{width:i,height:p}=e;if(i*p*r>x)throw new t("fetch-pixels","failed to fetch pixels as pixel byte count exceeds the 1GB limit");if(o&&i*p>o)throw new t("fetch-pixels",`failed to fetch pixels as pixel count exceeds the ${o} limit`)}async function I(t,e,s){if("imagery"===t.type){const o=await t.identify(new k({geometry:e,returnCatalogItems:!1}),s).catch(()=>null);return null==o?.value||o.value.includes("NoData")?null:o.value.replaceAll(", "," ").split(" ").map(t=>Number(t))}const o=await t.identify(e,s).catch(()=>null);return o?.value}function M(t){return t.reduce((t,e)=>t.map((t,s)=>t+e[s]))}async function P(t,e,s){const o=await B(t,e.geometry,m,s);return o?.flat()??[]}async function B(s,o,r,i){const n=s.spatialReference;if("polyline"===o.type&&!o.spatialReference.equals(n)){const e=(await import("../../geometry/operators/projectOperator.js")).execute(o,n);if(null==e)throw new t("read-pixels","failed to fetch pixels");o=e}const p="polyline"===o.type?o.extent:o,l=await S(p,n),m="polyline"===o.type?o:l,c=await g(s,i),u={geometry:l,autoResample:!1},j=[],h=R(s,await U(c,u),!0,i);for await(const t of h){if(!t.pixelBlock)continue;const{extent:s}=t,o=r(await a(t.pixelBlock,s,m),s);j.push(o),e(i)}return j}async function D(t,e){const{rasterJobHandler:s}=t,{pixelBlock:o}=t,{statistics:r,histograms:i}=s?await s.computeStatisticsHistograms({pixelBlock:o},e):f(o);return{statistics:r,histograms:i}}async function v(t,e){const{extent:s,fields:o,skipFactor:r,rasterJobHandler:i,pixelIdOffset:n,imageRowSize:p}=t,{pixelBlock:a}=t,m=o.map(({name:t})=>t),c=i?await i.convertPixelBlockToFeatures({pixelBlock:a,extent:s,fieldNames:m,skipFactor:r,pixelIdOffset:n,imageRowSize:p},e):l({pixelBlock:a,extent:s,fieldNames:m,skipFactor:r,pixelIdOffset:n,imageRowSize:p});return c?{fields:o,features:c}:void 0}function V(t){return"_rasterJobHandler"in t?t._rasterJobHandler:null}async function T(t,e,s){const o=await g(t);e={...e,maxPixelCount:e.maxPixelCount??2**28};const r=await U(o,e);C(r,o.pixelType,e.maxPixelCount);const i=[],n=R(t,r,!1,s);for await(const t of n)i.push(t.pixelBlock);if(!i.some(t=>null!=t))return null;const{width:p,height:a}=r,l=Math.ceil(p/b),m=Math.ceil(a/b),u={width:l*b,height:m*b};let j;const h=V(t);if(h){const t=await h.mosaicAndTransform({srcPixelBlocks:i,srcMosaicSize:u,destDimension:u},{...s,transferPixelsToWorker:!0});j=t?.pixelBlock}else j=c(i,u);return j}const L=async function(e,s,o){if(!s.geometry)throw new t("fetch-pixels","geometry is required to fetch pixel feature set");const r=await g(e),i=await U(r,s);C(i,r.pixelType);const{extent:n,pixelSize:p}=i,a=Math.round(r.extent.width/p.x),l=w(r),m={fields:l,features:[]},c=m.features,u=R(e,i,!1,o);for await(const t of u){if(!t.pixelBlock)continue;const i=V(e),n=Math.floor((r.extent.ymax-t.extent.ymax)/p.y)*a+Math.floor((t.extent.xmin-r.extent.xmin)/p.x),m=await v({pixelBlock:t.pixelBlock,extent:t.extent,fields:l,skipFactor:s?.skipFactor??1,rasterJobHandler:i,pixelIdOffset:n,imageRowSize:a},o);if(m?.features?.length){const{features:t}=m,e=t.length;for(let s=0;s<e;s++){const e=t.pop();c.push(e)}}}return{extent:n,featureSet:m,pixelSize:p}},F=P,O=async function(e,s,o){const r=await g(e,o);if(!r.attributeTable||!r.pixelType.startsWith("u"))return null;const i=r.attributeTable.clone(),n=i.fields.find(t=>"value"===t.name.toLowerCase()),p=i.fields.find(t=>"count"===t.name.toLowerCase());if(!n||!p)throw new t("compute-attribute-table","Value or count field not found in attribute table");const a=2**Number(r.pixelType.slice(1)),l=new Uint32Array(a),{geometry:m}=s;return await B(e,m,(t,e)=>u(t,l),o),i.features.forEach(t=>{const e=t.attributes[n.name];t.attributes[p.name]=l[e]}),i},z=async function*(t,s,o){const r=await g(t,o),i=w(r),n={...s,geometry:s?.geometry??r.extent},p=R(t,await U(r,n),!0,o),a=r.width;for await(const n of p){if(!n.pixelBlock){yield{...n};continue}const p=V(t),{pixelBlock:l}=n,{statistics:m,histograms:c}=await D({pixelBlock:l,rasterJobHandler:p},o),u=n;u.statistics=m,u.histograms=c;const j=n.id.row*r.width*b+n.id.col*b;e(o),u.featureSet=await v({pixelBlock:l,extent:n.extent,fields:i,skipFactor:s?.skipFactor??1,rasterJobHandler:p,pixelIdOffset:j,imageRowSize:a},o),e(o),yield u}},A=async function(t,e,s){const{geometry:o}=e;if("multipoint"===o.type)return async function(t,e,s){const o=await g(t,s),r=e.points.map((t,s)=>e.getPoint(s)).map(e=>I(t,e,s)),n=(await Promise.all(r)).filter(t=>null!=t);if(n.length<=1)return p=n[0],p?.map(t=>({min:t,max:t,avg:t,median:t,quartile1:t,quartile3:t}));var p;const a=n[0].map((t,e)=>n.map(t=>t[e]));return y(new i({pixels:a,pixelType:o.pixelType}))}(t,o,s);if("polyline"===o.type)return async function(t,e,s){const o=await P(t,{geometry:e},s),r=await g(t,s),{bandCount:n,pixelType:p}=r,a=new Array(n).fill(0).map(()=>i.createEmptyBand(p,o.length));let l=0;for(let t=0;t<o.length;t++){const e=o[t];if(null!=e.value){l++;for(let s=0;s<n;s++)a[s][t]=e.value[s]}}return l!==o.length&&a.forEach((t,e)=>{a[e]=t.subarray(0,l)}),y(new i({pixels:a,pixelType:p}))}(t,o,s);const r=await T(t,{geometry:o},s);return r?y(r):null},E=async function(e,s,o){if(!s.geometry)throw new t("compute-statistics-histograms","geometry is required to fetch pixel feature set");const r=await T(e,s,o);if(!r)throw new t("compute-statistics-histograms","failed to get intersecting pixels");const i=V(e);return i?await i.computeStatisticsHistograms({pixelBlock:r,includeSkewnessKurtosis:!0},{...o,transferPixelsToWorker:!0}):f(r,{includeSkewnessKurtosis:!0})},q=async function(t,e,s){const{geometry:o}=e;if("point"===o.type)return I(t,o,s);if("multipoint"===o.type){const e=o.points.map((t,e)=>o.getPoint(e)).map(e=>I(t,e,s)),r=(await Promise.all(e)).filter(t=>null!=t);return 0===r.length?null:M(r).map(t=>t/r.length)}const r=await B(t,o,(t,e)=>function(t){const{width:e,height:s,pixels:o,mask:r}=t,i=new Array(o.length).fill(0);let n=0;for(let t=0;t<s;t++)for(let s=0;s<e;s++){const p=t*e+s;if(!r||r[p]){for(let t=0;t<o.length;t++)i[t]+=o[t][p];n++}}return{bandSum:i,count:n}}(t),s),i=r?.filter(t=>t.count>0);if(!i?.length)return null;const n=M(i.map(t=>t.bandSum)),p=i.map(t=>t.count).reduce((t,e)=>t+e);return n.map(t=>t/p)};export{A as computeBoxStatistics,O as computeRasterAttributeTable,E as computeStatisticsHistograms,z as createPixelFeatureSetCursor,L as fetchPixelFeatureSet,q as identifyAveragePixelValue,F as readIntersectingPixels};
