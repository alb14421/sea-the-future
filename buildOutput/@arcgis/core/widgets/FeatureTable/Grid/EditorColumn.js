/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{on as e,sync as o}from"../../../core/reactiveUtils.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/lang.js";import"../../../chunks/Logger.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import s from"./Column.js";import{a as r}from"../../../chunks/uriUtils.js";import"../../../chunks/events.js";import"../../../chunks/handleUtils.js";import"../../../chunks/maybe.js";import"../../../core/promiseUtils.js";import"../../../core/Error.js";import"../../../chunks/object.js";import"../../../chunks/watch.js";import"../../../chunks/ObjectPool.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../chunks/SetUtils.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/Lifecycle.js";import"../../../chunks/tracking.js";import"../../../chunks/SimpleTrackingTarget.js";import"../../../config.js";import"../../../chunks/string.js";import"../../../chunks/ensureType.js";import"../../../chunks/MapUtils.js";import"../../../chunks/metadata.js";import"../../../chunks/Warning.js";import"../../../core/Accessor.js";import"../../../core/Handles.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/sanitizerUtils.js";import"../../../chunks/tableUtils.js";import"../../../chunks/layerUtils.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../chunks/jsonUtils.js";import"../../../request.js";import"../../../chunks/persistableUrlUtils.js";import"../../../core/Collection.js";import"../../../core/Evented.js";import"../../../chunks/shared.js";import"../../../chunks/SimpleObservable.js";import"../../../layers/catalog/catalogUtils.js";import"../../../chunks/columnUtils.js";import"../../../chunks/componentsUtils.js";import"../../../chunks/assets.js";import"../../../chunks/widgetUtils.js";const l="Escape",c=Symbol();let a=class extends s{constructor(t){super(t),this.editInfo=null,this.cellValueValidatorFunction=({oldValue:t,value:e})=>t!==e,this.editable=!0,this.headerRenderFunction=t=>{const{root:e}=t,o=this.createHeaderContent();this.tableEditingEnabled&&!this.effectiveEditable&&o.prepend(this._lockIconNode),this.removeCellContent(e),e.appendChild(o)},this.inputRenderFunction=({root:t,column:e,rowData:o})=>{if(this.editInfo||!this.effectiveEditable||!o)return;const i=this.getCellValue(o),n=this.createInputElement({value:i});this._set("editInfo",{column:e,inputs:[n],root:t,rowData:o,oldValue:i});const s=document.createElement("div");s.appendChild(n),this.removeCellContent(t),t.appendChild(s),n.focus(),n instanceof HTMLInputElement&&n.select()},this.loadingMessage="",this.inputType="text",this.maxLength=null,this.onShowPromptCallback=()=>{},this.parseInputValueFunction=({inputs:t})=>t?.length||1!==t.length||Array.isArray(t[0].value)?null:t[0].value,this.renderFunction=t=>{const{root:e,rowData:o}=t,{editInfo:i}=this;if(i)return;const n=this.getCellValue(o),s=this.cellValueFormatFunction({root:e,rowData:o,value:n});let c=null;e.onclick=()=>e.focus(),e.ondblclick=()=>this.inputRenderFunction(t),e.ontouchend=()=>this.inputRenderFunction(t);const a=this.grid?.getSlotElementByName(e.slot),u=a?.parentElement;u&&!u.onkeydown&&(u.onkeydown=e=>{"Enter"!==e.key||this.editInfo||this.inputRenderFunction(t),e.key===l&&this.editInfo&&this.cancel()}),null!=n&&null!=s?e.title=s.toString():e.title&&e.removeAttribute("title"),c=s instanceof HTMLElement?s:r(this.messagesURIUtils,s),this.removeCellContent(e),c instanceof HTMLElement?e.appendChild(c):null!=c&&(e.innerHTML=c.toString())},this.required=!1,this.tableEditingEnabled=!1}get _lockIconNode(){return this.createCalciteIcon({icon:"lock",textLabel:this.messages?.editingPreventedColumn})}get effectiveEditable(){return this.tableEditingEnabled&&this.editable}get effectiveRequired(){return this.required}get editing(){return!!this.editInfo}get shouldShowPrompt(){return!1}cancel(){this.onEditComplete()}createCalciteOption(t,e,o=!1){const i=document.createElement("calcite-option");return i.label=t,i.value=`${e}`,i.selected=o,i}createCalciteSelect(t,e){const{effectiveRequired:o,messages:i}=this;let n=!1;const s=e.map(({name:e,value:o})=>{const i=o===t;return i&&(n=!0),this.createCalciteOption(e,o,i)});if(null!=t&&""!==t&&!n){const e=t.toString(),o=this.createCalciteOption(e,e);s.unshift(o)}o||s.unshift(this.createCalciteOption(`<${i?.noValue}>`,""));const r=document.createElement("calcite-select");return s.forEach(t=>r.appendChild(t)),r}createInputElement({value:t}){const{effectiveRequired:i,maxLength:n}=this,s=document.createElement("calcite-input");return null!=n&&(s.maxLength=n),s.required=i,s.value=null!=t?t.toString():"",this.addHandles([e(()=>s,"calciteInputChange",()=>this.onInputBlur(),o),e(()=>s,"keydown",t=>{t.key===l&&this.onInputBlur(!0)},o),e(()=>s,"blur",()=>this.onInputBlur(),o)],c),s}createDateComponent(){const t=document.createElement("calcite-input-date-picker");return t.focusTrapDisabled=!0,t.overlayPositioning="fixed",t}createTimeComponent(){const t=document.createElement("calcite-input-time-picker");return t.overlayPositioning="fixed",t.placement="auto-start",t.step=1,t}createTimeZoneComponent(){const t=document.createElement("calcite-input-time-zone");return t.maxItems=4,t.overlayPositioning="fixed",t}onEditComplete(){this._set("editInfo",null),this.grid?.generateCellPartNames(),this.grid?.requestContentUpdate()}onInputBlur(t=!1){this.removeHandles(c),t?this.cancel():this.submit()}async submit(){const{editInfo:t}=this;if(!t)return void this.cancel();const{inputs:e,rowData:o,oldValue:i}=t,n=this.parseInputValueFunction({inputs:e});if(!this.cellValueValidatorFunction({value:n,oldValue:i}))return void this.cancel();const{root:s}=t,r=o.item.objectId,{fieldName:l}=this;s.textContent=this.loadingMessage,this.shouldShowPrompt?this.onShowPromptCallback({column:this,objectId:r,oldValue:i,value:n}):await this.updateItems({objectId:r,updates:[{fieldName:l,value:n}]})}async updateItems(t){const{store:e}=this;if(e)try{await e.updateItem(t),this.onEditComplete()}catch{this.cancel()}else this.cancel()}};t([i()],a.prototype,"_lockIconNode",null),t([i({readOnly:!0})],a.prototype,"editInfo",void 0),t([i()],a.prototype,"cellValueValidatorFunction",void 0),t([i()],a.prototype,"editable",void 0),t([i()],a.prototype,"effectiveEditable",null),t([i()],a.prototype,"effectiveRequired",null),t([i()],a.prototype,"editing",null),t([i()],a.prototype,"headerRenderFunction",void 0),t([i()],a.prototype,"inputRenderFunction",void 0),t([i({constructOnly:!0})],a.prototype,"loadingMessage",void 0),t([i()],a.prototype,"inputType",void 0),t([i()],a.prototype,"maxLength",void 0),t([i()],a.prototype,"onShowPromptCallback",void 0),t([i()],a.prototype,"parseInputValueFunction",void 0),t([i()],a.prototype,"renderFunction",void 0),t([i()],a.prototype,"required",void 0),t([i()],a.prototype,"shouldShowPrompt",null),t([i()],a.prototype,"tableEditingEnabled",void 0),a=t([n("esri.widgets.FeatureTable.Grid.EditorColumn")],a);const u=a;export{u as default};
