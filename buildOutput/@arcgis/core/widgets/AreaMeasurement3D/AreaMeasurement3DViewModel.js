/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import t from"../../analysis/AreaMeasurementAnalysis.js";import{f as e}from"../../core/Accessor.js";import{L as r}from"../../chunks/Logger.js";import{watch as i,syncAndInitial as o}from"../../core/reactiveUtils.js";import{M as n}from"../../chunks/unitUtils.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import{d as l}from"../../chunks/defaultUnit.js";import{A as u}from"../../chunks/AnalysisViewModel.js";import"../../analysis/Analysis.js";import"../../analysis/support/AnalysisOriginWebScene.js";import"../../core/Clonable.js";import"../../chunks/maybe.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../core/Error.js";import"../../chunks/object.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../chunks/events.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/Warning.js";import"../../core/Identifiable.js";import"../../core/JSONSupport.js";import"../../geometry/Polygon.js";import"../../chunks/writer.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../chunks/reader.js";import"../../geometry/SpatialReference.js";import"../../chunks/jsonMap.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/jsonUtils.js";import"../../chunks/persistableUrlUtils.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/coordsUtils.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/zmUtils.js";import"../../chunks/getDefaultUnitForView.js";import"../../portal/Portal.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"../../chunks/locale.js";import"../../portal/PortalGroup.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalUser.js";import"../../portal/PortalFolder.js";import"../../chunks/asyncUtils.js";let m=class extends u{constructor(s){super(s),this.analysis=null,this._userUnitOptions=null,this._userUnit=null,this.supportedViewType="3d",this.unsupportedErrorMessage="AreaMeasurement3DViewModel is only supported in 3D views.",s?.isDefaultViewModel||e(r.getLogger(this),"Area Measurement 3D","arcgis-area-measurement-3d",{version:"4.33"})}initialize(){this.addHandles(i(()=>({analysis:this.analysis,unit:this.unit}),({analysis:s,unit:t})=>{null!=s&&(s.unit=t)},o))}get state(){return this.disabled||!this.ready?"disabled":null==this.tool?"ready":this.tool.state}get measurement(){if(null==this.tool||this.disabled||this.tool.destroyed)return null;const{analysisView:s}=this;if(null==s)return null;const{viewData:t,areaLabel:e,perimeterLengthLabel:r}=s,i=t.validMeasurement,o="euclidean"===t.mode,n=0===t.intersectingSegments.size,a=n?i?"available":"unavailable":"invalid";return{mode:o?"euclidean":"geodesic",area:{text:n&&i?e:null,state:a},perimeterLength:{text:n&&i?r:null,state:a}}}get unitOptions(){const s=this._userUnitOptions?.filter(s=>n.includes(s));return s&&s.length>0?s:n.slice()}set unitOptions(s){this._userUnitOptions=s}get unit(){const s=this._userUnit,t=this.unitOptions;if(s&&t.includes(s))return s;const e=this.defaultUnit;return e&&t.includes(e)?e:t[0]}set unit(s){this._userUnit=s}constructAnalysis(){return new t}};s([a({type:t})],m.prototype,"analysis",void 0),s([a({readOnly:!0})],m.prototype,"state",null),s([a({readOnly:!0})],m.prototype,"measurement",null),s([a()],m.prototype,"unitOptions",null),s([a()],m.prototype,"_userUnitOptions",void 0),s([a()],m.prototype,"unit",null),s([a()],m.prototype,"_userUnit",void 0),s([a(l)],m.prototype,"defaultUnit",void 0),m=s([p("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],m);const c=m;export{c as default};
