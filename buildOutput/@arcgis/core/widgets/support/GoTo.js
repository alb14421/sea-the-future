/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import{b as o}from"../../chunks/maybe.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{subclass as t}from"../../core/accessorSupport/decorators/subclass.js";import{g as i}from"../../chunks/goToUtils.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../core/Error.js";import"../../chunks/object.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/Lifecycle.js";import"../../chunks/tracking.js";import"../../chunks/Warning.js";const e=e=>{const c=e;let p=class extends c{constructor(...s){super(...s),this.goToOverride=null,this.view=null}callGoTo(s){const{view:r}=this;return o(r),this.goToOverride?this.goToOverride(r,s):i(r,s.target,s.options)}};return s([r()],p.prototype,"goToOverride",void 0),s([r()],p.prototype,"view",void 0),p=s([t("esri.widgets.support.GoTo")],p),p};export{e as GoTo};
