/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"../../request.js";import{i as t}from"../../core/lang.js";import{a as i}from"../../chunks/date2.js";import r from"../../core/Error.js";import{_ as s}from"../../chunks/number2.js";import{urlToObject as o}from"../../core/urlUtils.js";import n from"./Field.js";import{normalizeFieldName as l,getFieldDefaultLength as c}from"./fieldUtils.js";import{i as a}from"../../chunks/locationUtils.js";import"../../config.js";import"../../chunks/object.js";import"../../kernel.js";import"../../chunks/MapUtils.js";import"../../core/promiseUtils.js";import"../../chunks/handleUtils.js";import"../../chunks/events.js";import"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/maybe.js";import"../../chunks/persistableUrlUtils.js";import"../../chunks/locale.js";import"../../chunks/jsonUtils.js";import"../../chunks/tslib.es6.js";import"../../chunks/jsonMap.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/tracking.js";import"../../chunks/ensureType.js";import"../../chunks/Warning.js";import"../../chunks/get.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/enumeration.js";import"../../chunks/reader.js";import"../../chunks/domains.js";import"./CodedValueDomain.js";import"./Domain.js";import"./InheritedDomain.js";import"./RangeDomain.js";import"../../chunks/fieldType.js";import"../../core/sql.js";import"../../chunks/guards.js";import"../../chunks/datetime.js";async function u(t,i={}){const{customParameters:s,signal:n}=i,l=o(t),c=await e(l.path,{query:{...l.query,...s},responseType:"native",signal:n});if(!c.data.body)throw new r("csv-utils:empty-csv","CSV is empty");const[a]=await Promise.allSettled([m(c.data.body)]);if(await c.data.body.cancel(),"rejected"===a.status)throw a.reason;return{url:t,customParameters:s,...a.value}}async function m(e){const t=e.getReader(),i=j(t),s=(await i.next()).value?.trim(),o=(await i.next()).value?.trim();if(t.releaseLock(),!s)throw new r("csv-utils:empty-csv","CSV is empty");const{delimiter:l,locationInfo:u}=function(e,t,i){e=e.trim(),t=t?.trim();const r=[],s=Array.from(new Set([i?.delimiter,...h])).filter(e=>null!=e);for(const i of s){const s=k(e,i).length,o=k(t,i).length??s;s>1&&r.push({weight:Math.min(s,o),delimiter:i})}const o=r.sort(({weight:e},{weight:t})=>t-e).map(({delimiter:e})=>e);for(const t of o){const r=y(e,t).names,s=a(r,i?.longitudeField,i?.latitudeField);if(s.longitudeFieldName&&s.latitudeFieldName)return{delimiter:t,locationInfo:s}}return{delimiter:o[0],locationInfo:null}}(s,o);if(!l)throw new r("csv-utils:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:s,secondLine:o});const{names:m,aliases:w}=y(s,l),T=await async function(e,t,i,r,s){const o=e.getReader(),n=j(o),l=[],a=[];for await(const e of async function*(e,t,i,r=()=>Object.create(null)){let s="",o="",n=0,l=r(),c=0;for await(const a of e){const e=g(a,i);for(const a of e)if(s+=o+a,o="",n+=N(a),n%2==0){if(n>0){const e=p.exec(s);if(!e)return l=r(),c=0,s="",void(n=0);l[t[c]]=F(e[1]).replaceAll(d,'"'),c++}else l[t[c]]=F(s),c++;s="",n=0}else o=i;0===n?(yield l,l=r(),c=0):o=f}}(n,i,t)){if(10===a.length)break;a.push(e)}for(let e=0;e<i.length;e++){const t=i[e],o=r[e];if(t===s?.longitudeFieldName||t===s?.latitudeFieldName)l.push({name:t,type:"esriFieldTypeDouble",alias:o});else{const e=b(a.map(e=>e[t]))??"esriFieldTypeString";l.push({name:t,type:e,alias:o,length:c(e)})}}return o.releaseLock(),l}(e,l,m,w,u);return{delimiter:l,fields:T.map(e=>n.fromJSON(e)),latitudeField:u?.latitudeFieldName,longitudeField:u?.longitudeFieldName}}const p=/^\s*"([\S\s]*)"\s*$/,d=/""/g,f="\n",h=[","," ",";","|","\t"];async function*j(e){const t=/\r?\n/gm,i=new TextDecoder;let r="";for await(const s of async function*(e){let t=await e.read();for(;!t.done;)yield t.value,t=await e.read();e.releaseLock()}(e)){const e=`${r}${i.decode(s)}`.split(t).filter(Boolean);r=e.pop()||"",yield*e}}function g(e,t){return function*(e,t){let i=0;for(;i<=e.length;){const r=e.indexOf(t,i),s=e.slice(i,r>-1?r:void 0);i+=s.length+t.length,yield s}}(e,t)}function y(e,i){const r=k(e,i).filter(t),s=r.map(e=>l(e));for(let e=s.length-1;e>=0;e--)s[e]||(s.splice(e,1),r.splice(e,1));return{names:s,aliases:r}}function k(e,t){if(!e?.length)return[];const i=[];let r="",s="",o=0;const n=g(e,t);for(const e of n)if(r+=s+e,s="",o+=N(e),o%2==0){if(o>0){const e=p.exec(r);e&&i.push(e[1].replaceAll(d,'"'))}else i.push(r);r="",o=0}else s=t;return i}function b(e){if(!e.length)return"esriFieldTypeString";const t=/[^+\-.,0-9]/;return e.map(e=>{if(""!==e){if(!t.test(e)){let t=w(e);if(!isNaN(t))return/[.,]/.test(e)||!Number.isInteger(t)||t>214783647||t<-214783648?"esriFieldTypeDouble":"esriFieldTypeInteger";if(e.includes("E")){if(t=Number(e),!Number.isNaN(t))return"esriFieldTypeDouble";if(e.includes(",")&&(e=e.replace(",","."),t=Number(e),!Number.isNaN(t)))return"esriFieldTypeDouble"}}return i(e)?"esriFieldTypeDate":"esriFieldTypeString"}}).reduce((e,t)=>void 0===e?t:void 0===t?e:e===t?t:"esriFieldTypeString"===e||"esriFieldTypeString"===t?"esriFieldTypeString":"esriFieldTypeDouble"===e||"esriFieldTypeDouble"===t?"esriFieldTypeDouble":void 0)}const w=function(){const e=s(),t=new RegExp("^"+e.regexp+"$"),i=new RegExp("["+e.group+"\\s\\xa0]","g"),r=e.factor;return s=>{const o=t.exec(s);if(e.factor=r,!o)return NaN;let n=o[1];if(!o[1]){if(!o[2])return NaN;n=o[2],e.factor*=-1}return n=n.replace(i,"").replace(e.decimal,"."),+n*e.factor}}();function F(e){return JSON.parse(JSON.stringify(e))}function N(e){let t=0,i=0;for(i=e.indexOf('"',i);i>=0;)t++,i=e.indexOf('"',i+1);return t}export{u as getCSVLayerInfo};
