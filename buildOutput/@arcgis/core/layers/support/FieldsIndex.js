/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{L as i}from"../../chunks/Logger.js";import{g as t}from"../../chunks/MapUtils.js";import{U as s}from"../../chunks/UnknownTimeZone.js";import{i as n}from"../../chunks/jsonUtils.js";import{isDateField as r,isNumericField as l,isObjectIDField as o,isGlobalIDField as d,getFieldDefaultValue as a,isTimeOnlyField as m,normalizeFieldName as u}from"./fieldUtils.js";import{a as f,u as h}from"../../chunks/constants.js";import{f as c}from"../../chunks/timeZoneUtils.js";import{F as p,I as F}from"../../chunks/datetime.js";import"../../core/lang.js";import"../../chunks/object.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/SetUtils.js";import"../../core/sql.js";import"../../chunks/maybe.js";import"../../chunks/guards.js";const g=new Map;class y{static fromJSON(e){return new y(e.fields,e.timeZoneByFieldName)}static fromLayer(e){return new y(e.fields??[],Z(e))}static fromLayerJSON(e){return new y(e.fields??[],Z(e))}constructor(e=[],i){this._fieldsMap=new Map,this._normalizedFieldsMap=new Map,this._dateFieldsSet=new Set,this._numericFieldsSet=new Set,this._requiredFields=null,this.dateFields=[],this.numericFields=[],this.fields=e||[],this._timeZoneByFieldName=i?new Map(i):null;const t=[];for(const e of this.fields){const i=e?.name,s=T(i);if(i&&s){const n=_(i);this._fieldsMap.set(i,e),this._fieldsMap.set(n,e),this._normalizedFieldsMap.set(s,e),t.push(`${n}:${e.type}:${this._timeZoneByFieldName?.get(i)}`),r(e)?(this.dateFields.push(e),this._dateFieldsSet.add(e)):l(e)&&(this._numericFieldsSet.add(e),this.numericFields.push(e)),o(e)||d(e)||(e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable)}}t.sort(),this.uid=t.join()}get requiredFields(){if(!this._requiredFields){this._requiredFields=[];for(const e of this.fields)o(e)||d(e)||e.nullable||void 0!==a(e)||this._requiredFields.push(e)}return this._requiredFields}equals(e){return this.uid===e?.uid}has(e){return null!=this.get(e)}get(e){if(!e)return;let i=this._fieldsMap.get(e);return i||(i=this._fieldsMap.get(_(e))??this._normalizedFieldsMap.get(T(e)),i&&this._fieldsMap.set(e,i),i)}getTimeZone(t){const s=this.get(t&&"string"!=typeof t?t.name:t);return s?this._timeZoneByFieldName?this._timeZoneByFieldName.get(s.name):"date"===s.type||"esriFieldTypeDate"===s.type?(i.getLogger("esri.layers.support.FieldsIndex").errorOnce(new e("getTimeZone:no-timezone-information",`no time zone information for field '${s.name}'`)),f):j.has(s.type)?h:null:null}getLuxonTimeZone(e){const i=this.getTimeZone(e);return i?i===h?s.instance:i===f?p.utcInstance:t(g,i,()=>F.create(i)):null}isDateField(e){return this._dateFieldsSet.has(this.get(e))}isTimeOnlyField(e){return m(this.get(e))}isNumericField(e){return this._numericFieldsSet.has(this.get(e))}normalizeFieldName(e){return this.get(e)?.name??void 0}toJSON(){return{fields:this.fields.map(e=>n(e)?e.toJSON():e),timeZoneByFieldName:this._timeZoneByFieldName?Array.from(this._timeZoneByFieldName.entries()):null}}}function _(e){return e.trim().toLowerCase()}function T(e){return u(e)?.toLowerCase()??""}const j=new Set(["time-only","date-only","timestamp-offset","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"]);function Z(e){const i=new Map;if(!e.fields)return i;const t=!0===e.datesInUnknownTimezone,{timeInfo:s,editFieldsInfo:n}=e,r=(s?"startField"in s?s.startField:s.startTimeField:"")??"",l=(s?"endField"in s?s.endField:s.endTimeField:"")??"",o="dateFieldsTimeZone"in e?e.dateFieldsTimeZone??null:e.dateFieldsTimeReference?c(e.dateFieldsTimeReference):null,d=n?"timeZone"in n?n.timeZone??o:n.dateFieldsTimeReference?c(n.dateFieldsTimeReference):o??f:null,a=s?"timeZone"in s?s.timeZone??o:s.timeReference?c(s.timeReference):o:null,m=new Map([[_(n?.creationDateField??""),d],[_(n?.editDateField??""),d],[_(r),a],[_(l),a]]);for(const{name:s,type:n}of e.fields)if(j.has(n))i.set(s,h);else if("date"!==n&&"esriFieldTypeDate"!==n)i.set(s,null);else if(t)i.set(s,h);else{const e=m.get(_(s??""))??o;i.set(s,e)}return i}export{y as default};
