/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"../../core/Collection.js";import t from"../../core/Error.js";import{J as s}from"../../chunks/jsonMap.js";import o from"../../geometry/SpatialReference.js";import r from"./Field.js";import{i}from"../../chunks/locationUtils.js";import n from"./ParquetEncodingLocation.js";import m from"./ParquetEncodingWkb.js";import{c,r as p,a}from"../../chunks/parquet.js";import"../../chunks/tslib.es6.js";import"../../chunks/watch.js";import"../../chunks/ObjectPool.js";import"../../core/lang.js";import"../../chunks/handleUtils.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../chunks/events.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/maybe.js";import"../../chunks/SetUtils.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/Lifecycle.js";import"../../chunks/tracking.js";import"../../chunks/SimpleTrackingTarget.js";import"../../core/Evented.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/metadata.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../chunks/Warning.js";import"../../chunks/ObservableBase.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/jsonUtils.js";import"../../core/JSONSupport.js";import"../../chunks/unitUtils.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/persistableUrlUtils.js";import"../../chunks/writer.js";import"../../chunks/enumeration.js";import"../../chunks/reader.js";import"../../chunks/domains.js";import"./CodedValueDomain.js";import"./Domain.js";import"./InheritedDomain.js";import"./RangeDomain.js";import"../../chunks/fieldType.js";import"./fieldUtils.js";import"../../core/sql.js";import"../../chunks/guards.js";import"../../chunks/datetime.js";const u=new s({esriGeometryPoint:"point",esriGeometryPolygon:"polygon",esriGeometryPolyline:"polyline",esriGeometryMultipoint:"multipoint"});function l(e){return u.toJSON(e)}function j(t,s={}){return d({urls:new e(t)},s)}async function d(e,s={}){if(e.geometryType&&e.spatialReference&&e.encoding&&e.fields)return e;if(e.urls.length<1)throw new t("parquet:bad-input","At least one url must be specified",e);const u=await c(e.urls.getItemAt(0),{getCustomParameters:()=>s.customParameters}),l=p(u),j={...e,file:u};null==j.fields&&(j.fields=u.fields().map(e=>r.fromJSON({name:e.name,type:e.type}))),null==j.encoding&&(j.encoding=function(e,t){if(null!=e){const t=e.primary_column,s=e.columns[t];return new m({primaryFieldName:t,orientation:s.orientation??null})}const s=i(t.map(e=>e.name));return s.latitudeFieldName&&s.latitudeFieldName?new n({latitudeFieldName:s.latitudeFieldName,longitudeFieldName:s.longitudeFieldName}):null}(l,j.fields));const d=a(u);if(d)switch(d.mode){case"z":j.displayOptimization={mode:"z"};break;case"xz":{const e=d.multiscale;if(!e)throw new t("bad-format","XZ display optimization requires multiscale geometries");j.displayOptimization={mode:"xz",multiscale:e};break}}if(!j.encoding)return j;switch(j.encoding.type){case"location":null==j.spatialReference&&(j.spatialReference=o.WGS84),null==j.geometryType&&(j.geometryType="point");break;case"wkb":{if(!l)return j;const e=l.primary_column,s=l.columns[e];if(j.geometryType||(j.geometryType=function(e){const{geometry_types:s}=e,o=new Set;for(const e of s){const t=f(e);t&&o.add(t)}if(o.size>1)throw new t("unsupported","Parquet mixed geometry types are not support",{geometryTypes:o});return 1===o.size?o.values().next().value:void 0}(s)),j.spatialReference||(j.spatialReference=function(e){const t=e.crs?.id?.code;return t&&"number"==typeof t?new o({wkid:t}):void 0}(s)),j.fields)for(const e of Object.keys(l.columns))j.fields=j.fields.filter(t=>t.name!==e)}}return j}function f(e){switch(e){case"Point":return"point";case"Polygon":case"MultiPolygon":return"polygon";case"LineString":return"polyline";case"MultiPoint":return"multipoint";default:return null}}export{d as completeParquetLayerInfo,j as getParquetLayerInfo,u as parquetGeometryTypeKebabDict,l as toParquetJSONGeometryType};
