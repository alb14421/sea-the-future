/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import n from"./RasterFunction.js";import{c as t,k as e,s as r}from"../../chunks/focalStatUtils.js";import{f as o,h as u}from"../../chunks/colorUtils.js";import{colormapName as s}from"./rasterFunctionConstants.js";import{a as i,d as a}from"../../chunks/colorRampUtils.js";import{J as c}from"../../chunks/jsonMap.js";import"../../chunks/tslib.es6.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/lang.js";import"../../core/Handles.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/maybe.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/tracking.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../chunks/Warning.js";import"../../core/Error.js";import"../../chunks/get.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../chunks/events.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/enumeration.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../chunks/rasterEnums.js";import"./PixelBlock.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/pixelRangeUtils.js";import"../../chunks/colorUtils2.js";import"../../Color.js";import"../../chunks/mathUtils.js";import"../../chunks/vec4.js";import"../../chunks/common.js";import"../../chunks/vec4f64.js";import"../../chunks/jsonUtils.js";function p(t,e,r){return Object.keys(e).forEach(n=>{null==e[n]&&delete e[n]}),r||(r="unknown"),new n({functionName:t,functionArguments:e,outputPixelType:r})}const d={"user-defined":-1,"line-detection-horizontal":0,"line-detection-vertical":1,"line-detection-left-diagonal":2,"line-detection-right-diagonal":3,"gradient-north":4,"gradient-west":5,"gradient-east":6,"gradient-south":7,"gradient-north-east":8,"gradient-north-west":9,"smooth-arithmetic-mean":10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,"sobel-horizontal":17,"sobel-vertical":18,sharpen:19,sharpen2:20,"point-spread":21,none:255};function l(n){const{raster:t,outputPixelType:e}=n;if("convolutionType"in n&&"user-defined"!==n.convolutionType)return p("Convolution",{type:d[n.convolutionType]??255,raster:t},e);const{rows:r,cols:o,kernel:u}=n;return p("Convolution",{type:-1,rows:r,cols:o,kernel:u,raster:t},e)}function f(n){const{contrastOffset:t,brightnessOffset:e,raster:r,outputPixelType:o}=n;return p("ContrastBrightness",{contrastOffset:t,brightnessOffset:e,raster:r},o)}function m(n,t){const{raster:e,dynamicRangeAdjustment:r,gamma:o,useGamma:u,outputMin:s=0,outputMax:i=255}=t;return{raster:e,stretchType:n,min:s,max:i,useGamma:!!u,gamma:o,dra:!!r}}function h(n){const t=m(5,n);return t.statistics=n.statistics?.map(n=>[n.min,n.max,n.avg??0,n.stddev??-1]),p("Stretch",t,n.outputPixelType)}function k(n){const t=m(3,n);return t.statistics=n.statistics?.map(n=>[n.min,n.max,n.avg??0,n.stddev??-1]),t.numberOfStandardDeviations=n.numberOfStandardDeviations??2,p("Stretch",t,n.outputPixelType)}function w(n){const t=m(6,n);return t.minPercent=n.minPercent??.25,t.maxPercent=n.maxPercent??.25,p("Stretch",t,n.outputPixelType)}function y(n){return p("Stretch",m(0,n),n.outputPixelType)}function g(n){return p("Stretch",m(4,n),n.outputPixelType)}function x(n,t,e,r=[]){const{raster:o,outputPixelType:u}=n;return p("BandArithmetic",{raster:o,method:t,bandIndexes:e.map(n=>n+1).concat(r).join(" ")},u)}function T(n){const{nirBandId:t,redBandId:e,scientificOutput:r=!0,raster:o,outputPixelType:u}=n;return p("NDVI",{raster:o,visibleBandID:e,infraredBandID:t,scientificOutput:r},u)}function B(n){const{nirBandId:t,redBandId:e,factor:r=.33}=n;return x(n,2,[t,e],[r])}function I(n){const{nirBandId:t,redBandId:e,slope:r=.33,intercept:o=.5,factor:u=1.5}=n;return x(n,3,[t,e],[r,o,u])}function j(n){const{nirBandId:t,redBandId:e}=n;return x(n,4,[t,e])}function P(n){const{nirBandId:t,redBandId:e}=n;return x(n,5,[t,e])}function b(n){const{nirBandId:t,redBandId:e,slope:r=.3,gradient:o=.5}=n;return x(n,6,[t,e],[r,o])}function v(n){return x(n,7,n.bandIds)}function S(n){return x(n,8,n.bandIds)}function R(n){const{redBandId:t,greenBandId:e,blueBandId:r}=n;return x(n,9,[t,e,r])}function O(n){const{nirBandId:t,greenBandId:e}=n;return x(n,10,[t,e])}function N(n){const{nirBandId:t,redBandId:e}=n;return x(n,11,[t,e])}function C(n){const{nirBandId:t,reBandId:e}=n;return x(n,12,[t,e])}function M(n){const{nirBandId:t,reBandId:e}=n;return x(n,13,[t,e])}function A(n){const{nirBandId:t,redBandId:e,greenBandId:r}=n;return x(n,14,[t,e,r])}function F(n){const{nirBandId:t,reBandId:e,greenBandId:r}=n;return x(n,15,[t,e,r])}function D(n){const{nirBandId:t,reBandId:e}=n;return x(n,16,[t,e])}function V(n){const{nirBandId:t,greenBandId:e}=n;return x(n,17,[t,e])}function z(n){const{nirBandId:t,greenBandId:e}=n;return x(n,18,[t,e])}function J(n){const{nirBandId:t,redBandId:e,blueBandId:r}=n;return x(n,19,[t,e,r])}function U(n){const{redBandId:t,blueBandId:e}=n;return x(n,20,[t,e])}function E(n){const{swirBandId:t,nirBandId:e}=n;return x(n,21,[t,e])}function L(n){const{swir1BandId:t,swir2BandId:e}=n;return x(n,22,[t,e])}function G(n){const{greenBandId:t,nirBandId:e,swirBandId:r,alpha:o=.5}=n;return x(n,23,[t,e,r],[o])}function W(n){const{redBandId:t,nirBandId:e}=n;return x(n,24,[t,e])}function $(n){const{nirBandId:t,swirBandId:e}=n;return x(n,25,[t,e])}function Z(n){const{swirBandId:t,nirBandId:e}=n;return x(n,26,[t,e])}function H(n){const{nirBandId:t,swirBandId:e}=n;return x(n,27,[t,e])}function K(n){const{greenBandId:t,swirBandId:e}=n;return x(n,28,[t,e])}function q(n){const{greenBandId:t,swirBandId:e}=n;return x(n,29,[t,e])}function Q(n){const{raster:t,bandIndexes:e,outputPixelType:r}=n;return p("BandArithmetic",{raster:t,method:0,bandIndexes:e},r)}function X(n){const{raster:r,raster2:o,outputPixelType:u}=n;return p("ComputeChange",{method:t.toJSON(n.method),keepMethod:n.keepMethod&&e.toJSON(n.keepMethod),raster:r,raster2:o},u)}function Y(n){const{raster:t,outputPixelType:e}=n;return p("Threshold",{thresholdType:1,raster:t},e)}function _(n){const{weights:t,outputPixelType:e="unknown",raster:r}=n;return p("Grayscale",{conversionParameters:t,raster:r},e)}function nn(n){const{outputPixelType:t,raster:e}=n;return p("ColorspaceConversion",{conversionType:"rgb-to-hsv"===n.conversionType?0:1,raster:e},t)}function tn(n){const{outputPixelType:t,raster:e}=n;return p("SpectralConversion",{conversionMatrix:n.conversionMatrix.flat(),raster:e},t)}function en(n){const{outputPixelType:t,raster:e}=n;return p("TasseledCap",{raster:e},t)}function rn(n){return"colormap"in n?function(n){const t=n.colormap.map(n=>{if("value"in n){const t="string"==typeof n.color?o(n.color)??u(n.color):n.color;(n=[n.value,...t])[4]&&n[4]<=1&&(n[4]=Math.round(255*n[4]))}return n}),{raster:e,outputPixelType:r}=n;return p("Colormap",{colormap:t,raster:e},r)}(n):"colorRamp"in n?function(n){const{raster:t,colorRamp:e,outputPixelType:r}=n;return p("Colormap",{colorRamp:"toJSON"in e?e.toJSON():e,raster:t},r)}(n):function(n){const{colorRampName:t}=n,e=Object.values(s).find(n=>n.toLowerCase()===t?.toLowerCase()),r=i.toJSON(t),{raster:o,outputPixelType:u="unknown"}=n;return p("Colormap",e?{colormapName:e,raster:o}:{colorRampName:r,raster:o},u)}(n)}function on(n){const{raster:t,outputPixelType:e="u8"}=n;return p("ColormapToRGB",{raster:t},e)}function un(n){const{raster:t,histograms:e,outputPixelType:r}=n,o=n.statistics?.map(n=>({min:n.min,max:n.max,mean:n.avg,standardDeviation:n.stddev}));return p("StatisticsHistograms",{raster:t,statistics:o,histograms:e},r)}function sn(n){const{raster:t,attributeTable:e,outputPixelType:r="unknown"}=n;return p("Table",{raster:t,attributeTableAsRecordSet:"toJSON"in e?e.toJSON():e},r)}function an(n){const{raster:t,outputPixelType:e="unknown"}=n,r={raster:t,missingBandAction:"fail"===n.missingBandAction?1:0};return"bandIds"in n?r.bandIds=n.bandIds:"bandNames"in n?r.bandNames=n.bandNames:"bandWavelengths"in n&&(r.bandWavelengths=n.bandWavelengths),p("ExtractBand",r,e)}function cn(n){const{redBand:t,greenBand:e,blueBand:r,raster:o,outputPixelType:u}=n;return p("CreateColorComposite",{raster:o,method:"name"===n.method?0:2,bandIndexesR:t,bandIndexesG:e,bandIndexesB:r},u)}function pn(n){const{rasters:t,outputPixelType:e}=n;return p("CompositeBand",{rasters:t},e)}function dn(n){const{allowUnmatched:t,raster:e,rangeMaps:r,outputPixelType:o,replacementValue:u}=n,s=r?.filter(({output:n})=>null!=n),i=s?.flatMap(({range:n})=>n),a=s?.map(({output:n})=>n),c=r?.filter(n=>null==n.output)?.flatMap(({range:n})=>n);return p("Remap",{allowUnmatched:t,raster:e,inputRanges:i,outputValues:a,noDataRanges:c,replacementValue:u},o)}function ln(n){const{inputBitPositions:t,raster:e,fillRaster:r,outputBitPositions:o,outputPixelType:u}=n,s={inputBitPositions:t,outputBitPositions:o,raster:e};return null!=r&&("number"==typeof r?(s.constantFillCheck=!0,s.constantFillValue=r):s.fillRaster=r),p("TransposeBits",s,u)}function fn(n){const{raster:t,outputPixelType:e="unknown"}=n,r=n.includedRanges?.flatMap(n=>n),o=n.noDataValues?.map(n=>n.join(" "));return p("Mask",{raster:t,includedRanges:r,noDataInterpretation:"match-all"===n.noDataInterpretation?1:0,noDataValues:o},e)}function mn(n){const{geometry:t,keepOutside:e,outputPixelType:r="unknown",raster:o}=n;return p("Clip",{clippingGeometry:"declaredClass"in t?t.toJSON():t,clippingType:e?2:1,raster:o},r)}function hn(n,t,e="unknown"){let r;return"object"!=typeof t||!("raster"in t)&&("rasterFunction"in t||"functionName"in t)?r=[t]:(r=[t.raster??"$$"],e=t.outputPixelType??"unknown"),p("Local",{operation:n,rasters:r},e)}function kn(n,t,e,r="unknown"){let o;return"object"==typeof t&&"raster"in t?(o=[t.raster,t.raster2],r=t.outputPixelType??"unknown"):o=[t,e],p("Local",{operation:n,rasters:o},r)}function wn(n,t,e="unknown"){return kn(1,n,t,e)}function yn(n,t,e="unknown"){return kn(2,n,t,e)}function gn(n,t,e="unknown"){return kn(3,n,t,e)}function xn(n,t="unknown"){return hn(4,n,t)}function Tn(n,t,e="unknown"){return kn(5,n,t,e)}function Bn(n,t="unknown"){return hn(6,n,t)}function In(n,t="unknown"){return hn(7,n,t)}function jn(n,t="unknown"){return hn(8,n,t)}function Pn(n,t="unknown"){return hn(9,n,t)}function bn(n,t="unknown"){return hn(10,n,t)}function vn(n,t,e="unknown"){return kn(11,n,t,e)}function Sn(n,t,e="unknown"){return kn(12,n,t,e)}function Rn(n,t="unknown"){return hn(13,n,t)}function On(n,t,e="unknown"){return kn(14,n,t,e)}function Nn(n,t,e="unknown"){return kn(15,n,t,e)}function Cn(n,t,e="unknown"){return kn(16,n,t,e)}function Mn(n,t,e="unknown"){return kn(17,n,t,e)}function An(n,t="unknown"){return hn(18,n,t)}function Fn(n,t,e="unknown"){return kn(19,n,t,e)}function Dn(n,t,e="unknown"){return kn(20,n,t,e)}function Vn(n,t="unknown"){return hn(21,n,t)}function zn(n,t="unknown"){return hn(22,n,t)}function Jn(n,t,e="unknown"){return kn(23,n,t,e)}function Un(n,t,e="unknown"){return kn(24,n,t,e)}function En(n,t="unknown"){return hn(25,n,t)}function Ln(n,t="unknown"){return hn(26,n,t)}function Gn(n,t="unknown"){return hn(27,n,t)}function Wn(n,t,e="unknown"){return kn(28,n,t,e)}function $n(n,t,e="unknown"){return kn(29,n,t,e)}function Zn(n,t="unknown"){return hn(30,n,t)}function Hn(n,t="unknown"){return hn(31,n,t)}function Kn(n,t="unknown"){return hn(32,n,t)}function qn(n,t,e="unknown"){return kn(33,n,t,e)}function Qn(n,t,e="unknown"){return kn(34,n,t,e)}function Xn(n,t="unknown"){return hn(35,n,t)}function Yn(n,t="unknown"){return hn(36,n,t)}function _n(n,t="unknown"){return hn(37,n,t)}function nt(n,t,e="unknown"){return kn(44,n,t,e)}function tt(n,t="unknown"){return hn(45,n,t)}function et(n,t,e="unknown"){return kn(46,n,t,e)}function rt(n,t="unknown"){return hn(48,n,t)}function ot(n,t="unknown"){return hn(49,n,t)}function ut(n,t="unknown"){return hn(51,n,t)}function st(n,t="unknown"){return hn(52,n,t)}function it(n,t="unknown"){return hn(53,n,t)}function at(n,t="unknown"){return hn(56,n,t)}function ct(n,t="unknown"){return hn(57,n,t)}function pt(n,t="unknown"){return hn(59,n,t)}function dt(n,t="unknown"){return hn(60,n,t)}function lt(n,t,e="unknown"){return kn(61,n,t,e)}function ft(n,t,e="unknown"){let r;return"object"==typeof n&&"raster"in n?(r=[n.raster,n.falseRaster],e=n.outputPixelType??"unknown"):r=[n,t],p("Local",{operation:50,rasters:r},e)}function mt(n,t,e,r){let o;return"object"==typeof n&&"raster"in n&&"trueRaster"in n?(o=[n.raster,n.trueRaster,n.falseRaster],r=n.outputPixelType??"unknown"):o=[n,t,e],p("Local",{operation:78,rasters:o},r)}const ht={majority:38,max:39,mean:40,median:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58};function kt(n){const{rasters:t,statisticsType:e,processAsMultiband:r=!0,outputPixelType:o}=n;return p("Local",{operation:ht[e],processAsMultiband:r,rasters:t},o)}function wt(n){const{rasters:t,inputNames:e,expression:r,outputPixelType:o}=n;return p("RasterCalculator",{rasters:t,inputNames:e,expression:r},o)}function yt(n){const{rasters:t,weights:e,outputPixelType:r}=n,o=n?.fields??t.map(()=>"Value");return p("WeightedSum",{rasters:t,fields:o,weights:e},r)}function gt(n){const{rasters:t,weights:e,outputPixelType:r,minScale:o,maxScale:u,valueToScaleMaps:s,noDataValues:i,restrictedValues:a}=n,c=e.reduce((n,t)=>n+t),d=1===c?e:e.map(n=>n/c),l=n?.fields??t.map(()=>"Value"),f=t.map(()=>[]);if(s?.length)for(let n=0;n<f.length;n++)s[n]?.length&&f[n].push(...s[n].map(n=>n.join(" ")));if(i?.length)for(let n=0;n<f.length;n++)i[n]?.length&&f[n].push(...i[n].map(n=>`${n} NODATA`));if(a?.length)for(let n=0;n<f.length;n++)a[n]?.length&&f[n].push(...a[n].map(n=>`${n} Restricted`));const m=f.map(n=>n.join(","));return p("WeightedOverlay",{rasters:t,fields:l,influences:d,remaps:m,evalFrom:o,evalTo:u},r)}function xt(n){const{raster:t,outputPixelType:e}=n;return p("Aspect",{raster:t},e)}function Tt(n){const{raster:t,zFactor:e,removeEdgeEffect:r,outputPixelType:o="unknown"}=n,u="degree"===n.slopeType?1:"percent-rise"===n.slopeType?2:3,s={raster:t,slopeType:u,zFactor:e,removeEdgeEffect:r};return 3===u&&(s.psPower=n.pixelSizePower,s.psZFactor=n.pixelSizeZFactor),p("Slope",s,o)}function Bt(n){const{raster:t,zFactor:e,outputPixelType:r="unknown"}=n;return p("Curvature",{raster:t,curvatureType:"standard"===n.curvatureType?0:"planform"===n.curvatureType?1:2,zFactor:e},r)}function It(n){const{raster:t,zFactor:e,altitude:r=45,azimuth:o=315,removeEdgeEffect:u,outputPixelType:s="u8"}=n,i="adjusted"===n.scalingType?3:1,a={raster:t,hillshadeType:"multi-directional"===n.hillshadeType?1:0,altitude:r,azimuth:o,slopeType:i,zFactor:e,removeEdgeEffect:u};return 3===i&&(a.psPower=n.pixelSizePower,a.psZFactor=n.pixelSizeZFactor),p("Hillshade",a,s)}function jt(n){const{functionArguments:t}=It(n),{outputPixelType:e="u8"}=n,r=n.colorRamp;if(r){const n="toJSON"in r?r.toJSON():r;return p("ShadedRelief",{...t,colorRamp:n},e)}const o=n.colorRampName;if(o){const n=a(o);return p("ShadedRelief",{...t,colorRamp:n},e)}const u=n.colormap;return p("ShadedRelief",{...t,colormap:u},e)}function Pt(n){const{rows:t,cols:e,fillNoDataOnly:o=!1,raster:u,outputPixelType:s}=n;return p("Statistics",{rows:t,cols:e,fillNoDataOnly:o,statisticsType:r.toJSON(n.statisticsType),raster:u},s)}const bt=new c({0:"max",1:"min",2:"median",3:"duration"},{useNumericKeys:!0});function vt(n){const{rasters:t,outputPixelType:e}=n,r={argStatisticsType:bt.toJSON(n.statisticsType),rasters:t};return"duration"===n.statisticsType?(r.minValue=n.minValue,r.maxValue=n.maxValue):r.undefinedClass=n.undefinedClass,p("ArgStatistics",r,e)}const St="$$";export{bn as abs,Bn as acos,pt as acosh,vt as argStatistics,In as asin,dt as asinh,xt as aspect,jn as atan,lt as atan2,Pn as atanh,W as bandArithmeticBAI,V as bandArithmeticCIg,D as bandArithmeticCIre,L as bandArithmeticClayMinerals,Q as bandArithmeticCustom,J as bandArithmeticEVI,E as bandArithmeticFerrousMinerals,P as bandArithmeticGEMI,O as bandArithmeticGNDVI,v as bandArithmeticGVITM,U as bandArithmeticIronOxide,q as bandArithmeticMNDWI,j as bandArithmeticMSAVI,A as bandArithmeticMTVI2,$ as bandArithmeticNBR,Z as bandArithmeticNDBI,H as bandArithmeticNDMI,K as bandArithmeticNDSI,T as bandArithmeticNDVI,C as bandArithmeticNDVIre,z as bandArithmeticNDWI,b as bandArithmeticPVI,F as bandArithmeticRTVICore,B as bandArithmeticSAVI,N as bandArithmeticSR,M as bandArithmeticSRre,S as bandArithmeticSultan,I as bandArithmeticTSAVI,R as bandArithmeticVARI,G as bandArithmeticWNDWI,vn as bitwiseAnd,Sn as bitwiseLeftShift,Rn as bitwiseNot,On as bitwiseOr,Nn as bitwiseRightShift,Cn as bitwiseXor,Mn as booleanAnd,An as booleanNot,Fn as booleanOr,Dn as booleanXor,wt as calculate,kt as cellStatistics,mn as clip,rn as colormap,on as colormapToRGB,nn as colorspaceConversion,pn as compositeBand,X as computeChange,mt as conditional,f as contrastBrightness,l as convolution,Vn as cos,zn as cosh,cn as createColorComposite,Bt as curvature,St as defaultRaster,Jn as divide,Un as equalTo,En as exp,Ln as exp10,Gn as exp2,an as extractBand,Kn as float,_ as grayscale,Wn as greaterThan,$n as greaterThanEqual,It as hillshade,Zn as int,Hn as isNull,qn as lessThan,Qn as lessThanEqual,Xn as log,Yn as log10,_n as log2,fn as mask,yn as minus,nt as mod,tt as negate,et as notEqual,wn as plus,Tn as power,dn as remap,rt as roundDown,ot as roundUp,ft as setNull,jt as shadedRelief,ut as sin,st as sinh,Tt as slope,tn as spectralConversion,xn as sqrt,it as square,Pt as statistics,un as statisticsHistogram,g as stretchHistogramEqualization,h as stretchMinMax,y as stretchNone,w as stretchPercentClip,k as stretchStandardDeviation,sn as table,at as tan,ct as tanh,en as tasseledCap,Y as threshold,gn as times,ln as transposeBits,gt as weightedOverlay,yt as weightedSum};
