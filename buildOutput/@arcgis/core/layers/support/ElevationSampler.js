/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import"../../core/lang.js";import{m as t}from"../../chunks/handleUtils.js";import{L as e}from"../../chunks/Logger.js";import{m as s}from"../../chunks/unitUtils.js";import n from"../../geometry/Point.js";import{t as o,c as i,g as r}from"../../chunks/aaBoundingRect.js";import{project as a}from"../../geometry/support/webMercatorUtils.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/jsonMap.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../core/Error.js";import"../../chunks/jsonUtils.js";import"../../chunks/MapUtils.js";import"../../core/promiseUtils.js";import"../../chunks/events.js";import"../../chunks/maybe.js";import"../../chunks/persistableUrlUtils.js";import"../../chunks/tslib.es6.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/tracking.js";import"../../chunks/ensureType.js";import"../../chunks/Warning.js";import"../../chunks/get.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../geometry/Geometry.js";import"../../core/JSONSupport.js";import"../../geometry/SpatialReference.js";import"../../chunks/mathUtils.js";import"../../geometry/Extent.js";const c=()=>e.getLogger("esri.layers.support.ElevationSampler");class l{queryElevation(t){return u(t.clone(),this)}on(){return t()}projectIfRequired(t,e){return h(t,e)}}class m extends l{get spatialReference(){return this.extent.spatialReference}constructor(t,e,n){super(),this.tile=t,this.noDataValue=n;const i=t.tile.extent;this.extent=o(i,e.spatialReference),this.extent.zmin=t.zmin,this.extent.zmax=t.zmax,this._aaExtent=i;const r=s(e.spatialReference),a=e.lodAt(t.tile.level).resolution*r;this.demResolution={min:a,max:a}}contains(t){const e=this.projectIfRequired(t,this.spatialReference);return null!=e&&this.containsAt(e.x,e.y)}containsAt(t,e){return r(this._aaExtent,t,e)}elevationAt(t,e){if(!this.containsAt(t,e)){const s=this.extent,n=`${s.xmin}, ${s.ymin}, ${s.xmax}, ${s.ymax}`;return c().warn("#elevationAt()",`Point used to sample elevation (${t}, ${e}) is outside of the sampler extent (${n})`),this.noDataValue}return this.tile.sample(t,e)??this.noDataValue}}class p extends l{get spatialReference(){return this.extent.spatialReference}constructor(t,e,s){let n;super(),"number"==typeof e?(this.noDataValue=e,n=null):(n=e,this.noDataValue=s),this.samplers=n?t.map(t=>new m(t,n,this.noDataValue)):t;const r=this.samplers[0];if(r){this.extent=r.extent.clone();const{min:t,max:e}=r.demResolution;this.demResolution={min:t,max:e};for(let t=1;t<this.samplers.length;t++){const e=this.samplers[t];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max)}}else this.extent=o(i(),n.spatialReference),this.demResolution={min:0,max:0}}elevationAt(t,e){let s,n=!1;for(const o of this.samplers)if(o.containsAt(t,e)&&(n=!0,s=o.elevationAt(t,e),s!==o.noDataValue))return s;return null!=s?s:(n||c().warn("#elevationAt()",`Point used to sample elevation (${t}, ${e}) is outside of the sampler`),this.noDataValue)}}function u(t,e){const s=h(t,e.spatialReference);if(!s)return null;switch(t.type){case"point":!function(t,e,s){t.z=s.elevationAt(e.x,e.y)}(t,s,e);break;case"polyline":!function(t,e,s){j.spatialReference=e.spatialReference;const n=t.hasM&&!t.hasZ;for(let o=0;o<t.paths.length;o++){const i=t.paths[o],r=e.paths[o];for(let t=0;t<i.length;t++){const e=i[t],o=r[t];j.x=o[0],j.y=o[1],n&&(e[3]=e[2]),e[2]=s.elevationAt(j.x,j.y)}}t.hasZ=!0}(t,s,e);break;case"multipoint":!function(t,e,s){j.spatialReference=e.spatialReference;const n=t.hasM&&!t.hasZ;for(let o=0;o<t.points.length;o++){const i=t.points[o],r=e.points[o];j.x=r[0],j.y=r[1],n&&(i[3]=i[2]),i[2]=s.elevationAt(j.x,j.y)}t.hasZ=!0}(t,s,e)}return t}function h(t,e){if(null==t)return null;const s=t.spatialReference;if(s.equals(e))return t;const n=a(t,e);return n||c().error(`Cannot project geometry spatial reference (wkid:${s.wkid}) to elevation sampler spatial reference (wkid:${e.wkid})`),n}const j=new n;export{l as ElevationSamplerBase,p as MultiTileElevationSampler,m as TileElevationSampler,u as updateGeometryElevation};
