/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../Graphic.js";import s from"../PopupTemplate.js";import{ClonableMixin as r}from"../core/Clonable.js";import o from"../core/Collection.js";import i from"../core/Error.js";import{a}from"../chunks/handleUtils.js";import{L as n}from"../chunks/Logger.js";import{d as p}from"../chunks/maybe.js";import{M as l}from"../chunks/MultiOriginJSONSupport.js";import{throwIfAbortError as u,isAbortError as m,throwIfNotAbortError as c}from"../core/promiseUtils.js";import{whenOnce as d}from"../core/reactiveUtils.js";import{property as y}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{g as h}from"../chunks/utils.js";import{r as j}from"../chunks/reader.js";import{subclass as f}from"../core/accessorSupport/decorators/subclass.js";import g from"../geometry/Point.js";import b from"./Layer.js";import{f as k,M as v}from"../chunks/uploadAssetErrors.js";import{APIKeyMixin as I}from"./mixins/APIKeyMixin.js";import{A as w}from"../chunks/ArcGISService.js";import{CustomParametersMixin as L}from"./mixins/CustomParametersMixin.js";import{E as S}from"../chunks/EditBusLayer.js";import{OperationalLayer as F}from"./mixins/OperationalLayer.js";import{PortalLayer as U}from"./mixins/PortalLayer.js";import{ScaleRangeLayer as P}from"./mixins/ScaleRangeLayer.js";import{SceneService as T}from"./mixins/SceneService.js";import{useViewTimeProperty as D}from"./mixins/TemporalLayer.js";import{TemporalSceneLayer as x,c as A}from"./mixins/TemporalSceneLayer.js";import E,{i as O}from"../request.js";import{f as R}from"../chunks/associatedFeatureServiceUtils.js";import{z as C}from"../chunks/capabilities.js";import{e as _,l as V,a as M,p as q,b as N,g as G}from"../chunks/commonProperties.js";import{g as Q,f as B,G as z}from"../chunks/featureLayerUtils.js";import{F as $}from"../chunks/FeatureReduction.js";import H from"./support/FeatureReductionSelection.js";import{d as K}from"../chunks/fieldProperties.js";import W from"./support/FieldsIndex.js";import{fixRendererFields as Z,unpackFieldNames as J}from"./support/fieldUtils.js";import{I as X,a as Y,b as ee,c as te}from"../chunks/I3SLayerDefinitions.js";import{l as se,m as re}from"../chunks/infoFor3D.js";import oe from"./support/LabelClass.js";import{r as ie}from"../chunks/labelingInfo.js";import ae from"./support/LayerFloorInfo.js";import{l as ne}from"../chunks/lazyLayerLoader.js";import{g as pe}from"../chunks/meshSpatialReferenceScaleUtils.js";import{JSONSupport as le}from"../core/JSONSupport.js";import ue from"./support/SceneFilter.js";import{join as me}from"../core/urlUtils.js";import{l as ce}from"../chunks/styleUtils2.js";import{w as de}from"../chunks/typeUtils3.js";import ye from"../rest/support/Query.js";import{l as he,a as je,f as fe}from"../chunks/elevationInfoUtils.js";import{createPopupTemplate as ge}from"../support/popupUtils.js";import{q as be}from"../chunks/I3SUtil.js";import{g as ke,a as ve}from"../chunks/popupUtils.js";import{t as Ie}from"../chunks/opacityUtils.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/get.js";import"../chunks/Lifecycle.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/events.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/jsonUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../chunks/pe.js";import"../chunks/assets.js";import"../chunks/ensureType.js";import"../chunks/MapUtils.js";import"../chunks/writer.js";import"../kernel.js";import"../chunks/persistableUrlUtils.js";import"../chunks/Warning.js";import"../geometry/support/webMercatorUtils.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/coordsUtils.js";import"../chunks/extentUtils.js";import"../chunks/boundsUtils.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../chunks/createFeatureId.js";import"../chunks/typeUtils2.js";import"../symbols/CIMSymbol.js";import"../chunks/enumeration.js";import"../symbols/Symbol.js";import"../Color.js";import"../chunks/colorUtils.js";import"../core/sql.js";import"../chunks/guards.js";import"../chunks/datetime.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../portal/Portal.js";import"../core/Loadable.js";import"../core/Promise.js";import"../chunks/locale.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils3.js";import"../symbols/edges/Edges3D.js";import"../chunks/screenUtils.js";import"../chunks/materialUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/utils4.js";import"../chunks/colors.js";import"../chunks/symbolLayerUtils3D.js";import"../chunks/vec3f64.js";import"../chunks/aaBoundingBox.js";import"../chunks/DoubleArray.js";import"../symbols/IconSymbol3DLayer.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../chunks/lineMarkers.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/Font.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"../chunks/Thumbnail.js";import"../core/Evented.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../chunks/calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../chunks/urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/MarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/support/AttachmentsOrderByInfo.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../popup/support/FieldInfoFormat.js";import"../chunks/date.js";import"../chunks/constants.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../chunks/chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/content/UtilityNetworkAssociationsContent.js";import"../popup/support/UtilityNetworkAssociationType.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../time/TimeExtent.js";import"../chunks/timeUtils.js";import"../chunks/uuid.js";import"../chunks/layerContainerType.js";import"../symbols/support/ElevationInfo.js";import"../symbols/support/FeatureExpressionInfo.js";import"../chunks/unitConversionUtils.js";import"../chunks/lengthUtils.js";import"../tables/AttributeTableTemplate.js";import"../tables/elements/AttributeTableGroupElement.js";import"../tables/elements/AttributeTableAttachmentElement.js";import"../tables/elements/AttributeTableElement.js";import"../tables/elements/AttributeTableFieldElement.js";import"../tables/elements/AttributeTableRelationshipElement.js";import"../chunks/asyncUtils.js";import"../chunks/layerUtils.js";import"./catalog/catalogUtils.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../chunks/portalItemUtils.js";import"../chunks/projectionUtils.js";import"../chunks/projectBuffer.js";import"../chunks/geodesicConstants.js";import"../chunks/projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"../chunks/zscale.js";import"../chunks/originUtils.js";import"../chunks/multiOriginJSONSupportUtils.js";import"../geometry/HeightModelInfo.js";import"../chunks/I3SIndexInfo.js";import"../chunks/multiLayerServiceUtils.js";import"../chunks/jsonContext.js";import"../chunks/resourceUtils2.js";import"../chunks/resourceUtils.js";import"../chunks/saveUtils.js";import"./support/TimeInfo.js";import"../time/TimeInterval.js";import"../chunks/timeZoneUtils.js";import"./support/CodedValueDomain.js";import"./support/Domain.js";import"../chunks/featureQueryAll.js";import"../renderers/SimpleRenderer.js";import"../renderers/Renderer.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"../chunks/colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../renderers/mixins/VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"../chunks/visualVariableUtils.js";import"../chunks/commonProperties2.js";import"../symbols/support/jsonUtils.js";import"../chunks/defaults.js";import"../chunks/defaultsJSON.js";import"../renderers/UniqueValueRenderer.js";import"../chunks/diffUtils.js";import"../chunks/RendererLegendOptions.js";import"../renderers/support/UniqueValue.js";import"../renderers/support/UniqueValueClass.js";import"../renderers/support/UniqueValueGroup.js";import"../renderers/support/UniqueValueInfo.js";import"../chunks/styleUtils.js";import"../rest/support/AttachmentQuery.js";import"../rest/support/NormalizationBinParametersMixin.js";import"../rest/support/RelationshipQuery.js";import"../chunks/DataLayerSource.js";import"./support/Field.js";import"../chunks/domains.js";import"./support/InheritedDomain.js";import"./support/RangeDomain.js";import"../chunks/fieldType.js";import"../chunks/UnknownTimeZone.js";import"../chunks/labelUtils.js";import"../geometry/support/MeshTransform.js";import"../chunks/mat4.js";import"../chunks/common.js";import"../chunks/mat4f64.js";import"../chunks/quat.js";import"../chunks/vec3.js";import"../chunks/vec4.js";import"../chunks/quatf64.js";import"../chunks/axisAngleDegrees.js";import"../chunks/persistable.js";import"../chunks/MD5.js";import"../chunks/resourceExtension.js";import"../chunks/PolygonCollection.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/support/ClassBreakInfo.js";import"../renderers/DictionaryRenderer.js";import"../chunks/LRUCache.js";import"../chunks/MemCache.js";import"../chunks/DictionaryScriptEvaluator.js";import"../chunks/Version.js";import"../chunks/ArcadeExpression.js";import"../chunks/TimeOnly.js";import"../chunks/enum.js";import"../chunks/utils6.js";import"../chunks/defaultCIMValues.js";import"../renderers/DotDensityRenderer.js";import"../renderers/support/AttributeColorInfo.js";import"../renderers/HeatmapRenderer.js";import"../renderers/support/HeatmapColorStop.js";import"../chunks/heatmapUtils.js";import"../chunks/vec4f64.js";import"../renderers/PieChartRenderer.js";import"../chunks/FullTextSearch.js";import"../chunks/spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"../chunks/projectVectorToVector.js";import"../chunks/projectPointToVector.js";import"../chunks/dehydratedPoint.js";import"../chunks/sphere.js";import"../chunks/ray.js";import"../chunks/mat3.js";import"../chunks/mat3f64.js";import"../chunks/vector.js";import"../chunks/vec2f64.js";import"../chunks/featurePopupQueryUtils.js";import"../chunks/I3SBinaryReader.js";import"../chunks/computeTranslationToOriginAndRotation.js";import"../chunks/symbolColorUtils.js";import"../chunks/orientedBoundingBox.js";import"../chunks/spatialReferenceEllipsoidUtils.js";import"../chunks/plane.js";import"../chunks/mathUtils2.js";import"../chunks/Emissions.glsl.js";import"../chunks/glsl.js";import"../chunks/layerViewUtils.js";let we=class extends le{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};async function Le(e){const{BlobReader:t,ZipReader:s,BlobWriter:r}=await import("../chunks/zipjs-wrapper.js"),o=[],i=new s(new t(e));return(await i.getEntries()).forEach(e=>{if(e.directory||/^__MACOS/i.test(e.filename))return;const t=new r;o.push(e.getData(t).then(t=>new File([t],e.filename)))}),Promise.all(o)}e([y({type:String,json:{read:!0,write:{isRequired:!0}}})],we.prototype,"name",void 0),e([y({type:String,json:{read:!0,write:{isRequired:!0}}})],we.prototype,"field",void 0),e([y({type:[Number],json:{read:!0,write:!0}})],we.prototype,"currentRangeExtent",void 0),e([y({type:[Number],json:{read:!0,write:!0}})],we.prototype,"fullRangeExtent",void 0),e([y({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:{isRequired:!0}}})],we.prototype,"type",void 0),we=e([f("esri.layers.support.RangeInfo")],we);const Se=new Set(["3DObject","Point"]),Fe=K();let Ue=class extends(x(S(T(w(F(U(P(l(L(I(r(b)))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new o,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.attributeTableTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._set("renderer",null),this.associatedLayer=p(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const s=this.getField(e)?.domain??null;return this.associatedLayer?Q(this.associatedLayer,e,t,s):s}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get fieldsIndex(){return new W(this.fields)}readNodePages(e,t,s){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:X.fromJSON(e,s)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.effectiveCapabilities)}get effectiveEditingEnabled(){return null!=this.associatedLayer&&B(this.associatedLayer)}get geometryType(){return Te[this.profile]||"mesh"}set renderer(e){Z(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){e=null!=e?e:C;const{query:t,queryRelated:s,editing:{supportsGlobalId:r,supportsRollbackOnFailure:o,supportsUploadWithItemId:i,supportsGeometryUpdate:a,supportsReturnServiceEditsInSourceSpatialReference:n},data:{supportsZ:p,supportsM:l,isVersioned:u,supportsAttachment:m},operations:{supportsEditing:c,supportsAdd:d,supportsUpdate:y,supportsDelete:h,supportsQuery:j,supportsQueryAttachments:f,supportsAsyncConvert3D:g}}=e,b=e.operations.supportsChangeTracking,k=!!this.associatedLayer?.infoFor3D;return{query:t,queryRelated:s,editing:{supportsGlobalId:r,supportsReturnServiceEditsInSourceSpatialReference:n,supportsRollbackOnFailure:o,supportsGeometryUpdate:k&&a,supportsUploadWithItemId:i},data:{supportsAttachment:m,supportsZ:p,supportsM:l,isVersioned:u},operations:{supportsQuery:j,supportsQueryAttachments:f,supportsEditing:c&&b,supportsAdd:k&&d&&b,supportsDelete:k&&h&&b,supportsUpdate:y&&b,supportsAsyncConvert3D:g}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.associatedLayer?.editingEnabled??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get relationships(){return this.associatedLayer?.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e)),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const s=t.store.profile;return null!=s&&Pe[s]?Pe[s]:(n.getLogger(this).error("Unknown or missing profile",{profile:s,layer:this}),"mesh-pyramids")}get useViewTime(){return this.associatedLayer?.useViewTime??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=null!=e?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(u),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await ce(this,{origin:"service"},t),Z(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){null!=this.filter&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){n.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new ye;return"mesh"===this.geometryType?this.capabilities.query.supportsReturnMesh&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(s=>s.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(s=>s.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(s=>s.queryFeatures(e||this.createQuery(),t)).then(e=>{if(e?.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e})}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new i("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new i("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){const s=J(this.fieldsIndex,await ke(this,ve(this)));return be(this.parsedUrl?.path??"",this.attributeStorageInfo??[],e,t,s,this.apiKey,this.customParameters)}async queryCachedFeature(e,s){const r=await this.queryCachedAttributes(e,[s]);if(!r||0===r.length)throw new i("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const o=new t;return o.attributes=r[0],o.layer=this,o.sourceLayer=this,o}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(s=>s.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(s=>s.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(n.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return ge(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new i("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new i("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const{applyEdits:s}=await import("../chunks/editingSupport.js");let r=t;await this.load();const o=this.associatedLayer;if(!o)throw new i(`${this.type}-layer:not-editable`,"Service is not editable");await o.load();const{globalIdField:a}=o,n=!!o.infoFor3D,p=r?.globalIdUsed??!0;if(n&&null==a)throw new i(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(n&&!p)throw new i(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return O(o.url)&&n&&null!=e.deleteFeatures&&null!=a&&(r={...r,globalIdToObjectId:await z(o,e.deleteFeatures,a)}),s(this,o.source,e,r)}async uploadAssets(e,t){if(await this.load(),null==this.associatedLayer)throw new i(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}async convertMesh(e,t){t??={};const s=e=>{throw n.getLogger(this).error(".convertMesh()",e.message),e};await this.load(),this.infoFor3D||s(new i("invalid:layer","SceneLayer has no capability for mesh conversion"));const r=await this.extractAndFilterFiles(e),o=r.reduce((e,t)=>se(this.infoFor3D,t)?e+1:e,0);0===o&&s(new k),o>1&&s(new v);const a=this.spatialReference,p=t.location??new g({x:0,y:0,z:0,spatialReference:a}),l=p.spatialReference.isGeographic?"local":"georeferenced",{default:u}=await import("../geometry/Mesh.js").then(e=>e.a),m=u.createWithExternalSource(p,{type:"client",files:r},{vertexSpace:l,transform:pe(p.spatialReference),unitConversionDisabled:!0}),[c]=await this.uploadAssets([m],{...t,useAssetOrigin:!t.location});return c}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;if(!t)return e;const s=await async function(e){const t=[];for(const s of e)s.name.toLowerCase().endsWith(".zip")?t.push(Le(s)):t.push(Promise.resolve(s));return(await Promise.all(t)).flat()}(e);return s.filter(e=>re(t,e))}validateLayer(e){if(e.layerType&&!Se.has(e.layerType))throw new i("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new i("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new i("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});!function(e,t){let s=!1,r=!1;if(null==e)s=!0,r=!0;else{const o=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":s=!0,r=o;break;case"vertex-reference-frame":s=!0,r=!o;break;default:s=!1}}if(!s)throw new i("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!r)throw new i("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new i("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!!this.attributeStorageInfo?.some(t=>t.name===e.name),s=!!this.associatedLayer?.fields?.some(t=>t&&e.name===t.name),r={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||s,supportsLayerQuery:s};this._fieldUsageInfo[e.name]=r}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPropertyOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const s=this.getField(t.name);s?(!s.domain&&t.domain&&(s.domain=t.domain.clone()),s.editable=t.editable,s.nullable=t.nullable,s.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPropertyOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled","attributeTableTemplate"],t=h(this);for(let s=0;s<e.length;s++){const r=e[s],o=this.originIdOf(r),i=this.associatedLayer.originIdOf(r);o<i&&(2===i||3===i)&&t.setAtOrigin(r,this.associatedLayer[r],i)}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.getAtOrigin("fullExtent","service");null!=this.associatedLayer?.infoFor3D&&e&&O(this.associatedLayer?.url)&&A(this)&&h(this).setAtOrigin("fullExtent",e.clone(),2)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:s,portalItem:r}=await R(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),o=await ne.FeatureLayer();this.associatedLayer=new o({url:t,customParameters:this.customParameters,layerId:s,portalItem:r}),await this.associatedLayer.load()}catch(e){m(e)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){const e=new AbortController;this.addHandles(a(e));try{await d(()=>this.popupEnabled&&null!=this.popupTemplate,e.signal)}catch(e){return void c(e)}const t=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?n.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${t}`):n.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${t}`)}_validateElevationInfo(){const e=this.elevationInfo;"mesh-pyramids"===this.profile&&he(n.getLogger(this),je("Mesh scene layers","relative-to-scene",e)),he(n.getLogger(this),fe("Scene layers",e))}async fetchStatistics(e,t){return await async function({fieldName:e,statisticsInfo:t,errorContext:s,fieldsIndex:r,path:o,customParameters:a,apiKey:n,signal:p}){if(null==t)throw new i(`${s}:no-cached-statistics`,"Cached statistics are not available for this layer");const l=r.get(e);if(null==l)throw new i(`${s}:field-unexisting`,`Field '${e}' does not exist on the layer`);const u=t.find(e=>e.name===l.name);if(null==u)throw new i(`${s}:no-cached-statistics`,"Cached statistics for this attribute are not available");const m=me(o,u.href),{data:c}=await E(m,{query:{f:"json",...a,token:n},responseType:"json",signal:p});return c}({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:this.parsedUrl?.path??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t?.signal})}};e([y({types:{key:"type",base:$,typeMap:{selection:H}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],Ue.prototype,"featureReduction",void 0),e([y({type:[we],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}},clonable:!1})],Ue.prototype,"rangeInfos",void 0),e([y({json:{read:!1}})],Ue.prototype,"associatedLayer",void 0),e([y({type:["show","hide"]})],Ue.prototype,"listMode",void 0),e([y({type:["ArcGISSceneServiceLayer"]})],Ue.prototype,"operationalLayerType",void 0),e([y({json:{read:!1},readOnly:!0})],Ue.prototype,"type",void 0),e([y({...Fe.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],Ue.prototype,"fields",void 0),e([y()],Ue.prototype,"types",null),e([y()],Ue.prototype,"typeIdField",null),e([y()],Ue.prototype,"templates",null),e([y()],Ue.prototype,"formTemplate",null),e([y({readOnly:!0,clonable:!1})],Ue.prototype,"fieldsIndex",null),e([y({type:ae,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],Ue.prototype,"floorInfo",void 0),e([y(Fe.outFields)],Ue.prototype,"outFields",void 0),e([y({type:X,readOnly:!0,json:{read:!1},clonable:!1})],Ue.prototype,"nodePages",void 0),e([j("service","nodePages",["nodePages","pointNodePages"])],Ue.prototype,"readNodePages",null),e([y({type:[Y],readOnly:!0,clonable:!1})],Ue.prototype,"materialDefinitions",void 0),e([y({type:[ee],readOnly:!0,clonable:!1})],Ue.prototype,"textureSetDefinitions",void 0),e([y({type:[te],readOnly:!0,clonable:!1})],Ue.prototype,"geometryDefinitions",void 0),e([y({readOnly:!0})],Ue.prototype,"serviceUpdateTimeStamp",void 0),e([y({readOnly:!0})],Ue.prototype,"attributeStorageInfo",void 0),e([y({readOnly:!0})],Ue.prototype,"statisticsInfo",void 0),e([y({type:o.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],Ue.prototype,"excludeObjectIds",void 0),e([y({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],Ue.prototype,"definitionExpression",void 0),e([y({type:ue,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],Ue.prototype,"filter",void 0),e([y({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],Ue.prototype,"path",void 0),e([y(_)],Ue.prototype,"elevationInfo",null),e([y({readOnly:!0,json:{read:!1}})],Ue.prototype,"effectiveCapabilities",null),e([y({readOnly:!0})],Ue.prototype,"effectiveEditingEnabled",null),e([y({type:String})],Ue.prototype,"geometryType",null),e([y(V)],Ue.prototype,"labelsVisible",void 0),e([y({type:[oe],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:ie},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:ie},write:!0}})],Ue.prototype,"labelingInfo",void 0),e([y(M)],Ue.prototype,"legendEnabled",void 0),e([y({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if("number"==typeof e&&e>=0&&e<=1)return e;const s=t.layerDefinition?.drawingInfo?.transparency;return void 0!==s?Ie(s):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],Ue.prototype,"opacity",void 0),e([y({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],Ue.prototype,"priority",void 0),e([y({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],Ue.prototype,"semantic",void 0),e([y({types:de,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],Ue.prototype,"renderer",null),e([y({json:{read:!1}})],Ue.prototype,"cachedDrawingInfo",void 0),e([j("service","cachedDrawingInfo")],Ue.prototype,"readCachedDrawingInfo",null),e([y({readOnly:!0,json:{read:!1}})],Ue.prototype,"capabilities",null),e([y({type:Boolean,json:{read:!1}})],Ue.prototype,"editingEnabled",null),e([y({readOnly:!0,json:{write:!1,read:!1}})],Ue.prototype,"infoFor3D",null),e([y({readOnly:!0,json:{write:!1,read:!1}})],Ue.prototype,"relationships",null),e([y(q)],Ue.prototype,"popupEnabled",void 0),e([y({type:s,json:{name:"popupInfo",write:!0}})],Ue.prototype,"popupTemplate",void 0),e([y({readOnly:!0,json:{read:!1}})],Ue.prototype,"defaultPopupTemplate",null),e([y(N)],Ue.prototype,"attributeTableTemplate",void 0),e([y({type:String,json:{read:!1}})],Ue.prototype,"objectIdField",void 0),e([j("service","objectIdField",["objectIdField","fields"])],Ue.prototype,"readObjectIdField",null),e([y({type:String,json:{read:!1}})],Ue.prototype,"globalIdField",void 0),e([j("service","globalIdField",["globalIdField","fields"])],Ue.prototype,"readGlobalIdField",null),e([y({readOnly:!0,type:String,json:{read:!1}})],Ue.prototype,"displayField",null),e([y({type:String,json:{read:!1}})],Ue.prototype,"profile",void 0),e([j("service","profile",["store.profile"])],Ue.prototype,"readProfile",null),e([y({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],Ue.prototype,"normalReferenceFrame",void 0),e([y(G)],Ue.prototype,"screenSizePerspectiveEnabled",void 0),e([y({json:{read:!1,origins:{service:{read:!0}}}})],Ue.prototype,"serviceItemId",void 0),e([y(D)],Ue.prototype,"useViewTime",null),Ue=e([f("esri.layers.SceneLayer")],Ue);const Pe={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},Te={"mesh-pyramids":"mesh",points:"point"},De=Ue;export{De as default};
