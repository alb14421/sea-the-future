/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/lang.js";import{L as r}from"../../chunks/Logger.js";import{debounce as s,ignoreAbortErrors as t}from"../../core/promiseUtils.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import{cast as n}from"../../core/accessorSupport/decorators/cast.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{e as a}from"../../chunks/layerContainerType.js";import c from"../../core/Collection.js";import{sync as h}from"../../core/reactiveUtils.js";import{a as m}from"../../chunks/watch.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/handleUtils.js";import"../../core/Error.js";import"../../chunks/events.js";import"../../chunks/maybe.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/metadata.js";import"../../chunks/Lifecycle.js";import"../../chunks/tracking.js";import"../../chunks/Warning.js";import"../../core/Evented.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/jsonUtils.js";const p=new c,l=new WeakMap;function u(e,r){return Number.isFinite(e)&&Number.isFinite(r)?r<=0?e:u(r,e%r):0}let f=0,j=0;function d(){const e=Date.now();let r=!1;for(const s of p){const t=s.deref();t?t.refreshInterval&&e-(l.get(t)??0)+5>=6e4*t.refreshInterval&&(l.set(t,e),t.refresh(e)):r=!0}if(r)for(let e=p.length-1;e>=0;e--)p.at(e).deref()||p.removeAt(e)}function k(e){return null!=e&&"object"==typeof e&&"refreshTimestamp"in e&&"refresh"in e}m(()=>{const e=Date.now();let r=0;for(const s of p){const t=s.deref();t&&(r=u(Math.round(6e4*t.refreshInterval),r),t.refreshInterval?l.get(t)||l.set(t,e):l.delete(t))}if(r!==j){if(j=r,clearInterval(f),0===j)return void(f=0);f=setInterval(d,j)}},h);const g=c=>{const h=c;let m=class extends h{constructor(...e){super(...e),this.refreshInterval=0,this.refreshTimestamp=0,this._debounceHasDataChanged=s(()=>this.hasDataChanged()),this.when().then(()=>{var e;this.destroyed||null!=(e=this)&&"object"==typeof e&&"refreshInterval"in e&&"refresh"in e&&p.push(new WeakRef(this))},()=>{})}destroy(){!function(e){const r=p.find(r=>r.deref()===e);r&&p.remove(r)}(this)}castRefreshInterval(e){return e>=.1?e:e<=0?0:.1}get refreshParameters(){return{_ts:this.refreshTimestamp||null}}refresh(e=Date.now()){t(this._debounceHasDataChanged()).then(r=>{r&&this._set("refreshTimestamp",e),this.emit("refresh",{dataChanged:r})},e=>{r.getLogger(this).error(e),this.emit("refresh",{dataChanged:!1,error:e})})}async hasDataChanged(){return!0}get test(){}};return e([o({type:Number,json:{write:!0,origins:{"web-scene":{write:{enabled:!0,layerContainerTypes:a}}}}})],m.prototype,"refreshInterval",void 0),e([n("refreshInterval")],m.prototype,"castRefreshInterval",null),e([o({readOnly:!0})],m.prototype,"refreshTimestamp",void 0),e([o({readOnly:!0})],m.prototype,"refreshParameters",null),m=e([i("esri.layers.mixins.RefreshableLayer")],m),m};export{g as RefreshableLayer,k as isRefreshableLayer};
