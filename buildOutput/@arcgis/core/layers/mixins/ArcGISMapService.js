/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t,{p as s}from"../../request.js";import{g as r}from"../../chunks/MapUtils.js";import{throwIfAborted as o}from"../../core/promiseUtils.js";import{join as i}from"../../core/urlUtils.js";import{V as p}from"../../chunks/Version.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{r as n}from"../../chunks/reader.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import c from"../../geometry/Extent.js";import m from"../../geometry/SpatialReference.js";import{i as u,p as h}from"../../chunks/commonProperties.js";import{i as y}from"../../chunks/portalItemUtils.js";import"../../config.js";import"../../chunks/object.js";import"../../kernel.js";import"../../core/Error.js";import"../../chunks/persistableUrlUtils.js";import"../../chunks/handleUtils.js";import"../../chunks/events.js";import"../../chunks/maybe.js";import"../../chunks/jsonUtils.js";import"../../chunks/ensureType.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/metadata.js";import"../../chunks/string.js";import"../../chunks/Lifecycle.js";import"../../chunks/tracking.js";import"../../chunks/Warning.js";import"../../geometry/Geometry.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../chunks/writer.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/layerContainerType.js";import"../../symbols/support/ElevationInfo.js";import"../../core/Clonable.js";import"../../symbols/support/FeatureExpressionInfo.js";import"../support/fieldUtils.js";import"../../core/sql.js";import"../../chunks/guards.js";import"../../chunks/datetime.js";import"../../chunks/unitConversionUtils.js";import"../../chunks/lengthUtils.js";import"../../tables/AttributeTableTemplate.js";import"../../tables/elements/AttributeTableGroupElement.js";import"../../tables/elements/AttributeTableAttachmentElement.js";import"../../tables/elements/AttributeTableElement.js";import"../../tables/elements/AttributeTableFieldElement.js";import"../../tables/elements/AttributeTableRelationshipElement.js";import"../../chunks/opacityUtils.js";import"../../chunks/projectionUtils.js";import"../../chunks/SimpleObservable.js";import"../../chunks/vec3f64.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../geometry/Polyline.js";import"../../chunks/projectBuffer.js";import"../../chunks/geodesicConstants.js";import"../../chunks/projectXYZToVector.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";const j=j=>{const d=j;let b=class extends d{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(e,t){const s=t.capabilities&&t.capabilities.split(",").map(e=>e.toLowerCase().trim());if(!s)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const r=this.type,o="tile"!==r&&!!t.supportsDynamicLayers,i=s.includes("query"),a=s.includes("map"),n=!!t.exportTilesAllowed,l=s.includes("tilemap"),c=s.includes("data"),m="tile"!==r&&(!t.tileInfo||o),u="tile"!==r&&(!t.tileInfo||o),h="tile"!==r,y="tile"!==r&&o&&t.currentVersion>=11.1,j=t.cimVersion?p.parse(t.cimVersion):null,d=j?.greaterEqual(1,4)??!1,b=j?.greaterEqual(2,0)??!1;return{operations:{supportsExportMap:a,supportsExportTiles:n,supportsIdentify:i,supportsQuery:c,supportsTileMap:l},exportMap:a?{supportsArcadeExpressionForLabeling:d,supportsCIMSymbols:b,supportsDynamicLayers:o,supportsSublayerOrderBy:y,supportsSublayerDefinitionExpression:u,supportsSublayerVisibility:m,supportsSublayersChanges:h}:null,exportTiles:n?{maxExportTilesCount:+t.maxExportTilesCount}:null}}readVersion(e,t){let s=t.currentVersion;return s||(s=t.hasOwnProperty("capabilities")||t.hasOwnProperty("tables")?10:t.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),s}async fetchRelatedService(e){const t=this.portalItem;if(!t||!y(t))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=t.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},e).then(e=>e.find(e=>"Feature Service"===e.type)??null,()=>null));const s=await this._relatedFeatureServicePromise;return o(e),s?{itemId:s.id,url:s.url}:null}async fetchSublayerInfo(e,r){const{source:o}=e;if(this?.portalItem&&"tile"===this.type&&"map-layer"===o?.type&&y(this.portalItem)&&e.originIdOf("url")<2){const t=await this.fetchRelatedService(r);t&&(e.url=i(t.url,o.mapLayerId.toString()),e.layerItemId=t.itemId)}const{url:p}=e;let a;if("data-layer"===o.type)a=(await t(p,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...r})).data;else if(p&&e.originIdOf("url")>2)try{const e=await this._fetchAllLayersAndTablesFromService(p),t=s(p)?.sublayer??o.mapLayerId;a=e.get(t)}catch{}else{let t=e.id;"map-layer"===o?.type&&(t=o.mapLayerId);try{a=(await this.fetchAllLayersAndTables(r)).get(t)}catch{}}return a}async fetchAllLayersAndTables(e){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,e)}async _fetchAllLayersAndTablesFromService(e,p){await this.load(p),this._allLayersAndTablesMap||=new Map;const a=s(e),n=r(this._allLayersAndTablesMap,a?.url.path,()=>t(i(a?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(e=>{const t=new Map,{layers:s,tables:r}=e.data,o=[...s??[],...r??[]];for(const e of o)t.set(e.id,e);return{result:t}},e=>({error:e}))),l=await n;if(o(p),"result"in l)return l.result;throw l.error}};return e([a({readOnly:!0})],b.prototype,"capabilities",void 0),e([n("service","capabilities",["capabilities","cimVersion","currentVersion","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],b.prototype,"readCapabilities",null),e([a({json:{read:{source:"copyrightText"}}})],b.prototype,"copyright",void 0),e([a({type:c})],b.prototype,"fullExtent",void 0),e([a(u)],b.prototype,"id",void 0),e([a({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],b.prototype,"legendEnabled",void 0),e([a(h)],b.prototype,"popupEnabled",void 0),e([a({type:m})],b.prototype,"spatialReference",void 0),e([a({readOnly:!0})],b.prototype,"version",void 0),e([n("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],b.prototype,"readVersion",null),b=e([l("esri.layers.mixins.ArcGISMapService")],b),b};export{j as ArcGISMapService};
