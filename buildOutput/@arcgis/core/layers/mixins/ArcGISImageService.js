/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../Graphic.js";import s from"../../request.js";import{b as i}from"../../core/Accessor.js";import r from"../../core/Error.js";import{clone as a}from"../../core/lang.js";import{L as n}from"../../chunks/Logger.js";import{watch as o}from"../../core/reactiveUtils.js";import{urlToObject as l}from"../../core/urlUtils.js";import{property as u}from"../../core/accessorSupport/decorators/property.js";import{I as p,h as m,b as c,f as h}from"../../chunks/ensureType.js";import{r as d}from"../../chunks/reader.js";import{subclass as y}from"../../core/accessorSupport/decorators/subclass.js";import{w as f}from"../../chunks/writer.js";import g from"../../geometry/Extent.js";import b from"../../geometry/Polygon.js";import R from"../../geometry/SpatialReference.js";import{Z as j}from"../../chunks/unitUtils.js";import{o as v,u as I}from"../../chunks/commonProperties.js";import S from"../support/DimensionalDefinition.js";import{JSONSupport as w}from"../../core/JSONSupport.js";import F from"../support/RasterFunction.js";import{a as x}from"../../chunks/pixelRangeUtils.js";import{g as D,c as P,d as T,e as C}from"../../chunks/colorRampUtils.js";import{s as _}from"../../chunks/stretchRendererUtils.js";import k from"../../renderers/visualVariables/SizeVariable.js";import V from"../support/MosaicRule.js";import{i as M,n as N,p as O}from"../../chunks/rasterEnums.js";import A from"../support/Field.js";import E from"../support/FieldsIndex.js";import{a as U}from"../../chunks/imageBitmapUtils.js";import q from"../support/MultidimensionalSubset.js";import L from"../support/PixelBlock.js";import{g as z,e as B,f as Q,h as J,i as H,j as G,d as W,k as Z,c as $,a as K,b as X}from"../../chunks/rasterFieldUtils.js";import Y,{R as ee}from"../support/RasterInfo.js";import{k as te,b as se,f as ie,h as re}from"../../chunks/multidimensionalUtils.js";import{R as ae,d as ne,g as oe}from"../../chunks/RasterSymbolizer.js";import{l as le,j as ue}from"../../chunks/vectorFieldUtils.js";import{r as pe,s as me,p as ce,h as he,n as de}from"../../chunks/rasterRendererHelper.js";import{w as ye,r as fe,a as ge}from"../../chunks/rasterTypeUtils.js";import{calculateVolume as be,computeAngles as Re,computePixelSpaceLocations as je,computeHistograms as ve,computeStatisticsHistograms as Ie,measureHeight as Se,measureAreaAndPerimeter as we,measureDistanceAndAngle as Fe,measurePointOrCentroid as xe,measureLengthFromImage as De,measureAreaFromImage as Pe,getImageSpatialReferenceQueryParameter as Te,getSamples as Ce,identify as _e,imageToMap as ke,imageToMapMultiray as Ve,mapToImage as Me,findImages as Ne,getImageUrl as Oe,queryBoundary as Ae,queryGPSInfo as Ee}from"../../rest/imageService.js";import{f as Ue,g as qe,p as Le}from"../../chunks/fetchRasterInfo.js";import ze from"../../geometry/Point.js";import{p as Be,e as Qe,a as Je}from"../../chunks/utils9.js";import{a as He,e as Ge}from"../../chunks/executeForIds.js";import{e as We}from"../../chunks/executeQueryJSON.js";import Ze from"../../rest/support/FeatureSet.js";import $e from"../../rest/support/ImageIdentifyParameters.js";import Ke from"../../rest/support/Query.js";import"../../PopupTemplate.js";import"../../core/Clonable.js";import"../../chunks/maybe.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/MapUtils.js";import"../../chunks/object.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../chunks/events.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/Warning.js";import"../../core/Collection.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/jsonUtils.js";import"../../core/accessorSupport/decorators/cast.js";import"../support/fieldUtils.js";import"../../core/sql.js";import"../../chunks/guards.js";import"../../chunks/datetime.js";import"../../popup/content.js";import"../../popup/content/AttachmentsContent.js";import"../../popup/content/Content.js";import"../../popup/support/AttachmentsOrderByInfo.js";import"../../chunks/jsonMap.js";import"../../popup/content/CustomContent.js";import"../../popup/content/ExpressionContent.js";import"../../popup/ElementExpressionInfo.js";import"../../popup/content/FieldsContent.js";import"../../popup/FieldInfo.js";import"../../chunks/enumeration.js";import"../../popup/support/FieldInfoFormat.js";import"../../chunks/date.js";import"../../chunks/locale.js";import"../../chunks/constants.js";import"../../popup/content/MediaContent.js";import"../../popup/content/BarChartMediaInfo.js";import"../../popup/content/mixins/ChartMediaInfo.js";import"../../popup/content/mixins/MediaInfo.js";import"../../popup/content/support/ChartMediaInfoValue.js";import"../../Color.js";import"../../chunks/colorUtils.js";import"../../chunks/mathUtils.js";import"../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../chunks/chartMediaInfoUtils.js";import"../../popup/content/ColumnChartMediaInfo.js";import"../../popup/content/ImageMediaInfo.js";import"../../popup/content/support/ImageMediaInfoValue.js";import"../../popup/content/LineChartMediaInfo.js";import"../../popup/content/PieChartMediaInfo.js";import"../../popup/content/RelationshipContent.js";import"../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../popup/content/TextContent.js";import"../../popup/content/UtilityNetworkAssociationsContent.js";import"../../popup/support/UtilityNetworkAssociationType.js";import"../../popup/ExpressionInfo.js";import"../../popup/LayerOptions.js";import"../../popup/RelatedRecordsInfo.js";import"../../support/actions/ActionBase.js";import"../../core/Identifiable.js";import"../../support/actions/ActionButton.js";import"../../support/actions/ActionToggle.js";import"../../geometry/support/jsonUtils.js";import"../../geometry/Geometry.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../kernel.js";import"../../chunks/persistableUrlUtils.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Polyline.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/coordsUtils.js";import"../../chunks/typeUtils.js";import"../../chunks/createFeatureId.js";import"../../chunks/typeUtils2.js";import"../../symbols/CIMSymbol.js";import"../../symbols/Symbol.js";import"../../symbols/LabelSymbol3D.js";import"../../symbols/Symbol3D.js";import"../../chunks/collectionUtils.js";import"../../portal/Portal.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"../../portal/PortalGroup.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalUser.js";import"../../portal/PortalFolder.js";import"../../symbols/ExtrudeSymbol3DLayer.js";import"../../symbols/Symbol3DLayer.js";import"../../chunks/utils3.js";import"../../symbols/edges/Edges3D.js";import"../../chunks/screenUtils.js";import"../../chunks/materialUtils.js";import"../../chunks/opacityUtils.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/Symbol3DMaterial.js";import"../../symbols/FillSymbol3DLayer.js";import"../../symbols/patterns/LineStylePattern3D.js";import"../../symbols/patterns/StylePattern3D.js";import"../../chunks/utils4.js";import"../../chunks/colors.js";import"../../chunks/symbolLayerUtils3D.js";import"../../chunks/vec3f64.js";import"../../chunks/aaBoundingBox.js";import"../../chunks/DoubleArray.js";import"../../symbols/IconSymbol3DLayer.js";import"../../symbols/LineSymbol3DLayer.js";import"../../symbols/LineStyleMarker3D.js";import"../../chunks/lineMarkers.js";import"../../symbols/ObjectSymbol3DLayer.js";import"../../symbols/PathSymbol3DLayer.js";import"../../symbols/TextSymbol3DLayer.js";import"../../symbols/Font.js";import"../../symbols/WaterSymbol3DLayer.js";import"../../symbols/support/StyleOrigin.js";import"../../chunks/Thumbnail.js";import"../../chunks/calloutUtils.js";import"../../symbols/callouts/Callout3D.js";import"../../symbols/callouts/LineCallout3D.js";import"../../symbols/support/Symbol3DVerticalOffset.js";import"../../symbols/LineSymbol3D.js";import"../../symbols/MeshSymbol3D.js";import"../../symbols/PictureFillSymbol.js";import"../../symbols/FillSymbol.js";import"../../symbols/SimpleLineSymbol.js";import"../../symbols/LineSymbol.js";import"../../symbols/LineSymbolMarker.js";import"../../chunks/urlUtils.js";import"../../symbols/PictureMarkerSymbol.js";import"../../symbols/MarkerSymbol.js";import"../../symbols/PointSymbol3D.js";import"../../symbols/PolygonSymbol3D.js";import"../../symbols/SimpleFillSymbol.js";import"../../symbols/SimpleMarkerSymbol.js";import"../../symbols/TextSymbol.js";import"../../symbols/WebStyleSymbol.js";import"../../chunks/layerContainerType.js";import"../../symbols/support/ElevationInfo.js";import"../../symbols/support/FeatureExpressionInfo.js";import"../../chunks/unitConversionUtils.js";import"../../chunks/lengthUtils.js";import"../../tables/AttributeTableTemplate.js";import"../../tables/elements/AttributeTableGroupElement.js";import"../../tables/elements/AttributeTableAttachmentElement.js";import"../../tables/elements/AttributeTableElement.js";import"../../tables/elements/AttributeTableFieldElement.js";import"../../tables/elements/AttributeTableRelationshipElement.js";import"../../chunks/colorUtils2.js";import"../../chunks/vec4.js";import"../../chunks/common.js";import"../../chunks/vec4f64.js";import"../../renderers/visualVariables/VisualVariable.js";import"../../renderers/visualVariables/support/SizeStop.js";import"../../chunks/visualVariableUtils.js";import"../../chunks/domains.js";import"../support/CodedValueDomain.js";import"../support/Domain.js";import"../support/InheritedDomain.js";import"../support/RangeDomain.js";import"../../chunks/fieldType.js";import"../../chunks/UnknownTimeZone.js";import"../../chunks/timeZoneUtils.js";import"../support/RasterBandInfo.js";import"../support/RasterSensorInfo.js";import"../../chunks/_commonjsHelpers.js";import"../../chunks/rasterRendererChecks.js";import"../../chunks/datasetUtils.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/Renderer.js";import"../../renderers/support/AuthoringInfo.js";import"../../renderers/support/AuthoringInfoVisualVariable.js";import"../../chunks/colorRamps.js";import"../../rest/support/AlgorithmicColorRamp.js";import"../../rest/support/ColorRamp.js";import"../../rest/support/MultipartColorRamp.js";import"../../renderers/mixins/VisualVariablesMixin.js";import"../../renderers/visualVariables/ColorVariable.js";import"../../renderers/visualVariables/support/ColorStop.js";import"../../renderers/visualVariables/OpacityVariable.js";import"../../renderers/visualVariables/support/OpacityStop.js";import"../../renderers/visualVariables/RotationVariable.js";import"../../renderers/support/ClassBreakInfo.js";import"../../chunks/commonProperties2.js";import"../../symbols/support/jsonUtils.js";import"../../chunks/layerUtils.js";import"../catalog/catalogUtils.js";import"../../chunks/defaults.js";import"../../chunks/defaultsJSON.js";import"../../chunks/RendererLegendOptions.js";import"../../renderers/FlowRenderer.js";import"../../renderers/RasterColormapRenderer.js";import"../../renderers/support/ColormapInfo.js";import"../../renderers/RasterShadedReliefRenderer.js";import"../../renderers/RasterStretchRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../chunks/diffUtils.js";import"../../renderers/support/UniqueValue.js";import"../../renderers/support/UniqueValueClass.js";import"../../renderers/support/UniqueValueGroup.js";import"../../renderers/support/UniqueValueInfo.js";import"../../chunks/styleUtils.js";import"../../renderers/VectorFieldRenderer.js";import"../../geometry/support/normalizeUtils.js";import"../../chunks/normalizeUtilsCommon.js";import"../../chunks/simplify.js";import"../../chunks/utils10.js";import"../../chunks/utils8.js";import"../../chunks/asyncUtils.js";import"../../chunks/jsonUtils2.js";import"../../chunks/parser.js";import"../../chunks/utils5.js";import"../../chunks/mat4.js";import"../../symbols/support/cimSymbolUtils.js";import"../../chunks/utils6.js";import"../../chunks/defaultCIMValues.js";import"../../chunks/gfxUtils.js";import"../../chunks/LRUCache.js";import"../../chunks/MemCache.js";import"../../chunks/generateRendererUtils.js";import"../../rest/support/FindImagesParameters.js";import"../../rest/support/FindImagesResult.js";import"../../rest/support/ImageInspectionInfo.js";import"../../rest/support/CameraInfoMixin.js";import"../../rest/support/ImageAngleParameters.js";import"../../rest/support/ImageAngleResult.js";import"../../rest/support/ImageAreaParameters.js";import"../../rest/support/BaseImageMeasureParameters.js";import"../../chunks/imageMeasureUtils.js";import"../../rest/support/ImageAreaResult.js";import"../../rest/support/BaseImageMeasureResult.js";import"../../rest/support/ImageBoundaryParameters.js";import"../../rest/support/ImageBoundaryResult.js";import"../../rest/support/ImageDistanceParameters.js";import"../../rest/support/ImageDistanceResult.js";import"../../rest/support/ImageGPSInfoParameters.js";import"../../chunks/spatialRelationships.js";import"../../time/TimeExtent.js";import"../../chunks/timeUtils.js";import"../../rest/support/ImageGPSInfoResult.js";import"../../rest/support/CameraInfo.js";import"../../rest/support/ImageGPSInfo.js";import"../../rest/support/ImageHeightParameters.js";import"../../rest/support/ImageHeightResult.js";import"../../rest/support/ImageHistogramParameters.js";import"../../rest/support/ImageIdentifyResult.js";import"../../rest/support/ImagePixelLocationParameters.js";import"../../rest/support/ImagePixelLocationResult.js";import"../../rest/support/ImagePointParameters.js";import"../../rest/support/ImagePointResult.js";import"../../rest/support/ImageSampleParameters.js";import"../../rest/support/ImageSampleResult.js";import"../../rest/support/ImageSample.js";import"../../rest/support/ImageToMapMultirayParameters.js";import"../../rest/support/ImageToMapParameters.js";import"../../rest/support/ImageUrlParameters.js";import"../../rest/support/ImageUrlResult.js";import"../../rest/support/ImageVolumeParameters.js";import"../../rest/support/ImageVolumeResult.js";import"../../rest/support/ImageVolume.js";import"../../rest/support/MapToImageParameters.js";import"../../rest/support/MeasureAreaFromImageResult.js";import"../../rest/support/MeasureFromImageParameters.js";import"../../rest/support/MeasureLengthFromImageResult.js";import"../../chunks/query.js";import"../../chunks/pbfQueryUtils.js";import"../../chunks/pbf.js";import"../../chunks/memoryEstimations.js";import"../../chunks/OptimizedGeometry.js";import"../../chunks/OptimizedFeature.js";import"../../chunks/OptimizedFeatureSet.js";import"../../chunks/queryZScale.js";import"../../chunks/zscale.js";import"../../chunks/DataLayerSource.js";import"../../chunks/FullTextSearch.js";import"../../rest/support/StatisticDefinition.js";const Xe={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},Ye=new Set(["u1","u2","u4","u8","s8","u16","s16"]),et={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},tt=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function st(e){return tt.has(e.type)}function it(e,t){if(!e||!t)return a(e||t);const s=a(e);if(s.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),rt(s.functionDefinition.arguments,t),s.rasterFunctionDefinition=s.functionDefinition.toJSON()}else"none"!==t.functionName?.toLowerCase()&&(nt(s.functionArguments).Raster=t);return s}function rt(e,t){for(const s in e)"raster"===s.toLowerCase()&&("RasterFunctionVariable"===e[s].type?(e[s]=t.rasterFunctionDefinition,e[s].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[s].type&&rt(e[s].arguments,t))}function at(e){const t=a(Xe[e.functionName+"Function"]),s=e.functionArguments;for(const e in s)"raster"===e.toLowerCase()?(t.arguments[e]=at(s[e]),t.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(t.arguments[e].value=mt(s[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=s[e];return t}function nt(e){const t=e?.Raster??e?.raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?nt(t.functionArguments):e}const ot={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function lt(e,t){const s=Ye.has(t)?x(t):null;return s&&e.push([Math.floor(s[0]-1),0,0,0],[Math.ceil(s[1]+1),0,0,0]),e}function ut(e){if(null==e)return;const{fields:t}=e,s=t?.find(e=>e?.name&&"value"===e.name.toLowerCase());return s?.name}function pt(e){return"polygon-3d"===e.symbol?.type?e.symbol.symbolLayers?.find(e=>"fill"===e.type)?.material?.color:e.symbol?.color}function mt(e){const t=[],s=[];return e.forEach(e=>{t.push(e[0]),s.push(C([...e.slice(1),255]))}),{type:"RasterColormap",values:t,colors:s}}let ct=class extends w{constructor(){super(...arguments),this.layer=null,this.requestRawData=!1,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,s){this.layer.version<10.3||(t[s]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,s){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[s]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,s){"lerc"===this.format&&null!=e&&(t[s]=e)}get format(){return this.requestRawData||"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:e}=this;return e.pixelType!==e.serviceRasterInfo.pixelType?e.pixelType:void 0}writeLercVersion(e,t,s){"lerc"===this.format&&this.layer.version>=10.5&&(t[s]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("pixelType"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const s=e.definitionExpression;return t?s&&s!==t.where&&(t=t.clone(),t.where=s):s&&(t=new V({where:s})),t}get rasterFunction(){const e=this.layer;let{rasterFunction:t}=e;const s=e.pixelFilter,i=!e.format||e.format.includes("jpg")||e.format.includes("png");this.requestRawData||(t=this._addResampleRasterFunction(t));const r=e.multidimensionalSubset?.areaOfInterest;return r&&(t=function(e,t){return it(new F({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}}),e)}(t,r)),this.requestRawData||!i||s||"vector-field"===e.renderer?.type||(t=this.combineRendererWithRenderingRule(t)),t}combineRendererWithRenderingRule(e){const t=this.layer,{rasterInfo:s,renderer:i}=t;return e=e||t.rasterFunction,i&&st(i)?it(function(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const s=t.convertToRFT,i=new F;i.functionName="Stretch";const r=ot[_.toJSON(e.stretchType)],a="u8",n=e.customStatistics?.map(e=>[e.min,e.max,e.avg??0,e.stddev??1]),o={StretchType:r,Statistics:n,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(o.Min=e.outputMin),null!=e.outputMax&&(o.Max=e.outputMax),r===ot.standardDeviation?(o.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=a):r===ot.percentClip?(o.MinPercent=e.minPercent,o.MaxPercent=e.maxPercent,i.outputPixelType=a):r===ot.minMax?i.outputPixelType=a:r===ot.sigmoid&&(o.SigmoidStrengthLevel=e.sigmoidStrengthLevel),i.functionArguments=o,i.variableName="Raster",e.colorRamp){const r=e.colorRamp,a=new F;if(s)a.functionArguments={ColorRamp:D(r)};else{const s=T(r,!0);if(s)a.functionArguments={colorRampName:s};else if(!t.convertColorRampToColormap||"algorithmic"!==r.type&&"multipart"!==r.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach(e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm"),a.functionArguments={colorRamp:t}}else a.functionArguments={Colormap:P(r)}}return a.variableName="Raster",a.functionName="Colormap",a.functionArguments.Raster=i,s?new F({rasterFunctionDefinition:at(a)}):a}return s?new F({rasterFunctionDefinition:at(i)}):i}(e,t);case"class-breaks":return function(e,t){const s=[],i=[],r=[],a=[],n=1e-4,{pixelType:o,rasterAttributeTable:l}=t,u=null==l?null:l.features,p=ut(l);if(p&&u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach((t,s)=>{const i=t.symbol?.color;let r;i?.a&&null!=t.minValue&&null!=t.maxValue&&u.forEach(n=>{null!=t.minValue&&null!=t.maxValue&&(r=n.attributes[e.field],(r>=t.minValue&&r<t.maxValue||s===e.classBreakInfos.length-1&&r>=t.minValue)&&a.push([n.attributes[p],i.r,i.g,i.b]))})});const s=o?lt(a,o):a,i=new F;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=s,i.variableName="Raster",t.convertToRFT?new F({rasterFunctionDefinition:at(i)}):i}e.classBreakInfos.forEach((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const o=e.symbol&&e.symbol.color;o?.a?(0===t?s.push(e.minValue,e.maxValue+n):s.push(e.minValue+n,e.maxValue+n),i.push(t),a.push([t,o.r,o.g,o.b])):r.push(e.minValue,e.maxValue)});const m=o?lt(a,o):a,c=new F;c.functionName="Remap",c.functionArguments={InputRanges:s,OutputValues:i,NoDataRanges:r},c.variableName="Raster";const h=new F;return h.functionName="Colormap",h.functionArguments={Colormap:m,Raster:c},t.convertToRFT?new F({rasterFunctionDefinition:at(h)}):h}(e,t);case"unique-value":return function(e,t){const s=[],{pixelType:i,rasterAttributeTable:r}=t,a=null==r?null:r.features,n=ut(r),o=e.defaultSymbol?.color?.toRgb(),l=e.uniqueValueInfos;if(l)if(a){if(n){const t=new Map;l.forEach(e=>{const s=e.value,i=pt(e);null!=s&&i?.a&&t.set(String(s),i.toRgb())});const i=e.field;i&&a.forEach(({attributes:e})=>{const r=String(e[i]),a=e[n],l=t.get(r);l?s.push([a,...l]):o&&s.push([a,...o])})}}else for(let e=0;e<l.length;e++){const t=l[e],i=pt(t),r=+t.value;if(i?.a){if(isNaN(r))return null;s.push([r,i.r,i.g,i.b])}}const u=i?lt(s,i):s,p=new F;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=u,p.variableName="Raster",t.convertToRFT?new F({rasterFunctionDefinition:at(p)}):p}(e,t);case"raster-colormap":return function(e,t){const s=e.extractColormap();if(!s||0===s.length)return null;const{pixelType:i}=t,r=i?lt(s,i):s,a=new F;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=r,t.convertToRFT?new F({rasterFunctionDefinition:at(a)}):a}(e,t);case"vector-field":return function(e,t){const s=new F;s.functionName="VectorFieldRenderer";const{dataType:i,bandNames:r}=t,a="vector-uv"===i;let n,o;if(r&&2===r.length){const e=r.map(e=>e.toLowerCase());n=e.indexOf("magnitude"),o=e.indexOf("direction")}-1!==n&&null!==n||(n=0,o=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find(e=>"Magnitude"===e.field):new k,m={magnitudeBandID:n,directionBandID:o,isUVComponents:a,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:et[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};s.functionArguments=m;const c=at(s);return t.convertToRFT?F.fromJSON({rasterFunctionDefinition:c}):s}(e,t);case"raster-shaded-relief":return function(e,t){const s=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new F;const i=new F;i.functionName="Hillshade";const r="traditional"===e.hillshadeType?0:1,a="none"===e.scalingType?1:3,n={HillshadeType:r,SlopeType:a,ZFactor:e.zFactor};return 0===r&&(n.Azimuth=e.azimuth,n.Altitude=e.altitude),3===a&&(n.PSPower=e.pixelSizePower,n.PSZFactor=e.pixelSizeFactor),i.functionArguments=n,i.variableName="Raster",e.colorRamp&&(i.functionName="ShadedRelief",s?n.ColorRamp=D(e.colorRamp):n.Colormap=P(e.colorRamp)),s?new F({rasterFunctionDefinition:at(i)}):i}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}(i,{rasterAttributeTable:s.attributeTable,pixelType:s.pixelType,dataType:s.dataType,bandNames:s.bandInfos.map(({name:e})=>e),convertColorRampToColormap:t.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:s.bandCount}),e):e}_addResampleRasterFunction(e){if("vector-field"!==this.layer.renderer?.type||"Resample"===e?.functionName)return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,s=this.layer.serviceRasterInfo.pixelSize;let i=new F({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:s}});return i=e?.rasterFunctionDefinition?new F({rasterFunctionDefinition:at(i)}):i,it(i,e)}};e([u()],ct.prototype,"layer",void 0),e([u()],ct.prototype,"requestRawData",void 0),e([u({json:{write:!0}})],ct.prototype,"adjustAspectRatio",null),e([f("adjustAspectRatio")],ct.prototype,"writeAdjustAspectRatio",null),e([u({json:{write:!0}})],ct.prototype,"bandIds",null),e([u({json:{write:!0}})],ct.prototype,"compression",void 0),e([u({json:{write:!0}})],ct.prototype,"compressionQuality",null),e([f("compressionQuality")],ct.prototype,"writeCompressionQuality",null),e([u({json:{write:!0}})],ct.prototype,"compressionTolerance",null),e([f("compressionTolerance")],ct.prototype,"writeCompressionTolerance",null),e([u({json:{write:!0}})],ct.prototype,"format",null),e([u({type:String,json:{read:{reader:M.read},write:{writer:M.write}}})],ct.prototype,"interpolation",null),e([u({json:{write:!0}})],ct.prototype,"noData",null),e([u({type:String,json:{read:{reader:N.read},write:{writer:N.write}}})],ct.prototype,"noDataInterpretation",null),e([u({type:O.apiValues,json:{read:O.read,write:O.write}})],ct.prototype,"pixelType",null),e([u({json:{write:!0}})],ct.prototype,"lercVersion",void 0),e([f("lercVersion")],ct.prototype,"writeLercVersion",null),e([u({type:Number})],ct.prototype,"version",null),e([u({json:{write:!0}})],ct.prototype,"mosaicRule",null),e([u({json:{write:!0,name:"renderingRule"}})],ct.prototype,"rasterFunction",null),ct=e([y("esri.layers.support.ExportImageServiceParameters")],ct);const ht=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),dt=m(h,{min:0,max:255}),yt=m=>{const h=m;let w=class extends h{constructor(){super(...arguments),this._functionRasterInfos={},this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new ct({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(e=>"number"==typeof e))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,s){null!=e&&"lerc"!==this.format&&(t[s]=e)}writeCompressionTolerance(e,t,s){"lerc"===this.format&&null!=e&&(t[s]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?V.fromJSON(t):null}get fieldsIndex(){return this.fields?new E(this.fields):null}set format(e){e&&ht.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=V.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const s=e||t.mosaicRule;return s?V.fromJSON(s):this._isMosaicRuleSupported(t)?V.fromJSON(t):null}writeMosaicRule(e,t,s){const{mosaicRule:i}=this;this._isValidCustomizedMosaicRule(i)&&(t[s]=i.toJSON())}writeNoData(e,t,s){null!=e&&"number"==typeof e&&(t[s]=dt(e))}readObjectIdField(e,t){if(!e){const s=t.fields.find(e=>"esriFieldTypeOID"===e.type||"oid"===e.type);e=s?.name}return e}get parsedUrl(){return l(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const s=t?.find(({name:t})=>t===e);return s?.renderer.clone()}return this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,s){const i=t?.layerDefinition?.drawingInfo?.renderer,r=ge(i,s);return null==r?null:("vector-field"===r.type&&t.symbolTileSize&&!i.symbolTileSize&&(r.symbolTileSize=t.symbolTileSize),st(r)||n.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),r)}writeRenderer(e,t,s){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.fields?.map(e=>e.clone())??[];e.push(z()),"mosaic-dataset"===this.sourceType&&this.fields?.length&&e.push(B()),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some(({name:e})=>"none"===e.toLowerCase())&&e.push(Q()),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(({name:e})=>"none"!==e.toLowerCase()).forEach(({name:t})=>e.push(J(t)));const{rasterInfo:t}=this;if(this._isVectorDataSet()){const s=t?.multidimensionalInfo?.variables[0].unit?.trim(),i=H(s),r=G();e.push(i,r)}if(t?.multidimensionalInfo&&"raster-dataset"===this.sourceType){const s=W(t.multidimensionalInfo);e.push(...s)}const s=t?.attributeTable;if(null!=s){const t=Z(s);e.push(...t)}return e}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=F.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const s=t.rasterFunctionInfos;return t.renderingRule||s?.length&&"None"!==s[0].name?this._isRFTJson(t.renderingRule)?F.fromJSON({rasterFunctionDefinition:t.renderingRule}):F.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const s=e||t.extent.spatialReference;return s?R.fromJSON(s):null}writePixelType(e,t,s){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[s]=O.toJSON(e))}readVersion(e,t){let s=t.currentVersion;return s||(s=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),s}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let s=e,{renderer:i,symbolizer:r,pixelFilter:a}=this;const{isRawData:n}=e;if(n&&"lerc"!==this.format&&(i??=pe(this.rasterInfo,{bandIds:this.bandIds,variableName:this.rasterFunction?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}),r||(this.symbolizer=new ae({rendererJSON:i.toJSON(),rasterInfo:this.rasterInfo}),r=this.symbolizer)),(n||!this._isPicture())&&i&&r&&!a){await this._updateSymbolizer(r,i);const{bandIds:a}=this;s=await this._symbolize({pixelData:e,bandIds:a,symbolizer:r},t)}return s}async highlightPixels(e,t){const s=e.highlightOptions.toJSON(),{bandId:i}=s;if(null==i)s.bandId=0;else{const e=this.bandIds?.length?this.bandIds.indexOf(i):i;if(e<0||e>2)return;s.bandId=e}const r=this._rasterJobHandler;r?await r.highlightPixels({...e,highlightOptions:s},t):le(e.pixelBlock,e.renderedPixelBlock,s)}destroy(){this._shutdownJobHandler()}async calculateVolume(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsCalculateVolume)throw new r("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=a(e),this.mosaicRule&&null==e.mosaicRule&&(e.mosaicRule=this.mosaicRule),be(this.url,e,this._getRequestOptions(t))}async computeAngles(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new r("imagery-layer:compute-angles","this operation is not supported on the input image service");return Re(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new r("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return je(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new r("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=a(e),this._applyMosaicAndRenderingRules(e),ve(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new r("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=a(e),this._applyMosaicAndRenderingRules(e),Ie(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const s=await this._fetchCapabilities(t?.signal);if(!("base-and-top"===e.operationType?s.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?s.mensuration.supportsHeightFromBaseAndTopShadow:s.mensuration.supportsHeightFromTopAndTopShadow))throw new r("imagery-layer:measure-height","this operation is not supported on the input image service");return e=a(e),this._applyMosaicRule(e),Se(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const s=await this._fetchCapabilities(t?.signal);if(!s.mensuration.supportsAreaAndPerimeter||e.is3D&&!s.mensuration.supports3D)throw new r("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=a(e),this._applyMosaicRule(e),we(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const s=await this._fetchCapabilities(t?.signal);if(!s.mensuration.supportsDistanceAndAngle||e.is3D&&!s.mensuration.supports3D)throw new r("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=a(e),this._applyMosaicRule(e),Fe(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const s=await this._fetchCapabilities(t?.signal);if(!s.mensuration.supportsPointOrCentroid||e.is3D&&!s.mensuration.supports3D)throw new r("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=a(e),this._applyMosaicRule(e),xe(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new r("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new r("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return De(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new r("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new r("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return Pe(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const s=this.getField(e);return s?s.domain:null}fetchImage(e,t,s,a={}){if(i(n.getLogger(this),"`ImageryLayer.fetchImage` is deprecated in favor of 'ImageryLayer.fetchPixels'.",{replacement:"ImageryLayer.fetchPixels",version:"4.33",warnOnce:!0}),null==e||null==t||null==s)throw new r("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");return this.internalFetchImage(e,t,s,a)}async internalFetchImage(e,t,s,i={}){await this._updateCurrentRasterInfo();const{exportImageServiceParameters:r}=this;let a=!1;i.requestRawData&&(await this._initJobHandler(),await this._updateCurrentRasterInfo(),r.requestRawData||"lerc"===this.format||(a=!0,r.requestRawData=!0));const n=this.getExportImageServiceParameters(e,t,s,i.timeExtent);if(a&&(r.requestRawData=!1),null==n){if(i.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=s,i.returnImageBitmap?{imageBitmap:await U(e,`${x(this.parsedUrl)}/exportImage`,i.signal)}:{imageOrCanvasElement:e}}const{bandIds:r,rasterInfo:a}=this,n=(r?.length||a.bandCount)??0,o=t*s,l=a.pixelType,u=[];for(let e=0;e<n;e++)u.push(L.createEmptyBand(l,o));return{pixelData:{pixelBlock:new L({width:t,height:s,pixels:u,mask:new Uint8Array(o),pixelType:l}),extent:e}}}const o=!!i.requestAsImageElement&&!this.pixelFilter,l=o&&!!i.returnImageBitmap,u={imageServiceParameters:n,imageProps:{extent:e,width:t,height:s,format:this.format},requestAsImageElement:o,returnImageBitmap:l,signal:i.signal};return this._requestArrayBuffer(u)}async fetchPixels(e,t,s,i={}){await this._initJobHandler(),i.applyRendering&&this._updateCurrentRasterInfo();const r=i.applyRendering?void 0:new ct({layer:this,requestRawData:!0,interpolation:i.interpolation??"nearest",bandIds:i.bandIds??[]}),a=this.getExportImageServiceParameters(e,t,s,i.timeExtent,r);if(null==a)return{extent:e,pixelBlock:null};delete a.pixelType,delete a.bandIds,delete a.compressionQuality;const n={imageServiceParameters:a,imageProps:{extent:e,width:t,height:s,format:this.format},requestAsImageElement:!1,returnImageBitmap:!1,signal:i.signal},{pixelData:o}=await this._requestArrayBuffer(n);return o??{extent:e,pixelBlock:null}}fetchKeyProperties(e){return s(x(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(e=>e.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new r("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):s(x(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(e=>Ze.fromJSON(e.data))}getCatalogItemRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return async function(e,t,i){const r=Be(e),a=Qe({...r?.query,f:"json"}),n=Je(a,i),o=`${r?.path}/${t}/info`,l=s(`${o}`,n),u=s(`${o}/keyProperties`,n),p=await Promise.allSettled([l,u]),m="fulfilled"===p[0].status?p[0].value.data:null,c="fulfilled"===p[1].status?p[1].value.data:null;let h=null;m.statistics?.length&&(h=m.statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})));const d=g.fromJSON(m.extent),y=Math.ceil(d.width/m.pixelSizeX-.1),f=Math.ceil(d.height/m.pixelSizeY-.1),b=d.spatialReference,R=new ze({x:m.pixelSizeX,y:m.pixelSizeY,spatialReference:b}),j=m.histograms?.length?m.histograms:null,v=new ee({origin:m.origin,blockWidth:m.blockWidth,blockHeight:m.blockHeight,firstPyramidLevel:m.firstPyramidLevel,maximumPyramidLevel:m.maxPyramidLevel});return new Y({width:y,height:f,bandCount:m.bandCount,extent:d,spatialReference:b,pixelSize:R,pixelType:m.pixelType.toLowerCase(),statistics:h,histograms:j,keyProperties:c,storageInfo:v})}(x(this.parsedUrl),e,i)}async getCatalogItemICSInfo(e,t){const{data:i}=await s(x(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),r=i?.ics;if(!r)return;let a=null;try{a=(await s(x(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!a?.spatialReference)return{ics:r,icsToPixelTransform:null,icsExtent:null,northDirection:null};const n=this.version>=10.7?s(x(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>({})):{},o=a.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[a]}),inSR:j(o),outSR:"0:"+e},u=s(x(this.parsedUrl)+"/project",{query:this._getQueryParams(l),...t}).then(e=>e.data).catch(()=>({})),p=(a.xmin+a.xmax)/2,m=(a.ymax-a.ymin)/6,c=a.ymin+m,h=[];for(let e=0;e<5;e++)h.push({x:p,y:c+m*e});const d={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:h}),inSR:j(o),outSR:"0:"+e},y=s(x(this.parsedUrl)+"/project",{query:this._getQueryParams(d),...t}).then(e=>e.data).catch(()=>({})),f=await Promise.all([n,u,y]);let b=f[0].ipxf;if(null==b){const e=r.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(b={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const v=g.fromJSON(f[1]?.geometries?.[0]);v&&(v.spatialReference=new R({wkid:0,imageCoordinateSystem:r}));const I=f[2].geometries?f[2].geometries.filter(e=>null!=e?.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y):[],S=I.length;if(S<3)return{ics:r,icsToPixelTransform:b,icsExtent:v,northDirection:null};let w=0,F=0,D=0,P=0;for(let e=0;e<S;e++)w+=I[e].x,F+=I[e].y,D+=I[e].x*I[e].x,P+=I[e].x*I[e].y;const T=(S*P-w*F)/(S*D-w*w);let C=0;const _=I[4].x>I[0].x,k=I[4].y>I[0].y;return T===1/0?C=k?90:270:0===T?C=_?0:180:T>0?C=_?180*Math.atan(T)/Math.PI:180*Math.atan(T)/Math.PI+180:T<0&&(C=k?180+180*Math.atan(T)/Math.PI:360+180*Math.atan(T)/Math.PI),{ics:r,icsToPixelTransform:b,icsExtent:v,northDirection:C}}async generateRasterInfo(e,t){e=c(F,e);const s={...t,query:this._getQueryParams()};if(!e||"none"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??Ue(x(this.parsedUrl),this.sourceJSON,s);const i=function(e){const t=JSON.stringify(e),s=t.includes('"rasterFunctionDefinition":{'),i=s?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),r=i?.map(e=>s?e.slice(8,-18):e.slice(18,-1));return r?r.join("/"):null}(e);if(!i)throw new r("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[i])return this._functionRasterInfos[i];const a=qe(x(this.parsedUrl),e,s);this._functionRasterInfos[i]=a;try{return await a}catch(e){throw this._functionRasterInfos[i]=null,e}}getExportImageServiceParameters(e,t,s,i,r){e=e.clone().shiftCentralMeridian();const a=Te(e.spatialReference,x(this.parsedUrl));r??=this.exportImageServiceParameters;const n=r.toJSON(),{bandIds:o,noData:l}=n;let{renderingRule:u}=n;const p=this.rasterFunction?.rasterFunctionDefinition,m=this.renderer?.type,c=!m||"raster-stretch"===m||"raster-colormap"===m||"unique-value"===m||"class-breaks"===m||"raster-shaded-relief"===m;if(o?.length&&this._hasRasterFunction(this.rasterFunction)&&!p&&c){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;n.bandIds=void 0}else n.bandIds=o?.join(",");Array.isArray(l)&&l.length>0&&(n.noData=l.join(","));const h=this._processMultidimensionalIntersection(null,i,r.mosaicRule);if(h.isOutSide)return null;n.mosaicRule=null!=h.mosaicRule?JSON.stringify(h.mosaicRule):null,i=h.timeExtent,n.renderingRule=this._getRenderingRuleString(F.fromJSON(u));const d={};if(null!=i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?d.time=""+e:null==e&&null==t||(d.time=`${e??"null"},${t??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+s,...n,...d}}async getSamples(e,t){const s=await this._fetchCapabilities(t?.signal);if(!s?.operations.supportsGetSamples)throw new r("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=a(e);const{raster:i}=this;return i&&null==e.raster&&(e.raster=i),Ce(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new r("imagery-layer:identify","identify operation is not supported on the input image service");e=a(e),this.version<10.91&&"extent"===e.geometry?.type&&(e.geometry=b.fromExtent(e.geometry));const s=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(s.isOutSide)throw new r("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=s.timeExtent,e.mosaicRule=s.mosaicRule;const{raster:i,rasterFunction:n}=this;return n&&null==e.rasterFunction&&(e.rasterFunction=n),i&&null==e.raster&&(e.raster=i),_e(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMap)throw new r("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return ke(x(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMapMultiray)throw new r("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return Ve(x(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMapToImage)throw new r("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return Me(x(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsFindImages)throw new r("imagery-layer:find-images","findImages operation is not supported on the input image service");return Ne(x(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsGetImageUrl)throw new r("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return Oe(x(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new Ke({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryBoundary)throw new r("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},Ae(x(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),We(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),He(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryGPSInfo)throw new r("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},Ee(x(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Ge(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new r("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:s,returnDomainValues:i,returnTopmostRaster:a,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const p=$.servicePixelValue.toLowerCase(),m=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(o=e.outFields.some(e=>!e.toLowerCase().startsWith(p)),this.version>=10.4)){const t=e.outFields.filter(e=>e.toLowerCase().startsWith(p)&&e.length>p.length).map(e=>{const t=e.slice(p.length+1);return[this._updateRenderingRulesFunctionName(t,m),t]});l=t.map(e=>new F({functionName:e[0]})),u=t.map(e=>e[1]);const{rasterFunction:s}=this;0===l.length?s?.functionName?(l.push(s),u.push(s.functionName)):l=null:s?.functionName&&!l.some(e=>e.functionName===s.functionName)&&(l.push(s),u.push(s.functionName))}const c=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:h}=this;let d=e.timeExtent||this.timeExtent;if(h){const{isOutside:t,intersection:s}=te(h,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(t)throw new r("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=s?.timeExtent&&(d=s.timeExtent)}const y=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,d);let f=e.geometry;this.version<10.91&&"extent"===f?.type&&(f=b.fromExtent(f));const g=this._getQueryParams({geometry:f,timeExtent:d,mosaicRule:y,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:l,pixelSize:s,returnCatalogItems:o,returnGeometry:c,raster:this.raster,maxItemCount:a?1:null});delete g.f;const R=new $e(g);try{await this._generateRasterInfo(this.rasterFunction);const s=await _e(this.url,R,{signal:t?.signal,query:{...this.customParameters}}),r=e.outFields,a=null!=s.value&&s.value.toLowerCase().includes("nodata"),l=o&&!c&&s?.catalogItems?.features.length&&(n||!a),p=this.multidimensionalInfo&&"raster-dataset"===this.sourceType?se({rasterInfo:this.rasterInfo,multidimensionalDefinition:y?.multidimensionalDefinition,timeExtent:d,multidimensionalSubset:this.multidimensionalSubset}):null;if(!l)return this._processVisibleRastersResponse(s,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:r,effectiveMultidimensionalDefinition:p});const m=this.objectIdField||"ObjectId",h=s.catalogItems?.features??[],f=h.map(e=>e.attributes?.[m]),g=new Ke({objectIds:f,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[m]}),b=await this.queryRasters(g);return b?.features?.length&&b.features.forEach(t=>{h.forEach(s=>{s.attributes[m]===t.attributes[m]&&t.geometry&&(s.geometry=t.geometry.clone(),null!=e.outSpatialReference&&(s.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(s,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:r,effectiveMultidimensionalDefinition:p})}catch{throw new r("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const i=s(x(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>e.data?.statistics),r=s(x(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>e.data?.histograms),a=await Promise.all([i,r]);return a[0]&&a[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return ie(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,s=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):Ue(x(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),Le(e,t),e)),i=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,r=this._getRasterFunctionInfos();return Promise.all([s,i,r]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),n.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([o(()=>this.rasterFunction,e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then(e=>{e&&(this.rasterInfo=e)})})]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)})}_combineMosaicRuleWithTimeExtent(e,t){const s=this.timeInfo,{multidimensionalInfo:i}=this.serviceRasterInfo;if(null==e||null==i||null==t||null==s?.startField)return e;const{startField:r}=s,a=i.variables.some(e=>e.dimensions.some(e=>e.name===r))?r:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(e=>e.dimensionName!==a),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const n=e.multidimensionalDefinition.filter(e=>e.dimensionName===a),o=null!=t.start?t.start.getTime():null,l=null!=t.end?t.end.getTime():null,u=null==o||null==l||o===l,p=u?[o||l]:[[o,l]],m=this.version>=10.8;if(n.length)n.forEach(e=>{e.dimensionName===a&&(m?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=u,e.values=p))});else if(!m){const t=e.multidimensionalDefinition.filter(e=>null!=e.variableName&&null==e.dimensionName);t.length?t.forEach(e=>{e.dimensionName=a,e.isSlice=u,e.values=p}):e.multidimensionalDefinition.push(new S({variableName:"",dimensionName:a,isSlice:u,values:p}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(e=>!(!e.variableName&&!e.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new r("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?c(Ke,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:s}=this;return"unique-value"===e.type&&this._hasRasterFunction(s)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&me(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:i,ssl:r}=await s(x(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=i,this.sourceJSON=t,r&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly")>-1)throw new r("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),s=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||s}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:s}=e,i="resample"===t?.toLowerCase(),r=s?.ResampleType||s?.resampleType;return i&&(7===r||10===r)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:s}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){const t=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,i=ce({variableName:t,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&s.bandCount>=3){const e=i?.bandIds??he(s);!e||3===s.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=i?.renderer??pe(s,{bandIds:this.bandIds,variableName:this.rasterFunction?null:t}));const r=de(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=r,this.symbolizer.rasterInfo=s):this.symbolizer=new ae({rendererJSON:r,rasterInfo:s}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=e?.renderingRule&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:s}=this;return{raster:t,viewId:s,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,s){return this._rasterJobHandler?this._rasterJobHandler.decode({data:e,options:t}):ne(e,t,s)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){if(1===t.length&&"none"===t[0].name.toLowerCase())return t;const i=await s(x(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e});return i.data?.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:i,returnImageBitmap:a,signal:n}=e;if(i&&this._canRequestImageElement(t.format)){const i=`${x(this.parsedUrl)}/exportImage`,{data:r}=await s(i,{responseType:a?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:n});return r instanceof Blob?{imageBitmap:await U(r,i,n),params:t}:{imageOrCanvasElement:r,params:t}}const o=this._initJobHandler(),l=s(x(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:n}),u=(await Promise.all([l,o]))[0].data,p=t.format||"jpgpng";let m=p;if("bsq"!==m&&"bip"!==m&&(m=oe(u)),!m)throw new r("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(u)));const c={signal:n},h="gif"===p||"bmp"===p||p.includes("png")&&("png"===m||"jpg"===m)?ne(u,{useCanvas:!0,...t},c):this._decodePixelBlock(u,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:p},c);return{pixelData:{pixelBlock:await h,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=re(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){this.mosaicRule=this.mosaicRule||new V;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&t.forEach(e=>e.variableName=""),t=t.filter(({variableName:e,dimensionName:t})=>e&&"*"!==e||t),!e?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,s){s=s||{};const i=e.value,{templateRRFunctionNames:r,showNoDataRecords:a,returnDomainValues:n,templateFields:o}=s,l=e.processedValues;let u=e.catalogItems?.features,p=e.properties?.Values?.map(e=>e.replaceAll(/ /gi,", "))||[];const m=this.objectIdField||"ObjectId",c="string"==typeof i&&i.toLowerCase().includes("nodata"),h=[];if(i&&!u&&(!c||a)){const e={};e[m]=0,p=[i],u=[new t({geometry:this.fullExtent,attributes:e})],this.multidimensionalInfo&&"raster-dataset"===this.sourceType&&K(this.rasterFields,e,s.effectiveMultidimensionalDefinition)}if(!u)return[];this._updateResponseFieldNames(u,o),c&&!a&&(u=[]);const{itemPixelValue:d,servicePixelValue:y}=$,f=this.rasterFields.some(e=>e.name===d);for(let e=0;e<u.length;e++){const t=u[e];if(null!=i){const s=p[e],n=this.rasterFunction&&l&&l.length>0&&r&&r.length>0&&r.includes(this.rasterFunction.functionName)?l[r.indexOf(this.rasterFunction.functionName)]:i;if("nodata"===s.toLowerCase()&&!a)continue;f&&(t.attributes[d]=s),t.attributes[y]=n,this._updateFeatureWithMagDirValues(t,s);const o=this.fields&&this.fields.length>0;let u=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?o?s:i:n;this.rasterFunction||(u=o?s:i),this._updateFeatureWithRasterAttributeTableValues(t,u)}if(t.sourceLayer=t.layer=this,n&&this._updateFeatureWithDomainValues(t),r&&l&&r.length===l.length)for(let e=0;e<r.length;e++){const s=`${$.servicePixelValue}.${r[e]}`;t.attributes[s]=l[e]}h.push(u[e])}return h}_processMultidimensionalIntersection(e,t,s){const{multidimensionalSubset:i}=this;if(!i)return{isOutSide:!1,timeExtent:t,mosaicRule:s=this._combineMosaicRuleWithTimeExtent(s,t)};if(i){const{isOutside:s,intersection:r}=te(i,{geometry:e,timeExtent:t});if(s)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=r?.timeExtent&&(t=r.timeExtent)}if(s=this._combineMosaicRuleWithTimeExtent(s,t),s?.multidimensionalDefinition){const{isOutside:e}=te(i,{multidimensionalDefinition:s.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:s}}_updateFeatureWithRasterAttributeTableValues(e,t){const s=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==s)return;const{features:i,fields:r}=s,a=r.map(e=>e.name).find(e=>"value"===e.toLowerCase());if(!a)return;const n=i.filter(e=>e.attributes[a]===(null!=t?parseInt(t,10):null));n&&n[0]&&r.forEach(t=>{const s=X+t.name;e.attributes[s]=n[0].attributes[t.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const s=t.split(/,\s*/).map(e=>parseFloat(e)),i=s.map(e=>[e]),r=s.map(e=>({minValue:e,maxValue:e,noDataValue:null})),a=new L({height:1,width:1,pixelType:"f32",pixels:i,statistics:r});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:a,extent:new g(0,0,0,0,this.spatialReference)});const n="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[a.pixels[0][0],a.pixels[1][0]]:ue([a.pixels[0][0],a.pixels[1][0]]);e.attributes[$.magnitude]=n[0],e.attributes[$.direction]=n[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(e=>e.domain&&"coded-value"===e.domain.type);null!=t&&t.forEach(t=>{const s=e.attributes[t.name];if(null!=s){const i=t.domain.codedValues.find(e=>e.code===s);i&&(e.attributes[t.name]=i.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const s=this.fieldsIndex;null!=s&&e.forEach(e=>{if(e?.attributes)for(const i of t){const t=s.get(i)?.name;t&&t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=e?.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const s=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(s)?t.get(s):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:s,rasterFunction:i}=this;i&&null==e.rasterFunction&&(e.rasterFunction=i),s&&null==e.mosaicRule&&(e.mosaicRule=s),t&&null==e.raster&&(e.raster=t)}async _updateCurrentRasterInfo(e){if(this.renderer||this.symbolizer){const t=await this._generateRasterInfo(this.rasterFunction,{signal:e});t&&(this.rasterInfo=t)}}_applyMosaicRule(e){const{raster:t,mosaicRule:s}=this;s&&null==e.mosaicRule&&(e.mosaicRule=s),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(e=>e.trim()):["image","catalog"],{currentVersion:s,maxRecordCount:i}=e,r=t.includes("image"),a="esriImageServiceDataTypeElevation"===e.serviceDataType,n=!(!e.spatialReference&&!e.extent?.spatialReference),o=t.includes("edit"),l=t.includes("mensuration")&&n,u=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map(e=>e.trim()),p=l&&u.includes("basic"),m=this._isMosaicDataset(e)&&t.includes("catalog"),c=t.includes("download"),h=s>=10.7&&a||s>=11.4&&(a||l&&u.includes("3d")),d=m&&e.fields&&e.fields.length>0,y=d&&e.supportsAdvancedQueries?e.advancedQueryCapabilities:void 0;return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:r,supportsExportImage:r,supportsIdentify:r,supportsImageToMap:s>=11.2&&m,supportsImageToMapMultiray:s>=11.2&&m,supportsMapToImage:s>=11.2&&m,supportsFindImages:s>=11.2&&m,supportsGetImageUrl:s>=11.3&&c,supportsMeasure:l,supportsMeasureFromImage:s>=11.2,supportsDownload:c,supportsQuery:d,supportsGetSamples:s>=10.2&&r,supportsProject:s>=10.3&&r,supportsComputeStatisticsHistograms:s>=10.4&&r,supportsQueryBoundary:s>=10.6&&r,supportsCalculateVolume:h,supportsComputePixelLocation:s>=10.7&&m,supportsComputeAngles:s>=10.91,supportsQueryGPSInfo:s>=11.2&&m,supportsAdd:o,supportsDelete:o,supportsEditing:o,supportsUpdate:o,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:i,maxRecordCountFactor:void 0,maxUniqueIDCount:void 0,supportsStatistics:!!y?.supportsStatistics,supportsOrderBy:!!y?.supportsOrderBy,supportsDistinct:!!y?.supportsDistinct,supportsPagination:!!y?.supportsPagination,supportsPaginationOnAggregatedQueries:!!y?.supportsPaginationOnAggregatedQueries,supportsStandardizedQueriesOnly:!!y?.useStandardizedQueries,supportsPercentileStatistics:!!y?.supportsPercentileStatistics,supportsCentroid:!!y?.supportsReturningGeometryCentroid,supportsCurrentUser:!1,supportsDistance:!!y?.supportsQueryWithDistance,supportsExtent:!!y?.supportsReturningQueryExtent,supportsGeometryProperties:!!y?.supportsReturningGeometryProperties,supportsHavingClause:!!y?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:y?.supportsSqlExpression??!!y,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!y?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:p,supportsAreaAndPerimeter:p,supportsPointOrCentroid:p,supportsHeightFromBaseAndTop:l&&u.includes("base-top height"),supportsHeightFromBaseAndTopShadow:l&&u.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:l&&u.includes("top-top shadow height"),supports3D:l&&u.includes("3d")}}}};function x(e){return e?.path??""}return e([u({clonable:!1})],w.prototype,"_functionRasterInfos",void 0),e([u({readOnly:!0})],w.prototype,"_serviceSupportsMosaicRule",void 0),e([d("_serviceSupportsMosaicRule",["currentVersion","fields"])],w.prototype,"readServiceSupportsMosaicRule",null),e([u({readOnly:!0})],w.prototype,"_rasterFunctionNamesIndex",null),e([u()],w.prototype,"adjustAspectRatio",void 0),e([u({type:[p],json:{write:!0}})],w.prototype,"bandIds",void 0),e([d("bandIds")],w.prototype,"readBandIds",null),e([u({readOnly:!0,json:{read:!1}})],w.prototype,"capabilities",void 0),e([d("service","capabilities",["capabilities","currentVersion","serviceDataType"])],w.prototype,"readCapabilities",null),e([u({type:Number})],w.prototype,"compressionQuality",void 0),e([f("compressionQuality")],w.prototype,"writeCompressionQuality",null),e([u({type:Number})],w.prototype,"compressionTolerance",void 0),e([f("compressionTolerance")],w.prototype,"writeCompressionTolerance",null),e([u({json:{read:{source:"copyrightText"}}})],w.prototype,"copyright",void 0),e([u({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],w.prototype,"defaultMosaicRule",void 0),e([d("defaultMosaicRule",["defaultMosaicMethod"])],w.prototype,"readDefaultMosaicRule",null),e([u({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],w.prototype,"definitionExpression",void 0),e([u({readOnly:!0,constructOnly:!0})],w.prototype,"exportImageServiceParameters",void 0),e([u()],w.prototype,"rasterInfo",void 0),e([u({readOnly:!0,type:[A]})],w.prototype,"fields",void 0),e([u({readOnly:!0})],w.prototype,"fieldsIndex",null),e([u({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],w.prototype,"format",null),e([d("service","format",["serviceDataType"])],w.prototype,"readFormat",null),e([u({type:g})],w.prototype,"fullExtent",void 0),e([u({readOnly:!0})],w.prototype,"hasMultidimensions",void 0),e([u({json:{read:{source:"maxImageHeight"}}})],w.prototype,"imageMaxHeight",void 0),e([u({json:{read:{source:"maxImageWidth"}}})],w.prototype,"imageMaxWidth",void 0),e([u({type:String,json:{type:M.jsonValues,read:M.read,write:M.write}})],w.prototype,"interpolation",void 0),e([u()],w.prototype,"minScale",void 0),e([d("service","minScale")],w.prototype,"readMinScale",null),e([u()],w.prototype,"maxScale",void 0),e([d("service","maxScale")],w.prototype,"readMaxScale",null),e([u({type:V})],w.prototype,"mosaicRule",null),e([d("mosaicRule",["mosaicRule","defaultMosaicMethod"])],w.prototype,"readMosaicRule",null),e([f("mosaicRule")],w.prototype,"writeMosaicRule",null),e([u()],w.prototype,"multidimensionalInfo",void 0),e([u({type:q,json:{write:!0}})],w.prototype,"multidimensionalSubset",void 0),e([u({json:{type:p}})],w.prototype,"noData",void 0),e([f("noData")],w.prototype,"writeNoData",null),e([u({type:String,json:{type:N.jsonValues,read:N.read,write:N.write}})],w.prototype,"noDataInterpretation",void 0),e([u({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],w.prototype,"objectIdField",void 0),e([d("objectIdField")],w.prototype,"readObjectIdField",null),e([u({readOnly:!0})],w.prototype,"geometryType",void 0),e([u({})],w.prototype,"typeIdField",void 0),e([u({})],w.prototype,"types",void 0),e([u({readOnly:!0})],w.prototype,"parsedUrl",null),e([u({type:Function})],w.prototype,"pixelFilter",void 0),e([u()],w.prototype,"raster",void 0),e([u({readOnly:!0})],w.prototype,"sourceType",void 0),e([d("sourceType",["serviceSourceType","fields"])],w.prototype,"readSourceType",null),e([u()],w.prototype,"viewId",void 0),e([u()],w.prototype,"renderer",null),e([u({types:fe,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ye,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],w.prototype,"internalRenderer",null),e([d("internalRenderer")],w.prototype,"readRenderer",null),e([f("internalRenderer")],w.prototype,"writeRenderer",null),e([u({clonable:!1})],w.prototype,"symbolizer",void 0),e([u(v)],w.prototype,"opacity",void 0),e([u({readOnly:!0})],w.prototype,"rasterFields",null),e([u({constructOnly:!0})],w.prototype,"rasterFunctionInfos",void 0),e([u({type:F,json:{name:"renderingRule"}})],w.prototype,"rasterFunction",null),e([d("rasterFunction",["renderingRule","rasterFunctionInfos"])],w.prototype,"readRasterFunction",null),e([u({readOnly:!0})],w.prototype,"serviceDataType",void 0),e([u({readOnly:!0,type:R})],w.prototype,"spatialReference",void 0),e([d("spatialReference",["spatialReference","extent"])],w.prototype,"readSpatialReference",null),e([u({type:O.apiValues,json:{read:O.read,type:O.jsonValues}})],w.prototype,"pixelType",void 0),e([f("pixelType")],w.prototype,"writePixelType",null),e([u({constructOnly:!0,type:Y})],w.prototype,"serviceRasterInfo",void 0),e([u()],w.prototype,"sourceJSON",void 0),e([u(I)],w.prototype,"url",void 0),e([u({readOnly:!0})],w.prototype,"version",void 0),e([d("version",["currentVersion","fields","timeInfo"])],w.prototype,"readVersion",null),w=e([y("esri.layers.mixins.ArcGISImageService")],w),w};export{yt as ArcGISImageService};
