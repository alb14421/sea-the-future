/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{ClonableMixin as r}from"../../core/Clonable.js";import{c as s}from"../../chunks/Cyclical.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import{cast as i}from"../../core/accessorSupport/decorators/cast.js";import"../../core/lang.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{f as c}from"../../chunks/ensureType.js";import{c as m,a as p}from"../../chunks/voxelPlaneUtils.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/maybe.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/events.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/MapUtils.js";import"../../chunks/Warning.js";import"../../chunks/mathUtils.js";import"../../chunks/quat.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/vec3.js";import"../../chunks/vec4.js";import"../../chunks/quatf64.js";let a=class extends(r(o)){constructor(t){super(t),this.enabled=!0,this.label="",this.normal=null,this.point=null}get orientation(){if(!Array.isArray(this.normal)||3!==this.normal.length)return 0;const[t,r]=m(this.normal);return s.normalize(c(t),0,!0)}set orientation(t){const r=p(t,this.tilt);this._set("normal",r),this._set("orientation",t)}get tilt(){if(!Array.isArray(this.normal)||3!==this.normal.length)return 0;const[t,r]=m(this.normal);return s.normalize(c(r),0,!0)}set tilt(t){const r=p(this.orientation,t);this._set("normal",r),this._set("tilt",t)}};t([e({type:Boolean,json:{default:!0,write:!0}})],a.prototype,"enabled",void 0),t([e({type:String,json:{write:!0}})],a.prototype,"label",void 0),t([e({type:Number,json:{read:!1},clonable:!1,range:{min:0,max:360}}),i(t=>s.normalize(c(t),0,!0))],a.prototype,"orientation",null),t([e({type:Number,json:{read:!1},clonable:!1,range:{min:0,max:360}}),i(t=>s.normalize(c(t),0,!0))],a.prototype,"tilt",null),t([e({type:[Number],json:{write:{isRequired:!0}}})],a.prototype,"normal",void 0),t([e({type:[Number],json:{write:{isRequired:!0}}})],a.prototype,"point",void 0),a=t([n("esri.layers.voxel.VoxelDynamicSection")],a);export{a as default};
