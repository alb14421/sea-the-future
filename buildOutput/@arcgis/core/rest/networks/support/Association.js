/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{JSONSupport as o}from"../../../core/JSONSupport.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/lang.js";import"../../../chunks/Logger.js";import{r as e}from"../../../chunks/reader.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{w as i}from"../../../chunks/writer.js";import n from"../../../geometry/Polyline.js";import{a as m}from"../../../chunks/typeUtils4.js";import l from"./NetworkElement.js";import{T as p}from"../../../chunks/TelecomNetworkElement.js";import"../../../core/Accessor.js";import"../../../core/Handles.js";import"../../../chunks/maybe.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/Lifecycle.js";import"../../../chunks/metadata.js";import"../../../chunks/ObjectPool.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/tracking.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../core/promiseUtils.js";import"../../../core/Error.js";import"../../../chunks/object.js";import"../../../chunks/events.js";import"../../../chunks/SetUtils.js";import"../../../chunks/SimpleTrackingTarget.js";import"../../../chunks/ensureType.js";import"../../../chunks/MapUtils.js";import"../../../config.js";import"../../../chunks/string.js";import"../../../chunks/Warning.js";import"../../../geometry/Extent.js";import"../../../geometry/Geometry.js";import"../../../geometry/SpatialReference.js";import"../../../chunks/unitUtils.js";import"../../../chunks/jsonMap.js";import"../../../chunks/pe.js";import"../../../chunks/assets.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../chunks/jsonUtils.js";import"../../../chunks/persistableUrlUtils.js";import"../../../geometry/Point.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../chunks/extentUtils.js";import"../../../chunks/boundsUtils.js";import"../../../chunks/aaBoundingRect.js";import"../../../chunks/mathUtils.js";import"../../../chunks/zmUtils.js";let u=class extends o{constructor(t){super(t),this.globalId=null,this.associationType=null,this.fromNetworkElement=null,this.toNetworkElement=null,this.geometry=null,this.errorMessage=null,this.percentAlong=null,this.errorCode=null,this.isContentVisible=null,this.status=null}readFromNetworkElement(t,o){return o.fromFirstUnit||o.fromNumUnits?new p({globalId:o.fromGlobalId,networkSourceId:o.fromNetworkSourceId,terminalId:o.fromTerminalId,firstUnit:o.fromFirstUnit,numUnits:o.fromNumUnits}):new l({globalId:o.fromGlobalId,networkSourceId:o.fromNetworkSourceId,terminalId:o.fromTerminalId})}writeFromNetworkElement(t,o){if(t&&(o.fromGlobalId=t.globalId,o.fromNetworkSourceId=t.networkSourceId,o.fromTerminalId=t.terminalId,"telecomNetworkElement"===t.type)){const r=t;o.fromFirstUnit=r.firstUnit,o.fromNumUnits=r.numUnits}}readToNetworkElement(t,o){return o.toFirstUnit||o.toNumUnits?new p({globalId:o.toGlobalId,networkSourceId:o.toNetworkSourceId,terminalId:o.toTerminalId,firstUnit:o.toFirstUnit,numUnits:o.toNumUnits}):new l({globalId:o.toGlobalId,networkSourceId:o.toNetworkSourceId,terminalId:o.toTerminalId})}writeToNetworkElement(t,o){if(t&&(o.toGlobalId=t.globalId,o.toNetworkSourceId=t.networkSourceId,o.toTerminalId=t.terminalId,"telecomNetworkElement"===t.type)){const r=t;o.toFirstUnit=r.firstUnit,o.toNumUnits=r.numUnits}}};t([r({type:String,json:{write:!0}})],u.prototype,"globalId",void 0),t([r({type:m.apiValues,json:{type:m.jsonValues,read:m.read,write:m.write}})],u.prototype,"associationType",void 0),t([r({type:l,json:{write:{target:{fromGlobalId:{type:String},fromNetworkSourceId:{type:Number},fromTerminalId:{type:Number},fromFirstUnit:{type:Number},fromNumUnits:{type:Number}}},read:{source:["fromGlobalId","fromNetworkSourceId","fromTerminalId","fromFirstUnit","fromNumUnits"]}}})],u.prototype,"fromNetworkElement",void 0),t([e("fromNetworkElement")],u.prototype,"readFromNetworkElement",null),t([i("fromNetworkElement")],u.prototype,"writeFromNetworkElement",null),t([r({type:l,json:{write:{target:{toGlobalId:{type:String},toNetworkSourceId:{type:Number},toTerminalId:{type:Number},toFirstUnit:{type:Number},toNumUnits:{type:Number}}},read:{source:["toGlobalId","toNetworkSourceId","toTerminalId","toFirstUnit","toNumUnits"]}}})],u.prototype,"toNetworkElement",void 0),t([e("toNetworkElement")],u.prototype,"readToNetworkElement",null),t([i("toNetworkElement")],u.prototype,"writeToNetworkElement",null),t([r({type:n,json:{write:!0}})],u.prototype,"geometry",void 0),t([r({type:String,json:{write:!0}})],u.prototype,"errorMessage",void 0),t([r({type:Number,json:{write:!0}})],u.prototype,"percentAlong",void 0),t([r({type:Number,json:{write:!0}})],u.prototype,"errorCode",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"isContentVisible",void 0),t([r({type:Number,json:{write:!0}})],u.prototype,"status",void 0),u=t([s("esri.rest.networks.support.Association")],u);const c=u;export{c as default};
