/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as o}from"../../chunks/tslib.es6.js";import{s as t}from"../../chunks/jsonMap.js";import{L as r}from"../../chunks/Logger.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import{e as i}from"../../chunks/enumeration.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/object.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../core/Error.js";import"../../chunks/Lifecycle.js";import"../../chunks/tracking.js";import"../../chunks/Warning.js";const e=t()({naturalLog:"natural-log",squareRoot:"square-root",percentOfTotal:"percent-of-total",log:"log",field:"field"}),s="percent-of-total",l="field",m=t=>{const m=t;let p=class extends m{constructor(){super(...arguments),this.normalizationField=null,this.normalizationMaxValue=null,this.normalizationMinValue=null,this.normalizationTotal=null}get normalizationType(){let o=this._get("normalizationType");const t=!!this.normalizationField,a=null!=this.normalizationTotal;return t||a?(o=t&&l||a&&s||null,t&&a&&r.getLogger(this).warn("warning: both normalizationField and normalizationTotal are set!")):o!==l&&o!==s||(o=null),o}set normalizationType(o){this._set("normalizationType",o)}};return o([a({type:String,json:{name:"parameters.normalizationField",write:!0}})],p.prototype,"normalizationField",void 0),o([a({type:Number,json:{name:"parameters.normalizationMaxValue",write:!0}})],p.prototype,"normalizationMaxValue",void 0),o([a({type:Number,json:{name:"parameters.normalizationMinValue",write:!0}})],p.prototype,"normalizationMinValue",void 0),o([a({type:Number,json:{name:"parameters.normalizationTotal",write:!0}})],p.prototype,"normalizationTotal",void 0),o([i(e,{name:"parameters.normalizationType"})],p.prototype,"normalizationType",null),p=o([n("esri.rest.support.NormalizationBinParametersMixin")],p),p};export{m as NormalizationBinParametersMixin,e as normalizationTypeJsonMap};
