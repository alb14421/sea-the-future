/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{ClonableMixin as e}from"../../core/Clonable.js";import r from"../../core/Collection.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import{b as s}from"../../chunks/ensureType.js";import"../../core/lang.js";import{e as n}from"../../chunks/enumeration.js";import{r as p}from"../../chunks/reader.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{w as a}from"../../chunks/writer.js";import u from"../../geometry/SpatialReference.js";import{a as m}from"../../chunks/commonProperties3.js";import{i as c,r as y,n as j,o as h,z as d,p as v,y as w}from"../../chunks/networkEnums.js";import g from"./TravelMode.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/maybe.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/events.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/MapUtils.js";import"../../chunks/Warning.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/jsonUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/unitUtils.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/persistableUrlUtils.js";var k;let b=class extends(e(o)){static{k=this}constructor(t){super(t),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.defaultBreaks=null,this.excludeSourcesFromPolygons=null,this.facilities=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.mergeSimilarPolygonRanges=!1,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines=null,this.outputPolygons=null,this.outSpatialReference=null,this.overlapLines=!1,this.overlapPolygons=!1,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnFacilities=!1,this.returnPointBarriers=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.splitLinesAtBreaks=!1,this.splitPolygonsAtBreaks=!1,this.timeOfDay=null,this.timeOfDayIsUTC=null,this.travelDirection=null,this.travelMode=null,this.trimOuterPolygon=!1,this.trimPolygonDistance=null,this.trimPolygonDistanceUnits=null,this.useHierarchy=null}static from(t){return s(k,t)}readAccumulateAttributes(t){return null==t?null:t.map(t=>c.fromJSON(t))}writeAccumulateAttributes(t,e,r){t?.length&&(e[r]=t.map(t=>c.toJSON(t)))}writeFacilities(t,e,r){B(t,e,r)}writePointBarriers(t,e,r){B(t,e,r)}writePolygonBarrier(t,e,r){B(t,e,r)}writePolylineBarrier(t,e,r){B(t,e,r)}readRestrictionAttributes(t){return null==t?null:t.map(t=>y.fromJSON(t))}writeRestrictionAttributes(t,e,r){t?.length&&(e[r]=t.map(t=>y.toJSON(t)))}readTimeOfDay(t,e){const{timeOfDay:r}=e;return null==r?null:"now"===r?"now":new Date(r)}writeTimeOfDay(t,e){null!=t&&(e.timeOfDay="now"===t?"now":t.getTime())}};t([i({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],b.prototype,"accumulateAttributes",void 0),t([p("accumulateAttributes")],b.prototype,"readAccumulateAttributes",null),t([a("accumulateAttributes")],b.prototype,"writeAccumulateAttributes",null),t([i(m)],b.prototype,"apiKey",void 0),t([i({json:{write:!0}})],b.prototype,"attributeParameterValues",void 0),t([i({type:[Number],json:{write:!0}})],b.prototype,"defaultBreaks",void 0),t([i({type:[String],json:{write:!0}})],b.prototype,"excludeSourcesFromPolygons",void 0),t([i({json:{write:!0}})],b.prototype,"facilities",void 0),t([a("facilities")],b.prototype,"writeFacilities",null),t([i({type:Number,json:{write:!0}})],b.prototype,"geometryPrecision",void 0),t([i({type:Number,json:{write:!0}})],b.prototype,"geometryPrecisionM",void 0),t([i({type:Number,json:{write:!0}})],b.prototype,"geometryPrecisionZ",void 0),t([i({type:Boolean,json:{write:!0}})],b.prototype,"ignoreInvalidLocations",void 0),t([n(c,{name:"impedanceAttributeName",ignoreUnknown:!1})],b.prototype,"impedanceAttribute",void 0),t([i({type:Boolean,json:{write:!0}})],b.prototype,"mergeSimilarPolygonRanges",void 0),t([i({type:Number,json:{write:!0}})],b.prototype,"outputGeometryPrecision",void 0),t([n(j)],b.prototype,"outputGeometryPrecisionUnits",void 0),t([n(h)],b.prototype,"outputLines",void 0),t([n(d)],b.prototype,"outputPolygons",void 0),t([i({type:u,json:{name:"outSR",write:!0}})],b.prototype,"outSpatialReference",void 0),t([i({type:Boolean,json:{write:!0}})],b.prototype,"overlapLines",void 0),t([i({type:Boolean,json:{write:!0}})],b.prototype,"overlapPolygons",void 0),t([i({json:{write:!0}})],b.prototype,"overrides",void 0),t([i({json:{name:"barriers",write:!0}})],b.prototype,"pointBarriers",void 0),t([a("pointBarriers")],b.prototype,"writePointBarriers",null),t([i({json:{write:!0}})],b.prototype,"polygonBarriers",void 0),t([a("polygonBarriers")],b.prototype,"writePolygonBarrier",null),t([i({json:{write:!0}})],b.prototype,"polylineBarriers",void 0),t([a("polylineBarriers")],b.prototype,"writePolylineBarrier",null),t([i({type:Boolean,json:{write:!0}})],b.prototype,"preserveObjectID",void 0),t([i({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],b.prototype,"restrictionAttributes",void 0),t([p("restrictionAttributes")],b.prototype,"readRestrictionAttributes",null),t([a("restrictionAttributes")],b.prototype,"writeRestrictionAttributes",null),t([n(v)],b.prototype,"restrictUTurns",void 0),t([i({type:Boolean,json:{write:!0}})],b.prototype,"returnFacilities",void 0),t([i({type:Boolean,json:{name:"returnBarriers",write:!0}})],b.prototype,"returnPointBarriers",void 0),t([i({type:Boolean,json:{write:!0}})],b.prototype,"returnPolygonBarriers",void 0),t([i({type:Boolean,json:{write:!0}})],b.prototype,"returnPolylineBarriers",void 0),t([i({type:Boolean,json:{write:!0}})],b.prototype,"splitLinesAtBreaks",void 0),t([i({type:Boolean,json:{write:!0}})],b.prototype,"splitPolygonsAtBreaks",void 0),t([i({json:{write:!0}})],b.prototype,"timeOfDay",void 0),t([p("timeOfDay")],b.prototype,"readTimeOfDay",null),t([a("timeOfDay")],b.prototype,"writeTimeOfDay",null),t([i({type:Boolean,json:{write:!0}})],b.prototype,"timeOfDayIsUTC",void 0),t([n(w)],b.prototype,"travelDirection",void 0),t([i({type:g,json:{write:!0}})],b.prototype,"travelMode",void 0),t([i({type:Boolean,json:{write:!0}})],b.prototype,"trimOuterPolygon",void 0),t([i({type:Number,json:{write:!0}})],b.prototype,"trimPolygonDistance",void 0),t([n(j)],b.prototype,"trimPolygonDistanceUnits",void 0),t([i({type:Boolean,json:{write:!0}})],b.prototype,"useHierarchy",void 0),b=k=t([l("esri.rest.support.ServiceAreaParameters")],b);const P=b;function B(t,e,o){null!=t&&(e[o]=r.isCollection(t)?{features:t.toArray().map(t=>t.toJSON())}:t.toJSON())}export{P as default};
