/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import{JSONSupport as s}from"../../core/JSONSupport.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{I as e}from"../../chunks/ensureType.js";import"../../core/lang.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import{w as i}from"../../chunks/writer.js";import p from"../../geometry/Point.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/maybe.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/events.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/MapUtils.js";import"../../chunks/Warning.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/reader.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/jsonUtils.js";import"../../chunks/persistableUrlUtils.js";import"../../geometry/support/webMercatorUtils.js";var m;let c=m=class extends s{constructor(r){super(r),this.geometries=null,this.rasterId=null}writeGeometry(r,s,t){s.geometries={geometryType:"esriGeometryPoint",geometries:r.map(r=>r.toJSON())}}clone(){return new m({geometries:this.geometries?.map(r=>r.clone())??[],rasterId:this.rasterId})}};r([t({type:[p],json:{write:!0}})],c.prototype,"geometries",void 0),r([i("geometries")],c.prototype,"writeGeometry",null),r([t({type:e,json:{write:!0}})],c.prototype,"rasterId",void 0),c=m=r([o("esri.rest.support.ImagePixelLocationParameters")],c);export{c as default};
