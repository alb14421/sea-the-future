/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"../../../Color.js";import{clone as o}from"../../../core/lang.js";import{a as r}from"../../../chunks/screenUtils.js";import t from"../../../symbols/CIMSymbol.js";import"../../../chunks/colorUtils.js";import"../../../chunks/mathUtils.js";import"../../../chunks/ensureType.js";import"../../../chunks/Logger.js";import"../../../config.js";import"../../../chunks/object.js";import"../../../chunks/string.js";import"../../../chunks/MapUtils.js";import"../../../chunks/tslib.es6.js";import"../../../core/accessorSupport/decorators/property.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/metadata.js";import"../../../core/Error.js";import"../../../chunks/enumeration.js";import"../../../chunks/jsonMap.js";import"../../../chunks/reader.js";import"../../../core/accessorSupport/decorators/subclass.js";import"../../../chunks/Lifecycle.js";import"../../../chunks/tracking.js";import"../../../chunks/Warning.js";import"../../../chunks/writer.js";import"../../../layers/support/fieldUtils.js";import"../../../chunks/SetUtils.js";import"../../../core/sql.js";import"../../../chunks/maybe.js";import"../../../chunks/guards.js";import"../../../chunks/datetime.js";import"../../../symbols/Symbol.js";import"../../../core/JSONSupport.js";import"../../../core/Accessor.js";import"../../../core/Handles.js";import"../../../chunks/ObjectPool.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../core/promiseUtils.js";import"../../../chunks/events.js";import"../../../chunks/SimpleTrackingTarget.js";const i="spike-height-override",s=r(8),n=r(20),l="triangle-solid-fill-open-outline";function a(e){const{field:o,normalizationField:r,sizeStops:t}=e,{value:s,size:n}=t[0],{value:l,size:a}=t[1];let c,p=0;return o&&(p=`$feature["${o}"]`,c=`\n      if(!HasValue($feature, "${o}")){\n        return 0;\n      }\n      $feature["${o}"];\n    `),r&&(p=`$feature["${o}"] / $feature["${r}"]`,c=`if(!HasValue($feature, "${o}") || !HasValue($feature, "${r}") || $feature["${r}"] <= 0){\n        return 0;\n      }\n      $feature["${o}"];\n      $feature["${r}"];`),[{type:"CIMPrimitiveOverride",primitiveName:i,propertyName:"Length",valueExpressionInfo:{type:"CIMExpressionInfo",title:"Custom",expression:`\n        ${c}\n        var value = ${p};\n\n        var maxSize = ${a};\n        var minSize = ${n};\n\n        var minDataValue = ${s};\n        var maxDataValue = ${l};\n\n        var ratio = Constrain(( value - minDataValue ) / ( maxDataValue - minDataValue ), 0, 1);\n\n        var size = Constrain(maxSize * ratio, minSize, maxSize);\n        return size;\n      `,returnType:"Default"}}]}function c(e){const{primitiveOverrides:o,baseWidth:r,defaultHeight:l}=e,a=function(e){const o=[p(e)],r=u(e);return r&&o.push(r),o}(e);return new t({data:{type:"CIMSymbolReference",symbol:{type:"CIMPointSymbol",effects:[{type:"CIMGeometricEffectRadial",primitiveName:i,angle:90,length:l??n},{type:"CIMGeometricEffectTaperedPolygon",fromWidth:r??s,toWidth:1,length:5}],symbolLayers:a,haloSize:1,scaleX:1,angleAlignment:"Display"},primitiveOverrides:o}})}function p(e){const{strokeColor:o,strokeWidth:t,symbolStyle:i}=e,s=i?.includes("solid-fill")||i?.includes("gradient-fill");let n=o?.toArray(),l=!1;return i?.includes("outline")&&s?l=!0:n=e.color?.toArray(),{type:"CIMSolidStroke",effects:m(i),enable:!0,colorLocked:l,capStyle:"Round",joinStyle:"Round",lineStyle3D:"Strip",miterLimit:4,width:t??r(1),color:n}}function m(e){if(!e?.includes("closed"))return[{type:"CIMGeometricEffectAddControlPoints",angleTolerance:90,primitiveName:"spike-control-points"},{type:"CIMGeometricEffectSuppress",suppress:!0,invert:!0,primitiveName:"spike-stroke-suppress"}]}function u(e){const{color:o,symbolStyle:r}=e,t=r?.includes("solid-fill"),i=r?.includes("gradient-fill");if(!t&&!i||!o)return;if(t)return{type:"CIMSolidFill",enable:!0,colorLocked:!1,color:o?.toArray()};const s=o.clone();return s.a=0,{type:"CIMGradientFill",enable:!0,angle:90,colorRamp:{type:"CIMMultipartColorRamp",colorRamps:[{type:"CIMLinearContinuousColorRamp",fromColor:o.toArray(),toColor:s.toArray()}],weights:[1]},gradientMethod:"Linear",gradientSize:70,gradientSizeUnits:"Relative",gradientType:"Continuous"}}function f(r,t){const{defaultHeight:s,baseWidth:n,color:l,strokeColor:a,primitiveOverrides:c,symbolStyle:m,strokeWidth:f}=t,y="CIMPointSymbol"===r.data.symbol?.type?r.data.symbol:null,h=y?.symbolLayers;if(!h)return r;const j=y.effects,k=j?.find(e=>"CIMGeometricEffectTaperedPolygon"===e.type),C=j?.find(e=>"CIMGeometricEffectRadial"===e.type&&e.primitiveName===i);null!=n&&k&&(k.fromWidth=n),null!=s&&C&&(C.length=s);const g=h?.find(e=>"CIMSolidStroke"===e.type),v=h?.find(e=>"CIMSolidFill"===e.type),S=h?.find(e=>"CIMGradientFill"===e.type),b="CIMMultipartColorRamp"===S?.colorRamp?.type&&"CIMLinearContinuousColorRamp"===S.colorRamp.colorRamps[0]?.type?S.colorRamp.colorRamps[0]:null;if(m){const o=v?.color??b?.fromColor??g?.color,r=l??(o?new e(o):void 0),i=g?.color??o,s=a??(i?new e(i):void 0),n=m.includes("solid-fill"),c=m.includes("gradient-fill");if(n||c||d(h,v??S),r)if(n)d(h,S),v?v.color=r?.toArray():h.push(u({...t,color:r}));else if(c)if(d(h,v),S){if(b&&l){const e=r.clone();e.a=0,b.fromColor=r.toArray(),b.toColor=e.toArray()}}else h.push(u({...t,color:r}));if(g){const e=p({...t,strokeColor:s,color:r});g.effects=e.effects,g.color=e.color,g.width=e.width,g.colorLocked=e.colorLocked}}else if(g&&(a&&(g.color=a.toArray()),null!=f&&(g.width=f)),v&&l&&(v.color=l.toArray()),b&&l){const e=l.clone();e.a=0,b.fromColor=l.toArray(),b.toColor=e.toArray()}return void 0!==c&&(r.data.primitiveOverrides=o(c)),r}function d(e,o){if(!o)return;const r=e.indexOf(o);-1!==r&&e.splice(r,1)}export{a as createPrimitiveOverrides,c as createSpikeSymbol,l as defaultSpikeSymbolStyle,f as updateSpikeSymbol};
