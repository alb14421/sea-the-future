"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[4604,8010],{1829:(e,t,n)=>{n.d(t,{g:()=>r});const r={geodesic:0,loxodrome:1,"great-elliptic":2,"normal-section":3,"shape-preserving":4}},14604:(e,t,n)=>{n.r(t),n.d(t,{execute:()=>p,executeMany:()=>d,g:()=>h,isLoaded:()=>m,load:()=>f,supportsCurves:()=>a});var r=n(69763),o=n(44768),s=n(1829);let i,c,u,l,a;function m(){return!!i&&(0,o.i)()}async function f(){if(!m()){const[e]=await Promise.all([Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(874)]).then(n.bind(n,40874)),(0,o.l)()]);i=e.fromGeometry,c=e.fromSpatialReference,u=e.getSpatialReference,l=e.toGeometry,a=(0,o.s)()}}function p(e,t,n={}){const{curveType:a="geodesic",unit:m}=n;m&&(t=(0,r.c)(t,m,"meters"));const f=u(e);return l((0,o.e)(i(e),t,c(f),s.g[a]),f)}function d(e,t,n={}){const{curveType:a="geodesic",unit:m}=n;m&&(t=(0,r.c)(t,m,"meters"));const f=e.map(i),p=u(e);return(0,o.a)(f,t,c(p),s.g[a]).map(e=>l(e,p))}n(32773),n(93804),n(59121),n(84699),n(96221),n(18683),n(90740),n(64604),n(29512),n(99063),n(6407),n(20266),n(80959),n(13671),n(19247),n(1178),n(88010);const h=Object.freeze(Object.defineProperty({__proto__:null,execute:p,executeMany:d,isLoaded:m,load:f,get supportsCurves(){return a}},Symbol.toStringTag,{value:"Module"}))},44768:(e,t,n)=>{n.d(t,{a:()=>l,e:()=>u,i:()=>i,l:()=>c,s:()=>a});var r=n(88010),o=n(96221);let s;function i(){return!!s&&(0,o.i)()}async function c(){if(!i()){const[e,t]=await Promise.all([Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(7725)]).then(n.bind(n,87725)),Promise.all([n.e(3160),n.e(4981),n.e(6550)]).then(n.bind(n,6550)).then(e=>e.bj).then(({injectPe:e})=>e),(0,o.l)()]);s=new e.OperatorGeodeticDensifyByLength,t(o.p)}}function u(e,t,n,r){return s.execute(e,t,n,r,null)}function l(e,t,n,o){const i=s.executeMany(new r.S(e),t,n,o,null);return Array.from(i)}function a(){return s.supportsCurves()}},88010:(e,t,n)=>{n.d(t,{G:()=>r,S:()=>o});class r{*[Symbol.iterator](){let e=this.next();for(;e;)yield e,e=this.next()}}class o extends r{constructor(e){super(),this.m_iGeom=-1,this.m_aGeoms=e?e.slice():[]}next(){if(this.m_iGeom<this.m_aGeoms.length-1){const e=this.m_aGeoms[++this.m_iGeom];return this.m_aGeoms[this.m_iGeom]=null,e}return null}tock(){return!1}getGeometryID(){return this.m_iGeom}getRank(){return 1}}}}]);