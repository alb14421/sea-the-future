"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[3041],{2026:(e,t,n)=>{function r(e,t){return function(e,t){return t?.mode?t.mode:function(e){return e?l:u}(e).mode}(null==e||(e.hasZ??!1),t)}function i(e,t,n){return n&&n.mode!==t?`${e} only support ${t} elevation mode`:null}function a(e,t,n){return n?.mode===t?`${e} do not support ${t} elevation mode`:null}function s(e,t){return null!=t?.featureExpressionInfo&&"0"!==t.featureExpressionInfo.expression?`${e} do not support featureExpressionInfo`:null}function o(e,t){t&&e.warn(".elevationInfo=",t)}n.d(t,{a:()=>a,e:()=>i,f:()=>s,g:()=>r,l:()=>o}),n(69763),n(54131);const l={mode:"absolute-height",offset:0},u={mode:"on-the-ground",offset:null}},8368:(e,t,n)=>{n.d(t,{A:()=>l});var r=n(32816),i=n(20266),a=n(29298),s=(n(32773),n(69421)),o=n(64604);const l=e=>{const t=e;let n=class extends t{get title(){if(this._get("title")&&"defaults"!==this.originOf("title"))return this._get("title");if(this.url){const e=(0,o.p)(this.url);if(e?.title)return e.title}return this._get("title")||""}set title(e){this._set("title",e)}set url(e){this._set("url",(0,o.s)(e,i.L.getLogger(this)))}};return(0,r._)([(0,a.MZ)()],n.prototype,"title",null),(0,r._)([(0,a.MZ)({type:String})],n.prototype,"url",null),n=(0,r._)([(0,s.$)("esri.layers.mixins.ArcGISService")],n),n}},20873:(e,t,n)=>{n.d(t,{f:()=>d,g:()=>f,p:()=>p});var r=n(64604),i=n(44600),a=n(64752),s=n(7969),o=n(55095),l=n(13978),u=n(8824);async function c(e,t,n){const c=(0,l.p)(e),{rasterFunction:d,sourceJSON:f}=t||{},p=d?JSON.stringify(d.rasterFunctionDefinition||d):null,m=(0,l.e)({...c.query,renderingRule:p,f:"json"}),h=(0,l.a)(m,n);e=c.path;const y=f||await(0,r.A)(e,h).then(e=>e.data),g=y.hasRasterAttributeTable?(0,r.A)(`${e}/rasterAttributeTable`,h):null,v=y.hasColormap?(0,r.A)(`${e}/colormap`,h):null,b=y.hasHistograms?(0,r.A)(`${e}/histograms`,h):null,x=y.currentVersion>=10.3?(0,r.A)(`${e}/keyProperties`,h):null,w=y.hasMultidimensions?(0,r.A)(`${e}/multidimensionalInfo`,h):null,R=await Promise.allSettled([g,v,b,x,w]);let A=null;if(y.minValues&&y.minValues.length===y.bandCount){A=[];for(let e=0;e<y.minValues.length;e++)A.push({min:y.minValues[e],max:y.maxValues[e],avg:y.meanValues[e],stddev:y.stdvValues[e]})}const S=i.A.fromJSON(y.extent),I=Math.ceil(S.width/y.pixelSizeX-.1),M=Math.ceil(S.height/y.pixelSizeY-.1),V=s.A.fromJSON(y.spatialReference||y.extent.spatialReference),_="fulfilled"===R[0].status?R[0].value?.data:null,D=_?.features?.length?u.A.fromJSON(_):null,T="fulfilled"===R[1].status?R[1].value?.data.colormap:null,P=T?.length?T:null,$="fulfilled"===R[2].status?R[2].value?.data.histograms:null,N=$?.[0]?.counts?.length?$:null,O="fulfilled"===R[3].status?R[3].value?.data??{}:{},k="fulfilled"===R[4].status?R[4].value?.data.multidimensionalInfo:null,C=k?.variables?.length?k:null;C&&C.variables.forEach(e=>{e.statistics?.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),e.dimensions?.forEach(e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")})});const{defaultVariable:Z,serviceDataType:j}=y;Z&&Z!==O.DefaultVariable&&(O.DefaultVariable=Z),j?.includes("esriImageServiceDataTypeVector")&&!j.includes(O.DataType)&&(O.DataType=j.replace("esriImageServiceDataType",""));let J=y.noDataValue;y.noDataValues?.length&&y.noDataValues.some(e=>e!==J)&&(J=y.noDataValues);const L=y.transposeInfo?new o.R({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new a.A({x:y.extent.xmin,y:y.extent.ymax,spatialReference:V}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(I,M))/Math.LN2-8)),transposeInfo:y.transposeInfo}):void 0;return new o.A({width:I,height:M,bandCount:y.bandCount,extent:i.A.fromJSON(y.extent),spatialReference:V,pixelSize:new a.A({x:y.pixelSizeX,y:y.pixelSizeY,spatialReference:V}),pixelType:y.pixelType.toLowerCase(),statistics:A,attributeTable:D,colormap:P,histograms:N,keyProperties:O,noDataValue:J,multidimensionalInfo:C,storageInfo:L})}function d(e,t,n){return c(e,{sourceJSON:t},n)}function f(e,t,n){return c(e,{rasterFunction:t},n)}function p(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}},24133:(e,t,n)=>{n.d(t,{H:()=>o});var r=n(32816),i=n(29298),a=(n(32773),n(20266),n(69421)),s=n(74181);n(36544),n(85176),n(93181),n(13671),n(40499),n(6407),n(59121),n(90740),n(84699),n(50704),n(91047),n(48064),n(52731),n(41390),n(36555),n(58498),n(35819),n(45371),n(61532),n(80959),n(19247),n(36172),n(99924),n(88663),n(93804),n(99506),n(91381),n(48844),n(49877),n(56273),n(30011),n(54483),n(60027),n(57111),n(75651),n(88614),n(1030),n(35902),n(13226),n(16699),n(15319),n(60785),n(56487),n(6399),n(9498),n(24079),n(38149),n(19681),n(64524),n(40328),n(84539),n(65299),n(38641),n(27281),n(72393),n(17745),n(81272),n(44945),n(51961),n(62399),n(64995),n(70861),n(33150),n(58173),n(66110),n(67520),n(27532),n(48103),n(50214),n(59192),n(16345),n(65085),n(33611),n(84857),n(60373),n(20568),n(16794),n(52357),n(11090),n(49319),n(93546),n(29570),n(34592),n(79825),n(95101),n(67578),n(17857),n(82537),n(14896),n(95611),n(98089),n(91366),n(80473),n(43435),n(73435),n(67321),n(77037),n(44600),n(2160),n(7969),n(69763),n(96221),n(18683),n(64604),n(29512),n(99063),n(1178),n(64752),n(29208),n(36533),n(84200),n(97827),n(18169),n(20762),n(48402),n(67504),n(92517),n(91815),n(85232),n(93471),n(7182),n(47788),n(19297),n(82408),n(73509),n(28276),n(91658),n(70580),n(75191),n(24319),n(62092),n(53252),n(34039),n(12856),n(3495),n(97906),n(65023),n(31424),n(74676),n(32368),n(7391),n(22529),n(70061),n(38094),n(67723),n(2589),n(47239),n(22522),n(63728),n(4157),n(62401),n(89322),n(20138),n(53370),n(59858),n(46946),n(3816),n(71992),n(80167),n(4478),n(91808),n(7161),n(55586),n(92229),n(18344),n(53610),n(29447),n(78273),n(49475),n(64884),n(23351),n(35121),n(51222),n(42870),n(54512),n(53103),n(19648),n(42948),n(19869),n(3827),n(98238),n(78328),n(23916),n(93074),n(54616),n(25018),n(41740),n(75399),n(46341),n(79943),n(68258),n(24330),n(91276),n(18527),n(62482),n(12692),n(60303),n(79769),n(17813),n(3112),n(46626),n(45560),n(56303),n(85890),n(55884),n(42656),n(3952),n(339),n(79281),n(13978),n(47368),n(10348),n(89779),n(40790),n(69033),n(73067),n(60369),n(13201),n(43534),n(47812),n(23875),n(44747),n(91524),n(56570),n(23787),n(22151);const o=e=>{const t=e;let n=class extends t{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,r._)([(0,i.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],n.prototype,"activePresetRendererName",void 0),(0,r._)([(0,i.MZ)({type:[s.A],json:{name:"layerDefinition.presetRenderers",write:!0}})],n.prototype,"presetRenderers",void 0),n=(0,r._)([(0,a.$)("esri.layers.mixins.RasterPresetRendererMixin")],n),n}},33489:(e,t,n)=>{n.d(t,{a:()=>o,c:()=>s,d:()=>d,e:()=>u,f:()=>f,g:()=>i,h:()=>a});var r=n(32773);function i(e){return 32+e.length}const a=16;function s(e){if(!e)return 0;let t=d;for(const n in e)e.hasOwnProperty(n)&&(t+=l(e[n],!1));return t}function o(e){if(!e)return 0;if("number"==typeof e[0])return u(e);if(Array.isArray(e))return function(e){const t=e.length;if(0===t||"number"==typeof e[0])return c(e,8);let n=f;for(let r=0;r<t;r++)n+=l(e[r]);return n}(e);let t=d;for(const n in e)e.hasOwnProperty(n)&&(t+=l(e[n]));return t}function l(e,t=!0){switch(typeof e){case"object":return t?o(e):d;case"string":return i(e);case"number":return 16;case"boolean":return 4;default:return 8}}function u(...e){return e.reduce((e,t)=>e+(t?(0,r.c)(t)?t.byteLength+p:Array.isArray(t)?c(t,16):0:0),0)}function c(e,t){return f+e.length*t}const d=32,f=16,p=145},74181:(e,t,n)=>{n.d(t,{A:()=>d});var r=n(32816),i=n(52731),a=n(99924),s=n(29298),o=n(36544),l=(n(32773),n(88663)),u=n(69421),c=n(99506);n(41390),n(20266),n(90740),n(59121),n(84699),n(85176),n(93181),n(13671),n(50704),n(40499),n(36555),n(58498),n(91047),n(35819),n(45371),n(61532),n(80959),n(6407),n(19247),n(36172),n(48064),n(93804),n(91381),n(48844),n(49877),n(56273),n(30011),n(54483),n(60027),n(57111),n(75651),n(88614),n(1030),n(35902),n(13226),n(16699),n(15319),n(60785),n(56487),n(6399),n(9498),n(24079),n(38149),n(19681),n(64524),n(40328),n(84539),n(65299),n(38641),n(27281),n(72393),n(17745),n(81272),n(44945),n(51961),n(62399),n(64995),n(70861),n(33150),n(58173),n(66110),n(67520),n(27532),n(48103),n(50214),n(59192),n(16345),n(65085),n(33611),n(84857),n(60373),n(20568),n(16794),n(52357),n(11090),n(49319),n(93546),n(29570),n(34592),n(79825),n(95101),n(67578),n(17857),n(82537),n(14896),n(95611),n(98089),n(91366),n(80473),n(43435),n(73435),n(67321),n(77037),n(44600),n(2160),n(7969),n(69763),n(96221),n(18683),n(64604),n(29512),n(99063),n(1178),n(64752),n(29208),n(36533),n(84200),n(97827),n(18169),n(20762),n(48402),n(67504),n(92517),n(91815),n(85232),n(93471),n(7182),n(47788),n(19297),n(82408),n(73509),n(28276),n(91658),n(70580),n(75191),n(24319),n(62092),n(53252),n(34039),n(12856),n(3495),n(97906),n(65023),n(31424),n(74676),n(32368),n(7391),n(22529),n(70061),n(38094),n(67723),n(2589),n(47239),n(22522),n(63728),n(4157),n(62401),n(89322),n(20138),n(53370),n(59858),n(46946),n(3816),n(71992),n(80167),n(4478),n(91808),n(7161),n(55586),n(92229),n(18344),n(53610),n(29447),n(78273),n(49475),n(64884),n(23351),n(35121),n(51222),n(42870),n(54512),n(53103),n(19648),n(42948),n(19869),n(3827),n(98238),n(78328),n(23916),n(93074),n(54616),n(25018),n(41740),n(75399),n(46341),n(79943),n(68258),n(24330),n(91276),n(18527),n(62482),n(12692),n(60303),n(79769),n(17813),n(3112),n(46626),n(45560),n(56303),n(85890),n(55884),n(42656),n(3952),n(339),n(79281),n(13978),n(47368),n(10348),n(89779),n(40790),n(69033),n(73067),n(60369),n(13201),n(43534),n(47812),n(23875),n(44747),n(91524),n(56570),n(23787),n(22151);let d=class extends((0,i.O)(a.o)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,r._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],d.prototype,"name",void 0),(0,r._)([(0,s.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,l.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],d.prototype,"method",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],d.prototype,"value",void 0),(0,r._)([(0,s.MZ)({type:[o.I],json:{write:{isRequired:!0}}})],d.prototype,"bandIds",void 0),(0,r._)([(0,s.MZ)({types:c.r,json:{write:!0,origins:{"web-scene":{types:c.w,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],d.prototype,"renderer",void 0),d=(0,r._)([(0,u.$)("esri.renderers.support.RasterPresetRenderer")],d)}}]);