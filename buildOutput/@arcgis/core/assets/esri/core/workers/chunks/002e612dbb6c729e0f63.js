"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[4315],{64315:(e,t,a)=>{a.r(t),a.d(t,{default:()=>E});var i=a(32816),n=a(93787),o=a(17745),s=a(6407),r=a(20266),l=a(93217),h=a(2810),d=a(80959),c=a(67321),p=a(29298),u=(a(32773),a(69421)),y=a(41390),g=a(44600),m=a(64752),f=a(67504),b=a(73597),L=a(83637),M=a(94531),w=a(5670),k=a(16702),C=a(90426),T=a(31315),N=a(88730),D=a(96807),v=a(65174),x=a(43551);a(64604),a(90740),a(59121),a(29512),a(99063),a(84699),a(1178),a(96153),a(33489),a(7969),a(99924),a(85176),a(93181),a(13671),a(69763),a(93804),a(96221),a(18683),a(36544),a(56273),a(50704),a(40499),a(36555),a(58498),a(91047),a(35819),a(45371),a(61532),a(36172),a(19247),a(48064),a(81272),a(44945),a(2160),a(49877),a(29208),a(48844),a(18169),a(20762),a(48402),a(16699),a(80473),a(73509),a(28276),a(58194),a(4734),a(50214),a(59192),a(16345),a(54483),a(47239),a(22522),a(77037),a(36533),a(84200),a(97827),a(58003),a(88321),a(2589),a(47387),a(46728),a(21632),a(64102),a(49197),a(56833),a(73600),a(88663),a(92517),a(81284),a(44864),a(95637),a(59930),a(45862),a(72762),a(71613),a(17872),a(78860),a(52731),a(26805),a(13983),a(72393),a(30011),a(51961),a(62399),a(64995),a(70861),a(33150),a(58173),a(66110),a(67520),a(27532),a(48103),a(65085),a(33611),a(84857),a(60373),a(20568),a(35902),a(13226),a(16794),a(52357),a(11090),a(49319),a(93546),a(29570),a(34592),a(79825),a(95101),a(67578),a(17857),a(82537),a(14896),a(95611),a(98089),a(91366),a(43435),a(73435),a(11494),a(6801),a(41003),a(9380),a(55270),a(95779),a(13262),a(346),a(56184),a(99032),a(79022),a(13141),a(42614),a(11721),a(59700),a(2824),a(56764),a(11618),a(2232),a(34362),a(23787),a(22151),a(38896),a(26589),a(7011),a(133),a(70648),a(69310),a(31572),a(9943),a(91276),a(18527),a(62482),a(45476),a(71044),a(43534),a(47812),a(83463),a(78016),a(16641),a(88817),a(3687),a(3952),a(339),a(79281),a(13978),a(47368),a(29403),a(40672),a(96587),a(79747),a(14509),a(14549),a(26171),a(85842),a(79875),a(75169),a(7078),a(33348),a(53104),a(25018),a(38093),a(10224),a(36309),a(23916),a(93074),a(54616),a(54512),a(53610),a(29447),a(78273),a(93471),a(49475),a(53103),a(35121),a(19648),a(59858),a(78328),a(42948),a(82408),a(91658),a(70580),a(75191),a(24319),a(62092),a(71992),a(7182),a(47788),a(19297),a(53252),a(34039),a(12856),a(3495),a(97906),a(64524),a(65023),a(31424),a(74676),a(32368),a(7391),a(22529),a(70061),a(38094),a(67723),a(63728),a(4157),a(62401),a(89322),a(20138),a(53370),a(46946),a(3816),a(80167),a(4478),a(91808),a(7161),a(55586),a(92229),a(23351),a(64884),a(51222),a(42870),a(91815),a(85232),a(18344),a(74285),a(91028),a(71361),a(86688),a(93049),a(64035),a(25643),a(56367),a(60369),a(13201),a(8904),a(29755),a(97511),a(32264),a(68849),a(82842),a(58196),a(73067),a(86941),a(16677),a(60027),a(57111),a(75651),a(88614),a(1030),a(15319),a(60785),a(56487),a(6399),a(9498),a(24079),a(38149),a(19681),a(40328),a(84539),a(65299),a(38641),a(27281),a(19869),a(98238),a(17813),a(3112),a(41740),a(46626),a(45560),a(56303),a(85890),a(55884),a(1739),a(81618),a(32397),a(67664),a(91381),a(3827),a(49011),a(76164),a(38632),a(44296),a(44747),a(91524),a(43682),a(85351),a(54481),a(1535),a(89253),a(17012),a(98203),a(54131),a(53065),a(20804),a(63834),a(87357),a(19969),a(9207),a(62959),a(74159),a(90197),a(76636),a(6837),a(11737),a(46935),a(69448),a(35619),a(31175),a(60408),a(8824),a(20978),a(69033),a(23875),a(56570),a(41658),a(82559),a(4718),a(63015),a(47765),a(53063),a(6893),a(64209),a(73574),a(13824),a(3593),a(52138),a(463),a(11538),a(91308),a(80153),a(77e3),a(19049),a(64724),a(63402),a(17618),a(43053),a(19548),a(92975),a(69993),a(7603),a(57335),a(94358),a(82341),a(76878),a(14339),a(99852),a(47034),a(3515),a(32408),a(52319),a(6105),a(14658),a(10043),a(89754),a(72076),a(5370),a(76999),a(76641);const _={MULTIPLIER:"multiplier",ABSOLUTE:"absolute-value"};let I=class extends((0,N.q)((0,T.dM)((0,D.j)((0,h.M)(b.A))))){constructor(e){if(super(e),this.url=null,this.dataPreloadedInLocalCache=!1,this.initializationLinkChartConfig=null,this.membershipModified=!0,this._currentLinkChartConfig={layoutMode:"organic-standard"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(o.A.ofType(k.A)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new g.A({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(o.A.ofType(k.A)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=e?.initializationInclusionModeDefinition,e?.dataPreloadedInLocalCache&&!e?.initializationInclusionModeDefinition)throw new s.A("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles((0,c.wB)(()=>this.layers.concat(this.tables),(e,t)=>this._handleSublayersChange(e,t),c.OH))}normalizeCtorArgs(e){if(!e)return{};const{url:t,title:a,dataPreloadedInLocalCache:i,initializationLinkChartConfig:n}=e;return{url:t,title:a,dataPreloadedInLocalCache:i,initializationLinkChartConfig:n}}_initializeLayerProperties(e){if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2]}const t=new Set;let a=[],i=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new s.A("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.inclusionModeDefinition?.generateAllSublayers?(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach((n,o)=>{const s=this._graphTypeLookup.get(o);if(!s)return r.L.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(o);"relationship"===s.type?t.has(o)||(t.add(o),i.push(s)):"entity"===s.type?t.has(o)||(t.add(o),a.push(s)):(r.L.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(o))}):(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]);const n=new w.K({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=a,this.memberRelationshipTypes=i,this.dataManager=n}load(e){const t=async()=>{const e=[],t=[];this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await(0,k.i)(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(e=>{e.useAllData=!1}),await this._initializeDiagram(),this.layers.forEach(a=>{t.push(a.refreshCachedQueryEngine()),e.push(new Promise(e=>{a.on("layerview-create",()=>{e(null)})}))}),this.tables.forEach(e=>{t.push(e.refreshCachedQueryEngine())}),await Promise.all(t)};return this.addResolvingPromise(new Promise(a=>{(0,x.fetchKnowledgeGraph)(this.url).then(async i=>{i.dataModel.entityTypes?.forEach(e=>{e.name&&this._graphTypeLookup.set(e.name,e)}),i.dataModel.relationshipTypes?.forEach(e=>{e.name&&this._graphTypeLookup.set(e.name,e)});const o=this.linkChart?.linkChartProperties;if(6===o?.originIdOf("entitiesUrl")&&(this.membershipModified=!1,this._originalInclusionList=await n.c.fetchAndConvertSerializedLinkChart({entitiesUrl:o?.entitiesUrl,relationshipsUrl:o?.relationshipsUrl}),this._alignLayersDataModelAndInclusionDefinition(i.dataModel),this.initializationLinkChartConfig={layoutSettings:o?.layoutSettings??void 0,layoutMode:(0,C.c)(o.layoutType)}),this._initializeLayerProperties({knowledgeGraph:i,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach(e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})}),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach(e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})})),this.dataPreloadedInLocalCache){const e=w.S.getInstance();for(const[t,a]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions??[])for(const i of a.members?.values()??[]){const a=e.readFromStoreById(`${t}__${i.id}`);a&&(0,l.g)(this.dataManager.sublayerCaches,t,()=>new Map).set(i.id,a)}await t()}else{const a="geographic-organic-standard"===this.initializationLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,a,!0).then(async()=>{(0,d.Te)(e),await t()}))}a(null)})})),Promise.resolve(this)}set initializationInclusionModeDefinition(e){"loaded"!==this.loadStatus&&"failed"!==this.loadStatus?this._set("initializationInclusionModeDefinition",e):r.L.getLogger(this).error("#initializationInclusionModeDefinition","initializationInclusionModeDefinition cannot be changed after the layer is loaded.")}get linkChart(){return this.parent}async addRecords(e,t){let a=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(a=await(0,C.d)(e,this.dataManager.knowledgeGraph));const i=e.concat(a).filter(e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id));i.length>0&&(this.membershipModified=!0),await this._handleNewRecords(i,t)}async createSublayerForNamedType(e){await this.load();const t=this._graphTypeLookup.get(e);if(!t)throw new s.A("knowledge-graph:missing-type","The specified type does not exist in the knowledge graph.");if(this.dataManager.sublayerCaches.has(e))throw new s.A("knowledge-graph:duplicate-type","The specified type already exists as a sublayer.");this.dataManager.sublayerCaches.set(e,new Map),(0,l.g)(this.sublayerIdsCache,e,()=>new Set);const a=this._createSublayer(t);return"entity"===t.type?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.set(e,{useAllData:!1,members:new Map}),a.geometryType?this.layers.push(a):this.tables.push(a),await(0,k.i)(this,[e]),this._refreshNamedTypes(),a}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:a=!1,overrideMembershipCheck:i=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1,overrideMembershipCheck:!1}){let n=[];for(const t of e)(i||!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.members?.has(t.id))&&n.push(t);if(t){const e=new Set,t=[];for(const t of n)if(this.dataManager.nodeConnectionsLookup.has(t.id))for(const a of this.dataManager.nodeConnectionsLookup.get(t.id))e.add(a);for(const a of e)if(this.dataManager.memberIdTypeLookup.has(a))for(const e of this.dataManager.memberIdTypeLookup.get(a))this.dataManager.relationshipTypeNames.has(e)&&t.push({id:a,typeName:e});n=n.concat(t)}this.dataManager.removeFromLayer(n);for(const e of n)this.sublayerIdsCache.get(e.typeName)?.delete(e.id),this.dataManager.relationshipTypeNames.has(e.typeName)?this.relationshipLinkChartDiagramLookup.delete(e.id):this.entityLinkChartDiagramLookup.delete(e.id);const o=a?void 0:this.getCurrentNodeLocations();await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,{layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:o}),n.length>0&&(this.membershipModified=!0);const s=[];return this.layers.forEach(e=>{s.push(e.refreshCachedQueryEngine())}),await Promise.all(s),this._refreshNamedTypes(),n}async expand(e,t){let a=[];try{const i=await this.dataManager.getConnectedRecordIds(e,t?.relationshipTypeNames,t);a=i.filter(e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)),await this._handleNewRecords(a,t),i.length>0&&(this.membershipModified=!0),(0,d.Te)(t?.signal)}catch(e){throw(0,d.zf)(e)&&a.length>0&&await this.removeRecords(a,{overrideMembershipCheck:!0}),e}return{records:a}}loadLayerAssumingLocalCache(){const e=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.layers.length||0===this.originIdOf("tables")?0===this.originIdOf("layers")?this._createSublayers(e,this.layers,e=>!!e.geometryType):this._updateSublayers(e,this.layers):this.layers=new o.A,this.tables.length||0===this.originIdOf("layers")?0===this.originIdOf("tables")?this._createSublayers(e,this.tables,e=>!e.geometryType):this._updateSublayers(e,this.tables):this.tables=new o.A,this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((e,t)=>{const a=(0,l.g)(this.sublayerIdsCache,t,()=>new Set);e.members?.forEach(({id:e,linkChartLocation:i})=>{if(a.add(e),i){const a="coords"in i&&"lengths"in i?i:(0,L.b)(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e,a):this.entityLinkChartDiagramLookup.set(e,a)}})})}async calculateLinkChartLayout(e="organic-standard",t){const a=[],i=[],n=[];this.dataManager.sublayerCaches.forEach((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach(e=>{a.push({typeName:t,feature:e})}):this.dataManager.relationshipTypeNames.has(t)&&e.forEach(e=>{i.push({typeName:t,feature:e})})}),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const o=new Map,h=new Map,c=new Map,p=new Map,u=new Uint8Array(a.length),y=new Float64Array(a.length),b=new Float64Array(a.length),w=new Float64Array(a.length),k=new Float64Array(a.length),T=new Uint32Array(i.length),N=new Uint32Array(i.length),D=new Float64Array(i.length),v=new Float64Array(i.length),x=[];let _=!1;const I=new g.A({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let E,A="organic-standard",S=0,R=0;const z=C.L.apply;switch(A="geographic-organic-standard"===e?"organic-standard":e,A){case"organic-standard":E=C.k.apply;break;case"organic-community":E=C.j.apply;break;case"hierarchical-bottom-to-top":E=C.i.apply;break;case"radial-root-centric":E=C.h.apply;break;case"tree-left-to-right":E=C.f.apply;break;default:E=C.e.apply}let G=!1;a.forEach(({typeName:a,feature:i})=>{if("chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e&&t?.lockedNodeLocations?.has(i.attributes[M.b])){"geographic-organic-standard"===e&&this.dataManager.geographicLookup.has(a)?u[S]=2:u[S]=0;const n=t.lockedNodeLocations.get(i.attributes[M.b]);y[S]=n.x,b[S]=n.y}else if("geographic-organic-standard"===e&&this.dataManager.geographicLookup.has(a)){u[S]=2;let e=null;const t=i.attributes[this.dataManager.geographicLookup.get(a).name],n=this.dataManager.geographicLookup.get(a)?.geometryType;switch(n){case"esriGeometryPoint":y[S]=t?.x,b[S]=t?.y;break;case"esriGeometryPolygon":e=t?.centroid,null!=e?.x&&null!=e?.y?(y[S]=e.x,b[S]=e.y):u[S]=1;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(y[S]=e.x,b[S]=e.y):u[S]=1;break;default:u[S]=1}(null==y[S]||null==b[S]||Number.isNaN(y[S])||Number.isNaN(b[S]))&&(u[S]=1,y[S]=0,b[S]=0)}else if("chronological-mono-timeline"===e||"chronological-multi-timeline"===e){!G&&t?.lockedNodeLocations?.has(i.attributes[M.b])&&(G=!0);const e=t?.timeInfoByTypeName?.get(a),n=e?.startField,o=n&&e?.startField?i.attributes[n]:null;w[S]=o?new Date(o).getTime():NaN;const s=e?.endField,r=s&&e?.endField?i.attributes[s]:null;k[S]=r?new Date(r).getTime():NaN,y[S]=0,b[S]=0,u[S]=1}else u[S]=1,y[S]=0,b[S]=0;p.set(i.attributes[M.b],S),x[S]={feature:i,typeName:a},S++}),G&&r.L.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let P=!1;const F=new Map;i.forEach(a=>{const i=a.feature.attributes[M.s],o=a.feature.attributes[M.a],s=p.get(i),r=p.get(o),l=t?.timeInfoByTypeName?.get(a.typeName),h=t?.timeInfoByTypeName?l?.startField:null,d=h?a.feature.attributes[h]:null,c=l?.endField,u=c?a.feature.attributes[c]:null;if(void 0!==s&&void 0!==r){let t=i+"-"+o;"chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e||(t=t+"-"+d+"-"+u);const l=F.get(t),h=l?.has(a.typeName);h||(T[R]=s,N[R]=r,"chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e||(D[R]=d?new Date(d).getTime():NaN,v[R]=u?new Date(u).getTime():NaN),void 0===l?F.set(t,new Map([[a.typeName,R]])):l.set(a.typeName,R),R++),n.push(a)}else P=!0,this.relationshipLinkChartDiagramLookup.set(i,null)}),P&&r.L.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const O=this._validateOrganicLayoutSettings(e,t?.layoutSettings?.organicLayoutSettings),B=this._convertValidatedOrganicSettingsToCalculationSettings(O);await(0,C.l)();let Z=1,U=null;if("chronological-mono-timeline"===e||"chronological-multi-timeline"===e){let a;({status:Z,links:U,graphics:a}=z(()=>t?.signal?.aborted??!1,u,y,b,w,k,T.subarray(0,R),N.subarray(0,R),D.subarray(0,R),v.subarray(0,R),"chronological-multi-timeline"===e,t?.layoutSettings?.chronologicalLayoutSettings)),0===Z&&(this.chronologicalAuxiliaryGraphics=a)}else({status:Z,links:U}=E(()=>t?.signal?.aborted??!1,u,y,b,T.subarray(0,R),N.subarray(0,R),B.computationBudgetTime,B.idealEdgeLengthMultiplier,B.repulsionRadiusMultiplier));if((0,d.Te)(t?.signal),1===Z)throw new s.A("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");if(2===Z)throw(0,d.NK)();for(let e=0;e<x.length;e++){if(b[e]>84.9999?b[e]=84.9999:b[e]<-84.9999&&(b[e]=-84.9999),y[e]>179.9999?y[e]=179.9999:y[e]<-179.9999&&(y[e]=-179.9999),x[e].feature.attributes[M.d]=new m.A(y[e],b[e]),o.has(x[e].typeName)){const t=o.get(x[e].typeName);t?.set(x[e].feature.attributes[M.b],x[e].feature)}else{const t=new Map;t.set(x[e].feature.attributes[M.b],x[e].feature),o.set(x[e].typeName,t)}c.set(x[e].feature.attributes[M.b],x[e].feature);const t=(0,L.b)(x[e].feature.attributes[M.d]);this.entityLinkChartDiagramLookup.set(x[e].feature.attributes[M.b],x[e].feature.attributes[M.d]?t:null);const a=(0,l.g)(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,x[e].typeName,()=>({useAllData:!1,members:new Map}));(0,l.g)(a.members,x[e].feature.attributes[M.b],()=>({id:x[e].feature.attributes[M.b],linkChartLocation:void 0})).linkChartLocation=x[e].feature.attributes[M.d];const{x:i,y:n}=x[e].feature.attributes[M.d];if(_)I.xmin=Math.min(I.xmin,i),I.xmax=Math.max(I.xmax,i),I.ymin=Math.min(I.ymin,n),I.ymax=Math.max(I.ymax,n);else{const e=1e-7;I.xmin=i-e,I.xmax=i+e,I.ymin=n-e,I.ymax=n+e,_=!0}}if(this.linkChartExtent.xmin=I.xmin,this.linkChartExtent.xmax=I.xmax,this.linkChartExtent.ymin=I.ymin,this.linkChartExtent.ymax=I.ymax,!U)throw new s.A("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const j=new Map,$=new Map,Q=new Map,W=new Set;for(let a=0;a<n.length;a++){const i=[],o=n[a],s=o.feature.attributes[M.s],d=o.feature.attributes[M.a];let u=s+"-"+d;if("chronological-mono-timeline"===e||"chronological-multi-timeline"===e){const e=t?.timeInfoByTypeName?.get(o.typeName),a=t?.timeInfoByTypeName?e?.startField:null,i=a?o.feature.attributes[a]:null,n=e?.endField;u+="-"+i+"-"+(n?o.feature.attributes[n]:null)}const y=F.get(u).get(o.typeName),g=0===y?0:U?.vertexEndIndex[y-1];if(!W.has(y)){if(W.add(y),2===U.types[y]){const e=[U.vertices[2*g],U.vertices[2*g+1]],t=[U.vertices[2*(g+1)],U.vertices[2*(g+1)+1]],a=[.5*(e[0]+t[0]),.5*(e[1]+t[1])],n=[a[0]-e[0],a[1]-e[1]],o=[a[0]+n[1],a[1]-n[0]],s=[a[0]-n[1],a[1]+n[0]];i.push(e),i.push(o),i.push(t),i.push(s),i.push(e)}else{if(0!==U.types[y]){r.L.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let e=g;e<U.vertexEndIndex[y];e++)i.push([U.vertices[2*e],U.vertices[2*e+1]])}if("chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e){const e=x[p.get(s)]?.feature.attributes[M.d],t=x[p.get(d)]?.feature.attributes[M.d];i[0][0]===e.x&&i[0][1]===e.y||(i[0]=[e.x,e.y]),i[i.length-1][0]===t.x&&i[i.length-1][1]===t.y||(i[i.length-1]=[t.x,t.y])}for(let e=1;e<i.length-1;e++)i[e][1]>85.5?i[e][1]=85.5:i[e][1]<-85.5&&(i[e][1]=-85.5),i[e][0]>179.9999?i[e][0]=179.9999:i[e][0]<-179.9999&&(i[e][0]=-179.9999);j.has(u)?j.get(u).push(i):j.set(u,[i])}const m=j.get(u);$.has(u)||($.set(u,new Map),Q.set(u,new Map));const b=$.get(u),w=Q.get(u);b.has(o.typeName)||(b.set(o.typeName,m.shift()),w.set(o.typeName,0));const k=b.get(o.typeName);w.set(o.typeName,w.get(o.typeName)+1);const C=new f.A({paths:[k]});if(o.feature.attributes[M.d]=C,h.has(o.typeName)){const e=h.get(o.typeName);e?.set(o.feature.attributes[M.b],o.feature)}else{const e=new Map;e.set(o.feature.attributes[M.b],o.feature),h.set(o.typeName,e)}c.set(o.feature.attributes[M.b],o.feature);const T=(0,L.b)(o.feature.attributes[M.d]);this.relationshipLinkChartDiagramLookup.set(o.feature.attributes[M.b],o.feature.attributes[M.d]?T:null);const N=(0,l.g)(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,o.typeName,()=>({useAllData:!1,members:new Map}));(0,l.g)(N.members,o.feature.attributes[M.b],()=>({id:o.feature.attributes[M.b],linkChartLocation:void 0})).linkChartLocation=T}for(const e of n)e.feature.attributes[M.e]=Q.get(e.feature.attributes[M.s]+"-"+e.feature.attributes[M.a])?.get(e.typeName)??null;return this._currentLinkChartConfig={layoutMode:e,layoutSettings:t?.layoutSettings?.clone()},{nodes:o,links:h,idMap:c}}async applyNewLinkChartLayout(e="organic-standard",t){const a=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach(e=>{a.push(e.refreshCachedQueryEngine())}),this.membershipModified=!0,await Promise.all(a),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;for(const[t,a]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.entries()??[])this.dataManager.relationshipTypeNames.has(t)||a?.members?.forEach(t=>{const a=t.linkChartLocation;let i;const n=t.id;a&&(i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]},e.set(n,new m.A({x:i.x,y:i.y})))});return e}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach(e=>{t.push(e.refreshCachedQueryEngine())}),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e,t){if(!e.length)return{records:[]};let a=[];try{let i=[];for(const e of this.dataManager.relationshipTypeNames){const t=this.sublayerIdsCache.get(e);t&&(i=i.concat(Array.from(t.keys())))}a=await this.dataManager.getRelationshipsBetweenNodes(e,i,t),await this._handleNewRecords(a,t),(0,d.Te)(t)}catch(e){throw(0,d.zf)(e)&&this.removeRecords(a),e}return{records:a}}async connectFromEntities(e,t){if(!e.length)return{records:[]};let a=[];try{let i=[];for(const e of this.dataManager.relationshipTypeNames){const t=this.sublayerIdsCache.get(e);t&&(i=i.concat(Array.from(t.keys())))}let n=[];for(const e of this.dataManager.entityTypeNames){const t=this.sublayerIdsCache.get(e);t&&(n=n.concat(Array.from(t)))}a=await this.dataManager.getRelationshipsFromNodes(e,n,i,t),await this._handleNewRecords(a,t),a.length>0&&(this.membershipModified=!0),(0,d.Te)(t)}catch(e){throw(0,d.zf)(e)&&this.removeRecords(a),e}return{records:a}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(e="organic-standard",t){const a=new Map;this.layers.forEach(e=>{a.set(e.objectType.name,e.timeInfo)}),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:a,...t}),this.linkChart?.handleChronologicalOverlay()}async _handleNewRecords(e,t){const a=new Set,i=[],n=this.layers.concat(this.tables);for(const t of e)this._graphTypeLookup.has(t.typeName)&&(!1===n.some(e=>e.objectType.name===t.typeName)&&(this.dataManager.sublayerCaches.set(t.typeName,new Map),a.add(t.typeName)),(0,l.g)(this.sublayerIdsCache,t.typeName,()=>new Set).add(t.id),i.push(t));this.dataManager.addToLayer(i);for(const e of a){const t=this._graphTypeLookup.get(e);if(t){const a=this._createSublayer(t);"entity"===t.type?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),a.geometryType?this.layers.push(a):this.tables.push(a)}}await(0,k.i)(this,Array.from(a),t),await this.dataManager.refreshCacheContent(e.map(e=>e.id),void 0,void 0,void 0,t);const o={layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:new Map};for(const[e,t]of this.entityLinkChartDiagramLookup.entries())t&&o.lockedNodeLocations.set(e,new m.A(t.coords[0],t.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,o)}_createSublayers(e,t,a){e.forEach(e=>{const i=this._createSublayer(e);a(i)&&t.push(i),this._updateSublayerCaches(e)})}_updateSublayers(e,t){t.forEach(t=>{t.parentCompositeLayer=this;const a=e.find(e=>e.type===t.graphType&&e.name===t.graphTypeName);a&&(t.objectType=a,t.read({title:a.name},{origin:"service"}),this._updateSublayerCaches(a))})}_updateSublayerCaches({name:e}){if(!e)return;const t=this.dataManager.sublayerCaches;t.has(e)||t.set(e,new Map)}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=3&&e<7}async _initializeDiagram(){this.initializationLinkChartConfig?this.initializationLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((e,t)=>{e?.members?.forEach(e=>{const a=e.linkChartLocation;let i;const n=e.id;if(!a)return;i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]};const o=(0,L.b)(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(n,o):this.entityLinkChartDiagramLookup.set(n,o),this.linkChartExtent.xmin>i.x&&(this.linkChartExtent.xmin=i.x),this.linkChartExtent.xmax<i.x&&(this.linkChartExtent.xmax=i.x),this.linkChartExtent.ymin>i.y&&(this.linkChartExtent.ymin=i.y),this.linkChartExtent.ymax<i.y&&(this.linkChartExtent.ymax=i.y)})}),this.memberRelationshipTypes.forEach(e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach(e=>{const t=this.relationshipLinkChartDiagramLookup.get(e.attributes[M.s]),a=this.relationshipLinkChartDiagramLookup.get(e.attributes[M.a]);if(t&&a){const i=(0,L.b)(new f.A({paths:[[[t.coords[0],t.coords[1]],[a.coords[0],a.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(e.attributes[M.b],i)}else this.relationshipLinkChartDiagramLookup.set(e.attributes[M.b],null)})})):await this._calculateLayoutWithSublayerTimeInfo(this.initializationLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.initializationLinkChartConfig||{}}):await this._calculateLayoutWithSublayerTimeInfo("organic-standard",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateOrganicLayoutSettings(e,t){const a=e=>"number"==typeof e&&!isNaN(e),i=e=>a(e)&&e>=0,n={};if(!new Set(["organic-standard","organic-community","geographic-organic-standard","chronological-multi-timeline","chronological-mono-timeline"]).has(e)||!t)return n;const{computationBudgetTime:o,autoRepulsionRadius:s,repulsionRadiusMultiplier:l,absoluteIdealEdgeLength:h,multiplicativeIdealEdgeLength:d,idealEdgeLengthType:c}=t;var p,u,y;return a(p=o)&&p>=1?n.computationBudgetTime=o:o&&r.L.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),n.autoRepulsionRadius=s,!s&&a(u=l)&&u>=1?n.repulsionRadiusMultiplier=l:s||(n.autoRepulsionRadius=!0,r.L.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting")),"geographic-organic-standard"===e&&(y=c,Object.values(_).includes(y)?n.idealEdgeLengthType=c:void 0!==c&&r.L.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),"absolute-value"===c&&i(h)?n.absoluteIdealEdgeLength=h:"absolute-value"===c&&void 0!==h?r.L.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting"):"multiplier"===c&&i(d)?n.multiplicativeIdealEdgeLength=d:"multiplier"===c&&void 0!==d&&r.L.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),n}_convertValidatedOrganicSettingsToCalculationSettings(e){let t=e.idealEdgeLengthType===_.ABSOLUTE?e.absoluteIdealEdgeLength:e.multiplicativeIdealEdgeLength;return e.idealEdgeLengthType===_.ABSOLUTE&&(void 0===t?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime??void 0,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier&&!e.autoRepulsionRadius?e.repulsionRadiusMultiplier:void 0,idealEdgeLengthMultiplier:t}}_createSublayer(e){return new k.A({objectType:e,parentCompositeLayer:this,graphType:e.type})}_handleSublayersChange(e,t){t&&(t.forEach(e=>{e.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(e=>{e.parent=this}),this.addHandles([e.on("after-add",({item:e})=>{e.parent=this}),e.on("after-remove",({item:e})=>{e.parent=null})],"sublayers-owner"))}_alignLayersDataModelAndInclusionDefinition(e){const t=new Set((e.entityTypes??[]).map(e=>e.name).concat((e.relationshipTypes??[]).map(e=>e.name))),a=new Set((e.entityTypes??[]).map(e=>e.name)),i=new Set((e.relationshipTypes??[]).map(e=>e.name));if(this.layers){for(const e of this.layers)!e.graphType&&t.has(e.graphTypeName)&&(e.graphType=a.has(e.graphTypeName)?"entity":"relationship");const e=this.layers.filter(e=>t.has(e.graphTypeName)&&("entity"===e.graphType?a.has(e.graphTypeName):i.has(e.graphTypeName)));this.setAtOrigin("layers",e,(0,y.i)(this.originIdOf("layers")))}else this.layers=new o.A;if(this.layers&&this._originalInclusionList){const e=new Set(this._originalInclusionList.namedTypeDefinitions.keys()),t=this.tables?.map(e=>e.graphTypeName)??[],a=this.layers.map(e=>e.graphTypeName).concat(t);for(const t of a)e.has(t)||this._originalInclusionList.namedTypeDefinitions.set(t,{useAllData:!1,members:new Map});const i=[];for(const e of this._originalInclusionList.namedTypeDefinitions.keys())a.includes(e)||(r.L.getLogger(this).warn(`A named type, ${e}, was in the serialized feature collection but did not have a sublayer config in the item, so will be removed`),i.push(e));for(const e of i)this._originalInclusionList.namedTypeDefinitions.delete(e)}}};(0,i._)([(0,p.MZ)(v.u)],I.prototype,"url",void 0),(0,i._)([(0,p.MZ)()],I.prototype,"dataPreloadedInLocalCache",void 0),(0,i._)([(0,p.MZ)()],I.prototype,"initializationLinkChartConfig",void 0),(0,i._)([(0,p.MZ)()],I.prototype,"membershipModified",void 0),(0,i._)([(0,p.MZ)()],I.prototype,"dataManager",void 0),(0,i._)([(0,p.MZ)()],I.prototype,"initializationInclusionModeDefinition",null),(0,i._)([(0,p.MZ)()],I.prototype,"knowledgeGraph",void 0),(0,i._)([(0,p.MZ)({type:o.A.ofType(k.A),json:{write:{ignoreOrigin:!0}}})],I.prototype,"layers",void 0),(0,i._)([(0,p.MZ)({readOnly:!0})],I.prototype,"linkChart",null),(0,i._)([(0,p.MZ)()],I.prototype,"entityLinkChartDiagramLookup",void 0),(0,i._)([(0,p.MZ)()],I.prototype,"relationshipLinkChartDiagramLookup",void 0),(0,i._)([(0,p.MZ)()],I.prototype,"linkChartExtent",void 0),(0,i._)([(0,p.MZ)()],I.prototype,"memberEntityTypes",void 0),(0,i._)([(0,p.MZ)()],I.prototype,"memberRelationshipTypes",void 0),(0,i._)([(0,p.MZ)({type:["LinkChartLayer"]})],I.prototype,"operationalLayerType",void 0),(0,i._)([(0,p.MZ)()],I.prototype,"sublayerIdsCache",void 0),(0,i._)([(0,p.MZ)({type:o.A.ofType(k.A),json:{write:{ignoreOrigin:!0}}})],I.prototype,"tables",void 0),(0,i._)([(0,p.MZ)({json:{read:!1}})],I.prototype,"type",void 0),(0,i._)([(0,p.MZ)({json:{read:!1}})],I.prototype,"chronologicalAuxiliaryGraphics",void 0),I=(0,i._)([(0,u.$)("esri.layers.LinkChartLayer")],I);const E=I}}]);