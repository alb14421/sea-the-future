"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[8303],{68303:(e,t,n)=>{n.r(t),n.d(t,{invokeGeometryOp:()=>c});var i=n(77037);function r(e,t){let n;return{loaded:!1,load:()=>n??=t().then(t=>{o[e]={loaded:!0,execute:t}})}}function a(e){return null==e?null:e.toJSON()}n(44600),n(32816),n(84699),n(59121),n(32773),n(29298),n(20266),n(90740),n(36544),n(85176),n(93181),n(13671),n(40499),n(6407),n(69421),n(50704),n(91047),n(48064),n(2160),n(99924),n(41390),n(36555),n(58498),n(35819),n(45371),n(61532),n(80959),n(19247),n(36172),n(49877),n(7969),n(69763),n(93804),n(96221),n(18683),n(64604),n(29512),n(99063),n(1178),n(56273),n(64752),n(48844),n(29208),n(36533),n(84200),n(97827),n(18169),n(20762),n(48402),n(16699),n(67504);const o={disjoint:r("disjoint",()=>Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(862)]).then(n.bind(n,90862)).then(e=>e.execute)),intersects:r("intersects",()=>Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(3568)]).then(n.bind(n,53568)).then(e=>e.execute)),touches:r("touches",()=>Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(9127)]).then(n.bind(n,39127)).then(e=>e.execute)),crosses:r("crosses",()=>Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(6324)]).then(n.bind(n,46324)).then(e=>e.execute)),within:r("within",()=>Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(561)]).then(n.bind(n,60561)).then(e=>e.execute)),contains:r("contains",()=>Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(1131)]).then(n.bind(n,81131)).then(e=>e.execute)),overlaps:r("overlaps",()=>Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(678)]).then(n.bind(n,90678)).then(e=>e.execute)),equals:r("equals",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(6547)]).then(n.bind(n,56547)).then(e=>e.e);return(t,n)=>e.execute((0,i.rS)(t),(0,i.rS)(n))}),relate:r("relate",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(7779)]).then(n.bind(n,17779)).then(e=>e.r);return(t,n,r)=>e.execute((0,i.rS)(t),(0,i.rS)(n),r)}),intersection:r("intersection",()=>Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(3947)]).then(n.bind(n,3947)).then(e=>e.execute)),union:r("union",()=>Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(4047)]).then(n.bind(n,64047)).then(e=>e.executeMany)),difference:r("difference",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(8957)]).then(n.bind(n,78957)).then(e=>e.d);return(t,n)=>a(e.execute((0,i.rS)(t),(0,i.rS)(n)))}),symmetricDifference:r("symmetricDifference",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(5448)]).then(n.bind(n,95448)).then(e=>e.s);return(t,n)=>a(e.execute((0,i.rS)(t),(0,i.rS)(n)))}),clip:r("clip",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(2696)]).then(n.bind(n,42696)).then(e=>e.c);return(t,n)=>a(e.execute((0,i.rS)(t),(0,i.rS)(n)))}),cut:r("cut",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(9280)]).then(n.bind(n,39280)).then(e=>e.c);return(t,n)=>e.execute((0,i.rS)(t),(0,i.rS)(n)).map(e=>a(e))}),area:r("area",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(2163)]).then(n.bind(n,12163)).then(e=>e.a),{convertFromSpatialReferenceUnit:t,toAreaUnit:r}=await n.e(1144).then(n.bind(n,71144));return(n,a)=>{const o=e.execute((0,i.rS)(n));return t(n.spatialReference,r(a),o)}}),geodeticArea:r("geodeticArea",async()=>{const e=await n.e(7669).then(n.bind(n,87669)).then(e=>e.g),{convert:t,squareMeters:r,toAreaUnit:a}=await n.e(1144).then(n.bind(n,71144));return await e.load(),(n,o,c)=>{const s=e.execute((0,i.rS)(n),{curveType:c});return t(r,a(o),s)}}),length:r("length",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(5989)]).then(n.bind(n,48370)),{convertFromSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(1144).then(n.bind(n,71144));return(n,r)=>{const a=e.execute(n);return t(n.spatialReference,i(r),a)}}),geodeticLength:r("geodeticLength",async()=>{const e=await n.e(7052).then(n.bind(n,27052)).then(e=>e.g),{convert:t,meters:r,toLengthUnit:a}=await n.e(1144).then(n.bind(n,71144));return await e.load(),(n,o,c)=>{const s=e.execute((0,i.rS)(n),{curveType:c});return t(r,a(o),s)}}),distance:r("distance",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(2917)]).then(n.bind(n,42917)).then(e=>e.d),{convertFromSpatialReferenceUnit:t,toLengthUnit:r}=await n.e(1144).then(n.bind(n,71144));return(n,a,o)=>{const c=e.execute((0,i.rS)(n),(0,i.rS)(a));return t(n.spatialReference,r(o),c)}}),densify:r("densify",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(1182)]).then(n.bind(n,21182)).then(e=>e.d),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await n.e(1144).then(n.bind(n,71144));return(n,o,c)=>(o=t(r(c),n.spatialReference,o),a(e.execute((0,i.rS)(n),o)))}),geodeticDensify:r("geodeticDensify",async()=>{const e=await n.e(4604).then(n.bind(n,14604)).then(e=>e.g),{convert:t,meters:r,toLengthUnit:o}=await n.e(1144).then(n.bind(n,71144));return await e.load(),(n,c,s,l)=>(c=t(o(s),r,c),a(e.execute((0,i.rS)(n),c,{curveType:l})))}),generalize:r("generalize",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(7304)]).then(n.bind(n,27304)).then(e=>e.g),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await n.e(1144).then(n.bind(n,71144));return(n,o,c,s)=>(o=t(r(c),n.spatialReference,o),a(e.execute((0,i.rS)(n),o,s)))}),buffer:r("buffer",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(4812),n.e(2708)]).then(n.bind(n,92708)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(1144).then(n.bind(n,71144));return(n,r,a)=>(r=t(i(a),n.spatialReference,r),e.execute(n,r))}),geodesicBuffer:r("geodesicBuffer",async()=>{const e=await n.e(6963).then(n.bind(n,76963)),{convert:t,meters:i,toLengthUnit:r}=await n.e(1144).then(n.bind(n,71144));return await e.load(),(n,a,o,c)=>(a=t(r(o),i,a),e.execute(n,a,{curveType:c}))}),offset:r("offset",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(6478)]).then(n.bind(n,4097)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(1144).then(n.bind(n,71144));return(n,r,a,o)=>(r=t(i(a),n.spatialReference,r),e.execute(n,r,o))}),rotate:r("rotate",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(1881)]).then(n.bind(n,11881)),{default:t}=await Promise.all([n.e(3160),n.e(4981),n.e(4351)]).then(n.bind(n,4351));return(n,r,o,c)=>{const s=(new t).rotate(r,o,c);return a(e.execute((0,i.rS)(n),s))}}),centroid:r("centroid",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(6342)]).then(n.bind(n,86342)).then(e=>e.c);return t=>a(e.execute((0,i.rS)(t)))}),labelPoint:r("labelPoint",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(2186)]).then(n.bind(n,2186)).then(e=>e.l);return t=>a(e.execute((0,i.rS)(t)))}),simplify:r("simplify",()=>Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(1918)]).then(n.bind(n,9537)).then(e=>e.execute)),isSelfIntersecting:r("isSelfIntersecting",async()=>{const{NonSimpleResult:e}=await n.e(7870).then(n.bind(n,77870)),t=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(7698)]).then(n.bind(n,77698)),r=new Set([5,6,7,10,11,12]);return n=>{const a=new e;return!t.isSimple((0,i.rS)(n),a)&&r.has(a.m_reason)}}),isSimple:r("isSimple",()=>Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(1918)]).then(n.bind(n,9537)).then(e=>e.isSimple)),convexHull:r("convexHull",()=>Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(1006)]).then(n.bind(n,81006)).then(e=>e.execute)),getNearestCoordinate:r("getNearestCoordinate",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(5237)]).then(n.bind(n,35237)).then(e=>e.p);return(t,n,r)=>{const o=e.getNearestCoordinate((0,i.rS)(t),(0,i.rS)(n),r);return{...o,coordinate:a(o.coordinate)}}}),getNearestVertex:r("getNearestVertex",async()=>{const e=await Promise.all([n.e(3160),n.e(4981),n.e(6550),n.e(9622),n.e(5237)]).then(n.bind(n,35237)).then(e=>e.p);return(t,n)=>{const r=e.getNearestVertex((0,i.rS)(t),(0,i.rS)(n));return{...r,coordinate:a(r.coordinate)}}})};function c(e,t){const n=o[e];return n.loaded?n.execute.apply(void 0,t):n.load().then(()=>c(e,t))}},77037:(e,t,n)=>{n.d(t,{$B:()=>y,Bi:()=>m,Rg:()=>h,U9:()=>u,ZC:()=>l,fT:()=>d,rS:()=>f,xD:()=>S});var i=n(44600),r=n(2160),a=n(36533),o=n(64752),c=n(84200),s=n(67504);function l(e){return void 0!==e.xmin&&void 0!==e.ymin&&void 0!==e.xmax&&void 0!==e.ymax}function u(e){return void 0!==e.points}function d(e){return void 0!==e.x&&void 0!==e.y}function h(e){return void 0!==e.paths||void 0!==e.curvePaths}function m(e){return void 0!==e.rings||void 0!==e.curveRings}function f(e){return null==e?null:e instanceof r.A?e:d(e)?o.A.fromJSON(e):h(e)?s.A.fromJSON(e):m(e)?c.A.fromJSON(e):u(e)?a.A.fromJSON(e):l(e)?i.A.fromJSON(e):null}function y(e){return e?d(e)?"esriGeometryPoint":h(e)?"esriGeometryPolyline":m(e)?"esriGeometryPolygon":l(e)?"esriGeometryEnvelope":u(e)?"esriGeometryMultipoint":null:null}n(32816),n(84699),n(59121),n(32773),n(29298),n(20266),n(90740),n(36544),n(85176),n(93181),n(13671),n(40499),n(6407),n(69421),n(50704),n(91047),n(48064),n(7969),n(41390),n(36555),n(58498),n(35819),n(45371),n(61532),n(80959),n(19247),n(36172),n(99924),n(69763),n(93804),n(96221),n(18683),n(64604),n(29512),n(99063),n(1178),n(56273),n(29208),n(49877),n(48844),n(97827),n(18169),n(20762),n(48402),n(16699);const b={esriGeometryPoint:o.A,esriGeometryPolyline:s.A,esriGeometryPolygon:c.A,esriGeometryEnvelope:i.A,esriGeometryMultipoint:a.A,esriGeometryMultiPatch:c.A};function S(e){return e&&b[e]||null}}}]);