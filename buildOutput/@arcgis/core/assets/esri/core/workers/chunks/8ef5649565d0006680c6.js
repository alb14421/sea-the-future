"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[398],{11443:(e,t,r)=>{r.d(t,{O:()=>i});class i{constructor(){this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const e=new i;return e.globalIdFieldName=this.globalIdFieldName,e.geohashFieldName=this.geohashFieldName,e.geometryProperties=this.geometryProperties,e.geometryType=this.geometryType,e.spatialReference=this.spatialReference,e.hasZ=this.hasZ,e.hasM=this.hasM,e.features=this.features,e.fields=this.fields,e.transform=this.transform,e.exceededTransferLimit=this.exceededTransferLimit,e.uniqueIdField=this.uniqueIdField,e.queryGeometry=this.queryGeometry,e.queryGeometryType=this.queryGeometryType,e}}},12109:(e,t,r)=>{r.d(t,{a:()=>l,e:()=>o});var i=r(13978),s=r(68140),n=r(8824),a=r(73600);async function o(e,t,r,i){const s=await l(e,t,r,i);return n.A.fromJSON(s)}async function l(e,t,r,n){const o=(0,i.p)(e),l={...r},u=a.A.from(t),{data:p}=await(0,s.e)(o,u,u.sourceSpatialReference,l,n);return p}},18385:(e,t,r)=>{r.d(t,{a:()=>n,c:()=>a});var i=r(6407),s=r(80959);async function n(e,t,r){let n;try{n=await createImageBitmap(e)}catch(e){throw new i.A("request:server",`Unable to load ${t}`,{url:t,error:e})}return(0,s.Te)(r),n}async function a(e,t,r,n,a){let o;try{o=await createImageBitmap(e)}catch(e){throw new i.A("request:server",`Unable to load tile ${t}/${r}/${n}`,{error:e,level:t,row:r,col:n})}return(0,s.Te)(a),o}},48689:(e,t,r)=>{r.d(t,{O:()=>p,a:()=>v,b:()=>x,p:()=>O});var i=r(6407),s=r(53564),n=r(96153),a=r(69763),o=r(58003),l=r(11443);const u=["esriGeometryPoint","esriGeometryMultipoint","esriGeometryPolyline","esriGeometryPolygon"];class p{constructor(e){this._options=e,this.geometryTypes=u,this._coordinatePtr=0,this._vertexDimension=0}createFeatureResult(){return new l.O}prepareFeatures(e){this._vertexDimension=2,e.hasZ&&this._vertexDimension++,e.hasM&&this._vertexDimension++}finishFeatureResult(e){if(!e?.features||!e.hasZ||!this._options.sourceSpatialReference||!e.spatialReference||(0,a.p)(e.spatialReference,this._options.sourceSpatialReference)||e.spatialReference.vcsWkid)return;const t=(0,a.E)(this._options.sourceSpatialReference)/(0,a.E)(e.spatialReference);if(1!==t)for(const r of e.features){if(!(0,o.h)(r))continue;const e=r.geometry.coords;for(let r=2;r<e.length;r+=3)e[r]*=t}}addFeature(e,t){e.features.push(t)}createFeature(){return new o.O(null,{},null,0)}createSpatialReference(){return{wkid:0}}createGeometry(){return new n.O}addField(e,t){e.fields.push(t)}allocateCoordinates(e){e.coords.length=e.lengths.reduce((e,t)=>e+t,0)*this._vertexDimension,this._coordinatePtr=0}addCoordinate(e,t){e.coords[this._coordinatePtr++]=t}addCoordinatePoint(e,t){e.coords.push(t)}addLength(e,t){e.lengths.push(t)}addQueryGeometry(e,t){e.queryGeometry=t.queryGeometry,e.queryGeometryType=t.queryGeometryType}createPointGeometry(){return new n.O}}const c=["esriFieldTypeSmallInteger","esriFieldTypeInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeString","esriFieldTypeDate","esriFieldTypeOID","esriFieldTypeGeometry","esriFieldTypeBlob","esriFieldTypeRaster","esriFieldTypeGUID","esriFieldTypeGlobalID","esriFieldTypeXML","esriFieldTypeBigInteger","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"],m=["sqlTypeBigInt","sqlTypeBinary","sqlTypeBit","sqlTypeChar","sqlTypeDate","sqlTypeDecimal","sqlTypeDouble","sqlTypeFloat","sqlTypeGeometry","sqlTypeGUID","sqlTypeInteger","sqlTypeLongNVarchar","sqlTypeLongVarbinary","sqlTypeLongVarchar","sqlTypeNChar","sqlTypeNVarchar","sqlTypeOther","sqlTypeReal","sqlTypeSmallInt","sqlTypeSqlXml","sqlTypeTime","sqlTypeTimestamp","sqlTypeTimestamp2","sqlTypeTinyInt","sqlTypeVarbinary","sqlTypeVarchar"],d=["upperLeft","lowerLeft"];function h(e){return e>=c.length?null:c[e]}function y(e){return e>=m.length?null:m[e]}function g(e){return e>=d.length?null:d[e]}function f(e,t){return t>=e.geometryTypes.length?null:e.geometryTypes[t]}function w(e,t,r){const i=e.asUnsafe(),s=t.createPointGeometry(r);for(;i.next();)switch(i.tag()){case 3:{const e=i.getUInt32(),r=i.pos()+e;let n=0;for(;i.pos()<r;)t.addCoordinatePoint(s,i.getSInt64(),n++);break}default:i.skip()}return s}function _(e,t,r){const i=e.asUnsafe(),s=t.createGeometry(r),n=2+(r.hasZ?1:0)+(r.hasM?1:0);for(;i.next();)switch(i.tag()){case 2:{const e=i.getUInt32(),r=i.pos()+e;let n=0;for(;i.pos()<r;)t.addLength(s,i.getUInt32(),n++);break}case 3:{const e=i.getUInt32(),r=i.pos()+e;let a=0;for(t.allocateCoordinates(s);i.pos()<r;)t.addCoordinate(s,i.getSInt64(),a),a++,a===n&&(a=0);break}default:i.skip()}return s}function b(e){const t=e.asUnsafe(),r=new n.O;let i="esriGeometryPoint";for(;t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),i=t.pos()+e;for(;t.pos()<i;)r.lengths.push(t.getUInt32());break}case 3:{const e=t.getUInt32(),i=t.pos()+e;for(;t.pos()<i;)r.coords.push(t.getSInt64());break}case 1:i=u[t.getEnum()];break;default:t.skip()}return{queryGeometry:r,queryGeometryType:i}}function R(e){const t=e.asUnsafe();for(;t.next();)switch(t.tag()){case 1:return t.getString();case 2:return t.getFloat();case 3:return t.getDouble();case 4:return t.getSInt32();case 5:return t.getUInt32();case 6:return t.getInt64();case 7:return t.getUInt64();case 8:return t.getSInt64();case 9:return t.getBool();default:return t.skip(),null}return null}function v(e){const t=e.asUnsafe(),r={type:h(0)};for(;t.next();)switch(t.tag()){case 1:r.name=t.getString();break;case 2:r.type=h(t.getEnum());break;case 3:r.alias=t.getString();break;case 4:r.sqlType=y(t.getEnum());break;case 5:default:t.skip();break;case 6:r.defaultValue=t.getString()}return r}function I(e){const t={},r=e.asUnsafe();for(;r.next();)switch(r.tag()){case 1:t.name=r.getString();break;case 2:t.isSystemMaintained=r.getBool();break;default:r.skip()}return t}function S(e,t,r,i){const s=t.createFeature(r);let n=0;for(;e.next();)switch(e.tag()){case 1:{const t=i[n++].name;s.attributes[t]=e.processMessage(R);break}case 2:s.geometry=e.processMessageWithArgs(_,t,r);break;case 4:s.centroid=e.processMessageWithArgs(w,t,r);break;default:e.skip()}return s}function F(e){const t=[1,1,1,1],r=e.asUnsafe();for(;r.next();)switch(r.tag()){case 1:t[0]=r.getDouble();break;case 2:t[1]=r.getDouble();break;case 4:t[2]=r.getDouble();break;case 3:t[3]=r.getDouble();break;default:r.skip()}return t}function M(e){const t=[0,0,0,0],r=e.asUnsafe();for(;r.next();)switch(r.tag()){case 1:t[0]=r.getDouble();break;case 2:t[1]=r.getDouble();break;case 4:t[2]=r.getDouble();break;case 3:t[3]=r.getDouble();break;default:r.skip()}return t}function x(e){const t={originPosition:g(0)},r=e.asUnsafe();for(;r.next();)switch(r.tag()){case 1:t.originPosition=g(r.getEnum());break;case 2:t.scale=r.processMessage(F);break;case 3:t.translate=r.processMessage(M);break;default:r.skip()}return t}function T(e){const t={},r=e.asUnsafe();for(;r.next();)switch(r.tag()){case 1:t.shapeAreaFieldName=r.getString();break;case 2:t.shapeLengthFieldName=r.getString();break;case 3:t.units=r.getString();break;default:r.skip()}return t}function A(e,t){const r=t.createSpatialReference();for(;e.next();)switch(e.tag()){case 1:r.wkid=e.getUInt32();break;case 5:r.wkt=e.getString();break;case 2:r.latestWkid=e.getUInt32();break;case 3:r.vcsWkid=e.getUInt32();break;case 4:r.latestVcsWkid=e.getUInt32();break;default:e.skip()}return r}function N(e,t){const r=t.createFeatureResult(),i=e.asUnsafe();r.geometryType=f(t,0);let s=!1;for(;i.next();)switch(i.tag()){case 1:r.objectIdFieldName=i.getString();break;case 3:r.globalIdFieldName=i.getString();break;case 4:r.geohashFieldName=i.getString();break;case 5:r.geometryProperties=i.processMessage(T);break;case 7:r.geometryType=f(t,i.getEnum());break;case 8:r.spatialReference=i.processMessageWithArgs(A,t);break;case 10:r.hasZ=i.getBool();break;case 11:r.hasM=i.getBool();break;case 12:r.transform=i.processMessage(x);break;case 9:r.exceededTransferLimit=i.getBool();break;case 13:t.addField(r,i.processMessage(v));break;case 15:s||(t.prepareFeatures(r),s=!0),t.addFeature(r,i.processMessageWithArgs(S,t,r,r.fields));break;case 2:r.uniqueIdField=i.processMessage(I);break;default:i.skip()}return t.finishFeatureResult(r),r}function D(e,t){const r={};let i=null;for(;e.next();)switch(e.tag()){case 4:i=e.processMessageWithArgs(b);break;case 1:r.featureResult=e.processMessageWithArgs(N,t);break;default:e.skip()}return null!=i&&r.featureResult&&t.addQueryGeometry(r,i),r}function O(e,t){const r=function(e,t){try{const r=2,i=new s.P(new Uint8Array(e),new DataView(e)),n={};for(;i.next();)i.tag()===r?n.queryResult=i.processMessageWithArgs(D,t):i.skip();return n}catch(e){throw new i.A("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e})}}(e,t),n=r.queryResult.featureResult,a=r.queryResult.queryGeometry,o=r.queryResult.queryGeometryType;if(n&&n.features&&n.features.length&&n.objectIdFieldName){const e=n.objectIdFieldName;for(const t of n.features)t.attributes&&(t.objectId=t.attributes[e])}return n&&(n.queryGeometry=a,n.queryGeometryType=o),n}},53564:(e,t,r)=>{r.d(t,{P:()=>u});var i=r(32773),s=r(33489),n=r(36555);const a=4294967296,o=new TextDecoder("utf-8"),l=(0,i.h)("safari")||(0,i.h)("ios")?6:(0,i.h)("ff")?12:32;class u{constructor(e,t,r=0,i=(e?e.byteLength:0)){this._tag=0,this._dataType=99,this._init(e,t,r,i)}_init(e,t,r,i){this._data=e,this._dataView=t,this._pos=r,this._end=i}get usedMemory(){return 64+(0,s.e)(this._data)}asUnsafe(){return this}clone(){return new u(this._data,this._dataView,this._pos,this._end)}pos(){return this._pos}move(e){this._pos=e}nextTag(e){for(;;){if(this._pos===this._end)return!1;const t=this._decodeVarint();if(this._tag=t>>3,this._dataType=7&t,!e||e===this._tag)break;this.skip()}return!0}next(){if(this._pos===this._end)return!1;const e=this._decodeVarint();return this._tag=e>>3,this._dataType=7&e,!0}empty(){return this._pos>=this._end}tag(){return this._tag}getInt32(){return this._decodeVarint()}getInt64(){return this._decodeVarint()}getUInt32(){let e=4294967295;if(e=(127&this._data[this._pos])>>>0,this._data[this._pos++]<128)return e;if(e=(e|(127&this._data[this._pos])<<7)>>>0,this._data[this._pos++]<128)return e;if(e=(e|(127&this._data[this._pos])<<14)>>>0,this._data[this._pos++]<128)return e;if(e=(e|(127&this._data[this._pos])<<21)>>>0,this._data[this._pos++]<128)return e;if(e=(e|(15&this._data[this._pos])<<28)>>>0,this._data[this._pos++]<128)return e;throw new Error("Varint overflow")}getUInt64(){return this._decodeVarint()}getSInt32(){const e=this.getUInt32();return e>>>1^-(1&e)}getSInt64(){return this._decodeSVarint()}getBool(){const e=0!==this._data[this._pos];return this._skip(1),e}getEnum(){return this._decodeVarint()}getFixed64(){const e=this._dataView,t=this._pos,r=e.getUint32(t,!0)+e.getUint32(t+4,!0)*a;return this._skip(8),r}getSFixed64(){const e=this._dataView,t=this._pos,r=e.getUint32(t,!0)+e.getInt32(t+4,!0)*a;return this._skip(8),r}getDouble(){const e=this._dataView.getFloat64(this._pos,!0);return this._skip(8),e}getFixed32(){const e=this._dataView.getUint32(this._pos,!0);return this._skip(4),e}getSFixed32(){const e=this._dataView.getInt32(this._pos,!0);return this._skip(4),e}getFloat(){const e=this._dataView.getFloat32(this._pos,!0);return this._skip(4),e}getString(){const e=this._getLength(),t=this._pos,r=this._toString(this._data,t,t+e);return this._skip(e),r}getBytes(){const e=this._getLength(),t=this._pos,r=this._toBytes(this._data,t,t+e);return this._skip(e),r}getLength(){return this._getLengthUnsafe()}processMessageWithArgs(e,t,r,i){const s=this.getMessage(),n=e(s,t,r,i);return s.release(),n}processMessage(e){const t=this.getMessage(),r=e(t);return t.release(),r}getMessage(){const e=this._getLength(),t=u.pool.acquire();return t._init(this._data,this._dataView,this._pos,this._pos+e),this._skip(e),t}release(){u.pool.release(this)}dataType(){return this._dataType}skip(){switch(this._dataType){case 0:this._decodeVarint();break;case 1:this._skip(8);break;case 2:this._skip(this._getLength());break;case 5:this._skip(4);break;default:throw new Error("Invalid data type!")}}skipLen(e){this._skip(e)}_skip(e){if(this._pos+e>this._end)throw new Error("Attempt to skip past the end of buffer!");this._pos+=e}_decodeVarint(){const e=this._data;let t=this._pos,r=0,i=0;if(this._end-t>=10)do{if(i=e[t++],r|=127&i,!(128&i))break;if(i=e[t++],r|=(127&i)<<7,!(128&i))break;if(i=e[t++],r|=(127&i)<<14,!(128&i))break;if(i=e[t++],r|=(127&i)<<21,!(128&i))break;if(i=e[t++],r+=268435456*(127&i),!(128&i))break;if(i=e[t++],r+=34359738368*(127&i),!(128&i))break;if(i=e[t++],r+=4398046511104*(127&i),!(128&i))break;if(i=e[t++],r+=562949953421312*(127&i),!(128&i))break;if(i=e[t++],r+=72057594037927940*(127&i),!(128&i))break;if(i=e[t++],r+=0x8000000000000000*(127&i),!(128&i))break;throw new Error("Varint too long!")}while(0);else{let s=1;for(;t!==this._end&&(i=e[t],128&i);)++t,r+=(127&i)*s,s*=128;if(t===this._end)throw new Error("Varint overrun!");++t,r+=i*s}return this._pos=t,r}_decodeSVarint(){const e=this._data;let t,r=0,i=0;const s=1&e[this._pos];if(i=e[this._pos++],r|=127&i,!(128&i))return s?-(r+1)/2:r/2;if(i=e[this._pos++],r|=(127&i)<<7,!(128&i))return s?-(r+1)/2:r/2;if(i=e[this._pos++],r|=(127&i)<<14,!(128&i))return s?-(r+1)/2:r/2;if(i=e[this._pos++],r|=(127&i)<<21,!(128&i))return s?-(r+1)/2:r/2;if(i=e[this._pos++],r+=268435456*(127&i),!(128&i))return s?-(r+1)/2:r/2;if(i=e[this._pos++],r+=34359738368*(127&i),!(128&i))return s?-(r+1)/2:r/2;if(i=e[this._pos++],r+=4398046511104*(127&i),!(128&i))return s?-(r+1)/2:r/2;if(t=BigInt(r),i=e[this._pos++],t+=0x2000000000000n*BigInt(127&i),!(128&i))return Number(s?-(t+1n)/2n:t/2n);if(i=e[this._pos++],t+=0x100000000000000n*BigInt(127&i),!(128&i))return Number(s?-(t+1n)/2n:t/2n);if(i=e[this._pos++],t+=0x8000000000000000n*BigInt(127&i),!(128&i))return Number(s?-(t+1n)/2n:t/2n);throw new Error("Varint too long!")}_getLength(){if(2!==this._dataType)throw new Error("Not a delimited data type!");return this._decodeVarint()}_getLengthUnsafe(){return this.getUInt32()}_toString(e,t,r){if((r=Math.min(this._end,r))-t>l){const i=e.subarray(t,r);return o.decode(i)}let i="",s="";for(let n=t;n<r;++n){const t=e[n];128&t?s+="%"+t.toString(16):(i+=decodeURIComponent(s)+String.fromCharCode(t),s="")}return s.length&&(i+=decodeURIComponent(s)),i}_toBytes(e,t,r){return r=Math.min(this._end,r),new Uint8Array(e.buffer,t,r-t)}static{this.pool=new n.O(u,void 0,e=>{e._data=null,e._dataView=null})}}},58003:(e,t,r)=>{r.d(t,{O:()=>m,g:()=>a,h:()=>d});var i=r(33489),s=r(96153);function n(e,t){return e?t?4:3:t?3:2}function a(e,t,r,i){if(!t?.lengths.length)return null;e.lengths.length&&(e.lengths.length=0),e.coords.length&&(e.coords.length=0);const s=e.coords,a=[],m=r?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:d,coords:h}=t,y=n(r,i);let g=0;for(const e of d){const t=o(m,h,g,e,r,i);t&&a.push(t),g+=e*y}if(a.sort((e,t)=>{let i=e[2]-t[2];return 0===i&&r&&(i=e[4]-t[4]),i}),a.length){let e=6*a[0][2];s[0]=a[0][0]/e,s[1]=a[0][1]/e,r&&(e=6*a[0][4],s[2]=0!==e?a[0][3]/e:0),(s[0]<m[0]||s[0]>m[1]||s[1]<m[2]||s[1]>m[3]||r&&(s[2]<m[4]||s[2]>m[5]))&&(s.length=0)}if(!s.length){const e=t.lengths[0]?function(e,t,r,i,s){const a=n(i,s);let o=0,m=0+a,d=0,h=0,y=0,g=0;for(let t=0,s=r-1;t<s;t++,o+=a,m+=a){const t=e[o],r=e[o+1],s=e[o+2],n=e[m],a=e[m+1],f=e[m+2],w=i?u(t,r,s,n,a,f):l(t,r,n,a);if(w)if(d+=w,i){const e=c(t,r,s,n,a,f);h+=w*e[0],y+=w*e[1],g+=w*e[2]}else{const e=p(t,r,n,a);h+=w*e[0],y+=w*e[1]}}return d>0?i?[h/d,y/d,g/d]:[h/d,y/d]:r>0?i?[e[0],e[1],e[2]]:[e[0],e[1]]:null}(h,0,d[0],r,i):null;if(!e)return null;s[0]=e[0],s[1]=e[1],r&&e.length>2&&(s[2]=e[2])}return e}function o(e,t,r,i,s,a){const o=n(s,a);let l=r,u=r+o,p=0,c=0,m=0,d=0,h=0;for(let r=0,n=i-1;r<n;r++,l+=o,u+=o){const r=t[l],i=t[l+1],n=t[l+2],a=t[u],o=t[u+1],y=t[u+2];let g=r*o-a*i;d+=g,p+=(r+a)*g,c+=(i+o)*g,s&&(g=r*y-a*n,m+=(n+y)*g,h+=g),r<e[0]&&(e[0]=r),r>e[1]&&(e[1]=r),i<e[2]&&(e[2]=i),i>e[3]&&(e[3]=i),s&&(n<e[4]&&(e[4]=n),n>e[5]&&(e[5]=n))}if(d>0&&(d*=-1),h>0&&(h*=-1),!d)return null;const y=[p,c,.5*d];return s&&(y[3]=m,y[4]=.5*h),y}function l(e,t,r,i){const s=r-e,n=i-t;return Math.sqrt(s*s+n*n)}function u(e,t,r,i,s,n){const a=i-e,o=s-t,l=n-r;return Math.sqrt(a*a+o*o+l*l)}function p(e,t,r,i){return[e+.5*(r-e),t+.5*(i-t)]}function c(e,t,r,i,s,n){return[e+.5*(i-e),t+.5*(s-t),r+.5*(n-r)]}class m{constructor(e=null,t={},r,i,s=0){this.geometry=e,this.attributes=t,this.centroid=r,this.objectId=i,this.displayId=s}static fromJSON(e){const t=e.geometry?s.O.fromJSON(e.geometry):null,r=e.centroid?s.O.fromJSON(e.centroid):null,i=e.objectId;return new m(t,e.attributes,r,i)}weakClone(){const e=new m(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e}clone(){const e=this.geometry?.clone(),t=new m(e,{...this.attributes},this.centroid?.clone(),this.objectId);return t.displayId=this.displayId,t}ensureCentroid(e){return this.centroid??=a(new s.O,this.geometry,e.hasZ,e.hasM),this.centroid}get usedMemory(){return 128+(0,i.c)(this.attributes)+(this.geometry?.usedMemory??0)}}function d(e){return!!e.geometry?.coords?.length}},59955:(e,t,r)=>{r.d(t,{s:()=>n});var i=r(64604);const s=[];function n(e,t){if((0,i.i)(e.url??""))return!0;const{wkid:r}=t;for(const t of s){if((e.version??0)>=t[0])return!0;if("function"==typeof t[1]&&(t[1]=t[1]()),t[1].has(r))return!1}return!0}s.push([10.91,()=>{const e=new Set([9709,9716,9741,9761,9766]);for(let t=9712;t<=9713;t++)e.add(t);for(let t=9748;t<=9749;t++)e.add(t);for(let t=20904;t<=20932;t++)e.add(t);for(let t=21004;t<=21032;t++)e.add(t);for(let t=21207;t<=21264;t++)e.add(t);for(let t=21307;t<=21364;t++)e.add(t);for(let t=23301;t<=23333;t++)e.add(t);for(let t=102759;t<=102760;t++)e.add(t);for(let t=102934;t<=102955;t++)e.add(t);return e}]),s.push([10.9,()=>{const e=new Set([9300,9354,9364,9367,9373,9377,9387,9456,9473,9498,9678,9680,29874,103599,103872,104028]);for(let t=9356;t<=9360;t++)e.add(t);for(let t=9404;t<=9407;t++)e.add(t);for(let t=9476;t<=9482;t++)e.add(t);for(let t=9487;t<=9494;t++)e.add(t);for(let t=9697;t<=9699;t++)e.add(t);return e}]),s.push([10.81,()=>{const e=new Set([9265,9333,103598,103699]);for(let t=9248;t<=9254;t++)e.add(t);for(let t=9271;t<=9273;t++)e.add(t);for(let t=9284;t<=9285;t++)e.add(t);for(let t=21453;t<=21463;t++)e.add(t);return e}]),s.push([10.8,()=>{const e=new Set([8088,8395,8428,8433,8531,8687,8692,8694,8699,8900,9003,9006,9009,9012,9017,9191]);for(let t=8035;t<=8036;t++)e.add(t);for(let t=8455;t<=8456;t++)e.add(t);for(let t=8518;t<=8529;t++)e.add(t);for(let t=8533;t<=8536;t++)e.add(t);for(let t=8538;t<=8540;t++)e.add(t);for(let t=8677;t<=8679;t++)e.add(t);for(let t=8902;t<=8903;t++)e.add(t);for(let t=8907;t<=8910;t++)e.add(t);for(let t=8949;t<=8951;t++)e.add(t);for(let t=8972;t<=8987;t++)e.add(t);for(let t=9039;t<=9040;t++)e.add(t);for(let t=9068;t<=9069;t++)e.add(t);for(let t=9140;t<=9141;t++)e.add(t);for(let t=9148;t<=9150;t++)e.add(t);for(let t=9153;t<=9159;t++)e.add(t);for(let t=9205;t<=9218;t++)e.add(t);for(let t=9221;t<=9222;t++)e.add(t);for(let t=54098;t<=54101;t++)e.add(t);return e}]),s.push([10.71,()=>{const e=new Set([6316]);for(let t=8351;t<=8353;t++)e.add(t);for(let t=9294;t<=9297;t++)e.add(t);for(let t=22619;t<=22621;t++)e.add(t);for(let t=103586;t<=103594;t++)e.add(t);return e}])},68140:(e,t,r)=>{r.d(t,{a:()=>f,b:()=>g,c:()=>w,d:()=>h,e:()=>d,f:()=>y,m:()=>p});var i=r(64604),s=r(99063),n=r(77037),a=r(3952),o=r(69763),l=r(48689),u=r(71868);function p(e){const t={};for(const r in e){if("declaredClass"===r)continue;const i=e[r];if(null!=i&&"function"!=typeof i)if(Array.isArray(i)){t[r]=[];for(let e=0;e<i.length;e++)t[r][e]=p(i[e])}else"object"==typeof i?i.toJSON&&(t[r]=JSON.stringify(i)):t[r]=i}return t}const c="Layer does not support extent calculation.";function m(e,t,r){const i=e.geometry,s=e.toJSON();delete s.compactGeometryEnabled,delete s.defaultSpatialReferenceEnabled;const a=s;let l,u,p;if(i&&(u=i.spatialReference,p=(0,o.Z)(u),a.geometryType=(0,n.$B)(i),a.geometry=function(e,t){if(t&&"extent"===e.type)return`${e.xmin},${e.ymin},${e.xmax},${e.ymax}`;if(t&&"point"===e.type)return`${e.x},${e.y}`;const r=e.toJSON();return delete r.spatialReference,JSON.stringify(r)}(i,e.compactGeometryEnabled),a.inSR=p),s.groupByFieldsForStatistics&&(a.groupByFieldsForStatistics=s.groupByFieldsForStatistics.join(",")),s.objectIds)switch(r?.uniqueIdFields?.length){case void 0:a.objectIds=s.objectIds.join(",");break;case 1:a.uniqueIds=JSON.stringify(s.objectIds),delete a.objectIds;break;default:a.uniqueIds=JSON.stringify(s.objectIds.map(e=>JSON.parse(e))),delete a.objectIds}if(s.orderByFields&&(a.orderByFields=s.orderByFields.join(",")),!s.outFields||!s.returnDistinctValues&&(t?.returnCountOnly||t?.returnExtentOnly||t?.returnIdsOnly)?delete a.outFields:s.outFields.includes("*")?a.outFields="*":a.outFields=s.outFields.join(","),s.outSR?(a.outSR=(0,o.Z)(s.outSR),l=e.outSpatialReference):i&&(s.returnGeometry||s.returnCentroid)&&(a.outSR=a.inSR,l=u),s.returnGeometry&&delete s.returnGeometry,s.outStatistics&&(a.outStatistics=JSON.stringify(s.outStatistics)),s.fullText&&(a.fullText=JSON.stringify(s.fullText)),s.pixelSize&&(a.pixelSize=JSON.stringify(s.pixelSize)),s.quantizationParameters&&(e.defaultSpatialReferenceEnabled&&null!=u&&null!=e.quantizationParameters?.extent&&u.equals(e.quantizationParameters.extent.spatialReference)&&delete s.quantizationParameters.extent.spatialReference,a.quantizationParameters=JSON.stringify(s.quantizationParameters)),s.parameterValues&&(a.parameterValues=JSON.stringify(s.parameterValues)),s.rangeValues&&(a.rangeValues=JSON.stringify(s.rangeValues)),s.dynamicDataSource&&(a.layer=JSON.stringify({source:s.dynamicDataSource}),delete s.dynamicDataSource),s.timeExtent){const e=s.timeExtent,{start:t,end:r}=e;null==t&&null==r||(a.time=t===r?t:`${t??"null"},${r??"null"}`),delete s.timeExtent}return e.defaultSpatialReferenceEnabled&&null!=u&&null!=l&&u.equals(l)&&(a.defaultSR=a.inSR,delete a.inSR,delete a.outSR),a}async function d(e,t,r,i,s){const n=t.timeExtent?.isEmpty?{data:{features:[]}}:await b(e,t,"json",i,void 0,s);return(0,u.a)(t,r,n.data),n}async function h(e,t,r,i,s){if(t.timeExtent?.isEmpty)return{data:r.createFeatureResult()};const n=await y(e,t,i,s),a=n;return a.data=(0,l.p)(n.data,r),a}function y(e,t,r,i){return b(e,t,"pbf",r,void 0,i)}function g(e,t,r,i){return t.timeExtent?.isEmpty?Promise.resolve({data:{objectIds:[]}}):b(e,t,"json",r,{returnIdsOnly:!0},i)}function f(e,t,r,i){return t.timeExtent?.isEmpty?Promise.resolve({data:{count:0}}):b(e,t,"json",r,{returnIdsOnly:!0,returnCountOnly:!0},i)}async function w(e,t,r){if(t.timeExtent?.isEmpty)return{data:{count:0,extent:null}};const i=await b(e,t,"json",r,{returnExtentOnly:!0,returnCountOnly:!0}),s=i.data;if(s.hasOwnProperty("extent"))return i;if(s.features)throw new Error(c);if(s.hasOwnProperty("count"))throw new Error(c);return i}function _(e,t){if(!e.returnIdsOnly||!t.uniqueIdFields)return e;const r={...e,returnUniqueIdsOnly:!0};return delete r.returnIdsOnly,r}async function b(e,t,r,n={},o={},l={}){const u="string"==typeof e?(0,s.An)(e):e,c=t.geometry?[t.geometry]:[],d=await(0,a.el)(c,null,{signal:n.signal}),h=d?.[0];null!=h&&((t=t.clone()).geometry=h);const y=p({...u.query,f:r,..._(o,l),...m(t,o,l)});return(0,i.A)((0,s.fj)(u.path,(g=o,null==t.formatOf3DObjects||g.returnCountOnly||g.returnExtentOnly||g.returnIdsOnly?"query":"query3d")),{...n,responseType:"pbf"===r?"array-buffer":"json",query:{...y,...n.query}});var g}},71492:(e,t,r)=>{r.d(t,{a:()=>o,e:()=>a});var i=r(13978),s=r(68140),n=r(73600);async function a(e,t,r,a){const o=(0,i.p)(e),{data:l}=await(0,s.a)(o,n.A.from(t),r,a);return l.count}async function o(e,t,r,a){const o=(0,i.p)(e),{data:l}=await(0,s.b)(o,n.A.from(t),r,a);return l.objectIds??function(e){var t;if(e)return t=e,Array.isArray(t[0])?e.map(e=>JSON.stringify(e)):e}(l.uniqueIds)??[]}},71868:(e,t,r)=>{r.d(t,{a:()=>s});var i=r(64102);function s(e,t,r){if(!r?.features||!r.hasZ)return;const s=(0,i.g)(r.geometryType,t,e.outSpatialReference);if(null!=s)for(const e of r.features)s(e.geometry)}},79875:(e,t,r)=>{r.d(t,{A:()=>d});var i=r(6407),s=r(20266),n=r(93217),a=r(133),o=r(12119),l=r(30011),u=r(16345),p=r(78016),c=r(54483);r(32773),r(59121),r(90740),r(84699);const m=new Map;class d{static fromJSON(e){return new d(e.fields,e.timeZoneByFieldName)}static fromLayer(e){return new d(e.fields??[],f(e))}static fromLayerJSON(e){return new d(e.fields??[],f(e))}constructor(e=[],t){this._fieldsMap=new Map,this._normalizedFieldsMap=new Map,this._dateFieldsSet=new Set,this._numericFieldsSet=new Set,this._requiredFields=null,this.dateFields=[],this.numericFields=[],this.fields=e||[],this._timeZoneByFieldName=t?new Map(t):null;const r=[];for(const e of this.fields){const t=e?.name,i=y(t);if(t&&i){const s=h(t);this._fieldsMap.set(t,e),this._fieldsMap.set(s,e),this._normalizedFieldsMap.set(i,e),r.push(`${s}:${e.type}:${this._timeZoneByFieldName?.get(t)}`),(0,l.vE)(e)?(this.dateFields.push(e),this._dateFieldsSet.add(e)):(0,l.WA)(e)&&(this._numericFieldsSet.add(e),this.numericFields.push(e)),(0,l.te)(e)||(0,l.Xz)(e)||(e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable)}}r.sort(),this.uid=r.join()}get requiredFields(){if(!this._requiredFields){this._requiredFields=[];for(const e of this.fields)(0,l.te)(e)||(0,l.Xz)(e)||e.nullable||void 0!==(0,l.lD)(e)||this._requiredFields.push(e)}return this._requiredFields}equals(e){return this.uid===e?.uid}has(e){return null!=this.get(e)}get(e){if(!e)return;let t=this._fieldsMap.get(e);return t||(t=this._fieldsMap.get(h(e))??this._normalizedFieldsMap.get(y(e)),t&&this._fieldsMap.set(e,t),t)}getTimeZone(e){const t=this.get(e&&"string"!=typeof e?e.name:e);return t?this._timeZoneByFieldName?this._timeZoneByFieldName.get(t.name):"date"===t.type||"esriFieldTypeDate"===t.type?(s.L.getLogger("esri.layers.support.FieldsIndex").errorOnce(new i.A("getTimeZone:no-timezone-information",`no time zone information for field '${t.name}'`)),u.a):g.has(t.type)?u.u:null:null}getLuxonTimeZone(e){const t=this.getTimeZone(e);return t?t===u.u?a.U.instance:t===u.a?c.F.utcInstance:(0,n.g)(m,t,()=>c.I.create(t)):null}isDateField(e){return this._dateFieldsSet.has(this.get(e))}isTimeOnlyField(e){return(0,l.OH)(this.get(e))}isNumericField(e){return this._numericFieldsSet.has(this.get(e))}normalizeFieldName(e){return this.get(e)?.name??void 0}toJSON(){return{fields:this.fields.map(e=>(0,o.i)(e)?e.toJSON():e),timeZoneByFieldName:this._timeZoneByFieldName?Array.from(this._timeZoneByFieldName.entries()):null}}}function h(e){return e.trim().toLowerCase()}function y(e){return(0,l.rS)(e)?.toLowerCase()??""}const g=new Set(["time-only","date-only","timestamp-offset","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"]);function f(e){const t=new Map;if(!e.fields)return t;const r=!0===e.datesInUnknownTimezone,{timeInfo:i,editFieldsInfo:s}=e,n=(i?"startField"in i?i.startField:i.startTimeField:"")??"",a=(i?"endField"in i?i.endField:i.endTimeField:"")??"",o="dateFieldsTimeZone"in e?e.dateFieldsTimeZone??null:e.dateFieldsTimeReference?(0,p.f)(e.dateFieldsTimeReference):null,l=s?"timeZone"in s?s.timeZone??o:s.dateFieldsTimeReference?(0,p.f)(s.dateFieldsTimeReference):o??u.a:null,c=i?"timeZone"in i?i.timeZone??o:i.timeReference?(0,p.f)(i.timeReference):o:null,m=new Map([[h(s?.creationDateField??""),l],[h(s?.editDateField??""),l],[h(n),c],[h(a),c]]);for(const{name:i,type:s}of e.fields)if(g.has(s))t.set(i,u.u);else if("date"!==s&&"esriFieldTypeDate"!==s)t.set(i,null);else if(r)t.set(i,u.u);else{const e=m.get(h(i??""))??o;t.set(i,e)}return t}},80398:(e,t,r)=>{r.r(t),r.d(t,{default:()=>er});var i=r(32816),s=r(72393),n=r(52731),a=r(6407),o=r(20266),l=r(2810),u=r(80959),p=r(29298),c=r(32773),m=r(69421),d=r(56273),h=r(73597),y=r(27281),g=r(64604),f=r(41390),w=r(67321),_=r(99063),b=r(36544),R=r(49877),v=r(44600),I=r(84200),S=r(7969),F=r(69763),M=r(65174),x=r(25456),T=r(99924),A=r(91272),N=r(40790),D=r(68258),O=r(79769),P=r(84539),j=r(25144),C=r(85673),Z=r(44864),V=r(79875),q=r(18385),E=r(44158),k=r(89779),G=r(22606),J=r(55095),L=r(30291),U=r(33535),B=r(10348),z=r(88404),$=r(99506),Q=r(77037),H=r(3952),W=r(13978),Y=r(64752),K=(r(85176),r(93181),r(13671),r(50704),r(40499),r(36555),r(58498),r(91047),r(35819),r(45371),r(61532),r(59121),r(19247),r(36172),r(90740),r(84699),r(48064),r(48844),r(2160),r(93804));r(96221),r(18683),r(29512),r(1178),r(29208);let X=class extends((0,n.O)(T.o)){constructor(e){super(e),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};(0,i._)([(0,p.MZ)({type:Y.A,json:{read:!0}})],X.prototype,"fromGeometry",void 0),(0,i._)([(0,p.MZ)({type:Y.A,json:{read:!0,write:!0}})],X.prototype,"toGeometry",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"objectIds",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],X.prototype,"where",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],X.prototype,"maxCount",void 0),X=(0,i._)([(0,m.$)("esri.rest.support.FindImagesParameters")],X);const ee=e=>{const t=e;let r=class extends t{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return(0,i._)([(0,p.MZ)({json:{write:!0}})],r.prototype,"make",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],r.prototype,"model",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],r.prototype,"focalLength",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],r.prototype,"pixelSize",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],r.prototype,"rows",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],r.prototype,"cols",void 0),r=(0,i._)([(0,m.$)("esri.rest.support.CameraInfoMixin")],r),r};let te=class extends(ee(T.o)){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=e?.getTime()}};(0,i._)([(0,p.MZ)({json:{write:!0}})],te.prototype,"id",void 0),(0,i._)([(0,p.MZ)({json:{name:"uri",write:!0}})],te.prototype,"referenceUri",void 0),(0,i._)([(0,p.MZ)({type:Date,json:{write:!0}})],te.prototype,"acquisitionDate",void 0),(0,i._)([(0,d.w)("acquisitionDate")],te.prototype,"writeAcquisitionDate",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],te.prototype,"cameraID",void 0),(0,i._)([(0,p.MZ)({type:Y.A,json:{write:!0}})],te.prototype,"center",void 0),(0,i._)([(0,p.MZ)({type:Y.A,json:{write:!0}})],te.prototype,"perspectiveCenter",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],te.prototype,"orientation",void 0),te=(0,i._)([(0,m.$)("esri.rest.support.ImageInspectionInfo")],te);const re=te;let ie=class extends T.o{constructor(){super(...arguments),this.images=null}};var se;(0,i._)([(0,p.MZ)({type:[re],json:{write:!0}})],ie.prototype,"images",void 0),ie=(0,i._)([(0,m.$)("esri.rest.support.FindImagesResult")],ie);let ne=se=class extends T.o{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new se((0,c.o8)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,i._)([(0,p.MZ)({type:[String],json:{name:"angleName",write:!0}})],ne.prototype,"angleNames",void 0),(0,i._)([(0,p.MZ)({type:Y.A,json:{write:!0}})],ne.prototype,"point",void 0),(0,i._)([(0,p.MZ)({type:S.A,json:{write:!0}})],ne.prototype,"spatialReference",void 0),(0,i._)([(0,p.MZ)({type:b.I,json:{write:!0}})],ne.prototype,"rasterId",void 0),ne=se=(0,i._)([(0,m.$)("esri.rest.support.ImageAngleParameters")],ne);let ae=class extends T.o{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],ae.prototype,"north",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],ae.prototype,"up",void 0),(0,i._)([(0,p.MZ)({type:S.A,json:{write:!0}})],ae.prototype,"spatialReference",void 0),ae=(0,i._)([(0,m.$)("esri.rest.support.ImageAngleResult")],ae);var oe=r(92517);const le=new K.J({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let ue=class extends T.o{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};(0,i._)([(0,p.MZ)({type:Number,json:{read:!0,write:!0}})],ue.prototype,"value",void 0),(0,i._)([(0,p.MZ)({type:String,json:{read:!0,write:!0}})],ue.prototype,"displayValue",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{read:!0,write:!0}})],ue.prototype,"uncertainty",void 0),ue=(0,i._)([(0,m.$)("esri.rest.support.imageMeasureUtils.BaseImageMeasureResultValue")],ue);let pe=class extends ue{constructor(){super(...arguments),this.unit=null}};(0,i._)([(0,p.MZ)({type:String,json:{read:F.I.read,write:F.I.write}})],pe.prototype,"unit",void 0),pe=(0,i._)([(0,m.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultLengthValue")],pe);let ce=class extends ue{constructor(){super(...arguments),this.unit=null}};(0,i._)([(0,p.MZ)({type:String,json:{read:F.H.read,write:F.H.write}})],ce.prototype,"unit",void 0),ce=(0,i._)([(0,m.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultAreaValue")],ce);let me=class extends ue{constructor(){super(...arguments),this.unit=null}};(0,i._)([(0,p.MZ)({type:String,json:{read:F._.read,write:F._.write}})],me.prototype,"unit",void 0),me=(0,i._)([(0,m.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultAngleValue")],me);var de=r(88663);let he=class extends T.o{constructor(e){super(e),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};var ye;(0,i._)([(0,p.MZ)()],he.prototype,"type",void 0),(0,i._)([(0,p.MZ)({type:le.apiValues,json:{read:le.read,write:le.write}})],he.prototype,"measureOperation",void 0),(0,i._)([(0,p.MZ)({type:j.A,json:{write:!0}})],he.prototype,"mosaicRule",void 0),(0,i._)([(0,p.MZ)({type:Y.A,json:{write:!0}})],he.prototype,"pixelSize",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],he.prototype,"raster",void 0),he=(0,i._)([(0,m.$)("esri.rest.support.BaseImageMeasureParameters")],he),r(36533),r(97827),r(18169),r(20762),r(48402),r(16699),r(67504);let ge=ye=class extends he{constructor(e){super(e),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Q.$B)(e),t[r]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new ye((0,c.o8)({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,i._)([(0,p.MZ)({types:oe.g,json:{name:"fromGeometry",read:!0,write:!0}})],ge.prototype,"geometry",void 0),(0,i._)([(0,d.w)("geometry")],ge.prototype,"writeGeometry",null),(0,i._)([(0,p.MZ)({type:le.apiValues,json:{write:le.write}})],ge.prototype,"measureOperation",null),(0,i._)([(0,p.MZ)({json:{read:!0}})],ge.prototype,"is3D",void 0),(0,i._)([(0,p.MZ)({type:String,json:{read:F.I.read,write:F.I.write}})],ge.prototype,"linearUnit",void 0),(0,i._)([(0,p.MZ)({type:String,json:{read:F.H.read,write:F.H.write}})],ge.prototype,"areaUnit",void 0),ge=ye=(0,i._)([(0,m.$)("esri.rest.support.ImageAreaParameters")],ge);let fe=class extends T.o{constructor(e){super(e),this.name=null,this.sensorName=null}};(0,i._)([(0,p.MZ)({type:String,json:{read:!0,write:!0}})],fe.prototype,"name",void 0),(0,i._)([(0,p.MZ)({type:String,json:{read:!0,write:!0}})],fe.prototype,"sensorName",void 0),fe=(0,i._)([(0,m.$)("esri.rest.support.BaseImageMeasureResult")],fe);let we=class extends fe{constructor(){super(...arguments),this.area=null,this.perimeter=null}};(0,i._)([(0,p.MZ)({type:ce,json:{read:!0,write:!0}})],we.prototype,"area",void 0),(0,i._)([(0,p.MZ)({type:pe,json:{read:!0,write:!0}})],we.prototype,"perimeter",void 0),we=(0,i._)([(0,m.$)("esri.rest.support.ImageAreaResult")],we);let _e=class extends((0,n.O)(T.o)){constructor(e){super(e),this.outSpatialReference=null}};(0,i._)([(0,p.MZ)({type:S.A,json:{name:"outSR",write:!0}})],_e.prototype,"outSpatialReference",void 0),_e=(0,i._)([(0,m.$)("esri.rest.support.ImageBoundaryParameters")],_e);let be=class extends T.o{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(e,t){return null==e?null:e.rings?I.A.fromJSON(e):v.A.fromJSON(e)}};var Re;(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],be.prototype,"area",void 0),(0,i._)([(0,p.MZ)({types:oe.g,json:{name:"shape",write:!0}})],be.prototype,"geometry",void 0),(0,i._)([(0,R.r)("geometry")],be.prototype,"readGeometry",null),be=(0,i._)([(0,m.$)("esri.rest.support.ImageBoundaryResult")],be);let ve=Re=class extends he{constructor(e){super(e),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,t,r){null!=e&&(t.geometryType=(0,Q.$B)(e),t[r]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new Re((0,c.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,i._)([(0,p.MZ)({type:Y.A,json:{read:!0,write:!0}})],ve.prototype,"fromGeometry",void 0),(0,i._)([(0,d.w)("fromGeometry")],ve.prototype,"writeFromGeometry",null),(0,i._)([(0,p.MZ)({type:Y.A,json:{read:!0,write:!0}})],ve.prototype,"toGeometry",void 0),(0,i._)([(0,p.MZ)({type:le.apiValues,json:{write:le.write}})],ve.prototype,"measureOperation",null),(0,i._)([(0,p.MZ)({json:{read:!0}})],ve.prototype,"is3D",void 0),(0,i._)([(0,p.MZ)({type:String,json:{read:F.I.read,write:F.I.write}})],ve.prototype,"linearUnit",void 0),(0,i._)([(0,p.MZ)({type:String,json:{read:F._.read,write:F._.write}})],ve.prototype,"angularUnit",void 0),ve=Re=(0,i._)([(0,m.$)("esri.rest.support.ImageDistanceParameters")],ve);let Ie=class extends fe{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};(0,i._)([(0,p.MZ)({type:pe,json:{read:!0,write:!0}})],Ie.prototype,"distance",void 0),(0,i._)([(0,p.MZ)({type:me,json:{read:!0,write:!0}})],Ie.prototype,"azimuthAngle",void 0),(0,i._)([(0,p.MZ)({type:me,json:{read:!0,write:!0}})],Ie.prototype,"elevationAngle",void 0),Ie=(0,i._)([(0,m.$)("esri.rest.support.ImageDistanceResult")],Ie);var Se=r(26805),Fe=r(58194);r(4734),r(50214),r(59192),r(16345),r(54483);let Me=class extends((0,n.O)(T.o)){constructor(e){super(e),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Q.$B)(e),t[r]=JSON.stringify(e.toJSON()))}};(0,i._)([(0,p.MZ)({types:oe.g,json:{read:Q.rS,write:!0}})],Me.prototype,"geometry",void 0),(0,i._)([(0,d.w)("geometry")],Me.prototype,"writeGeometry",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],Me.prototype,"objectIds",void 0),(0,i._)([(0,de.e)(Se.s,{ignoreUnknown:!1,name:"spatialRel"})],Me.prototype,"spatialRelationship",void 0),(0,i._)([(0,p.MZ)({type:Fe.A,json:{name:"time",write:!0}})],Me.prototype,"timeExtent",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],Me.prototype,"where",void 0),Me=(0,i._)([(0,m.$)("esri.rest.support.ImageGPSInfoParameters")],Me);let xe=class extends(ee(T.o)){constructor(){super(...arguments),this.id=null}};(0,i._)([(0,p.MZ)({json:{write:!0}})],xe.prototype,"id",void 0),xe=(0,i._)([(0,m.$)("esri.rest.support.CameraInfo")],xe);const Te=xe;let Ae=class extends T.o{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=e?.getTime()}};(0,i._)([(0,p.MZ)({json:{write:!0}})],Ae.prototype,"id",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],Ae.prototype,"name",void 0),(0,i._)([(0,p.MZ)({type:Date,json:{write:!0}})],Ae.prototype,"acquisitionDate",void 0),(0,i._)([(0,d.w)("acquisitionDate")],Ae.prototype,"writeAcquisitionDate",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],Ae.prototype,"cameraID",void 0),(0,i._)([(0,p.MZ)({type:Y.A,json:{write:!0}})],Ae.prototype,"center",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],Ae.prototype,"gps",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],Ae.prototype,"orientation",void 0),Ae=(0,i._)([(0,m.$)("esri.rest.support.ImageGPSInfo")],Ae);const Ne=Ae;let De=class extends T.o{constructor(){super(...arguments),this.images=null,this.cameras=null}};var Oe;(0,i._)([(0,p.MZ)({type:[Ne],json:{write:!0}})],De.prototype,"images",void 0),(0,i._)([(0,p.MZ)({type:[Te],json:{write:!0}})],De.prototype,"cameras",void 0),De=(0,i._)([(0,m.$)("esri.rest.support.ImageGPSInfoResult")],De);let Pe=Oe=class extends he{constructor(e){super(e),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,t,r){null!=e&&(t.geometryType=(0,Q.$B)(e),t[r]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new Oe((0,c.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,i._)([(0,p.MZ)({type:Y.A,json:{read:!0}})],Pe.prototype,"fromGeometry",void 0),(0,i._)([(0,d.w)("fromGeometry")],Pe.prototype,"writeFromGeometry",null),(0,i._)([(0,p.MZ)({type:Y.A,json:{read:!0,write:!0}})],Pe.prototype,"toGeometry",void 0),(0,i._)([(0,p.MZ)({type:le.apiValues,json:{write:le.write}})],Pe.prototype,"measureOperation",null),(0,i._)([(0,p.MZ)({json:{read:!0}})],Pe.prototype,"operationType",void 0),(0,i._)([(0,p.MZ)({type:String,json:{read:F.I.read,write:F.I.write}})],Pe.prototype,"linearUnit",void 0),Pe=Oe=(0,i._)([(0,m.$)("esri.rest.support.ImageHeightParameters")],Pe);let je=class extends fe{constructor(){super(...arguments),this.height=null}};(0,i._)([(0,p.MZ)({type:pe,json:{read:!0,write:!0}})],je.prototype,"height",void 0),je=(0,i._)([(0,m.$)("esri.rest.support.ImageHeightResult")],je);var Ce,Ze=r(65523);let Ve=Ce=class extends T.o{constructor(e){super(e),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Q.$B)(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=j.A.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=A.A.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[r]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const i=null!=e.start?e.start.getTime():null,s=null!=e.end?e.end.getTime():null;t[r]=null!=i?null!=s?`${i},${s}`:`${i}`:null}}clone(){return new Ce((0,c.o8)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,i._)([(0,p.MZ)({types:oe.g,json:{write:!0}})],Ve.prototype,"geometry",void 0),(0,i._)([(0,d.w)("geometry")],Ve.prototype,"writeGeometry",null),(0,i._)([(0,p.MZ)({type:j.A,json:{write:!0}})],Ve.prototype,"mosaicRule",null),(0,i._)([(0,d.w)("mosaicRule")],Ve.prototype,"writeMosaicRule",null),(0,i._)([(0,p.MZ)({type:A.A,json:{write:!0,name:"renderingRule"}})],Ve.prototype,"rasterFunction",null),(0,i._)([(0,d.w)("rasterFunction")],Ve.prototype,"writeRasterFunction",null),(0,i._)([(0,p.MZ)({type:[A.A],json:{write:!0,name:"renderingRules"}})],Ve.prototype,"rasterFunctions",void 0),(0,i._)([(0,d.w)("rasterFunctions")],Ve.prototype,"writeRasterFunctions",null),(0,i._)([(0,p.MZ)({type:Y.A,json:{write:!0}})],Ve.prototype,"pixelSize",void 0),(0,i._)([(0,d.w)("pixelSize")],Ve.prototype,"writePixelSize",null),(0,i._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],Ve.prototype,"returnGeometry",void 0),(0,i._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],Ve.prototype,"returnCatalogItems",void 0),(0,i._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],Ve.prototype,"returnPixelValues",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],Ve.prototype,"maxItemCount",void 0),(0,i._)([(0,p.MZ)({type:Fe.A,json:{write:{target:"time"}}})],Ve.prototype,"timeExtent",void 0),(0,i._)([(0,d.w)("timeExtent")],Ve.prototype,"writeTimeExtent",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],Ve.prototype,"raster",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],Ve.prototype,"viewId",void 0),(0,i._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],Ve.prototype,"processAsMultidimensional",void 0),Ve=Ce=(0,i._)([(0,m.$)("esri.rest.support.ImageIdentifyParameters")],Ve);var qe=r(8824);r(17745),r(81272),r(44945),r(30011),r(51961),r(62399),r(64995),r(70861),r(33150),r(58173),r(66110),r(67520),r(27532),r(48103),r(65085),r(33611),r(84857),r(60373),r(20568),r(35902),r(13226),r(16794),r(52357),r(11090),r(49319),r(93546),r(29570),r(34592),r(79825),r(95101),r(67578),r(17857),r(82537),r(14896),r(95611),r(98089),r(91366),r(80473),r(43435),r(73435),r(91815),r(85232),r(93471),r(7182),r(47788),r(19297),r(82408),r(73509),r(28276),r(91658),r(70580),r(75191),r(24319),r(62092),r(53252),r(34039),r(12856),r(3495),r(97906),r(64524),r(65023),r(31424),r(74676),r(32368),r(7391),r(22529),r(70061),r(38094),r(67723),r(2589),r(47239),r(22522),r(63728),r(4157),r(62401),r(89322),r(20138),r(53370),r(59858),r(46946),r(3816),r(71992),r(80167),r(4478),r(91808),r(7161),r(55586),r(92229),r(18344),r(53610),r(29447),r(78273),r(49475),r(64884),r(23351),r(35121),r(51222),r(42870),r(54512),r(53103),r(19648),r(42948),r(95637),r(59930),r(45862),r(72762),r(71613),r(17872);let Ee=class extends T.o{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};var ke;(0,i._)([(0,p.MZ)({json:{write:!0}})],Ee.prototype,"catalogItemVisibilities",void 0),(0,i._)([(0,p.MZ)({type:qe.A,json:{write:!0}})],Ee.prototype,"catalogItems",void 0),(0,i._)([(0,p.MZ)({type:Y.A,json:{write:!0}})],Ee.prototype,"location",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],Ee.prototype,"name",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],Ee.prototype,"objectId",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],Ee.prototype,"processedValues",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],Ee.prototype,"properties",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],Ee.prototype,"value",void 0),Ee=(0,i._)([(0,m.$)("esri.rest.support.ImageIdentifyResult")],Ee);let Ge=ke=class extends T.o{constructor(e){super(e),this.geometries=null,this.rasterId=null}writeGeometry(e,t,r){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map(e=>e.toJSON())}}clone(){return new ke({geometries:this.geometries?.map(e=>e.clone())??[],rasterId:this.rasterId})}};(0,i._)([(0,p.MZ)({type:[Y.A],json:{write:!0}})],Ge.prototype,"geometries",void 0),(0,i._)([(0,d.w)("geometries")],Ge.prototype,"writeGeometry",null),(0,i._)([(0,p.MZ)({type:b.I,json:{write:!0}})],Ge.prototype,"rasterId",void 0),Ge=ke=(0,i._)([(0,m.$)("esri.rest.support.ImagePixelLocationParameters")],Ge);let Je=class extends T.o{constructor(){super(...arguments),this.geometries=null}};var Le;(0,i._)([(0,p.MZ)({json:{write:!0}})],Je.prototype,"geometries",void 0),Je=(0,i._)([(0,m.$)("esri.rest.support.ImagePixelLocationResult")],Je);let Ue=Le=class extends he{constructor(e){super(e),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Q.$B)(e),t[r]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:t}=this;return"point"===t.type?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new Le((0,c.o8)({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,i._)([(0,p.MZ)({types:oe.g,json:{name:"fromGeometry",read:Q.rS}})],Ue.prototype,"geometry",void 0),(0,i._)([(0,d.w)("geometry")],Ue.prototype,"writeGeometry",null),(0,i._)([(0,p.MZ)({type:le.apiValues,json:{read:le.read,write:le.write}})],Ue.prototype,"measureOperation",null),(0,i._)([(0,p.MZ)({json:{read:!0}})],Ue.prototype,"is3D",void 0),Ue=Le=(0,i._)([(0,m.$)("esri.rest.support.ImagePointParameters")],Ue);let Be=class extends fe{constructor(){super(...arguments),this.point=null}};(0,i._)([(0,p.MZ)({type:Y.A,json:{name:"point.value",read:!0,write:!0}})],Be.prototype,"point",void 0),Be=(0,i._)([(0,m.$)("esri.rest.support.ImagePointResult")],Be);var ze=r(21891),$e=r(76330);let Qe=class extends((0,n.O)(T.o)){constructor(e){super(e),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,t,r){t.geometries=e?.length?{geometryType:(0,Q.$B)(e[0]),geometries:e.map(e=>({...e.toJSON(),spatialReference:void 0}))}:null}};(0,i._)([(0,p.MZ)({types:[oe.g]})],Qe.prototype,"geometries",void 0),(0,i._)([(0,d.w)("geometries")],Qe.prototype,"writeGeometries",null),(0,i._)([(0,p.MZ)({type:[b.I],json:{write:!0}})],Qe.prototype,"rasterIds",void 0),(0,i._)([(0,p.MZ)({type:S.A,json:{name:"outSR",write:!0}})],Qe.prototype,"outSpatialReference",void 0),Qe=(0,i._)([(0,m.$)("esri.rest.support.ImageToMapMultirayParameters")],Qe);let He=class extends((0,n.O)(T.o)){constructor(e){super(e),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Q.$B)(e),t[r]={...e.toJSON(),spatialReference:void 0})}};(0,i._)([(0,p.MZ)({types:oe.g,json:{read:Q.rS,write:!0}})],He.prototype,"geometry",void 0),(0,i._)([(0,d.w)("geometry")],He.prototype,"writeGeometry",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],He.prototype,"rasterId",void 0),(0,i._)([(0,p.MZ)({type:S.A,json:{name:"outSR",write:!0}})],He.prototype,"outSpatialReference",void 0),(0,i._)([(0,p.MZ)({json:{name:"options.DOff",write:!0}})],He.prototype,"depthOffset",void 0),(0,i._)([(0,p.MZ)({json:{name:"options.Adjust",write:!0}})],He.prototype,"adjust",void 0),He=(0,i._)([(0,m.$)("esri.rest.support.ImageToMapParameters")],He);let We=class extends((0,n.O)(T.o)){constructor(e){super(e),this.referenceUri=null,this.rasterId=null}};(0,i._)([(0,p.MZ)({type:String,json:{name:"uri",write:!0}})],We.prototype,"referenceUri",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],We.prototype,"rasterId",void 0),We=(0,i._)([(0,m.$)("esri.rest.support.ImageUrlParameters")],We);let Ye=class extends T.o{constructor(){super(...arguments),this.url=null}};(0,i._)([(0,p.MZ)({json:{name:"imageURL",write:!0}})],Ye.prototype,"url",void 0),Ye=(0,i._)([(0,m.$)("esri.rest.support.ImageUrlResult")],Ye);const Ke=new K.J({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0});let Xe=class extends((0,n.O)(T.o)){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(e,t,r){e?.length&&(t.geometryType=(0,Q.$B)(e[0]),t.geometries=e.map(e=>e.toJSON()))}};(0,i._)([(0,p.MZ)({types:[oe.g]})],Xe.prototype,"geometries",void 0),(0,i._)([(0,d.w)("geometries")],Xe.prototype,"writeGeometries",null),(0,i._)([(0,p.MZ)({type:j.A,json:{write:!0}})],Xe.prototype,"mosaicRule",void 0),(0,i._)([(0,p.MZ)({type:Y.A,json:{write:!0}})],Xe.prototype,"pixelSize",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],Xe.prototype,"constantZ",void 0),(0,i._)([(0,p.MZ)({type:Ke.apiValues,json:{read:Ke.read,write:Ke.write}})],Xe.prototype,"baseType",void 0),Xe=(0,i._)([(0,m.$)("esri.rest.support.ImageVolumeParameters")],Xe);let et=class extends T.o{constructor(){super(...arguments),this.area=null,this.cut=null,this.fill=null,this.maxZ=null,this.minZ=null,this.meanZ=null,this.cutCellCount=null,this.fillCellCount=null}};(0,i._)([(0,p.MZ)({json:{write:!0}})],et.prototype,"area",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],et.prototype,"cut",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],et.prototype,"fill",void 0),(0,i._)([(0,p.MZ)({json:{name:"maxz",write:!0}})],et.prototype,"maxZ",void 0),(0,i._)([(0,p.MZ)({json:{name:"minz",write:!0}})],et.prototype,"minZ",void 0),(0,i._)([(0,p.MZ)({json:{name:"meanz",write:!0}})],et.prototype,"meanZ",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],et.prototype,"cutCellCount",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],et.prototype,"fillCellCount",void 0),et=(0,i._)([(0,m.$)("esri.rest.support.ImageVolume")],et);const tt=et;let rt=class extends T.o{constructor(){super(...arguments),this.volumes=[]}};(0,i._)([(0,p.MZ)({type:[tt],json:{write:!0}})],rt.prototype,"volumes",void 0),rt=(0,i._)([(0,m.$)("esri.rest.support.ImageVolumeResult")],rt);let it=class extends((0,n.O)(T.o)){constructor(e){super(e),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Q.$B)(e),t[r]=JSON.stringify(e))}};(0,i._)([(0,p.MZ)({types:oe.g,json:{read:Q.rS,write:!0}})],it.prototype,"geometry",void 0),(0,i._)([(0,d.w)("geometry")],it.prototype,"writeGeometry",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],it.prototype,"rasterId",void 0),(0,i._)([(0,p.MZ)({json:{name:"options.VisibleOnly",write:!0}})],it.prototype,"visibleOnly",void 0),it=(0,i._)([(0,m.$)("esri.rest.support.MapToImageParameters")],it);let st=class extends T.o{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(e,t){return e.spatialReference||(e={...e,spatialReference:t.Shape.spatialReference}),Y.A.fromJSON(e)}};var nt;(0,i._)([(0,p.MZ)({types:oe.g,json:{name:"Shape",read:Q.rS,write:!0}})],st.prototype,"geometry",void 0),(0,i._)([(0,p.MZ)({json:{name:"Length",write:!0}})],st.prototype,"length",void 0),(0,i._)([(0,p.MZ)({json:{name:"Area",write:!0}})],st.prototype,"area",void 0),(0,i._)([(0,p.MZ)({type:Y.A,json:{name:"Center",write:!0}})],st.prototype,"center",void 0),(0,i._)([(0,R.r)("center")],st.prototype,"readCenter",null),st=(0,i._)([(0,m.$)("esri.rest.support.MeasureAreaFromImageResult")],st);let at=nt=class extends T.o{constructor(e){super(e),this.geometry=null,this.rasterId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Q.$B)(e),t[r]={...e.toJSON(),spatialReference:void 0})}clone(){const e=(0,c.o8)({geometry:this.geometry,rasterId:this.rasterId});return new nt(e)}};(0,i._)([(0,p.MZ)({types:oe.g,json:{name:"fromGeometry",read:Q.rS,write:!0}})],at.prototype,"geometry",void 0),(0,i._)([(0,d.w)("geometry")],at.prototype,"writeGeometry",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],at.prototype,"rasterId",void 0),at=nt=(0,i._)([(0,m.$)("esri.rest.support.MeasureFromImageParameters")],at);let ot=class extends T.o{constructor(){super(...arguments),this.geometry=null,this.length=null}};function lt(e){const t=e?.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null==t.end||r.includes(t.end)||r.push(t.end),e.time=r.join(",")}}async function ut(e,t,r){t=(0,b.b)(Ze.A,t);const i=(0,W.p)(e),s=t.geometry?[t.geometry]:[],n=await(0,H.el)(s),a=t.toJSON();lt(a);const o=n?.[0];null!=o&&(a.geometry=ht(o));const l=(0,W.e)({...i.query,f:"json",...a});return(0,W.a)(l,r)}async function pt(e,t,r){const i=(t=(0,b.b)(ne,t)).toJSON();null!=i.angleName&&(i.angleName=i.angleName.join(",")),t?.point?.spatialReference?.imageCoordinateSystem&&(i.point.spatialReference=yt(t.point.spatialReference)),t?.spatialReference?.imageCoordinateSystem&&(i.spatialReference=gt(t.spatialReference));const s=(0,W.p)(e),n=(0,W.e)({...s.query,f:"json",...i}),a=(0,W.a)(n,r),{data:o}=await(0,g.A)(`${s.path}/computeAngles`,a);return o.spatialReference=o.spatialReference?null!=o.spatialReference.geodataXform?new S.A({wkid:0,imageCoordinateSystem:o.spatialReference}):S.A.fromJSON(o.spatialReference):null,"NaN"===o.north&&(o.north=null),"NaN"===o.up&&(o.up=null),new ae(o)}async function ct(e,t,r){t=(0,b.b)(Ve,t);const i=(0,W.p)(e),s=t.geometry?[t.geometry]:[];return(0,H.el)(s).then(e=>{const s=t.toJSON(),n=e?.[0];null!=n&&(s.geometry=JSON.stringify(ht(n)));const a=(0,W.e)({...i.query,f:"json",...s}),o=(0,W.a)(a,r);return(0,g.A)(i.path+"/identify",o)}).then(e=>Ee.fromJSON(e.data))}async function mt(e,t,r,i){const s=(0,W.p)(e),n=await(0,H.el)(r),a=t.toJSON();null!=n[0]&&(a.fromGeometry=JSON.stringify(ht(n[0]))),null!=n[1]&&(a.toGeometry=JSON.stringify(ht(n[1])));const o=(0,W.e)({...s.query,f:"json",...a}),l=(0,W.a)(o,i),{data:u}=await(0,g.A)(s.path+"/measure",l);return u}async function dt(e,t,r){t=(0,b.b)(at,t);const i=(0,W.p)(e),s=t.toJSON(),n=(0,W.e)({...i.query,f:"json",...s}),a=(0,W.a)(n,r),{data:o}=await(0,g.A)(i.path+"/measureFromImage",a);return o}function ht(e){const t=e.toJSON();return e.spatialReference?.imageCoordinateSystem&&(t.spatialReference=yt(e.spatialReference)),t}function yt(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:r}=t;return null!=e?r?{icsid:e,icsns:r}:{icsid:e}:{ics:t}}return e.toJSON()}function gt(e,t){if(!e.imageCoordinateSystem)return(0,F.Z)(e);const r=yt(e),{icsid:i,icsns:s}=r;return null==i||null!=s&&!t?.toLowerCase().includes("/"+s.toLowerCase()+"/")?JSON.stringify(r):`0:${i}`}(0,i._)([(0,p.MZ)({types:oe.g,json:{name:"Shape",read:Q.rS,write:!0}})],ot.prototype,"geometry",void 0),(0,i._)([(0,p.MZ)({json:{name:"Length",write:!0}})],ot.prototype,"length",void 0),ot=(0,i._)([(0,m.$)("esri.rest.support.MeasureLengthFromImageResult")],ot),r(339),r(79281),r(47368),r(38903);var ft=r(20873),wt=r(71492),_t=r(12109),bt=r(73600),Rt=r(17012);r(98203),r(54131),r(19869),r(53065),r(20804),r(63834),r(87357),r(19969),r(9207),r(24330),r(91276),r(18527),r(62482),r(9498),r(65299),r(38641),r(133),r(78016),r(22260),r(75213),r(67138),r(4789),r(91381),r(60027),r(57111),r(75651),r(88614),r(1030),r(15319),r(60785),r(56487),r(6399),r(24079),r(38149),r(19681),r(40328),r(3827),r(98238),r(78328),r(23916),r(93074),r(54616),r(25018),r(41740),r(75399),r(46341),r(79943),r(12692),r(60303),r(17813),r(3112),r(46626),r(45560),r(56303),r(85890),r(55884),r(42656),r(69033),r(73067),r(60369),r(13201),r(43534),r(47812),r(23875),r(44747),r(91524),r(56570),r(23787),r(22151),r(88817),r(68140),r(48689),r(53564),r(33489),r(96153),r(58003),r(71868),r(64102),r(81284),r(78860),r(13983);const vt={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},It=new Set(["u1","u2","u4","u8","s8","u16","s16"]),St={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Ft=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Mt(e){return Ft.has(e.type)}function xt(e,t){if(!e||!t)return(0,c.o8)(e||t);const r=(0,c.o8)(e);if(r.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),Tt(r.functionDefinition.arguments,t),r.rasterFunctionDefinition=r.functionDefinition.toJSON()}else"none"!==t.functionName?.toLowerCase()&&(Nt(r.functionArguments).Raster=t);return r}function Tt(e,t){for(const r in e)"raster"===r.toLowerCase()&&("RasterFunctionVariable"===e[r].type?(e[r]=t.rasterFunctionDefinition,e[r].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[r].type&&Tt(e[r].arguments,t))}function At(e){const t=(0,c.o8)(vt[e.functionName+"Function"]),r=e.functionArguments;for(const e in r)"raster"===e.toLowerCase()?(t.arguments[e]=At(r[e]),t.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(t.arguments[e].value=Ct(r[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=r[e];return t}function Nt(e){const t=e?.Raster??e?.raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?Nt(t.functionArguments):e}const Dt={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Ot(e,t){const r=It.has(t)?(0,N.a)(t):null;return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function Pt(e){if(null==e)return;const{fields:t}=e,r=t?.find(e=>e?.name&&"value"===e.name.toLowerCase());return r?.name}function jt(e){return"polygon-3d"===e.symbol?.type?e.symbol.symbolLayers?.find(e=>"fill"===e.type)?.material?.color:e.symbol?.color}function Ct(e){const t=[],r=[];return e.forEach(e=>{t.push(e[0]),r.push((0,D.e)([...e.slice(1),255]))}),{type:"RasterColormap",values:t,colors:r}}let Zt=class extends T.o{constructor(){super(...arguments),this.layer=null,this.requestRawData=!1,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[r]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get format(){return this.requestRawData||"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:e}=this;return e.pixelType!==e.serviceRasterInfo.pixelType?e.pixelType:void 0}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("pixelType"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new j.A({where:r})),t}get rasterFunction(){const e=this.layer;let{rasterFunction:t}=e;const r=e.pixelFilter,i=!e.format||e.format.includes("jpg")||e.format.includes("png");this.requestRawData||(t=this._addResampleRasterFunction(t));const s=e.multidimensionalSubset?.areaOfInterest;return s&&(t=function(e,t){return xt(new A.A({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}}),e)}(t,s)),this.requestRawData||!i||r||"vector-field"===e.renderer?.type||(t=this.combineRendererWithRenderingRule(t)),t}combineRendererWithRenderingRule(e){const t=this.layer,{rasterInfo:r,renderer:i}=t;return e=e||t.rasterFunction,i&&Mt(i)?xt(function(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=t.convertToRFT,i=new A.A;i.functionName="Stretch";const s=Dt[O.s.toJSON(e.stretchType)],n="u8",a=e.customStatistics?.map(e=>[e.min,e.max,e.avg??0,e.stddev??1]),o={StretchType:s,Statistics:a,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(o.Min=e.outputMin),null!=e.outputMax&&(o.Max=e.outputMax),s===Dt.standardDeviation?(o.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=n):s===Dt.percentClip?(o.MinPercent=e.minPercent,o.MaxPercent=e.maxPercent,i.outputPixelType=n):s===Dt.minMax?i.outputPixelType=n:s===Dt.sigmoid&&(o.SigmoidStrengthLevel=e.sigmoidStrengthLevel),i.functionArguments=o,i.variableName="Raster",e.colorRamp){const s=e.colorRamp,n=new A.A;if(r)n.functionArguments={ColorRamp:(0,D.g)(s)};else{const r=(0,D.d)(s,!0);if(r)n.functionArguments={colorRampName:r};else if(!t.convertColorRampToColormap||"algorithmic"!==s.type&&"multipart"!==s.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach(e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm"),n.functionArguments={colorRamp:t}}else n.functionArguments={Colormap:(0,D.c)(s)}}return n.variableName="Raster",n.functionName="Colormap",n.functionArguments.Raster=i,r?new A.A({rasterFunctionDefinition:At(n)}):n}return r?new A.A({rasterFunctionDefinition:At(i)}):i}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],s=[],n=[],a=1e-4,{pixelType:o,rasterAttributeTable:l}=t,u=null==l?null:l.features,p=Pt(l);if(p&&u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach((t,r)=>{const i=t.symbol?.color;let s;i?.a&&null!=t.minValue&&null!=t.maxValue&&u.forEach(a=>{null!=t.minValue&&null!=t.maxValue&&(s=a.attributes[e.field],(s>=t.minValue&&s<t.maxValue||r===e.classBreakInfos.length-1&&s>=t.minValue)&&n.push([a.attributes[p],i.r,i.g,i.b]))})});const r=o?Ot(n,o):n,i=new A.A;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=r,i.variableName="Raster",t.convertToRFT?new A.A({rasterFunctionDefinition:At(i)}):i}e.classBreakInfos.forEach((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const o=e.symbol&&e.symbol.color;o?.a?(0===t?r.push(e.minValue,e.maxValue+a):r.push(e.minValue+a,e.maxValue+a),i.push(t),n.push([t,o.r,o.g,o.b])):s.push(e.minValue,e.maxValue)});const c=o?Ot(n,o):n,m=new A.A;m.functionName="Remap",m.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:s},m.variableName="Raster";const d=new A.A;return d.functionName="Colormap",d.functionArguments={Colormap:c,Raster:m},t.convertToRFT?new A.A({rasterFunctionDefinition:At(d)}):d}(e,t);case"unique-value":return function(e,t){const r=[],{pixelType:i,rasterAttributeTable:s}=t,n=null==s?null:s.features,a=Pt(s),o=e.defaultSymbol?.color?.toRgb(),l=e.uniqueValueInfos;if(l)if(n){if(a){const t=new Map;l.forEach(e=>{const r=e.value,i=jt(e);null!=r&&i?.a&&t.set(String(r),i.toRgb())});const i=e.field;i&&n.forEach(({attributes:e})=>{const s=String(e[i]),n=e[a],l=t.get(s);l?r.push([n,...l]):o&&r.push([n,...o])})}}else for(let e=0;e<l.length;e++){const t=l[e],i=jt(t),s=+t.value;if(i?.a){if(isNaN(s))return null;r.push([s,i.r,i.g,i.b])}}const u=i?Ot(r,i):r,p=new A.A;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=u,p.variableName="Raster",t.convertToRFT?new A.A({rasterFunctionDefinition:At(p)}):p}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return null;const{pixelType:i}=t,s=i?Ot(r,i):r,n=new A.A;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=s,t.convertToRFT?new A.A({rasterFunctionDefinition:At(n)}):n}(e,t);case"vector-field":return function(e,t){const r=new A.A;r.functionName="VectorFieldRenderer";const{dataType:i,bandNames:s}=t,n="vector-uv"===i;let a,o;if(s&&2===s.length){const e=s.map(e=>e.toLowerCase());a=e.indexOf("magnitude"),o=e.indexOf("direction")}-1!==a&&null!==a||(a=0,o=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find(e=>"Magnitude"===e.field):new P.A,c={magnitudeBandID:a,directionBandID:o,isUVComponents:n,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:St[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};r.functionArguments=c;const m=At(r);return t.convertToRFT?A.A.fromJSON({rasterFunctionDefinition:m}):r}(e,t);case"raster-shaded-relief":return function(e,t){const r=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new A.A;const i=new A.A;i.functionName="Hillshade";const s="traditional"===e.hillshadeType?0:1,n="none"===e.scalingType?1:3,a={HillshadeType:s,SlopeType:n,ZFactor:e.zFactor};return 0===s&&(a.Azimuth=e.azimuth,a.Altitude=e.altitude),3===n&&(a.PSPower=e.pixelSizePower,a.PSZFactor=e.pixelSizeFactor),i.functionArguments=a,i.variableName="Raster",e.colorRamp&&(i.functionName="ShadedRelief",r?a.ColorRamp=(0,D.g)(e.colorRamp):a.Colormap=(0,D.c)(e.colorRamp)),r?new A.A({rasterFunctionDefinition:At(i)}):i}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}(i,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandNames:r.bandInfos.map(({name:e})=>e),convertColorRampToColormap:t.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:r.bandCount}),e):e}_addResampleRasterFunction(e){if("vector-field"!==this.layer.renderer?.type||"Resample"===e?.functionName)return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,r=this.layer.serviceRasterInfo.pixelSize;let i=new A.A({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:r}});return i=e?.rasterFunctionDefinition?new A.A({rasterFunctionDefinition:At(i)}):i,xt(i,e)}};(0,i._)([(0,p.MZ)()],Zt.prototype,"layer",void 0),(0,i._)([(0,p.MZ)()],Zt.prototype,"requestRawData",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],Zt.prototype,"adjustAspectRatio",null),(0,i._)([(0,d.w)("adjustAspectRatio")],Zt.prototype,"writeAdjustAspectRatio",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],Zt.prototype,"bandIds",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],Zt.prototype,"compression",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],Zt.prototype,"compressionQuality",null),(0,i._)([(0,d.w)("compressionQuality")],Zt.prototype,"writeCompressionQuality",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],Zt.prototype,"compressionTolerance",null),(0,i._)([(0,d.w)("compressionTolerance")],Zt.prototype,"writeCompressionTolerance",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],Zt.prototype,"format",null),(0,i._)([(0,p.MZ)({type:String,json:{read:{reader:C.i.read},write:{writer:C.i.write}}})],Zt.prototype,"interpolation",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],Zt.prototype,"noData",null),(0,i._)([(0,p.MZ)({type:String,json:{read:{reader:C.n.read},write:{writer:C.n.write}}})],Zt.prototype,"noDataInterpretation",null),(0,i._)([(0,p.MZ)({type:C.p.apiValues,json:{read:C.p.read,write:C.p.write}})],Zt.prototype,"pixelType",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],Zt.prototype,"lercVersion",void 0),(0,i._)([(0,d.w)("lercVersion")],Zt.prototype,"writeLercVersion",null),(0,i._)([(0,p.MZ)({type:Number})],Zt.prototype,"version",null),(0,i._)([(0,p.MZ)({json:{write:!0}})],Zt.prototype,"mosaicRule",null),(0,i._)([(0,p.MZ)({json:{write:!0,name:"renderingRule"}})],Zt.prototype,"rasterFunction",null),Zt=(0,i._)([(0,m.$)("esri.layers.support.ExportImageServiceParameters")],Zt);const Vt=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),qt=(0,b.h)(b.f,{min:0,max:255}),Et=e=>{const t=e;let r=class extends t{constructor(){super(...arguments),this._functionRasterInfos={},this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new Zt({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(e=>"number"==typeof e))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?j.A.fromJSON(t):null}get fieldsIndex(){return this.fields?new V.A(this.fields):null}set format(e){e&&Vt.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=j.A.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?j.A.fromJSON(r):this._isMosaicRuleSupported(t)?j.A.fromJSON(t):null}writeMosaicRule(e,t,r){const{mosaicRule:i}=this;this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=qt(e))}readObjectIdField(e,t){if(!e){const r=t.fields.find(e=>"esriFieldTypeOID"===e.type||"oid"===e.type);e=r?.name}return e}get parsedUrl(){return(0,_.An)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const r=t?.find(({name:t})=>t===e);return r?.renderer.clone()}return this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,r){const i=t?.layerDefinition?.drawingInfo?.renderer,s=(0,$.a)(i,r);return null==s?null:("vector-field"===s.type&&t.symbolTileSize&&!i.symbolTileSize&&(s.symbolTileSize=t.symbolTileSize),Mt(s)||o.L.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.fields?.map(e=>e.clone())??[];e.push((0,G.g)()),"mosaic-dataset"===this.sourceType&&this.fields?.length&&e.push((0,G.e)()),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some(({name:e})=>"none"===e.toLowerCase())&&e.push((0,G.f)()),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(({name:e})=>"none"!==e.toLowerCase()).forEach(({name:t})=>e.push((0,G.h)(t)));const{rasterInfo:t}=this;if(this._isVectorDataSet()){const r=t?.multidimensionalInfo?.variables[0].unit?.trim(),i=(0,G.i)(r),s=(0,G.j)();e.push(i,s)}if(t?.multidimensionalInfo&&"raster-dataset"===this.sourceType){const r=(0,G.d)(t.multidimensionalInfo);e.push(...r)}const r=t?.attributeTable;if(null!=r){const t=(0,G.k)(r);e.push(...t)}return e}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=A.A.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r?.length&&"None"!==r[0].name?this._isRFTJson(t.renderingRule)?A.A.fromJSON({rasterFunctionDefinition:t.renderingRule}):A.A.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?S.A.fromJSON(r):null}writePixelType(e,t,r){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[r]=C.p.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e,{renderer:i,symbolizer:s,pixelFilter:n}=this;const{isRawData:a}=e;if(a&&"lerc"!==this.format&&(i??=(0,z.r)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.rasterFunction?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}),s||(this.symbolizer=new U.R({rendererJSON:i.toJSON(),rasterInfo:this.rasterInfo}),s=this.symbolizer)),(a||!this._isPicture())&&i&&s&&!n){await this._updateSymbolizer(s,i);const{bandIds:n}=this;r=await this._symbolize({pixelData:e,bandIds:n,symbolizer:s},t)}return r}async highlightPixels(e,t){const r=e.highlightOptions.toJSON(),{bandId:i}=r;if(null==i)r.bandId=0;else{const e=this.bandIds?.length?this.bandIds.indexOf(i):i;if(e<0||e>2)return;r.bandId=e}const s=this._rasterJobHandler;s?await s.highlightPixels({...e,highlightOptions:r},t):(0,B.l)(e.pixelBlock,e.renderedPixelBlock,r)}destroy(){this._shutdownJobHandler()}async calculateVolume(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsCalculateVolume)throw new a.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,c.o8)(e),this.mosaicRule&&null==e.mosaicRule&&(e.mosaicRule=this.mosaicRule),async function(e,t,r){const i=(t=(0,b.b)(Xe,t)).toJSON();i.geometries=JSON.stringify(i.geometries);const s=(0,W.p)(e),n=(0,W.e)({...s.query,f:"json",...i}),a=(0,W.a)(n,r),{data:o}=await(0,g.A)(`${s.path}/calculateVolume`,a);return rt.fromJSON({volumes:o.results})}(this.url,e,this._getRequestOptions(t))}async computeAngles(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new a.A("imagery-layer:compute-angles","this operation is not supported on the input image service");return pt(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new a.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,b.b)(Ge,t)).toJSON(),{geometries:s}=t;if(s)for(let e=0;e<s.length;e++)s[e].spatialReference?.imageCoordinateSystem&&(i.geometries.geometries[e].spatialReference=yt(s[e].spatialReference));const n=(0,W.p)(e),a=(0,W.e)({...n.query,f:"json",...i}),o=(0,W.a)(a,r),{data:l}=await(0,g.A)(`${n.path}/computePixelLocation`,o);return Je.fromJSON(l)}(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new a.A("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,c.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,r){const i=await ut(e,t,r),s=(0,W.p)(e),{data:n}=await(0,g.A)(`${s.path}/computeHistograms`,i);return{histograms:n.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new a.A("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,c.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,r){const i=await ut(e,t,r),s=(0,W.p)(e),{data:n}=await(0,g.A)(`${s.path}/computeStatisticsHistograms`,i),{statistics:a}=n;return a?.length&&a.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:a,histograms:n.histograms}}(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const r=await this._fetchCapabilities(t?.signal);if(!("base-and-top"===e.operationType?r.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?r.mensuration.supportsHeightFromBaseAndTopShadow:r.mensuration.supportsHeightFromTopAndTopShadow))throw new a.A("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,c.o8)(e),this._applyMosaicRule(e),async function(e,t,r){t=(0,b.b)(Pe,t);const i=await mt(e,t,[t.fromGeometry,t.toGeometry],r);return je.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r.mensuration.supportsAreaAndPerimeter||e.is3D&&!r.mensuration.supports3D)throw new a.A("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,c.o8)(e),this._applyMosaicRule(e),async function(e,t,r){t=(0,b.b)(ge,t);const i=await mt(e,t,[t.geometry],r);return we.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r.mensuration.supportsDistanceAndAngle||e.is3D&&!r.mensuration.supports3D)throw new a.A("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,c.o8)(e),this._applyMosaicRule(e),async function(e,t,r){t=(0,b.b)(ve,t);const i=await mt(e,t,[t.fromGeometry,t.toGeometry],r);return Ie.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r.mensuration.supportsPointOrCentroid||e.is3D&&!r.mensuration.supports3D)throw new a.A("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,c.o8)(e),this._applyMosaicRule(e),async function(e,t,r){t=(0,b.b)(Ue,t);const i=await mt(e,t,[t.geometry],r);return Be.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new a.A("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new a.A("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return async function(e,t,r){const i=await dt(e,t,r);return ot.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new a.A("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new a.A("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return async function(e,t,r){const i=await dt(e,t,r);return st.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,i={}){if((0,f.b)(o.L.getLogger(this),"`ImageryLayer.fetchImage` is deprecated in favor of 'ImageryLayer.fetchPixels'.",{replacement:"ImageryLayer.fetchPixels",version:"4.33",warnOnce:!0}),null==e||null==t||null==r)throw new a.A("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");return this.internalFetchImage(e,t,r,i)}async internalFetchImage(e,t,r,i={}){await this._updateCurrentRasterInfo();const{exportImageServiceParameters:n}=this;let a=!1;i.requestRawData&&(await this._initJobHandler(),await this._updateCurrentRasterInfo(),n.requestRawData||"lerc"===this.format||(a=!0,n.requestRawData=!0));const o=this.getExportImageServiceParameters(e,t,r,i.timeExtent);if(a&&(n.requestRawData=!1),null==o){if(i.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=r,i.returnImageBitmap?{imageBitmap:await(0,q.a)(e,`${s(this.parsedUrl)}/exportImage`,i.signal)}:{imageOrCanvasElement:e}}const{bandIds:n,rasterInfo:a}=this,o=(n?.length||a.bandCount)??0,l=t*r,u=a.pixelType,p=[];for(let e=0;e<o;e++)p.push(k.A.createEmptyBand(u,l));return{pixelData:{pixelBlock:new k.A({width:t,height:r,pixels:p,mask:new Uint8Array(l),pixelType:u}),extent:e}}}const l=!!i.requestAsImageElement&&!this.pixelFilter,u=l&&!!i.returnImageBitmap,p={imageServiceParameters:o,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:l,returnImageBitmap:u,signal:i.signal};return this._requestArrayBuffer(p)}async fetchPixels(e,t,r,i={}){await this._initJobHandler(),i.applyRendering&&this._updateCurrentRasterInfo();const s=i.applyRendering?void 0:new Zt({layer:this,requestRawData:!0,interpolation:i.interpolation??"nearest",bandIds:i.bandIds??[]}),n=this.getExportImageServiceParameters(e,t,r,i.timeExtent,s);if(null==n)return{extent:e,pixelBlock:null};delete n.pixelType,delete n.bandIds,delete n.compressionQuality;const a={imageServiceParameters:n,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:!1,returnImageBitmap:!1,signal:i.signal},{pixelData:o}=await this._requestArrayBuffer(a);return o??{extent:e,pixelBlock:null}}fetchKeyProperties(e){return(0,g.A)(s(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(e=>e.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new a.A("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,g.A)(s(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(e=>qe.A.fromJSON(e.data))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return async function(e,t,r){const i=(0,W.p)(e),s=(0,W.e)({...i?.query,f:"json"}),n=(0,W.a)(s,r),a=`${i?.path}/${t}/info`,o=(0,g.A)(`${a}`,n),l=(0,g.A)(`${a}/keyProperties`,n),u=await Promise.allSettled([o,l]),p="fulfilled"===u[0].status?u[0].value.data:null,c="fulfilled"===u[1].status?u[1].value.data:null;let m=null;p.statistics?.length&&(m=p.statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})));const d=v.A.fromJSON(p.extent),h=Math.ceil(d.width/p.pixelSizeX-.1),y=Math.ceil(d.height/p.pixelSizeY-.1),f=d.spatialReference,w=new Y.A({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:f}),_=p.histograms?.length?p.histograms:null,b=new J.R({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new J.A({width:h,height:y,bandCount:p.bandCount,extent:d,spatialReference:f,pixelSize:w,pixelType:p.pixelType.toLowerCase(),statistics:m,histograms:_,keyProperties:c,storageInfo:b})}(s(this.parsedUrl),e,r)}async getCatalogItemICSInfo(e,t){const{data:r}=await(0,g.A)(s(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r?.ics;if(!i)return;let n=null;try{n=(await(0,g.A)(s(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n?.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const a=this.version>=10.7?(0,g.A)(s(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>({})):{},o=n.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:(0,F.Z)(o),outSR:"0:"+e},u=(0,g.A)(s(this.parsedUrl)+"/project",{query:this._getQueryParams(l),...t}).then(e=>e.data).catch(()=>({})),p=(n.xmin+n.xmax)/2,c=(n.ymax-n.ymin)/6,m=n.ymin+c,d=[];for(let e=0;e<5;e++)d.push({x:p,y:m+c*e});const h={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:(0,F.Z)(o),outSR:"0:"+e},y=(0,g.A)(s(this.parsedUrl)+"/project",{query:this._getQueryParams(h),...t}).then(e=>e.data).catch(()=>({})),f=await Promise.all([a,u,y]);let w=f[0].ipxf;if(null==w){const e=i.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(w={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const _=v.A.fromJSON(f[1]?.geometries?.[0]);_&&(_.spatialReference=new S.A({wkid:0,imageCoordinateSystem:i}));const b=f[2].geometries?f[2].geometries.filter(e=>null!=e?.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y):[],R=b.length;if(R<3)return{ics:i,icsToPixelTransform:w,icsExtent:_,northDirection:null};let I=0,M=0,x=0,T=0;for(let e=0;e<R;e++)I+=b[e].x,M+=b[e].y,x+=b[e].x*b[e].x,T+=b[e].x*b[e].y;const A=(R*T-I*M)/(R*x-I*I);let N=0;const D=b[4].x>b[0].x,O=b[4].y>b[0].y;return A===1/0?N=O?90:270:0===A?N=D?0:180:A>0?N=D?180*Math.atan(A)/Math.PI:180*Math.atan(A)/Math.PI+180:A<0&&(N=O?180+180*Math.atan(A)/Math.PI:360+180*Math.atan(A)/Math.PI),{ics:i,icsToPixelTransform:w,icsExtent:_,northDirection:N}}async generateRasterInfo(e,t){e=(0,b.b)(A.A,e);const r={...t,query:this._getQueryParams()};if(!e||"none"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??(0,ft.f)(s(this.parsedUrl),this.sourceJSON,r);const i=function(e){const t=JSON.stringify(e),r=t.includes('"rasterFunctionDefinition":{'),i=r?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),s=i?.map(e=>r?e.slice(8,-18):e.slice(18,-1));return s?s.join("/"):null}(e);if(!i)throw new a.A("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[i])return this._functionRasterInfos[i];const n=(0,ft.g)(s(this.parsedUrl),e,r);this._functionRasterInfos[i]=n;try{return await n}catch(e){throw this._functionRasterInfos[i]=null,e}}getExportImageServiceParameters(e,t,r,i,n){const a=gt((e=e.clone().shiftCentralMeridian()).spatialReference,s(this.parsedUrl));n??=this.exportImageServiceParameters;const o=n.toJSON(),{bandIds:l,noData:u}=o;let{renderingRule:p}=o;const c=this.rasterFunction?.rasterFunctionDefinition,m=this.renderer?.type,d=!m||"raster-stretch"===m||"raster-colormap"===m||"unique-value"===m||"class-breaks"===m||"raster-shaded-relief"===m;if(l?.length&&this._hasRasterFunction(this.rasterFunction)&&!c&&d){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:l}};if("Stretch"===p.rasterFunction)e.rasterFunctionArguments.Raster=p.rasterFunctionArguments.Raster,p.rasterFunctionArguments.Raster=e;else if("Colormap"===p.rasterFunction){const t=p.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,p.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=p,p=e;o.bandIds=void 0}else o.bandIds=l?.join(",");Array.isArray(u)&&u.length>0&&(o.noData=u.join(","));const h=this._processMultidimensionalIntersection(null,i,n.mosaicRule);if(h.isOutSide)return null;o.mosaicRule=null!=h.mosaicRule?JSON.stringify(h.mosaicRule):null,i=h.timeExtent,o.renderingRule=this._getRenderingRuleString(A.A.fromJSON(p));const y={};if(null!=i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?y.time=""+e:null==e&&null==t||(y.time=`${e??"null"},${t??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+r,...o,...y}}async getSamples(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r?.operations.supportsGetSamples)throw new a.A("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,c.o8)(e);const{raster:i}=this;return i&&null==e.raster&&(e.raster=i),async function(e,t,r){const i=(t=(0,b.b)(ze.A,t)).toJSON();lt(i),i.outFields?.length&&(i.outFields=i.outFields.join(","));const s=await(0,H.el)(t.geometry),n=s?.[0];null!=n&&(i.geometry=ht(n));const a=(0,W.p)(e),o=(0,W.e)({...a.query,f:"json",...i}),l=(0,W.a)(o,r),{data:u}=await(0,g.A)(`${a.path}/getSamples`,l),p=u.samples.map(e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map(e=>Number(e));return{...e,pixelValue:t}});return $e.A.fromJSON({samples:p})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new a.A("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,c.o8)(e),this.version<10.91&&"extent"===e.geometry?.type&&(e.geometry=I.A.fromExtent(e.geometry));const r=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(r.isOutSide)throw new a.A("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=r.timeExtent,e.mosaicRule=r.mosaicRule;const{raster:i,rasterFunction:s}=this;return s&&null==e.rasterFunction&&(e.rasterFunction=s),i&&null==e.raster&&(e.raster=i),ct(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMap)throw new a.A("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,b.b)(He,t)).toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(i.geometry=ht(t.geometry)),t.depthOffset&&t.adjust||delete i.options;const s=(0,W.p)(e),n=(0,W.e)({...s.query,f:"json",...i}),a=(0,W.a)(n,r),{data:o}=await(0,g.A)(`${s.path}/imageToMap`,a);return(0,Q.rS)(o)}(s(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMapMultiray)throw new a.A("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,b.b)(Qe,t)).toJSON();t.rasterIds?.length&&(i.rasterIds=t.rasterIds.join(","));const s=(0,W.p)(e),n=(0,W.e)({...s.query,f:"json",...i}),a=(0,W.a)(n,r),{data:o}=await(0,g.A)(`${s.path}/imageToMapMultiray`,a);return(0,Q.rS)(o)}(s(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMapToImage)throw new a.A("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,b.b)(it,t)).toJSON(),s=await(0,H.el)(t.geometry),n=s?.[0];null!=n&&(i.geometry=ht(n)),t.visibleOnly||delete i.options;const a=n?.spatialReference??t.geometry?.spatialReference;a&&(i.inSR=gt(a));const o=(0,W.p)(e),l=(0,W.e)({...o.query,f:"json",...i}),u=(0,W.a)(l,r),{data:p}=await(0,g.A)(`${o.path}/mapToImage`,u);return(0,Q.rS)(p)}(s(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsFindImages)throw new a.A("imagery-layer:find-images","findImages operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,b.b)(X,t)).toJSON(),s=await(0,H.el)([t.fromGeometry,t.toGeometry]);null!=s[0]&&(i.fromGeometry=ht(s[0]),s[0].spatialReference&&(i.inSR=gt(s[0].spatialReference))),null!=s[1]&&(i.toGeometry=ht(s[1])),t.objectIds?.length&&(i.objectIds=i.objectIds.join(","));const n=(0,W.p)(e),a=(0,W.e)({...n.query,f:"json",...i}),o=(0,W.a)(a,r),{data:l}=await(0,g.A)(`${n.path}/find`,o);return ie.fromJSON(l)}(s(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsGetImageUrl)throw new a.A("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,b.b)(We,t)).toJSON(),s=(0,W.p)(e),n=(0,W.e)({...s.query,f:"json",...i}),a=(0,W.a)(n,r),{data:o}=await(0,g.A)(`${s.path}/getImageUrl`,a);return Ye.fromJSON(o)}(s(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new bt.A({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryBoundary)throw new a.A("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},async function(e,t,r){t=(0,b.b)(_e,t);const i=(0,W.p)(e),s=t.toJSON();t.outSpatialReference&&(s.outSR=gt(t.outSpatialReference));const n=(0,W.e)({...i.query,f:"json",...s}),a=(0,W.a)(n,r),{data:o}=await(0,g.A)(i.path+"/queryBoundary",a);return be.fromJSON(o)}(s(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,_t.e)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,wt.a)(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryGPSInfo)throw new a.A("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},async function(e,t,r){const i=(t=(0,b.b)(Me,t)).toJSON();lt(i),i.objectIds?.length&&(i.objectIds=i.objectIds.join(",")),i.geometry||i.objectIds||i.time||i.where||(i.where="1=1");const s=await(0,H.el)(t.geometry),n=s?.[0];null!=n&&(i.geometry=ht(n));const a=n?.spatialReference??t.geometry?.spatialReference;a&&(i.inSR=gt(a));const o=(0,W.p)(e),l=(0,W.e)({...o.query,f:"json",...i}),u=(0,W.a)(l,r),{data:p}=await(0,g.A)(`${o.path}/queryGPSInfo`,u);return De.fromJSON(p)}(s(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,wt.e)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new a.A("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:s,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const p=G.c.servicePixelValue.toLowerCase(),c=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(o=e.outFields.some(e=>!e.toLowerCase().startsWith(p)),this.version>=10.4)){const t=e.outFields.filter(e=>e.toLowerCase().startsWith(p)&&e.length>p.length).map(e=>{const t=e.slice(p.length+1);return[this._updateRenderingRulesFunctionName(t,c),t]});l=t.map(e=>new A.A({functionName:e[0]})),u=t.map(e=>e[1]);const{rasterFunction:r}=this;0===l.length?r?.functionName?(l.push(r),u.push(r.functionName)):l=null:r?.functionName&&!l.some(e=>e.functionName===r.functionName)&&(l.push(r),u.push(r.functionName))}const m=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:d}=this;let h=e.timeExtent||this.timeExtent;if(d){const{isOutside:t,intersection:r}=(0,L.k)(d,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(t)throw new a.A("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=r?.timeExtent&&(h=r.timeExtent)}const y=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,h);let g=e.geometry;this.version<10.91&&"extent"===g?.type&&(g=I.A.fromExtent(g));const f=this._getQueryParams({geometry:g,timeExtent:h,mosaicRule:y,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:l,pixelSize:r,returnCatalogItems:o,returnGeometry:m,raster:this.raster,maxItemCount:s?1:null});delete f.f;const w=new Ve(f);try{await this._generateRasterInfo(this.rasterFunction);const r=await ct(this.url,w,{signal:t?.signal,query:{...this.customParameters}}),s=e.outFields,a=null!=r.value&&r.value.toLowerCase().includes("nodata"),l=o&&!m&&r?.catalogItems?.features.length&&(n||!a),p=this.multidimensionalInfo&&"raster-dataset"===this.sourceType?(0,L.b)({rasterInfo:this.rasterInfo,multidimensionalDefinition:y?.multidimensionalDefinition,timeExtent:h,multidimensionalSubset:this.multidimensionalSubset}):null;if(!l)return this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s,effectiveMultidimensionalDefinition:p});const c=this.objectIdField||"ObjectId",d=r.catalogItems?.features??[],g=d.map(e=>e.attributes?.[c]),f=new bt.A({objectIds:g,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[c]}),_=await this.queryRasters(f);return _?.features?.length&&_.features.forEach(t=>{d.forEach(r=>{r.attributes[c]===t.attributes[c]&&t.geometry&&(r.geometry=t.geometry.clone(),null!=e.outSpatialReference&&(r.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s,effectiveMultidimensionalDefinition:p})}catch{throw new a.A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=(0,g.A)(s(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>e.data?.statistics),i=(0,g.A)(s(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>e.data?.histograms),n=await Promise.all([r,i]);return n[0]&&n[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return(0,L.f)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):(0,ft.f)(s(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),(0,ft.p)(e,t),e)),i=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,n=this._getRasterFunctionInfos();return Promise.all([r,i,n]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),o.L.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([(0,w.wB)(()=>this.rasterFunction,e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then(e=>{e&&(this.rasterInfo=e)})})]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)})}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo,{multidimensionalInfo:i}=this.serviceRasterInfo;if(null==e||null==i||null==t||null==r?.startField)return e;const{startField:s}=r,n=i.variables.some(e=>e.dimensions.some(e=>e.name===s))?s:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(e=>e.dimensionName!==n),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const a=e.multidimensionalDefinition.filter(e=>e.dimensionName===n),o=null!=t.start?t.start.getTime():null,l=null!=t.end?t.end.getTime():null,u=null==o||null==l||o===l,p=u?[o||l]:[[o,l]],c=this.version>=10.8;if(a.length)a.forEach(e=>{e.dimensionName===n&&(c?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=u,e.values=p))});else if(!c){const t=e.multidimensionalDefinition.filter(e=>null!=e.variableName&&null==e.dimensionName);t.length?t.forEach(e=>{e.dimensionName=n,e.isSlice=u,e.values=p}):e.multidimensionalDefinition.push(new x.A({variableName:"",dimensionName:n,isSlice:u,values:p}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(e=>!(!e.variableName&&!e.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new a.A("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,b.b)(bt.A,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:r}=this;return"unique-value"===e.type&&this._hasRasterFunction(r)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,z.s)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:r,ssl:i}=await(0,g.A)(s(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=r,this.sourceJSON=t,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly")>-1)throw new a.A("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||r}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t?.toLowerCase(),s=r?.ResampleType||r?.resampleType;return i&&(7===s||10===s)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:r}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){const t=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,i=(0,z.p)({variableName:t,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&r.bandCount>=3){const e=i?.bandIds??(0,z.h)(r);!e||3===r.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=i?.renderer??(0,z.r)(r,{bandIds:this.bandIds,variableName:this.rasterFunction?null:t}));const s=(0,z.n)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=s,this.symbolizer.rasterInfo=r):this.symbolizer=new U.R({rendererJSON:s,rasterInfo:r}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=e?.renderingRule&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler?this._rasterJobHandler.decode({data:e,options:t}):(0,U.d)(e,t,r)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){if(1===t.length&&"none"===t[0].name.toLowerCase())return t;const r=await(0,g.A)(s(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e});return r.data?.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,returnImageBitmap:i,signal:n}=e;if(r&&this._canRequestImageElement(t.format)){const r=`${s(this.parsedUrl)}/exportImage`,{data:a}=await(0,g.A)(r,{responseType:i?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:n});return a instanceof Blob?{imageBitmap:await(0,q.a)(a,r,n),params:t}:{imageOrCanvasElement:a,params:t}}const o=this._initJobHandler(),l=(0,g.A)(s(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:n}),u=(await Promise.all([l,o]))[0].data,p=t.format||"jpgpng";let c=p;if("bsq"!==c&&"bip"!==c&&(c=(0,U.g)(u)),!c)throw new a.A("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(u)));const m={signal:n},d="gif"===p||"bmp"===p||p.includes("png")&&("png"===c||"jpg"===c)?(0,U.d)(u,{useCanvas:!0,...t},m):this._decodePixelBlock(u,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:p},m);return{pixelData:{pixelBlock:await d,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,L.h)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){this.mosaicRule=this.mosaicRule||new j.A;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&t.forEach(e=>e.variableName=""),t=t.filter(({variableName:e,dimensionName:t})=>e&&"*"!==e||t),!e?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:s,returnDomainValues:n,templateFields:a}=t,o=e.processedValues;let l=e.catalogItems?.features,u=e.properties?.Values?.map(e=>e.replaceAll(/ /gi,", "))||[];const p=this.objectIdField||"ObjectId",c="string"==typeof r&&r.toLowerCase().includes("nodata"),m=[];if(r&&!l&&(!c||s)){const e={};e[p]=0,u=[r],l=[new y.A({geometry:this.fullExtent,attributes:e})],this.multidimensionalInfo&&"raster-dataset"===this.sourceType&&(0,G.a)(this.rasterFields,e,t.effectiveMultidimensionalDefinition)}if(!l)return[];this._updateResponseFieldNames(l,a),c&&!s&&(l=[]);const{itemPixelValue:d,servicePixelValue:h}=G.c,g=this.rasterFields.some(e=>e.name===d);for(let e=0;e<l.length;e++){const t=l[e];if(null!=r){const n=u[e],a=this.rasterFunction&&o&&o.length>0&&i&&i.length>0&&i.includes(this.rasterFunction.functionName)?o[i.indexOf(this.rasterFunction.functionName)]:r;if("nodata"===n.toLowerCase()&&!s)continue;g&&(t.attributes[d]=n),t.attributes[h]=a,this._updateFeatureWithMagDirValues(t,n);const l=this.fields&&this.fields.length>0;let p=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?l?n:r:a;this.rasterFunction||(p=l?n:r),this._updateFeatureWithRasterAttributeTableValues(t,p)}if(t.sourceLayer=t.layer=this,n&&this._updateFeatureWithDomainValues(t),i&&o&&i.length===o.length)for(let e=0;e<i.length;e++){const r=`${G.c.servicePixelValue}.${i[e]}`;t.attributes[r]=o[e]}m.push(l[e])}return m}_processMultidimensionalIntersection(e,t,r){const{multidimensionalSubset:i}=this;if(!i)return{isOutSide:!1,timeExtent:t,mosaicRule:r=this._combineMosaicRuleWithTimeExtent(r,t)};if(i){const{isOutside:r,intersection:s}=(0,L.k)(i,{geometry:e,timeExtent:t});if(r)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=s?.timeExtent&&(t=s.timeExtent)}if(r=this._combineMosaicRuleWithTimeExtent(r,t),r?.multidimensionalDefinition){const{isOutside:e}=(0,L.k)(i,{multidimensionalDefinition:r.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:r}}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==r)return;const{features:i,fields:s}=r,n=s.map(e=>e.name).find(e=>"value"===e.toLowerCase());if(!n)return;const a=i.filter(e=>e.attributes[n]===(null!=t?parseInt(t,10):null));a&&a[0]&&s.forEach(t=>{const r=G.b+t.name;e.attributes[r]=a[0].attributes[t.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\s*/).map(e=>parseFloat(e)),i=r.map(e=>[e]),s=r.map(e=>({minValue:e,maxValue:e,noDataValue:null})),n=new k.A({height:1,width:1,pixelType:"f32",pixels:i,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new v.A(0,0,0,0,this.spatialReference)});const a="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:(0,B.j)([n.pixels[0][0],n.pixels[1][0]]);e.attributes[G.c.magnitude]=a[0],e.attributes[G.c.direction]=a[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(e=>e.domain&&"coded-value"===e.domain.type);null!=t&&t.forEach(t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.find(e=>e.code===r);i&&(e.attributes[t.name]=i.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;null!=r&&e.forEach(e=>{if(e?.attributes)for(const i of t){const t=r.get(i)?.name;t&&t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=e?.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:r,rasterFunction:i}=this;i&&null==e.rasterFunction&&(e.rasterFunction=i),r&&null==e.mosaicRule&&(e.mosaicRule=r),t&&null==e.raster&&(e.raster=t)}async _updateCurrentRasterInfo(e){if(this.renderer||this.symbolizer){const t=await this._generateRasterInfo(this.rasterFunction,{signal:e});t&&(this.rasterInfo=t)}}_applyMosaicRule(e){const{raster:t,mosaicRule:r}=this;r&&null==e.mosaicRule&&(e.mosaicRule=r),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(e=>e.trim()):["image","catalog"],{currentVersion:r,maxRecordCount:i}=e,s=t.includes("image"),n="esriImageServiceDataTypeElevation"===e.serviceDataType,a=!(!e.spatialReference&&!e.extent?.spatialReference),o=t.includes("edit"),l=t.includes("mensuration")&&a,u=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map(e=>e.trim()),p=l&&u.includes("basic"),c=this._isMosaicDataset(e)&&t.includes("catalog"),m=t.includes("download"),d=r>=10.7&&n||r>=11.4&&(n||l&&u.includes("3d")),h=c&&e.fields&&e.fields.length>0,y=h&&e.supportsAdvancedQueries?e.advancedQueryCapabilities:void 0;return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:s,supportsExportImage:s,supportsIdentify:s,supportsImageToMap:r>=11.2&&c,supportsImageToMapMultiray:r>=11.2&&c,supportsMapToImage:r>=11.2&&c,supportsFindImages:r>=11.2&&c,supportsGetImageUrl:r>=11.3&&m,supportsMeasure:l,supportsMeasureFromImage:r>=11.2,supportsDownload:m,supportsQuery:h,supportsGetSamples:r>=10.2&&s,supportsProject:r>=10.3&&s,supportsComputeStatisticsHistograms:r>=10.4&&s,supportsQueryBoundary:r>=10.6&&s,supportsCalculateVolume:d,supportsComputePixelLocation:r>=10.7&&c,supportsComputeAngles:r>=10.91,supportsQueryGPSInfo:r>=11.2&&c,supportsAdd:o,supportsDelete:o,supportsEditing:o,supportsUpdate:o,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:i,maxRecordCountFactor:void 0,maxUniqueIDCount:void 0,supportsStatistics:!!y?.supportsStatistics,supportsOrderBy:!!y?.supportsOrderBy,supportsDistinct:!!y?.supportsDistinct,supportsPagination:!!y?.supportsPagination,supportsPaginationOnAggregatedQueries:!!y?.supportsPaginationOnAggregatedQueries,supportsStandardizedQueriesOnly:!!y?.useStandardizedQueries,supportsPercentileStatistics:!!y?.supportsPercentileStatistics,supportsCentroid:!!y?.supportsReturningGeometryCentroid,supportsCurrentUser:!1,supportsDistance:!!y?.supportsQueryWithDistance,supportsExtent:!!y?.supportsReturningQueryExtent,supportsGeometryProperties:!!y?.supportsReturningGeometryProperties,supportsHavingClause:!!y?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:y?.supportsSqlExpression??!!y,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!y?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:p,supportsAreaAndPerimeter:p,supportsPointOrCentroid:p,supportsHeightFromBaseAndTop:l&&u.includes("base-top height"),supportsHeightFromBaseAndTopShadow:l&&u.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:l&&u.includes("top-top shadow height"),supports3D:l&&u.includes("3d")}}}};function s(e){return e?.path??""}return(0,i._)([(0,p.MZ)({clonable:!1})],r.prototype,"_functionRasterInfos",void 0),(0,i._)([(0,p.MZ)({readOnly:!0})],r.prototype,"_serviceSupportsMosaicRule",void 0),(0,i._)([(0,R.r)("_serviceSupportsMosaicRule",["currentVersion","fields"])],r.prototype,"readServiceSupportsMosaicRule",null),(0,i._)([(0,p.MZ)({readOnly:!0})],r.prototype,"_rasterFunctionNamesIndex",null),(0,i._)([(0,p.MZ)()],r.prototype,"adjustAspectRatio",void 0),(0,i._)([(0,p.MZ)({type:[b.I],json:{write:!0}})],r.prototype,"bandIds",void 0),(0,i._)([(0,R.r)("bandIds")],r.prototype,"readBandIds",null),(0,i._)([(0,p.MZ)({readOnly:!0,json:{read:!1}})],r.prototype,"capabilities",void 0),(0,i._)([(0,R.r)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],r.prototype,"readCapabilities",null),(0,i._)([(0,p.MZ)({type:Number})],r.prototype,"compressionQuality",void 0),(0,i._)([(0,d.w)("compressionQuality")],r.prototype,"writeCompressionQuality",null),(0,i._)([(0,p.MZ)({type:Number})],r.prototype,"compressionTolerance",void 0),(0,i._)([(0,d.w)("compressionTolerance")],r.prototype,"writeCompressionTolerance",null),(0,i._)([(0,p.MZ)({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),(0,i._)([(0,p.MZ)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],r.prototype,"defaultMosaicRule",void 0),(0,i._)([(0,R.r)("defaultMosaicRule",["defaultMosaicMethod"])],r.prototype,"readDefaultMosaicRule",null),(0,i._)([(0,p.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],r.prototype,"definitionExpression",void 0),(0,i._)([(0,p.MZ)({readOnly:!0,constructOnly:!0})],r.prototype,"exportImageServiceParameters",void 0),(0,i._)([(0,p.MZ)()],r.prototype,"rasterInfo",void 0),(0,i._)([(0,p.MZ)({readOnly:!0,type:[Z.A]})],r.prototype,"fields",void 0),(0,i._)([(0,p.MZ)({readOnly:!0})],r.prototype,"fieldsIndex",null),(0,i._)([(0,p.MZ)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],r.prototype,"format",null),(0,i._)([(0,R.r)("service","format",["serviceDataType"])],r.prototype,"readFormat",null),(0,i._)([(0,p.MZ)({type:v.A})],r.prototype,"fullExtent",void 0),(0,i._)([(0,p.MZ)({readOnly:!0})],r.prototype,"hasMultidimensions",void 0),(0,i._)([(0,p.MZ)({json:{read:{source:"maxImageHeight"}}})],r.prototype,"imageMaxHeight",void 0),(0,i._)([(0,p.MZ)({json:{read:{source:"maxImageWidth"}}})],r.prototype,"imageMaxWidth",void 0),(0,i._)([(0,p.MZ)({type:String,json:{type:C.i.jsonValues,read:C.i.read,write:C.i.write}})],r.prototype,"interpolation",void 0),(0,i._)([(0,p.MZ)()],r.prototype,"minScale",void 0),(0,i._)([(0,R.r)("service","minScale")],r.prototype,"readMinScale",null),(0,i._)([(0,p.MZ)()],r.prototype,"maxScale",void 0),(0,i._)([(0,R.r)("service","maxScale")],r.prototype,"readMaxScale",null),(0,i._)([(0,p.MZ)({type:j.A})],r.prototype,"mosaicRule",null),(0,i._)([(0,R.r)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],r.prototype,"readMosaicRule",null),(0,i._)([(0,d.w)("mosaicRule")],r.prototype,"writeMosaicRule",null),(0,i._)([(0,p.MZ)()],r.prototype,"multidimensionalInfo",void 0),(0,i._)([(0,p.MZ)({type:E.A,json:{write:!0}})],r.prototype,"multidimensionalSubset",void 0),(0,i._)([(0,p.MZ)({json:{type:b.I}})],r.prototype,"noData",void 0),(0,i._)([(0,d.w)("noData")],r.prototype,"writeNoData",null),(0,i._)([(0,p.MZ)({type:String,json:{type:C.n.jsonValues,read:C.n.read,write:C.n.write}})],r.prototype,"noDataInterpretation",void 0),(0,i._)([(0,p.MZ)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],r.prototype,"objectIdField",void 0),(0,i._)([(0,R.r)("objectIdField")],r.prototype,"readObjectIdField",null),(0,i._)([(0,p.MZ)({readOnly:!0})],r.prototype,"geometryType",void 0),(0,i._)([(0,p.MZ)({})],r.prototype,"typeIdField",void 0),(0,i._)([(0,p.MZ)({})],r.prototype,"types",void 0),(0,i._)([(0,p.MZ)({readOnly:!0})],r.prototype,"parsedUrl",null),(0,i._)([(0,p.MZ)({type:Function})],r.prototype,"pixelFilter",void 0),(0,i._)([(0,p.MZ)()],r.prototype,"raster",void 0),(0,i._)([(0,p.MZ)({readOnly:!0})],r.prototype,"sourceType",void 0),(0,i._)([(0,R.r)("sourceType",["serviceSourceType","fields"])],r.prototype,"readSourceType",null),(0,i._)([(0,p.MZ)()],r.prototype,"viewId",void 0),(0,i._)([(0,p.MZ)()],r.prototype,"renderer",null),(0,i._)([(0,p.MZ)({types:$.r,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:$.w,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],r.prototype,"internalRenderer",null),(0,i._)([(0,R.r)("internalRenderer")],r.prototype,"readRenderer",null),(0,i._)([(0,d.w)("internalRenderer")],r.prototype,"writeRenderer",null),(0,i._)([(0,p.MZ)({clonable:!1})],r.prototype,"symbolizer",void 0),(0,i._)([(0,p.MZ)(M.o)],r.prototype,"opacity",void 0),(0,i._)([(0,p.MZ)({readOnly:!0})],r.prototype,"rasterFields",null),(0,i._)([(0,p.MZ)({constructOnly:!0})],r.prototype,"rasterFunctionInfos",void 0),(0,i._)([(0,p.MZ)({type:A.A,json:{name:"renderingRule"}})],r.prototype,"rasterFunction",null),(0,i._)([(0,R.r)("rasterFunction",["renderingRule","rasterFunctionInfos"])],r.prototype,"readRasterFunction",null),(0,i._)([(0,p.MZ)({readOnly:!0})],r.prototype,"serviceDataType",void 0),(0,i._)([(0,p.MZ)({readOnly:!0,type:S.A})],r.prototype,"spatialReference",void 0),(0,i._)([(0,R.r)("spatialReference",["spatialReference","extent"])],r.prototype,"readSpatialReference",null),(0,i._)([(0,p.MZ)({type:C.p.apiValues,json:{read:C.p.read,type:C.p.jsonValues}})],r.prototype,"pixelType",void 0),(0,i._)([(0,d.w)("pixelType")],r.prototype,"writePixelType",null),(0,i._)([(0,p.MZ)({constructOnly:!0,type:J.A})],r.prototype,"serviceRasterInfo",void 0),(0,i._)([(0,p.MZ)()],r.prototype,"sourceJSON",void 0),(0,i._)([(0,p.MZ)(M.u)],r.prototype,"url",void 0),(0,i._)([(0,p.MZ)({readOnly:!0})],r.prototype,"version",void 0),(0,i._)([(0,R.r)("version",["currentVersion","fields","timeInfo"])],r.prototype,"readVersion",null),r=(0,i._)([(0,m.$)("esri.layers.mixins.ArcGISImageService")],r),r};var kt=r(8368),Gt=r(31315),Jt=r(4335),Lt=r(88730),Ut=r(38424),Bt=r(81089),zt=r(24133),$t=r(46935),Qt=r(96807),Ht=r(69448),Wt=r(59955),Yt=r(2026),Kt=r(20978);r(43059),r(89935),r(49813),r(82454),r(88321),r(47387),r(46728),r(21632),r(11494),r(6801),r(41003),r(9380),r(55270),r(95779),r(13262),r(346),r(14141),r(74181),r(35619),r(31175);let Xt=class extends((0,Gt.dM)((0,Ht.e)((0,Qt.j)((0,Lt.q)((0,Ut.A)((0,zt.H)(Et((0,Bt.R)((0,$t.J)((0,Jt.d)((0,kt.A)((0,l.M)((0,n.O)(h.A)))))))))))))){constructor(...e){super(...e),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=(0,u.sg)(async(e,t,i)=>{const{save:s,saveAs:n}=await r.e(2743).then(r.bind(r,42743));switch(e){case 0:return s(this,t);case 1:return n(this,i,t)}})}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(u.QP).then(()=>this._fetchService(t))),Promise.resolve(this)}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,t,r){const i="vector-field"===this.renderer?.type;t[r]=i?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){const{rasterFields:t}=this,r=new Set,i=G.c.itemPixelValue.toLowerCase(),s="raster-dataset"===this.sourceType,n=G.r.toLowerCase(),a=`${G.c.servicePixelValue.toLowerCase()}.`;for(const e of t){const t=e.name.toLowerCase();t===i||t.startsWith(a)||s&&t.startsWith(n)||r.add(e.name)}const o=(0,Kt.tn)({fields:t,title:this.title},{...e,visibleFieldNames:r}),{rasterInfo:l}=this;return o?.fieldInfos&&l&&(0,G.s)(o.fieldInfos,l),o}queryFeatures(e,t){return this.queryRasters(e,t).then(e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e})}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(0,e)}async saveAs(e,t){return this._debouncedSaveOperations(1,t,e)}serviceSupportsSpatialReference(e){return(0,Wt.s)(this,e)}write(e,t){if(!this._isPreviewLayer)return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a.A("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}_validateElevationInfo(){const e=this.elevationInfo;(0,Yt.l)(o.L.getLogger(this),(0,Yt.a)("Imagery layers","relative-to-scene",e)),(0,Yt.l)(o.L.getLogger(this),(0,Yt.f)("Imagery layers",e))}};(0,i._)([(0,p.MZ)({type:Rt.A,value:null,json:{read:!1}})],Xt.prototype,"elevationInfo",null),(0,i._)([(0,p.MZ)(M.a)],Xt.prototype,"legendEnabled",null),(0,i._)([(0,p.MZ)({type:["show","hide"]})],Xt.prototype,"listMode",null),(0,i._)([(0,p.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Xt.prototype,"isReference",void 0),(0,i._)([(0,p.MZ)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Xt.prototype,"operationalLayerType",void 0),(0,i._)([(0,d.w)("web-map","operationalLayerType")],Xt.prototype,"writeOperationalLayerType",null),(0,i._)([(0,p.MZ)(M.p)],Xt.prototype,"popupEnabled",void 0),(0,i._)([(0,p.MZ)({type:s.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Xt.prototype,"popupTemplate",void 0),(0,i._)([(0,p.MZ)({readOnly:!0})],Xt.prototype,"defaultPopupTemplate",null),(0,i._)([(0,p.MZ)({readOnly:!0,json:{read:!1}})],Xt.prototype,"type",void 0),(0,i._)([(0,p.MZ)({readOnly:!0})],Xt.prototype,"_isPreviewLayer",null),Xt=(0,i._)([(0,m.$)("esri.layers.ImageryLayer")],Xt);const er=Xt},96153:(e,t,r)=>{r.d(t,{O:()=>s});var i=r(33489);class s{constructor(e=[],t=[]){this.lengths=e??[],this.coords=t??[]}static fromJSON(e){return new s(e.lengths,e.coords)}static fromRect(e){const[t,r,i,n]=e,a=i-t,o=n-r;return new s([5],[t,r,a,0,0,o,-a,0,0,-o])}get isPoint(){return 0===this.lengths.length&&this.coords.length>=2}get maxLength(){return Math.max(...this.lengths)}get size(){return this.lengths.reduce((e,t)=>e+t)}get usedMemory(){return 64+(0,i.e)(this.lengths,this.coords)}area(){let e=0,t=0;if(!this.lengths.length)return 0;for(let r=0;r<this.lengths.length;r++){const i=this.lengths[r];if(i<3)continue;let s=this.coords[2*t],n=this.coords[2*t+1];for(let r=1;r<i;r+=1){const i=this.coords[2*(r+t)],a=this.coords[2*(r+t)+1];e+=-.5*(i-s)*(a+n),s=i,n=a}t+=i}return e}forEachVertex(e){let t=0;this.lengths.length||e(this.coords[0],this.coords[1]);for(let r=0;r<this.lengths.length;r++){const i=this.lengths[r];for(let r=0;r<i;r++)e(this.coords[2*(r+t)],this.coords[2*(r+t)+1]);t+=i}}deltaDecode(){const e=this.clone(),{coords:t,lengths:r}=e;let i=0;for(const e of r){for(let r=1;r<e;r++)t[2*(i+r)]+=t[2*(i+r)-2],t[2*(i+r)+1]+=t[2*(i+r)-1];i+=e}return e}clone(e){if(0===this.lengths.length)return new s([],[this.coords[0],this.coords[1]]);const t=2*(0===this.lengths.length?1:this.lengths.reduce((e,t)=>e+t)),r=this.coords.slice(0,t);return e?(e.set(r),new s(this.lengths,e)):new s(Array.from(this.lengths),Array.from(r))}}}}]);