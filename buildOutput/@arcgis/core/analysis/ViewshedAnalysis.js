/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import t from"./Analysis.js";import e from"./Viewshed.js";import{e as r}from"../core/lang.js";import o from"../core/Collection.js";import{r as i,c as n}from"../chunks/collectionUtils.js";import{c as p}from"../chunks/Cyclical.js";import{e as c,c as m}from"../chunks/mathUtils.js";import{watch as u,syncAndInitial as l}from"../core/reactiveUtils.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import"../chunks/Logger.js";import{subclass as h}from"../core/accessorSupport/decorators/subclass.js";import j from"../geometry/Extent.js";import{projectOrLoadMany as k}from"../chunks/projectionUtils.js";import"./support/AnalysisOriginWebScene.js";import"../core/Clonable.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/Lifecycle.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/promiseUtils.js";import"../core/Error.js";import"../chunks/object.js";import"../chunks/events.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/ensureType.js";import"../chunks/MapUtils.js";import"../config.js";import"../chunks/string.js";import"../chunks/Warning.js";import"../core/Identifiable.js";import"../core/JSONSupport.js";import"../chunks/featureReferenceUtils.js";import"../chunks/vec3.js";import"../chunks/vec3f64.js";import"../chunks/common.js";import"../chunks/ray.js";import"../chunks/mat3.js";import"../chunks/mat3f64.js";import"../chunks/vector.js";import"../chunks/mat4f64.js";import"../chunks/quatf64.js";import"../chunks/vec2f64.js";import"../chunks/vec4f64.js";import"../chunks/intersectorUtilsConversions.js";import"../chunks/mat4.js";import"../chunks/aaBoundingBox.js";import"../chunks/aaBoundingRect.js";import"../chunks/DoubleArray.js";import"../chunks/sphere.js";import"../chunks/vec4.js";import"../chunks/HUDIntersectorResult.js";import"../chunks/Intersector.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Point.js";import"../chunks/reader.js";import"../chunks/writer.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../chunks/pe.js";import"../chunks/assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../chunks/jsonUtils.js";import"../chunks/persistableUrlUtils.js";import"../geometry/support/webMercatorUtils.js";import"../core/Evented.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/coordsUtils.js";import"../chunks/extentUtils.js";import"../chunks/boundsUtils.js";import"../geometry/Polyline.js";import"../chunks/projectBuffer.js";import"../chunks/geodesicConstants.js";import"../chunks/projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"../chunks/zscale.js";const d=o.ofType(e);let f=class extends t{constructor(s){super(s),this.type="viewshed",this._extent=null}initialize(){this.addHandles(u(()=>this._computeExtent(),s=>{null==s.pending&&(this._extent=s.extent)},l))}get viewsheds(){return this._get("viewsheds")||new d}set viewsheds(s){this._set("viewsheds",i(s,this.viewsheds,d))}get spatialReference(){for(const s of this.viewsheds)if(null!=s.observer)return s.observer.spatialReference;return null}get extent(){return this._extent}get valid(){return this.viewsheds.every(s=>s.valid)}async waitComputeExtent(){const s=this._computeExtent();null!=s.pending&&await s.pending}_computeExtent(){const{spatialReference:s}=this;if(null==s)return{pending:null,extent:null};const t=this.viewsheds.filter(s=>null!=s.observer),e=t.map(s=>s.observer).toArray(),r=k(e,s);return null!=r.pending?{pending:r.pending,extent:null}:{pending:null,extent:r.geometries.map((s,e)=>{const r=t.at(e);return null!=s&&null!=r?this._computeViewshedExtent(this.viewsheds.at(e),s):null}).filter(s=>null!=s).reduce((s,t)=>{return r=t,null==(e=s)?r:null==r?e:e.union(r);var e,r},null)}}_computeViewshedExtent(s,t){const{farDistance:e,heading:r,tilt:o,horizontalFieldOfView:i,verticalFieldOfView:n}=s,{spatialReference:u}=t,l=i/2,a=n/2,h=e/u.metersPerUnit,k=[p.normalize(r-l),r,p.normalize(r+l)],d=j.fromPoint(t),f=s=>{const t=k.map(t=>p.normalize(t-s));if(t[0]>t[2]||360===i)return h;const e=t.map(s=>Math.abs(s>180?360-s:s)).reduce((s,t)=>s>t?t:s);return e>90?0:h*Math.cos(c(e))};d.xmax+=f(90),d.xmin-=f(-90),d.ymax+=f(0),d.ymin-=f(180);const v=t.z;if(null!=v){let s=v,t=v;const r=o-90,i=m(r+a,-90,90),n=m(r-a,-90,90),p=u?.isGeographic?e:h;s+=p*g(i),t+=p*g(n);const c=y(a)*p,j=g(r)*c*(1-y(l));o<90&&(s-=j),o>90&&(t-=j),d.zmax=Math.max(s,v),d.zmin=Math.min(t,v)}return d}equals(s){return this===s||super.equals(s)&&r(this.viewsheds.toArray(),s.viewsheds.toArray(),(s,t)=>s.equals(t))}clear(){this.viewsheds.removeAll()}};function y(s){return Math.cos(c(s))}function g(s){return Math.sin(c(s))}s([a({type:["viewshed"]})],f.prototype,"type",void 0),s([a({cast:n,type:d,nonNullable:!0})],f.prototype,"viewsheds",null),s([a({readOnly:!0})],f.prototype,"spatialReference",null),s([a()],f.prototype,"_extent",void 0),s([a()],f.prototype,"extent",null),s([a({readOnly:!0})],f.prototype,"valid",null),f=s([h("esri.analysis.ViewshedAnalysis")],f);export{f as default};
