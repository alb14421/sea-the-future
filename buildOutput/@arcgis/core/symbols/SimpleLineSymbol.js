/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import{J as r}from"../chunks/jsonMap.js";import{clone as o}from"../core/lang.js";import{t}from"../chunks/screenUtils.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"../chunks/Logger.js";import{e}from"../chunks/enumeration.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import p from"./LineSymbol.js";import m from"./LineSymbolMarker.js";import"../chunks/object.js";import"../chunks/ensureType.js";import"../chunks/MapUtils.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../core/Error.js";import"../config.js";import"../chunks/string.js";import"../chunks/Lifecycle.js";import"../chunks/tracking.js";import"../chunks/Warning.js";import"./Symbol.js";import"../Color.js";import"../chunks/colorUtils.js";import"../chunks/mathUtils.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/promiseUtils.js";import"../chunks/events.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/reader.js";import"../chunks/writer.js";import"../chunks/lineMarkers.js";var h;const l=new r({esriSLSSolid:"solid",esriSLSDash:"dash",esriSLSDot:"dot",esriSLSDashDot:"dash-dot",esriSLSDashDotDot:"long-dash-dot-dot",esriSLSNull:"none",esriSLSShortDash:"short-dash",esriSLSShortDot:"short-dot",esriSLSShortDashDot:"short-dash-dot",esriSLSShortDashDotDot:"short-dash-dot-dot",esriSLSLongDash:"long-dash",esriSLSLongDashDot:"long-dash-dot"});let a=h=class extends p{constructor(...s){super(...s),this.type="simple-line",this.style="solid",this.cap="round",this.join="round",this.marker=null,this.miterLimit=2}normalizeCtorArgs(s,r,o,i,e,n){if(s&&"string"!=typeof s)return s;const p={};return null!=s&&(p.style=s),null!=r&&(p.color=r),null!=o&&(p.width=t(o)),null!=i&&(p.cap=i),null!=e&&(p.join=e),null!=n&&(p.miterLimit=t(n)),p}clone(){return new h({color:o(this.color),style:this.style,width:this.width,cap:this.cap,join:this.join,miterLimit:this.miterLimit,marker:this.marker?.clone()})}hash(){return`${super.hash()}.${this.color?.hash()}.${this.style}.${this.cap}.${this.join}.${this.miterLimit}.${this.marker?.hash()}`}};s([e({esriSLS:"simple-line"},{readOnly:!0})],a.prototype,"type",void 0),s([i({type:l.apiValues,json:{read:l.read,write:l.write}})],a.prototype,"style",void 0),s([i({type:["butt","round","square"],json:{write:{overridePolicy:(s,r,o)=>({enabled:"round"!==s&&null==o?.origin})}}})],a.prototype,"cap",void 0),s([i({type:["miter","round","bevel"],json:{write:{overridePolicy:(s,r,o)=>({enabled:"round"!==s&&null==o?.origin})}}})],a.prototype,"join",void 0),s([i({types:{key:"type",base:null,defaultKeyValue:"line-marker",typeMap:{"line-marker":m}},json:{write:!0,origins:{"web-scene":{write:!1}}}})],a.prototype,"marker",void 0),s([i({type:Number,json:{read:!1,write:!1}})],a.prototype,"miterLimit",void 0),a=h=s([n("esri.symbols.SimpleLineSymbol")],a);export{a as default};
