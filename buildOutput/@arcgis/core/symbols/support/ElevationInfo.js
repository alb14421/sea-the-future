/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{ClonableMixin as s}from"../../core/Clonable.js";import{s as r,J as t}from"../../chunks/jsonMap.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{e as i}from"../../chunks/maybe.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{r as p}from"../../chunks/reader.js";import{subclass as u}from"../../core/accessorSupport/decorators/subclass.js";import{w as m}from"../../chunks/writer.js";import a from"./FeatureExpressionInfo.js";import{s as l}from"../../chunks/unitConversionUtils.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/object.js";import"../../chunks/events.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/Warning.js";import"../../layers/support/fieldUtils.js";import"../../core/sql.js";import"../../chunks/guards.js";import"../../chunks/datetime.js";import"../../chunks/lengthUtils.js";import"../../chunks/unitUtils.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/jsonUtils.js";import"../../chunks/persistableUrlUtils.js";const c=r()({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",relativeToScene:"relative-to-scene",absoluteHeight:"absolute-height"}),f=new t({foot:"feet",kilometer:"kilometers",meter:"meters",mile:"miles","us-foot":"us-feet",yard:"yards"});let j=class extends(s(o)){constructor(e){super(e),this.featureExpressionInfo=void 0,this.offset=null}readFeatureExpressionInfo(e,s){return null!=e?e.expression?e:void 0:s.featureExpression&&0===s.featureExpression.value?{expression:"0"}:void 0}writeFeatureExpressionInfo(e,s,r,t){s[r]=e.write({},t),"0"===e.expression&&(s.featureExpression={value:0})}get mode(){const{offset:e,featureExpressionInfo:s}=this;return this._isOverridden("mode")?this._get("mode"):null!=e||s?"relative-to-ground":"on-the-ground"}set mode(e){this._override("mode",e)}set unit(e){this._set("unit",e)}write(e,s){return this.offset||this.mode||this.featureExpressionInfo||this.unit?super.write(e,s):null}equals(e){return this.mode===e.mode&&this.offset===e.offset&&this.unit===e.unit&&i(this.featureExpressionInfo,e.featureExpressionInfo)}};e([n({type:a,json:{write:!0}})],j.prototype,"featureExpressionInfo",void 0),e([p("featureExpressionInfo",["featureExpressionInfo","featureExpression"])],j.prototype,"readFeatureExpressionInfo",null),e([m("featureExpressionInfo",{featureExpressionInfo:{type:a},"featureExpression.value":{type:[0]}})],j.prototype,"writeFeatureExpressionInfo",null),e([n({type:c.apiValues,nonNullable:!0,json:{type:c.jsonValues,read:c.read,write:{writer:c.write,isRequired:!0}}})],j.prototype,"mode",null),e([n({type:Number,json:{write:!0}})],j.prototype,"offset",void 0),e([n({type:l,json:{type:String,read:f.read,write:f.write}})],j.prototype,"unit",null),j=e([u("esri.symbols.support.ElevationInfo")],j);export{j as default};
