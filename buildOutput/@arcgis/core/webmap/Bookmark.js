/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import o from"../Viewpoint.js";import s from"../core/Error.js";import{IdentifiableMixin as e}from"../core/Identifiable.js";import{JSONSupport as r}from"../core/JSONSupport.js";import{clone as i}from"../core/lang.js";import{L as n}from"../chunks/Logger.js";import{property as p}from"../core/accessorSupport/decorators/property.js";import{cast as m}from"../core/accessorSupport/decorators/cast.js";import{r as c}from"../chunks/reader.js";import{subclass as u}from"../core/accessorSupport/decorators/subclass.js";import{w as a}from"../chunks/writer.js";import{e as l}from"../chunks/ensureType.js";import{S as j}from"../chunks/SlideThumbnail.js";import{t as h}from"../chunks/timeProperties.js";import"../Camera.js";import"../CameraLayout.js";import"../core/Clonable.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/Lifecycle.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/promiseUtils.js";import"../chunks/events.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/MapUtils.js";import"../chunks/object.js";import"../config.js";import"../chunks/string.js";import"../chunks/Warning.js";import"../chunks/Cyclical.js";import"../chunks/mathUtils.js";import"../geometry/Point.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../chunks/pe.js";import"../chunks/assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../chunks/jsonUtils.js";import"../chunks/persistableUrlUtils.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry/Extent.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/coordsUtils.js";import"../chunks/extentUtils.js";import"../chunks/boundsUtils.js";import"../chunks/aaBoundingRect.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../time/TimeExtent.js";import"../chunks/timeUtils.js";import"../chunks/date.js";import"../chunks/locale.js";import"../chunks/constants.js";import"../chunks/datetime.js";var k;let y=k=class extends(e(r)){constructor(t){super(t),this.name=null,this.thumbnail=new j,this.timeExtent=null}castThumbnail(t){return"string"==typeof t?new j({url:t}):l(j,t)}set viewpoint(t){const{targetGeometry:o,scale:s}=t;null!=o&&"point"===o.type&&null==s&&n.getLogger(this).warn("Bookmark.viewpoint should include 'scale' when its targetGeometry is a point.",t),this._set("viewpoint",t)}readViewpoint(t,s){const{extent:e,viewpoint:r}=s;return o.fromJSON(r||{targetGeometry:e})}writeViewpoint(t,o,e,r){if(!t)return;const{targetGeometry:i}=t;if(null!=i&&"extent"!==i.type){const t="Bookmark.viewpoint cannot be written to JSON when the viewpoint's targetGeometry is not an extent.";return void(r?.messages?r.messages.push(new s("property:unsupported",t)):n.getLogger(this).error(t))}null!=i&&(o.extent=i.toJSON()),o[e]=t.toJSON()}clone(){return new k(i({name:this.name,thumbnail:this.thumbnail,timeExtent:this.timeExtent,viewpoint:this.viewpoint}))}};t([p({type:String,nonNullable:!0,json:{write:{isRequired:!0}}})],y.prototype,"name",void 0),t([p({type:j,json:{write:{overridePolicy:t=>({enabled:!(!t||!t.url)})}}})],y.prototype,"thumbnail",void 0),t([m("thumbnail")],y.prototype,"castThumbnail",null),t([p(h)],y.prototype,"timeExtent",void 0),t([p({type:o,nonNullable:!0,json:{write:!0}})],y.prototype,"viewpoint",null),t([c("viewpoint",["extent","viewpoint"])],y.prototype,"readViewpoint",null),t([a("viewpoint")],y.prototype,"writeViewpoint",null),y=k=t([u("esri.webmap.Bookmark")],y);const g=y;export{g as default};
